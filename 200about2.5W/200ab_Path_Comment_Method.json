[{
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.PhaseContext.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.deleteIdentityPool",
	"Comment": "deletes a user pool. once a pool is deleted, users will not be able to authenticate with the pool.you must use aws developer credentials to call this api.",
	"Method": "DeleteIdentityPoolResult deleteIdentityPool(DeleteIdentityPoolRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteIdentityPool(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.JobDependency.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.AddTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateSchemaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchGetLinkAttributesResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeleteCloudFrontOriginAccessIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.DescribeEnvironmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentIds() != null)\r\n        sb.append(\"EnvironmentIds: \").append(getEnvironmentIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.Budget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getBudgetLimit() != null)\r\n        sb.append(\"BudgetLimit: \").append(getBudgetLimit()).append(\",\");\r\n    if (getCostFilters() != null)\r\n        sb.append(\"CostFilters: \").append(getCostFilters()).append(\",\");\r\n    if (getCostTypes() != null)\r\n        sb.append(\"CostTypes: \").append(getCostTypes()).append(\",\");\r\n    if (getTimeUnit() != null)\r\n        sb.append(\"TimeUnit: \").append(getTimeUnit()).append(\",\");\r\n    if (getTimePeriod() != null)\r\n        sb.append(\"TimePeriod: \").append(getTimePeriod()).append(\",\");\r\n    if (getCalculatedSpend() != null)\r\n        sb.append(\"CalculatedSpend: \").append(getCalculatedSpend()).append(\",\");\r\n    if (getBudgetType() != null)\r\n        sb.append(\"BudgetType: \").append(getBudgetType()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.RegisterJobDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobDefinitionName() != null)\r\n        sb.append(\"JobDefinitionName: \").append(getJobDefinitionName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getContainerProperties() != null)\r\n        sb.append(\"ContainerProperties: \").append(getContainerProperties()).append(\",\");\r\n    if (getNodeProperties() != null)\r\n        sb.append(\"NodeProperties: \").append(getNodeProperties()).append(\",\");\r\n    if (getRetryStrategy() != null)\r\n        sb.append(\"RetryStrategy: \").append(getRetryStrategy()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListDeploymentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeployments() != null)\r\n        sb.append(\"Deployments: \").append(getDeployments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ModifyLunaClientResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientArn() != null)\r\n        sb.append(\"ClientArn: \").append(getClientArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.AWSCloudHSMV2Client.deleteBackup",
	"Comment": "deletes a specified aws cloudhsm backup. a backup can be restored up to 7 days after the deletebackup request.for more information on restoring a backup, see restorebackup",
	"Method": "DeleteBackupResult deleteBackup(DeleteBackupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteBackup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CloudFrontOriginAccessIdentityConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.CloudWatchMetricConfig.getClientConfiguration",
	"Comment": "returns the client configuration used to connect toamazon cloudwatch.",
	"Method": "ClientConfiguration getClientConfiguration(){\r\n    return clientConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.AWSCloudHSMV2ClientBuilder.build",
	"Comment": "construct a synchronous implementation of awscloudhsmv2 using the current builder configuration.",
	"Method": "AWSCloudHSMV2 build(AwsSyncClientParams params){\r\n    return new AWSCloudHSMV2Client(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.putApprovalResult",
	"Comment": "provides the response to a manual approval request to aws codepipeline. valid responses include approved andrejected.",
	"Method": "PutApprovalResultResult putApprovalResult(PutApprovalResultRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutApprovalResult(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetCloudFrontOriginAccessIdentityConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStackSetOperationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSummaries() != null)\r\n        sb.append(\"Summaries: \").append(getSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeAccountLimitsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountLimits() != null)\r\n        sb.append(\"AccountLimits: \").append(getAccountLimits()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.GetMetricDataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricDataQueries() != null)\r\n        sb.append(\"MetricDataQueries: \").append(getMetricDataQueries()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getScanBy() != null)\r\n        sb.append(\"ScanBy: \").append(getScanBy()).append(\",\");\r\n    if (getMaxDatapoints() != null)\r\n        sb.append(\"MaxDatapoints: \").append(getMaxDatapoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CloudFrontOriginAccessIdentitySummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getS3CanonicalUserId() != null)\r\n        sb.append(\"S3CanonicalUserId: \").append(getS3CanonicalUserId()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdateFieldLevelEncryptionProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionProfile() != null)\r\n        sb.append(\"FieldLevelEncryptionProfile: \").append(getFieldLevelEncryptionProfile()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.UpdateProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ToolchainSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3() != null)\r\n        sb.append(\"S3: \").append(getS3());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetDeploymentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentInfo() != null)\r\n        sb.append(\"DeploymentInfo: \").append(getDeploymentInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RemoveTagsFromOnPremisesInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.CreateEnvironmentMembershipResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMembership() != null)\r\n        sb.append(\"Membership: \").append(getMembership());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.RemoveTagsFromResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DeleteBudgetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.UpdateAvailabilityOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DeleteClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetDirectoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectory() != null)\r\n        sb.append(\"Directory: \").append(getDirectory());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.LiteralArrayOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceFields() != null)\r\n        sb.append(\"SourceFields: \").append(getSourceFields()).append(\",\");\r\n    if (getFacetEnabled() != null)\r\n        sb.append(\"FacetEnabled: \").append(getFacetEnabled()).append(\",\");\r\n    if (getSearchEnabled() != null)\r\n        sb.append(\"SearchEnabled: \").append(getSearchEnabled()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.waiters.DescribeStacksFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeStacksResult apply(DescribeStacksRequest describeStacksRequest){\r\n    return client.describeStacks(describeStacksRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListDistributionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistributionList() != null)\r\n        sb.append(\"DistributionList: \").append(getDistributionList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.RemoveUnusedShapes.addShapeAndMembers",
	"Comment": "adds the shape. recursively adds the shapes represented by its members.",
	"Method": "void addShapeAndMembers(String shapeName,Map<String, ShapeModel> in,Map<String, ShapeModel> out){\r\n    if (shapeName == null)\r\n        return;\r\n    final ShapeModel shape = in.get(shapeName);\r\n    if (shape == null)\r\n        return;\r\n    if (!out.containsKey(shapeName)) {\r\n        out.put(shapeName, in.get(shapeName));\r\n        List<MemberModel> members = shape.getMembers();\r\n        if (members != null) {\r\n            for (MemberModel member : members) {\r\n                List<String> memberShapes = resolveMemberShapes(member);\r\n                if (memberShapes == null)\r\n                    continue;\r\n                for (String memberShape : memberShapes) {\r\n                    addShapeAndMembers(memberShape, in, out);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.StartLoggingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.Diagnostics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getScriptName() != null)\r\n        sb.append(\"ScriptName: \").append(getScriptName()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getLogTail() != null)\r\n        sb.append(\"LogTail: \").append(getLogTail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.RetryStageExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineExecutionId() != null)\r\n        sb.append(\"PipelineExecutionId: \").append(getPipelineExecutionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdateDistributionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistributionConfig() != null)\r\n        sb.append(\"DistributionConfig: \").append(getDistributionConfig()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DashboardEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDashboardName() != null)\r\n        sb.append(\"DashboardName: \").append(getDashboardName()).append(\",\");\r\n    if (getDashboardArn() != null)\r\n        sb.append(\"DashboardArn: \").append(getDashboardArn()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.MergeDeveloperIdentitiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CookieNames.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeleteCloudFrontOriginAccessIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchAsyncClient.describeDomainsAsync",
	"Comment": "simplified method form for invoking the describedomains operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDomainsResult> describeDomainsAsync(DescribeDomainsRequest request,java.util.concurrent.Future<DescribeDomainsResult> describeDomainsAsync,DescribeDomainsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDomainsRequest, DescribeDomainsResult> asyncHandler,java.util.concurrent.Future<DescribeDomainsResult> describeDomainsAsync,java.util.concurrent.Future<DescribeDomainsResult> describeDomainsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDomainsRequest, DescribeDomainsResult> asyncHandler){\r\n    return describeDomainsAsync(new DescribeDomainsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListManagedSchemaArnsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreatePublicKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKey() != null)\r\n        sb.append(\"PublicKey: \").append(getPublicKey()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchReadOperationResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccessfulResponse() != null)\r\n        sb.append(\"SuccessfulResponse: \").append(getSuccessfulResponse()).append(\",\");\r\n    if (getExceptionResponse() != null)\r\n        sb.append(\"ExceptionResponse: \").append(getExceptionResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AbstractAWSCloudTrailAsync.lookupEventsAsync",
	"Comment": "simplified method form for invoking the lookupevents operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<LookupEventsResult> lookupEventsAsync(LookupEventsRequest request,java.util.concurrent.Future<LookupEventsResult> lookupEventsAsync,LookupEventsRequest request,com.amazonaws.handlers.AsyncHandler<LookupEventsRequest, LookupEventsResult> asyncHandler,java.util.concurrent.Future<LookupEventsResult> lookupEventsAsync,java.util.concurrent.Future<LookupEventsResult> lookupEventsAsync,com.amazonaws.handlers.AsyncHandler<LookupEventsRequest, LookupEventsResult> asyncHandler){\r\n    return lookupEventsAsync(new LookupEventsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.LoadBalancerInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElbInfoList() != null)\r\n        sb.append(\"ElbInfoList: \").append(getElbInfoList()).append(\",\");\r\n    if (getTargetGroupInfoList() != null)\r\n        sb.append(\"TargetGroupInfoList: \").append(getTargetGroupInfoList()).append(\",\");\r\n    if (getTargetGroupPairInfoList() != null)\r\n        sb.append(\"TargetGroupPairInfoList: \").append(getTargetGroupPairInfoList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.RetryStrategy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttempts() != null)\r\n        sb.append(\"Attempts: \").append(getAttempts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.DeleteEnvironmentMembershipResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AbstractAmazonCloudFormationAsync.describeStacksAsync",
	"Comment": "simplified method form for invoking the describestacks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeStacksResult> describeStacksAsync(DescribeStacksRequest request,java.util.concurrent.Future<DescribeStacksResult> describeStacksAsync,DescribeStacksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeStacksRequest, DescribeStacksResult> asyncHandler,java.util.concurrent.Future<DescribeStacksResult> describeStacksAsync,java.util.concurrent.Future<DescribeStacksResult> describeStacksAsync,com.amazonaws.handlers.AsyncHandler<DescribeStacksRequest, DescribeStacksResult> asyncHandler){\r\n    return describeStacksAsync(new DescribeStacksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.PolicyToPath.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DescribeBudgetPerformanceHistoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getTimePeriod() != null)\r\n        sb.append(\"TimePeriod: \").append(getTimePeriod()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateCloudFrontOriginAccessIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudFrontOriginAccessIdentityConfig() != null)\r\n        sb.append(\"CloudFrontOriginAccessIdentityConfig: \").append(getCloudFrontOriginAccessIdentityConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.Notification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotificationType() != null)\r\n        sb.append(\"NotificationType: \").append(getNotificationType()).append(\",\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getThreshold() != null)\r\n        sb.append(\"Threshold: \").append(getThreshold()).append(\",\");\r\n    if (getThresholdType() != null)\r\n        sb.append(\"ThresholdType: \").append(getThresholdType()).append(\",\");\r\n    if (getNotificationState() != null)\r\n        sb.append(\"NotificationState: \").append(getNotificationState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutApprovalResultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getStageName() != null)\r\n        sb.append(\"StageName: \").append(getStageName()).append(\",\");\r\n    if (getActionName() != null)\r\n        sb.append(\"ActionName: \").append(getActionName()).append(\",\");\r\n    if (getResult() != null)\r\n        sb.append(\"Result: \").append(getResult()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarClient.deleteUserProfile",
	"Comment": "deletes a user profile in aws codestar, including all personal preference data associated with that profile, suchas display name and email address. it does not delete the history of that user, for example the history ofcommits made by that user.",
	"Method": "DeleteUserProfileResult deleteUserProfile(DeleteUserProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteUserProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.MessageData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.CancelUpdateStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListTypedLinkFacetNamesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.updateTypedLinkFacet",
	"Comment": "updates a typedlinkfacet. for more information, see typed links.",
	"Method": "UpdateTypedLinkFacetResult updateTypedLinkFacet(UpdateTypedLinkFacetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateTypedLinkFacet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.createStack",
	"Comment": "creates a stack as specified in the template. after the call completes successfully, the stack creation starts.you can check the status of the stack via the describestacks api.",
	"Method": "CreateStackResult createStack(CreateStackRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateStack(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.Hsm.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getEniId() != null)\r\n        sb.append(\"EniId: \").append(getEniId()).append(\",\");\r\n    if (getEniIp() != null)\r\n        sb.append(\"EniIp: \").append(getEniIp()).append(\",\");\r\n    if (getHsmId() != null)\r\n        sb.append(\"HsmId: \").append(getHsmId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateMessage() != null)\r\n        sb.append(\"StateMessage: \").append(getStateMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ListHapgsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHapgList() != null)\r\n        sb.append(\"HapgList: \").append(getHapgList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ParameterConstraints.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowedValues() != null)\r\n        sb.append(\"AllowedValues: \").append(getAllowedValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListPolicyAttachmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getPolicyReference() != null)\r\n        sb.append(\"PolicyReference: \").append(getPolicyReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.getTemplate",
	"Comment": "returns the template body for a specified stack. you can get the template for running or deleted stacks.for deleted stacks, gettemplate returns the template for up to 90 days after the stack has been deleted.if the template does not exist, a validationerror is returned.",
	"Method": "GetTemplateResult getTemplate(GetTemplateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTemplate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ListProjectsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getProjects() != null)\r\n        sb.append(\"Projects: \").append(getProjects());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ListWebhooksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebhooks() != null)\r\n        sb.append(\"Webhooks: \").append(getWebhooks()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.CreateWebhookResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebhook() != null)\r\n        sb.append(\"Webhook: \").append(getWebhook());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AWSCloudTrailClientBuilder.build",
	"Comment": "construct a synchronous implementation of awscloudtrail using the current builder configuration.",
	"Method": "AWSCloudTrail build(AwsSyncClientParams params){\r\n    return new AWSCloudTrailClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.StreamingDistributionSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getS3Origin() != null)\r\n        sb.append(\"S3Origin: \").append(getS3Origin()).append(\",\");\r\n    if (getAliases() != null)\r\n        sb.append(\"Aliases: \").append(getAliases()).append(\",\");\r\n    if (getTrustedSigners() != null)\r\n        sb.append(\"TrustedSigners: \").append(getTrustedSigners()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getPriceClass() != null)\r\n        sb.append(\"PriceClass: \").append(getPriceClass()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ApprovalResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSummary() != null)\r\n        sb.append(\"Summary: \").append(getSummary()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateSchemaResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListDeploymentTargetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetIds() != null)\r\n        sb.append(\"TargetIds: \").append(getTargetIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.Spend.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmount() != null)\r\n        sb.append(\"Amount: \").append(getAmount()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.TimeBasedLinear.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLinearPercentage() != null)\r\n        sb.append(\"LinearPercentage: \").append(getLinearPercentage()).append(\",\");\r\n    if (getLinearInterval() != null)\r\n        sb.append(\"LinearInterval: \").append(getLinearInterval());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getOpenIdToken",
	"Comment": "gets an openid token, using a known cognito id. this known cognito id is returned by getid. you canoptionally add additional logins for the identity. supplying multiple logins creates an implicit link.the openid token is valid for 15 minutes.this is a public api. you do not need any credentials to call this api.",
	"Method": "GetOpenIdTokenResult getOpenIdToken(GetOpenIdTokenRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetOpenIdToken(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.UpdateEnvironmentMembershipResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMembership() != null)\r\n        sb.append(\"Membership: \").append(getMembership());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DefineExpressionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getExpression() != null)\r\n        sb.append(\"Expression: \").append(getExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.deleteObject",
	"Comment": "deletes an object and its associated attributes. only objects with no children and no parents can be deleted. themaximum number of attributes that can be deleted during an object deletion is 30. for more information, see amazon cloud directorylimits.",
	"Method": "DeleteObjectResult deleteObject(DeleteObjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteObject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.listAvailableZones",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.lists the availability zones that have available aws cloudhsm capacity.",
	"Method": "ListAvailableZonesResult listAvailableZones(ListAvailableZonesRequest request,ListAvailableZonesResult listAvailableZones){\r\n    return listAvailableZones(new ListAvailableZonesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.SubModule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommitId() != null)\r\n        sb.append(\"CommitId: \").append(getCommitId()).append(\",\");\r\n    if (getAbsolutePath() != null)\r\n        sb.append(\"AbsolutePath: \").append(getAbsolutePath()).append(\",\");\r\n    if (getRelativePath() != null)\r\n        sb.append(\"RelativePath: \").append(getRelativePath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.UpdateEnvironmentMembershipRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getPermissions() != null)\r\n        sb.append(\"Permissions: \").append(getPermissions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.defineExpression",
	"Comment": "configures an expression for the search domain. used to create new expressions and modifyexisting ones. if the expression exists, the new configuration replaces the old one. for more information, see configuring expressions in the amazon cloudsearch developer guide.",
	"Method": "DefineExpressionResult defineExpression(DefineExpressionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDefineExpression(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttachToIndexResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedObjectIdentifier() != null)\r\n        sb.append(\"AttachedObjectIdentifier: \").append(getAttachedObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.GetOpenIdTokenRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId()).append(\",\");\r\n    if (getLogins() != null)\r\n        sb.append(\"Logins: \").append(getLogins());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.BatchGetProjectsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjects() != null)\r\n        sb.append(\"Projects: \").append(getProjects()).append(\",\");\r\n    if (getProjectsNotFound() != null)\r\n        sb.append(\"ProjectsNotFound: \").append(getProjectsNotFound());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ListUserProfilesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserProfiles() != null)\r\n        sb.append(\"UserProfiles: \").append(getUserProfiles()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.BlockingRequestBuilder.summarize",
	"Comment": "summarizes the given datum into the statistics of the respective unique metric.",
	"Method": "void summarize(MetricDatum datum,Map<String, MetricDatum> uniqueMetrics){\r\n    Double value = datum.getValue();\r\n    if (value == null) {\r\n        return;\r\n    }\r\n    List<Dimension> dims = datum.getDimensions();\r\n    Collections.sort(dims, DimensionComparator.INSTANCE);\r\n    String metricName = datum.getMetricName();\r\n    String key = metricName + Jackson.toJsonString(dims);\r\n    MetricDatum statDatum = uniqueMetrics.get(key);\r\n    if (statDatum == null) {\r\n        statDatum = new MetricDatum().withDimensions(datum.getDimensions()).withMetricName(metricName).withUnit(datum.getUnit()).withStatisticValues(new StatisticSet().withMaximum(value).withMinimum(value).withSampleCount(0.0).withSum(0.0));\r\n        uniqueMetrics.put(key, statDatum);\r\n    }\r\n    StatisticSet stat = statDatum.getStatisticValues();\r\n    stat.setSampleCount(stat.getSampleCount() + 1.0);\r\n    stat.setSum(stat.getSum() + value);\r\n    if (value > stat.getMaximum()) {\r\n        stat.setMaximum(value);\r\n    } else if (value < stat.getMinimum()) {\r\n        stat.setMinimum(value);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.EnvironmentLanguage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage()).append(\",\");\r\n    if (getImages() != null)\r\n        sb.append(\"Images: \").append(getImages());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ComputeResourceUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinvCpus() != null)\r\n        sb.append(\"MinvCpus: \").append(getMinvCpus()).append(\",\");\r\n    if (getMaxvCpus() != null)\r\n        sb.append(\"MaxvCpus: \").append(getMaxvCpus()).append(\",\");\r\n    if (getDesiredvCpus() != null)\r\n        sb.append(\"DesiredvCpus: \").append(getDesiredvCpus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.TargetInstances.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagFilters() != null)\r\n        sb.append(\"TagFilters: \").append(getTagFilters()).append(\",\");\r\n    if (getAutoScalingGroups() != null)\r\n        sb.append(\"AutoScalingGroups: \").append(getAutoScalingGroups()).append(\",\");\r\n    if (getEc2TagSet() != null)\r\n        sb.append(\"Ec2TagSet: \").append(getEc2TagSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.UpdateUserProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PullRequestMergedStateChangedEventMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getDestinationReference() != null)\r\n        sb.append(\"DestinationReference: \").append(getDestinationReference()).append(\",\");\r\n    if (getMergeMetadata() != null)\r\n        sb.append(\"MergeMetadata: \").append(getMergeMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListStreamingDistributionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClient.listBuilds",
	"Comment": "gets a list of build ids, with each build id representing a single build.",
	"Method": "ListBuildsResult listBuilds(ListBuildsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListBuilds(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.UpdateComputeEnvironmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComputeEnvironment() != null)\r\n        sb.append(\"ComputeEnvironment: \").append(getComputeEnvironment()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getComputeResources() != null)\r\n        sb.append(\"ComputeResources: \").append(getComputeResources()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.CreateDeploymentConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentConfigName() != null)\r\n        sb.append(\"DeploymentConfigName: \").append(getDeploymentConfigName()).append(\",\");\r\n    if (getMinimumHealthyHosts() != null)\r\n        sb.append(\"MinimumHealthyHosts: \").append(getMinimumHealthyHosts()).append(\",\");\r\n    if (getTrafficRoutingConfig() != null)\r\n        sb.append(\"TrafficRoutingConfig: \").append(getTrafficRoutingConfig()).append(\",\");\r\n    if (getComputePlatform() != null)\r\n        sb.append(\"ComputePlatform: \").append(getComputePlatform());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.CustomizedScalingMetricSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getStatistic() != null)\r\n        sb.append(\"Statistic: \").append(getStatistic()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ProjectCache.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.DeleteSourceCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.ListBranchesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBranches() != null)\r\n        sb.append(\"Branches: \").append(getBranches()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetStreamingDistributionConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetPullRequestRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DeleteStackSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackSetOperationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.attachPolicy",
	"Comment": "attaches a policy object to a regular object. an object can have a limited number of attached policies.",
	"Method": "AttachPolicyResult attachPolicy(AttachPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAttachPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListObjectParents.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.intermediate.VariableModel.getVariableSetterType",
	"Comment": "returns the java type used for the input parameter of a setter method.",
	"Method": "String getVariableSetterType(){\r\n    final String prefix = List.class.getName();\r\n    if (variableType.startsWith(prefix)) {\r\n        return Collection.class.getName() + variableType.substring(prefix.length());\r\n    } else {\r\n        return variableType;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.NetworkInterface.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ValidateTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getTemplateURL() != null)\r\n        sb.append(\"TemplateURL: \").append(getTemplateURL());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.BuildNotDeleted.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.PolicyAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier()).append(\",\");\r\n    if (getPolicyType() != null)\r\n        sb.append(\"PolicyType: \").append(getPolicyType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.createObject",
	"Comment": "creates an object in a directory. additionally attaches the object to a parent, if a parent reference andlinkname is specified. an object is simply a collection of facet attributes. you can also usethis api call to create a policy object, if the facet from which you create the object is a policy facet.",
	"Method": "CreateObjectResult createObject(CreateObjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateObject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.DeleteUserProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeExpressionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getExpressionNames() != null)\r\n        sb.append(\"ExpressionNames: \").append(getExpressionNames()).append(\",\");\r\n    if (getDeployed() != null)\r\n        sb.append(\"Deployed: \").append(getDeployed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DeleteDirectoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.Datapoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getSampleCount() != null)\r\n        sb.append(\"SampleCount: \").append(getSampleCount()).append(\",\");\r\n    if (getAverage() != null)\r\n        sb.append(\"Average: \").append(getAverage()).append(\",\");\r\n    if (getSum() != null)\r\n        sb.append(\"Sum: \").append(getSum()).append(\",\");\r\n    if (getMinimum() != null)\r\n        sb.append(\"Minimum: \").append(getMinimum()).append(\",\");\r\n    if (getMaximum() != null)\r\n        sb.append(\"Maximum: \").append(getMaximum()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit()).append(\",\");\r\n    if (getExtendedStatistics() != null)\r\n        sb.append(\"ExtendedStatistics: \").append(getExtendedStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awscodepipelineasync using the current builder configuration.",
	"Method": "AWSCodePipelineAsync build(AwsAsyncClientParams params){\r\n    return new AWSCodePipelineAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.upgradePublishedSchema",
	"Comment": "upgrades a published schema under a new minor version revision using the current contents ofdevelopmentschemaarn.",
	"Method": "UpgradePublishedSchemaResult upgradePublishedSchema(UpgradePublishedSchemaRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpgradePublishedSchema(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.TrafficRoute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArns() != null)\r\n        sb.append(\"ListenerArns: \").append(getListenerArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.deleteExpression",
	"Comment": "removes an expression from the search domain. for more information, see configuring expressions in the amazon cloudsearch developer guide.",
	"Method": "DeleteExpressionResult deleteExpression(DeleteExpressionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteExpression(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DeleteIndexFieldRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getIndexFieldName() != null)\r\n        sb.append(\"IndexFieldName: \").append(getIndexFieldName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ActiveTrustedSigners.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listObjectChildren",
	"Comment": "returns a paginated list of child objects that are associated with a given object.",
	"Method": "ListObjectChildrenResult listObjectChildren(ListObjectChildrenRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListObjectChildren(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetDifferencesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDifferences() != null)\r\n        sb.append(\"Differences: \").append(getDifferences()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ExecuteChangeSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.AddTagsToResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ListBuildsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetDeploymentGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentGroupsInfo() != null)\r\n        sb.append(\"DeploymentGroupsInfo: \").append(getDeploymentGroupsInfo()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DeleteHsmRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getHsmId() != null)\r\n        sb.append(\"HsmId: \").append(getHsmId()).append(\",\");\r\n    if (getEniId() != null)\r\n        sb.append(\"EniId: \").append(getEniId()).append(\",\");\r\n    if (getEniIp() != null)\r\n        sb.append(\"EniIp: \").append(getEniIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeleteFieldLevelEncryptionProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.AWSAutoScalingPlansClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.DescribeTrailsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrailNameList() != null)\r\n        sb.append(\"TrailNameList: \").append(getTrailNameList()).append(\",\");\r\n    if (getIncludeShadowTrails() != null)\r\n        sb.append(\"IncludeShadowTrails: \").append(getIncludeShadowTrails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetDistributionConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.ListMetricsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetrics() != null)\r\n        sb.append(\"Metrics: \").append(getMetrics()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.getComment",
	"Comment": "returns the content of a comment made on a change, file, or commit in a repository.",
	"Method": "GetCommentResult getComment(GetCommentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetComment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetApplicationRevisionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage()).append(\",\");\r\n    if (getRevisions() != null)\r\n        sb.append(\"Revisions: \").append(getRevisions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AWSCloudTrailAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListAttachedIndicesResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexAttachments() != null)\r\n        sb.append(\"IndexAttachments: \").append(getIndexAttachments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchAttachObjectResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedObjectIdentifier() != null)\r\n        sb.append(\"AttachedObjectIdentifier: \").append(getAttachedObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.CloudWatchLogsConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ListCuratedEnvironmentImagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatforms() != null)\r\n        sb.append(\"Platforms: \").append(getPlatforms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DisableDirectoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.CreateTrailResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getS3BucketName() != null)\r\n        sb.append(\"S3BucketName: \").append(getS3BucketName()).append(\",\");\r\n    if (getS3KeyPrefix() != null)\r\n        sb.append(\"S3KeyPrefix: \").append(getS3KeyPrefix()).append(\",\");\r\n    if (getSnsTopicName() != null)\r\n        sb.append(\"SnsTopicName: \").append(getSnsTopicName()).append(\",\");\r\n    if (getSnsTopicARN() != null)\r\n        sb.append(\"SnsTopicARN: \").append(getSnsTopicARN()).append(\",\");\r\n    if (getIncludeGlobalServiceEvents() != null)\r\n        sb.append(\"IncludeGlobalServiceEvents: \").append(getIncludeGlobalServiceEvents()).append(\",\");\r\n    if (getIsMultiRegionTrail() != null)\r\n        sb.append(\"IsMultiRegionTrail: \").append(getIsMultiRegionTrail()).append(\",\");\r\n    if (getTrailARN() != null)\r\n        sb.append(\"TrailARN: \").append(getTrailARN()).append(\",\");\r\n    if (getLogFileValidationEnabled() != null)\r\n        sb.append(\"LogFileValidationEnabled: \").append(getLogFileValidationEnabled()).append(\",\");\r\n    if (getCloudWatchLogsLogGroupArn() != null)\r\n        sb.append(\"CloudWatchLogsLogGroupArn: \").append(getCloudWatchLogsLogGroupArn()).append(\",\");\r\n    if (getCloudWatchLogsRoleArn() != null)\r\n        sb.append(\"CloudWatchLogsRoleArn: \").append(getCloudWatchLogsRoleArn()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getIsOrganizationTrail() != null)\r\n        sb.append(\"IsOrganizationTrail: \").append(getIsOrganizationTrail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.InvalidateProjectCacheRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PostCommentForComparedCommitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBeforeCommitId() != null)\r\n        sb.append(\"BeforeCommitId: \").append(getBeforeCommitId()).append(\",\");\r\n    if (getAfterCommitId() != null)\r\n        sb.append(\"AfterCommitId: \").append(getAfterCommitId()).append(\",\");\r\n    if (getBeforeBlobId() != null)\r\n        sb.append(\"BeforeBlobId: \").append(getBeforeBlobId()).append(\",\");\r\n    if (getAfterBlobId() != null)\r\n        sb.append(\"AfterBlobId: \").append(getAfterBlobId()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListAppliedSchemaArnsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DistributionList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.SuggestRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuery() != null)\r\n        sb.append(\"Query: \").append(getQuery()).append(\",\");\r\n    if (getSuggester() != null)\r\n        sb.append(\"Suggester: \").append(getSuggester()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getRepositoryDescription() != null)\r\n        sb.append(\"RepositoryDescription: \").append(getRepositoryDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ContinueDeploymentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.ScalingParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDesiredInstanceType() != null)\r\n        sb.append(\"DesiredInstanceType: \").append(getDesiredInstanceType()).append(\",\");\r\n    if (getDesiredReplicationCount() != null)\r\n        sb.append(\"DesiredReplicationCount: \").append(getDesiredReplicationCount()).append(\",\");\r\n    if (getDesiredPartitionCount() != null)\r\n        sb.append(\"DesiredPartitionCount: \").append(getDesiredPartitionCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ComputeResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getMinvCpus() != null)\r\n        sb.append(\"MinvCpus: \").append(getMinvCpus()).append(\",\");\r\n    if (getMaxvCpus() != null)\r\n        sb.append(\"MaxvCpus: \").append(getMaxvCpus()).append(\",\");\r\n    if (getDesiredvCpus() != null)\r\n        sb.append(\"DesiredvCpus: \").append(getDesiredvCpus()).append(\",\");\r\n    if (getInstanceTypes() != null)\r\n        sb.append(\"InstanceTypes: \").append(getInstanceTypes()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getEc2KeyPair() != null)\r\n        sb.append(\"Ec2KeyPair: \").append(getEc2KeyPair()).append(\",\");\r\n    if (getInstanceRole() != null)\r\n        sb.append(\"InstanceRole: \").append(getInstanceRole()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getPlacementGroup() != null)\r\n        sb.append(\"PlacementGroup: \").append(getPlacementGroup()).append(\",\");\r\n    if (getBidPercentage() != null)\r\n        sb.append(\"BidPercentage: \").append(getBidPercentage()).append(\",\");\r\n    if (getSpotIamFleetRole() != null)\r\n        sb.append(\"SpotIamFleetRole: \").append(getSpotIamFleetRole()).append(\",\");\r\n    if (getLaunchTemplate() != null)\r\n        sb.append(\"LaunchTemplate: \").append(getLaunchTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetDeploymentInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.GetAccountSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.addFacetToObject",
	"Comment": "adds a new facet to an object. an object can have more than one facet applied on it.",
	"Method": "AddFacetToObjectResult addFacetToObject(AddFacetToObjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddFacetToObject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.DeleteUserProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.Limits.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaximumReplicationCount() != null)\r\n        sb.append(\"MaximumReplicationCount: \").append(getMaximumReplicationCount()).append(\",\");\r\n    if (getMaximumPartitionCount() != null)\r\n        sb.append(\"MaximumPartitionCount: \").append(getMaximumPartitionCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.SearchStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimems() != null)\r\n        sb.append(\"Timems: \").append(getTimems()).append(\",\");\r\n    if (getRid() != null)\r\n        sb.append(\"Rid: \").append(getRid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStacksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStacks() != null)\r\n        sb.append(\"Stacks: \").append(getStacks()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.listUsers",
	"Comment": "lists the users that belong to the specified amazon chime account. you can specify an email address to list onlythe user that the email address belongs to.",
	"Method": "ListUsersResult listUsers(ListUsersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListUsers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.RoleMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getAmbiguousRoleResolution() != null)\r\n        sb.append(\"AmbiguousRoleResolution: \").append(getAmbiguousRoleResolution()).append(\",\");\r\n    if (getRulesConfiguration() != null)\r\n        sb.append(\"RulesConfiguration: \").append(getRulesConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listTypedLinkFacetNames",
	"Comment": "returns a paginated list of typedlink facet names for a particular schema. for more information, seetyped links.",
	"Method": "ListTypedLinkFacetNamesResult listTypedLinkFacetNames(ListTypedLinkFacetNamesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTypedLinkFacetNames(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ListTagsForProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DeleteSchemaResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.Location.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilePath() != null)\r\n        sb.append(\"FilePath: \").append(getFilePath()).append(\",\");\r\n    if (getFilePosition() != null)\r\n        sb.append(\"FilePosition: \").append(getFilePosition()).append(\",\");\r\n    if (getRelativeFileVersion() != null)\r\n        sb.append(\"RelativeFileVersion: \").append(getRelativeFileVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DeleteBudgetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClient.describeAlarmHistory",
	"Comment": "retrieves the history for the specified alarm. you can filter the results by date range or item type. if an alarmname is not specified, the histories for all alarms are returned.cloudwatch retains the history of an alarm even if you delete the alarm.",
	"Method": "DescribeAlarmHistoryResult describeAlarmHistory(DescribeAlarmHistoryRequest request,DescribeAlarmHistoryResult describeAlarmHistory){\r\n    return describeAlarmHistory(new DescribeAlarmHistoryRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.OutputArtifact.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.deleteStackSet",
	"Comment": "deletes a stack set. before you can delete a stack set, all of its member stack instances must be deleted. formore information about how to do this, see deletestackinstances.",
	"Method": "DeleteStackSetResult deleteStackSet(DeleteStackSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteStackSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeIndexFieldsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexFields() != null)\r\n        sb.append(\"IndexFields: \").append(getIndexFields());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeleteFieldLevelEncryptionConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.logoutUser",
	"Comment": "logs out the specified user from all of the devices they are currently logged into.",
	"Method": "LogoutUserResult logoutUser(LogoutUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeLogoutUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.codegen.customization.processors.SendEmptyAutoConstructedListAsEmptyListProcessor.sanityCheck",
	"Comment": "verify the shape exists and the members provided exist and also verify the membersare list shapes.",
	"Method": "void sanityCheck(IntermediateModel intermediateModel){\r\n    sendEmptyQueryString.forEach((shapeName, memberNames) -> {\r\n        ShapeModel shape = intermediateModel.getShapes().get(shapeName);\r\n        if (shape == null) {\r\n            throw new IllegalStateException(String.format(\"Cannot find shape [%s] in the model when processing \" + \"customization config sendEmptyQueryStringParam.%s\", shapeName, shapeName));\r\n        }\r\n        memberNames.forEach(memberName -> {\r\n            if (shape.getMemberByName(memberName) == null) {\r\n                throw new IllegalStateException(String.format(\"Cannot find member [%s] in the model when processing \" + \"customization config sendEmptyQueryStringParam.%s\", memberName, shapeName));\r\n            }\r\n        });\r\n        memberNames.stream().map(shape::getMemberByC2jName).forEach(member -> assertIsListMember(shapeName, member));\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.applySchema",
	"Comment": "copies the input published schema, at the specified version, into the directory with the same name andversion as that of the published schema.",
	"Method": "ApplySchemaResult applySchema(ApplySchemaRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeApplySchema(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetCommitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getCommitId() != null)\r\n        sb.append(\"CommitId: \").append(getCommitId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.protocol.BaseProtocolMetadataProvider.getContentType",
	"Comment": "content type is hardcoded for very few protocols so we return null here for convenience.subclasses may override to set an explicit content type.",
	"Method": "String getContentType(){\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.TriggerConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTriggerName() != null)\r\n        sb.append(\"TriggerName: \").append(getTriggerName()).append(\",\");\r\n    if (getTriggerTargetArn() != null)\r\n        sb.append(\"TriggerTargetArn: \").append(getTriggerTargetArn()).append(\",\");\r\n    if (getTriggerEvents() != null)\r\n        sb.append(\"TriggerEvents: \").append(getTriggerEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListObjectPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedPolicyIds() != null)\r\n        sb.append(\"AttachedPolicyIds: \").append(getAttachedPolicyIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.DeleteTrailResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.CreateCustomActionTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionType() != null)\r\n        sb.append(\"ActionType: \").append(getActionType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeSuggestersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuggesters() != null)\r\n        sb.append(\"Suggesters: \").append(getSuggesters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.InviteUsersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInvites() != null)\r\n        sb.append(\"Invites: \").append(getInvites());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.CreateBranchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.protocol.BaseProtocolMetadataProvider.isCborProtocol",
	"Comment": "default is false, subclasses can override to indicate they are cbor protocols.",
	"Method": "boolean isCborProtocol(){\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListObjectChildrenResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChildren() != null)\r\n        sb.append(\"Children: \").append(getChildren()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AbstractAmazonCloudSearchAsync.describeDomainsAsync",
	"Comment": "simplified method form for invoking the describedomains operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDomainsResult> describeDomainsAsync(DescribeDomainsRequest request,java.util.concurrent.Future<DescribeDomainsResult> describeDomainsAsync,DescribeDomainsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDomainsRequest, DescribeDomainsResult> asyncHandler,java.util.concurrent.Future<DescribeDomainsResult> describeDomainsAsync,java.util.concurrent.Future<DescribeDomainsResult> describeDomainsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDomainsRequest, DescribeDomainsResult> asyncHandler){\r\n    return describeDomainsAsync(new DescribeDomainsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.BlockerDeclaration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.Commit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommitId() != null)\r\n        sb.append(\"CommitId: \").append(getCommitId()).append(\",\");\r\n    if (getTreeId() != null)\r\n        sb.append(\"TreeId: \").append(getTreeId()).append(\",\");\r\n    if (getParents() != null)\r\n        sb.append(\"Parents: \").append(getParents()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getAuthor() != null)\r\n        sb.append(\"Author: \").append(getAuthor()).append(\",\");\r\n    if (getCommitter() != null)\r\n        sb.append(\"Committer: \").append(getCommitter()).append(\",\");\r\n    if (getAdditionalData() != null)\r\n        sb.append(\"AdditionalData: \").append(getAdditionalData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StopStackSetOperationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeleteFieldLevelEncryptionProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchAttachToIndex.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexReference() != null)\r\n        sb.append(\"IndexReference: \").append(getIndexReference()).append(\",\");\r\n    if (getTargetReference() != null)\r\n        sb.append(\"TargetReference: \").append(getTargetReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetFacetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFacet() != null)\r\n        sb.append(\"Facet: \").append(getFacet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.describeStackResource",
	"Comment": "returns a description of the specified resource in the specified stack.for deleted stacks, describestackresource returns resource information for up to 90 days after the stack has beendeleted.",
	"Method": "DescribeStackResourceResult describeStackResource(DescribeStackResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeStackResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetCommentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.Facet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getObjectType() != null)\r\n        sb.append(\"ObjectType: \").append(getObjectType()).append(\",\");\r\n    if (getFacetStyle() != null)\r\n        sb.append(\"FacetStyle: \").append(getFacetStyle());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ModifyLunaClientRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientArn() != null)\r\n        sb.append(\"ClientArn: \").append(getClientArn()).append(\",\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetDeploymentInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceSummary() != null)\r\n        sb.append(\"InstanceSummary: \").append(getInstanceSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ListBuildsForProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIds() != null)\r\n        sb.append(\"Ids: \").append(getIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.JobDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.UpdateScalingParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingParameters() != null)\r\n        sb.append(\"ScalingParameters: \").append(getScalingParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.SetInstanceProtectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.LifecycleEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLifecycleEventName() != null)\r\n        sb.append(\"LifecycleEventName: \").append(getLifecycleEventName()).append(\",\");\r\n    if (getDiagnostics() != null)\r\n        sb.append(\"Diagnostics: \").append(getDiagnostics()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.DeleteWebhookResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.waiters.DescribeAutoScalingGroupsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeAutoScalingGroupsResult apply(DescribeAutoScalingGroupsRequest describeAutoScalingGroupsRequest){\r\n    return client.describeAutoScalingGroups(describeAutoScalingGroupsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListObjectParentPathsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPathToObjectIdentifiersList() != null)\r\n        sb.append(\"PathToObjectIdentifiersList: \").append(getPathToObjectIdentifiersList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getLogicalResourceId() != null)\r\n        sb.append(\"LogicalResourceId: \").append(getLogicalResourceId()).append(\",\");\r\n    if (getPhysicalResourceId() != null)\r\n        sb.append(\"PhysicalResourceId: \").append(getPhysicalResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getResourceStatus() != null)\r\n        sb.append(\"ResourceStatus: \").append(getResourceStatus()).append(\",\");\r\n    if (getResourceStatusReason() != null)\r\n        sb.append(\"ResourceStatusReason: \").append(getResourceStatusReason()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDriftInformation() != null)\r\n        sb.append(\"DriftInformation: \").append(getDriftInformation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DeleteDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainStatus() != null)\r\n        sb.append(\"DomainStatus: \").append(getDomainStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.SignalResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetDifferencesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBeforeCommitSpecifier() != null)\r\n        sb.append(\"BeforeCommitSpecifier: \").append(getBeforeCommitSpecifier()).append(\",\");\r\n    if (getAfterCommitSpecifier() != null)\r\n        sb.append(\"AfterCommitSpecifier: \").append(getAfterCommitSpecifier()).append(\",\");\r\n    if (getBeforePath() != null)\r\n        sb.append(\"BeforePath: \").append(getBeforePath()).append(\",\");\r\n    if (getAfterPath() != null)\r\n        sb.append(\"AfterPath: \").append(getAfterPath()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.CreateSubscriberRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getNotification() != null)\r\n        sb.append(\"Notification: \").append(getNotification()).append(\",\");\r\n    if (getSubscriber() != null)\r\n        sb.append(\"Subscriber: \").append(getSubscriber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackResourceDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getLogicalResourceId() != null)\r\n        sb.append(\"LogicalResourceId: \").append(getLogicalResourceId()).append(\",\");\r\n    if (getPhysicalResourceId() != null)\r\n        sb.append(\"PhysicalResourceId: \").append(getPhysicalResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getResourceStatus() != null)\r\n        sb.append(\"ResourceStatus: \").append(getResourceStatus()).append(\",\");\r\n    if (getResourceStatusReason() != null)\r\n        sb.append(\"ResourceStatusReason: \").append(getResourceStatusReason()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata()).append(\",\");\r\n    if (getDriftInformation() != null)\r\n        sb.append(\"DriftInformation: \").append(getDriftInformation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AWSCloudTrailClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsbudgetsasync using the current builder configuration.",
	"Method": "AWSBudgetsAsync build(AwsAsyncClientParams params){\r\n    return new AWSBudgetsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.codegen.protocol.BaseProtocolMetadataProvider.isJsonProtocol",
	"Comment": "default is false, subclasses can override to indicate they are json protocols.",
	"Method": "boolean isJsonProtocol(){\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.codegen.ExamplesCustomizer.applyCustomizationsToShapeJson",
	"Comment": "recursively apply any declared customizations to this json valueaccording to the given shape and the customizations declared for theshape.",
	"Method": "JsonNode applyCustomizationsToShapeJson(String shapeName,Shape shape,JsonNode valueNode){\r\n    if (valueNode == null || !valueNode.isContainerNode()) {\r\n        return valueNode;\r\n    }\r\n    valueNode = applyModificationsToShapeJson(shapeName, valueNode);\r\n    ShapeSubstitution shapeSub = null;\r\n    if (customizationConfig.getShapeSubstitutions() != null) {\r\n        shapeSub = customizationConfig.getShapeSubstitutions().get(shapeName);\r\n    }\r\n    if (shapeSub != null) {\r\n        String substituteShapeName = shapeSub.getEmitAsShape();\r\n        Shape substituteShape = serviceModel.getShape(substituteShapeName);\r\n        JsonNode substituteValue = valueNode;\r\n        if (shapeSub.getEmitFromMember() != null) {\r\n            substituteValue = valueNode.get(shapeSub.getEmitFromMember());\r\n            if (substituteValue == null) {\r\n                System.err.println(String.format(\"Warning: Substituting shape '%s' for its\" + \" member '%s' as shape '%s' produced null value. Original\" + \" value: %s\", shapeName, shapeSub.getEmitFromMember(), substituteShapeName, valueNode.toString()));\r\n            }\r\n        }\r\n        System.out.println(String.format(\"Substituting shape %s with %s. %s -> %s\", shapeName, substituteShapeName, valueNode.toString(), Objects.toString(substituteValue)));\r\n        return applyCustomizationsToShapeJson(substituteShapeName, substituteShape, substituteValue);\r\n    } else {\r\n        switch(shape.getType()) {\r\n            case \"map\":\r\n            case \"structure\":\r\n                {\r\n                    if (shape.getMembers() == null) {\r\n                        return valueNode;\r\n                    }\r\n                    ObjectNode obj = MAPPER.createObjectNode();\r\n                    for (Map.Entry<String, Member> e : shape.getMembers().entrySet()) {\r\n                        Member member = e.getValue();\r\n                        String memberName = e.getKey();\r\n                        String memberShapeName = member.getShape();\r\n                        Shape memberShape = serviceModel.getShape(memberShapeName);\r\n                        JsonNode memberValue = valueNode.get(memberName);\r\n                        if (memberValue != null) {\r\n                            obj.set(memberName, applyCustomizationsToShapeJson(memberShapeName, memberShape, memberValue));\r\n                        }\r\n                    }\r\n                    return obj;\r\n                }\r\n            case \"list\":\r\n                {\r\n                    ArrayNode list = MAPPER.createArrayNode();\r\n                    String memberShapeName = shape.getListMember().getShape();\r\n                    Shape memberShape = serviceModel.getShape(memberShapeName);\r\n                    for (JsonNode e : valueNode) {\r\n                        list.add(applyCustomizationsToShapeJson(memberShapeName, memberShape, e));\r\n                    }\r\n                    return list;\r\n                }\r\n            default:\r\n                throw new RuntimeException(\"Unknown shape type: \" + shape.getType());\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetCloudFrontOriginAccessIdentityConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudFrontOriginAccessIdentityConfig() != null)\r\n        sb.append(\"CloudFrontOriginAccessIdentityConfig: \").append(getCloudFrontOriginAccessIdentityConfig()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.ListAccountsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getUserEmail() != null)\r\n        sb.append(\"UserEmail: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.TextArrayOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceFields() != null)\r\n        sb.append(\"SourceFields: \").append(getSourceFields()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled()).append(\",\");\r\n    if (getHighlightEnabled() != null)\r\n        sb.append(\"HighlightEnabled: \").append(getHighlightEnabled()).append(\",\");\r\n    if (getAnalysisScheme() != null)\r\n        sb.append(\"AnalysisScheme: \").append(getAnalysisScheme());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.GetEventSelectorsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrailARN() != null)\r\n        sb.append(\"TrailARN: \").append(getTrailARN()).append(\",\");\r\n    if (getEventSelectors() != null)\r\n        sb.append(\"EventSelectors: \").append(getEventSelectors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.updateUser",
	"Comment": "updates user details for a specified user id. currently, only licensetype updates are supported forthis action.",
	"Method": "UpdateUserResult updateUser(UpdateUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarClient.describeUserProfile",
	"Comment": "describes a user in aws codestar and the user attributes across all projects.",
	"Method": "DescribeUserProfileResult describeUserProfile(DescribeUserProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeUserProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ListActionTypesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionTypes() != null)\r\n        sb.append(\"ActionTypes: \").append(getActionTypes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DetectStackResourceDriftResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackResourceDrift() != null)\r\n        sb.append(\"StackResourceDrift: \").append(getStackResourceDrift());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListCloudFrontOriginAccessIdentitiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.putThirdPartyJobSuccessResult",
	"Comment": "represents the success of a third party job as returned to the pipeline by a job worker. only used for partneractions.",
	"Method": "PutThirdPartyJobSuccessResultResult putThirdPartyJobSuccessResult(PutThirdPartyJobSuccessResultRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutThirdPartyJobSuccessResult(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ContentTypeProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getProfileId() != null)\r\n        sb.append(\"ProfileId: \").append(getProfileId()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMAsyncClient.describeLunaClientAsync",
	"Comment": "simplified method form for invoking the describelunaclient operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeLunaClientResult> describeLunaClientAsync(DescribeLunaClientRequest request,java.util.concurrent.Future<DescribeLunaClientResult> describeLunaClientAsync,DescribeLunaClientRequest request,com.amazonaws.handlers.AsyncHandler<DescribeLunaClientRequest, DescribeLunaClientResult> asyncHandler,java.util.concurrent.Future<DescribeLunaClientResult> describeLunaClientAsync,java.util.concurrent.Future<DescribeLunaClientResult> describeLunaClientAsync,com.amazonaws.handlers.AsyncHandler<DescribeLunaClientRequest, DescribeLunaClientResult> asyncHandler){\r\n    return describeLunaClientAsync(new DescribeLunaClientRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMAsyncClient.listHsmsAsync",
	"Comment": "simplified method form for invoking the listhsms operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListHsmsResult> listHsmsAsync(ListHsmsRequest request,java.util.concurrent.Future<ListHsmsResult> listHsmsAsync,ListHsmsRequest request,com.amazonaws.handlers.AsyncHandler<ListHsmsRequest, ListHsmsResult> asyncHandler,java.util.concurrent.Future<ListHsmsResult> listHsmsAsync,java.util.concurrent.Future<ListHsmsResult> listHsmsAsync,com.amazonaws.handlers.AsyncHandler<ListHsmsRequest, ListHsmsResult> asyncHandler){\r\n    return listHsmsAsync(new ListHsmsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeScalingParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingParameters() != null)\r\n        sb.append(\"ScalingParameters: \").append(getScalingParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.StartPipelineExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineExecutionId() != null)\r\n        sb.append(\"PipelineExecutionId: \").append(getPipelineExecutionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DistributionSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getAliases() != null)\r\n        sb.append(\"Aliases: \").append(getAliases()).append(\",\");\r\n    if (getOrigins() != null)\r\n        sb.append(\"Origins: \").append(getOrigins()).append(\",\");\r\n    if (getOriginGroups() != null)\r\n        sb.append(\"OriginGroups: \").append(getOriginGroups()).append(\",\");\r\n    if (getDefaultCacheBehavior() != null)\r\n        sb.append(\"DefaultCacheBehavior: \").append(getDefaultCacheBehavior()).append(\",\");\r\n    if (getCacheBehaviors() != null)\r\n        sb.append(\"CacheBehaviors: \").append(getCacheBehaviors()).append(\",\");\r\n    if (getCustomErrorResponses() != null)\r\n        sb.append(\"CustomErrorResponses: \").append(getCustomErrorResponses()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getPriceClass() != null)\r\n        sb.append(\"PriceClass: \").append(getPriceClass()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getViewerCertificate() != null)\r\n        sb.append(\"ViewerCertificate: \").append(getViewerCertificate()).append(\",\");\r\n    if (getRestrictions() != null)\r\n        sb.append(\"Restrictions: \").append(getRestrictions()).append(\",\");\r\n    if (getWebACLId() != null)\r\n        sb.append(\"WebACLId: \").append(getWebACLId()).append(\",\");\r\n    if (getHttpVersion() != null)\r\n        sb.append(\"HttpVersion: \").append(getHttpVersion()).append(\",\");\r\n    if (getIsIPV6Enabled() != null)\r\n        sb.append(\"IsIPV6Enabled: \").append(getIsIPV6Enabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.MachineMetricFactory.threadMetricValues",
	"Comment": "returns the set of thread metrics and the corresponding values based onthe default and the customized set of metrics, if any.",
	"Method": "MetricValues threadMetricValues(Set<MachineMetric> customSet,List<Long> values){\r\n    return metricValues(customSet, MachineMetricFactory.threadMetrics, values);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.AccessPoliciesStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.LookupDeveloperIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId()).append(\",\");\r\n    if (getDeveloperUserIdentifier() != null)\r\n        sb.append(\"DeveloperUserIdentifier: \").append(getDeveloperUserIdentifier()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlarmHistoryItems() != null)\r\n        sb.append(\"AlarmHistoryItems: \").append(getAlarmHistoryItems()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.CopyBackupToRegionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationBackup() != null)\r\n        sb.append(\"DestinationBackup: \").append(getDestinationBackup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AbstractAmazonCodeDeployAsync.listDeploymentsAsync",
	"Comment": "simplified method form for invoking the listdeployments operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListDeploymentsResult> listDeploymentsAsync(ListDeploymentsRequest request,java.util.concurrent.Future<ListDeploymentsResult> listDeploymentsAsync,ListDeploymentsRequest request,com.amazonaws.handlers.AsyncHandler<ListDeploymentsRequest, ListDeploymentsResult> asyncHandler,java.util.concurrent.Future<ListDeploymentsResult> listDeploymentsAsync,java.util.concurrent.Future<ListDeploymentsResult> listDeploymentsAsync,com.amazonaws.handlers.AsyncHandler<ListDeploymentsRequest, ListDeploymentsResult> asyncHandler){\r\n    return listDeploymentsAsync(new ListDeploymentsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.DescribeProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchWriteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.DescribeScalingPlanResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlanResources() != null)\r\n        sb.append(\"ScalingPlanResources: \").append(getScalingPlanResources()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.LambdaFunctionAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLambdaFunctionARN() != null)\r\n        sb.append(\"LambdaFunctionARN: \").append(getLambdaFunctionARN()).append(\",\");\r\n    if (getEventType() != null)\r\n        sb.append(\"EventType: \").append(getEventType()).append(\",\");\r\n    if (getIncludeBody() != null)\r\n        sb.append(\"IncludeBody: \").append(getIncludeBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.InvalidationList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.UpdateComputeEnvironmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComputeEnvironmentName() != null)\r\n        sb.append(\"ComputeEnvironmentName: \").append(getComputeEnvironmentName()).append(\",\");\r\n    if (getComputeEnvironmentArn() != null)\r\n        sb.append(\"ComputeEnvironmentArn: \").append(getComputeEnvironmentArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.LookupPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyToPathList() != null)\r\n        sb.append(\"PolicyToPathList: \").append(getPolicyToPathList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListObjectAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFacetFilter() != null)\r\n        sb.append(\"FacetFilter: \").append(getFacetFilter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.SetIdentityPoolRolesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.CreateStackSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetId() != null)\r\n        sb.append(\"StackSetId: \").append(getStackSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.CreateRepositoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getRepositoryDescription() != null)\r\n        sb.append(\"RepositoryDescription: \").append(getRepositoryDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.AddTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTagsList() != null)\r\n        sb.append(\"TagsList: \").append(getTagsList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ListHapgsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.Folder.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTreeId() != null)\r\n        sb.append(\"TreeId: \").append(getTreeId()).append(\",\");\r\n    if (getAbsolutePath() != null)\r\n        sb.append(\"AbsolutePath: \").append(getAbsolutePath()).append(\",\");\r\n    if (getRelativePath() != null)\r\n        sb.append(\"RelativePath: \").append(getRelativePath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.ServiceEndpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.BucketInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuckets() != null)\r\n        sb.append(\"Buckets: \").append(getBuckets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarClientBuilder.build",
	"Comment": "construct a synchronous implementation of awscodestar using the current builder configuration.",
	"Method": "AWSCodeStar build(AwsSyncClientParams params){\r\n    return new AWSCodeStarClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ModifyHsmResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmArn() != null)\r\n        sb.append(\"HsmArn: \").append(getHsmArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.AWSCloudHSMV2AsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awscloudhsmv2async using the current builder configuration.",
	"Method": "AWSCloudHSMV2Async build(AwsAsyncClientParams params){\r\n    return new AWSCloudHSMV2AsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.TimePeriod.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getEnd() != null)\r\n        sb.append(\"End: \").append(getEnd());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.CommentsForPullRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBeforeCommitId() != null)\r\n        sb.append(\"BeforeCommitId: \").append(getBeforeCommitId()).append(\",\");\r\n    if (getAfterCommitId() != null)\r\n        sb.append(\"AfterCommitId: \").append(getAfterCommitId()).append(\",\");\r\n    if (getBeforeBlobId() != null)\r\n        sb.append(\"BeforeBlobId: \").append(getBeforeBlobId()).append(\",\");\r\n    if (getAfterBlobId() != null)\r\n        sb.append(\"AfterBlobId: \").append(getAfterBlobId()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getComments() != null)\r\n        sb.append(\"Comments: \").append(getComments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DeleteExpressionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExpression() != null)\r\n        sb.append(\"Expression: \").append(getExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.TagProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClient.deleteNotification",
	"Comment": "deletes a notification.deleting a notification also deletes the subscribers that are associated with the notification.",
	"Method": "DeleteNotificationResult deleteNotification(DeleteNotificationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteNotification(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.AccountLimit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClient.createSubscriber",
	"Comment": "creates a subscriber. you must create the associated budget and notification before you create the subscriber.",
	"Method": "CreateSubscriberResult createSubscriber(CreateSubscriberRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateSubscriber(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.inviteUsers",
	"Comment": "sends email invites to as many as 50 users, inviting them to the specified amazon chime teamaccount. only team account types are currently supported for this action.",
	"Method": "InviteUsersResult inviteUsers(InviteUsersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeInviteUsers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchGetObjectInformation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchDetachTypedLink.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTypedLinkSpecifier() != null)\r\n        sb.append(\"TypedLinkSpecifier: \").append(getTypedLinkSpecifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ContinueUpdateRollbackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getResourcesToSkip() != null)\r\n        sb.append(\"ResourcesToSkip: \").append(getResourcesToSkip()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListDistributionsByWebACLIdRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getWebACLId() != null)\r\n        sb.append(\"WebACLId: \").append(getWebACLId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetCloudFrontOriginAccessIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.UpdateAccountSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DeleteAlarmsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.deleteHsm",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.deletes an hsm. after completion, this operation cannot be undone and your key material cannot be recovered.",
	"Method": "DeleteHsmResult deleteHsm(DeleteHsmRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteHsm(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PipelineExecutionSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineExecutionId() != null)\r\n        sb.append(\"PipelineExecutionId: \").append(getPipelineExecutionId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getLastUpdateTime() != null)\r\n        sb.append(\"LastUpdateTime: \").append(getLastUpdateTime()).append(\",\");\r\n    if (getSourceRevisions() != null)\r\n        sb.append(\"SourceRevisions: \").append(getSourceRevisions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.CreateIdentityPoolResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getIdentityPoolName() != null)\r\n        sb.append(\"IdentityPoolName: \").append(getIdentityPoolName()).append(\",\");\r\n    if (getAllowUnauthenticatedIdentities() != null)\r\n        sb.append(\"AllowUnauthenticatedIdentities: \").append(getAllowUnauthenticatedIdentities()).append(\",\");\r\n    if (getSupportedLoginProviders() != null)\r\n        sb.append(\"SupportedLoginProviders: \").append(getSupportedLoginProviders()).append(\",\");\r\n    if (getDeveloperProviderName() != null)\r\n        sb.append(\"DeveloperProviderName: \").append(getDeveloperProviderName()).append(\",\");\r\n    if (getOpenIdConnectProviderARNs() != null)\r\n        sb.append(\"OpenIdConnectProviderARNs: \").append(getOpenIdConnectProviderARNs()).append(\",\");\r\n    if (getCognitoIdentityProviders() != null)\r\n        sb.append(\"CognitoIdentityProviders: \").append(getCognitoIdentityProviders()).append(\",\");\r\n    if (getSamlProviderARNs() != null)\r\n        sb.append(\"SamlProviderARNs: \").append(getSamlProviderARNs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.getSchemaAsJson",
	"Comment": "retrieves a json representation of the schema. see jsonschema format for more information.",
	"Method": "GetSchemaAsJsonResult getSchemaAsJson(GetSchemaAsJsonRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSchemaAsJson(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateFieldLevelEncryptionConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryption() != null)\r\n        sb.append(\"FieldLevelEncryption: \").append(getFieldLevelEncryption()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DefineAnalysisSchemeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getAnalysisScheme() != null)\r\n        sb.append(\"AnalysisScheme: \").append(getAnalysisScheme());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeleteDeploymentGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHooksNotCleanedUp() != null)\r\n        sb.append(\"HooksNotCleanedUp: \").append(getHooksNotCleanedUp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DescribeSubscribersForNotificationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscribers() != null)\r\n        sb.append(\"Subscribers: \").append(getSubscribers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutJobSuccessResultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getCurrentRevision() != null)\r\n        sb.append(\"CurrentRevision: \").append(getCurrentRevision()).append(\",\");\r\n    if (getContinuationToken() != null)\r\n        sb.append(\"ContinuationToken: \").append(getContinuationToken()).append(\",\");\r\n    if (getExecutionDetails() != null)\r\n        sb.append(\"ExecutionDetails: \").append(getExecutionDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.ScalingInstruction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceNamespace() != null)\r\n        sb.append(\"ServiceNamespace: \").append(getServiceNamespace()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getScalableDimension() != null)\r\n        sb.append(\"ScalableDimension: \").append(getScalableDimension()).append(\",\");\r\n    if (getMinCapacity() != null)\r\n        sb.append(\"MinCapacity: \").append(getMinCapacity()).append(\",\");\r\n    if (getMaxCapacity() != null)\r\n        sb.append(\"MaxCapacity: \").append(getMaxCapacity()).append(\",\");\r\n    if (getTargetTrackingConfigurations() != null)\r\n        sb.append(\"TargetTrackingConfigurations: \").append(getTargetTrackingConfigurations()).append(\",\");\r\n    if (getPredefinedLoadMetricSpecification() != null)\r\n        sb.append(\"PredefinedLoadMetricSpecification: \").append(getPredefinedLoadMetricSpecification()).append(\",\");\r\n    if (getCustomizedLoadMetricSpecification() != null)\r\n        sb.append(\"CustomizedLoadMetricSpecification: \").append(getCustomizedLoadMetricSpecification()).append(\",\");\r\n    if (getScheduledActionBufferTime() != null)\r\n        sb.append(\"ScheduledActionBufferTime: \").append(getScheduledActionBufferTime()).append(\",\");\r\n    if (getPredictiveScalingMaxCapacityBehavior() != null)\r\n        sb.append(\"PredictiveScalingMaxCapacityBehavior: \").append(getPredictiveScalingMaxCapacityBehavior()).append(\",\");\r\n    if (getPredictiveScalingMaxCapacityBuffer() != null)\r\n        sb.append(\"PredictiveScalingMaxCapacityBuffer: \").append(getPredictiveScalingMaxCapacityBuffer()).append(\",\");\r\n    if (getPredictiveScalingMode() != null)\r\n        sb.append(\"PredictiveScalingMode: \").append(getPredictiveScalingMode()).append(\",\");\r\n    if (getScalingPolicyUpdateBehavior() != null)\r\n        sb.append(\"ScalingPolicyUpdateBehavior: \").append(getScalingPolicyUpdateBehavior()).append(\",\");\r\n    if (getDisableDynamicScaling() != null)\r\n        sb.append(\"DisableDynamicScaling: \").append(getDisableDynamicScaling());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ListTagsForProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetInvalidationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistributionId() != null)\r\n        sb.append(\"DistributionId: \").append(getDistributionId()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.ListPullRequestsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getAuthorArn() != null)\r\n        sb.append(\"AuthorArn: \").append(getAuthorArn()).append(\",\");\r\n    if (getPullRequestStatus() != null)\r\n        sb.append(\"PullRequestStatus: \").append(getPullRequestStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListDevelopmentSchemaArnsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.TypedLinkSpecifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTypedLinkFacet() != null)\r\n        sb.append(\"TypedLinkFacet: \").append(getTypedLinkFacet()).append(\",\");\r\n    if (getSourceObjectReference() != null)\r\n        sb.append(\"SourceObjectReference: \").append(getSourceObjectReference()).append(\",\");\r\n    if (getTargetObjectReference() != null)\r\n        sb.append(\"TargetObjectReference: \").append(getTargetObjectReference()).append(\",\");\r\n    if (getIdentityAttributeValues() != null)\r\n        sb.append(\"IdentityAttributeValues: \").append(getIdentityAttributeValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.listIdentities",
	"Comment": "lists the identities in a pool.you must use aws developer credentials to call this api.",
	"Method": "ListIdentitiesResult listIdentities(ListIdentitiesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListIdentities(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListDeploymentConfigsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.JobDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getJobQueue() != null)\r\n        sb.append(\"JobQueue: \").append(getJobQueue()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getAttempts() != null)\r\n        sb.append(\"Attempts: \").append(getAttempts()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getRetryStrategy() != null)\r\n        sb.append(\"RetryStrategy: \").append(getRetryStrategy()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getStoppedAt() != null)\r\n        sb.append(\"StoppedAt: \").append(getStoppedAt()).append(\",\");\r\n    if (getDependsOn() != null)\r\n        sb.append(\"DependsOn: \").append(getDependsOn()).append(\",\");\r\n    if (getJobDefinition() != null)\r\n        sb.append(\"JobDefinition: \").append(getJobDefinition()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getContainer() != null)\r\n        sb.append(\"Container: \").append(getContainer()).append(\",\");\r\n    if (getNodeDetails() != null)\r\n        sb.append(\"NodeDetails: \").append(getNodeDetails()).append(\",\");\r\n    if (getNodeProperties() != null)\r\n        sb.append(\"NodeProperties: \").append(getNodeProperties()).append(\",\");\r\n    if (getArrayProperties() != null)\r\n        sb.append(\"ArrayProperties: \").append(getArrayProperties()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListOnPremisesInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistrationStatus() != null)\r\n        sb.append(\"RegistrationStatus: \").append(getRegistrationStatus()).append(\",\");\r\n    if (getTagFilters() != null)\r\n        sb.append(\"TagFilters: \").append(getTagFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AWSCloudTrailAsyncClient.listPublicKeysAsync",
	"Comment": "simplified method form for invoking the listpublickeys operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListPublicKeysResult> listPublicKeysAsync(ListPublicKeysRequest request,java.util.concurrent.Future<ListPublicKeysResult> listPublicKeysAsync,ListPublicKeysRequest request,com.amazonaws.handlers.AsyncHandler<ListPublicKeysRequest, ListPublicKeysResult> asyncHandler,java.util.concurrent.Future<ListPublicKeysResult> listPublicKeysAsync,java.util.concurrent.Future<ListPublicKeysResult> listPublicKeysAsync,com.amazonaws.handlers.AsyncHandler<ListPublicKeysRequest, ListPublicKeysResult> asyncHandler){\r\n    return listPublicKeysAsync(new ListPublicKeysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.Host.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourcePath() != null)\r\n        sb.append(\"SourcePath: \").append(getSourcePath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.BuildSuggestersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldNames() != null)\r\n        sb.append(\"FieldNames: \").append(getFieldNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.createDirectory",
	"Comment": "creates a directory by copying the published schema into the directory. a directory cannot be createdwithout a schema.you can also quickly create a directory using a managed schema, called the quickstartschema. formore information, see managed schemain the amazon cloud directory developer guide.",
	"Method": "CreateDirectoryResult createDirectory(CreateDirectoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDirectory(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.CreateBudgetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazoncloudformationasync using the current builder configuration.",
	"Method": "AmazonCloudFormationAsync build(AwsAsyncClientParams params){\r\n    return new AmazonCloudFormationAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackResourceDriftInformation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackResourceDriftStatus() != null)\r\n        sb.append(\"StackResourceDriftStatus: \").append(getStackResourceDriftStatus()).append(\",\");\r\n    if (getLastCheckTimestamp() != null)\r\n        sb.append(\"LastCheckTimestamp: \").append(getLastCheckTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ListWebhooksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.getRepositoryTriggers",
	"Comment": "gets information about triggers configured for a repository.",
	"Method": "GetRepositoryTriggersResult getRepositoryTriggers(GetRepositoryTriggersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRepositoryTriggers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.InvalidateProjectCacheResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.UpdateTeamMemberRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId()).append(\",\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getProjectRole() != null)\r\n        sb.append(\"ProjectRole: \").append(getProjectRole()).append(\",\");\r\n    if (getRemoteAccessAllowed() != null)\r\n        sb.append(\"RemoteAccessAllowed: \").append(getRemoteAccessAllowed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.SuggesterStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeleteDeploymentConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentConfigName() != null)\r\n        sb.append(\"DeploymentConfigName: \").append(getDeploymentConfigName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DeleteComputeEnvironmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.CreateEnvironmentMembershipRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getPermissions() != null)\r\n        sb.append(\"Permissions: \").append(getPermissions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.service.HostPrefixProcessor.replaceHostLabelsWithStringSpecifier",
	"Comment": "replace all the labels in host with %s symbols and collect the input shape member names into a list",
	"Method": "void replaceHostLabelsWithStringSpecifier(String hostExpression){\r\n    if (StringUtils.isNullOrEmpty(hostExpression)) {\r\n        throw new IllegalArgumentException(\"Given host prefix is either null or empty\");\r\n    }\r\n    Matcher matcher = PATTERN.matcher(hostExpression);\r\n    while (matcher.find()) {\r\n        String matched = matcher.group(1);\r\n        c2jNames.add(matched);\r\n        hostWithStringSpecifier = hostWithStringSpecifier.replaceFirst(\"\\\\{\" + matched + \"}\", \"%s\");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.QueryStringCacheKeys.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.GetMetricStatisticsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getPeriod() != null)\r\n        sb.append(\"Period: \").append(getPeriod()).append(\",\");\r\n    if (getStatistics() != null)\r\n        sb.append(\"Statistics: \").append(getStatistics()).append(\",\");\r\n    if (getExtendedStatistics() != null)\r\n        sb.append(\"ExtendedStatistics: \").append(getExtendedStatistics()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListDeploymentInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getInstanceStatusFilter() != null)\r\n        sb.append(\"InstanceStatusFilter: \").append(getInstanceStatusFilter()).append(\",\");\r\n    if (getInstanceTypeFilter() != null)\r\n        sb.append(\"InstanceTypeFilter: \").append(getInstanceTypeFilter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.CreateHsmRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AbstractAmazonCloudSearchAsync.listDomainNamesAsync",
	"Comment": "simplified method form for invoking the listdomainnames operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListDomainNamesResult> listDomainNamesAsync(ListDomainNamesRequest request,java.util.concurrent.Future<ListDomainNamesResult> listDomainNamesAsync,ListDomainNamesRequest request,com.amazonaws.handlers.AsyncHandler<ListDomainNamesRequest, ListDomainNamesResult> asyncHandler,java.util.concurrent.Future<ListDomainNamesResult> listDomainNamesAsync,java.util.concurrent.Future<ListDomainNamesResult> listDomainNamesAsync,com.amazonaws.handlers.AsyncHandler<ListDomainNamesRequest, ListDomainNamesResult> asyncHandler){\r\n    return listDomainNamesAsync(new ListDomainNamesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdatePublicKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKeyConfig() != null)\r\n        sb.append(\"PublicKeyConfig: \").append(getPublicKeyConfig()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.emitters.tasks.BaseExceptionClassGeneratorTasks.hasTasks",
	"Comment": "if a custom base class is provided we assume it already exists and does not need to be generated",
	"Method": "boolean hasTasks(){\r\n    return model.getCustomizationConfig().getSdkModeledExceptionBaseClassName() == null;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DescribeHapgResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHapgArn() != null)\r\n        sb.append(\"HapgArn: \").append(getHapgArn()).append(\",\");\r\n    if (getHapgSerial() != null)\r\n        sb.append(\"HapgSerial: \").append(getHapgSerial()).append(\",\");\r\n    if (getHsmsLastActionFailed() != null)\r\n        sb.append(\"HsmsLastActionFailed: \").append(getHsmsLastActionFailed()).append(\",\");\r\n    if (getHsmsPendingDeletion() != null)\r\n        sb.append(\"HsmsPendingDeletion: \").append(getHsmsPendingDeletion()).append(\",\");\r\n    if (getHsmsPendingRegistration() != null)\r\n        sb.append(\"HsmsPendingRegistration: \").append(getHsmsPendingRegistration()).append(\",\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel()).append(\",\");\r\n    if (getLastModifiedTimestamp() != null)\r\n        sb.append(\"LastModifiedTimestamp: \").append(getLastModifiedTimestamp()).append(\",\");\r\n    if (getPartitionSerialList() != null)\r\n        sb.append(\"PartitionSerialList: \").append(getPartitionSerialList()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DeleteAnalysisSchemeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getAnalysisSchemeName() != null)\r\n        sb.append(\"AnalysisSchemeName: \").append(getAnalysisSchemeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.CreatePullRequestRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeploymentOverview.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPending() != null)\r\n        sb.append(\"Pending: \").append(getPending()).append(\",\");\r\n    if (getInProgress() != null)\r\n        sb.append(\"InProgress: \").append(getInProgress()).append(\",\");\r\n    if (getSucceeded() != null)\r\n        sb.append(\"Succeeded: \").append(getSucceeded()).append(\",\");\r\n    if (getFailed() != null)\r\n        sb.append(\"Failed: \").append(getFailed()).append(\",\");\r\n    if (getSkipped() != null)\r\n        sb.append(\"Skipped: \").append(getSkipped()).append(\",\");\r\n    if (getReady() != null)\r\n        sb.append(\"Ready: \").append(getReady());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.getUser",
	"Comment": "retrieves details for the specified user id, such as primary email address, license type, and personal meetingpin.to retrieve user details with an email address instead of a user id, use the listusers action, and thenfilter by email address.",
	"Method": "GetUserResult getUser(GetUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetSchemaAsJsonResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDocument() != null)\r\n        sb.append(\"Document: \").append(getDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdateCommentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommentId() != null)\r\n        sb.append(\"CommentId: \").append(getCommentId()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DescribeJobQueuesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobQueues() != null)\r\n        sb.append(\"JobQueues: \").append(getJobQueues()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.StageState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStageName() != null)\r\n        sb.append(\"StageName: \").append(getStageName()).append(\",\");\r\n    if (getInboundTransitionState() != null)\r\n        sb.append(\"InboundTransitionState: \").append(getInboundTransitionState()).append(\",\");\r\n    if (getActionStates() != null)\r\n        sb.append(\"ActionStates: \").append(getActionStates()).append(\",\");\r\n    if (getLatestExecution() != null)\r\n        sb.append(\"LatestExecution: \").append(getLatestExecution());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeleteDeploymentGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDeploymentGroupName() != null)\r\n        sb.append(\"DeploymentGroupName: \").append(getDeploymentGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.updateEnvironmentMembership",
	"Comment": "changes the settings of an existing environment member for an aws cloud9 development environment.",
	"Method": "UpdateEnvironmentMembershipResult updateEnvironmentMembership(UpdateEnvironmentMembershipRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateEnvironmentMembership(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.waiters.AmazonCloudFrontWaiters.distributionDeployed",
	"Comment": "builds a distributiondeployed waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<GetDistributionRequest> distributionDeployed(){\r\n    return new WaiterBuilder<GetDistributionRequest, GetDistributionResult>().withSdkFunction(new GetDistributionFunction(client)).withAcceptors(new DistributionDeployed.IsDeployedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(25), new FixedDelayStrategy(60))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarClient.deleteProject",
	"Comment": "deletes a project, including project resources. does not delete users associated with the project, but doesdelete the iam roles that allowed access to the project.",
	"Method": "DeleteProjectResult deleteProject(DeleteProjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteProject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.ScalingPlanResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlanName() != null)\r\n        sb.append(\"ScalingPlanName: \").append(getScalingPlanName()).append(\",\");\r\n    if (getScalingPlanVersion() != null)\r\n        sb.append(\"ScalingPlanVersion: \").append(getScalingPlanVersion()).append(\",\");\r\n    if (getServiceNamespace() != null)\r\n        sb.append(\"ServiceNamespace: \").append(getServiceNamespace()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getScalableDimension() != null)\r\n        sb.append(\"ScalableDimension: \").append(getScalableDimension()).append(\",\");\r\n    if (getScalingPolicies() != null)\r\n        sb.append(\"ScalingPolicies: \").append(getScalingPolicies()).append(\",\");\r\n    if (getScalingStatusCode() != null)\r\n        sb.append(\"ScalingStatusCode: \").append(getScalingStatusCode()).append(\",\");\r\n    if (getScalingStatusMessage() != null)\r\n        sb.append(\"ScalingStatusMessage: \").append(getScalingStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.internal.Utils.createInputShapeMarshaller",
	"Comment": "create the shapemarshaller to the input shape from the specified operation.the input shape in the operation could be empty.",
	"Method": "ShapeMarshaller createInputShapeMarshaller(ServiceMetadata service,Operation operation){\r\n    if (operation == null)\r\n        throw new IllegalArgumentException(\"The operation parameter must be specified!\");\r\n    ShapeMarshaller marshaller = new ShapeMarshaller().withAction(operation.getName()).withVerb(operation.getHttp().getMethod()).withRequestUri(operation.getHttp().getRequestUri());\r\n    Input input = operation.getInput();\r\n    if (input != null) {\r\n        marshaller.setLocationName(input.getLocationName());\r\n        XmlNamespace xmlNamespace = input.getXmlNamespace();\r\n        if (xmlNamespace != null) {\r\n            marshaller.setXmlNameSpaceUri(xmlNamespace.getUri());\r\n        }\r\n    }\r\n    if (!StringUtils.isNullOrEmpty(service.getTargetPrefix()) && Metadata.isNotRestProtocol(service.getProtocol())) {\r\n        marshaller.setTarget(service.getTargetPrefix() + \".\" + operation.getName());\r\n    }\r\n    return marshaller;\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.ListUsersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.CreateHsmResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsm() != null)\r\n        sb.append(\"Hsm: \").append(getHsm());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.putJobFailureResult",
	"Comment": "represents the failure of a job as returned to the pipeline by a job worker. only used for custom actions.",
	"Method": "PutJobFailureResultResult putJobFailureResult(PutJobFailureResultRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutJobFailureResult(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ObjectReference.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSelector() != null)\r\n        sb.append(\"Selector: \").append(getSelector());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.batchSuspendUser",
	"Comment": "suspends up to 50 users from a team or enterpriselwa amazon chime account. for moreinformation about different account types, see managing your amazon chimeaccounts in the amazon chime administration guide.users suspended from a team account are dissociated from the account, but they can continue to useamazon chime as free users. to remove the suspension from suspended team account users, invite themto the team account again. you can use the inviteusers action to do so.users suspended from an enterpriselwa account are immediately signed out of amazon chime and are nolonger able to sign in. to remove the suspension from suspended enterpriselwa account users, use thebatchunsuspenduser action.to sign out users without suspending them, use the logoutuser action.",
	"Method": "BatchSuspendUserResult batchSuspendUser(BatchSuspendUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeBatchSuspendUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PostCommentForPullRequestResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getBeforeCommitId() != null)\r\n        sb.append(\"BeforeCommitId: \").append(getBeforeCommitId()).append(\",\");\r\n    if (getAfterCommitId() != null)\r\n        sb.append(\"AfterCommitId: \").append(getAfterCommitId()).append(\",\");\r\n    if (getBeforeBlobId() != null)\r\n        sb.append(\"BeforeBlobId: \").append(getBeforeBlobId()).append(\",\");\r\n    if (getAfterBlobId() != null)\r\n        sb.append(\"AfterBlobId: \").append(getAfterBlobId()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BlueGreenDeploymentConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTerminateBlueInstancesOnDeploymentSuccess() != null)\r\n        sb.append(\"TerminateBlueInstancesOnDeploymentSuccess: \").append(getTerminateBlueInstancesOnDeploymentSuccess()).append(\",\");\r\n    if (getDeploymentReadyOption() != null)\r\n        sb.append(\"DeploymentReadyOption: \").append(getDeploymentReadyOption()).append(\",\");\r\n    if (getGreenFleetProvisioningOption() != null)\r\n        sb.append(\"GreenFleetProvisioningOption: \").append(getGreenFleetProvisioningOption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchClient.terminateJob",
	"Comment": "terminates a job in a job queue. jobs that are in the starting or running state areterminated, which causes them to transition to failed. jobs that have not progressed to thestarting state are cancelled.",
	"Method": "TerminateJobResult terminateJob(TerminateJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTerminateJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CacheBehaviors.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.S3ArtifactLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getObjectKey() != null)\r\n        sb.append(\"ObjectKey: \").append(getObjectKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DimensionFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.DeleteEnvironmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetTypedLinkFacetInformationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.EncryptionEntity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKeyId() != null)\r\n        sb.append(\"PublicKeyId: \").append(getPublicKeyId()).append(\",\");\r\n    if (getProviderId() != null)\r\n        sb.append(\"ProviderId: \").append(getProviderId()).append(\",\");\r\n    if (getFieldPatterns() != null)\r\n        sb.append(\"FieldPatterns: \").append(getFieldPatterns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.EnableStageTransitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getStageName() != null)\r\n        sb.append(\"StageName: \").append(getStageName()).append(\",\");\r\n    if (getTransitionType() != null)\r\n        sb.append(\"TransitionType: \").append(getTransitionType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.deleteAnalysisScheme",
	"Comment": "deletes an analysis scheme. for more information, see configuring analysis schemes in the amazon cloudsearch developer guide.",
	"Method": "DeleteAnalysisSchemeResult deleteAnalysisScheme(DeleteAnalysisSchemeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAnalysisScheme(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.DescribeEnvironmentStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.Ulimit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHardLimit() != null)\r\n        sb.append(\"HardLimit: \").append(getHardLimit()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSoftLimit() != null)\r\n        sb.append(\"SoftLimit: \").append(getSoftLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.listStackSets",
	"Comment": "returns summary information about stack sets that are associated with the user.",
	"Method": "ListStackSetsResult listStackSets(ListStackSetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListStackSets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PipelineDeclaration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getArtifactStore() != null)\r\n        sb.append(\"ArtifactStore: \").append(getArtifactStore()).append(\",\");\r\n    if (getArtifactStores() != null)\r\n        sb.append(\"ArtifactStores: \").append(getArtifactStores()).append(\",\");\r\n    if (getStages() != null)\r\n        sb.append(\"Stages: \").append(getStages()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeIndexFieldsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getFieldNames() != null)\r\n        sb.append(\"FieldNames: \").append(getFieldNames()).append(\",\");\r\n    if (getDeployed() != null)\r\n        sb.append(\"Deployed: \").append(getDeployed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.BatchGetRepositoriesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositories() != null)\r\n        sb.append(\"Repositories: \").append(getRepositories()).append(\",\");\r\n    if (getRepositoriesNotFound() != null)\r\n        sb.append(\"RepositoriesNotFound: \").append(getRepositoriesNotFound());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarClient.createProject",
	"Comment": "creates a project, including project resources. this action creates a project based on a submitted projectrequest. a set of source code files and a toolchain template file can be included with the project request. ifthese are not provided, an empty project is created.",
	"Method": "CreateProjectResult createProject(CreateProjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateProject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DashboardValidationMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataPath() != null)\r\n        sb.append(\"DataPath: \").append(getDataPath()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listTagsForResource",
	"Comment": "returns tags for a resource. tagging is currently supported only for directories with a limit of 50 tags perdirectory. all 50 tags are returned for a given directory with this api call.",
	"Method": "ListTagsForResourceResult listTagsForResource(ListTagsForResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTagsForResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.EventSelector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReadWriteType() != null)\r\n        sb.append(\"ReadWriteType: \").append(getReadWriteType()).append(\",\");\r\n    if (getIncludeManagementEvents() != null)\r\n        sb.append(\"IncludeManagementEvents: \").append(getIncludeManagementEvents()).append(\",\");\r\n    if (getDataResources() != null)\r\n        sb.append(\"DataResources: \").append(getDataResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetDeploymentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListDistributionsByWebACLIdResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistributionList() != null)\r\n        sb.append(\"DistributionList: \").append(getDistributionList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.AWSCloudHSMV2AsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AWSCloudTrailAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awscloudtrailasync using the current builder configuration.",
	"Method": "AWSCloudTrailAsync build(AwsAsyncClientParams params){\r\n    return new AWSCloudTrailAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.GetTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getChangeSetName() != null)\r\n        sb.append(\"ChangeSetName: \").append(getChangeSetName()).append(\",\");\r\n    if (getTemplateStage() != null)\r\n        sb.append(\"TemplateStage: \").append(getTemplateStage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.UpdateProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeleteGitHubAccountTokenRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTokenName() != null)\r\n        sb.append(\"TokenName: \").append(getTokenName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.intermediate.ShapeModel.removeMemberByC2jName",
	"Comment": "takes in the c2j member name as input and removes if the shape contains a member with thegiven name. return false otherwise.",
	"Method": "boolean removeMemberByC2jName(String memberC2jName,boolean ignoreCase){\r\n    MemberModel model = tryFindMemberModelByC2jName(memberC2jName, ignoreCase);\r\n    return model == null ? false : members.remove(model);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.FieldLevelEncryptionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getQueryArgProfileConfig() != null)\r\n        sb.append(\"QueryArgProfileConfig: \").append(getQueryArgProfileConfig()).append(\",\");\r\n    if (getContentTypeProfileConfig() != null)\r\n        sb.append(\"ContentTypeProfileConfig: \").append(getContentTypeProfileConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateIndexRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getOrderedIndexedAttributeList() != null)\r\n        sb.append(\"OrderedIndexedAttributeList: \").append(getOrderedIndexedAttributeList()).append(\",\");\r\n    if (getIsUnique() != null)\r\n        sb.append(\"IsUnique: \").append(getIsUnique()).append(\",\");\r\n    if (getParentReference() != null)\r\n        sb.append(\"ParentReference: \").append(getParentReference()).append(\",\");\r\n    if (getLinkName() != null)\r\n        sb.append(\"LinkName: \").append(getLinkName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackInstanceSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetId() != null)\r\n        sb.append(\"StackSetId: \").append(getStackSetId()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getAccount() != null)\r\n        sb.append(\"Account: \").append(getAccount()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.LoggingConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getIncludeCookies() != null)\r\n        sb.append(\"IncludeCookies: \").append(getIncludeCookies()).append(\",\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.putActionRevision",
	"Comment": "provides information to aws codepipeline about new revisions to a source.",
	"Method": "PutActionRevisionResult putActionRevision(PutActionRevisionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutActionRevision(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.PutDashboardRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDashboardName() != null)\r\n        sb.append(\"DashboardName: \").append(getDashboardName()).append(\",\");\r\n    if (getDashboardBody() != null)\r\n        sb.append(\"DashboardBody: \").append(getDashboardBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListObjectAttributesResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.RepositoryNameIdPair.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getRepositoryId() != null)\r\n        sb.append(\"RepositoryId: \").append(getRepositoryId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AWSCloudTrailClient.createTrail",
	"Comment": "creates a trail that specifies the settings for delivery of log data to an amazon s3 bucket. a maximum of fivetrails can exist in a region, irrespective of the region in which they were created.",
	"Method": "CreateTrailResult createTrail(CreateTrailRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateTrail(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.ExpressionStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ListResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.NodeOverrides.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodePropertyOverrides() != null)\r\n        sb.append(\"NodePropertyOverrides: \").append(getNodePropertyOverrides());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetAppliedSchemaVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAppliedSchemaArn() != null)\r\n        sb.append(\"AppliedSchemaArn: \").append(getAppliedSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.KeyPairIds.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetApplicationRevisionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ContainerProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getVcpus() != null)\r\n        sb.append(\"Vcpus: \").append(getVcpus()).append(\",\");\r\n    if (getMemory() != null)\r\n        sb.append(\"Memory: \").append(getMemory()).append(\",\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getJobRoleArn() != null)\r\n        sb.append(\"JobRoleArn: \").append(getJobRoleArn()).append(\",\");\r\n    if (getVolumes() != null)\r\n        sb.append(\"Volumes: \").append(getVolumes()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getMountPoints() != null)\r\n        sb.append(\"MountPoints: \").append(getMountPoints()).append(\",\");\r\n    if (getReadonlyRootFilesystem() != null)\r\n        sb.append(\"ReadonlyRootFilesystem: \").append(getReadonlyRootFilesystem()).append(\",\");\r\n    if (getPrivileged() != null)\r\n        sb.append(\"Privileged: \").append(getPrivileged()).append(\",\");\r\n    if (getUlimits() != null)\r\n        sb.append(\"Ulimits: \").append(getUlimits()).append(\",\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.TemplateParameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterKey() != null)\r\n        sb.append(\"ParameterKey: \").append(getParameterKey()).append(\",\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getNoEcho() != null)\r\n        sb.append(\"NoEcho: \").append(getNoEcho()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CachedMethods.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.CostTypes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIncludeTax() != null)\r\n        sb.append(\"IncludeTax: \").append(getIncludeTax()).append(\",\");\r\n    if (getIncludeSubscription() != null)\r\n        sb.append(\"IncludeSubscription: \").append(getIncludeSubscription()).append(\",\");\r\n    if (getUseBlended() != null)\r\n        sb.append(\"UseBlended: \").append(getUseBlended()).append(\",\");\r\n    if (getIncludeRefund() != null)\r\n        sb.append(\"IncludeRefund: \").append(getIncludeRefund()).append(\",\");\r\n    if (getIncludeCredit() != null)\r\n        sb.append(\"IncludeCredit: \").append(getIncludeCredit()).append(\",\");\r\n    if (getIncludeUpfront() != null)\r\n        sb.append(\"IncludeUpfront: \").append(getIncludeUpfront()).append(\",\");\r\n    if (getIncludeRecurring() != null)\r\n        sb.append(\"IncludeRecurring: \").append(getIncludeRecurring()).append(\",\");\r\n    if (getIncludeOtherSubscription() != null)\r\n        sb.append(\"IncludeOtherSubscription: \").append(getIncludeOtherSubscription()).append(\",\");\r\n    if (getIncludeSupport() != null)\r\n        sb.append(\"IncludeSupport: \").append(getIncludeSupport()).append(\",\");\r\n    if (getIncludeDiscount() != null)\r\n        sb.append(\"IncludeDiscount: \").append(getIncludeDiscount()).append(\",\");\r\n    if (getUseAmortized() != null)\r\n        sb.append(\"UseAmortized: \").append(getUseAmortized());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchGetObjectInformationResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaFacets() != null)\r\n        sb.append(\"SchemaFacets: \").append(getSchemaFacets()).append(\",\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.SymbolicLink.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlobId() != null)\r\n        sb.append(\"BlobId: \").append(getBlobId()).append(\",\");\r\n    if (getAbsolutePath() != null)\r\n        sb.append(\"AbsolutePath: \").append(getAbsolutePath()).append(\",\");\r\n    if (getRelativePath() != null)\r\n        sb.append(\"RelativePath: \").append(getRelativePath()).append(\",\");\r\n    if (getFileMode() != null)\r\n        sb.append(\"FileMode: \").append(getFileMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClient.deleteAlarms",
	"Comment": "deletes the specified alarms. in the event of an error, no alarms are deleted.",
	"Method": "DeleteAlarmsResult deleteAlarms(DeleteAlarmsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAlarms(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListApplicationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DistributionConfigWithTags.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistributionConfig() != null)\r\n        sb.append(\"DistributionConfig: \").append(getDistributionConfig()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ActionTypeId.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getOwner() != null)\r\n        sb.append(\"Owner: \").append(getOwner()).append(\",\");\r\n    if (getProvider() != null)\r\n        sb.append(\"Provider: \").append(getProvider()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.emitters.tasks.WaitersGeneratorTasks.createWaiterClassTasks",
	"Comment": "constructs the data model and submits tasks for every generating synchronous waiter and asynchronous waiter for each waiterin the intermediate model.",
	"Method": "List<GeneratorTask> createWaiterClassTasks(){\r\n    Metadata metadata = model.getMetadata();\r\n    final String className = metadata.getSyncInterface() + \"Waiters\";\r\n    Map<String, Object> dataModel = ImmutableMapParameter.of(\"fileHeader\", model.getFileHeader(), \"className\", className, \"waiters\", model.getWaiters(), \"operation\", model.getOperations(), \"metadata\", metadata);\r\n    return Collections.singletonList(new FreemarkerGeneratorTask(waiterClassDir, className, freemarker.getWaiterTemplate(), dataModel));\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ActionContext.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.enableDirectory",
	"Comment": "enables the specified directory. only disabled directories can be enabled. once enabled, the directory can thenbe read and written to.",
	"Method": "EnableDirectoryResult enableDirectory(EnableDirectoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeEnableDirectory(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AbstractAmazonCloudFormationAsync.estimateTemplateCostAsync",
	"Comment": "simplified method form for invoking the estimatetemplatecost operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<EstimateTemplateCostResult> estimateTemplateCostAsync(EstimateTemplateCostRequest request,java.util.concurrent.Future<EstimateTemplateCostResult> estimateTemplateCostAsync,EstimateTemplateCostRequest request,com.amazonaws.handlers.AsyncHandler<EstimateTemplateCostRequest, EstimateTemplateCostResult> asyncHandler,java.util.concurrent.Future<EstimateTemplateCostResult> estimateTemplateCostAsync,java.util.concurrent.Future<EstimateTemplateCostResult> estimateTemplateCostAsync,com.amazonaws.handlers.AsyncHandler<EstimateTemplateCostRequest, EstimateTemplateCostResult> asyncHandler){\r\n    return estimateTemplateCostAsync(new EstimateTemplateCostRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateInvalidationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistributionId() != null)\r\n        sb.append(\"DistributionId: \").append(getDistributionId()).append(\",\");\r\n    if (getInvalidationBatch() != null)\r\n        sb.append(\"InvalidationBatch: \").append(getInvalidationBatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.MetricDataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel()).append(\",\");\r\n    if (getTimestamps() != null)\r\n        sb.append(\"Timestamps: \").append(getTimestamps()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getMessages() != null)\r\n        sb.append(\"Messages: \").append(getMessages());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.DataResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PollForThirdPartyJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionTypeId() != null)\r\n        sb.append(\"ActionTypeId: \").append(getActionTypeId()).append(\",\");\r\n    if (getMaxBatchSize() != null)\r\n        sb.append(\"MaxBatchSize: \").append(getMaxBatchSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClient.listCuratedEnvironmentImages",
	"Comment": "gets information about docker images that are managed by aws codebuild.",
	"Method": "ListCuratedEnvironmentImagesResult listCuratedEnvironmentImages(ListCuratedEnvironmentImagesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListCuratedEnvironmentImages(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListFacetAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.GetPipelineExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getPipelineExecutionId() != null)\r\n        sb.append(\"PipelineExecutionId: \").append(getPipelineExecutionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.waiters.DescribeChangeSetFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeChangeSetResult apply(DescribeChangeSetRequest describeChangeSetRequest){\r\n    return client.describeChangeSet(describeChangeSetRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DescribeHsmRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmArn() != null)\r\n        sb.append(\"HsmArn: \").append(getHsmArn()).append(\",\");\r\n    if (getHsmSerialNumber() != null)\r\n        sb.append(\"HsmSerialNumber: \").append(getHsmSerialNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.deleteDirectory",
	"Comment": "deletes a directory. only disabled directories can be deleted. a deleted directory cannot be undone. exerciseextreme caution when deleting directories.",
	"Method": "DeleteDirectoryResult deleteDirectory(DeleteDirectoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDirectory(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.UpdateApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.AssociateTeamMemberResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpdateLinkAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getTypedLinkSpecifier() != null)\r\n        sb.append(\"TypedLinkSpecifier: \").append(getTypedLinkSpecifier()).append(\",\");\r\n    if (getAttributeUpdates() != null)\r\n        sb.append(\"AttributeUpdates: \").append(getAttributeUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DeleteHsmResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmId() != null)\r\n        sb.append(\"HsmId: \").append(getHsmId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.TrustedSigners.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.getJobDetails",
	"Comment": "returns information about a job. only used for custom actions.when this api is called, aws codepipeline returns temporary credentials for the amazon s3 bucket used to storeartifacts for the pipeline, if the action requires access to that amazon s3 bucket for input or output artifacts.additionally, this api returns any secret values defined for the action.",
	"Method": "GetJobDetailsResult getJobDetails(GetJobDetailsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetJobDetails(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackDriftDetectionStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackDriftDetectionId() != null)\r\n        sb.append(\"StackDriftDetectionId: \").append(getStackDriftDetectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttributeKey.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getFacetName() != null)\r\n        sb.append(\"FacetName: \").append(getFacetName()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.PutMetricDataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getMetricData() != null)\r\n        sb.append(\"MetricData: \").append(getMetricData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.UpdateTrailRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getS3BucketName() != null)\r\n        sb.append(\"S3BucketName: \").append(getS3BucketName()).append(\",\");\r\n    if (getS3KeyPrefix() != null)\r\n        sb.append(\"S3KeyPrefix: \").append(getS3KeyPrefix()).append(\",\");\r\n    if (getSnsTopicName() != null)\r\n        sb.append(\"SnsTopicName: \").append(getSnsTopicName()).append(\",\");\r\n    if (getIncludeGlobalServiceEvents() != null)\r\n        sb.append(\"IncludeGlobalServiceEvents: \").append(getIncludeGlobalServiceEvents()).append(\",\");\r\n    if (getIsMultiRegionTrail() != null)\r\n        sb.append(\"IsMultiRegionTrail: \").append(getIsMultiRegionTrail()).append(\",\");\r\n    if (getEnableLogFileValidation() != null)\r\n        sb.append(\"EnableLogFileValidation: \").append(getEnableLogFileValidation()).append(\",\");\r\n    if (getCloudWatchLogsLogGroupArn() != null)\r\n        sb.append(\"CloudWatchLogsLogGroupArn: \").append(getCloudWatchLogsLogGroupArn()).append(\",\");\r\n    if (getCloudWatchLogsRoleArn() != null)\r\n        sb.append(\"CloudWatchLogsRoleArn: \").append(getCloudWatchLogsRoleArn()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getIsOrganizationTrail() != null)\r\n        sb.append(\"IsOrganizationTrail: \").append(getIsOrganizationTrail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListGitHubAccountTokenNamesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.describeIdentityPool",
	"Comment": "gets details about a particular identity pool, including the pool name, id description, creation date, andcurrent number of users.you must use aws developer credentials to call this api.",
	"Method": "DescribeIdentityPoolResult describeIdentityPool(DescribeIdentityPoolRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeIdentityPool(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetFieldLevelEncryptionConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.FacetAttributeReference.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetFacetName() != null)\r\n        sb.append(\"TargetFacetName: \").append(getTargetFacetName()).append(\",\");\r\n    if (getTargetAttributeName() != null)\r\n        sb.append(\"TargetAttributeName: \").append(getTargetAttributeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.describeChangeSet",
	"Comment": "returns the inputs for the change set and a list of changes that aws cloudformation will make if you execute thechange set. for more information, see updating stacks using change sets in the aws cloudformation user guide.",
	"Method": "DescribeChangeSetResult describeChangeSet(DescribeChangeSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeChangeSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.OriginGroups.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.Job.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getNonce() != null)\r\n        sb.append(\"Nonce: \").append(getNonce()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.AccountGateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.deleteRepository",
	"Comment": "deletes a repository. if a specified repository was already deleted, a null repository id will be returned.deleting a repository also deletes all associated objects and metadata. after a repository is deleted, all futurepush calls to the deleted repository will fail.",
	"Method": "DeleteRepositoryResult deleteRepository(DeleteRepositoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteRepository(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DescribeJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DeleteLunaClientResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.AlarmConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getIgnorePollAlarmFailure() != null)\r\n        sb.append(\"IgnorePollAlarmFailure: \").append(getIgnorePollAlarmFailure()).append(\",\");\r\n    if (getAlarms() != null)\r\n        sb.append(\"Alarms: \").append(getAlarms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.AcknowledgeThirdPartyJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getNonce() != null)\r\n        sb.append(\"Nonce: \").append(getNonce()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DetachObjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getParentReference() != null)\r\n        sb.append(\"ParentReference: \").append(getParentReference()).append(\",\");\r\n    if (getLinkName() != null)\r\n        sb.append(\"LinkName: \").append(getLinkName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.EC2TagFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStackResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.QueryArgProfiles.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetOnPremisesInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceNames() != null)\r\n        sb.append(\"InstanceNames: \").append(getInstanceNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Tags.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.internal.ImmutableMapParameter.of",
	"Comment": "returns an immutablemapparameter instance containing five entries.",
	"Method": "ImmutableMapParameter<K, V> of(K k0,V v0,ImmutableMapParameter<K, V> of,K k0,V v0,K k1,V v1,ImmutableMapParameter<K, V> of,K k0,V v0,K k1,V v1,K k2,V v2,ImmutableMapParameter<K, V> of,K k0,V v0,K k1,V v1,K k2,V v2,K k3,V v3,ImmutableMapParameter<K, V> of,K k0,V v0,K k1,V v1,K k2,V v2,K k3,V v3,K k4,V v4){\r\n    Map<K, V> map = new HashMap<K, V>();\r\n    putAndWarnDuplicateKeys(map, k0, v0);\r\n    putAndWarnDuplicateKeys(map, k1, v1);\r\n    putAndWarnDuplicateKeys(map, k2, v2);\r\n    putAndWarnDuplicateKeys(map, k3, v3);\r\n    putAndWarnDuplicateKeys(map, k4, v4);\r\n    return new ImmutableMapParameter<K, V>(map);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ProjectSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId()).append(\",\");\r\n    if (getProjectArn() != null)\r\n        sb.append(\"ProjectArn: \").append(getProjectArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.LinkAttributeAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeActionType() != null)\r\n        sb.append(\"AttributeActionType: \").append(getAttributeActionType()).append(\",\");\r\n    if (getAttributeUpdateValue() != null)\r\n        sb.append(\"AttributeUpdateValue: \").append(getAttributeUpdateValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.CreateStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getTemplateURL() != null)\r\n        sb.append(\"TemplateURL: \").append(getTemplateURL()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getDisableRollback() != null)\r\n        sb.append(\"DisableRollback: \").append(getDisableRollback()).append(\",\");\r\n    if (getRollbackConfiguration() != null)\r\n        sb.append(\"RollbackConfiguration: \").append(getRollbackConfiguration()).append(\",\");\r\n    if (getTimeoutInMinutes() != null)\r\n        sb.append(\"TimeoutInMinutes: \").append(getTimeoutInMinutes()).append(\",\");\r\n    if (getNotificationARNs() != null)\r\n        sb.append(\"NotificationARNs: \").append(getNotificationARNs()).append(\",\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getResourceTypes() != null)\r\n        sb.append(\"ResourceTypes: \").append(getResourceTypes()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getOnFailure() != null)\r\n        sb.append(\"OnFailure: \").append(getOnFailure()).append(\",\");\r\n    if (getStackPolicyBody() != null)\r\n        sb.append(\"StackPolicyBody: \").append(getStackPolicyBody()).append(\",\");\r\n    if (getStackPolicyURL() != null)\r\n        sb.append(\"StackPolicyURL: \").append(getStackPolicyURL()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getEnableTerminationProtection() != null)\r\n        sb.append(\"EnableTerminationProtection: \").append(getEnableTerminationProtection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.AutoScalingGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getHook() != null)\r\n        sb.append(\"Hook: \").append(getHook());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.waiters.AmazonCloudFormationWaiters.stackExists",
	"Comment": "builds a stackexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeStacksRequest> stackExists(){\r\n    return new WaiterBuilder<DescribeStacksRequest, DescribeStacksResult>().withSdkFunction(new DescribeStacksFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor(WaiterState.SUCCESS), new StackExists.IsValidationErrorMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(20), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.PutLifecycleEventHookExecutionStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getLifecycleEventHookExecutionId() != null)\r\n        sb.append(\"LifecycleEventHookExecutionId: \").append(getLifecycleEventHookExecutionId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchClient.deleteJobQueue",
	"Comment": "deletes the specified job queue. you must first disable submissions for a queue with the updatejobqueueoperation. all jobs in the queue are terminated when you delete a job queue.it is not necessary to disassociate compute environments from a queue before submitting adeletejobqueue request.",
	"Method": "DeleteJobQueueResult deleteJobQueue(DeleteJobQueueRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteJobQueue(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployAsyncClient.listApplicationsAsync",
	"Comment": "simplified method form for invoking the listapplications operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListApplicationsResult> listApplicationsAsync(ListApplicationsRequest request,java.util.concurrent.Future<ListApplicationsResult> listApplicationsAsync,ListApplicationsRequest request,com.amazonaws.handlers.AsyncHandler<ListApplicationsRequest, ListApplicationsResult> asyncHandler,java.util.concurrent.Future<ListApplicationsResult> listApplicationsAsync,java.util.concurrent.Future<ListApplicationsResult> listApplicationsAsync,com.amazonaws.handlers.AsyncHandler<ListApplicationsRequest, ListApplicationsResult> asyncHandler){\r\n    return listApplicationsAsync(new ListApplicationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CacheBehavior.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPathPattern() != null)\r\n        sb.append(\"PathPattern: \").append(getPathPattern()).append(\",\");\r\n    if (getTargetOriginId() != null)\r\n        sb.append(\"TargetOriginId: \").append(getTargetOriginId()).append(\",\");\r\n    if (getForwardedValues() != null)\r\n        sb.append(\"ForwardedValues: \").append(getForwardedValues()).append(\",\");\r\n    if (getTrustedSigners() != null)\r\n        sb.append(\"TrustedSigners: \").append(getTrustedSigners()).append(\",\");\r\n    if (getViewerProtocolPolicy() != null)\r\n        sb.append(\"ViewerProtocolPolicy: \").append(getViewerProtocolPolicy()).append(\",\");\r\n    if (getMinTTL() != null)\r\n        sb.append(\"MinTTL: \").append(getMinTTL()).append(\",\");\r\n    if (getAllowedMethods() != null)\r\n        sb.append(\"AllowedMethods: \").append(getAllowedMethods()).append(\",\");\r\n    if (getSmoothStreaming() != null)\r\n        sb.append(\"SmoothStreaming: \").append(getSmoothStreaming()).append(\",\");\r\n    if (getDefaultTTL() != null)\r\n        sb.append(\"DefaultTTL: \").append(getDefaultTTL()).append(\",\");\r\n    if (getMaxTTL() != null)\r\n        sb.append(\"MaxTTL: \").append(getMaxTTL()).append(\",\");\r\n    if (getCompress() != null)\r\n        sb.append(\"Compress: \").append(getCompress()).append(\",\");\r\n    if (getLambdaFunctionAssociations() != null)\r\n        sb.append(\"LambdaFunctionAssociations: \").append(getLambdaFunctionAssociations()).append(\",\");\r\n    if (getFieldLevelEncryptionId() != null)\r\n        sb.append(\"FieldLevelEncryptionId: \").append(getFieldLevelEncryptionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.DeleteIdentityPoolResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DetachFromIndexResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetachedObjectIdentifier() != null)\r\n        sb.append(\"DetachedObjectIdentifier: \").append(getDetachedObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListPolicyAttachments.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyReference() != null)\r\n        sb.append(\"PolicyReference: \").append(getPolicyReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeleteGitHubAccountTokenResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTokenName() != null)\r\n        sb.append(\"TokenName: \").append(getTokenName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.BuildArtifacts.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getSha256sum() != null)\r\n        sb.append(\"Sha256sum: \").append(getSha256sum()).append(\",\");\r\n    if (getMd5sum() != null)\r\n        sb.append(\"Md5sum: \").append(getMd5sum()).append(\",\");\r\n    if (getOverrideArtifactName() != null)\r\n        sb.append(\"OverrideArtifactName: \").append(getOverrideArtifactName()).append(\",\");\r\n    if (getEncryptionDisabled() != null)\r\n        sb.append(\"EncryptionDisabled: \").append(getEncryptionDisabled()).append(\",\");\r\n    if (getArtifactIdentifier() != null)\r\n        sb.append(\"ArtifactIdentifier: \").append(getArtifactIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.DeleteEnvironmentMembershipRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchDetachObjectResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetachedObjectIdentifier() != null)\r\n        sb.append(\"DetachedObjectIdentifier: \").append(getDetachedObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchClient.deleteComputeEnvironment",
	"Comment": "deletes an aws batch compute environment.before you can delete a compute environment, you must set its state to disabled with theupdatecomputeenvironment api operation and disassociate it from any job queues with theupdatejobqueue api operation.",
	"Method": "DeleteComputeEnvironmentResult deleteComputeEnvironment(DeleteComputeEnvironmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteComputeEnvironment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.CreateProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getSecondarySources() != null)\r\n        sb.append(\"SecondarySources: \").append(getSecondarySources()).append(\",\");\r\n    if (getArtifacts() != null)\r\n        sb.append(\"Artifacts: \").append(getArtifacts()).append(\",\");\r\n    if (getSecondaryArtifacts() != null)\r\n        sb.append(\"SecondaryArtifacts: \").append(getSecondaryArtifacts()).append(\",\");\r\n    if (getCache() != null)\r\n        sb.append(\"Cache: \").append(getCache()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getTimeoutInMinutes() != null)\r\n        sb.append(\"TimeoutInMinutes: \").append(getTimeoutInMinutes()).append(\",\");\r\n    if (getQueuedTimeoutInMinutes() != null)\r\n        sb.append(\"QueuedTimeoutInMinutes: \").append(getQueuedTimeoutInMinutes()).append(\",\");\r\n    if (getEncryptionKey() != null)\r\n        sb.append(\"EncryptionKey: \").append(getEncryptionKey()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getBadgeEnabled() != null)\r\n        sb.append(\"BadgeEnabled: \").append(getBadgeEnabled()).append(\",\");\r\n    if (getLogsConfig() != null)\r\n        sb.append(\"LogsConfig: \").append(getLogsConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DetachObjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetachedObjectIdentifier() != null)\r\n        sb.append(\"DetachedObjectIdentifier: \").append(getDetachedObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.GetTemplateSummaryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getCapabilitiesReason() != null)\r\n        sb.append(\"CapabilitiesReason: \").append(getCapabilitiesReason()).append(\",\");\r\n    if (getResourceTypes() != null)\r\n        sb.append(\"ResourceTypes: \").append(getResourceTypes()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata()).append(\",\");\r\n    if (getDeclaredTransforms() != null)\r\n        sb.append(\"DeclaredTransforms: \").append(getDeclaredTransforms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getStackInstanceAccount() != null)\r\n        sb.append(\"StackInstanceAccount: \").append(getStackInstanceAccount()).append(\",\");\r\n    if (getStackInstanceRegion() != null)\r\n        sb.append(\"StackInstanceRegion: \").append(getStackInstanceRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.listStackResources",
	"Comment": "returns descriptions of all resources of the specified stack.for deleted stacks, liststackresources returns resource information for up to 90 days after the stack has beendeleted.",
	"Method": "ListStackResourcesResult listStackResources(ListStackResourcesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListStackResources(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.AWSCloudHSMV2Client.deleteCluster",
	"Comment": "deletes the specified aws cloudhsm cluster. before you can delete a cluster, you must delete all hsms in thecluster. to see if the cluster contains any hsms, use describeclusters. to delete an hsm, usedeletehsm.",
	"Method": "DeleteClusterResult deleteCluster(DeleteClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.DeleteCustomActionTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateFieldLevelEncryptionConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionConfig() != null)\r\n        sb.append(\"FieldLevelEncryptionConfig: \").append(getFieldLevelEncryptionConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awscodebuildasync using the current builder configuration.",
	"Method": "AWSCodeBuildAsync build(AwsAsyncClientParams params){\r\n    return new AWSCodeBuildAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.unlinkDeveloperIdentity",
	"Comment": "unlinks a developeruseridentifier from an existing identity. unlinked developer users will beconsidered new identities next time they are seen. if, for a given cognito identity, you remove all federatedidentities as well as the developer user identifier, the cognito identity becomes inaccessible.you must use aws developer credentials to call this api.",
	"Method": "UnlinkDeveloperIdentityResult unlinkDeveloperIdentity(UnlinkDeveloperIdentityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUnlinkDeveloperIdentity(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DescribeClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusters() != null)\r\n        sb.append(\"Clusters: \").append(getClusters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.JobQueueDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobQueueName() != null)\r\n        sb.append(\"JobQueueName: \").append(getJobQueueName()).append(\",\");\r\n    if (getJobQueueArn() != null)\r\n        sb.append(\"JobQueueArn: \").append(getJobQueueArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getComputeEnvironmentOrder() != null)\r\n        sb.append(\"ComputeEnvironmentOrder: \").append(getComputeEnvironmentOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.AcknowledgeJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.listEnvironments",
	"Comment": "gets a list of aws cloud9 development environment identifiers.",
	"Method": "ListEnvironmentsResult listEnvironments(ListEnvironmentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListEnvironments(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.PublishSchemaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevelopmentSchemaArn() != null)\r\n        sb.append(\"DevelopmentSchemaArn: \").append(getDevelopmentSchemaArn()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getMinorVersion() != null)\r\n        sb.append(\"MinorVersion: \").append(getMinorVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeSuggestersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getSuggesterNames() != null)\r\n        sb.append(\"SuggesterNames: \").append(getSuggesterNames()).append(\",\");\r\n    if (getDeployed() != null)\r\n        sb.append(\"Deployed: \").append(getDeployed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.resetPersonalPIN",
	"Comment": "resets the personal meeting pin for the specified user on an amazon chime account. returns the user objectwith the updated personal meeting pin.",
	"Method": "ResetPersonalPINResult resetPersonalPIN(ResetPersonalPINRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeResetPersonalPIN(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.FieldPatterns.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployAsyncClient.listDeploymentConfigsAsync",
	"Comment": "simplified method form for invoking the listdeploymentconfigs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListDeploymentConfigsResult> listDeploymentConfigsAsync(ListDeploymentConfigsRequest request,java.util.concurrent.Future<ListDeploymentConfigsResult> listDeploymentConfigsAsync,ListDeploymentConfigsRequest request,com.amazonaws.handlers.AsyncHandler<ListDeploymentConfigsRequest, ListDeploymentConfigsResult> asyncHandler,java.util.concurrent.Future<ListDeploymentConfigsResult> listDeploymentConfigsAsync,java.util.concurrent.Future<ListDeploymentConfigsResult> listDeploymentConfigsAsync,com.amazonaws.handlers.AsyncHandler<ListDeploymentConfigsRequest, ListDeploymentConfigsResult> asyncHandler){\r\n    return listDeploymentConfigsAsync(new ListDeploymentConfigsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ActionRevision.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getRevisionChangeId() != null)\r\n        sb.append(\"RevisionChangeId: \").append(getRevisionChangeId()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetObjectAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel()).append(\",\");\r\n    if (getSchemaFacet() != null)\r\n        sb.append(\"SchemaFacet: \").append(getSchemaFacet()).append(\",\");\r\n    if (getAttributeNames() != null)\r\n        sb.append(\"AttributeNames: \").append(getAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.UpdateBudgetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getNewBudget() != null)\r\n        sb.append(\"NewBudget: \").append(getNewBudget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchClient.submitJob",
	"Comment": "submits an aws batch job from a job definition. parameters specified during submitjob override parametersdefined in the job definition.",
	"Method": "SubmitJobResult submitJob(SubmitJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSubmitJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.CreateJobQueueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobQueueName() != null)\r\n        sb.append(\"JobQueueName: \").append(getJobQueueName()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getComputeEnvironmentOrder() != null)\r\n        sb.append(\"ComputeEnvironmentOrder: \").append(getComputeEnvironmentOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DeleteAnalysisSchemeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAnalysisScheme() != null)\r\n        sb.append(\"AnalysisScheme: \").append(getAnalysisScheme());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.SuggestModel.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuery() != null)\r\n        sb.append(\"Query: \").append(getQuery()).append(\",\");\r\n    if (getFound() != null)\r\n        sb.append(\"Found: \").append(getFound()).append(\",\");\r\n    if (getSuggestions() != null)\r\n        sb.append(\"Suggestions: \").append(getSuggestions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listPublishedSchemaArns",
	"Comment": "lists the major version families of each published schema. if a major version arn is provided asschemaarn, the minor version revisions in that family are listed instead.",
	"Method": "ListPublishedSchemaArnsResult listPublishedSchemaArns(ListPublishedSchemaArnsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListPublishedSchemaArns(request);\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.CloudWatchMetricConfig.setCloudWatchEndPoint",
	"Comment": "sets the end point of amazoncloudwatch to upload the metrics.",
	"Method": "void setCloudWatchEndPoint(String cloudWatchEndPoint){\r\n    this.cloudWatchEndPoint = cloudWatchEndPoint;\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.UpdateUserProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getLastModifiedTimestamp() != null)\r\n        sb.append(\"LastModifiedTimestamp: \").append(getLastModifiedTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.UpdateBudgetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.waiters.AmazonCloudFormationWaiters.stackDeleteComplete",
	"Comment": "builds a stackdeletecomplete waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeStacksRequest> stackDeleteComplete(){\r\n    return new WaiterBuilder<DescribeStacksRequest, DescribeStacksResult>().withSdkFunction(new DescribeStacksFunction(client)).withAcceptors(new StackDeleteComplete.IsDELETE_COMPLETEMatcher(), new StackDeleteComplete.IsValidationErrorMatcher(), new StackDeleteComplete.IsDELETE_FAILEDMatcher(), new StackDeleteComplete.IsCREATE_FAILEDMatcher(), new StackDeleteComplete.IsROLLBACK_FAILEDMatcher(), new StackDeleteComplete.IsUPDATE_ROLLBACK_FAILEDMatcher(), new StackDeleteComplete.IsUPDATE_ROLLBACK_IN_PROGRESSMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(120), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.GetIdentityPoolRolesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Invalidation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getInvalidationBatch() != null)\r\n        sb.append(\"InvalidationBatch: \").append(getInvalidationBatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.File.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlobId() != null)\r\n        sb.append(\"BlobId: \").append(getBlobId()).append(\",\");\r\n    if (getAbsolutePath() != null)\r\n        sb.append(\"AbsolutePath: \").append(getAbsolutePath()).append(\",\");\r\n    if (getRelativePath() != null)\r\n        sb.append(\"RelativePath: \").append(getRelativePath()).append(\",\");\r\n    if (getFileMode() != null)\r\n        sb.append(\"FileMode: \").append(getFileMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.getObjectAttributes",
	"Comment": "retrieves attributes within a facet that are associated with an object.",
	"Method": "GetObjectAttributesResult getObjectAttributes(GetObjectAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetObjectAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DeleteSuggesterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getSuggesterName() != null)\r\n        sb.append(\"SuggesterName: \").append(getSuggesterName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.PutMetricAlarmRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlarmName() != null)\r\n        sb.append(\"AlarmName: \").append(getAlarmName()).append(\",\");\r\n    if (getAlarmDescription() != null)\r\n        sb.append(\"AlarmDescription: \").append(getAlarmDescription()).append(\",\");\r\n    if (getActionsEnabled() != null)\r\n        sb.append(\"ActionsEnabled: \").append(getActionsEnabled()).append(\",\");\r\n    if (getOKActions() != null)\r\n        sb.append(\"OKActions: \").append(getOKActions()).append(\",\");\r\n    if (getAlarmActions() != null)\r\n        sb.append(\"AlarmActions: \").append(getAlarmActions()).append(\",\");\r\n    if (getInsufficientDataActions() != null)\r\n        sb.append(\"InsufficientDataActions: \").append(getInsufficientDataActions()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getStatistic() != null)\r\n        sb.append(\"Statistic: \").append(getStatistic()).append(\",\");\r\n    if (getExtendedStatistic() != null)\r\n        sb.append(\"ExtendedStatistic: \").append(getExtendedStatistic()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getPeriod() != null)\r\n        sb.append(\"Period: \").append(getPeriod()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit()).append(\",\");\r\n    if (getEvaluationPeriods() != null)\r\n        sb.append(\"EvaluationPeriods: \").append(getEvaluationPeriods()).append(\",\");\r\n    if (getDatapointsToAlarm() != null)\r\n        sb.append(\"DatapointsToAlarm: \").append(getDatapointsToAlarm()).append(\",\");\r\n    if (getThreshold() != null)\r\n        sb.append(\"Threshold: \").append(getThreshold()).append(\",\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getTreatMissingData() != null)\r\n        sb.append(\"TreatMissingData: \").append(getTreatMissingData()).append(\",\");\r\n    if (getEvaluateLowSampleCountPercentile() != null)\r\n        sb.append(\"EvaluateLowSampleCountPercentile: \").append(getEvaluateLowSampleCountPercentile()).append(\",\");\r\n    if (getMetrics() != null)\r\n        sb.append(\"Metrics: \").append(getMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.ListTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceIdList() != null)\r\n        sb.append(\"ResourceIdList: \").append(getResourceIdList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.LogoutUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClient.deleteSourceCredentials",
	"Comment": "deletes a set of github, github enterprise, or bitbucket source credentials.",
	"Method": "DeleteSourceCredentialsResult deleteSourceCredentials(DeleteSourceCredentialsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteSourceCredentials(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListAttachedIndicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getTargetReference() != null)\r\n        sb.append(\"TargetReference: \").append(getTargetReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdateFieldLevelEncryptionConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryption() != null)\r\n        sb.append(\"FieldLevelEncryption: \").append(getFieldLevelEncryption()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazoncloudformation using the current builder configuration.",
	"Method": "AmazonCloudFormation build(AwsSyncClientParams params){\r\n    return new AmazonCloudFormationClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.GetTrailStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIsLogging() != null)\r\n        sb.append(\"IsLogging: \").append(getIsLogging()).append(\",\");\r\n    if (getLatestDeliveryError() != null)\r\n        sb.append(\"LatestDeliveryError: \").append(getLatestDeliveryError()).append(\",\");\r\n    if (getLatestNotificationError() != null)\r\n        sb.append(\"LatestNotificationError: \").append(getLatestNotificationError()).append(\",\");\r\n    if (getLatestDeliveryTime() != null)\r\n        sb.append(\"LatestDeliveryTime: \").append(getLatestDeliveryTime()).append(\",\");\r\n    if (getLatestNotificationTime() != null)\r\n        sb.append(\"LatestNotificationTime: \").append(getLatestNotificationTime()).append(\",\");\r\n    if (getStartLoggingTime() != null)\r\n        sb.append(\"StartLoggingTime: \").append(getStartLoggingTime()).append(\",\");\r\n    if (getStopLoggingTime() != null)\r\n        sb.append(\"StopLoggingTime: \").append(getStopLoggingTime()).append(\",\");\r\n    if (getLatestCloudWatchLogsDeliveryError() != null)\r\n        sb.append(\"LatestCloudWatchLogsDeliveryError: \").append(getLatestCloudWatchLogsDeliveryError()).append(\",\");\r\n    if (getLatestCloudWatchLogsDeliveryTime() != null)\r\n        sb.append(\"LatestCloudWatchLogsDeliveryTime: \").append(getLatestCloudWatchLogsDeliveryTime()).append(\",\");\r\n    if (getLatestDigestDeliveryTime() != null)\r\n        sb.append(\"LatestDigestDeliveryTime: \").append(getLatestDigestDeliveryTime()).append(\",\");\r\n    if (getLatestDigestDeliveryError() != null)\r\n        sb.append(\"LatestDigestDeliveryError: \").append(getLatestDigestDeliveryError()).append(\",\");\r\n    if (getLatestDeliveryAttemptTime() != null)\r\n        sb.append(\"LatestDeliveryAttemptTime: \").append(getLatestDeliveryAttemptTime()).append(\",\");\r\n    if (getLatestNotificationAttemptTime() != null)\r\n        sb.append(\"LatestNotificationAttemptTime: \").append(getLatestNotificationAttemptTime()).append(\",\");\r\n    if (getLatestNotificationAttemptSucceeded() != null)\r\n        sb.append(\"LatestNotificationAttemptSucceeded: \").append(getLatestNotificationAttemptSucceeded()).append(\",\");\r\n    if (getLatestDeliveryAttemptSucceeded() != null)\r\n        sb.append(\"LatestDeliveryAttemptSucceeded: \").append(getLatestDeliveryAttemptSucceeded()).append(\",\");\r\n    if (getTimeLoggingStarted() != null)\r\n        sb.append(\"TimeLoggingStarted: \").append(getTimeLoggingStarted()).append(\",\");\r\n    if (getTimeLoggingStopped() != null)\r\n        sb.append(\"TimeLoggingStopped: \").append(getTimeLoggingStopped());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AbstractAmazonCodeDeployAsync.listOnPremisesInstancesAsync",
	"Comment": "simplified method form for invoking the listonpremisesinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListOnPremisesInstancesResult> listOnPremisesInstancesAsync(ListOnPremisesInstancesRequest request,java.util.concurrent.Future<ListOnPremisesInstancesResult> listOnPremisesInstancesAsync,ListOnPremisesInstancesRequest request,com.amazonaws.handlers.AsyncHandler<ListOnPremisesInstancesRequest, ListOnPremisesInstancesResult> asyncHandler,java.util.concurrent.Future<ListOnPremisesInstancesResult> listOnPremisesInstancesAsync,java.util.concurrent.Future<ListOnPremisesInstancesResult> listOnPremisesInstancesAsync,com.amazonaws.handlers.AsyncHandler<ListOnPremisesInstancesRequest, ListOnPremisesInstancesResult> asyncHandler){\r\n    return listOnPremisesInstancesAsync(new ListOnPremisesInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeAvailabilityOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityOptions() != null)\r\n        sb.append(\"AvailabilityOptions: \").append(getAvailabilityOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.CreateWebhookRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getBranchFilter() != null)\r\n        sb.append(\"BranchFilter: \").append(getBranchFilter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.CreateComputeEnvironmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComputeEnvironmentName() != null)\r\n        sb.append(\"ComputeEnvironmentName: \").append(getComputeEnvironmentName()).append(\",\");\r\n    if (getComputeEnvironmentArn() != null)\r\n        sb.append(\"ComputeEnvironmentArn: \").append(getComputeEnvironmentArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ModifyHapgResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHapgArn() != null)\r\n        sb.append(\"HapgArn: \").append(getHapgArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ListSourceCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListIndex.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRangesOnIndexedValues() != null)\r\n        sb.append(\"RangesOnIndexedValues: \").append(getRangesOnIndexedValues()).append(\",\");\r\n    if (getIndexReference() != null)\r\n        sb.append(\"IndexReference: \").append(getIndexReference()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdateDefaultBranchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getDefaultBranchName() != null)\r\n        sb.append(\"DefaultBranchName: \").append(getDefaultBranchName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ActionConfigurationProperty.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRequired() != null)\r\n        sb.append(\"Required: \").append(getRequired()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getSecret() != null)\r\n        sb.append(\"Secret: \").append(getSecret()).append(\",\");\r\n    if (getQueryable() != null)\r\n        sb.append(\"Queryable: \").append(getQueryable()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.CreateNotificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getNotification() != null)\r\n        sb.append(\"Notification: \").append(getNotification()).append(\",\");\r\n    if (getSubscribers() != null)\r\n        sb.append(\"Subscribers: \").append(getSubscribers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeleteApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.EncryptionKey.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.DeregisterWebhookWithThirdPartyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.UpdateNotificationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ListWebhookItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(getDefinition()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getLastTriggered() != null)\r\n        sb.append(\"LastTriggered: \").append(getLastTriggered()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateStreamingDistributionWithTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamingDistribution() != null)\r\n        sb.append(\"StreamingDistribution: \").append(getStreamingDistribution()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.RestoreBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetFieldLevelEncryptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryption() != null)\r\n        sb.append(\"FieldLevelEncryption: \").append(getFieldLevelEncryption()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PipelineMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineArn() != null)\r\n        sb.append(\"PipelineArn: \").append(getPipelineArn()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getUpdated() != null)\r\n        sb.append(\"Updated: \").append(getUpdated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetStreamingDistributionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamingDistribution() != null)\r\n        sb.append(\"StreamingDistribution: \").append(getStreamingDistribution()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PullRequestTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getSourceReference() != null)\r\n        sb.append(\"SourceReference: \").append(getSourceReference()).append(\",\");\r\n    if (getDestinationReference() != null)\r\n        sb.append(\"DestinationReference: \").append(getDestinationReference()).append(\",\");\r\n    if (getDestinationCommit() != null)\r\n        sb.append(\"DestinationCommit: \").append(getDestinationCommit()).append(\",\");\r\n    if (getSourceCommit() != null)\r\n        sb.append(\"SourceCommit: \").append(getSourceCommit()).append(\",\");\r\n    if (getMergeBase() != null)\r\n        sb.append(\"MergeBase: \").append(getMergeBase()).append(\",\");\r\n    if (getMergeMetadata() != null)\r\n        sb.append(\"MergeMetadata: \").append(getMergeMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.TypedLinkFacetAttributeUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.TimeBasedCanary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCanaryPercentage() != null)\r\n        sb.append(\"CanaryPercentage: \").append(getCanaryPercentage()).append(\",\");\r\n    if (getCanaryInterval() != null)\r\n        sb.append(\"CanaryInterval: \").append(getCanaryInterval());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.SubmitJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getJobQueue() != null)\r\n        sb.append(\"JobQueue: \").append(getJobQueue()).append(\",\");\r\n    if (getArrayProperties() != null)\r\n        sb.append(\"ArrayProperties: \").append(getArrayProperties()).append(\",\");\r\n    if (getDependsOn() != null)\r\n        sb.append(\"DependsOn: \").append(getDependsOn()).append(\",\");\r\n    if (getJobDefinition() != null)\r\n        sb.append(\"JobDefinition: \").append(getJobDefinition()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getContainerOverrides() != null)\r\n        sb.append(\"ContainerOverrides: \").append(getContainerOverrides()).append(\",\");\r\n    if (getNodeOverrides() != null)\r\n        sb.append(\"NodeOverrides: \").append(getNodeOverrides()).append(\",\");\r\n    if (getRetryStrategy() != null)\r\n        sb.append(\"RetryStrategy: \").append(getRetryStrategy()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.IntOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceField() != null)\r\n        sb.append(\"SourceField: \").append(getSourceField()).append(\",\");\r\n    if (getFacetEnabled() != null)\r\n        sb.append(\"FacetEnabled: \").append(getFacetEnabled()).append(\",\");\r\n    if (getSearchEnabled() != null)\r\n        sb.append(\"SearchEnabled: \").append(getSearchEnabled()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled()).append(\",\");\r\n    if (getSortEnabled() != null)\r\n        sb.append(\"SortEnabled: \").append(getSortEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.createFacet",
	"Comment": "creates a new facet in a schema. facet creation is allowed only in development or applied schemas.",
	"Method": "CreateFacetResult createFacet(CreateFacetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateFacet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.deleteIndexField",
	"Comment": "removes an indexfield from the search domain. for more information, see configuring index fields in the amazon cloudsearch developer guide.",
	"Method": "DeleteIndexFieldResult deleteIndexField(DeleteIndexFieldRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteIndexField(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DescribeAlarmsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricAlarms() != null)\r\n        sb.append(\"MetricAlarms: \").append(getMetricAlarms()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.ListDomainNamesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.OriginSslProtocols.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetDeploymentTargetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentTargets() != null)\r\n        sb.append(\"DeploymentTargets: \").append(getDeploymentTargets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.internal.DocumentationUtils.stripHTMLTags",
	"Comment": "returns a documentation with html tags prefixed and suffixed removed, orreturns empty string if the input is empty or null. this method is to beused when constructing documentation for method parameters.",
	"Method": "String stripHTMLTags(String documentation){\r\n    if (documentation == null) {\r\n        return \"\";\r\n    }\r\n    if (documentation.startsWith(\"<\")) {\r\n        int startTagIndex = documentation.indexOf(\">\");\r\n        final int closingTagIndex = documentation.lastIndexOf(\"<\");\r\n        if (closingTagIndex > startTagIndex) {\r\n            documentation = stripHTMLTags(documentation.substring(startTagIndex + 1, closingTagIndex));\r\n        } else {\r\n            documentation = stripHTMLTags(documentation.substring(startTagIndex + 1));\r\n        }\r\n    }\r\n    return documentation.trim();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.CreateDeploymentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.DeleteFileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommitId() != null)\r\n        sb.append(\"CommitId: \").append(getCommitId()).append(\",\");\r\n    if (getBlobId() != null)\r\n        sb.append(\"BlobId: \").append(getBlobId()).append(\",\");\r\n    if (getTreeId() != null)\r\n        sb.append(\"TreeId: \").append(getTreeId()).append(\",\");\r\n    if (getFilePath() != null)\r\n        sb.append(\"FilePath: \").append(getFilePath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.listDeployments",
	"Comment": "lists the deployments in a deployment group for an application registered with the applicable iam user or awsaccount.",
	"Method": "ListDeploymentsResult listDeployments(ListDeploymentsRequest request,ListDeploymentsResult listDeployments){\r\n    return listDeployments(new ListDeploymentsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.BatchDeleteBuildsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIds() != null)\r\n        sb.append(\"Ids: \").append(getIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchGetObjectAttributesResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontClient.getStreamingDistributionConfig",
	"Comment": "get the configuration information about a streaming distribution.",
	"Method": "GetStreamingDistributionConfigResult getStreamingDistributionConfig(GetStreamingDistributionConfigRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetStreamingDistributionConfig(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StopStackSetOperationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.batchUnsuspendUser",
	"Comment": "removes the suspension from up to 50 previously suspended users for the specified amazon chimeenterpriselwa account. only users on enterpriselwa accounts can be unsuspended usingthis action. for more information about different account types, see managing your amazon chimeaccounts in the amazon chime administration guide.previously suspended users who are unsuspended using this action are returned to registered status.users who are not previously suspended are ignored.",
	"Method": "BatchUnsuspendUserResult batchUnsuspendUser(BatchUnsuspendUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeBatchUnsuspendUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.CodeDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeCommit() != null)\r\n        sb.append(\"CodeCommit: \").append(getCodeCommit()).append(\",\");\r\n    if (getGitHub() != null)\r\n        sb.append(\"GitHub: \").append(getGitHub());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.CreatePipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ContinueDeploymentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getDeploymentWaitType() != null)\r\n        sb.append(\"DeploymentWaitType: \").append(getDeploymentWaitType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeAnalysisSchemesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getAnalysisSchemeNames() != null)\r\n        sb.append(\"AnalysisSchemeNames: \").append(getAnalysisSchemeNames()).append(\",\");\r\n    if (getDeployed() != null)\r\n        sb.append(\"Deployed: \").append(getDeployed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.createDeploymentGroup",
	"Comment": "creates a deployment group to which application revisions will be deployed.",
	"Method": "CreateDeploymentGroupResult createDeploymentGroup(CreateDeploymentGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDeploymentGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazoncodedeploy using the current builder configuration.",
	"Method": "AmazonCodeDeploy build(AwsSyncClientParams params){\r\n    return new AmazonCodeDeployClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeploymentGroupInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDeploymentGroupId() != null)\r\n        sb.append(\"DeploymentGroupId: \").append(getDeploymentGroupId()).append(\",\");\r\n    if (getDeploymentGroupName() != null)\r\n        sb.append(\"DeploymentGroupName: \").append(getDeploymentGroupName()).append(\",\");\r\n    if (getDeploymentConfigName() != null)\r\n        sb.append(\"DeploymentConfigName: \").append(getDeploymentConfigName()).append(\",\");\r\n    if (getEc2TagFilters() != null)\r\n        sb.append(\"Ec2TagFilters: \").append(getEc2TagFilters()).append(\",\");\r\n    if (getOnPremisesInstanceTagFilters() != null)\r\n        sb.append(\"OnPremisesInstanceTagFilters: \").append(getOnPremisesInstanceTagFilters()).append(\",\");\r\n    if (getAutoScalingGroups() != null)\r\n        sb.append(\"AutoScalingGroups: \").append(getAutoScalingGroups()).append(\",\");\r\n    if (getServiceRoleArn() != null)\r\n        sb.append(\"ServiceRoleArn: \").append(getServiceRoleArn()).append(\",\");\r\n    if (getTargetRevision() != null)\r\n        sb.append(\"TargetRevision: \").append(getTargetRevision()).append(\",\");\r\n    if (getTriggerConfigurations() != null)\r\n        sb.append(\"TriggerConfigurations: \").append(getTriggerConfigurations()).append(\",\");\r\n    if (getAlarmConfiguration() != null)\r\n        sb.append(\"AlarmConfiguration: \").append(getAlarmConfiguration()).append(\",\");\r\n    if (getAutoRollbackConfiguration() != null)\r\n        sb.append(\"AutoRollbackConfiguration: \").append(getAutoRollbackConfiguration()).append(\",\");\r\n    if (getDeploymentStyle() != null)\r\n        sb.append(\"DeploymentStyle: \").append(getDeploymentStyle()).append(\",\");\r\n    if (getBlueGreenDeploymentConfiguration() != null)\r\n        sb.append(\"BlueGreenDeploymentConfiguration: \").append(getBlueGreenDeploymentConfiguration()).append(\",\");\r\n    if (getLoadBalancerInfo() != null)\r\n        sb.append(\"LoadBalancerInfo: \").append(getLoadBalancerInfo()).append(\",\");\r\n    if (getLastSuccessfulDeployment() != null)\r\n        sb.append(\"LastSuccessfulDeployment: \").append(getLastSuccessfulDeployment()).append(\",\");\r\n    if (getLastAttemptedDeployment() != null)\r\n        sb.append(\"LastAttemptedDeployment: \").append(getLastAttemptedDeployment()).append(\",\");\r\n    if (getEc2TagSet() != null)\r\n        sb.append(\"Ec2TagSet: \").append(getEc2TagSet()).append(\",\");\r\n    if (getOnPremisesTagSet() != null)\r\n        sb.append(\"OnPremisesTagSet: \").append(getOnPremisesTagSet()).append(\",\");\r\n    if (getComputePlatform() != null)\r\n        sb.append(\"ComputePlatform: \").append(getComputePlatform()).append(\",\");\r\n    if (getEcsServices() != null)\r\n        sb.append(\"EcsServices: \").append(getEcsServices());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.SetStackPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getStackPolicyBody() != null)\r\n        sb.append(\"StackPolicyBody: \").append(getStackPolicyBody()).append(\",\");\r\n    if (getStackPolicyURL() != null)\r\n        sb.append(\"StackPolicyURL: \").append(getStackPolicyURL());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Headers.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.CreateAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccount() != null)\r\n        sb.append(\"Account: \").append(getAccount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.CreateLunaClientResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientArn() != null)\r\n        sb.append(\"ClientArn: \").append(getClientArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.Rule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.describeHsm",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.retrieves information about an hsm. you can identify the hsm by its arn or its serial number.",
	"Method": "DescribeHsmResult describeHsm(DescribeHsmRequest request,DescribeHsmResult describeHsm){\r\n    return describeHsm(new DescribeHsmRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.listActionTypes",
	"Comment": "gets a summary of all aws codepipeline action types associated with your account.",
	"Method": "ListActionTypesResult listActionTypes(ListActionTypesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListActionTypes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ObjectAttributeUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectAttributeKey() != null)\r\n        sb.append(\"ObjectAttributeKey: \").append(getObjectAttributeKey()).append(\",\");\r\n    if (getObjectAttributeAction() != null)\r\n        sb.append(\"ObjectAttributeAction: \").append(getObjectAttributeAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.BatchDeleteBuildsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuildsDeleted() != null)\r\n        sb.append(\"BuildsDeleted: \").append(getBuildsDeleted()).append(\",\");\r\n    if (getBuildsNotDeleted() != null)\r\n        sb.append(\"BuildsNotDeleted: \").append(getBuildsNotDeleted());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.ListRepositoriesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getOrder() != null)\r\n        sb.append(\"Order: \").append(getOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Origins.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.TagFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.MetricDatum.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getStatisticValues() != null)\r\n        sb.append(\"StatisticValues: \").append(getStatisticValues()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues()).append(\",\");\r\n    if (getCounts() != null)\r\n        sb.append(\"Counts: \").append(getCounts()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit()).append(\",\");\r\n    if (getStorageResolution() != null)\r\n        sb.append(\"StorageResolution: \").append(getStorageResolution());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetOnPremisesInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceInfo() != null)\r\n        sb.append(\"InstanceInfo: \").append(getInstanceInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.NetworkInterface.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachmentId() != null)\r\n        sb.append(\"AttachmentId: \").append(getAttachmentId()).append(\",\");\r\n    if (getIpv6Address() != null)\r\n        sb.append(\"Ipv6Address: \").append(getIpv6Address()).append(\",\");\r\n    if (getPrivateIpv4Address() != null)\r\n        sb.append(\"PrivateIpv4Address: \").append(getPrivateIpv4Address());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListChangeSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.util.SignerUtils.makeBytesUrlSafe",
	"Comment": "converts the given data to be safe for use in signed urls for a privatedistribution by using specialized base64 encoding.",
	"Method": "String makeBytesUrlSafe(byte[] bytes){\r\n    byte[] encoded = Base64.encode(bytes);\r\n    for (int i = 0; i < encoded.length; i++) {\r\n        switch(encoded[i]) {\r\n            case '+':\r\n                encoded[i] = '-';\r\n                continue;\r\n            case '=':\r\n                encoded[i] = '_';\r\n                continue;\r\n            case '/':\r\n                encoded[i] = '~';\r\n                continue;\r\n            default:\r\n                continue;\r\n        }\r\n    }\r\n    return new String(encoded, UTF8);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.CreateEnvironmentEC2Request.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getAutomaticStopTimeMinutes() != null)\r\n        sb.append(\"AutomaticStopTimeMinutes: \").append(getAutomaticStopTimeMinutes()).append(\",\");\r\n    if (getOwnerArn() != null)\r\n        sb.append(\"OwnerArn: \").append(getOwnerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeleteDistributionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.AddTagsToResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DescribeAlarmsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlarmNames() != null)\r\n        sb.append(\"AlarmNames: \").append(getAlarmNames()).append(\",\");\r\n    if (getAlarmNamePrefix() != null)\r\n        sb.append(\"AlarmNamePrefix: \").append(getAlarmNamePrefix()).append(\",\");\r\n    if (getStateValue() != null)\r\n        sb.append(\"StateValue: \").append(getStateValue()).append(\",\");\r\n    if (getActionPrefix() != null)\r\n        sb.append(\"ActionPrefix: \").append(getActionPrefix()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchCreateIndexResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.TestRepositoryTriggersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getTriggers() != null)\r\n        sb.append(\"Triggers: \").append(getTriggers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutApprovalResultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApprovedAt() != null)\r\n        sb.append(\"ApprovedAt: \").append(getApprovedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListObjectParentPathsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.TerminateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.listLunaClients",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.lists all of the clients.this operation supports pagination with the use of the nexttoken member. if more results areavailable, the nexttoken member of the response contains a token that you pass in the next call tolistlunaclients to retrieve the next set of items.",
	"Method": "ListLunaClientsResult listLunaClients(ListLunaClientsRequest request,ListLunaClientsResult listLunaClients){\r\n    return listLunaClients(new ListLunaClientsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.GetIdentityPoolRolesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getRoles() != null)\r\n        sb.append(\"Roles: \").append(getRoles()).append(\",\");\r\n    if (getRoleMappings() != null)\r\n        sb.append(\"RoleMappings: \").append(getRoleMappings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListObjectChildrenResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChildren() != null)\r\n        sb.append(\"Children: \").append(getChildren()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DescribeComputeEnvironmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComputeEnvironments() != null)\r\n        sb.append(\"ComputeEnvironments: \").append(getComputeEnvironments()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchAddFacetToObjectResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.waiters.AmazonCloudFrontWaiters.invalidationCompleted",
	"Comment": "builds a invalidationcompleted waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<GetInvalidationRequest> invalidationCompleted(){\r\n    return new WaiterBuilder<GetInvalidationRequest, GetInvalidationResult>().withSdkFunction(new GetInvalidationFunction(client)).withAcceptors(new InvalidationCompleted.IsCompletedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(30), new FixedDelayStrategy(20))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ProjectStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.waiters.AmazonCloudFrontWaiters.streamingDistributionDeployed",
	"Comment": "builds a streamingdistributiondeployed waiter by using custom parameters waiterparameters and other parametersdefined in the waiters specification, and then polls until it determines whether the resource entered the desiredstate or not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<GetStreamingDistributionRequest> streamingDistributionDeployed(){\r\n    return new WaiterBuilder<GetStreamingDistributionRequest, GetStreamingDistributionResult>().withSdkFunction(new GetStreamingDistributionFunction(client)).withAcceptors(new StreamingDistributionDeployed.IsDeployedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(25), new FixedDelayStrategy(60))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListAttachedIndicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexAttachments() != null)\r\n        sb.append(\"IndexAttachments: \").append(getIndexAttachments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListFieldLevelEncryptionConfigsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.CloudWatchMetricConfig.getCredentialsProvider",
	"Comment": "returns the credential provider that holds the credentials to connect toamazon cloudwatch.",
	"Method": "AWSCredentialsProvider getCredentialsProvider(){\r\n    return credentialsProvider;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.UpdateStackSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getTemplateURL() != null)\r\n        sb.append(\"TemplateURL: \").append(getTemplateURL()).append(\",\");\r\n    if (getUsePreviousTemplate() != null)\r\n        sb.append(\"UsePreviousTemplate: \").append(getUsePreviousTemplate()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getOperationPreferences() != null)\r\n        sb.append(\"OperationPreferences: \").append(getOperationPreferences()).append(\",\");\r\n    if (getAdministrationRoleARN() != null)\r\n        sb.append(\"AdministrationRoleARN: \").append(getAdministrationRoleARN()).append(\",\");\r\n    if (getExecutionRoleName() != null)\r\n        sb.append(\"ExecutionRoleName: \").append(getExecutionRoleName()).append(\",\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId()).append(\",\");\r\n    if (getAccounts() != null)\r\n        sb.append(\"Accounts: \").append(getAccounts()).append(\",\");\r\n    if (getRegions() != null)\r\n        sb.append(\"Regions: \").append(getRegions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListOutgoingTypedLinksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTypedLinkSpecifiers() != null)\r\n        sb.append(\"TypedLinkSpecifiers: \").append(getTypedLinkSpecifiers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.waiters.AmazonCloudFormationWaiters.stackCreateComplete",
	"Comment": "builds a stackcreatecomplete waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeStacksRequest> stackCreateComplete(){\r\n    return new WaiterBuilder<DescribeStacksRequest, DescribeStacksResult>().withSdkFunction(new DescribeStacksFunction(client)).withAcceptors(new StackCreateComplete.IsCREATE_COMPLETEMatcher(), new StackCreateComplete.IsCREATE_FAILEDMatcher(), new StackCreateComplete.IsDELETE_COMPLETEMatcher(), new StackCreateComplete.IsDELETE_FAILEDMatcher(), new StackCreateComplete.IsROLLBACK_FAILEDMatcher(), new StackCreateComplete.IsROLLBACK_COMPLETEMatcher(), new StackCreateComplete.IsValidationErrorMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(120), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListImportsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportName() != null)\r\n        sb.append(\"ExportName: \").append(getExportName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PutFileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommitId() != null)\r\n        sb.append(\"CommitId: \").append(getCommitId()).append(\",\");\r\n    if (getBlobId() != null)\r\n        sb.append(\"BlobId: \").append(getBlobId()).append(\",\");\r\n    if (getTreeId() != null)\r\n        sb.append(\"TreeId: \").append(getTreeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeploymentInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDeploymentGroupName() != null)\r\n        sb.append(\"DeploymentGroupName: \").append(getDeploymentGroupName()).append(\",\");\r\n    if (getDeploymentConfigName() != null)\r\n        sb.append(\"DeploymentConfigName: \").append(getDeploymentConfigName()).append(\",\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getPreviousRevision() != null)\r\n        sb.append(\"PreviousRevision: \").append(getPreviousRevision()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getErrorInformation() != null)\r\n        sb.append(\"ErrorInformation: \").append(getErrorInformation()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getCompleteTime() != null)\r\n        sb.append(\"CompleteTime: \").append(getCompleteTime()).append(\",\");\r\n    if (getDeploymentOverview() != null)\r\n        sb.append(\"DeploymentOverview: \").append(getDeploymentOverview()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCreator() != null)\r\n        sb.append(\"Creator: \").append(getCreator()).append(\",\");\r\n    if (getIgnoreApplicationStopFailures() != null)\r\n        sb.append(\"IgnoreApplicationStopFailures: \").append(getIgnoreApplicationStopFailures()).append(\",\");\r\n    if (getAutoRollbackConfiguration() != null)\r\n        sb.append(\"AutoRollbackConfiguration: \").append(getAutoRollbackConfiguration()).append(\",\");\r\n    if (getUpdateOutdatedInstancesOnly() != null)\r\n        sb.append(\"UpdateOutdatedInstancesOnly: \").append(getUpdateOutdatedInstancesOnly()).append(\",\");\r\n    if (getRollbackInfo() != null)\r\n        sb.append(\"RollbackInfo: \").append(getRollbackInfo()).append(\",\");\r\n    if (getDeploymentStyle() != null)\r\n        sb.append(\"DeploymentStyle: \").append(getDeploymentStyle()).append(\",\");\r\n    if (getTargetInstances() != null)\r\n        sb.append(\"TargetInstances: \").append(getTargetInstances()).append(\",\");\r\n    if (getInstanceTerminationWaitTimeStarted() != null)\r\n        sb.append(\"InstanceTerminationWaitTimeStarted: \").append(getInstanceTerminationWaitTimeStarted()).append(\",\");\r\n    if (getBlueGreenDeploymentConfiguration() != null)\r\n        sb.append(\"BlueGreenDeploymentConfiguration: \").append(getBlueGreenDeploymentConfiguration()).append(\",\");\r\n    if (getLoadBalancerInfo() != null)\r\n        sb.append(\"LoadBalancerInfo: \").append(getLoadBalancerInfo()).append(\",\");\r\n    if (getAdditionalDeploymentStatusInfo() != null)\r\n        sb.append(\"AdditionalDeploymentStatusInfo: \").append(getAdditionalDeploymentStatusInfo()).append(\",\");\r\n    if (getFileExistsBehavior() != null)\r\n        sb.append(\"FileExistsBehavior: \").append(getFileExistsBehavior()).append(\",\");\r\n    if (getDeploymentStatusMessages() != null)\r\n        sb.append(\"DeploymentStatusMessages: \").append(getDeploymentStatusMessages()).append(\",\");\r\n    if (getComputePlatform() != null)\r\n        sb.append(\"ComputePlatform: \").append(getComputePlatform());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.putThirdPartyJobFailureResult",
	"Comment": "represents the failure of a third party job as returned to the pipeline by a job worker. only used for partneractions.",
	"Method": "PutThirdPartyJobFailureResultResult putThirdPartyJobFailureResult(PutThirdPartyJobFailureResultRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutThirdPartyJobFailureResult(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.BatchUnsuspendUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getUserIdList() != null)\r\n        sb.append(\"UserIdList: \").append(getUserIdList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontClient.updatePublicKey",
	"Comment": "update public key information. note that the only value you can change is the comment.",
	"Method": "UpdatePublicKeyResult updatePublicKey(UpdatePublicKeyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdatePublicKey(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.Backup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId()).append(\",\");\r\n    if (getBackupState() != null)\r\n        sb.append(\"BackupState: \").append(getBackupState()).append(\",\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getCreateTimestamp() != null)\r\n        sb.append(\"CreateTimestamp: \").append(getCreateTimestamp()).append(\",\");\r\n    if (getCopyTimestamp() != null)\r\n        sb.append(\"CopyTimestamp: \").append(getCopyTimestamp()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion()).append(\",\");\r\n    if (getSourceBackup() != null)\r\n        sb.append(\"SourceBackup: \").append(getSourceBackup()).append(\",\");\r\n    if (getSourceCluster() != null)\r\n        sb.append(\"SourceCluster: \").append(getSourceCluster()).append(\",\");\r\n    if (getDeleteTimestamp() != null)\r\n        sb.append(\"DeleteTimestamp: \").append(getDeleteTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.DeleteProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getProjectArn() != null)\r\n        sb.append(\"ProjectArn: \").append(getProjectArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontClient.listPublicKeys",
	"Comment": "list all public keys that have been added to cloudfront for this account.",
	"Method": "ListPublicKeysResult listPublicKeys(ListPublicKeysRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListPublicKeys(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AbstractAWSCloudTrailAsync.describeTrailsAsync",
	"Comment": "simplified method form for invoking the describetrails operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTrailsResult> describeTrailsAsync(DescribeTrailsRequest request,java.util.concurrent.Future<DescribeTrailsResult> describeTrailsAsync,DescribeTrailsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTrailsRequest, DescribeTrailsResult> asyncHandler,java.util.concurrent.Future<DescribeTrailsResult> describeTrailsAsync,java.util.concurrent.Future<DescribeTrailsResult> describeTrailsAsync,com.amazonaws.handlers.AsyncHandler<DescribeTrailsRequest, DescribeTrailsResult> asyncHandler){\r\n    return describeTrailsAsync(new DescribeTrailsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.addTagsToResource",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.adds or overwrites one or more tags for the specified aws cloudhsm resource.each tag consists of a key and a value. tag keys must be unique to each resource.",
	"Method": "AddTagsToResourceResult addTagsToResource(AddTagsToResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddTagsToResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.StopBuildResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuild() != null)\r\n        sb.append(\"Build: \").append(getBuild());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PipelineExecution.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getPipelineVersion() != null)\r\n        sb.append(\"PipelineVersion: \").append(getPipelineVersion()).append(\",\");\r\n    if (getPipelineExecutionId() != null)\r\n        sb.append(\"PipelineExecutionId: \").append(getPipelineExecutionId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getArtifactRevisions() != null)\r\n        sb.append(\"ArtifactRevisions: \").append(getArtifactRevisions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListDeploymentInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstancesList() != null)\r\n        sb.append(\"InstancesList: \").append(getInstancesList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationAsyncClient.estimateTemplateCostAsync",
	"Comment": "simplified method form for invoking the estimatetemplatecost operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<EstimateTemplateCostResult> estimateTemplateCostAsync(EstimateTemplateCostRequest request,java.util.concurrent.Future<EstimateTemplateCostResult> estimateTemplateCostAsync,EstimateTemplateCostRequest request,com.amazonaws.handlers.AsyncHandler<EstimateTemplateCostRequest, EstimateTemplateCostResult> asyncHandler,java.util.concurrent.Future<EstimateTemplateCostResult> estimateTemplateCostAsync,java.util.concurrent.Future<EstimateTemplateCostResult> estimateTemplateCostAsync,com.amazonaws.handlers.AsyncHandler<EstimateTemplateCostRequest, EstimateTemplateCostResult> asyncHandler){\r\n    return estimateTemplateCostAsync(new EstimateTemplateCostRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.DeleteEnvironmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeletePublicKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.DeleteProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.SetStackPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployAsyncClient.batchGetDeploymentsAsync",
	"Comment": "simplified method form for invoking the batchgetdeployments operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<BatchGetDeploymentsResult> batchGetDeploymentsAsync(BatchGetDeploymentsRequest request,java.util.concurrent.Future<BatchGetDeploymentsResult> batchGetDeploymentsAsync,BatchGetDeploymentsRequest request,com.amazonaws.handlers.AsyncHandler<BatchGetDeploymentsRequest, BatchGetDeploymentsResult> asyncHandler,java.util.concurrent.Future<BatchGetDeploymentsResult> batchGetDeploymentsAsync,java.util.concurrent.Future<BatchGetDeploymentsResult> batchGetDeploymentsAsync,com.amazonaws.handlers.AsyncHandler<BatchGetDeploymentsRequest, BatchGetDeploymentsResult> asyncHandler){\r\n    return batchGetDeploymentsAsync(new BatchGetDeploymentsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.IdentityPoolShortDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getIdentityPoolName() != null)\r\n        sb.append(\"IdentityPoolName: \").append(getIdentityPoolName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UserInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getDate() != null)\r\n        sb.append(\"Date: \").append(getDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.putJobSuccessResult",
	"Comment": "represents the success of a job as returned to the pipeline by a job worker. only used for custom actions.",
	"Method": "PutJobSuccessResultResult putJobSuccessResult(PutJobSuccessResultRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutJobSuccessResult(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.DeleteIdentitiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityIdsToDelete() != null)\r\n        sb.append(\"IdentityIdsToDelete: \").append(getIdentityIdsToDelete());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetInvalidationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInvalidation() != null)\r\n        sb.append(\"Invalidation: \").append(getInvalidation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DeleteExpressionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getExpressionName() != null)\r\n        sb.append(\"ExpressionName: \").append(getExpressionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PutRepositoryTriggersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationId() != null)\r\n        sb.append(\"ConfigurationId: \").append(getConfigurationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.CreateHsmRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getSshKey() != null)\r\n        sb.append(\"SshKey: \").append(getSshKey()).append(\",\");\r\n    if (getEniIp() != null)\r\n        sb.append(\"EniIp: \").append(getEniIp()).append(\",\");\r\n    if (getIamRoleArn() != null)\r\n        sb.append(\"IamRoleArn: \").append(getIamRoleArn()).append(\",\");\r\n    if (getExternalId() != null)\r\n        sb.append(\"ExternalId: \").append(getExternalId()).append(\",\");\r\n    if (getSubscriptionType() != null)\r\n        sb.append(\"SubscriptionType: \").append(getSubscriptionType()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getSyslogIp() != null)\r\n        sb.append(\"SyslogIp: \").append(getSyslogIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.PropertyDifference.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropertyPath() != null)\r\n        sb.append(\"PropertyPath: \").append(getPropertyPath()).append(\",\");\r\n    if (getExpectedValue() != null)\r\n        sb.append(\"ExpectedValue: \").append(getExpectedValue()).append(\",\");\r\n    if (getActualValue() != null)\r\n        sb.append(\"ActualValue: \").append(getActualValue()).append(\",\");\r\n    if (getDifferenceType() != null)\r\n        sb.append(\"DifferenceType: \").append(getDifferenceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.Resource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.RegisterWebhookWithThirdPartyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebhookName() != null)\r\n        sb.append(\"WebhookName: \").append(getWebhookName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.NodeProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumNodes() != null)\r\n        sb.append(\"NumNodes: \").append(getNumNodes()).append(\",\");\r\n    if (getMainNode() != null)\r\n        sb.append(\"MainNode: \").append(getMainNode()).append(\",\");\r\n    if (getNodeRangeProperties() != null)\r\n        sb.append(\"NodeRangeProperties: \").append(getNodeRangeProperties());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.UpdateTrailResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getS3BucketName() != null)\r\n        sb.append(\"S3BucketName: \").append(getS3BucketName()).append(\",\");\r\n    if (getS3KeyPrefix() != null)\r\n        sb.append(\"S3KeyPrefix: \").append(getS3KeyPrefix()).append(\",\");\r\n    if (getSnsTopicName() != null)\r\n        sb.append(\"SnsTopicName: \").append(getSnsTopicName()).append(\",\");\r\n    if (getSnsTopicARN() != null)\r\n        sb.append(\"SnsTopicARN: \").append(getSnsTopicARN()).append(\",\");\r\n    if (getIncludeGlobalServiceEvents() != null)\r\n        sb.append(\"IncludeGlobalServiceEvents: \").append(getIncludeGlobalServiceEvents()).append(\",\");\r\n    if (getIsMultiRegionTrail() != null)\r\n        sb.append(\"IsMultiRegionTrail: \").append(getIsMultiRegionTrail()).append(\",\");\r\n    if (getTrailARN() != null)\r\n        sb.append(\"TrailARN: \").append(getTrailARN()).append(\",\");\r\n    if (getLogFileValidationEnabled() != null)\r\n        sb.append(\"LogFileValidationEnabled: \").append(getLogFileValidationEnabled()).append(\",\");\r\n    if (getCloudWatchLogsLogGroupArn() != null)\r\n        sb.append(\"CloudWatchLogsLogGroupArn: \").append(getCloudWatchLogsLogGroupArn()).append(\",\");\r\n    if (getCloudWatchLogsRoleArn() != null)\r\n        sb.append(\"CloudWatchLogsRoleArn: \").append(getCloudWatchLogsRoleArn()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getIsOrganizationTrail() != null)\r\n        sb.append(\"IsOrganizationTrail: \").append(getIsOrganizationTrail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.getThirdPartyJobDetails",
	"Comment": "requests the details of a job for a third party action. only used for partner actions.when this api is called, aws codepipeline returns temporary credentials for the amazon s3 bucket used to storeartifacts for the pipeline, if the action requires access to that amazon s3 bucket for input or output artifacts.additionally, this api returns any secret values defined for the action.",
	"Method": "GetThirdPartyJobDetailsResult getThirdPartyJobDetails(GetThirdPartyJobDetailsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetThirdPartyJobDetails(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.acknowledgeJob",
	"Comment": "returns information about a specified job and whether that job has been received by the job worker. only used forcustom actions.",
	"Method": "AcknowledgeJobResult acknowledgeJob(AcknowledgeJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAcknowledgeJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.UpdateJobQueueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobQueueName() != null)\r\n        sb.append(\"JobQueueName: \").append(getJobQueueName()).append(\",\");\r\n    if (getJobQueueArn() != null)\r\n        sb.append(\"JobQueueArn: \").append(getJobQueueArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.defineSuggester",
	"Comment": "configures a suggester for a domain. a suggester enables you to display possible matches before users finishtyping their queries. when you configure a suggester, you must specify the name of the text field you want tosearch for possible matches and a unique name for the suggester. for more information, see getting search suggestions in the amazon cloudsearch developer guide.",
	"Method": "DefineSuggesterResult defineSuggester(DefineSuggesterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDefineSuggester(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DescribeSubscribersForNotificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getNotification() != null)\r\n        sb.append(\"Notification: \").append(getNotification()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ActionDeclaration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getActionTypeId() != null)\r\n        sb.append(\"ActionTypeId: \").append(getActionTypeId()).append(\",\");\r\n    if (getRunOrder() != null)\r\n        sb.append(\"RunOrder: \").append(getRunOrder()).append(\",\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration()).append(\",\");\r\n    if (getOutputArtifacts() != null)\r\n        sb.append(\"OutputArtifacts: \").append(getOutputArtifacts()).append(\",\");\r\n    if (getInputArtifacts() != null)\r\n        sb.append(\"InputArtifacts: \").append(getInputArtifacts()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.GetConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientArn() != null)\r\n        sb.append(\"ClientArn: \").append(getClientArn()).append(\",\");\r\n    if (getClientVersion() != null)\r\n        sb.append(\"ClientVersion: \").append(getClientVersion()).append(\",\");\r\n    if (getHapgList() != null)\r\n        sb.append(\"HapgList: \").append(getHapgList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.JobTimeout.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttemptDurationSeconds() != null)\r\n        sb.append(\"AttemptDurationSeconds: \").append(getAttemptDurationSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getStatistic() != null)\r\n        sb.append(\"Statistic: \").append(getStatistic()).append(\",\");\r\n    if (getExtendedStatistic() != null)\r\n        sb.append(\"ExtendedStatistic: \").append(getExtendedStatistic()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getPeriod() != null)\r\n        sb.append(\"Period: \").append(getPeriod()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ApplySchemaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublishedSchemaArn() != null)\r\n        sb.append(\"PublishedSchemaArn: \").append(getPublishedSchemaArn()).append(\",\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateTypedLinkFacetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.getTemplateSummary",
	"Comment": "returns information about a new or existing template. the gettemplatesummary action is useful forviewing parameter information, such as default parameter values and parameter types, before you create or updatea stack or stack set.you can use the gettemplatesummary action when you submit a template, or you can get templateinformation for a stack set, or a running or deleted stack.for deleted stacks, gettemplatesummary returns the template information for up to 90 days after thestack has been deleted. if the template does not exist, a validationerror is returned.",
	"Method": "GetTemplateSummaryResult getTemplateSummary(GetTemplateSummaryRequest request,GetTemplateSummaryResult getTemplateSummary){\r\n    return getTemplateSummary(new GetTemplateSummaryRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.PutMetricDataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DescribeNotificationsForBudgetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotifications() != null)\r\n        sb.append(\"Notifications: \").append(getNotifications()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.LambdaTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId()).append(\",\");\r\n    if (getTargetArn() != null)\r\n        sb.append(\"TargetArn: \").append(getTargetArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getLifecycleEvents() != null)\r\n        sb.append(\"LifecycleEvents: \").append(getLifecycleEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RevisionLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRevisionType() != null)\r\n        sb.append(\"RevisionType: \").append(getRevisionType()).append(\",\");\r\n    if (getS3Location() != null)\r\n        sb.append(\"S3Location: \").append(getS3Location()).append(\",\");\r\n    if (getGitHubLocation() != null)\r\n        sb.append(\"GitHubLocation: \").append(getGitHubLocation()).append(\",\");\r\n    if (getString() != null)\r\n        sb.append(\"String: \").append(getString()).append(\",\");\r\n    if (getAppSpecContent() != null)\r\n        sb.append(\"AppSpecContent: \").append(getAppSpecContent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetMergeConflictsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMergeable() != null)\r\n        sb.append(\"Mergeable: \").append(getMergeable()).append(\",\");\r\n    if (getDestinationCommitId() != null)\r\n        sb.append(\"DestinationCommitId: \").append(getDestinationCommitId()).append(\",\");\r\n    if (getSourceCommitId() != null)\r\n        sb.append(\"SourceCommitId: \").append(getSourceCommitId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.GetTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getStagesAvailable() != null)\r\n        sb.append(\"StagesAvailable: \").append(getStagesAvailable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ErrorDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListAppliedSchemaArnsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArns() != null)\r\n        sb.append(\"SchemaArns: \").append(getSchemaArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.EnvironmentPlatform.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getLanguages() != null)\r\n        sb.append(\"Languages: \").append(getLanguages());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.deleteStack",
	"Comment": "deletes a specified stack. once the call completes successfully, stack deletion starts. deleted stacks do notshow up in the describestacks api if the deletion has been completed successfully.",
	"Method": "DeleteStackResult deleteStack(DeleteStackRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteStack(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.GetMetricWidgetImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricWidget() != null)\r\n        sb.append(\"MetricWidget: \").append(getMetricWidget()).append(\",\");\r\n    if (getOutputFormat() != null)\r\n        sb.append(\"OutputFormat: \").append(getOutputFormat());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.LookupAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeKey() != null)\r\n        sb.append(\"AttributeKey: \").append(getAttributeKey()).append(\",\");\r\n    if (getAttributeValue() != null)\r\n        sb.append(\"AttributeValue: \").append(getAttributeValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListPublicKeysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKeyList() != null)\r\n        sb.append(\"PublicKeyList: \").append(getPublicKeyList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AWSCloudTrailAsyncClient.lookupEventsAsync",
	"Comment": "simplified method form for invoking the lookupevents operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<LookupEventsResult> lookupEventsAsync(LookupEventsRequest request,java.util.concurrent.Future<LookupEventsResult> lookupEventsAsync,LookupEventsRequest request,com.amazonaws.handlers.AsyncHandler<LookupEventsRequest, LookupEventsResult> asyncHandler,java.util.concurrent.Future<LookupEventsResult> lookupEventsAsync,java.util.concurrent.Future<LookupEventsResult> lookupEventsAsync,com.amazonaws.handlers.AsyncHandler<LookupEventsRequest, LookupEventsResult> asyncHandler){\r\n    return lookupEventsAsync(new LookupEventsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.TargetGroupPairInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroups() != null)\r\n        sb.append(\"TargetGroups: \").append(getTargetGroups()).append(\",\");\r\n    if (getProdTrafficRoute() != null)\r\n        sb.append(\"ProdTrafficRoute: \").append(getProdTrafficRoute()).append(\",\");\r\n    if (getTestTrafficRoute() != null)\r\n        sb.append(\"TestTrafficRoute: \").append(getTestTrafficRoute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.updateStack",
	"Comment": "updates a stack as specified in the template. after the call completes successfully, the stack update starts. youcan check the status of the stack via the describestacks action.to get a copy of the template for an existing stack, you can use the gettemplate action.for more information about creating an update template, updating a stack, and monitoring the progress of theupdate, see updating astack.",
	"Method": "UpdateStackResult updateStack(UpdateStackRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateStack(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.KeyValuePair.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.DescribeProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getCreatedTimeStamp() != null)\r\n        sb.append(\"CreatedTimeStamp: \").append(getCreatedTimeStamp()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getProjectTemplateId() != null)\r\n        sb.append(\"ProjectTemplateId: \").append(getProjectTemplateId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.deleteDeploymentConfig",
	"Comment": "deletes a deployment configuration.a deployment configuration cannot be deleted if it is currently in use. predefined configurations cannot bedeleted.",
	"Method": "DeleteDeploymentConfigResult deleteDeploymentConfig(DeleteDeploymentConfigRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDeploymentConfig(request);\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.intermediate.IntermediateModel.getClientConfigFactory",
	"Comment": "clientconfigurationfactory to use when producing default client configuration for theclient.",
	"Method": "String getClientConfigFactory(){\r\n    if (customizationConfig.getCustomClientConfigFactory() == null) {\r\n        return DEFAULT_CLIENT_CONFIG_FACTORY;\r\n    }\r\n    return customizationConfig.getCustomClientConfigFactory();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.EnableAlarmActionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlarmNames() != null)\r\n        sb.append(\"AlarmNames: \").append(getAlarmNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.UpdateProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getSecondarySources() != null)\r\n        sb.append(\"SecondarySources: \").append(getSecondarySources()).append(\",\");\r\n    if (getArtifacts() != null)\r\n        sb.append(\"Artifacts: \").append(getArtifacts()).append(\",\");\r\n    if (getSecondaryArtifacts() != null)\r\n        sb.append(\"SecondaryArtifacts: \").append(getSecondaryArtifacts()).append(\",\");\r\n    if (getCache() != null)\r\n        sb.append(\"Cache: \").append(getCache()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getTimeoutInMinutes() != null)\r\n        sb.append(\"TimeoutInMinutes: \").append(getTimeoutInMinutes()).append(\",\");\r\n    if (getQueuedTimeoutInMinutes() != null)\r\n        sb.append(\"QueuedTimeoutInMinutes: \").append(getQueuedTimeoutInMinutes()).append(\",\");\r\n    if (getEncryptionKey() != null)\r\n        sb.append(\"EncryptionKey: \").append(getEncryptionKey()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getBadgeEnabled() != null)\r\n        sb.append(\"BadgeEnabled: \").append(getBadgeEnabled()).append(\",\");\r\n    if (getLogsConfig() != null)\r\n        sb.append(\"LogsConfig: \").append(getLogsConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.AWSAutoScalingPlansClient.updateScalingPlan",
	"Comment": "updates the specified scaling plan.you cannot update a scaling plan if it is in the process of being created, updated, or deleted.",
	"Method": "UpdateScalingPlanResult updateScalingPlan(UpdateScalingPlanRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateScalingPlan(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.waiters.AmazonCloudWatchWaiters.alarmExists",
	"Comment": "builds a alarmexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeAlarmsRequest> alarmExists(){\r\n    return new WaiterBuilder<DescribeAlarmsRequest, DescribeAlarmsResult>().withSdkFunction(new DescribeAlarmsFunction(client)).withAcceptors(new AlarmExists.IsTrueMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Restrictions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGeoRestriction() != null)\r\n        sb.append(\"GeoRestriction: \").append(getGeoRestriction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.BatchUnsuspendUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserErrors() != null)\r\n        sb.append(\"UserErrors: \").append(getUserErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.UpdateScalingParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getScalingParameters() != null)\r\n        sb.append(\"ScalingParameters: \").append(getScalingParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeExpressionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExpressions() != null)\r\n        sb.append(\"Expressions: \").append(getExpressions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.CreateHsmResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmArn() != null)\r\n        sb.append(\"HsmArn: \").append(getHsmArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackEvents() != null)\r\n        sb.append(\"StackEvents: \").append(getStackEvents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.SkipWaitTimeForInstanceTerminationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.StageContext.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.ServiceMetricCollectorSupport.bytesPerSecond",
	"Comment": "returns the number of bytes per second, given the byte count andduration in nano seconds.duration of zero nanosecond will be treatedas 1 nanosecond.",
	"Method": "double bytesPerSecond(double byteCount,double durationNano){\r\n    if (byteCount < 0 || durationNano < 0)\r\n        throw new IllegalArgumentException();\r\n    if (durationNano == 0) {\r\n        durationNano = 1.0;\r\n        if (log.isDebugEnabled()) {\r\n            log.debug(\"Set zero to one to avoid division by zero; but should never get here!\");\r\n        }\r\n    }\r\n    double bytesPerSec = (byteCount / durationNano) * NANO_PER_SEC;\r\n    if (bytesPerSec == 0) {\r\n        if (log.isDebugEnabled()) {\r\n            log.debug(\"zero bytes per sec.  Really ?\");\r\n        }\r\n    }\r\n    return bytesPerSec;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.describeStackSetOperation",
	"Comment": "returns the description of the specified stack set operation.",
	"Method": "DescribeStackSetOperationResult describeStackSetOperation(DescribeStackSetOperationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeStackSetOperation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getLogicalResourceId() != null)\r\n        sb.append(\"LogicalResourceId: \").append(getLogicalResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ListPipelineExecutionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.PhysicalResourceIdContextKeyValuePair.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DetachTypedLinkRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getTypedLinkSpecifier() != null)\r\n        sb.append(\"TypedLinkSpecifier: \").append(getTypedLinkSpecifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchCreateObject.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaFacet() != null)\r\n        sb.append(\"SchemaFacet: \").append(getSchemaFacet()).append(\",\");\r\n    if (getObjectAttributeList() != null)\r\n        sb.append(\"ObjectAttributeList: \").append(getObjectAttributeList()).append(\",\");\r\n    if (getParentReference() != null)\r\n        sb.append(\"ParentReference: \").append(getParentReference()).append(\",\");\r\n    if (getLinkName() != null)\r\n        sb.append(\"LinkName: \").append(getLinkName()).append(\",\");\r\n    if (getBatchReferenceName() != null)\r\n        sb.append(\"BatchReferenceName: \").append(getBatchReferenceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DeleteHsmRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmArn() != null)\r\n        sb.append(\"HsmArn: \").append(getHsmArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.defineIndexField",
	"Comment": "configures an indexfield for the search domain. used to create new fields and modify existingones. you must specify the name of the domain you are configuring and an index field configuration. the indexfield configuration specifies a unique name, the index field type, and the options you want to configure for thefield. the options you can specify depend on the indexfieldtype. if the field exists, the newconfiguration replaces the old one. for more information, see configuring index fields in the amazon cloudsearch developer guide.",
	"Method": "DefineIndexFieldResult defineIndexField(DefineIndexFieldRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDefineIndexField(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.DisassociateTeamMemberResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdatePullRequestTitleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequest() != null)\r\n        sb.append(\"PullRequest: \").append(getPullRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.describeStackResourceDrifts",
	"Comment": "returns drift information for the resources that have been checked for drift in the specified stack. thisincludes actual and expected configuration values for resources where aws cloudformation detects configurationdrift.for a given stack, there will be one stackresourcedrift for each stack resource that has beenchecked for drift. resources that have not yet been checked for drift are not included. resources that do notcurrently support drift detection are not checked, and so not included. for a list of resources that supportdrift detection, see resources that support drift detection.use detectstackresourcedrift to detect drift on individual resources, or detectstackdrift to detectdrift on all supported resources for a given stack.",
	"Method": "DescribeStackResourceDriftsResult describeStackResourceDrifts(DescribeStackResourceDriftsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeStackResourceDrifts(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.Resource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListTypedLinkFacetNamesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFacetNames() != null)\r\n        sb.append(\"FacetNames: \").append(getFacetNames()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.BatchGetBuildsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIds() != null)\r\n        sb.append(\"Ids: \").append(getIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutActionRevisionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNewRevision() != null)\r\n        sb.append(\"NewRevision: \").append(getNewRevision()).append(\",\");\r\n    if (getPipelineExecutionId() != null)\r\n        sb.append(\"PipelineExecutionId: \").append(getPipelineExecutionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackDriftInformation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackDriftStatus() != null)\r\n        sb.append(\"StackDriftStatus: \").append(getStackDriftStatus()).append(\",\");\r\n    if (getLastCheckTimestamp() != null)\r\n        sb.append(\"LastCheckTimestamp: \").append(getLastCheckTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.listTagsForResource",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.returns a list of all tags for the specified aws cloudhsm resource.",
	"Method": "ListTagsForResourceResult listTagsForResource(ListTagsForResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTagsForResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getShouldDecrementDesiredCapacity() != null)\r\n        sb.append(\"ShouldDecrementDesiredCapacity: \").append(getShouldDecrementDesiredCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.FacetAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttributeDefinition() != null)\r\n        sb.append(\"AttributeDefinition: \").append(getAttributeDefinition()).append(\",\");\r\n    if (getAttributeReference() != null)\r\n        sb.append(\"AttributeReference: \").append(getAttributeReference()).append(\",\");\r\n    if (getRequiredBehavior() != null)\r\n        sb.append(\"RequiredBehavior: \").append(getRequiredBehavior());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DescribeLunaClientRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientArn() != null)\r\n        sb.append(\"ClientArn: \").append(getClientArn()).append(\",\");\r\n    if (getCertificateFingerprint() != null)\r\n        sb.append(\"CertificateFingerprint: \").append(getCertificateFingerprint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DeleteJobQueueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.DeleteAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ComputeEnvironmentOrder.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrder() != null)\r\n        sb.append(\"Order: \").append(getOrder()).append(\",\");\r\n    if (getComputeEnvironment() != null)\r\n        sb.append(\"ComputeEnvironment: \").append(getComputeEnvironment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpdateObjectAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getAttributeUpdates() != null)\r\n        sb.append(\"AttributeUpdates: \").append(getAttributeUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ContentTypeProfileConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getForwardWhenContentTypeIsUnknown() != null)\r\n        sb.append(\"ForwardWhenContentTypeIsUnknown: \").append(getForwardWhenContentTypeIsUnknown()).append(\",\");\r\n    if (getContentTypeProfiles() != null)\r\n        sb.append(\"ContentTypeProfiles: \").append(getContentTypeProfiles());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchAsyncClient.listDomainNamesAsync",
	"Comment": "simplified method form for invoking the listdomainnames operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListDomainNamesResult> listDomainNamesAsync(ListDomainNamesRequest request,java.util.concurrent.Future<ListDomainNamesResult> listDomainNamesAsync,ListDomainNamesRequest request,com.amazonaws.handlers.AsyncHandler<ListDomainNamesRequest, ListDomainNamesResult> asyncHandler,java.util.concurrent.Future<ListDomainNamesResult> listDomainNamesAsync,java.util.concurrent.Future<ListDomainNamesResult> listDomainNamesAsync,com.amazonaws.handlers.AsyncHandler<ListDomainNamesRequest, ListDomainNamesResult> asyncHandler){\r\n    return listDomainNamesAsync(new ListDomainNamesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DisableAlarmActionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlarmNames() != null)\r\n        sb.append(\"AlarmNames: \").append(getAlarmNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.deleteChangeSet",
	"Comment": "deletes the specified change set. deleting change sets ensures that no one executes the wrong change set.if the call successfully completes, aws cloudformation successfully deleted the change set.",
	"Method": "DeleteChangeSetResult deleteChangeSet(DeleteChangeSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteChangeSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStackInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSummaries() != null)\r\n        sb.append(\"Summaries: \").append(getSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AbstractAWSCloudHSMAsync.listAvailableZonesAsync",
	"Comment": "simplified method form for invoking the listavailablezones operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAvailableZonesResult> listAvailableZonesAsync(ListAvailableZonesRequest request,java.util.concurrent.Future<ListAvailableZonesResult> listAvailableZonesAsync,ListAvailableZonesRequest request,com.amazonaws.handlers.AsyncHandler<ListAvailableZonesRequest, ListAvailableZonesResult> asyncHandler,java.util.concurrent.Future<ListAvailableZonesResult> listAvailableZonesAsync,java.util.concurrent.Future<ListAvailableZonesResult> listAvailableZonesAsync,com.amazonaws.handlers.AsyncHandler<ListAvailableZonesRequest, ListAvailableZonesResult> asyncHandler){\r\n    return listAvailableZonesAsync(new ListAvailableZonesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PipelineSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getUpdated() != null)\r\n        sb.append(\"Updated: \").append(getUpdated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateDirectoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier()).append(\",\");\r\n    if (getAppliedSchemaArn() != null)\r\n        sb.append(\"AppliedSchemaArn: \").append(getAppliedSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.IndexDocumentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateIndexResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.util.SignerUtils.signWithSha1RSA",
	"Comment": "signs the data given with the private key given, using the sha1withrsaalgorithm provided by bouncy castle.",
	"Method": "byte[] signWithSha1RSA(byte[] dataToSign,PrivateKey privateKey){\r\n    Signature signature;\r\n    try {\r\n        signature = Signature.getInstance(\"SHA1withRSA\");\r\n        signature.initSign(privateKey, srand);\r\n        signature.update(dataToSign);\r\n        return signature.sign();\r\n    } catch (NoSuchAlgorithmException e) {\r\n        throw new IllegalStateException(e);\r\n    } catch (SignatureException e) {\r\n        throw new IllegalStateException(e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ResourceTargetDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRequiresRecreation() != null)\r\n        sb.append(\"RequiresRecreation: \").append(getRequiresRecreation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetApplicationRevisionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision()).append(\",\");\r\n    if (getRevisionInfo() != null)\r\n        sb.append(\"RevisionInfo: \").append(getRevisionInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListObjectParentPaths.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DetachFromIndexRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getIndexReference() != null)\r\n        sb.append(\"IndexReference: \").append(getIndexReference()).append(\",\");\r\n    if (getTargetReference() != null)\r\n        sb.append(\"TargetReference: \").append(getTargetReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.DeleteTrailRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchDetachFromIndexResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetachedObjectIdentifier() != null)\r\n        sb.append(\"DetachedObjectIdentifier: \").append(getDetachedObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetDeploymentInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstancesSummary() != null)\r\n        sb.append(\"InstancesSummary: \").append(getInstancesSummary()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ActionExecution.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSummary() != null)\r\n        sb.append(\"Summary: \").append(getSummary()).append(\",\");\r\n    if (getLastStatusChange() != null)\r\n        sb.append(\"LastStatusChange: \").append(getLastStatusChange()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken()).append(\",\");\r\n    if (getLastUpdatedBy() != null)\r\n        sb.append(\"LastUpdatedBy: \").append(getLastUpdatedBy()).append(\",\");\r\n    if (getExternalExecutionId() != null)\r\n        sb.append(\"ExternalExecutionId: \").append(getExternalExecutionId()).append(\",\");\r\n    if (getExternalExecutionUrl() != null)\r\n        sb.append(\"ExternalExecutionUrl: \").append(getExternalExecutionUrl()).append(\",\");\r\n    if (getPercentComplete() != null)\r\n        sb.append(\"PercentComplete: \").append(getPercentComplete()).append(\",\");\r\n    if (getErrorDetails() != null)\r\n        sb.append(\"ErrorDetails: \").append(getErrorDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListExportsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.ListAccountsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccounts() != null)\r\n        sb.append(\"Accounts: \").append(getAccounts()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetPublicKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKey() != null)\r\n        sb.append(\"PublicKey: \").append(getPublicKey()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.Certificates.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterCsr() != null)\r\n        sb.append(\"ClusterCsr: \").append(getClusterCsr()).append(\",\");\r\n    if (getHsmCertificate() != null)\r\n        sb.append(\"HsmCertificate: \").append(getHsmCertificate()).append(\",\");\r\n    if (getAwsHardwareCertificate() != null)\r\n        sb.append(\"AwsHardwareCertificate: \").append(getAwsHardwareCertificate()).append(\",\");\r\n    if (getManufacturerHardwareCertificate() != null)\r\n        sb.append(\"ManufacturerHardwareCertificate: \").append(getManufacturerHardwareCertificate()).append(\",\");\r\n    if (getClusterCertificate() != null)\r\n        sb.append(\"ClusterCertificate: \").append(getClusterCertificate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.SubmitJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetFolderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommitId() != null)\r\n        sb.append(\"CommitId: \").append(getCommitId()).append(\",\");\r\n    if (getFolderPath() != null)\r\n        sb.append(\"FolderPath: \").append(getFolderPath()).append(\",\");\r\n    if (getTreeId() != null)\r\n        sb.append(\"TreeId: \").append(getTreeId()).append(\",\");\r\n    if (getSubFolders() != null)\r\n        sb.append(\"SubFolders: \").append(getSubFolders()).append(\",\");\r\n    if (getFiles() != null)\r\n        sb.append(\"Files: \").append(getFiles()).append(\",\");\r\n    if (getSymbolicLinks() != null)\r\n        sb.append(\"SymbolicLinks: \").append(getSymbolicLinks()).append(\",\");\r\n    if (getSubModules() != null)\r\n        sb.append(\"SubModules: \").append(getSubModules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.intermediate.ShapeModel.getRequired",
	"Comment": "returns the list of c2j member names that are required for this shape.",
	"Method": "List<String> getRequired(){\r\n    return required;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.QueryArgProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueryArg() != null)\r\n        sb.append(\"QueryArg: \").append(getQueryArg()).append(\",\");\r\n    if (getProfileId() != null)\r\n        sb.append(\"ProfileId: \").append(getProfileId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.ListEnvironmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.BatchSuspendUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserErrors() != null)\r\n        sb.append(\"UserErrors: \").append(getUserErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchDetachTypedLinkResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DeleteSchemaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListTypedLinkFacetAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.CreateJobQueueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobQueueName() != null)\r\n        sb.append(\"JobQueueName: \").append(getJobQueueName()).append(\",\");\r\n    if (getJobQueueArn() != null)\r\n        sb.append(\"JobQueueArn: \").append(getJobQueueArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.RepositoryTriggerExecutionFailure.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrigger() != null)\r\n        sb.append(\"Trigger: \").append(getTrigger()).append(\",\");\r\n    if (getFailureMessage() != null)\r\n        sb.append(\"FailureMessage: \").append(getFailureMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.unlinkIdentity",
	"Comment": "unlinks a federated identity from an existing account. unlinked logins will be considered new identities nexttime they are seen. removing the last linked login will make this identity inaccessible.this is a public api. you do not need any credentials to call this api.",
	"Method": "UnlinkIdentityResult unlinkIdentity(UnlinkIdentityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUnlinkIdentity(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListIndexRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getRangesOnIndexedValues() != null)\r\n        sb.append(\"RangesOnIndexedValues: \").append(getRangesOnIndexedValues()).append(\",\");\r\n    if (getIndexReference() != null)\r\n        sb.append(\"IndexReference: \").append(getIndexReference()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetCommentsForPullRequestRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBeforeCommitId() != null)\r\n        sb.append(\"BeforeCommitId: \").append(getBeforeCommitId()).append(\",\");\r\n    if (getAfterCommitId() != null)\r\n        sb.append(\"AfterCommitId: \").append(getAfterCommitId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ExecutionDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSummary() != null)\r\n        sb.append(\"Summary: \").append(getSummary()).append(\",\");\r\n    if (getExternalExecutionId() != null)\r\n        sb.append(\"ExternalExecutionId: \").append(getExternalExecutionId()).append(\",\");\r\n    if (getPercentComplete() != null)\r\n        sb.append(\"PercentComplete: \").append(getPercentComplete());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.AWSAutoScalingPlansClient.getScalingPlanResourceForecastData",
	"Comment": "retrieves the forecast data for a scalable resource.capacity forecasts are represented as predicted values, or data points, that are calculated using historical datapoints from a specified cloudwatch load metric. data points are available for up to 56 days.",
	"Method": "GetScalingPlanResourceForecastDataResult getScalingPlanResourceForecastData(GetScalingPlanResourceForecastDataRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetScalingPlanResourceForecastData(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.TeamMember.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getProjectRole() != null)\r\n        sb.append(\"ProjectRole: \").append(getProjectRole()).append(\",\");\r\n    if (getRemoteAccessAllowed() != null)\r\n        sb.append(\"RemoteAccessAllowed: \").append(getRemoteAccessAllowed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.BlobMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlobId() != null)\r\n        sb.append(\"BlobId: \").append(getBlobId()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getMode() != null)\r\n        sb.append(\"Mode: \").append(getMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.CreateDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainStatus() != null)\r\n        sb.append(\"DomainStatus: \").append(getDomainStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.registerWebhookWithThirdParty",
	"Comment": "configures a connection between the webhook that was created and the external tool with events to be detected.",
	"Method": "RegisterWebhookWithThirdPartyResult registerWebhookWithThirdParty(RegisterWebhookWithThirdPartyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRegisterWebhookWithThirdParty(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ArrayPropertiesSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getIndex() != null)\r\n        sb.append(\"Index: \").append(getIndex());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetFieldLevelEncryptionProfileConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionProfileConfig() != null)\r\n        sb.append(\"FieldLevelEncryptionProfileConfig: \").append(getFieldLevelEncryptionProfileConfig()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.ListIdentityPoolsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.BuildPhase.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPhaseType() != null)\r\n        sb.append(\"PhaseType: \").append(getPhaseType()).append(\",\");\r\n    if (getPhaseStatus() != null)\r\n        sb.append(\"PhaseStatus: \").append(getPhaseStatus()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getDurationInSeconds() != null)\r\n        sb.append(\"DurationInSeconds: \").append(getDurationInSeconds()).append(\",\");\r\n    if (getContexts() != null)\r\n        sb.append(\"Contexts: \").append(getContexts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClient.updateWebhook",
	"Comment": "updates the webhook associated with an aws codebuild build project.if you use bitbucket for your repository, rotatesecret is ignored.",
	"Method": "UpdateWebhookResult updateWebhook(UpdateWebhookRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateWebhook(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchWriteOperationResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateObject() != null)\r\n        sb.append(\"CreateObject: \").append(getCreateObject()).append(\",\");\r\n    if (getAttachObject() != null)\r\n        sb.append(\"AttachObject: \").append(getAttachObject()).append(\",\");\r\n    if (getDetachObject() != null)\r\n        sb.append(\"DetachObject: \").append(getDetachObject()).append(\",\");\r\n    if (getUpdateObjectAttributes() != null)\r\n        sb.append(\"UpdateObjectAttributes: \").append(getUpdateObjectAttributes()).append(\",\");\r\n    if (getDeleteObject() != null)\r\n        sb.append(\"DeleteObject: \").append(getDeleteObject()).append(\",\");\r\n    if (getAddFacetToObject() != null)\r\n        sb.append(\"AddFacetToObject: \").append(getAddFacetToObject()).append(\",\");\r\n    if (getRemoveFacetFromObject() != null)\r\n        sb.append(\"RemoveFacetFromObject: \").append(getRemoveFacetFromObject()).append(\",\");\r\n    if (getAttachPolicy() != null)\r\n        sb.append(\"AttachPolicy: \").append(getAttachPolicy()).append(\",\");\r\n    if (getDetachPolicy() != null)\r\n        sb.append(\"DetachPolicy: \").append(getDetachPolicy()).append(\",\");\r\n    if (getCreateIndex() != null)\r\n        sb.append(\"CreateIndex: \").append(getCreateIndex()).append(\",\");\r\n    if (getAttachToIndex() != null)\r\n        sb.append(\"AttachToIndex: \").append(getAttachToIndex()).append(\",\");\r\n    if (getDetachFromIndex() != null)\r\n        sb.append(\"DetachFromIndex: \").append(getDetachFromIndex()).append(\",\");\r\n    if (getAttachTypedLink() != null)\r\n        sb.append(\"AttachTypedLink: \").append(getAttachTypedLink()).append(\",\");\r\n    if (getDetachTypedLink() != null)\r\n        sb.append(\"DetachTypedLink: \").append(getDetachTypedLink()).append(\",\");\r\n    if (getUpdateLinkAttributes() != null)\r\n        sb.append(\"UpdateLinkAttributes: \").append(getUpdateLinkAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.updateSchema",
	"Comment": "updates the schema name with a new name. only development schema names can be updated.",
	"Method": "UpdateSchemaResult updateSchema(UpdateSchemaRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateSchema(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9AsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.PutSchemaFromJsonResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.describeAvailabilityOptions",
	"Comment": "gets the availability options configured for a domain. by default, shows the configuration with any pendingchanges. set the deployed option to true to show the active configuration and excludepending changes. for more information, see configuring availability options in the amazon cloudsearch developer guide.",
	"Method": "DescribeAvailabilityOptionsResult describeAvailabilityOptions(DescribeAvailabilityOptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAvailabilityOptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.config.customization.CustomizationConfig.setStringOverloadForInputStreamMember",
	"Comment": "customization to generate a method overload for a member setter that takes a string ratherthan an inputstream. currently only used by lambda",
	"Method": "void setStringOverloadForInputStreamMember(StringOverloadForInputStreamMember stringOverloadForInputStreamMember){\r\n    this.convenienceTypeOverloads.add(stringOverloadForInputStreamMember.getConvenienceTypeOverload());\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClient.deleteWebhook",
	"Comment": "for an existing aws codebuild build project that has its source code stored in a github or bitbucket repository,stops aws codebuild from rebuilding the source code every time a code change is pushed to the repository.",
	"Method": "DeleteWebhookResult deleteWebhook(DeleteWebhookRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteWebhook(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.CreateDeploymentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDeploymentGroupName() != null)\r\n        sb.append(\"DeploymentGroupName: \").append(getDeploymentGroupName()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision()).append(\",\");\r\n    if (getDeploymentConfigName() != null)\r\n        sb.append(\"DeploymentConfigName: \").append(getDeploymentConfigName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getIgnoreApplicationStopFailures() != null)\r\n        sb.append(\"IgnoreApplicationStopFailures: \").append(getIgnoreApplicationStopFailures()).append(\",\");\r\n    if (getTargetInstances() != null)\r\n        sb.append(\"TargetInstances: \").append(getTargetInstances()).append(\",\");\r\n    if (getAutoRollbackConfiguration() != null)\r\n        sb.append(\"AutoRollbackConfiguration: \").append(getAutoRollbackConfiguration()).append(\",\");\r\n    if (getUpdateOutdatedInstancesOnly() != null)\r\n        sb.append(\"UpdateOutdatedInstancesOnly: \").append(getUpdateOutdatedInstancesOnly()).append(\",\");\r\n    if (getFileExistsBehavior() != null)\r\n        sb.append(\"FileExistsBehavior: \").append(getFileExistsBehavior());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListPublishedSchemaArnsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListObjectPoliciesResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedPolicyIds() != null)\r\n        sb.append(\"AttachedPolicyIds: \").append(getAttachedPolicyIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchLookupPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ListLunaClientsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientList() != null)\r\n        sb.append(\"ClientList: \").append(getClientList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.MetricStat.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetric() != null)\r\n        sb.append(\"Metric: \").append(getMetric()).append(\",\");\r\n    if (getPeriod() != null)\r\n        sb.append(\"Period: \").append(getPeriod()).append(\",\");\r\n    if (getStat() != null)\r\n        sb.append(\"Stat: \").append(getStat()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.CreateProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProject() != null)\r\n        sb.append(\"Project: \").append(getProject());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClient.listMetrics",
	"Comment": "list the specified metrics. you can use the returned metrics with getmetricdata orgetmetricstatistics to obtain statistical data.up to 500 results are returned for any one call. to retrieve additional results, use the returned token withsubsequent calls.after you create a metric, allow up to fifteen minutes before the metric appears. statistics about the metric,however, are available sooner using getmetricdata or getmetricstatistics.",
	"Method": "ListMetricsResult listMetrics(ListMetricsRequest request,ListMetricsResult listMetrics){\r\n    return listMetrics(new ListMetricsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.CustomizedLoadMetricSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getStatistic() != null)\r\n        sb.append(\"Statistic: \").append(getStatistic()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.retryStageExecution",
	"Comment": "resumes the pipeline execution by retrying the last failed actions in a stage.",
	"Method": "RetryStageExecutionResult retryStageExecution(RetryStageExecutionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRetryStageExecution(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.CreateTrailRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getS3BucketName() != null)\r\n        sb.append(\"S3BucketName: \").append(getS3BucketName()).append(\",\");\r\n    if (getS3KeyPrefix() != null)\r\n        sb.append(\"S3KeyPrefix: \").append(getS3KeyPrefix()).append(\",\");\r\n    if (getSnsTopicName() != null)\r\n        sb.append(\"SnsTopicName: \").append(getSnsTopicName()).append(\",\");\r\n    if (getIncludeGlobalServiceEvents() != null)\r\n        sb.append(\"IncludeGlobalServiceEvents: \").append(getIncludeGlobalServiceEvents()).append(\",\");\r\n    if (getIsMultiRegionTrail() != null)\r\n        sb.append(\"IsMultiRegionTrail: \").append(getIsMultiRegionTrail()).append(\",\");\r\n    if (getEnableLogFileValidation() != null)\r\n        sb.append(\"EnableLogFileValidation: \").append(getEnableLogFileValidation()).append(\",\");\r\n    if (getCloudWatchLogsLogGroupArn() != null)\r\n        sb.append(\"CloudWatchLogsLogGroupArn: \").append(getCloudWatchLogsLogGroupArn()).append(\",\");\r\n    if (getCloudWatchLogsRoleArn() != null)\r\n        sb.append(\"CloudWatchLogsRoleArn: \").append(getCloudWatchLogsRoleArn()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getIsOrganizationTrail() != null)\r\n        sb.append(\"IsOrganizationTrail: \").append(getIsOrganizationTrail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.CloudWatchMetricConfig.setCredentialsProvider",
	"Comment": "sets the credential provider to the given provider. this credentialprovider is used by the uploader thread to connect to amazon cloudwatch.",
	"Method": "void setCredentialsProvider(AWSCredentialsProvider credentialsProvider){\r\n    this.credentialsProvider = credentialsProvider;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient.describeAlarmsAsync",
	"Comment": "simplified method form for invoking the describealarms operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAlarmsResult> describeAlarmsAsync(DescribeAlarmsRequest request,java.util.concurrent.Future<DescribeAlarmsResult> describeAlarmsAsync,DescribeAlarmsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAlarmsRequest, DescribeAlarmsResult> asyncHandler,java.util.concurrent.Future<DescribeAlarmsResult> describeAlarmsAsync,java.util.concurrent.Future<DescribeAlarmsResult> describeAlarmsAsync,com.amazonaws.handlers.AsyncHandler<DescribeAlarmsRequest, DescribeAlarmsResult> asyncHandler){\r\n    return describeAlarmsAsync(new DescribeAlarmsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetDeploymentConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentConfigName() != null)\r\n        sb.append(\"DeploymentConfigName: \").append(getDeploymentConfigName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.StreamingDistributionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getS3Origin() != null)\r\n        sb.append(\"S3Origin: \").append(getS3Origin()).append(\",\");\r\n    if (getAliases() != null)\r\n        sb.append(\"Aliases: \").append(getAliases()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getLogging() != null)\r\n        sb.append(\"Logging: \").append(getLogging()).append(\",\");\r\n    if (getTrustedSigners() != null)\r\n        sb.append(\"TrustedSigners: \").append(getTrustedSigners()).append(\",\");\r\n    if (getPriceClass() != null)\r\n        sb.append(\"PriceClass: \").append(getPriceClass()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.AlarmHistoryItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlarmName() != null)\r\n        sb.append(\"AlarmName: \").append(getAlarmName()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getHistoryItemType() != null)\r\n        sb.append(\"HistoryItemType: \").append(getHistoryItemType()).append(\",\");\r\n    if (getHistorySummary() != null)\r\n        sb.append(\"HistorySummary: \").append(getHistorySummary()).append(\",\");\r\n    if (getHistoryData() != null)\r\n        sb.append(\"HistoryData: \").append(getHistoryData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.StopLoggingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PostCommentReplyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInReplyTo() != null)\r\n        sb.append(\"InReplyTo: \").append(getInReplyTo()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClient.describeAlarms",
	"Comment": "retrieves the specified alarms. if no alarms are specified, all alarms are returned. alarms can be retrieved byusing only a prefix for the alarm name, the alarm state, or a prefix for any action.",
	"Method": "DescribeAlarmsResult describeAlarms(DescribeAlarmsRequest request,DescribeAlarmsResult describeAlarms){\r\n    return describeAlarms(new DescribeAlarmsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.waiters.GetStreamingDistributionFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "GetStreamingDistributionResult apply(GetStreamingDistributionRequest getStreamingDistributionRequest){\r\n    return client.getStreamingDistribution(getStreamingDistributionRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListPublicKeysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ListPipelineExecutionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineExecutionSummaries() != null)\r\n        sb.append(\"PipelineExecutionSummaries: \").append(getPipelineExecutionSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.TypedLinkAttributeDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getIsImmutable() != null)\r\n        sb.append(\"IsImmutable: \").append(getIsImmutable()).append(\",\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules()).append(\",\");\r\n    if (getRequiredBehavior() != null)\r\n        sb.append(\"RequiredBehavior: \").append(getRequiredBehavior());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetFacetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RemoveTagsFromOnPremisesInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getInstanceNames() != null)\r\n        sb.append(\"InstanceNames: \").append(getInstanceNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DetachTypedLinkResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeleteApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.BatchSuspendUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getUserIdList() != null)\r\n        sb.append(\"UserIdList: \").append(getUserIdList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListIncomingTypedLinksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLinkSpecifiers() != null)\r\n        sb.append(\"LinkSpecifiers: \").append(getLinkSpecifiers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.UpdateSubscriberResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listPolicyAttachments",
	"Comment": "returns all of the objectidentifiers to which a given policy is attached.",
	"Method": "ListPolicyAttachmentsResult listPolicyAttachments(ListPolicyAttachmentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListPolicyAttachments(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsbudgets using the current builder configuration.",
	"Method": "AWSBudgets build(AwsSyncClientParams params){\r\n    return new AWSBudgetsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchDeleteObject.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStackInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getStackInstanceAccount() != null)\r\n        sb.append(\"StackInstanceAccount: \").append(getStackInstanceAccount()).append(\",\");\r\n    if (getStackInstanceRegion() != null)\r\n        sb.append(\"StackInstanceRegion: \").append(getStackInstanceRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.MachineMetricFactory.memoryMetricValues",
	"Comment": "returns the set of memory metrics and the corresponding values based onthe default and the customized set of metrics, if any.",
	"Method": "MetricValues memoryMetricValues(Set<MachineMetric> customSet,List<Long> values){\r\n    return metricValues(customSet, MachineMetricFactory.memoryMetrics, values);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutJobSuccessResultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.CommentsForComparedCommit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBeforeCommitId() != null)\r\n        sb.append(\"BeforeCommitId: \").append(getBeforeCommitId()).append(\",\");\r\n    if (getAfterCommitId() != null)\r\n        sb.append(\"AfterCommitId: \").append(getAfterCommitId()).append(\",\");\r\n    if (getBeforeBlobId() != null)\r\n        sb.append(\"BeforeBlobId: \").append(getBeforeBlobId()).append(\",\");\r\n    if (getAfterBlobId() != null)\r\n        sb.append(\"AfterBlobId: \").append(getAfterBlobId()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getComments() != null)\r\n        sb.append(\"Comments: \").append(getComments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.BudgetedAndActualAmounts.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBudgetedAmount() != null)\r\n        sb.append(\"BudgetedAmount: \").append(getBudgetedAmount()).append(\",\");\r\n    if (getActualAmount() != null)\r\n        sb.append(\"ActualAmount: \").append(getActualAmount()).append(\",\");\r\n    if (getTimePeriod() != null)\r\n        sb.append(\"TimePeriod: \").append(getTimePeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeploymentTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentTargetType() != null)\r\n        sb.append(\"DeploymentTargetType: \").append(getDeploymentTargetType()).append(\",\");\r\n    if (getInstanceTarget() != null)\r\n        sb.append(\"InstanceTarget: \").append(getInstanceTarget()).append(\",\");\r\n    if (getLambdaTarget() != null)\r\n        sb.append(\"LambdaTarget: \").append(getLambdaTarget()).append(\",\");\r\n    if (getEcsTarget() != null)\r\n        sb.append(\"EcsTarget: \").append(getEcsTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.GetPipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline()).append(\",\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ObjectIdentifierAndLinkNameTuple.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier()).append(\",\");\r\n    if (getLinkName() != null)\r\n        sb.append(\"LinkName: \").append(getLinkName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazoncloudfront using the current builder configuration.",
	"Method": "AmazonCloudFront build(AwsSyncClientParams params){\r\n    return new AmazonCloudFrontClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStacksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSummaries() != null)\r\n        sb.append(\"StackSummaries: \").append(getStackSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AbstractAmazonCodeDeployAsync.batchGetDeploymentsAsync",
	"Comment": "simplified method form for invoking the batchgetdeployments operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<BatchGetDeploymentsResult> batchGetDeploymentsAsync(BatchGetDeploymentsRequest request,java.util.concurrent.Future<BatchGetDeploymentsResult> batchGetDeploymentsAsync,BatchGetDeploymentsRequest request,com.amazonaws.handlers.AsyncHandler<BatchGetDeploymentsRequest, BatchGetDeploymentsResult> asyncHandler,java.util.concurrent.Future<BatchGetDeploymentsResult> batchGetDeploymentsAsync,java.util.concurrent.Future<BatchGetDeploymentsResult> batchGetDeploymentsAsync,com.amazonaws.handlers.AsyncHandler<BatchGetDeploymentsRequest, BatchGetDeploymentsResult> asyncHandler){\r\n    return batchGetDeploymentsAsync(new BatchGetDeploymentsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackSetOperationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getEndTimestamp() != null)\r\n        sb.append(\"EndTimestamp: \").append(getEndTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.getLinkAttributes",
	"Comment": "retrieves attributes that are associated with a typed link.",
	"Method": "GetLinkAttributesResult getLinkAttributes(GetLinkAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLinkAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.AnalysisScheme.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAnalysisSchemeName() != null)\r\n        sb.append(\"AnalysisSchemeName: \").append(getAnalysisSchemeName()).append(\",\");\r\n    if (getAnalysisSchemeLanguage() != null)\r\n        sb.append(\"AnalysisSchemeLanguage: \").append(getAnalysisSchemeLanguage()).append(\",\");\r\n    if (getAnalysisOptions() != null)\r\n        sb.append(\"AnalysisOptions: \").append(getAnalysisOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AbstractAmazonCodeDeployAsync.batchGetApplicationsAsync",
	"Comment": "simplified method form for invoking the batchgetapplications operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<BatchGetApplicationsResult> batchGetApplicationsAsync(BatchGetApplicationsRequest request,java.util.concurrent.Future<BatchGetApplicationsResult> batchGetApplicationsAsync,BatchGetApplicationsRequest request,com.amazonaws.handlers.AsyncHandler<BatchGetApplicationsRequest, BatchGetApplicationsResult> asyncHandler,java.util.concurrent.Future<BatchGetApplicationsResult> batchGetApplicationsAsync,java.util.concurrent.Future<BatchGetApplicationsResult> batchGetApplicationsAsync,com.amazonaws.handlers.AsyncHandler<BatchGetApplicationsRequest, BatchGetApplicationsResult> asyncHandler){\r\n    return batchGetApplicationsAsync(new BatchGetApplicationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getPropagateAtLaunch() != null)\r\n        sb.append(\"PropagateAtLaunch: \").append(getPropagateAtLaunch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PollForJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListObjectPolicies.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.AttemptContainerDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerInstanceArn() != null)\r\n        sb.append(\"ContainerInstanceArn: \").append(getContainerInstanceArn()).append(\",\");\r\n    if (getTaskArn() != null)\r\n        sb.append(\"TaskArn: \").append(getTaskArn()).append(\",\");\r\n    if (getExitCode() != null)\r\n        sb.append(\"ExitCode: \").append(getExitCode()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DeleteStackInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getAccounts() != null)\r\n        sb.append(\"Accounts: \").append(getAccounts()).append(\",\");\r\n    if (getRegions() != null)\r\n        sb.append(\"Regions: \").append(getRegions()).append(\",\");\r\n    if (getOperationPreferences() != null)\r\n        sb.append(\"OperationPreferences: \").append(getOperationPreferences()).append(\",\");\r\n    if (getRetainStacks() != null)\r\n        sb.append(\"RetainStacks: \").append(getRetainStacks()).append(\",\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ListProjectsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjects() != null)\r\n        sb.append(\"Projects: \").append(getProjects()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DetectStackResourceDriftRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getLogicalResourceId() != null)\r\n        sb.append(\"LogicalResourceId: \").append(getLogicalResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.OptionStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getUpdateDate() != null)\r\n        sb.append(\"UpdateDate: \").append(getUpdateDate()).append(\",\");\r\n    if (getUpdateVersion() != null)\r\n        sb.append(\"UpdateVersion: \").append(getUpdateVersion()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getPendingDeletion() != null)\r\n        sb.append(\"PendingDeletion: \").append(getPendingDeletion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Origin.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getOriginPath() != null)\r\n        sb.append(\"OriginPath: \").append(getOriginPath()).append(\",\");\r\n    if (getCustomHeaders() != null)\r\n        sb.append(\"CustomHeaders: \").append(getCustomHeaders()).append(\",\");\r\n    if (getS3OriginConfig() != null)\r\n        sb.append(\"S3OriginConfig: \").append(getS3OriginConfig()).append(\",\");\r\n    if (getCustomOriginConfig() != null)\r\n        sb.append(\"CustomOriginConfig: \").append(getCustomOriginConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttachTypedLinkRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getSourceObjectReference() != null)\r\n        sb.append(\"SourceObjectReference: \").append(getSourceObjectReference()).append(\",\");\r\n    if (getTargetObjectReference() != null)\r\n        sb.append(\"TargetObjectReference: \").append(getTargetObjectReference()).append(\",\");\r\n    if (getTypedLinkFacet() != null)\r\n        sb.append(\"TypedLinkFacet: \").append(getTypedLinkFacet()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.listDeploymentTargets",
	"Comment": "returns an array of target ids that are associated a deployment.",
	"Method": "ListDeploymentTargetsResult listDeploymentTargets(ListDeploymentTargetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDeploymentTargets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchGetObjectAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getSchemaFacet() != null)\r\n        sb.append(\"SchemaFacet: \").append(getSchemaFacet()).append(\",\");\r\n    if (getAttributeNames() != null)\r\n        sb.append(\"AttributeNames: \").append(getAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getStackSetId() != null)\r\n        sb.append(\"StackSetId: \").append(getStackSetId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getStackSetARN() != null)\r\n        sb.append(\"StackSetARN: \").append(getStackSetARN()).append(\",\");\r\n    if (getAdministrationRoleARN() != null)\r\n        sb.append(\"AdministrationRoleARN: \").append(getAdministrationRoleARN()).append(\",\");\r\n    if (getExecutionRoleName() != null)\r\n        sb.append(\"ExecutionRoleName: \").append(getExecutionRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListFieldLevelEncryptionProfilesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.registerApplicationRevision",
	"Comment": "registers with aws codedeploy a revision for the specified application.",
	"Method": "RegisterApplicationRevisionResult registerApplicationRevision(RegisterApplicationRevisionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRegisterApplicationRevision(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.CreateProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getProjectTemplateId() != null)\r\n        sb.append(\"ProjectTemplateId: \").append(getProjectTemplateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListDistributionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.GetIdResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeServiceAccessPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessPolicies() != null)\r\n        sb.append(\"AccessPolicies: \").append(getAccessPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.listWebhooks",
	"Comment": "gets a listing of all the webhooks in this region for this account. the output lists all webhooks and includesthe webhook url and arn, as well the configuration for each webhook.",
	"Method": "ListWebhooksResult listWebhooks(ListWebhooksRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListWebhooks(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazoncloudsearch using the current builder configuration.",
	"Method": "AmazonCloudSearch build(AwsSyncClientParams params){\r\n    return new AmazonCloudSearchClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awscloudhsmasync using the current builder configuration.",
	"Method": "AWSCloudHSMAsync build(AwsAsyncClientParams params){\r\n    return new AWSCloudHSMAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DefineSuggesterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getSuggester() != null)\r\n        sb.append(\"Suggester: \").append(getSuggester());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetDeploymentGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDeploymentGroupName() != null)\r\n        sb.append(\"DeploymentGroupName: \").append(getDeploymentGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.Volume.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHost() != null)\r\n        sb.append(\"Host: \").append(getHost()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListInvalidationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInvalidationList() != null)\r\n        sb.append(\"InvalidationList: \").append(getInvalidationList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetObjectInformationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaFacets() != null)\r\n        sb.append(\"SchemaFacets: \").append(getSchemaFacets()).append(\",\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.SuggestStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimems() != null)\r\n        sb.append(\"Timems: \").append(getTimems()).append(\",\");\r\n    if (getRid() != null)\r\n        sb.append(\"Rid: \").append(getRid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DetectStackDriftRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getLogicalResourceIds() != null)\r\n        sb.append(\"LogicalResourceIds: \").append(getLogicalResourceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AbstractAmazonCodeDeployAsync.listApplicationsAsync",
	"Comment": "simplified method form for invoking the listapplications operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListApplicationsResult> listApplicationsAsync(ListApplicationsRequest request,java.util.concurrent.Future<ListApplicationsResult> listApplicationsAsync,ListApplicationsRequest request,com.amazonaws.handlers.AsyncHandler<ListApplicationsRequest, ListApplicationsResult> asyncHandler,java.util.concurrent.Future<ListApplicationsResult> listApplicationsAsync,java.util.concurrent.Future<ListApplicationsResult> listApplicationsAsync,com.amazonaws.handlers.AsyncHandler<ListApplicationsRequest, ListApplicationsResult> asyncHandler){\r\n    return listApplicationsAsync(new ListApplicationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.ResetPersonalPINRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CloudFrontOriginAccessIdentity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getS3CanonicalUserId() != null)\r\n        sb.append(\"S3CanonicalUserId: \").append(getS3CanonicalUserId()).append(\",\");\r\n    if (getCloudFrontOriginAccessIdentityConfig() != null)\r\n        sb.append(\"CloudFrontOriginAccessIdentityConfig: \").append(getCloudFrontOriginAccessIdentityConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.PredefinedScalingMetricSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPredefinedScalingMetricType() != null)\r\n        sb.append(\"PredefinedScalingMetricType: \").append(getPredefinedScalingMetricType()).append(\",\");\r\n    if (getResourceLabel() != null)\r\n        sb.append(\"ResourceLabel: \").append(getResourceLabel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchLookupPolicyResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyToPathList() != null)\r\n        sb.append(\"PolicyToPathList: \").append(getPolicyToPathList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetFieldLevelEncryptionProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionProfile() != null)\r\n        sb.append(\"FieldLevelEncryptionProfile: \").append(getFieldLevelEncryptionProfile()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.GetDashboardRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDashboardName() != null)\r\n        sb.append(\"DashboardName: \").append(getDashboardName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontClient.listDistributionsByWebACLId",
	"Comment": "list the distributions that are associated with a specified aws waf web acl.",
	"Method": "ListDistributionsByWebACLIdResult listDistributionsByWebACLId(ListDistributionsByWebACLIdRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDistributionsByWebACLId(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ECSTaskSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentifer() != null)\r\n        sb.append(\"Identifer: \").append(getIdentifer()).append(\",\");\r\n    if (getDesiredCount() != null)\r\n        sb.append(\"DesiredCount: \").append(getDesiredCount()).append(\",\");\r\n    if (getPendingCount() != null)\r\n        sb.append(\"PendingCount: \").append(getPendingCount()).append(\",\");\r\n    if (getRunningCount() != null)\r\n        sb.append(\"RunningCount: \").append(getRunningCount()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getTrafficWeight() != null)\r\n        sb.append(\"TrafficWeight: \").append(getTrafficWeight()).append(\",\");\r\n    if (getTargetGroup() != null)\r\n        sb.append(\"TargetGroup: \").append(getTargetGroup()).append(\",\");\r\n    if (getTaskSetLabel() != null)\r\n        sb.append(\"TaskSetLabel: \").append(getTaskSetLabel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.describeEnvironmentStatus",
	"Comment": "gets status information for an aws cloud9 development environment.",
	"Method": "DescribeEnvironmentStatusResult describeEnvironmentStatus(DescribeEnvironmentStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEnvironmentStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AbstractAmazonCloudWatchAsync.describeAlarmHistoryAsync",
	"Comment": "simplified method form for invoking the describealarmhistory operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAlarmHistoryResult> describeAlarmHistoryAsync(DescribeAlarmHistoryRequest request,java.util.concurrent.Future<DescribeAlarmHistoryResult> describeAlarmHistoryAsync,DescribeAlarmHistoryRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAlarmHistoryRequest, DescribeAlarmHistoryResult> asyncHandler,java.util.concurrent.Future<DescribeAlarmHistoryResult> describeAlarmHistoryAsync,java.util.concurrent.Future<DescribeAlarmHistoryResult> describeAlarmHistoryAsync,com.amazonaws.handlers.AsyncHandler<DescribeAlarmHistoryRequest, DescribeAlarmHistoryResult> asyncHandler){\r\n    return describeAlarmHistoryAsync(new DescribeAlarmHistoryRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ContinueUpdateRollbackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.listDeploymentGroups",
	"Comment": "lists the deployment groups for an application registered with the applicable iam user or aws account.",
	"Method": "ListDeploymentGroupsResult listDeploymentGroups(ListDeploymentGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDeploymentGroups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PutRepositoryTriggersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getTriggers() != null)\r\n        sb.append(\"Triggers: \").append(getTriggers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.intermediate.OperationModel.setEndpointTrait",
	"Comment": "sets the endpoint trait that will be used to resolve the endpoint of an api.",
	"Method": "void setEndpointTrait(EndpointTrait endpointTrait){\r\n    this.endpointTrait = endpointTrait;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Signer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAwsAccountNumber() != null)\r\n        sb.append(\"AwsAccountNumber: \").append(getAwsAccountNumber()).append(\",\");\r\n    if (getKeyPairIds() != null)\r\n        sb.append(\"KeyPairIds: \").append(getKeyPairIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.getConfig",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.gets the configuration files necessary to connect to all high availability partition groups the client isassociated with.",
	"Method": "GetConfigResult getConfig(GetConfigRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetConfig(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdateDefaultBranchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.FieldLevelEncryptionProfileList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.S3OriginConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOriginAccessIdentity() != null)\r\n        sb.append(\"OriginAccessIdentity: \").append(getOriginAccessIdentity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.StartBuildRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getSecondarySourcesOverride() != null)\r\n        sb.append(\"SecondarySourcesOverride: \").append(getSecondarySourcesOverride()).append(\",\");\r\n    if (getSecondarySourcesVersionOverride() != null)\r\n        sb.append(\"SecondarySourcesVersionOverride: \").append(getSecondarySourcesVersionOverride()).append(\",\");\r\n    if (getSourceVersion() != null)\r\n        sb.append(\"SourceVersion: \").append(getSourceVersion()).append(\",\");\r\n    if (getArtifactsOverride() != null)\r\n        sb.append(\"ArtifactsOverride: \").append(getArtifactsOverride()).append(\",\");\r\n    if (getSecondaryArtifactsOverride() != null)\r\n        sb.append(\"SecondaryArtifactsOverride: \").append(getSecondaryArtifactsOverride()).append(\",\");\r\n    if (getEnvironmentVariablesOverride() != null)\r\n        sb.append(\"EnvironmentVariablesOverride: \").append(getEnvironmentVariablesOverride()).append(\",\");\r\n    if (getSourceTypeOverride() != null)\r\n        sb.append(\"SourceTypeOverride: \").append(getSourceTypeOverride()).append(\",\");\r\n    if (getSourceLocationOverride() != null)\r\n        sb.append(\"SourceLocationOverride: \").append(getSourceLocationOverride()).append(\",\");\r\n    if (getSourceAuthOverride() != null)\r\n        sb.append(\"SourceAuthOverride: \").append(getSourceAuthOverride()).append(\",\");\r\n    if (getGitCloneDepthOverride() != null)\r\n        sb.append(\"GitCloneDepthOverride: \").append(getGitCloneDepthOverride()).append(\",\");\r\n    if (getBuildspecOverride() != null)\r\n        sb.append(\"BuildspecOverride: \").append(getBuildspecOverride()).append(\",\");\r\n    if (getInsecureSslOverride() != null)\r\n        sb.append(\"InsecureSslOverride: \").append(getInsecureSslOverride()).append(\",\");\r\n    if (getReportBuildStatusOverride() != null)\r\n        sb.append(\"ReportBuildStatusOverride: \").append(getReportBuildStatusOverride()).append(\",\");\r\n    if (getEnvironmentTypeOverride() != null)\r\n        sb.append(\"EnvironmentTypeOverride: \").append(getEnvironmentTypeOverride()).append(\",\");\r\n    if (getImageOverride() != null)\r\n        sb.append(\"ImageOverride: \").append(getImageOverride()).append(\",\");\r\n    if (getComputeTypeOverride() != null)\r\n        sb.append(\"ComputeTypeOverride: \").append(getComputeTypeOverride()).append(\",\");\r\n    if (getCertificateOverride() != null)\r\n        sb.append(\"CertificateOverride: \").append(getCertificateOverride()).append(\",\");\r\n    if (getCacheOverride() != null)\r\n        sb.append(\"CacheOverride: \").append(getCacheOverride()).append(\",\");\r\n    if (getServiceRoleOverride() != null)\r\n        sb.append(\"ServiceRoleOverride: \").append(getServiceRoleOverride()).append(\",\");\r\n    if (getPrivilegedModeOverride() != null)\r\n        sb.append(\"PrivilegedModeOverride: \").append(getPrivilegedModeOverride()).append(\",\");\r\n    if (getTimeoutInMinutesOverride() != null)\r\n        sb.append(\"TimeoutInMinutesOverride: \").append(getTimeoutInMinutesOverride()).append(\",\");\r\n    if (getQueuedTimeoutInMinutesOverride() != null)\r\n        sb.append(\"QueuedTimeoutInMinutesOverride: \").append(getQueuedTimeoutInMinutesOverride()).append(\",\");\r\n    if (getIdempotencyToken() != null)\r\n        sb.append(\"IdempotencyToken: \").append(getIdempotencyToken()).append(\",\");\r\n    if (getLogsConfigOverride() != null)\r\n        sb.append(\"LogsConfigOverride: \").append(getLogsConfigOverride());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DeleteHsmResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.BatchUpdateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserErrors() != null)\r\n        sb.append(\"UserErrors: \").append(getUserErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DomainStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainId() != null)\r\n        sb.append(\"DomainId: \").append(getDomainId()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getDeleted() != null)\r\n        sb.append(\"Deleted: \").append(getDeleted()).append(\",\");\r\n    if (getDocService() != null)\r\n        sb.append(\"DocService: \").append(getDocService()).append(\",\");\r\n    if (getSearchService() != null)\r\n        sb.append(\"SearchService: \").append(getSearchService()).append(\",\");\r\n    if (getRequiresIndexDocuments() != null)\r\n        sb.append(\"RequiresIndexDocuments: \").append(getRequiresIndexDocuments()).append(\",\");\r\n    if (getProcessing() != null)\r\n        sb.append(\"Processing: \").append(getProcessing()).append(\",\");\r\n    if (getSearchInstanceType() != null)\r\n        sb.append(\"SearchInstanceType: \").append(getSearchInstanceType()).append(\",\");\r\n    if (getSearchPartitionCount() != null)\r\n        sb.append(\"SearchPartitionCount: \").append(getSearchPartitionCount()).append(\",\");\r\n    if (getSearchInstanceCount() != null)\r\n        sb.append(\"SearchInstanceCount: \").append(getSearchInstanceCount()).append(\",\");\r\n    if (getLimits() != null)\r\n        sb.append(\"Limits: \").append(getLimits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.RetryStageExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getStageName() != null)\r\n        sb.append(\"StageName: \").append(getStageName()).append(\",\");\r\n    if (getPipelineExecutionId() != null)\r\n        sb.append(\"PipelineExecutionId: \").append(getPipelineExecutionId()).append(\",\");\r\n    if (getRetryMode() != null)\r\n        sb.append(\"RetryMode: \").append(getRetryMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.waiters.AmazonAutoScalingWaiters.groupInService",
	"Comment": "builds a groupinservice waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeAutoScalingGroupsRequest> groupInService(){\r\n    return new WaiterBuilder<DescribeAutoScalingGroupsRequest, DescribeAutoScalingGroupsResult>().withSdkFunction(new DescribeAutoScalingGroupsFunction(client)).withAcceptors(new GroupInService.IsFalseMatcher(), new GroupInService.IsTrueMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.RepositoryTrigger.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDestinationArn() != null)\r\n        sb.append(\"DestinationArn: \").append(getDestinationArn()).append(\",\");\r\n    if (getCustomData() != null)\r\n        sb.append(\"CustomData: \").append(getCustomData()).append(\",\");\r\n    if (getBranches() != null)\r\n        sb.append(\"Branches: \").append(getBranches()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.UpdateStackSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PullRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLastActivityDate() != null)\r\n        sb.append(\"LastActivityDate: \").append(getLastActivityDate()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getPullRequestStatus() != null)\r\n        sb.append(\"PullRequestStatus: \").append(getPullRequestStatus()).append(\",\");\r\n    if (getAuthorArn() != null)\r\n        sb.append(\"AuthorArn: \").append(getAuthorArn()).append(\",\");\r\n    if (getPullRequestTargets() != null)\r\n        sb.append(\"PullRequestTargets: \").append(getPullRequestTargets()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.lookupDeveloperIdentity",
	"Comment": "retrieves the identityid associated with a developeruseridentifier or the list ofdeveloperuseridentifiers associated with an identityid for an existing identity. eitheridentityid or developeruseridentifier must not be null. if you supply only one of thesevalues, the other value will be searched in the database and returned as a part of the response. if you supplyboth, developeruseridentifier will be matched against identityid. if the values areverified against the database, the response returns both values and is the same as the request. otherwise aresourceconflictexception is thrown.you must use aws developer credentials to call this api.",
	"Method": "LookupDeveloperIdentityResult lookupDeveloperIdentity(LookupDeveloperIdentityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeLookupDeveloperIdentity(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.GetEventSelectorsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrailName() != null)\r\n        sb.append(\"TrailName: \").append(getTrailName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ArtifactDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinimumCount() != null)\r\n        sb.append(\"MinimumCount: \").append(getMinimumCount()).append(\",\");\r\n    if (getMaximumCount() != null)\r\n        sb.append(\"MaximumCount: \").append(getMaximumCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.RemoveTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTagsList() != null)\r\n        sb.append(\"TagsList: \").append(getTagsList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RevisionLocation.withString",
	"Comment": "information about the location of an aws lambda deployment revision stored as a rawstring.",
	"Method": "RevisionLocation withString(RawString string){\r\n    setString(string);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.InstanceTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId()).append(\",\");\r\n    if (getTargetArn() != null)\r\n        sb.append(\"TargetArn: \").append(getTargetArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getLifecycleEvents() != null)\r\n        sb.append(\"LifecycleEvents: \").append(getLifecycleEvents()).append(\",\");\r\n    if (getInstanceLabel() != null)\r\n        sb.append(\"InstanceLabel: \").append(getInstanceLabel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontClient.getCloudFrontOriginAccessIdentityConfig",
	"Comment": "get the configuration information about an origin access identity.",
	"Method": "GetCloudFrontOriginAccessIdentityConfigResult getCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetCloudFrontOriginAccessIdentityConfig(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpdateLinkAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AbstractAWSCloudTrailAsync.listPublicKeysAsync",
	"Comment": "simplified method form for invoking the listpublickeys operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListPublicKeysResult> listPublicKeysAsync(ListPublicKeysRequest request,java.util.concurrent.Future<ListPublicKeysResult> listPublicKeysAsync,ListPublicKeysRequest request,com.amazonaws.handlers.AsyncHandler<ListPublicKeysRequest, ListPublicKeysResult> asyncHandler,java.util.concurrent.Future<ListPublicKeysResult> listPublicKeysAsync,java.util.concurrent.Future<ListPublicKeysResult> listPublicKeysAsync,com.amazonaws.handlers.AsyncHandler<ListPublicKeysRequest, ListPublicKeysResult> asyncHandler){\r\n    return listPublicKeysAsync(new ListPublicKeysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListDeploymentTargetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getTargetFilters() != null)\r\n        sb.append(\"TargetFilters: \").append(getTargetFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdateCommentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.TypedAttributeValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStringValue() != null)\r\n        sb.append(\"StringValue: \").append(getStringValue()).append(\",\");\r\n    if (getBinaryValue() != null)\r\n        sb.append(\"BinaryValue: \").append(getBinaryValue()).append(\",\");\r\n    if (getBooleanValue() != null)\r\n        sb.append(\"BooleanValue: \").append(getBooleanValue()).append(\",\");\r\n    if (getNumberValue() != null)\r\n        sb.append(\"NumberValue: \").append(getNumberValue()).append(\",\");\r\n    if (getDatetimeValue() != null)\r\n        sb.append(\"DatetimeValue: \").append(getDatetimeValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutThirdPartyJobFailureResultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getFailureDetails() != null)\r\n        sb.append(\"FailureDetails: \").append(getFailureDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.TargetTrackingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPredefinedMetricSpecification() != null)\r\n        sb.append(\"PredefinedMetricSpecification: \").append(getPredefinedMetricSpecification()).append(\",\");\r\n    if (getCustomizedMetricSpecification() != null)\r\n        sb.append(\"CustomizedMetricSpecification: \").append(getCustomizedMetricSpecification()).append(\",\");\r\n    if (getTargetValue() != null)\r\n        sb.append(\"TargetValue: \").append(getTargetValue()).append(\",\");\r\n    if (getDisableScaleIn() != null)\r\n        sb.append(\"DisableScaleIn: \").append(getDisableScaleIn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.UpdateTerminationProtectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.acknowledgeThirdPartyJob",
	"Comment": "confirms a job worker has received the specified job. only used for partner actions.",
	"Method": "AcknowledgeThirdPartyJobResult acknowledgeThirdPartyJob(AcknowledgeThirdPartyJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAcknowledgeThirdPartyJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListStreamingDistributionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamingDistributionList() != null)\r\n        sb.append(\"StreamingDistributionList: \").append(getStreamingDistributionList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.GitHubCodeDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getOwner() != null)\r\n        sb.append(\"Owner: \").append(getOwner()).append(\",\");\r\n    if (getPrivateRepository() != null)\r\n        sb.append(\"PrivateRepository: \").append(getPrivateRepository()).append(\",\");\r\n    if (getIssuesEnabled() != null)\r\n        sb.append(\"IssuesEnabled: \").append(getIssuesEnabled()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.DescribeIdentityPoolResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getIdentityPoolName() != null)\r\n        sb.append(\"IdentityPoolName: \").append(getIdentityPoolName()).append(\",\");\r\n    if (getAllowUnauthenticatedIdentities() != null)\r\n        sb.append(\"AllowUnauthenticatedIdentities: \").append(getAllowUnauthenticatedIdentities()).append(\",\");\r\n    if (getSupportedLoginProviders() != null)\r\n        sb.append(\"SupportedLoginProviders: \").append(getSupportedLoginProviders()).append(\",\");\r\n    if (getDeveloperProviderName() != null)\r\n        sb.append(\"DeveloperProviderName: \").append(getDeveloperProviderName()).append(\",\");\r\n    if (getOpenIdConnectProviderARNs() != null)\r\n        sb.append(\"OpenIdConnectProviderARNs: \").append(getOpenIdConnectProviderARNs()).append(\",\");\r\n    if (getCognitoIdentityProviders() != null)\r\n        sb.append(\"CognitoIdentityProviders: \").append(getCognitoIdentityProviders()).append(\",\");\r\n    if (getSamlProviderARNs() != null)\r\n        sb.append(\"SamlProviderARNs: \").append(getSamlProviderARNs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.deleteBranch",
	"Comment": "deletes a branch from a repository, unless that branch is the default branch for the repository.",
	"Method": "DeleteBranchResult deleteBranch(DeleteBranchRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteBranch(request);\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.MetricCollectorSupport.stop",
	"Comment": "stops this collector immediately, dropping all pending metrics in memory.",
	"Method": "boolean stop(){\r\n    synchronized (MetricCollectorSupport.class) {\r\n        if (uploaderThread != null) {\r\n            uploaderThread.cancel();\r\n            uploaderThread.interrupt();\r\n            uploaderThread = null;\r\n            if (singleton == this) {\r\n                singleton = null;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.EnableDirectoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchRemoveFacetFromObjectResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdateStreamingDistributionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamingDistribution() != null)\r\n        sb.append(\"StreamingDistribution: \").append(getStreamingDistribution()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.UserError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClient.listBuildsForProject",
	"Comment": "gets a list of build ids for the specified build project, with each build id representing a single build.",
	"Method": "ListBuildsForProjectResult listBuildsForProject(ListBuildsForProjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListBuildsForProject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.TransitionState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getLastChangedBy() != null)\r\n        sb.append(\"LastChangedBy: \").append(getLastChangedBy()).append(\",\");\r\n    if (getLastChangedAt() != null)\r\n        sb.append(\"LastChangedAt: \").append(getLastChangedAt()).append(\",\");\r\n    if (getDisabledReason() != null)\r\n        sb.append(\"DisabledReason: \").append(getDisabledReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.TagDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getPropagateAtLaunch() != null)\r\n        sb.append(\"PropagateAtLaunch: \").append(getPropagateAtLaunch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DeleteStackSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.Dimension.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchClient.createJobQueue",
	"Comment": "creates an aws batch job queue. when you create a job queue, you associate one or more compute environments tothe queue and assign an order of preference for the compute environments.you also set a priority to the job queue that determines the order in which the aws batch scheduler places jobsonto its associated compute environments. for example, if a compute environment is associated with more than onejob queue, the job queue with a higher priority is given preference for scheduling jobs to that computeenvironment.",
	"Method": "CreateJobQueueResult createJobQueue(CreateJobQueueRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateJobQueue(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.GetThirdPartyJobDetailsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListTypedLinkFacetAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RollbackInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRollbackDeploymentId() != null)\r\n        sb.append(\"RollbackDeploymentId: \").append(getRollbackDeploymentId()).append(\",\");\r\n    if (getRollbackTriggeringDeploymentId() != null)\r\n        sb.append(\"RollbackTriggeringDeploymentId: \").append(getRollbackTriggeringDeploymentId()).append(\",\");\r\n    if (getRollbackMessage() != null)\r\n        sb.append(\"RollbackMessage: \").append(getRollbackMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GeoRestriction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRestrictionType() != null)\r\n        sb.append(\"RestrictionType: \").append(getRestrictionType()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PullRequestCreatedEventMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getSourceCommitId() != null)\r\n        sb.append(\"SourceCommitId: \").append(getSourceCommitId()).append(\",\");\r\n    if (getDestinationCommitId() != null)\r\n        sb.append(\"DestinationCommitId: \").append(getDestinationCommitId()).append(\",\");\r\n    if (getMergeBase() != null)\r\n        sb.append(\"MergeBase: \").append(getMergeBase());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.disableStageTransition",
	"Comment": "prevents artifacts in a pipeline from transitioning to the next stage in the pipeline.",
	"Method": "DisableStageTransitionResult disableStageTransition(DisableStageTransitionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisableStageTransition(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.DeleteFileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBranchName() != null)\r\n        sb.append(\"BranchName: \").append(getBranchName()).append(\",\");\r\n    if (getFilePath() != null)\r\n        sb.append(\"FilePath: \").append(getFilePath()).append(\",\");\r\n    if (getParentCommitId() != null)\r\n        sb.append(\"ParentCommitId: \").append(getParentCommitId()).append(\",\");\r\n    if (getKeepEmptyFolders() != null)\r\n        sb.append(\"KeepEmptyFolders: \").append(getKeepEmptyFolders()).append(\",\");\r\n    if (getCommitMessage() != null)\r\n        sb.append(\"CommitMessage: \").append(getCommitMessage()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ProjectEnvironment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getComputeType() != null)\r\n        sb.append(\"ComputeType: \").append(getComputeType()).append(\",\");\r\n    if (getEnvironmentVariables() != null)\r\n        sb.append(\"EnvironmentVariables: \").append(getEnvironmentVariables()).append(\",\");\r\n    if (getPrivilegedMode() != null)\r\n        sb.append(\"PrivilegedMode: \").append(getPrivilegedMode()).append(\",\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listObjectPolicies",
	"Comment": "returns policies attached to an object in pagination fashion.",
	"Method": "ListObjectPoliciesResult listObjectPolicies(ListObjectPoliciesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListObjectPolicies(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetCommitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommit() != null)\r\n        sb.append(\"Commit: \").append(getCommit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.VpcConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListObjectParentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel()).append(\",\");\r\n    if (getIncludeAllLinksToEachParent() != null)\r\n        sb.append(\"IncludeAllLinksToEachParent: \").append(getIncludeAllLinksToEachParent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetPublicKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AbstractAmazonCloudWatchAsync.describeAlarmsAsync",
	"Comment": "simplified method form for invoking the describealarms operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAlarmsResult> describeAlarmsAsync(DescribeAlarmsRequest request,java.util.concurrent.Future<DescribeAlarmsResult> describeAlarmsAsync,DescribeAlarmsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAlarmsRequest, DescribeAlarmsResult> asyncHandler,java.util.concurrent.Future<DescribeAlarmsResult> describeAlarmsAsync,java.util.concurrent.Future<DescribeAlarmsResult> describeAlarmsAsync,com.amazonaws.handlers.AsyncHandler<DescribeAlarmsRequest, DescribeAlarmsResult> asyncHandler){\r\n    return describeAlarmsAsync(new DescribeAlarmsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdateFieldLevelEncryptionConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionConfig() != null)\r\n        sb.append(\"FieldLevelEncryptionConfig: \").append(getFieldLevelEncryptionConfig()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsbatch using the current builder configuration.",
	"Method": "AWSBatch build(AwsSyncClientParams params){\r\n    return new AWSBatchClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeploymentReadyOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionOnTimeout() != null)\r\n        sb.append(\"ActionOnTimeout: \").append(getActionOnTimeout()).append(\",\");\r\n    if (getWaitTimeInMinutes() != null)\r\n        sb.append(\"WaitTimeInMinutes: \").append(getWaitTimeInMinutes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListFacetNamesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClient.describeSubscribersForNotification",
	"Comment": "lists the subscribers that are associated with a notification.",
	"Method": "DescribeSubscribersForNotificationResult describeSubscribersForNotification(DescribeSubscribersForNotificationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSubscribersForNotification(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListOutgoingTypedLinksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getFilterAttributeRanges() != null)\r\n        sb.append(\"FilterAttributeRanges: \").append(getFilterAttributeRanges()).append(\",\");\r\n    if (getFilterTypedLink() != null)\r\n        sb.append(\"FilterTypedLink: \").append(getFilterTypedLink()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PullRequestSourceReferenceUpdatedEventMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBeforeCommitId() != null)\r\n        sb.append(\"BeforeCommitId: \").append(getBeforeCommitId()).append(\",\");\r\n    if (getAfterCommitId() != null)\r\n        sb.append(\"AfterCommitId: \").append(getAfterCommitId()).append(\",\");\r\n    if (getMergeBase() != null)\r\n        sb.append(\"MergeBase: \").append(getMergeBase());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Aliases.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployAsyncClient.updateApplicationAsync",
	"Comment": "simplified method form for invoking the updateapplication operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<UpdateApplicationResult> updateApplicationAsync(UpdateApplicationRequest request,java.util.concurrent.Future<UpdateApplicationResult> updateApplicationAsync,UpdateApplicationRequest request,com.amazonaws.handlers.AsyncHandler<UpdateApplicationRequest, UpdateApplicationResult> asyncHandler,java.util.concurrent.Future<UpdateApplicationResult> updateApplicationAsync,java.util.concurrent.Future<UpdateApplicationResult> updateApplicationAsync,com.amazonaws.handlers.AsyncHandler<UpdateApplicationRequest, UpdateApplicationResult> asyncHandler){\r\n    return updateApplicationAsync(new UpdateApplicationRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.UserProfileSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DescribeJobQueuesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobQueues() != null)\r\n        sb.append(\"JobQueues: \").append(getJobQueues()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.PublicKeyList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListOutgoingTypedLinks.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getFilterAttributeRanges() != null)\r\n        sb.append(\"FilterAttributeRanges: \").append(getFilterAttributeRanges()).append(\",\");\r\n    if (getFilterTypedLink() != null)\r\n        sb.append(\"FilterTypedLink: \").append(getFilterTypedLink()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.StreamingDistributionConfigWithTags.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamingDistributionConfig() != null)\r\n        sb.append(\"StreamingDistributionConfig: \").append(getStreamingDistributionConfig()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awscodecommitasync using the current builder configuration.",
	"Method": "AWSCodeCommitAsync build(AwsAsyncClientParams params){\r\n    return new AWSCodeCommitAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStackResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackResourceSummaries() != null)\r\n        sb.append(\"StackResourceSummaries: \").append(getStackResourceSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ContainerSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExitCode() != null)\r\n        sb.append(\"ExitCode: \").append(getExitCode()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.InviteUsersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getUserEmailList() != null)\r\n        sb.append(\"UserEmailList: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeScalingParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStackSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSummaries() != null)\r\n        sb.append(\"Summaries: \").append(getSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListDeploymentConfigsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentConfigsList() != null)\r\n        sb.append(\"DeploymentConfigsList: \").append(getDeploymentConfigsList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ListTeamMembersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTeamMembers() != null)\r\n        sb.append(\"TeamMembers: \").append(getTeamMembers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.SetAlarmStateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdatePullRequestStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequest() != null)\r\n        sb.append(\"PullRequest: \").append(getPullRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.StageExecution.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineExecutionId() != null)\r\n        sb.append(\"PipelineExecutionId: \").append(getPipelineExecutionId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdateRepositoryNameRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOldName() != null)\r\n        sb.append(\"OldName: \").append(getOldName()).append(\",\");\r\n    if (getNewName() != null)\r\n        sb.append(\"NewName: \").append(getNewName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployAsyncClient.listOnPremisesInstancesAsync",
	"Comment": "simplified method form for invoking the listonpremisesinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListOnPremisesInstancesResult> listOnPremisesInstancesAsync(ListOnPremisesInstancesRequest request,java.util.concurrent.Future<ListOnPremisesInstancesResult> listOnPremisesInstancesAsync,ListOnPremisesInstancesRequest request,com.amazonaws.handlers.AsyncHandler<ListOnPremisesInstancesRequest, ListOnPremisesInstancesResult> asyncHandler,java.util.concurrent.Future<ListOnPremisesInstancesResult> listOnPremisesInstancesAsync,java.util.concurrent.Future<ListOnPremisesInstancesResult> listOnPremisesInstancesAsync,com.amazonaws.handlers.AsyncHandler<ListOnPremisesInstancesRequest, ListOnPremisesInstancesResult> asyncHandler){\r\n    return listOnPremisesInstancesAsync(new ListOnPremisesInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.RegisterJobDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobDefinitionName() != null)\r\n        sb.append(\"JobDefinitionName: \").append(getJobDefinitionName()).append(\",\");\r\n    if (getJobDefinitionArn() != null)\r\n        sb.append(\"JobDefinitionArn: \").append(getJobDefinitionArn()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.OriginGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getFailoverCriteria() != null)\r\n        sb.append(\"FailoverCriteria: \").append(getFailoverCriteria()).append(\",\");\r\n    if (getMembers() != null)\r\n        sb.append(\"Members: \").append(getMembers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ListPipelinesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.Expression.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExpressionName() != null)\r\n        sb.append(\"ExpressionName: \").append(getExpressionName()).append(\",\");\r\n    if (getExpressionValue() != null)\r\n        sb.append(\"ExpressionValue: \").append(getExpressionValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PullRequestEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getEventDate() != null)\r\n        sb.append(\"EventDate: \").append(getEventDate()).append(\",\");\r\n    if (getPullRequestEventType() != null)\r\n        sb.append(\"PullRequestEventType: \").append(getPullRequestEventType()).append(\",\");\r\n    if (getActorArn() != null)\r\n        sb.append(\"ActorArn: \").append(getActorArn()).append(\",\");\r\n    if (getPullRequestCreatedEventMetadata() != null)\r\n        sb.append(\"PullRequestCreatedEventMetadata: \").append(getPullRequestCreatedEventMetadata()).append(\",\");\r\n    if (getPullRequestStatusChangedEventMetadata() != null)\r\n        sb.append(\"PullRequestStatusChangedEventMetadata: \").append(getPullRequestStatusChangedEventMetadata()).append(\",\");\r\n    if (getPullRequestSourceReferenceUpdatedEventMetadata() != null)\r\n        sb.append(\"PullRequestSourceReferenceUpdatedEventMetadata: \").append(getPullRequestSourceReferenceUpdatedEventMetadata()).append(\",\");\r\n    if (getPullRequestMergedStateChangedEventMetadata() != null)\r\n        sb.append(\"PullRequestMergedStateChangedEventMetadata: \").append(getPullRequestMergedStateChangedEventMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.MergeMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIsMerged() != null)\r\n        sb.append(\"IsMerged: \").append(getIsMerged()).append(\",\");\r\n    if (getMergedBy() != null)\r\n        sb.append(\"MergedBy: \").append(getMergedBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutJobFailureResultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetBranchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBranchName() != null)\r\n        sb.append(\"BranchName: \").append(getBranchName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awscodestarasync using the current builder configuration.",
	"Method": "AWSCodeStarAsync build(AwsAsyncClientParams params){\r\n    return new AWSCodeStarAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ThirdPartyJobData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionTypeId() != null)\r\n        sb.append(\"ActionTypeId: \").append(getActionTypeId()).append(\",\");\r\n    if (getActionConfiguration() != null)\r\n        sb.append(\"ActionConfiguration: \").append(getActionConfiguration()).append(\",\");\r\n    if (getPipelineContext() != null)\r\n        sb.append(\"PipelineContext: \").append(getPipelineContext()).append(\",\");\r\n    if (getInputArtifacts() != null)\r\n        sb.append(\"InputArtifacts: \").append(getInputArtifacts()).append(\",\");\r\n    if (getOutputArtifacts() != null)\r\n        sb.append(\"OutputArtifacts: \").append(getOutputArtifacts()).append(\",\");\r\n    if (getArtifactCredentials() != null)\r\n        sb.append(\"ArtifactCredentials: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getContinuationToken() != null)\r\n        sb.append(\"ContinuationToken: \").append(getContinuationToken()).append(\",\");\r\n    if (getEncryptionKey() != null)\r\n        sb.append(\"EncryptionKey: \").append(getEncryptionKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonclouddirectory using the current builder configuration.",
	"Method": "AmazonCloudDirectory build(AwsSyncClientParams params){\r\n    return new AmazonCloudDirectoryClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.modifyHsm",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.modifies an hsm.this operation can result in the hsm being offline for up to 15 minutes while the aws cloudhsm service isreconfigured. if you are modifying a production hsm, you should ensure that your aws cloudhsm service isconfigured for high availability, and consider executing this operation during a maintenance window.",
	"Method": "ModifyHsmResult modifyHsm(ModifyHsmRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyHsm(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.S3LogsConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchReadResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResponses() != null)\r\n        sb.append(\"Responses: \").append(getResponses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DeleteComputeEnvironmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComputeEnvironment() != null)\r\n        sb.append(\"ComputeEnvironment: \").append(getComputeEnvironment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AbstractAWSCloudHSMAsync.listHapgsAsync",
	"Comment": "simplified method form for invoking the listhapgs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListHapgsResult> listHapgsAsync(ListHapgsRequest request,java.util.concurrent.Future<ListHapgsResult> listHapgsAsync,ListHapgsRequest request,com.amazonaws.handlers.AsyncHandler<ListHapgsRequest, ListHapgsResult> asyncHandler,java.util.concurrent.Future<ListHapgsResult> listHapgsAsync,java.util.concurrent.Future<ListHapgsResult> listHapgsAsync,com.amazonaws.handlers.AsyncHandler<ListHapgsRequest, ListHapgsResult> asyncHandler){\r\n    return listHapgsAsync(new ListHapgsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdateRepositoryNameResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.CreateDeploymentGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentGroupId() != null)\r\n        sb.append(\"DeploymentGroupId: \").append(getDeploymentGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.DeleteWebhookResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListFacetNamesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFacetNames() != null)\r\n        sb.append(\"FacetNames: \").append(getFacetNames()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetDeploymentConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentConfigInfo() != null)\r\n        sb.append(\"DeploymentConfigInfo: \").append(getDeploymentConfigInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.Alarm.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.ResetPersonalPINResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.TypedLinkSchemaAndFacetName.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getTypedLinkName() != null)\r\n        sb.append(\"TypedLinkName: \").append(getTypedLinkName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.BlockingRequestBuilder.cloneMetricDatum",
	"Comment": "returns a metric datum cloned from the given one.made package private only for testing purposes.",
	"Method": "MetricDatum cloneMetricDatum(MetricDatum md){\r\n    return // a new collection is created\r\n    new MetricDatum().withDimensions(md.getDimensions()).withMetricName(md.getMetricName()).withStatisticValues(md.getStatisticValues()).withTimestamp(md.getTimestamp()).withUnit(md.getUnit()).withValue(md.getValue());\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListFieldLevelEncryptionProfilesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionProfileList() != null)\r\n        sb.append(\"FieldLevelEncryptionProfileList: \").append(getFieldLevelEncryptionProfileList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.GetConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigType() != null)\r\n        sb.append(\"ConfigType: \").append(getConfigType()).append(\",\");\r\n    if (getConfigFile() != null)\r\n        sb.append(\"ConfigFile: \").append(getConfigFile()).append(\",\");\r\n    if (getConfigCred() != null)\r\n        sb.append(\"ConfigCred: \").append(getConfigCred());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListIndexResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexAttachments() != null)\r\n        sb.append(\"IndexAttachments: \").append(getIndexAttachments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AbstractAWSCloudHSMAsync.listLunaClientsAsync",
	"Comment": "simplified method form for invoking the listlunaclients operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListLunaClientsResult> listLunaClientsAsync(ListLunaClientsRequest request,java.util.concurrent.Future<ListLunaClientsResult> listLunaClientsAsync,ListLunaClientsRequest request,com.amazonaws.handlers.AsyncHandler<ListLunaClientsRequest, ListLunaClientsResult> asyncHandler,java.util.concurrent.Future<ListLunaClientsResult> listLunaClientsAsync,java.util.concurrent.Future<ListLunaClientsResult> listLunaClientsAsync,com.amazonaws.handlers.AsyncHandler<ListLunaClientsRequest, ListLunaClientsResult> asyncHandler){\r\n    return listLunaClientsAsync(new ListLunaClientsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ListProjectsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.GetStackPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.UploadDocumentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDocuments() != null)\r\n        sb.append(\"Documents: \").append(getDocuments()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getContentLength() != null)\r\n        sb.append(\"ContentLength: \").append(getContentLength());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DefineSuggesterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuggester() != null)\r\n        sb.append(\"Suggester: \").append(getSuggester());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.CreateApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getComputePlatform() != null)\r\n        sb.append(\"ComputePlatform: \").append(getComputePlatform());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RawString.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getSha256() != null)\r\n        sb.append(\"Sha256: \").append(getSha256());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.createEnvironmentMembership",
	"Comment": "adds an environment member to an aws cloud9 development environment.",
	"Method": "CreateEnvironmentMembershipResult createEnvironmentMembership(CreateEnvironmentMembershipRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateEnvironmentMembership(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DetachPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getPolicyReference() != null)\r\n        sb.append(\"PolicyReference: \").append(getPolicyReference()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazoncognitoidentityasync using the current builder configuration.",
	"Method": "AmazonCognitoIdentityAsync build(AwsAsyncClientParams params){\r\n    return new AmazonCognitoIdentityAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.TargetGroupInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listManagedSchemaArns",
	"Comment": "lists the major version families of each managed schema. if a major version arn is provided as schemaarn, theminor version revisions in that family are listed instead.",
	"Method": "ListManagedSchemaArnsResult listManagedSchemaArns(ListManagedSchemaArnsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListManagedSchemaArns(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ModifyHapgRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHapgArn() != null)\r\n        sb.append(\"HapgArn: \").append(getHapgArn()).append(\",\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel()).append(\",\");\r\n    if (getPartitionSerialList() != null)\r\n        sb.append(\"PartitionSerialList: \").append(getPartitionSerialList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.getCommentsForComparedCommit",
	"Comment": "returns information about comments made on the comparison between two commits.",
	"Method": "GetCommentsForComparedCommitResult getCommentsForComparedCommit(GetCommentsForComparedCommitRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetCommentsForComparedCommit(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.setIdentityPoolRoles",
	"Comment": "sets the roles for an identity pool. these roles are used when making calls to getcredentialsforidentityaction.you must use aws developer credentials to call this api.",
	"Method": "SetIdentityPoolRolesResult setIdentityPoolRoles(SetIdentityPoolRolesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSetIdentityPoolRoles(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.CancelJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeleteDistributionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.getAppliedSchemaVersion",
	"Comment": "returns current applied schema version arn, including the minor version in use.",
	"Method": "GetAppliedSchemaVersionResult getAppliedSchemaVersion(GetAppliedSchemaVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetAppliedSchemaVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.PutDashboardResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDashboardValidationMessages() != null)\r\n        sb.append(\"DashboardValidationMessages: \").append(getDashboardValidationMessages());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ELBInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.DeleteIdentityPoolRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonchimeasync using the current builder configuration.",
	"Method": "AmazonChimeAsync build(AwsAsyncClientParams params){\r\n    return new AmazonChimeAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpdateFacetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DeleteDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.CreatePipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateDistributionWithTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistribution() != null)\r\n        sb.append(\"Distribution: \").append(getDistribution()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ListHsmsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmList() != null)\r\n        sb.append(\"HsmList: \").append(getHsmList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClientBuilder.build",
	"Comment": "construct a synchronous implementation of awscodepipeline using the current builder configuration.",
	"Method": "AWSCodePipeline build(AwsSyncClientParams params){\r\n    return new AWSCodePipelineClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackResourceDetail() != null)\r\n        sb.append(\"StackResourceDetail: \").append(getStackResourceDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.Bucket.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.EnvironmentImage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutThirdPartyJobFailureResultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.SuggestResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSuggest() != null)\r\n        sb.append(\"Suggest: \").append(getSuggest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.GetScalingPlanResourceForecastDataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatapoints() != null)\r\n        sb.append(\"Datapoints: \").append(getDatapoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClientBuilder.build",
	"Comment": "construct a synchronous implementation of awscloudhsm using the current builder configuration.",
	"Method": "AWSCloudHSM build(AwsSyncClientParams params){\r\n    return new AWSCloudHSMClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.Hit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getFields() != null)\r\n        sb.append(\"Fields: \").append(getFields()).append(\",\");\r\n    if (getExprs() != null)\r\n        sb.append(\"Exprs: \").append(getExprs()).append(\",\");\r\n    if (getHighlights() != null)\r\n        sb.append(\"Highlights: \").append(getHighlights());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.CreateHapgRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.RulesConfigurationType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ObjectAttributeRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeKey() != null)\r\n        sb.append(\"AttributeKey: \").append(getAttributeKey()).append(\",\");\r\n    if (getRange() != null)\r\n        sb.append(\"Range: \").append(getRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.AWSAutoScalingPlansAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.DeletePipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpgradePublishedSchemaResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUpgradedSchemaArn() != null)\r\n        sb.append(\"UpgradedSchemaArn: \").append(getUpgradedSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.AddShapes.findRequestUri",
	"Comment": "given an input shape, finds the request uri for the operation that input is referenced from.",
	"Method": "String findRequestUri(Shape parentShape,Map<String, Shape> allC2jShapes){\r\n    return builder.getService().getOperations().values().stream().filter(o -> o.getInput() != null).filter(o -> allC2jShapes.get(o.getInput().getShape()).equals(parentShape)).map(o -> o.getHttp().getRequestUri()).findFirst().orElseThrow(() -> new RuntimeException(\"Could not find request URI for input shape\"));\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.SearchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getHits() != null)\r\n        sb.append(\"Hits: \").append(getHits()).append(\",\");\r\n    if (getFacets() != null)\r\n        sb.append(\"Facets: \").append(getFacets()).append(\",\");\r\n    if (getStats() != null)\r\n        sb.append(\"Stats: \").append(getStats());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DateOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceField() != null)\r\n        sb.append(\"SourceField: \").append(getSourceField()).append(\",\");\r\n    if (getFacetEnabled() != null)\r\n        sb.append(\"FacetEnabled: \").append(getFacetEnabled()).append(\",\");\r\n    if (getSearchEnabled() != null)\r\n        sb.append(\"SearchEnabled: \").append(getSearchEnabled()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled()).append(\",\");\r\n    if (getSortEnabled() != null)\r\n        sb.append(\"SortEnabled: \").append(getSortEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClientBuilder.build",
	"Comment": "construct a synchronous implementation of awscodebuild using the current builder configuration.",
	"Method": "AWSCodeBuild build(AwsSyncClientParams params){\r\n    return new AWSCodeBuildClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.UploadDocumentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getAdds() != null)\r\n        sb.append(\"Adds: \").append(getAdds()).append(\",\");\r\n    if (getDeletes() != null)\r\n        sb.append(\"Deletes: \").append(getDeletes()).append(\",\");\r\n    if (getWarnings() != null)\r\n        sb.append(\"Warnings: \").append(getWarnings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListIncomingTypedLinksResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLinkSpecifiers() != null)\r\n        sb.append(\"LinkSpecifiers: \").append(getLinkSpecifiers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackResources() != null)\r\n        sb.append(\"StackResources: \").append(getStackResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.listBranches",
	"Comment": "gets information about one or more branches in a repository.",
	"Method": "ListBranchesResult listBranches(ListBranchesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListBranches(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.testRepositoryTriggers",
	"Comment": "tests the functionality of repository triggers by sending information to the trigger target. if real data isavailable in the repository, the test will send data from the last commit. if no data is available, sample datawill be generated.",
	"Method": "TestRepositoryTriggersResult testRepositoryTriggers(TestRepositoryTriggersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTestRepositoryTriggers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.MetricAlarm.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlarmName() != null)\r\n        sb.append(\"AlarmName: \").append(getAlarmName()).append(\",\");\r\n    if (getAlarmArn() != null)\r\n        sb.append(\"AlarmArn: \").append(getAlarmArn()).append(\",\");\r\n    if (getAlarmDescription() != null)\r\n        sb.append(\"AlarmDescription: \").append(getAlarmDescription()).append(\",\");\r\n    if (getAlarmConfigurationUpdatedTimestamp() != null)\r\n        sb.append(\"AlarmConfigurationUpdatedTimestamp: \").append(getAlarmConfigurationUpdatedTimestamp()).append(\",\");\r\n    if (getActionsEnabled() != null)\r\n        sb.append(\"ActionsEnabled: \").append(getActionsEnabled()).append(\",\");\r\n    if (getOKActions() != null)\r\n        sb.append(\"OKActions: \").append(getOKActions()).append(\",\");\r\n    if (getAlarmActions() != null)\r\n        sb.append(\"AlarmActions: \").append(getAlarmActions()).append(\",\");\r\n    if (getInsufficientDataActions() != null)\r\n        sb.append(\"InsufficientDataActions: \").append(getInsufficientDataActions()).append(\",\");\r\n    if (getStateValue() != null)\r\n        sb.append(\"StateValue: \").append(getStateValue()).append(\",\");\r\n    if (getStateReason() != null)\r\n        sb.append(\"StateReason: \").append(getStateReason()).append(\",\");\r\n    if (getStateReasonData() != null)\r\n        sb.append(\"StateReasonData: \").append(getStateReasonData()).append(\",\");\r\n    if (getStateUpdatedTimestamp() != null)\r\n        sb.append(\"StateUpdatedTimestamp: \").append(getStateUpdatedTimestamp()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getStatistic() != null)\r\n        sb.append(\"Statistic: \").append(getStatistic()).append(\",\");\r\n    if (getExtendedStatistic() != null)\r\n        sb.append(\"ExtendedStatistic: \").append(getExtendedStatistic()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getPeriod() != null)\r\n        sb.append(\"Period: \").append(getPeriod()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit()).append(\",\");\r\n    if (getEvaluationPeriods() != null)\r\n        sb.append(\"EvaluationPeriods: \").append(getEvaluationPeriods()).append(\",\");\r\n    if (getDatapointsToAlarm() != null)\r\n        sb.append(\"DatapointsToAlarm: \").append(getDatapointsToAlarm()).append(\",\");\r\n    if (getThreshold() != null)\r\n        sb.append(\"Threshold: \").append(getThreshold()).append(\",\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getTreatMissingData() != null)\r\n        sb.append(\"TreatMissingData: \").append(getTreatMissingData()).append(\",\");\r\n    if (getEvaluateLowSampleCountPercentile() != null)\r\n        sb.append(\"EvaluateLowSampleCountPercentile: \").append(getEvaluateLowSampleCountPercentile()).append(\",\");\r\n    if (getMetrics() != null)\r\n        sb.append(\"Metrics: \").append(getMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.PublishSchemaResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublishedSchemaArn() != null)\r\n        sb.append(\"PublishedSchemaArn: \").append(getPublishedSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.AddTagsToOnPremisesInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.DescribeIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId()).append(\",\");\r\n    if (getLogins() != null)\r\n        sb.append(\"Logins: \").append(getLogins()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AbstractAmazonCloudFormationAsync.getTemplateSummaryAsync",
	"Comment": "simplified method form for invoking the gettemplatesummary operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetTemplateSummaryResult> getTemplateSummaryAsync(GetTemplateSummaryRequest request,java.util.concurrent.Future<GetTemplateSummaryResult> getTemplateSummaryAsync,GetTemplateSummaryRequest request,com.amazonaws.handlers.AsyncHandler<GetTemplateSummaryRequest, GetTemplateSummaryResult> asyncHandler,java.util.concurrent.Future<GetTemplateSummaryResult> getTemplateSummaryAsync,java.util.concurrent.Future<GetTemplateSummaryResult> getTemplateSummaryAsync,com.amazonaws.handlers.AsyncHandler<GetTemplateSummaryRequest, GetTemplateSummaryResult> asyncHandler){\r\n    return getTemplateSummaryAsync(new GetTemplateSummaryRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DestinationBackup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateTimestamp() != null)\r\n        sb.append(\"CreateTimestamp: \").append(getCreateTimestamp()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion()).append(\",\");\r\n    if (getSourceBackup() != null)\r\n        sb.append(\"SourceBackup: \").append(getSourceBackup()).append(\",\");\r\n    if (getSourceCluster() != null)\r\n        sb.append(\"SourceCluster: \").append(getSourceCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AbstractAmazonCloudWatchAsync.listMetricsAsync",
	"Comment": "simplified method form for invoking the listmetrics operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListMetricsResult> listMetricsAsync(ListMetricsRequest request,java.util.concurrent.Future<ListMetricsResult> listMetricsAsync,ListMetricsRequest request,com.amazonaws.handlers.AsyncHandler<ListMetricsRequest, ListMetricsResult> asyncHandler,java.util.concurrent.Future<ListMetricsResult> listMetricsAsync,java.util.concurrent.Future<ListMetricsResult> listMetricsAsync,com.amazonaws.handlers.AsyncHandler<ListMetricsRequest, ListMetricsResult> asyncHandler){\r\n    return listMetricsAsync(new ListMetricsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.listStackSetOperationResults",
	"Comment": "returns summary information about the results of a stack set operation.",
	"Method": "ListStackSetOperationResultsResult listStackSetOperationResults(ListStackSetOperationResultsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListStackSetOperationResults(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackSetOperationPreferences.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegionOrder() != null)\r\n        sb.append(\"RegionOrder: \").append(getRegionOrder()).append(\",\");\r\n    if (getFailureToleranceCount() != null)\r\n        sb.append(\"FailureToleranceCount: \").append(getFailureToleranceCount()).append(\",\");\r\n    if (getFailureTolerancePercentage() != null)\r\n        sb.append(\"FailureTolerancePercentage: \").append(getFailureTolerancePercentage()).append(\",\");\r\n    if (getMaxConcurrentCount() != null)\r\n        sb.append(\"MaxConcurrentCount: \").append(getMaxConcurrentCount()).append(\",\");\r\n    if (getMaxConcurrentPercentage() != null)\r\n        sb.append(\"MaxConcurrentPercentage: \").append(getMaxConcurrentPercentage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetRepositoryTriggersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationId() != null)\r\n        sb.append(\"ConfigurationId: \").append(getConfigurationId()).append(\",\");\r\n    if (getTriggers() != null)\r\n        sb.append(\"Triggers: \").append(getTriggers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.CodeGenerator.execute",
	"Comment": "load servicemodel. load code gen configuration from individual client. load waiters. generate intermediate model. generatecode.",
	"Method": "void execute(){\r\n    try {\r\n        final IntermediateModel intermediateModel = new IntermediateModelBuilder(models, codeGenBinDirectory).build();\r\n        writeIntermediateModel(intermediateModel);\r\n        emitCode(intermediateModel);\r\n    } catch (Exception e) {\r\n        throw new RuntimeException(\"Failed to generate code. Exception message : \" + e.getMessage(), e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.ListRepositoriesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositories() != null)\r\n        sb.append(\"Repositories: \").append(getRepositories()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.AnalysisSchemeStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.WebhookDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTargetPipeline() != null)\r\n        sb.append(\"TargetPipeline: \").append(getTargetPipeline()).append(\",\");\r\n    if (getTargetAction() != null)\r\n        sb.append(\"TargetAction: \").append(getTargetAction()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getAuthentication() != null)\r\n        sb.append(\"Authentication: \").append(getAuthentication()).append(\",\");\r\n    if (getAuthenticationConfiguration() != null)\r\n        sb.append(\"AuthenticationConfiguration: \").append(getAuthenticationConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchCreateIndex.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrderedIndexedAttributeList() != null)\r\n        sb.append(\"OrderedIndexedAttributeList: \").append(getOrderedIndexedAttributeList()).append(\",\");\r\n    if (getIsUnique() != null)\r\n        sb.append(\"IsUnique: \").append(getIsUnique()).append(\",\");\r\n    if (getParentReference() != null)\r\n        sb.append(\"ParentReference: \").append(getParentReference()).append(\",\");\r\n    if (getLinkName() != null)\r\n        sb.append(\"LinkName: \").append(getLinkName()).append(\",\");\r\n    if (getBatchReferenceName() != null)\r\n        sb.append(\"BatchReferenceName: \").append(getBatchReferenceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.WebhookFilterRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJsonPath() != null)\r\n        sb.append(\"JsonPath: \").append(getJsonPath()).append(\",\");\r\n    if (getMatchEquals() != null)\r\n        sb.append(\"MatchEquals: \").append(getMatchEquals());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListIndexResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexAttachments() != null)\r\n        sb.append(\"IndexAttachments: \").append(getIndexAttachments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ModifyHsmRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmArn() != null)\r\n        sb.append(\"HsmArn: \").append(getHsmArn()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getEniIp() != null)\r\n        sb.append(\"EniIp: \").append(getEniIp()).append(\",\");\r\n    if (getIamRoleArn() != null)\r\n        sb.append(\"IamRoleArn: \").append(getIamRoleArn()).append(\",\");\r\n    if (getExternalId() != null)\r\n        sb.append(\"ExternalId: \").append(getExternalId()).append(\",\");\r\n    if (getSyslogIp() != null)\r\n        sb.append(\"SyslogIp: \").append(getSyslogIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.GetPipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchCreateObjectResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.SearchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCursor() != null)\r\n        sb.append(\"Cursor: \").append(getCursor()).append(\",\");\r\n    if (getExpr() != null)\r\n        sb.append(\"Expr: \").append(getExpr()).append(\",\");\r\n    if (getFacet() != null)\r\n        sb.append(\"Facet: \").append(getFacet()).append(\",\");\r\n    if (getFilterQuery() != null)\r\n        sb.append(\"FilterQuery: \").append(getFilterQuery()).append(\",\");\r\n    if (getHighlight() != null)\r\n        sb.append(\"Highlight: \").append(getHighlight()).append(\",\");\r\n    if (getPartial() != null)\r\n        sb.append(\"Partial: \").append(getPartial()).append(\",\");\r\n    if (getQuery() != null)\r\n        sb.append(\"Query: \").append(getQuery()).append(\",\");\r\n    if (getQueryOptions() != null)\r\n        sb.append(\"QueryOptions: \").append(getQueryOptions()).append(\",\");\r\n    if (getQueryParser() != null)\r\n        sb.append(\"QueryParser: \").append(getQueryParser()).append(\",\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getSort() != null)\r\n        sb.append(\"Sort: \").append(getSort()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getStats() != null)\r\n        sb.append(\"Stats: \").append(getStats());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.disableDirectory",
	"Comment": "disables the specified directory. disabled directories cannot be read or written to. only enabled directories canbe disabled. disabled directories may be reenabled.",
	"Method": "DisableDirectoryResult disableDirectory(DisableDirectoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisableDirectory(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.GetAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.updateDefaultBranch",
	"Comment": "sets or changes the default branch name for the specified repository.if you use this operation to change the default branch name to the current default branch name, a success messageis returned even though the default branch did not change.",
	"Method": "UpdateDefaultBranchResult updateDefaultBranch(UpdateDefaultBranchRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateDefaultBranch(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.GetCredentialsForIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId()).append(\",\");\r\n    if (getLogins() != null)\r\n        sb.append(\"Logins: \").append(getLogins()).append(\",\");\r\n    if (getCustomRoleArn() != null)\r\n        sb.append(\"CustomRoleArn: \").append(getCustomRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClient.createBudget",
	"Comment": "creates a budget and, if included, notifications and subscribers.",
	"Method": "CreateBudgetResult createBudget(CreateBudgetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateBudget(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.InputArtifact.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.GetScalingPlanResourceForecastDataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlanName() != null)\r\n        sb.append(\"ScalingPlanName: \").append(getScalingPlanName()).append(\",\");\r\n    if (getScalingPlanVersion() != null)\r\n        sb.append(\"ScalingPlanVersion: \").append(getScalingPlanVersion()).append(\",\");\r\n    if (getServiceNamespace() != null)\r\n        sb.append(\"ServiceNamespace: \").append(getServiceNamespace()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getScalableDimension() != null)\r\n        sb.append(\"ScalableDimension: \").append(getScalableDimension()).append(\",\");\r\n    if (getForecastDataType() != null)\r\n        sb.append(\"ForecastDataType: \").append(getForecastDataType()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStackSetOperationResultsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.OriginGroupMember.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOriginId() != null)\r\n        sb.append(\"OriginId: \").append(getOriginId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.MountPoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerPath() != null)\r\n        sb.append(\"ContainerPath: \").append(getContainerPath()).append(\",\");\r\n    if (getReadOnly() != null)\r\n        sb.append(\"ReadOnly: \").append(getReadOnly()).append(\",\");\r\n    if (getSourceVolume() != null)\r\n        sb.append(\"SourceVolume: \").append(getSourceVolume());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.ApplicationSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudFormationStackARN() != null)\r\n        sb.append(\"CloudFormationStackARN: \").append(getCloudFormationStackARN()).append(\",\");\r\n    if (getTagFilters() != null)\r\n        sb.append(\"TagFilters: \").append(getTagFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetFolderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getCommitSpecifier() != null)\r\n        sb.append(\"CommitSpecifier: \").append(getCommitSpecifier()).append(\",\");\r\n    if (getFolderPath() != null)\r\n        sb.append(\"FolderPath: \").append(getFolderPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.PublicKeySummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreatedTime() != null)\r\n        sb.append(\"CreatedTime: \").append(getCreatedTime()).append(\",\");\r\n    if (getEncodedKey() != null)\r\n        sb.append(\"EncodedKey: \").append(getEncodedKey()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdateCloudFrontOriginAccessIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudFrontOriginAccessIdentityConfig() != null)\r\n        sb.append(\"CloudFrontOriginAccessIdentityConfig: \").append(getCloudFrontOriginAccessIdentityConfig()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.CreateNotificationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ProjectBadge.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBadgeEnabled() != null)\r\n        sb.append(\"BadgeEnabled: \").append(getBadgeEnabled()).append(\",\");\r\n    if (getBadgeRequestUrl() != null)\r\n        sb.append(\"BadgeRequestUrl: \").append(getBadgeRequestUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.SourceAuth.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.EnableStageTransitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.protocol.BaseProtocolMetadataProvider.isXmlProtocol",
	"Comment": "default is false, subclasses can override to indicate they are xml protocols.",
	"Method": "boolean isXmlProtocol(){\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackResourceDriftInformationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackResourceDriftStatus() != null)\r\n        sb.append(\"StackResourceDriftStatus: \").append(getStackResourceDriftStatus()).append(\",\");\r\n    if (getLastCheckTimestamp() != null)\r\n        sb.append(\"LastCheckTimestamp: \").append(getLastCheckTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CustomErrorResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getResponsePagePath() != null)\r\n        sb.append(\"ResponsePagePath: \").append(getResponsePagePath()).append(\",\");\r\n    if (getResponseCode() != null)\r\n        sb.append(\"ResponseCode: \").append(getResponseCode()).append(\",\");\r\n    if (getErrorCachingMinTTL() != null)\r\n        sb.append(\"ErrorCachingMinTTL: \").append(getErrorCachingMinTTL());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.CreateHapgResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHapgArn() != null)\r\n        sb.append(\"HapgArn: \").append(getHapgArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackResourceDriftsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getStackResourceDriftStatusFilters() != null)\r\n        sb.append(\"StackResourceDriftStatusFilters: \").append(getStackResourceDriftStatusFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.StopLoggingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.UpdateWebhookRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getBranchFilter() != null)\r\n        sb.append(\"BranchFilter: \").append(getBranchFilter()).append(\",\");\r\n    if (getRotateSecret() != null)\r\n        sb.append(\"RotateSecret: \").append(getRotateSecret());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetDeploymentTargetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ArtifactRevision.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getRevisionChangeIdentifier() != null)\r\n        sb.append(\"RevisionChangeIdentifier: \").append(getRevisionChangeIdentifier()).append(\",\");\r\n    if (getRevisionSummary() != null)\r\n        sb.append(\"RevisionSummary: \").append(getRevisionSummary()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getRevisionUrl() != null)\r\n        sb.append(\"RevisionUrl: \").append(getRevisionUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployAsyncClient.listDeploymentsAsync",
	"Comment": "simplified method form for invoking the listdeployments operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListDeploymentsResult> listDeploymentsAsync(ListDeploymentsRequest request,java.util.concurrent.Future<ListDeploymentsResult> listDeploymentsAsync,ListDeploymentsRequest request,com.amazonaws.handlers.AsyncHandler<ListDeploymentsRequest, ListDeploymentsResult> asyncHandler,java.util.concurrent.Future<ListDeploymentsResult> listDeploymentsAsync,java.util.concurrent.Future<ListDeploymentsResult> listDeploymentsAsync,com.amazonaws.handlers.AsyncHandler<ListDeploymentsRequest, ListDeploymentsResult> asyncHandler){\r\n    return listDeploymentsAsync(new ListDeploymentsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClient.deleteBudget",
	"Comment": "deletes a budget. you can delete your budget at any time.deleting a budget also deletes the notifications and subscribers that are associated with that budget.",
	"Method": "DeleteBudgetResult deleteBudget(DeleteBudgetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteBudget(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.PutSchemaFromJsonRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getDocument() != null)\r\n        sb.append(\"Document: \").append(getDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazoncloudwatch using the current builder configuration.",
	"Method": "AmazonCloudWatch build(AwsSyncClientParams params){\r\n    return new AmazonCloudWatchClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListExportsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExports() != null)\r\n        sb.append(\"Exports: \").append(getExports()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.AllowedMethods.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems()).append(\",\");\r\n    if (getCachedMethods() != null)\r\n        sb.append(\"CachedMethods: \").append(getCachedMethods());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DescribeBudgetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBudgets() != null)\r\n        sb.append(\"Budgets: \").append(getBudgets()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DescribeClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.internal.Utils.getOptionalSystemProperty",
	"Comment": "retrieve optional system property by name, returning null if not found",
	"Method": "String getOptionalSystemProperty(String propertyName){\r\n    return System.getProperty(propertyName);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.AddTagsToOnPremisesInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getInstanceNames() != null)\r\n        sb.append(\"InstanceNames: \").append(getInstanceNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CloudFrontOriginAccessIdentityList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ActionConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeleteDeploymentConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.InvalidationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ExecuteChangeSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeSetName() != null)\r\n        sb.append(\"ChangeSetName: \").append(getChangeSetName()).append(\",\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.Difference.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBeforeBlob() != null)\r\n        sb.append(\"BeforeBlob: \").append(getBeforeBlob()).append(\",\");\r\n    if (getAfterBlob() != null)\r\n        sb.append(\"AfterBlob: \").append(getAfterBlob()).append(\",\");\r\n    if (getChangeType() != null)\r\n        sb.append(\"ChangeType: \").append(getChangeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.describeStackResources",
	"Comment": "returns aws resource descriptions for running and deleted stacks. if stackname is specified, all theassociated resources that are part of the stack are returned. if physicalresourceid is specified,the associated resources of the stack that the resource belongs to are returned.only the first 100 resources will be returned. if your stack has more resources than this, you should useliststackresources instead.for deleted stacks, describestackresources returns resource information for up to 90 days after thestack has been deleted.you must specify either stackname or physicalresourceid, but not both. in addition, youcan specify logicalresourceid to filter the returned result. for more information about resources,the logicalresourceid and physicalresourceid, go to the aws cloudformation user guide.a validationerror is returned if you specify both stackname andphysicalresourceid in the same request.",
	"Method": "DescribeStackResourcesResult describeStackResources(DescribeStackResourcesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeStackResources(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutJobFailureResultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getFailureDetails() != null)\r\n        sb.append(\"FailureDetails: \").append(getFailureDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listAppliedSchemaArns",
	"Comment": "lists schema major versions applied to a directory. if schemaarn is provided, lists the minorversion.",
	"Method": "ListAppliedSchemaArnsResult listAppliedSchemaArns(ListAppliedSchemaArnsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListAppliedSchemaArns(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DistributionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getAliases() != null)\r\n        sb.append(\"Aliases: \").append(getAliases()).append(\",\");\r\n    if (getDefaultRootObject() != null)\r\n        sb.append(\"DefaultRootObject: \").append(getDefaultRootObject()).append(\",\");\r\n    if (getOrigins() != null)\r\n        sb.append(\"Origins: \").append(getOrigins()).append(\",\");\r\n    if (getOriginGroups() != null)\r\n        sb.append(\"OriginGroups: \").append(getOriginGroups()).append(\",\");\r\n    if (getDefaultCacheBehavior() != null)\r\n        sb.append(\"DefaultCacheBehavior: \").append(getDefaultCacheBehavior()).append(\",\");\r\n    if (getCacheBehaviors() != null)\r\n        sb.append(\"CacheBehaviors: \").append(getCacheBehaviors()).append(\",\");\r\n    if (getCustomErrorResponses() != null)\r\n        sb.append(\"CustomErrorResponses: \").append(getCustomErrorResponses()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getLogging() != null)\r\n        sb.append(\"Logging: \").append(getLogging()).append(\",\");\r\n    if (getPriceClass() != null)\r\n        sb.append(\"PriceClass: \").append(getPriceClass()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getViewerCertificate() != null)\r\n        sb.append(\"ViewerCertificate: \").append(getViewerCertificate()).append(\",\");\r\n    if (getRestrictions() != null)\r\n        sb.append(\"Restrictions: \").append(getRestrictions()).append(\",\");\r\n    if (getWebACLId() != null)\r\n        sb.append(\"WebACLId: \").append(getWebACLId()).append(\",\");\r\n    if (getHttpVersion() != null)\r\n        sb.append(\"HttpVersion: \").append(getHttpVersion()).append(\",\");\r\n    if (getIsIPV6Enabled() != null)\r\n        sb.append(\"IsIPV6Enabled: \").append(getIsIPV6Enabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.getCommit",
	"Comment": "returns information about a commit, including commit message and committer information.",
	"Method": "GetCommitResult getCommit(GetCommitRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetCommit(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.MinimumHealthyHosts.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStacksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DeleteJobQueueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobQueue() != null)\r\n        sb.append(\"JobQueue: \").append(getJobQueue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.AvailabilityOptionsStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.createLunaClient",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.creates an hsm client.",
	"Method": "CreateLunaClientResult createLunaClient(CreateLunaClientRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateLunaClient(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.ListPullRequestsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestIds() != null)\r\n        sb.append(\"PullRequestIds: \").append(getPullRequestIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.Stack.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getChangeSetId() != null)\r\n        sb.append(\"ChangeSetId: \").append(getChangeSetId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getDeletionTime() != null)\r\n        sb.append(\"DeletionTime: \").append(getDeletionTime()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime()).append(\",\");\r\n    if (getRollbackConfiguration() != null)\r\n        sb.append(\"RollbackConfiguration: \").append(getRollbackConfiguration()).append(\",\");\r\n    if (getStackStatus() != null)\r\n        sb.append(\"StackStatus: \").append(getStackStatus()).append(\",\");\r\n    if (getStackStatusReason() != null)\r\n        sb.append(\"StackStatusReason: \").append(getStackStatusReason()).append(\",\");\r\n    if (getDisableRollback() != null)\r\n        sb.append(\"DisableRollback: \").append(getDisableRollback()).append(\",\");\r\n    if (getNotificationARNs() != null)\r\n        sb.append(\"NotificationARNs: \").append(getNotificationARNs()).append(\",\");\r\n    if (getTimeoutInMinutes() != null)\r\n        sb.append(\"TimeoutInMinutes: \").append(getTimeoutInMinutes()).append(\",\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getEnableTerminationProtection() != null)\r\n        sb.append(\"EnableTerminationProtection: \").append(getEnableTerminationProtection()).append(\",\");\r\n    if (getParentId() != null)\r\n        sb.append(\"ParentId: \").append(getParentId()).append(\",\");\r\n    if (getRootId() != null)\r\n        sb.append(\"RootId: \").append(getRootId()).append(\",\");\r\n    if (getDriftInformation() != null)\r\n        sb.append(\"DriftInformation: \").append(getDriftInformation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.FacetAttributeDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getIsImmutable() != null)\r\n        sb.append(\"IsImmutable: \").append(getIsImmutable()).append(\",\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.emitters.tasks.WaitersGeneratorTasks.createWaiterAcceptorClassTasks",
	"Comment": "constructs the data model and submits tasks for every generating acceptor for each waiter definition in the intermediatemodel",
	"Method": "List<GeneratorTask> createWaiterAcceptorClassTasks(){\r\n    List<GeneratorTask> generatorTasks = new ArrayList();\r\n    for (Map.Entry<String, WaiterDefinitionModel> entry : model.getWaiters().entrySet()) {\r\n        if (containsAllStatusMatchers(entry)) {\r\n            continue;\r\n        }\r\n        final String waiterName = entry.getKey();\r\n        final WaiterDefinitionModel waiterModel = entry.getValue();\r\n        Map<String, Object> dataModel = ImmutableMapParameter.of(\"fileHeader\", model.getFileHeader(), \"waiter\", waiterModel, \"operation\", model.getOperation(waiterModel.getOperationName()), \"metadata\", model.getMetadata());\r\n        generatorTasks.add(new FreemarkerGeneratorTask(waiterClassDir, waiterName, freemarker.getWaiterAcceptorTemplate(), dataModel));\r\n    }\r\n    return generatorTasks;\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.BatchUpdateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getUpdateUserRequestItems() != null)\r\n        sb.append(\"UpdateUserRequestItems: \").append(getUpdateUserRequestItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.updateTerminationProtection",
	"Comment": "updates termination protection for the specified stack. if a user attempts to delete a stack with terminationprotection enabled, the operation fails and the stack remains unchanged. for more information, see protecting a stack from being deletedin the aws cloudformation user guide.for nested stacks, terminationprotection is set on the root stack and cannot be changed directly on the nested stack.",
	"Method": "UpdateTerminationProtectionResult updateTerminationProtection(UpdateTerminationProtectionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateTerminationProtection(request);\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.CloudWatchMetricConfig.setMetricQueueSize",
	"Comment": "configure the metric queue size, overriding the default. must be atleast 1.",
	"Method": "void setMetricQueueSize(int metricQueueSize){\r\n    if (metricQueueSize < 1) {\r\n        throw new IllegalArgumentException();\r\n    }\r\n    this.metricQueueSize = metricQueueSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.GetMetricWidgetImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricWidgetImage() != null)\r\n        sb.append(\"MetricWidgetImage: \").append(getMetricWidgetImage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetLinkAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getTypedLinkSpecifier() != null)\r\n        sb.append(\"TypedLinkSpecifier: \").append(getTypedLinkSpecifier()).append(\",\");\r\n    if (getAttributeNames() != null)\r\n        sb.append(\"AttributeNames: \").append(getAttributeNames()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.AmazonCloudSearchDomainClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListGitHubAccountTokenNamesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTokenNameList() != null)\r\n        sb.append(\"TokenNameList: \").append(getTokenNameList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ListJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobQueue() != null)\r\n        sb.append(\"JobQueue: \").append(getJobQueue()).append(\",\");\r\n    if (getArrayJobId() != null)\r\n        sb.append(\"ArrayJobId: \").append(getArrayJobId()).append(\",\");\r\n    if (getMultiNodeJobId() != null)\r\n        sb.append(\"MultiNodeJobId: \").append(getMultiNodeJobId()).append(\",\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.emitters.CodeWriter.flush",
	"Comment": "this method is expected to be called only once during the code generation process after thetemplate processing is done.",
	"Method": "void flush(){\r\n    PrintWriter out = null;\r\n    try {\r\n        try {\r\n            out = new PrintWriter(Utils.createFile(dir, file), \"UTF-8\");\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        String contents = getBuffer().toString();\r\n        out.write(processor.apply(contents));\r\n    } finally {\r\n        closeQuietly(out);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListDeploymentGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDeploymentGroups() != null)\r\n        sb.append(\"DeploymentGroups: \").append(getDeploymentGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.CloudWatchMetricConfig.getCloudWatchEndPoint",
	"Comment": "returns the end point of amazoncloudwatch to upload the metrics.",
	"Method": "String getCloudWatchEndPoint(){\r\n    return cloudWatchEndPoint;\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutWebhookResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebhook() != null)\r\n        sb.append(\"Webhook: \").append(getWebhook());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.ListPublicKeysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.S3Location.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getBucketKey() != null)\r\n        sb.append(\"BucketKey: \").append(getBucketKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.getIdentityPoolRoles",
	"Comment": "gets the roles for an identity pool.you must use aws developer credentials to call this api.",
	"Method": "GetIdentityPoolRolesResult getIdentityPoolRoles(GetIdentityPoolRolesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetIdentityPoolRoles(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.createIndex",
	"Comment": "creates an index object. see indexing andsearch for more information.",
	"Method": "CreateIndexResult createIndex(CreateIndexRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateIndex(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.createDomain",
	"Comment": "creates a new search domain. for more information, see creating a search domain in the amazon cloudsearch developer guide.",
	"Method": "CreateDomainResult createDomain(CreateDomainRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDomain(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.CreateEnvironmentEC2Result.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.InstanceInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName()).append(\",\");\r\n    if (getIamSessionArn() != null)\r\n        sb.append(\"IamSessionArn: \").append(getIamSessionArn()).append(\",\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn()).append(\",\");\r\n    if (getInstanceArn() != null)\r\n        sb.append(\"InstanceArn: \").append(getInstanceArn()).append(\",\");\r\n    if (getRegisterTime() != null)\r\n        sb.append(\"RegisterTime: \").append(getRegisterTime()).append(\",\");\r\n    if (getDeregisterTime() != null)\r\n        sb.append(\"DeregisterTime: \").append(getDeregisterTime()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DescribeNotificationsForBudgetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ECSTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId()).append(\",\");\r\n    if (getTargetArn() != null)\r\n        sb.append(\"TargetArn: \").append(getTargetArn()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getLifecycleEvents() != null)\r\n        sb.append(\"LifecycleEvents: \").append(getLifecycleEvents()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getTaskSetsInfo() != null)\r\n        sb.append(\"TaskSetsInfo: \").append(getTaskSetsInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.SignalResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getLogicalResourceId() != null)\r\n        sb.append(\"LogicalResourceId: \").append(getLogicalResourceId()).append(\",\");\r\n    if (getUniqueId() != null)\r\n        sb.append(\"UniqueId: \").append(getUniqueId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListAttachedIndices.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetReference() != null)\r\n        sb.append(\"TargetReference: \").append(getTargetReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ListCuratedEnvironmentImagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateFacetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getObjectType() != null)\r\n        sb.append(\"ObjectType: \").append(getObjectType()).append(\",\");\r\n    if (getFacetStyle() != null)\r\n        sb.append(\"FacetStyle: \").append(getFacetStyle());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.StartLoggingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.EnvironmentMember.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPermissions() != null)\r\n        sb.append(\"Permissions: \").append(getPermissions()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getLastAccess() != null)\r\n        sb.append(\"LastAccess: \").append(getLastAccess());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.PutEventSelectorsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrailARN() != null)\r\n        sb.append(\"TrailARN: \").append(getTrailARN()).append(\",\");\r\n    if (getEventSelectors() != null)\r\n        sb.append(\"EventSelectors: \").append(getEventSelectors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listTypedLinkFacetAttributes",
	"Comment": "returns a paginated list of all attribute definitions for a particular typedlinkfacet. for moreinformation, see typed links.",
	"Method": "ListTypedLinkFacetAttributesResult listTypedLinkFacetAttributes(ListTypedLinkFacetAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTypedLinkFacetAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.deleteStackInstances",
	"Comment": "deletes stack instances for the specified accounts, in the specified regions.",
	"Method": "DeleteStackInstancesResult deleteStackInstances(DeleteStackInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteStackInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchAttachObject.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParentReference() != null)\r\n        sb.append(\"ParentReference: \").append(getParentReference()).append(\",\");\r\n    if (getChildReference() != null)\r\n        sb.append(\"ChildReference: \").append(getChildReference()).append(\",\");\r\n    if (getLinkName() != null)\r\n        sb.append(\"LinkName: \").append(getLinkName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateStreamingDistributionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamingDistributionConfig() != null)\r\n        sb.append(\"StreamingDistributionConfig: \").append(getStreamingDistributionConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.RemoveFacetFromObjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.listApplications",
	"Comment": "lists the applications registered with the applicable iam user or aws account.",
	"Method": "ListApplicationsResult listApplications(ListApplicationsRequest request,ListApplicationsResult listApplications){\r\n    return listApplications(new ListApplicationsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DeleteChangeSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchReadOperation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListObjectAttributes() != null)\r\n        sb.append(\"ListObjectAttributes: \").append(getListObjectAttributes()).append(\",\");\r\n    if (getListObjectChildren() != null)\r\n        sb.append(\"ListObjectChildren: \").append(getListObjectChildren()).append(\",\");\r\n    if (getListAttachedIndices() != null)\r\n        sb.append(\"ListAttachedIndices: \").append(getListAttachedIndices()).append(\",\");\r\n    if (getListObjectParentPaths() != null)\r\n        sb.append(\"ListObjectParentPaths: \").append(getListObjectParentPaths()).append(\",\");\r\n    if (getGetObjectInformation() != null)\r\n        sb.append(\"GetObjectInformation: \").append(getGetObjectInformation()).append(\",\");\r\n    if (getGetObjectAttributes() != null)\r\n        sb.append(\"GetObjectAttributes: \").append(getGetObjectAttributes()).append(\",\");\r\n    if (getListObjectParents() != null)\r\n        sb.append(\"ListObjectParents: \").append(getListObjectParents()).append(\",\");\r\n    if (getListObjectPolicies() != null)\r\n        sb.append(\"ListObjectPolicies: \").append(getListObjectPolicies()).append(\",\");\r\n    if (getListPolicyAttachments() != null)\r\n        sb.append(\"ListPolicyAttachments: \").append(getListPolicyAttachments()).append(\",\");\r\n    if (getLookupPolicy() != null)\r\n        sb.append(\"LookupPolicy: \").append(getLookupPolicy()).append(\",\");\r\n    if (getListIndex() != null)\r\n        sb.append(\"ListIndex: \").append(getListIndex()).append(\",\");\r\n    if (getListOutgoingTypedLinks() != null)\r\n        sb.append(\"ListOutgoingTypedLinks: \").append(getListOutgoingTypedLinks()).append(\",\");\r\n    if (getListIncomingTypedLinks() != null)\r\n        sb.append(\"ListIncomingTypedLinks: \").append(getListIncomingTypedLinks()).append(\",\");\r\n    if (getGetLinkAttributes() != null)\r\n        sb.append(\"GetLinkAttributes: \").append(getGetLinkAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutWebhookRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebhook() != null)\r\n        sb.append(\"Webhook: \").append(getWebhook());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreatePublicKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKeyConfig() != null)\r\n        sb.append(\"PublicKeyConfig: \").append(getPublicKeyConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.CalculatedSpend.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActualSpend() != null)\r\n        sb.append(\"ActualSpend: \").append(getActualSpend()).append(\",\");\r\n    if (getForecastedSpend() != null)\r\n        sb.append(\"ForecastedSpend: \").append(getForecastedSpend());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.Code.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.DeleteProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttachToIndexRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getIndexReference() != null)\r\n        sb.append(\"IndexReference: \").append(getIndexReference()).append(\",\");\r\n    if (getTargetReference() != null)\r\n        sb.append(\"TargetReference: \").append(getTargetReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DescribeBudgetPerformanceHistoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBudgetPerformanceHistory() != null)\r\n        sb.append(\"BudgetPerformanceHistory: \").append(getBudgetPerformanceHistory()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdatePullRequestStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getPullRequestStatus() != null)\r\n        sb.append(\"PullRequestStatus: \").append(getPullRequestStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.FieldLevelEncryptionProfileSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getEncryptionEntities() != null)\r\n        sb.append(\"EncryptionEntities: \").append(getEncryptionEntities()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DefineExpressionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExpression() != null)\r\n        sb.append(\"Expression: \").append(getExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DeleteStackInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.Event.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventId() != null)\r\n        sb.append(\"EventId: \").append(getEventId()).append(\",\");\r\n    if (getEventName() != null)\r\n        sb.append(\"EventName: \").append(getEventName()).append(\",\");\r\n    if (getReadOnly() != null)\r\n        sb.append(\"ReadOnly: \").append(getReadOnly()).append(\",\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId()).append(\",\");\r\n    if (getEventTime() != null)\r\n        sb.append(\"EventTime: \").append(getEventTime()).append(\",\");\r\n    if (getEventSource() != null)\r\n        sb.append(\"EventSource: \").append(getEventSource()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getCloudTrailEvent() != null)\r\n        sb.append(\"CloudTrailEvent: \").append(getCloudTrailEvent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.DeleteCommentContentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommentId() != null)\r\n        sb.append(\"CommentId: \").append(getCommentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ForwardedValues.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueryString() != null)\r\n        sb.append(\"QueryString: \").append(getQueryString()).append(\",\");\r\n    if (getCookies() != null)\r\n        sb.append(\"Cookies: \").append(getCookies()).append(\",\");\r\n    if (getHeaders() != null)\r\n        sb.append(\"Headers: \").append(getHeaders()).append(\",\");\r\n    if (getQueryStringCacheKeys() != null)\r\n        sb.append(\"QueryStringCacheKeys: \").append(getQueryStringCacheKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.CodeCommitCodeDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpdateObjectAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.ServiceMetricCollectorSupport.addMetricsToQueue",
	"Comment": "adds the given metric to the queue, returning true if successful or falseif no space available.",
	"Method": "boolean addMetricsToQueue(MetricDatum metric){\r\n    return queue.offer(metric);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.SetAlarmStateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlarmName() != null)\r\n        sb.append(\"AlarmName: \").append(getAlarmName()).append(\",\");\r\n    if (getStateValue() != null)\r\n        sb.append(\"StateValue: \").append(getStateValue()).append(\",\");\r\n    if (getStateReason() != null)\r\n        sb.append(\"StateReason: \").append(getStateReason()).append(\",\");\r\n    if (getStateReasonData() != null)\r\n        sb.append(\"StateReasonData: \").append(getStateReasonData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.PathToObjectIdentifiers.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getObjectIdentifiers() != null)\r\n        sb.append(\"ObjectIdentifiers: \").append(getObjectIdentifiers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.createDeployment",
	"Comment": "deploys an application revision through the specified deployment group.",
	"Method": "CreateDeploymentResult createDeployment(CreateDeploymentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDeployment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStacksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getStackStatusFilters() != null)\r\n        sb.append(\"StackStatusFilters: \").append(getStackStatusFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PollForThirdPartyJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.EncryptionEntities.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.Toolchain.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getStackParameters() != null)\r\n        sb.append(\"StackParameters: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetDeploymentGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDeploymentGroupNames() != null)\r\n        sb.append(\"DeploymentGroupNames: \").append(getDeploymentGroupNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdatePublicKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKey() != null)\r\n        sb.append(\"PublicKey: \").append(getPublicKey()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DeleteLunaClientRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientArn() != null)\r\n        sb.append(\"ClientArn: \").append(getClientArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetCommentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommentId() != null)\r\n        sb.append(\"CommentId: \").append(getCommentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateDistributionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistributionConfig() != null)\r\n        sb.append(\"DistributionConfig: \").append(getDistributionConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.DeleteScalingPlanRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlanName() != null)\r\n        sb.append(\"ScalingPlanName: \").append(getScalingPlanName()).append(\",\");\r\n    if (getScalingPlanVersion() != null)\r\n        sb.append(\"ScalingPlanVersion: \").append(getScalingPlanVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClient.listDashboards",
	"Comment": "returns a list of the dashboards for your account. if you include dashboardnameprefix, only thosedashboards with names starting with the prefix are listed. otherwise, all dashboards in your account are listed.listdashboards returns up to 1000 results on one page. if there are more than 1000 dashboards, youcan call listdashboards again and include the value you received for nexttoken in thefirst call, to receive the next 1000 results.",
	"Method": "ListDashboardsResult listDashboards(ListDashboardsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDashboards(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.pollForThirdPartyJobs",
	"Comment": "determines whether there are any third party jobs for a job worker to act on. only used for partner actions.when this api is called, aws codepipeline returns temporary credentials for the amazon s3 bucket used to storeartifacts for the pipeline, if the action requires access to that amazon s3 bucket for input or output artifacts.",
	"Method": "PollForThirdPartyJobsResult pollForThirdPartyJobs(PollForThirdPartyJobsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePollForThirdPartyJobs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackSetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getStackSetId() != null)\r\n        sb.append(\"StackSetId: \").append(getStackSetId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.postCommentReply",
	"Comment": "posts a comment in reply to an existing comment on a comparison between commits or a pull request.",
	"Method": "PostCommentReplyResult postCommentReply(PostCommentReplyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePostCommentReply(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.UpdateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getLicenseType() != null)\r\n        sb.append(\"LicenseType: \").append(getLicenseType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.TagKeys.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutThirdPartyJobSuccessResultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackSetOperation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId()).append(\",\");\r\n    if (getStackSetId() != null)\r\n        sb.append(\"StackSetId: \").append(getStackSetId()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getOperationPreferences() != null)\r\n        sb.append(\"OperationPreferences: \").append(getOperationPreferences()).append(\",\");\r\n    if (getRetainStacks() != null)\r\n        sb.append(\"RetainStacks: \").append(getRetainStacks()).append(\",\");\r\n    if (getAdministrationRoleARN() != null)\r\n        sb.append(\"AdministrationRoleARN: \").append(getAdministrationRoleARN()).append(\",\");\r\n    if (getExecutionRoleName() != null)\r\n        sb.append(\"ExecutionRoleName: \").append(getExecutionRoleName()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getEndTimestamp() != null)\r\n        sb.append(\"EndTimestamp: \").append(getEndTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.PredefinedLoadMetricSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPredefinedLoadMetricType() != null)\r\n        sb.append(\"PredefinedLoadMetricType: \").append(getPredefinedLoadMetricType()).append(\",\");\r\n    if (getResourceLabel() != null)\r\n        sb.append(\"ResourceLabel: \").append(getResourceLabel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetId() != null)\r\n        sb.append(\"StackSetId: \").append(getStackSetId()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getAccount() != null)\r\n        sb.append(\"Account: \").append(getAccount()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getParameterOverrides() != null)\r\n        sb.append(\"ParameterOverrides: \").append(getParameterOverrides()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.Target.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getSourceReference() != null)\r\n        sb.append(\"SourceReference: \").append(getSourceReference()).append(\",\");\r\n    if (getDestinationReference() != null)\r\n        sb.append(\"DestinationReference: \").append(getDestinationReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.PublicKeyConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getEncodedKey() != null)\r\n        sb.append(\"EncodedKey: \").append(getEncodedKey()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.UpdateEnvironmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateFieldLevelEncryptionProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionProfileConfig() != null)\r\n        sb.append(\"FieldLevelEncryptionProfileConfig: \").append(getFieldLevelEncryptionProfileConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.GetAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccount() != null)\r\n        sb.append(\"Account: \").append(getAccount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateStreamingDistributionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamingDistribution() != null)\r\n        sb.append(\"StreamingDistribution: \").append(getStreamingDistribution()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetPublicKeyConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchUpdateObjectAttributesResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ListAvailableZonesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.TrafficRoutingConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getTimeBasedCanary() != null)\r\n        sb.append(\"TimeBasedCanary: \").append(getTimeBasedCanary()).append(\",\");\r\n    if (getTimeBasedLinear() != null)\r\n        sb.append(\"TimeBasedLinear: \").append(getTimeBasedLinear());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.RemoveTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.DescribeScalingPlansRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlanNames() != null)\r\n        sb.append(\"ScalingPlanNames: \").append(getScalingPlanNames()).append(\",\");\r\n    if (getScalingPlanVersion() != null)\r\n        sb.append(\"ScalingPlanVersion: \").append(getScalingPlanVersion()).append(\",\");\r\n    if (getApplicationSources() != null)\r\n        sb.append(\"ApplicationSources: \").append(getApplicationSources()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpdateSchemaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DeleteNotificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getNotification() != null)\r\n        sb.append(\"Notification: \").append(getNotification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetApplicationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationNames() != null)\r\n        sb.append(\"ApplicationNames: \").append(getApplicationNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationAsyncClient.getTemplateSummaryAsync",
	"Comment": "simplified method form for invoking the gettemplatesummary operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetTemplateSummaryResult> getTemplateSummaryAsync(GetTemplateSummaryRequest request,java.util.concurrent.Future<GetTemplateSummaryResult> getTemplateSummaryAsync,GetTemplateSummaryRequest request,com.amazonaws.handlers.AsyncHandler<GetTemplateSummaryRequest, GetTemplateSummaryResult> asyncHandler,java.util.concurrent.Future<GetTemplateSummaryResult> getTemplateSummaryAsync,java.util.concurrent.Future<GetTemplateSummaryResult> getTemplateSummaryAsync,com.amazonaws.handlers.AsyncHandler<GetTemplateSummaryRequest, GetTemplateSummaryResult> asyncHandler){\r\n    return getTemplateSummaryAsync(new GetTemplateSummaryRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DeleteChangeSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeSetName() != null)\r\n        sb.append(\"ChangeSetName: \").append(getChangeSetName()).append(\",\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateCloudFrontOriginAccessIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudFrontOriginAccessIdentity() != null)\r\n        sb.append(\"CloudFrontOriginAccessIdentity: \").append(getCloudFrontOriginAccessIdentity()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.AmazonCloudSearchDomainAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ProjectArtifacts.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getNamespaceType() != null)\r\n        sb.append(\"NamespaceType: \").append(getNamespaceType()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPackaging() != null)\r\n        sb.append(\"Packaging: \").append(getPackaging()).append(\",\");\r\n    if (getOverrideArtifactName() != null)\r\n        sb.append(\"OverrideArtifactName: \").append(getOverrideArtifactName()).append(\",\");\r\n    if (getEncryptionDisabled() != null)\r\n        sb.append(\"EncryptionDisabled: \").append(getEncryptionDisabled()).append(\",\");\r\n    if (getArtifactIdentifier() != null)\r\n        sb.append(\"ArtifactIdentifier: \").append(getArtifactIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AWSCloudTrailClient.describeTrails",
	"Comment": "retrieves settings for the trail associated with the current region for your account.",
	"Method": "DescribeTrailsResult describeTrails(DescribeTrailsRequest request,DescribeTrailsResult describeTrails){\r\n    return describeTrails(new DescribeTrailsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.GetPipelineExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineExecution() != null)\r\n        sb.append(\"PipelineExecution: \").append(getPipelineExecution());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DeleteIndexFieldResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexField() != null)\r\n        sb.append(\"IndexField: \").append(getIndexField());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.GetOpenIdTokenResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.LookupDeveloperIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId()).append(\",\");\r\n    if (getDeveloperUserIdentifierList() != null)\r\n        sb.append(\"DeveloperUserIdentifierList: \").append(getDeveloperUserIdentifierList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetStreamingDistributionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.describeSuggesters",
	"Comment": "gets the suggesters configured for a domain. a suggester enables you to display possible matches before usersfinish typing their queries. can be limited to specific suggesters by name. by default, shows all suggesters andincludes any pending changes to the configuration. set the deployed option to true toshow the active configuration and exclude pending changes. for more information, see getting search suggestions in the amazon cloudsearch developer guide.",
	"Method": "DescribeSuggestersResult describeSuggesters(DescribeSuggestersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSuggesters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetOnPremisesInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.CognitoIdentityProvider.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProviderName() != null)\r\n        sb.append(\"ProviderName: \").append(getProviderName()).append(\",\");\r\n    if (getClientId() != null)\r\n        sb.append(\"ClientId: \").append(getClientId()).append(\",\");\r\n    if (getServerSideTokenCheck() != null)\r\n        sb.append(\"ServerSideTokenCheck: \").append(getServerSideTokenCheck());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.RemoveTagsFromResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeyList() != null)\r\n        sb.append(\"TagKeyList: \").append(getTagKeyList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ListTeamMembersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.EnableDirectoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getEventId() != null)\r\n        sb.append(\"EventId: \").append(getEventId()).append(\",\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getLogicalResourceId() != null)\r\n        sb.append(\"LogicalResourceId: \").append(getLogicalResourceId()).append(\",\");\r\n    if (getPhysicalResourceId() != null)\r\n        sb.append(\"PhysicalResourceId: \").append(getPhysicalResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getResourceStatus() != null)\r\n        sb.append(\"ResourceStatus: \").append(getResourceStatus()).append(\",\");\r\n    if (getResourceStatusReason() != null)\r\n        sb.append(\"ResourceStatusReason: \").append(getResourceStatusReason()).append(\",\");\r\n    if (getResourceProperties() != null)\r\n        sb.append(\"ResourceProperties: \").append(getResourceProperties()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.DisableStageTransitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getStageName() != null)\r\n        sb.append(\"StageName: \").append(getStageName()).append(\",\");\r\n    if (getTransitionType() != null)\r\n        sb.append(\"TransitionType: \").append(getTransitionType()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.deleteFile",
	"Comment": "deletes a specified file from a specified branch. a commit is created on the branch that contains the revision.the file will still exist in the commits prior to the commit that contains the deletion.",
	"Method": "DeleteFileResult deleteFile(DeleteFileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteFile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AbstractAmazonCloudFormationAsync.listStacksAsync",
	"Comment": "simplified method form for invoking the liststacks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListStacksResult> listStacksAsync(ListStacksRequest request,java.util.concurrent.Future<ListStacksResult> listStacksAsync,ListStacksRequest request,com.amazonaws.handlers.AsyncHandler<ListStacksRequest, ListStacksResult> asyncHandler,java.util.concurrent.Future<ListStacksResult> listStacksAsync,java.util.concurrent.Future<ListStacksResult> listStacksAsync,com.amazonaws.handlers.AsyncHandler<ListStacksRequest, ListStacksResult> asyncHandler){\r\n    return listStacksAsync(new ListStacksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.DeregisterWebhookWithThirdPartyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebhookName() != null)\r\n        sb.append(\"WebhookName: \").append(getWebhookName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DeleteHapgResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.DescribeUserProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getLastModifiedTimestamp() != null)\r\n        sb.append(\"LastModifiedTimestamp: \").append(getLastModifiedTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClient.updateBudget",
	"Comment": "updates a budget. you can change every part of a budget except for the budgetname and thecalculatedspend. when you modify a budget, the calculatedspend drops to zero until awshas new usage data to use for forecasting.",
	"Method": "UpdateBudgetResult updateBudget(UpdateBudgetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateBudget(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.CreateRepositoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryMetadata() != null)\r\n        sb.append(\"RepositoryMetadata: \").append(getRepositoryMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.UpdateSubscriberRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getNotification() != null)\r\n        sb.append(\"Notification: \").append(getNotification()).append(\",\");\r\n    if (getOldSubscriber() != null)\r\n        sb.append(\"OldSubscriber: \").append(getOldSubscriber()).append(\",\");\r\n    if (getNewSubscriber() != null)\r\n        sb.append(\"NewSubscriber: \").append(getNewSubscriber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.CreateDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.UpdateTeamMemberResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getProjectRole() != null)\r\n        sb.append(\"ProjectRole: \").append(getProjectRole()).append(\",\");\r\n    if (getRemoteAccessAllowed() != null)\r\n        sb.append(\"RemoteAccessAllowed: \").append(getRemoteAccessAllowed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.CancelUpdateStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateObjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getSchemaFacets() != null)\r\n        sb.append(\"SchemaFacets: \").append(getSchemaFacets()).append(\",\");\r\n    if (getObjectAttributeList() != null)\r\n        sb.append(\"ObjectAttributeList: \").append(getObjectAttributeList()).append(\",\");\r\n    if (getParentReference() != null)\r\n        sb.append(\"ParentReference: \").append(getParentReference()).append(\",\");\r\n    if (getLinkName() != null)\r\n        sb.append(\"LinkName: \").append(getLinkName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetApplicationRevisionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getRevisions() != null)\r\n        sb.append(\"Revisions: \").append(getRevisions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.Trail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getS3BucketName() != null)\r\n        sb.append(\"S3BucketName: \").append(getS3BucketName()).append(\",\");\r\n    if (getS3KeyPrefix() != null)\r\n        sb.append(\"S3KeyPrefix: \").append(getS3KeyPrefix()).append(\",\");\r\n    if (getSnsTopicName() != null)\r\n        sb.append(\"SnsTopicName: \").append(getSnsTopicName()).append(\",\");\r\n    if (getSnsTopicARN() != null)\r\n        sb.append(\"SnsTopicARN: \").append(getSnsTopicARN()).append(\",\");\r\n    if (getIncludeGlobalServiceEvents() != null)\r\n        sb.append(\"IncludeGlobalServiceEvents: \").append(getIncludeGlobalServiceEvents()).append(\",\");\r\n    if (getIsMultiRegionTrail() != null)\r\n        sb.append(\"IsMultiRegionTrail: \").append(getIsMultiRegionTrail()).append(\",\");\r\n    if (getHomeRegion() != null)\r\n        sb.append(\"HomeRegion: \").append(getHomeRegion()).append(\",\");\r\n    if (getTrailARN() != null)\r\n        sb.append(\"TrailARN: \").append(getTrailARN()).append(\",\");\r\n    if (getLogFileValidationEnabled() != null)\r\n        sb.append(\"LogFileValidationEnabled: \").append(getLogFileValidationEnabled()).append(\",\");\r\n    if (getCloudWatchLogsLogGroupArn() != null)\r\n        sb.append(\"CloudWatchLogsLogGroupArn: \").append(getCloudWatchLogsLogGroupArn()).append(\",\");\r\n    if (getCloudWatchLogsRoleArn() != null)\r\n        sb.append(\"CloudWatchLogsRoleArn: \").append(getCloudWatchLogsRoleArn()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getHasCustomEventSelectors() != null)\r\n        sb.append(\"HasCustomEventSelectors: \").append(getHasCustomEventSelectors()).append(\",\");\r\n    if (getIsOrganizationTrail() != null)\r\n        sb.append(\"IsOrganizationTrail: \").append(getIsOrganizationTrail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ContainerDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getVcpus() != null)\r\n        sb.append(\"Vcpus: \").append(getVcpus()).append(\",\");\r\n    if (getMemory() != null)\r\n        sb.append(\"Memory: \").append(getMemory()).append(\",\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getJobRoleArn() != null)\r\n        sb.append(\"JobRoleArn: \").append(getJobRoleArn()).append(\",\");\r\n    if (getVolumes() != null)\r\n        sb.append(\"Volumes: \").append(getVolumes()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getMountPoints() != null)\r\n        sb.append(\"MountPoints: \").append(getMountPoints()).append(\",\");\r\n    if (getReadonlyRootFilesystem() != null)\r\n        sb.append(\"ReadonlyRootFilesystem: \").append(getReadonlyRootFilesystem()).append(\",\");\r\n    if (getUlimits() != null)\r\n        sb.append(\"Ulimits: \").append(getUlimits()).append(\",\");\r\n    if (getPrivileged() != null)\r\n        sb.append(\"Privileged: \").append(getPrivileged()).append(\",\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser()).append(\",\");\r\n    if (getExitCode() != null)\r\n        sb.append(\"ExitCode: \").append(getExitCode()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getContainerInstanceArn() != null)\r\n        sb.append(\"ContainerInstanceArn: \").append(getContainerInstanceArn()).append(\",\");\r\n    if (getTaskArn() != null)\r\n        sb.append(\"TaskArn: \").append(getTaskArn()).append(\",\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.indexDocuments",
	"Comment": "tells the search domain to start indexing its documents using the latest indexing options. this operation must beinvoked to activate options whose optionstatus is requiresindexdocuments.",
	"Method": "IndexDocumentsResult indexDocuments(IndexDocumentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeIndexDocuments(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.CodeSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3() != null)\r\n        sb.append(\"S3: \").append(getS3());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.StageDeclaration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getBlockers() != null)\r\n        sb.append(\"Blockers: \").append(getBlockers()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.waiters.AmazonAutoScalingWaiters.groupNotExists",
	"Comment": "builds a groupnotexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeAutoScalingGroupsRequest> groupNotExists(){\r\n    return new WaiterBuilder<DescribeAutoScalingGroupsRequest, DescribeAutoScalingGroupsResult>().withSdkFunction(new DescribeAutoScalingGroupsFunction(client)).withAcceptors(new GroupNotExists.IsFalseMatcher(), new GroupNotExists.IsTrueMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.internal.DocumentationUtils.escapeIllegalCharacters",
	"Comment": "escapes java comment breaking illegal character sequences.",
	"Method": "String escapeIllegalCharacters(String documentation){\r\n    if (documentation == null) {\r\n        return \"\";\r\n    }\r\n    documentation = documentation.replaceAll(\"\\\\*\\\\/\", \"*&#47;\");\r\n    return documentation;\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DeregisterJobDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.AmazonCloudSearchDomainClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.ListIdentityPoolsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPools() != null)\r\n        sb.append(\"IdentityPools: \").append(getIdentityPools()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClient.importSourceCredentials",
	"Comment": "imports the source repository credentials for an aws codebuild project that has its source code stored in agithub, github enterprise, or bitbucket repository.",
	"Method": "ImportSourceCredentialsResult importSourceCredentials(ImportSourceCredentialsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeImportSourceCredentials(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DeleteFacetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.UpdateAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccount() != null)\r\n        sb.append(\"Account: \").append(getAccount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DeleteHapgRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHapgArn() != null)\r\n        sb.append(\"HapgArn: \").append(getHapgArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.CreateStackInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RegisterApplicationRevisionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RevisionInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRevisionLocation() != null)\r\n        sb.append(\"RevisionLocation: \").append(getRevisionLocation()).append(\",\");\r\n    if (getGenericRevisionInfo() != null)\r\n        sb.append(\"GenericRevisionInfo: \").append(getGenericRevisionInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchAttachPolicyResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsbatchasync using the current builder configuration.",
	"Method": "AWSBatchAsync build(AwsAsyncClientParams params){\r\n    return new AWSBatchAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetOnPremisesInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceInfos() != null)\r\n        sb.append(\"InstanceInfos: \").append(getInstanceInfos());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.AccountSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDisableRemoteControl() != null)\r\n        sb.append(\"DisableRemoteControl: \").append(getDisableRemoteControl()).append(\",\");\r\n    if (getEnableDialOut() != null)\r\n        sb.append(\"EnableDialOut: \").append(getEnableDialOut());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listOutgoingTypedLinks",
	"Comment": "returns a paginated list of all the outgoing typedlinkspecifier information for an object. it alsosupports filtering by typed link facet and identity attributes. for more information, see typed links.",
	"Method": "ListOutgoingTypedLinksResult listOutgoingTypedLinks(ListOutgoingTypedLinksRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListOutgoingTypedLinks(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchWriteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResponses() != null)\r\n        sb.append(\"Responses: \").append(getResponses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DeleteSuggesterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuggester() != null)\r\n        sb.append(\"Suggester: \").append(getSuggester());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DeleteObjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.intermediate.ShapeModel.findEnumModelByValue",
	"Comment": "returns the enum model for the given enum value.returns null if no such enum value exists.",
	"Method": "EnumModel findEnumModelByValue(String enumValue){\r\n    if (enums != null) {\r\n        for (EnumModel enumModel : enums) {\r\n            if (enumValue.equals(enumModel.getValue())) {\r\n                return enumModel;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ListBuildsForProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetFileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommitId() != null)\r\n        sb.append(\"CommitId: \").append(getCommitId()).append(\",\");\r\n    if (getBlobId() != null)\r\n        sb.append(\"BlobId: \").append(getBlobId()).append(\",\");\r\n    if (getFilePath() != null)\r\n        sb.append(\"FilePath: \").append(getFilePath()).append(\",\");\r\n    if (getFileMode() != null)\r\n        sb.append(\"FileMode: \").append(getFileMode()).append(\",\");\r\n    if (getFileSize() != null)\r\n        sb.append(\"FileSize: \").append(getFileSize()).append(\",\");\r\n    if (getFileContent() != null)\r\n        sb.append(\"FileContent: \").append(getFileContent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.Invite.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInviteId() != null)\r\n        sb.append(\"InviteId: \").append(getInviteId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getEmailStatus() != null)\r\n        sb.append(\"EmailStatus: \").append(getEmailStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchAttachToIndexResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedObjectIdentifier() != null)\r\n        sb.append(\"AttachedObjectIdentifier: \").append(getAttachedObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.DeleteProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getDeleteStack() != null)\r\n        sb.append(\"DeleteStack: \").append(getDeleteStack());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackInstance() != null)\r\n        sb.append(\"StackInstance: \").append(getStackInstance());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.SuspendProcessesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.UpdateStackInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getAccounts() != null)\r\n        sb.append(\"Accounts: \").append(getAccounts()).append(\",\");\r\n    if (getRegions() != null)\r\n        sb.append(\"Regions: \").append(getRegions()).append(\",\");\r\n    if (getParameterOverrides() != null)\r\n        sb.append(\"ParameterOverrides: \").append(getParameterOverrides()).append(\",\");\r\n    if (getOperationPreferences() != null)\r\n        sb.append(\"OperationPreferences: \").append(getOperationPreferences()).append(\",\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ListJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobSummaryList() != null)\r\n        sb.append(\"JobSummaryList: \").append(getJobSummaryList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdatePullRequestDescriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.Artifact.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListPolicyAttachmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectIdentifiers() != null)\r\n        sb.append(\"ObjectIdentifiers: \").append(getObjectIdentifiers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.DescribeIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ErrorInformation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateTypedLinkFacetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getFacet() != null)\r\n        sb.append(\"Facet: \").append(getFacet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMAsyncClient.listAvailableZonesAsync",
	"Comment": "simplified method form for invoking the listavailablezones operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAvailableZonesResult> listAvailableZonesAsync(ListAvailableZonesRequest request,java.util.concurrent.Future<ListAvailableZonesResult> listAvailableZonesAsync,ListAvailableZonesRequest request,com.amazonaws.handlers.AsyncHandler<ListAvailableZonesRequest, ListAvailableZonesResult> asyncHandler,java.util.concurrent.Future<ListAvailableZonesResult> listAvailableZonesAsync,java.util.concurrent.Future<ListAvailableZonesResult> listAvailableZonesAsync,com.amazonaws.handlers.AsyncHandler<ListAvailableZonesRequest, ListAvailableZonesResult> asyncHandler){\r\n    return listAvailableZonesAsync(new ListAvailableZonesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.ListMetricsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.getBranch",
	"Comment": "returns information about a repository branch, including its name and the last commit id.",
	"Method": "GetBranchResult getBranch(GetBranchRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetBranch(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.AmazonCloudSearchDomainClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazoncloudsearchdomain using the current builder configuration.",
	"Method": "AmazonCloudSearchDomain build(AwsSyncClientParams params){\r\n    return new AmazonCloudSearchDomainClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListApplicationRevisionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRevisions() != null)\r\n        sb.append(\"Revisions: \").append(getRevisions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RevisionLocation.getString",
	"Comment": "information about the location of an aws lambda deployment revision stored as a rawstring.",
	"Method": "RawString getString(){\r\n    return this.string;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.InitializeClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getSignedCert() != null)\r\n        sb.append(\"SignedCert: \").append(getSignedCert()).append(\",\");\r\n    if (getTrustAnchor() != null)\r\n        sb.append(\"TrustAnchor: \").append(getTrustAnchor());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.SuspendProcessesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoScalingGroupName() != null)\r\n        sb.append(\"AutoScalingGroupName: \").append(getAutoScalingGroupName()).append(\",\");\r\n    if (getScalingProcesses() != null)\r\n        sb.append(\"ScalingProcesses: \").append(getScalingProcesses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdateStreamingDistributionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamingDistributionConfig() != null)\r\n        sb.append(\"StreamingDistributionConfig: \").append(getStreamingDistributionConfig()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.ListTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetDistributionConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistributionConfig() != null)\r\n        sb.append(\"DistributionConfig: \").append(getDistributionConfig()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.emitters.tasks.WaitersGeneratorTasks.createWaiterOpFunctionClassTasks",
	"Comment": "constructs the data model and submits tasks for every generating sdkfunction for every unique operation in the waiterintermediate model",
	"Method": "List<GeneratorTask> createWaiterOpFunctionClassTasks(){\r\n    List<GeneratorTask> generatorTasks = new ArrayList();\r\n    List<String> generatedOperations = new ArrayList();\r\n    for (Map.Entry<String, WaiterDefinitionModel> entry : model.getWaiters().entrySet()) {\r\n        final WaiterDefinitionModel waiterModel = entry.getValue();\r\n        if (!generatedOperations.contains(waiterModel.getOperationName())) {\r\n            generatedOperations.add(waiterModel.getOperationName());\r\n            Map<String, Object> dataModel = ImmutableMapParameter.of(\"fileHeader\", model.getFileHeader(), \"waiter\", waiterModel, \"operation\", model.getOperation(waiterModel.getOperationName()), \"metadata\", model.getMetadata());\r\n            final String className = waiterModel.getOperationModel().getOperationName() + \"Function\";\r\n            generatorTasks.add(new FreemarkerGeneratorTask(waiterClassDir, className, freemarker.getWaiterSDKFunctionTemplate(), dataModel));\r\n        }\r\n    }\r\n    return generatorTasks;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Paths.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.DeleteWebhookRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getTemplateDescription() != null)\r\n        sb.append(\"TemplateDescription: \").append(getTemplateDescription()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime()).append(\",\");\r\n    if (getDeletionTime() != null)\r\n        sb.append(\"DeletionTime: \").append(getDeletionTime()).append(\",\");\r\n    if (getStackStatus() != null)\r\n        sb.append(\"StackStatus: \").append(getStackStatus()).append(\",\");\r\n    if (getStackStatusReason() != null)\r\n        sb.append(\"StackStatusReason: \").append(getStackStatusReason()).append(\",\");\r\n    if (getParentId() != null)\r\n        sb.append(\"ParentId: \").append(getParentId()).append(\",\");\r\n    if (getRootId() != null)\r\n        sb.append(\"RootId: \").append(getRootId()).append(\",\");\r\n    if (getDriftInformation() != null)\r\n        sb.append(\"DriftInformation: \").append(getDriftInformation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DescribeHapgRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHapgArn() != null)\r\n        sb.append(\"HapgArn: \").append(getHapgArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.CreateAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DetachPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutActionRevisionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getStageName() != null)\r\n        sb.append(\"StageName: \").append(getStageName()).append(\",\");\r\n    if (getActionName() != null)\r\n        sb.append(\"ActionName: \").append(getActionName()).append(\",\");\r\n    if (getActionRevision() != null)\r\n        sb.append(\"ActionRevision: \").append(getActionRevision());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.DescribeEnvironmentMembershipsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberships() != null)\r\n        sb.append(\"Memberships: \").append(getMemberships()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DeleteAlarmsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlarmNames() != null)\r\n        sb.append(\"AlarmNames: \").append(getAlarmNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.AWSAutoScalingPlansClient.describeScalingPlanResources",
	"Comment": "describes the scalable resources in the specified scaling plan.",
	"Method": "DescribeScalingPlanResourcesResult describeScalingPlanResources(DescribeScalingPlanResourcesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeScalingPlanResources(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ActionType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings()).append(\",\");\r\n    if (getActionConfigurationProperties() != null)\r\n        sb.append(\"ActionConfigurationProperties: \").append(getActionConfigurationProperties()).append(\",\");\r\n    if (getInputArtifactDetails() != null)\r\n        sb.append(\"InputArtifactDetails: \").append(getInputArtifactDetails()).append(\",\");\r\n    if (getOutputArtifactDetails() != null)\r\n        sb.append(\"OutputArtifactDetails: \").append(getOutputArtifactDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.DeleteIdentitiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedIdentityIds() != null)\r\n        sb.append(\"UnprocessedIdentityIds: \").append(getUnprocessedIdentityIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.UpdateStackInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.MetricDimension.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.getPipeline",
	"Comment": "returns the metadata, structure, stages, and actions of a pipeline. can be used to return the entire structure ofa pipeline in json format, which can then be modified and used to update the pipeline structure withupdatepipeline.",
	"Method": "GetPipelineResult getPipeline(GetPipelineRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetPipeline(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.Parameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterKey() != null)\r\n        sb.append(\"ParameterKey: \").append(getParameterKey()).append(\",\");\r\n    if (getParameterValue() != null)\r\n        sb.append(\"ParameterValue: \").append(getParameterValue()).append(\",\");\r\n    if (getUsePreviousValue() != null)\r\n        sb.append(\"UsePreviousValue: \").append(getUsePreviousValue()).append(\",\");\r\n    if (getResolvedValue() != null)\r\n        sb.append(\"ResolvedValue: \").append(getResolvedValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchDeleteObjectResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeletePublicKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.deleteCommentContent",
	"Comment": "deletes the content of a comment made on a change, file, or commit in a repository.",
	"Method": "DeleteCommentContentResult deleteCommentContent(DeleteCommentContentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteCommentContent(request);\r\n}"
}, {
	"Path": "com.amazonaws.codegen.customization.processors.EmitLegacyEnumSetterProcessor.assertShapeAndMembersAreInModel",
	"Comment": "checks that all shapes and members in a given customization are actually in the model. good to fail fast for things liketypos instead of silently not applying that customization.",
	"Method": "void assertShapeAndMembersAreInModel(IntermediateModel model,Map<String, List<String>> shapeAndMembers){\r\n    shapeAndMembers.forEach((shapeName, members) -> {\r\n        if (Utils.findShapeModelByC2jNameIfExists(model, shapeName) == null) {\r\n            throw new IllegalStateException(String.format(\"Cannot find shape [%s] in the model when processing \" + \"customization config emitLegacyEnumSetterFor. %s\", shapeName, shapeName));\r\n        }\r\n        members.forEach(memberName -> {\r\n            if (model.getShapeByC2jName(shapeName).getMemberByC2jName(memberName) == null) {\r\n                throw new IllegalStateException(String.format(\"Cannot find member [%s] in the model when processing \" + \"customization config emitLegacyEnumSetterFor. %s\", memberName, shapeName));\r\n            }\r\n        });\r\n    });\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DeleteDashboardsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListOutgoingTypedLinksResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTypedLinkSpecifiers() != null)\r\n        sb.append(\"TypedLinkSpecifiers: \").append(getTypedLinkSpecifiers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.RemoveUnusedShapes.resolveMemberShapes",
	"Comment": "recursively resolves the shapes represented by the member. when the member is a map,both the key shape and the value shape of the map will be resolved, so that thereturning list could have more than one elements.",
	"Method": "List<String> resolveMemberShapes(MemberModel member){\r\n    if (member == null)\r\n        return new LinkedList<String>();\r\n    if (member.getEnumType() != null) {\r\n        return Collections.singletonList(member.getEnumType());\r\n    } else if (member.isList()) {\r\n        return resolveMemberShapes(member.getListModel().getListMemberModel());\r\n    } else if (member.isMap()) {\r\n        List<String> memberShapes = new LinkedList<String>();\r\n        memberShapes.addAll(resolveMemberShapes(member.getMapModel().getKeyModel()));\r\n        memberShapes.addAll(resolveMemberShapes(member.getMapModel().getValueModel()));\r\n        return memberShapes;\r\n    } else if (member.isSimple()) {\r\n        return new LinkedList<String>();\r\n    } else {\r\n        return Collections.singletonList(member.getVariable().getSimpleType());\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DescribeBackupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackups() != null)\r\n        sb.append(\"Backups: \").append(getBackups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.PublicKey.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getValidityStartTime() != null)\r\n        sb.append(\"ValidityStartTime: \").append(getValidityStartTime()).append(\",\");\r\n    if (getValidityEndTime() != null)\r\n        sb.append(\"ValidityEndTime: \").append(getValidityEndTime()).append(\",\");\r\n    if (getFingerprint() != null)\r\n        sb.append(\"Fingerprint: \").append(getFingerprint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.Hits.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFound() != null)\r\n        sb.append(\"Found: \").append(getFound()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getCursor() != null)\r\n        sb.append(\"Cursor: \").append(getCursor()).append(\",\");\r\n    if (getHit() != null)\r\n        sb.append(\"Hit: \").append(getHit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.EnvironmentVariable.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.RequestMetricCollectorSupport.addMetricsToQueue",
	"Comment": "adds the given metric to the queue, returning true if successful or falseif no space available.",
	"Method": "boolean addMetricsToQueue(MetricDatum metric){\r\n    return queue.offer(metric);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.StopBuildRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateDistributionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistribution() != null)\r\n        sb.append(\"Distribution: \").append(getDistribution()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.PublicKey.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getCreatedTime() != null)\r\n        sb.append(\"CreatedTime: \").append(getCreatedTime()).append(\",\");\r\n    if (getPublicKeyConfig() != null)\r\n        sb.append(\"PublicKeyConfig: \").append(getPublicKeyConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ImportSourceCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.CreateStackSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getTemplateURL() != null)\r\n        sb.append(\"TemplateURL: \").append(getTemplateURL()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getAdministrationRoleARN() != null)\r\n        sb.append(\"AdministrationRoleARN: \").append(getAdministrationRoleARN()).append(\",\");\r\n    if (getExecutionRoleName() != null)\r\n        sb.append(\"ExecutionRoleName: \").append(getExecutionRoleName()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateInvalidationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getInvalidation() != null)\r\n        sb.append(\"Invalidation: \").append(getInvalidation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.updateIdentityPool",
	"Comment": "updates a user pool.you must use aws developer credentials to call this api.",
	"Method": "UpdateIdentityPoolResult updateIdentityPool(UpdateIdentityPoolRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateIdentityPool(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DescribeJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PostCommentForPullRequestRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBeforeCommitId() != null)\r\n        sb.append(\"BeforeCommitId: \").append(getBeforeCommitId()).append(\",\");\r\n    if (getAfterCommitId() != null)\r\n        sb.append(\"AfterCommitId: \").append(getAfterCommitId()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMAsyncClient.listHapgsAsync",
	"Comment": "simplified method form for invoking the listhapgs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListHapgsResult> listHapgsAsync(ListHapgsRequest request,java.util.concurrent.Future<ListHapgsResult> listHapgsAsync,ListHapgsRequest request,com.amazonaws.handlers.AsyncHandler<ListHapgsRequest, ListHapgsResult> asyncHandler,java.util.concurrent.Future<ListHapgsResult> listHapgsAsync,java.util.concurrent.Future<ListHapgsResult> listHapgsAsync,com.amazonaws.handlers.AsyncHandler<ListHapgsRequest, ListHapgsResult> asyncHandler){\r\n    return listHapgsAsync(new ListHapgsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.OriginCustomHeader.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHeaderName() != null)\r\n        sb.append(\"HeaderName: \").append(getHeaderName()).append(\",\");\r\n    if (getHeaderValue() != null)\r\n        sb.append(\"HeaderValue: \").append(getHeaderValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListCloudFrontOriginAccessIdentitiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudFrontOriginAccessIdentityList() != null)\r\n        sb.append(\"CloudFrontOriginAccessIdentityList: \").append(getCloudFrontOriginAccessIdentityList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.getMergeConflicts",
	"Comment": "returns information about merge conflicts between the before and after commit ids for a pull request in arepository.",
	"Method": "GetMergeConflictsResult getMergeConflicts(GetMergeConflictsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetMergeConflicts(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.waiters.AmazonCloudFormationWaiters.changeSetCreateComplete",
	"Comment": "builds a changesetcreatecomplete waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeChangeSetRequest> changeSetCreateComplete(){\r\n    return new WaiterBuilder<DescribeChangeSetRequest, DescribeChangeSetResult>().withSdkFunction(new DescribeChangeSetFunction(client)).withAcceptors(new ChangeSetCreateComplete.IsCREATE_COMPLETEMatcher(), new ChangeSetCreateComplete.IsFAILEDMatcher(), new ChangeSetCreateComplete.IsValidationErrorMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(120), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.config.customization.CustomizationConfig.setStringOverloadForByteBufferMember",
	"Comment": "customization to generate a method overload for a member setter that takes a string ratherthan an bytebuffer. currently only used by lambda",
	"Method": "void setStringOverloadForByteBufferMember(StringOverloadForByteBufferMember stringOverloadForByteBufferMember){\r\n    this.convenienceTypeOverloads.add(stringOverloadForByteBufferMember.getConvenienceTypeOverload());\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpgradeAppliedSchemaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublishedSchemaArn() != null)\r\n        sb.append(\"PublishedSchemaArn: \").append(getPublishedSchemaArn()).append(\",\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.EstimateTemplateCostRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getTemplateURL() != null)\r\n        sb.append(\"TemplateURL: \").append(getTemplateURL()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DisableDirectoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetDeploymentTargetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getTargetIds() != null)\r\n        sb.append(\"TargetIds: \").append(getTargetIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.UntagProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.SkipWaitTimeForInstanceTerminationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.LookupEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLookupAttributes() != null)\r\n        sb.append(\"LookupAttributes: \").append(getLookupAttributes()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.FieldLevelEncryptionSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getQueryArgProfileConfig() != null)\r\n        sb.append(\"QueryArgProfileConfig: \").append(getQueryArgProfileConfig()).append(\",\");\r\n    if (getContentTypeProfileConfig() != null)\r\n        sb.append(\"ContentTypeProfileConfig: \").append(getContentTypeProfileConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.CreatePullRequestResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequest() != null)\r\n        sb.append(\"PullRequest: \").append(getPullRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ListUserProfilesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetDirectoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.AWSCloudHSMV2Client.untagResource",
	"Comment": "removes the specified tag or tags from the specified aws cloudhsm cluster.",
	"Method": "UntagResourceResult untagResource(UntagResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUntagResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.SetIdentityPoolRolesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getRoles() != null)\r\n        sb.append(\"Roles: \").append(getRoles()).append(\",\");\r\n    if (getRoleMappings() != null)\r\n        sb.append(\"RoleMappings: \").append(getRoleMappings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.ScalingPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyType() != null)\r\n        sb.append(\"PolicyType: \").append(getPolicyType()).append(\",\");\r\n    if (getTargetTrackingConfiguration() != null)\r\n        sb.append(\"TargetTrackingConfiguration: \").append(getTargetTrackingConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetDeploymentInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazoncognitoidentity using the current builder configuration.",
	"Method": "AmazonCognitoIdentity build(AwsSyncClientParams params){\r\n    return new AmazonCognitoIdentityClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.DeleteBranchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBranchName() != null)\r\n        sb.append(\"BranchName: \").append(getBranchName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListDirectoriesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectories() != null)\r\n        sb.append(\"Directories: \").append(getDirectories()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListIncomingTypedLinksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getFilterAttributeRanges() != null)\r\n        sb.append(\"FilterAttributeRanges: \").append(getFilterAttributeRanges()).append(\",\");\r\n    if (getFilterTypedLink() != null)\r\n        sb.append(\"FilterTypedLink: \").append(getFilterTypedLink()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.UpdateWebhookResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWebhook() != null)\r\n        sb.append(\"Webhook: \").append(getWebhook());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.DescribeUserProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RevisionLocation.setString",
	"Comment": "information about the location of an aws lambda deployment revision stored as a rawstring.",
	"Method": "void setString(RawString string){\r\n    this.string = string;\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListIncomingTypedLinks.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getFilterAttributeRanges() != null)\r\n        sb.append(\"FilterAttributeRanges: \").append(getFilterAttributeRanges()).append(\",\");\r\n    if (getFilterTypedLink() != null)\r\n        sb.append(\"FilterTypedLink: \").append(getFilterTypedLink()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpgradePublishedSchemaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevelopmentSchemaArn() != null)\r\n        sb.append(\"DevelopmentSchemaArn: \").append(getDevelopmentSchemaArn()).append(\",\");\r\n    if (getPublishedSchemaArn() != null)\r\n        sb.append(\"PublishedSchemaArn: \").append(getPublishedSchemaArn()).append(\",\");\r\n    if (getMinorVersion() != null)\r\n        sb.append(\"MinorVersion: \").append(getMinorVersion()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeDomainsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainStatusList() != null)\r\n        sb.append(\"DomainStatusList: \").append(getDomainStatusList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.CreateStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.MetricDataQuery.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getMetricStat() != null)\r\n        sb.append(\"MetricStat: \").append(getMetricStat()).append(\",\");\r\n    if (getExpression() != null)\r\n        sb.append(\"Expression: \").append(getExpression()).append(\",\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel()).append(\",\");\r\n    if (getReturnData() != null)\r\n        sb.append(\"ReturnData: \").append(getReturnData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ContainerOverrides.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVcpus() != null)\r\n        sb.append(\"Vcpus: \").append(getVcpus()).append(\",\");\r\n    if (getMemory() != null)\r\n        sb.append(\"Memory: \").append(getMemory()).append(\",\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployAsyncClient.batchGetOnPremisesInstancesAsync",
	"Comment": "simplified method form for invoking the batchgetonpremisesinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<BatchGetOnPremisesInstancesResult> batchGetOnPremisesInstancesAsync(BatchGetOnPremisesInstancesRequest request,java.util.concurrent.Future<BatchGetOnPremisesInstancesResult> batchGetOnPremisesInstancesAsync,BatchGetOnPremisesInstancesRequest request,com.amazonaws.handlers.AsyncHandler<BatchGetOnPremisesInstancesRequest, BatchGetOnPremisesInstancesResult> asyncHandler,java.util.concurrent.Future<BatchGetOnPremisesInstancesResult> batchGetOnPremisesInstancesAsync,java.util.concurrent.Future<BatchGetOnPremisesInstancesResult> batchGetOnPremisesInstancesAsync,com.amazonaws.handlers.AsyncHandler<BatchGetOnPremisesInstancesRequest, BatchGetOnPremisesInstancesResult> asyncHandler){\r\n    return batchGetOnPremisesInstancesAsync(new BatchGetOnPremisesInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.deleteSchema",
	"Comment": "deletes a given schema. schemas in a development and published state can only be deleted.",
	"Method": "DeleteSchemaResult deleteSchema(DeleteSchemaRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteSchema(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonclouddirectoryasync using the current builder configuration.",
	"Method": "AmazonCloudDirectoryAsync build(AwsAsyncClientParams params){\r\n    return new AmazonCloudDirectoryAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getLogicalResourceId() != null)\r\n        sb.append(\"LogicalResourceId: \").append(getLogicalResourceId()).append(\",\");\r\n    if (getPhysicalResourceId() != null)\r\n        sb.append(\"PhysicalResourceId: \").append(getPhysicalResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.CreateScalingPlanRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlanName() != null)\r\n        sb.append(\"ScalingPlanName: \").append(getScalingPlanName()).append(\",\");\r\n    if (getApplicationSource() != null)\r\n        sb.append(\"ApplicationSource: \").append(getApplicationSource()).append(\",\");\r\n    if (getScalingInstructions() != null)\r\n        sb.append(\"ScalingInstructions: \").append(getScalingInstructions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.Build.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getCurrentPhase() != null)\r\n        sb.append(\"CurrentPhase: \").append(getCurrentPhase()).append(\",\");\r\n    if (getBuildStatus() != null)\r\n        sb.append(\"BuildStatus: \").append(getBuildStatus()).append(\",\");\r\n    if (getSourceVersion() != null)\r\n        sb.append(\"SourceVersion: \").append(getSourceVersion()).append(\",\");\r\n    if (getResolvedSourceVersion() != null)\r\n        sb.append(\"ResolvedSourceVersion: \").append(getResolvedSourceVersion()).append(\",\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getPhases() != null)\r\n        sb.append(\"Phases: \").append(getPhases()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getSecondarySources() != null)\r\n        sb.append(\"SecondarySources: \").append(getSecondarySources()).append(\",\");\r\n    if (getSecondarySourceVersions() != null)\r\n        sb.append(\"SecondarySourceVersions: \").append(getSecondarySourceVersions()).append(\",\");\r\n    if (getArtifacts() != null)\r\n        sb.append(\"Artifacts: \").append(getArtifacts()).append(\",\");\r\n    if (getSecondaryArtifacts() != null)\r\n        sb.append(\"SecondaryArtifacts: \").append(getSecondaryArtifacts()).append(\",\");\r\n    if (getCache() != null)\r\n        sb.append(\"Cache: \").append(getCache()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getLogs() != null)\r\n        sb.append(\"Logs: \").append(getLogs()).append(\",\");\r\n    if (getTimeoutInMinutes() != null)\r\n        sb.append(\"TimeoutInMinutes: \").append(getTimeoutInMinutes()).append(\",\");\r\n    if (getQueuedTimeoutInMinutes() != null)\r\n        sb.append(\"QueuedTimeoutInMinutes: \").append(getQueuedTimeoutInMinutes()).append(\",\");\r\n    if (getBuildComplete() != null)\r\n        sb.append(\"BuildComplete: \").append(getBuildComplete()).append(\",\");\r\n    if (getInitiator() != null)\r\n        sb.append(\"Initiator: \").append(getInitiator()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getNetworkInterface() != null)\r\n        sb.append(\"NetworkInterface: \").append(getNetworkInterface()).append(\",\");\r\n    if (getEncryptionKey() != null)\r\n        sb.append(\"EncryptionKey: \").append(getEncryptionKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.Subscriber.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionType() != null)\r\n        sb.append(\"SubscriptionType: \").append(getSubscriptionType()).append(\",\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetCommentsForComparedCommitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommentsForComparedCommitData() != null)\r\n        sb.append(\"CommentsForComparedCommitData: \").append(getCommentsForComparedCommitData()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DocumentSuggesterOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceField() != null)\r\n        sb.append(\"SourceField: \").append(getSourceField()).append(\",\");\r\n    if (getFuzzyMatching() != null)\r\n        sb.append(\"FuzzyMatching: \").append(getFuzzyMatching()).append(\",\");\r\n    if (getSortExpression() != null)\r\n        sb.append(\"SortExpression: \").append(getSortExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PostCommentReplyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.createHsm",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.creates an uninitialized hsm instance.there is an upfront fee charged for each hsm instance that you create with the createhsm operation.if you accidentally provision an hsm and want to request a refund, delete the instance using the deletehsmoperation, go to the aws support center, create a newcase, and select account and billing support.it can take up to 20 minutes to create and provision an hsm. you can monitor the status of the hsm with thedescribehsm operation. the hsm is ready to be initialized when the status changes to running.",
	"Method": "CreateHsmResult createHsm(CreateHsmRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateHsm(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListApplicationRevisionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3KeyPrefix() != null)\r\n        sb.append(\"S3KeyPrefix: \").append(getS3KeyPrefix()).append(\",\");\r\n    if (getDeployed() != null)\r\n        sb.append(\"Deployed: \").append(getDeployed()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DeleteSubscriberRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getNotification() != null)\r\n        sb.append(\"Notification: \").append(getNotification()).append(\",\");\r\n    if (getSubscriber() != null)\r\n        sb.append(\"Subscriber: \").append(getSubscriber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.Suggester.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuggesterName() != null)\r\n        sb.append(\"SuggesterName: \").append(getSuggesterName()).append(\",\");\r\n    if (getDocumentSuggesterOptions() != null)\r\n        sb.append(\"DocumentSuggesterOptions: \").append(getDocumentSuggesterOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.UntagProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.listStackInstances",
	"Comment": "returns summary information about stack instances that are associated with the specified stack set. you canfilter for stack instances that are associated with a specific aws account name or region.",
	"Method": "ListStackInstancesResult listStackInstances(ListStackInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListStackInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListOnPremisesInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceNames() != null)\r\n        sb.append(\"InstanceNames: \").append(getInstanceNames()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.BatchGetBuildsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuilds() != null)\r\n        sb.append(\"Builds: \").append(getBuilds()).append(\",\");\r\n    if (getBuildsNotFound() != null)\r\n        sb.append(\"BuildsNotFound: \").append(getBuildsNotFound());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.UpdateProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProject() != null)\r\n        sb.append(\"Project: \").append(getProject());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.CancelJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeleteStreamingDistributionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel()).append(\",\");\r\n    if (getDatapoints() != null)\r\n        sb.append(\"Datapoints: \").append(getDatapoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.GetTemplateSummaryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getTemplateURL() != null)\r\n        sb.append(\"TemplateURL: \").append(getTemplateURL()).append(\",\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.AWSCloudHSMV2Client.tagResource",
	"Comment": "adds or overwrites one or more tags for the specified aws cloudhsm cluster.",
	"Method": "TagResourceResult tagResource(TagResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTagResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.SchemaFacet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getFacetName() != null)\r\n        sb.append(\"FacetName: \").append(getFacetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListChangeSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSummaries() != null)\r\n        sb.append(\"Summaries: \").append(getSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.UpdateApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getNewApplicationName() != null)\r\n        sb.append(\"NewApplicationName: \").append(getNewApplicationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.CreateScalingPlanResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlanVersion() != null)\r\n        sb.append(\"ScalingPlanVersion: \").append(getScalingPlanVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.Change.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getResourceChange() != null)\r\n        sb.append(\"ResourceChange: \").append(getResourceChange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.FieldLevelEncryptionProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getFieldLevelEncryptionProfileConfig() != null)\r\n        sb.append(\"FieldLevelEncryptionProfileConfig: \").append(getFieldLevelEncryptionProfileConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackSetOperationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetOperation() != null)\r\n        sb.append(\"StackSetOperation: \").append(getStackSetOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.ListDashboardsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDashboardEntries() != null)\r\n        sb.append(\"DashboardEntries: \").append(getDashboardEntries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.ListUsersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getUserEmail() != null)\r\n        sb.append(\"UserEmail: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.estimateTemplateCost",
	"Comment": "returns the estimated monthly cost of a template. the return value is an aws simple monthly calculator url with aquery string that describes the resources required to run the template.",
	"Method": "EstimateTemplateCostResult estimateTemplateCost(EstimateTemplateCostRequest request,EstimateTemplateCostResult estimateTemplateCost){\r\n    return estimateTemplateCost(new EstimateTemplateCostRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.getAccountSettings",
	"Comment": "retrieves account settings for the specified amazon chime account id, such as remote control and dial outsettings. for more information about these settings, see use the policies page in the amazon chimeadministration guide.",
	"Method": "GetAccountSettingsResult getAccountSettings(GetAccountSettingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetAccountSettings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.getPipelineState",
	"Comment": "returns information about the state of a pipeline, including the stages and actions.",
	"Method": "GetPipelineStateResult getPipelineState(GetPipelineStateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetPipelineState(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.GetOpenIdTokenForDeveloperIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.GetUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMAsyncClient.listLunaClientsAsync",
	"Comment": "simplified method form for invoking the listlunaclients operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListLunaClientsResult> listLunaClientsAsync(ListLunaClientsRequest request,java.util.concurrent.Future<ListLunaClientsResult> listLunaClientsAsync,ListLunaClientsRequest request,com.amazonaws.handlers.AsyncHandler<ListLunaClientsRequest, ListLunaClientsResult> asyncHandler,java.util.concurrent.Future<ListLunaClientsResult> listLunaClientsAsync,java.util.concurrent.Future<ListLunaClientsResult> listLunaClientsAsync,com.amazonaws.handlers.AsyncHandler<ListLunaClientsRequest, ListLunaClientsResult> asyncHandler){\r\n    return listLunaClientsAsync(new ListLunaClientsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetCommentsForPullRequestResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommentsForPullRequestData() != null)\r\n        sb.append(\"CommentsForPullRequestData: \").append(getCommentsForPullRequestData()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.DescribePullRequestEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getPullRequestEventType() != null)\r\n        sb.append(\"PullRequestEventType: \").append(getPullRequestEventType()).append(\",\");\r\n    if (getActorArn() != null)\r\n        sb.append(\"ActorArn: \").append(getActorArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ArtifactLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getS3Location() != null)\r\n        sb.append(\"S3Location: \").append(getS3Location());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ParameterDeclaration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterKey() != null)\r\n        sb.append(\"ParameterKey: \").append(getParameterKey()).append(\",\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getParameterType() != null)\r\n        sb.append(\"ParameterType: \").append(getParameterType()).append(\",\");\r\n    if (getNoEcho() != null)\r\n        sb.append(\"NoEcho: \").append(getNoEcho()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getParameterConstraints() != null)\r\n        sb.append(\"ParameterConstraints: \").append(getParameterConstraints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.CreateChangeSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.WebhookAuthConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowedIPRange() != null)\r\n        sb.append(\"AllowedIPRange: \").append(getAllowedIPRange()).append(\",\");\r\n    if (getSecretToken() != null)\r\n        sb.append(\"SecretToken: \").append(getSecretToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.LookupPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DeleteStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DoubleArrayOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceFields() != null)\r\n        sb.append(\"SourceFields: \").append(getSourceFields()).append(\",\");\r\n    if (getFacetEnabled() != null)\r\n        sb.append(\"FacetEnabled: \").append(getFacetEnabled()).append(\",\");\r\n    if (getSearchEnabled() != null)\r\n        sb.append(\"SearchEnabled: \").append(getSearchEnabled()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DefineIndexFieldResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexField() != null)\r\n        sb.append(\"IndexField: \").append(getIndexField());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.InitializeClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateMessage() != null)\r\n        sb.append(\"StateMessage: \").append(getStateMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetBranchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBranch() != null)\r\n        sb.append(\"Branch: \").append(getBranch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetDeploymentTargetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentTarget() != null)\r\n        sb.append(\"DeploymentTarget: \").append(getDeploymentTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.ListResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.SuspendedProcess.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProcessName() != null)\r\n        sb.append(\"ProcessName: \").append(getProcessName()).append(\",\");\r\n    if (getSuspensionReason() != null)\r\n        sb.append(\"SuspensionReason: \").append(getSuspensionReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.NodePropertyOverride.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetNodes() != null)\r\n        sb.append(\"TargetNodes: \").append(getTargetNodes()).append(\",\");\r\n    if (getContainerOverrides() != null)\r\n        sb.append(\"ContainerOverrides: \").append(getContainerOverrides());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.EC2TagSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEc2TagSetList() != null)\r\n        sb.append(\"Ec2TagSetList: \").append(getEc2TagSetList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchDetachPolicyResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListObjectChildren.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.emitters.tasks.ModelClassGeneratorTasks.shouldGenerateSdkRequestConfigSetter",
	"Comment": "for api gateway request classes we override the sdkrequestconfig fluent setter to return the correct concrete request typefor better method chaining.",
	"Method": "boolean shouldGenerateSdkRequestConfigSetter(ShapeModel shape){\r\n    return model.getMetadata().getProtocol() == Protocol.API_GATEWAY && shape.getShapeType() == ShapeType.Request;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.CreateChangeSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getTemplateURL() != null)\r\n        sb.append(\"TemplateURL: \").append(getTemplateURL()).append(\",\");\r\n    if (getUsePreviousTemplate() != null)\r\n        sb.append(\"UsePreviousTemplate: \").append(getUsePreviousTemplate()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getResourceTypes() != null)\r\n        sb.append(\"ResourceTypes: \").append(getResourceTypes()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getRollbackConfiguration() != null)\r\n        sb.append(\"RollbackConfiguration: \").append(getRollbackConfiguration()).append(\",\");\r\n    if (getNotificationARNs() != null)\r\n        sb.append(\"NotificationARNs: \").append(getNotificationARNs()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getChangeSetName() != null)\r\n        sb.append(\"ChangeSetName: \").append(getChangeSetName()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getChangeSetType() != null)\r\n        sb.append(\"ChangeSetType: \").append(getChangeSetType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchAttachTypedLinkResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTypedLinkSpecifier() != null)\r\n        sb.append(\"TypedLinkSpecifier: \").append(getTypedLinkSpecifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetFileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getCommitSpecifier() != null)\r\n        sb.append(\"CommitSpecifier: \").append(getCommitSpecifier()).append(\",\");\r\n    if (getFilePath() != null)\r\n        sb.append(\"FilePath: \").append(getFilePath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.NodeDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodeIndex() != null)\r\n        sb.append(\"NodeIndex: \").append(getNodeIndex()).append(\",\");\r\n    if (getIsMainNode() != null)\r\n        sb.append(\"IsMainNode: \").append(getIsMainNode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.MergeDeveloperIdentitiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceUserIdentifier() != null)\r\n        sb.append(\"SourceUserIdentifier: \").append(getSourceUserIdentifier()).append(\",\");\r\n    if (getDestinationUserIdentifier() != null)\r\n        sb.append(\"DestinationUserIdentifier: \").append(getDestinationUserIdentifier()).append(\",\");\r\n    if (getDeveloperProviderName() != null)\r\n        sb.append(\"DeveloperProviderName: \").append(getDeveloperProviderName()).append(\",\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.createTypedLinkFacet",
	"Comment": "creates a typedlinkfacet. for more information, see typed links.",
	"Method": "CreateTypedLinkFacetResult createTypedLinkFacet(CreateTypedLinkFacetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateTypedLinkFacet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeDomainsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainNames() != null)\r\n        sb.append(\"DomainNames: \").append(getDomainNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.TimeRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getEnd() != null)\r\n        sb.append(\"End: \").append(getEnd());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DefaultCacheBehavior.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetOriginId() != null)\r\n        sb.append(\"TargetOriginId: \").append(getTargetOriginId()).append(\",\");\r\n    if (getForwardedValues() != null)\r\n        sb.append(\"ForwardedValues: \").append(getForwardedValues()).append(\",\");\r\n    if (getTrustedSigners() != null)\r\n        sb.append(\"TrustedSigners: \").append(getTrustedSigners()).append(\",\");\r\n    if (getViewerProtocolPolicy() != null)\r\n        sb.append(\"ViewerProtocolPolicy: \").append(getViewerProtocolPolicy()).append(\",\");\r\n    if (getMinTTL() != null)\r\n        sb.append(\"MinTTL: \").append(getMinTTL()).append(\",\");\r\n    if (getAllowedMethods() != null)\r\n        sb.append(\"AllowedMethods: \").append(getAllowedMethods()).append(\",\");\r\n    if (getSmoothStreaming() != null)\r\n        sb.append(\"SmoothStreaming: \").append(getSmoothStreaming()).append(\",\");\r\n    if (getDefaultTTL() != null)\r\n        sb.append(\"DefaultTTL: \").append(getDefaultTTL()).append(\",\");\r\n    if (getMaxTTL() != null)\r\n        sb.append(\"MaxTTL: \").append(getMaxTTL()).append(\",\");\r\n    if (getCompress() != null)\r\n        sb.append(\"Compress: \").append(getCompress()).append(\",\");\r\n    if (getLambdaFunctionAssociations() != null)\r\n        sb.append(\"LambdaFunctionAssociations: \").append(getLambdaFunctionAssociations()).append(\",\");\r\n    if (getFieldLevelEncryptionId() != null)\r\n        sb.append(\"FieldLevelEncryptionId: \").append(getFieldLevelEncryptionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.listPullRequests",
	"Comment": "returns a list of pull requests for a specified repository. the return list can be refined by pull request statusor pull request author arn.",
	"Method": "ListPullRequestsResult listPullRequests(ListPullRequestsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListPullRequests(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListFieldLevelEncryptionConfigsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionList() != null)\r\n        sb.append(\"FieldLevelEncryptionList: \").append(getFieldLevelEncryptionList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DeleteSubscriberResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackDriftDetectionStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getStackDriftDetectionId() != null)\r\n        sb.append(\"StackDriftDetectionId: \").append(getStackDriftDetectionId()).append(\",\");\r\n    if (getStackDriftStatus() != null)\r\n        sb.append(\"StackDriftStatus: \").append(getStackDriftStatus()).append(\",\");\r\n    if (getDetectionStatus() != null)\r\n        sb.append(\"DetectionStatus: \").append(getDetectionStatus()).append(\",\");\r\n    if (getDetectionStatusReason() != null)\r\n        sb.append(\"DetectionStatusReason: \").append(getDetectionStatusReason()).append(\",\");\r\n    if (getDriftedStackResourceCount() != null)\r\n        sb.append(\"DriftedStackResourceCount: \").append(getDriftedStackResourceCount()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.Cluster.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupPolicy() != null)\r\n        sb.append(\"BackupPolicy: \").append(getBackupPolicy()).append(\",\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getCreateTimestamp() != null)\r\n        sb.append(\"CreateTimestamp: \").append(getCreateTimestamp()).append(\",\");\r\n    if (getHsms() != null)\r\n        sb.append(\"Hsms: \").append(getHsms()).append(\",\");\r\n    if (getHsmType() != null)\r\n        sb.append(\"HsmType: \").append(getHsmType()).append(\",\");\r\n    if (getPreCoPassword() != null)\r\n        sb.append(\"PreCoPassword: \").append(getPreCoPassword()).append(\",\");\r\n    if (getSecurityGroup() != null)\r\n        sb.append(\"SecurityGroup: \").append(getSecurityGroup()).append(\",\");\r\n    if (getSourceBackupId() != null)\r\n        sb.append(\"SourceBackupId: \").append(getSourceBackupId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateMessage() != null)\r\n        sb.append(\"StateMessage: \").append(getStateMessage()).append(\",\");\r\n    if (getSubnetMapping() != null)\r\n        sb.append(\"SubnetMapping: \").append(getSubnetMapping()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.AddOperations.getHttpStatusCode",
	"Comment": "get http status code either from error trait on the operation reference or the error trait on the shape.",
	"Method": "Integer getHttpStatusCode(ErrorMap error,Shape shape,Integer getHttpStatusCode,ErrorTrait errorTrait){\r\n    return errorTrait == null ? null : errorTrait.getHttpStatusCode();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.deleteLunaClient",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.deletes a client.",
	"Method": "DeleteLunaClientResult deleteLunaClient(DeleteLunaClientRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLunaClient(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListDeploymentGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttachPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getPolicyReference() != null)\r\n        sb.append(\"PolicyReference: \").append(getPolicyReference()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.CopyBackupToRegionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationRegion() != null)\r\n        sb.append(\"DestinationRegion: \").append(getDestinationRegion()).append(\",\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.DeleteRepositoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStackSetOperationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.CreateClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.LogsConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudWatchLogs() != null)\r\n        sb.append(\"CloudWatchLogs: \").append(getCloudWatchLogs()).append(\",\");\r\n    if (getS3Logs() != null)\r\n        sb.append(\"S3Logs: \").append(getS3Logs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.CreateLunaClientRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel()).append(\",\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.publishSchema",
	"Comment": "publishes a development schema with a major version and a recommended minor version.",
	"Method": "PublishSchemaResult publishSchema(PublishSchemaRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePublishSchema(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.Datapoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.UpdateEnvironmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.GetJobDetailsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobDetails() != null)\r\n        sb.append(\"JobDetails: \").append(getJobDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.Comment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommentId() != null)\r\n        sb.append(\"CommentId: \").append(getCommentId()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getInReplyTo() != null)\r\n        sb.append(\"InReplyTo: \").append(getInReplyTo()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getAuthorArn() != null)\r\n        sb.append(\"AuthorArn: \").append(getAuthorArn()).append(\",\");\r\n    if (getDeleted() != null)\r\n        sb.append(\"Deleted: \").append(getDeleted()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeregisterOnPremisesInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStackSetOperationResultsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSummaries() != null)\r\n        sb.append(\"Summaries: \").append(getSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.NodeRangeProperty.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetNodes() != null)\r\n        sb.append(\"TargetNodes: \").append(getTargetNodes()).append(\",\");\r\n    if (getContainer() != null)\r\n        sb.append(\"Container: \").append(getContainer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CustomOriginConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHTTPPort() != null)\r\n        sb.append(\"HTTPPort: \").append(getHTTPPort()).append(\",\");\r\n    if (getHTTPSPort() != null)\r\n        sb.append(\"HTTPSPort: \").append(getHTTPSPort()).append(\",\");\r\n    if (getOriginProtocolPolicy() != null)\r\n        sb.append(\"OriginProtocolPolicy: \").append(getOriginProtocolPolicy()).append(\",\");\r\n    if (getOriginSslProtocols() != null)\r\n        sb.append(\"OriginSslProtocols: \").append(getOriginSslProtocols()).append(\",\");\r\n    if (getOriginReadTimeout() != null)\r\n        sb.append(\"OriginReadTimeout: \").append(getOriginReadTimeout()).append(\",\");\r\n    if (getOriginKeepaliveTimeout() != null)\r\n        sb.append(\"OriginKeepaliveTimeout: \").append(getOriginKeepaliveTimeout());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.AWSAutoScalingPlansClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.GetPipelineStateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.UpdateServiceAccessPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessPolicies() != null)\r\n        sb.append(\"AccessPolicies: \").append(getAccessPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PipelineContext.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getStage() != null)\r\n        sb.append(\"Stage: \").append(getStage()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.MappingRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClaim() != null)\r\n        sb.append(\"Claim: \").append(getClaim()).append(\",\");\r\n    if (getMatchType() != null)\r\n        sb.append(\"MatchType: \").append(getMatchType()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.listStackSetOperations",
	"Comment": "returns summary information about operations performed on a stack set.",
	"Method": "ListStackSetOperationsResult listStackSetOperations(ListStackSetOperationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListStackSetOperations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackResourceSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogicalResourceId() != null)\r\n        sb.append(\"LogicalResourceId: \").append(getLogicalResourceId()).append(\",\");\r\n    if (getPhysicalResourceId() != null)\r\n        sb.append(\"PhysicalResourceId: \").append(getPhysicalResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getResourceStatus() != null)\r\n        sb.append(\"ResourceStatus: \").append(getResourceStatus()).append(\",\");\r\n    if (getResourceStatusReason() != null)\r\n        sb.append(\"ResourceStatusReason: \").append(getResourceStatusReason()).append(\",\");\r\n    if (getDriftInformation() != null)\r\n        sb.append(\"DriftInformation: \").append(getDriftInformation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.TestRepositoryTriggersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccessfulExecutions() != null)\r\n        sb.append(\"SuccessfulExecutions: \").append(getSuccessfulExecutions()).append(\",\");\r\n    if (getFailedExecutions() != null)\r\n        sb.append(\"FailedExecutions: \").append(getFailedExecutions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.DeleteRepositoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryId() != null)\r\n        sb.append(\"RepositoryId: \").append(getRepositoryId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AddFacetToObjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getSchemaFacet() != null)\r\n        sb.append(\"SchemaFacet: \").append(getSchemaFacet()).append(\",\");\r\n    if (getObjectAttributeList() != null)\r\n        sb.append(\"ObjectAttributeList: \").append(getObjectAttributeList()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpgradeAppliedSchemaResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUpgradedSchemaArn() != null)\r\n        sb.append(\"UpgradedSchemaArn: \").append(getUpgradedSchemaArn()).append(\",\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DeleteObjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.UpdateJobQueueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobQueue() != null)\r\n        sb.append(\"JobQueue: \").append(getJobQueue()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getComputeEnvironmentOrder() != null)\r\n        sb.append(\"ComputeEnvironmentOrder: \").append(getComputeEnvironmentOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.UpdateAccountSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getAccountSettings() != null)\r\n        sb.append(\"AccountSettings: \").append(getAccountSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.AWSSessionCredentials.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId()).append(\",\");\r\n    if (getSecretAccessKey() != null)\r\n        sb.append(\"SecretAccessKey: \").append(getSecretAccessKey()).append(\",\");\r\n    if (getSessionToken() != null)\r\n        sb.append(\"SessionToken: \").append(getSessionToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.describeIndexFields",
	"Comment": "gets information about the index fields configured for the search domain. can be limited to specific fields byname. by default, shows all fields and includes any pending changes to the configuration. set thedeployed option to true to show the active configuration and exclude pending changes.for more information, see getting domain information in the amazon cloudsearch developer guide.",
	"Method": "DescribeIndexFieldsResult describeIndexFields(DescribeIndexFieldsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeIndexFields(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.StartPipelineExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ViewerCertificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudFrontDefaultCertificate() != null)\r\n        sb.append(\"CloudFrontDefaultCertificate: \").append(getCloudFrontDefaultCertificate()).append(\",\");\r\n    if (getIAMCertificateId() != null)\r\n        sb.append(\"IAMCertificateId: \").append(getIAMCertificateId()).append(\",\");\r\n    if (getACMCertificateArn() != null)\r\n        sb.append(\"ACMCertificateArn: \").append(getACMCertificateArn()).append(\",\");\r\n    if (getSSLSupportMethod() != null)\r\n        sb.append(\"SSLSupportMethod: \").append(getSSLSupportMethod()).append(\",\");\r\n    if (getMinimumProtocolVersion() != null)\r\n        sb.append(\"MinimumProtocolVersion: \").append(getMinimumProtocolVersion()).append(\",\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate()).append(\",\");\r\n    if (getCertificateSource() != null)\r\n        sb.append(\"CertificateSource: \").append(getCertificateSource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.OnPremisesTagSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOnPremisesTagSetList() != null)\r\n        sb.append(\"OnPremisesTagSetList: \").append(getOnPremisesTagSetList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.StartBuildResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuild() != null)\r\n        sb.append(\"Build: \").append(getBuild());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetPublicKeyConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKeyConfig() != null)\r\n        sb.append(\"PublicKeyConfig: \").append(getPublicKeyConfig()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.AcknowledgeThirdPartyJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.createCustomActionType",
	"Comment": "creates a new custom action that can be used in all pipelines associated with the aws account. only used forcustom actions.",
	"Method": "CreateCustomActionTypeResult createCustomActionType(CreateCustomActionTypeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateCustomActionType(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetFieldLevelEncryptionProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ActionTypeSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThirdPartyConfigurationUrl() != null)\r\n        sb.append(\"ThirdPartyConfigurationUrl: \").append(getThirdPartyConfigurationUrl()).append(\",\");\r\n    if (getEntityUrlTemplate() != null)\r\n        sb.append(\"EntityUrlTemplate: \").append(getEntityUrlTemplate()).append(\",\");\r\n    if (getExecutionUrlTemplate() != null)\r\n        sb.append(\"ExecutionUrlTemplate: \").append(getExecutionUrlTemplate()).append(\",\");\r\n    if (getRevisionUrlTemplate() != null)\r\n        sb.append(\"RevisionUrlTemplate: \").append(getRevisionUrlTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListDeploymentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDeploymentGroupName() != null)\r\n        sb.append(\"DeploymentGroupName: \").append(getDeploymentGroupName()).append(\",\");\r\n    if (getIncludeOnlyStatuses() != null)\r\n        sb.append(\"IncludeOnlyStatuses: \").append(getIncludeOnlyStatuses()).append(\",\");\r\n    if (getCreateTimeRange() != null)\r\n        sb.append(\"CreateTimeRange: \").append(getCreateTimeRange()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.StepAdjustment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricIntervalLowerBound() != null)\r\n        sb.append(\"MetricIntervalLowerBound: \").append(getMetricIntervalLowerBound()).append(\",\");\r\n    if (getMetricIntervalUpperBound() != null)\r\n        sb.append(\"MetricIntervalUpperBound: \").append(getMetricIntervalUpperBound()).append(\",\");\r\n    if (getScalingAdjustment() != null)\r\n        sb.append(\"ScalingAdjustment: \").append(getScalingAdjustment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClient.listProjects",
	"Comment": "gets a list of build project names, with each build project name representing a single build project.",
	"Method": "ListProjectsResult listProjects(ListProjectsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListProjects(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListObjectParentsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParentLinks() != null)\r\n        sb.append(\"ParentLinks: \").append(getParentLinks()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.RepositoryMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getRepositoryId() != null)\r\n        sb.append(\"RepositoryId: \").append(getRepositoryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getRepositoryDescription() != null)\r\n        sb.append(\"RepositoryDescription: \").append(getRepositoryDescription()).append(\",\");\r\n    if (getDefaultBranch() != null)\r\n        sb.append(\"DefaultBranch: \").append(getDefaultBranch()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getCloneUrlHttp() != null)\r\n        sb.append(\"CloneUrlHttp: \").append(getCloneUrlHttp()).append(\",\");\r\n    if (getCloneUrlSsh() != null)\r\n        sb.append(\"CloneUrlSsh: \").append(getCloneUrlSsh()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.AWSAutoScalingPlansClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsautoscalingplans using the current builder configuration.",
	"Method": "AWSAutoScalingPlans build(AwsSyncClientParams params){\r\n    return new AWSAutoScalingPlansClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchAttachPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyReference() != null)\r\n        sb.append(\"PolicyReference: \").append(getPolicyReference()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazoncodedeployasync using the current builder configuration.",
	"Method": "AmazonCodeDeployAsync build(AwsAsyncClientParams params){\r\n    return new AmazonCodeDeployAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.MergePullRequestByFastForwardRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getSourceCommitId() != null)\r\n        sb.append(\"SourceCommitId: \").append(getSourceCommitId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ComputeEnvironmentDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComputeEnvironmentName() != null)\r\n        sb.append(\"ComputeEnvironmentName: \").append(getComputeEnvironmentName()).append(\",\");\r\n    if (getComputeEnvironmentArn() != null)\r\n        sb.append(\"ComputeEnvironmentArn: \").append(getComputeEnvironmentArn()).append(\",\");\r\n    if (getEcsClusterArn() != null)\r\n        sb.append(\"EcsClusterArn: \").append(getEcsClusterArn()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason()).append(\",\");\r\n    if (getComputeResources() != null)\r\n        sb.append(\"ComputeResources: \").append(getComputeResources()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.BlockingRequestBuilder.filterOSMetrics",
	"Comment": "return a collection of metrics almost the same as the input except withall os metrics removed.",
	"Method": "Collection<MetricDatum> filterOSMetrics(Collection<MetricDatum> data){\r\n    Collection<MetricDatum> output = new ArrayList<MetricDatum>(data.size());\r\n    for (MetricDatum datum : data) {\r\n        if (!OS_METRIC_NAME.equals(datum.getMetricName()))\r\n            output.add(datum);\r\n    }\r\n    return output;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9ClientBuilder.build",
	"Comment": "construct a synchronous implementation of awscloud9 using the current builder configuration.",
	"Method": "AWSCloud9 build(AwsSyncClientParams params){\r\n    return new AWSCloud9Client(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeploymentConfigInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentConfigId() != null)\r\n        sb.append(\"DeploymentConfigId: \").append(getDeploymentConfigId()).append(\",\");\r\n    if (getDeploymentConfigName() != null)\r\n        sb.append(\"DeploymentConfigName: \").append(getDeploymentConfigName()).append(\",\");\r\n    if (getMinimumHealthyHosts() != null)\r\n        sb.append(\"MinimumHealthyHosts: \").append(getMinimumHealthyHosts()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getComputePlatform() != null)\r\n        sb.append(\"ComputePlatform: \").append(getComputePlatform()).append(\",\");\r\n    if (getTrafficRoutingConfig() != null)\r\n        sb.append(\"TrafficRoutingConfig: \").append(getTrafficRoutingConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.CreateUserProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getLastModifiedTimestamp() != null)\r\n        sb.append(\"LastModifiedTimestamp: \").append(getLastModifiedTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ApplicationInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getLinkedToGitHub() != null)\r\n        sb.append(\"LinkedToGitHub: \").append(getLinkedToGitHub()).append(\",\");\r\n    if (getGitHubAccountName() != null)\r\n        sb.append(\"GitHubAccountName: \").append(getGitHubAccountName()).append(\",\");\r\n    if (getComputePlatform() != null)\r\n        sb.append(\"ComputePlatform: \").append(getComputePlatform());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.GetMetricDataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricDataResults() != null)\r\n        sb.append(\"MetricDataResults: \").append(getMetricDataResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazoncloudfrontasync using the current builder configuration.",
	"Method": "AmazonCloudFrontAsync build(AwsAsyncClientParams params){\r\n    return new AmazonCloudFrontAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.waiters.AmazonCodeDeployWaiters.deploymentSuccessful",
	"Comment": "builds a deploymentsuccessful waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<GetDeploymentRequest> deploymentSuccessful(){\r\n    return new WaiterBuilder<GetDeploymentRequest, GetDeploymentResult>().withSdkFunction(new GetDeploymentFunction(client)).withAcceptors(new DeploymentSuccessful.IsSucceededMatcher(), new DeploymentSuccessful.IsFailedMatcher(), new DeploymentSuccessful.IsStoppedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(120), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ListProjectsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.CreateUserProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9AsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awscloud9async using the current builder configuration.",
	"Method": "AWSCloud9Async build(AwsAsyncClientParams params){\r\n    return new AWSCloud9AsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazoncloudwatchasync using the current builder configuration.",
	"Method": "AmazonCloudWatchAsync build(AwsAsyncClientParams params){\r\n    return new AmazonCloudWatchAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.UpdateServiceAccessPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getAccessPolicies() != null)\r\n        sb.append(\"AccessPolicies: \").append(getAccessPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.DescribeScalingPlansResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlans() != null)\r\n        sb.append(\"ScalingPlans: \").append(getScalingPlans()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateStreamingDistributionWithTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamingDistributionConfigWithTags() != null)\r\n        sb.append(\"StreamingDistributionConfigWithTags: \").append(getStreamingDistributionConfigWithTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.attachTypedLink",
	"Comment": "attaches a typed link to a specified source and target object. for more information, see typed links.",
	"Method": "AttachTypedLinkResult attachTypedLink(AttachTypedLinkRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAttachTypedLink(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetPullRequestResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequest() != null)\r\n        sb.append(\"PullRequest: \").append(getPullRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DateArrayOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceFields() != null)\r\n        sb.append(\"SourceFields: \").append(getSourceFields()).append(\",\");\r\n    if (getFacetEnabled() != null)\r\n        sb.append(\"FacetEnabled: \").append(getFacetEnabled()).append(\",\");\r\n    if (getSearchEnabled() != null)\r\n        sb.append(\"SearchEnabled: \").append(getSearchEnabled()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.InstanceSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getLifecycleEvents() != null)\r\n        sb.append(\"LifecycleEvents: \").append(getLifecycleEvents()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.OriginGroupMembers.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListStackSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.MergePullRequestByFastForwardResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequest() != null)\r\n        sb.append(\"PullRequest: \").append(getPullRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.RestoreBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackup() != null)\r\n        sb.append(\"Backup: \").append(getBackup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.FieldLevelEncryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getFieldLevelEncryptionConfig() != null)\r\n        sb.append(\"FieldLevelEncryptionConfig: \").append(getFieldLevelEncryptionConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.AssociateTeamMemberRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getProjectRole() != null)\r\n        sb.append(\"ProjectRole: \").append(getProjectRole()).append(\",\");\r\n    if (getRemoteAccessAllowed() != null)\r\n        sb.append(\"RemoteAccessAllowed: \").append(getRemoteAccessAllowed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.DeleteAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClient.getDashboard",
	"Comment": "displays the details of the dashboard that you specify.to copy an existing dashboard, use getdashboard, and then use the data returned withindashboardbody as the template for the new dashboard when you call putdashboard tocreate the copy.",
	"Method": "GetDashboardResult getDashboard(GetDashboardRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDashboard(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.CreateProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getSourceCode() != null)\r\n        sb.append(\"SourceCode: \").append(getSourceCode()).append(\",\");\r\n    if (getToolchain() != null)\r\n        sb.append(\"Toolchain: \").append(getToolchain()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.describeIdentity",
	"Comment": "returns metadata related to the given identity, including when the identity was created and any associated linkedlogins.you must use aws developer credentials to call this api.",
	"Method": "DescribeIdentityResult describeIdentity(DescribeIdentityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeIdentity(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.FieldLevelEncryptionList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.SourceCredentialsInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getServerType() != null)\r\n        sb.append(\"ServerType: \").append(getServerType()).append(\",\");\r\n    if (getAuthType() != null)\r\n        sb.append(\"AuthType: \").append(getAuthType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ListAvailableZonesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAZList() != null)\r\n        sb.append(\"AZList: \").append(getAZList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.GetTrailStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.DeleteSourceCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetFieldLevelEncryptionConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionConfig() != null)\r\n        sb.append(\"FieldLevelEncryptionConfig: \").append(getFieldLevelEncryptionConfig()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListObjectPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.PutEventSelectorsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrailName() != null)\r\n        sb.append(\"TrailName: \").append(getTrailName()).append(\",\");\r\n    if (getEventSelectors() != null)\r\n        sb.append(\"EventSelectors: \").append(getEventSelectors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PollForJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionTypeId() != null)\r\n        sb.append(\"ActionTypeId: \").append(getActionTypeId()).append(\",\");\r\n    if (getMaxBatchSize() != null)\r\n        sb.append(\"MaxBatchSize: \").append(getMaxBatchSize()).append(\",\");\r\n    if (getQueryParam() != null)\r\n        sb.append(\"QueryParam: \").append(getQueryParam());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.RemoveFacetFromObjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getSchemaFacet() != null)\r\n        sb.append(\"SchemaFacet: \").append(getSchemaFacet()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.TypedAttributeValueRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartMode() != null)\r\n        sb.append(\"StartMode: \").append(getStartMode()).append(\",\");\r\n    if (getStartValue() != null)\r\n        sb.append(\"StartValue: \").append(getStartValue()).append(\",\");\r\n    if (getEndMode() != null)\r\n        sb.append(\"EndMode: \").append(getEndMode()).append(\",\");\r\n    if (getEndValue() != null)\r\n        sb.append(\"EndValue: \").append(getEndValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.AnalysisOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSynonyms() != null)\r\n        sb.append(\"Synonyms: \").append(getSynonyms()).append(\",\");\r\n    if (getStopwords() != null)\r\n        sb.append(\"Stopwords: \").append(getStopwords()).append(\",\");\r\n    if (getStemmingDictionary() != null)\r\n        sb.append(\"StemmingDictionary: \").append(getStemmingDictionary()).append(\",\");\r\n    if (getJapaneseTokenizationDictionary() != null)\r\n        sb.append(\"JapaneseTokenizationDictionary: \").append(getJapaneseTokenizationDictionary()).append(\",\");\r\n    if (getAlgorithmicStemming() != null)\r\n        sb.append(\"AlgorithmicStemming: \").append(getAlgorithmicStemming());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.PutLifecycleEventHookExecutionStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLifecycleEventHookExecutionId() != null)\r\n        sb.append(\"LifecycleEventHookExecutionId: \").append(getLifecycleEventHookExecutionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ProjectSourceVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier()).append(\",\");\r\n    if (getSourceVersion() != null)\r\n        sb.append(\"SourceVersion: \").append(getSourceVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarClient.listUserProfiles",
	"Comment": "lists all the user profiles configured for your aws account in aws codestar.",
	"Method": "ListUserProfilesResult listUserProfiles(ListUserProfilesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListUserProfiles(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.putFile",
	"Comment": "adds or updates a file in a branch in an aws codecommit repository, and generates a commit for the addition inthe specified branch.",
	"Method": "PutFileResult putFile(PutFileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutFile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackSetOperationResultSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccount() != null)\r\n        sb.append(\"Account: \").append(getAccount()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason()).append(\",\");\r\n    if (getAccountGateResult() != null)\r\n        sb.append(\"AccountGateResult: \").append(getAccountGateResult());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.describeLunaClient",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.retrieves information about an hsm client.",
	"Method": "DescribeLunaClientResult describeLunaClient(DescribeLunaClientRequest request,DescribeLunaClientResult describeLunaClient){\r\n    return describeLunaClient(new DescribeLunaClientRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.StreamingLoggingConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.Project.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getSecondarySources() != null)\r\n        sb.append(\"SecondarySources: \").append(getSecondarySources()).append(\",\");\r\n    if (getArtifacts() != null)\r\n        sb.append(\"Artifacts: \").append(getArtifacts()).append(\",\");\r\n    if (getSecondaryArtifacts() != null)\r\n        sb.append(\"SecondaryArtifacts: \").append(getSecondaryArtifacts()).append(\",\");\r\n    if (getCache() != null)\r\n        sb.append(\"Cache: \").append(getCache()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getTimeoutInMinutes() != null)\r\n        sb.append(\"TimeoutInMinutes: \").append(getTimeoutInMinutes()).append(\",\");\r\n    if (getQueuedTimeoutInMinutes() != null)\r\n        sb.append(\"QueuedTimeoutInMinutes: \").append(getQueuedTimeoutInMinutes()).append(\",\");\r\n    if (getEncryptionKey() != null)\r\n        sb.append(\"EncryptionKey: \").append(getEncryptionKey()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getWebhook() != null)\r\n        sb.append(\"Webhook: \").append(getWebhook()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getBadge() != null)\r\n        sb.append(\"Badge: \").append(getBadge()).append(\",\");\r\n    if (getLogsConfig() != null)\r\n        sb.append(\"LogsConfig: \").append(getLogsConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.IdentityDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId()).append(\",\");\r\n    if (getLogins() != null)\r\n        sb.append(\"Logins: \").append(getLogins()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DescribeBackupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getSortAscending() != null)\r\n        sb.append(\"SortAscending: \").append(getSortAscending());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchAddFacetToObject.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaFacet() != null)\r\n        sb.append(\"SchemaFacet: \").append(getSchemaFacet()).append(\",\");\r\n    if (getObjectAttributeList() != null)\r\n        sb.append(\"ObjectAttributeList: \").append(getObjectAttributeList()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.AWSCloudHSMV2Client.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.FailureDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getExternalExecutionId() != null)\r\n        sb.append(\"ExternalExecutionId: \").append(getExternalExecutionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.JobSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getStoppedAt() != null)\r\n        sb.append(\"StoppedAt: \").append(getStoppedAt()).append(\",\");\r\n    if (getContainer() != null)\r\n        sb.append(\"Container: \").append(getContainer()).append(\",\");\r\n    if (getArrayProperties() != null)\r\n        sb.append(\"ArrayProperties: \").append(getArrayProperties()).append(\",\");\r\n    if (getNodeProperties() != null)\r\n        sb.append(\"NodeProperties: \").append(getNodeProperties());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AbstractAmazonCodeDeployAsync.listDeploymentConfigsAsync",
	"Comment": "simplified method form for invoking the listdeploymentconfigs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListDeploymentConfigsResult> listDeploymentConfigsAsync(ListDeploymentConfigsRequest request,java.util.concurrent.Future<ListDeploymentConfigsResult> listDeploymentConfigsAsync,ListDeploymentConfigsRequest request,com.amazonaws.handlers.AsyncHandler<ListDeploymentConfigsRequest, ListDeploymentConfigsResult> asyncHandler,java.util.concurrent.Future<ListDeploymentConfigsResult> listDeploymentConfigsAsync,java.util.concurrent.Future<ListDeploymentConfigsResult> listDeploymentConfigsAsync,com.amazonaws.handlers.AsyncHandler<ListDeploymentConfigsRequest, ListDeploymentConfigsResult> asyncHandler){\r\n    return listDeploymentConfigsAsync(new ListDeploymentConfigsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.waiters.AmazonCloudFormationWaiters.stackUpdateComplete",
	"Comment": "builds a stackupdatecomplete waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeStacksRequest> stackUpdateComplete(){\r\n    return new WaiterBuilder<DescribeStacksRequest, DescribeStacksResult>().withSdkFunction(new DescribeStacksFunction(client)).withAcceptors(new StackUpdateComplete.IsUPDATE_COMPLETEMatcher(), new StackUpdateComplete.IsUPDATE_FAILEDMatcher(), new StackUpdateComplete.IsUPDATE_ROLLBACK_FAILEDMatcher(), new StackUpdateComplete.IsUPDATE_ROLLBACK_COMPLETEMatcher(), new StackUpdateComplete.IsValidationErrorMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(120), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.TypedLinkAttributeRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getRange() != null)\r\n        sb.append(\"Range: \").append(getRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DescribeHsmResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmArn() != null)\r\n        sb.append(\"HsmArn: \").append(getHsmArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusDetails() != null)\r\n        sb.append(\"StatusDetails: \").append(getStatusDetails()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getEniId() != null)\r\n        sb.append(\"EniId: \").append(getEniId()).append(\",\");\r\n    if (getEniIp() != null)\r\n        sb.append(\"EniIp: \").append(getEniIp()).append(\",\");\r\n    if (getSubscriptionType() != null)\r\n        sb.append(\"SubscriptionType: \").append(getSubscriptionType()).append(\",\");\r\n    if (getSubscriptionStartDate() != null)\r\n        sb.append(\"SubscriptionStartDate: \").append(getSubscriptionStartDate()).append(\",\");\r\n    if (getSubscriptionEndDate() != null)\r\n        sb.append(\"SubscriptionEndDate: \").append(getSubscriptionEndDate()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getIamRoleArn() != null)\r\n        sb.append(\"IamRoleArn: \").append(getIamRoleArn()).append(\",\");\r\n    if (getSerialNumber() != null)\r\n        sb.append(\"SerialNumber: \").append(getSerialNumber()).append(\",\");\r\n    if (getVendorName() != null)\r\n        sb.append(\"VendorName: \").append(getVendorName()).append(\",\");\r\n    if (getHsmType() != null)\r\n        sb.append(\"HsmType: \").append(getHsmType()).append(\",\");\r\n    if (getSoftwareVersion() != null)\r\n        sb.append(\"SoftwareVersion: \").append(getSoftwareVersion()).append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey()).append(\",\");\r\n    if (getSshKeyLastUpdated() != null)\r\n        sb.append(\"SshKeyLastUpdated: \").append(getSshKeyLastUpdated()).append(\",\");\r\n    if (getServerCertUri() != null)\r\n        sb.append(\"ServerCertUri: \").append(getServerCertUri()).append(\",\");\r\n    if (getServerCertLastUpdated() != null)\r\n        sb.append(\"ServerCertLastUpdated: \").append(getServerCertLastUpdated()).append(\",\");\r\n    if (getPartitions() != null)\r\n        sb.append(\"Partitions: \").append(getPartitions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.EstimateTemplateCostResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DeleteFacetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.getPullRequest",
	"Comment": "gets information about a pull request in a specified repository.",
	"Method": "GetPullRequestResult getPullRequest(GetPullRequestRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetPullRequest(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PutFileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBranchName() != null)\r\n        sb.append(\"BranchName: \").append(getBranchName()).append(\",\");\r\n    if (getFileContent() != null)\r\n        sb.append(\"FileContent: \").append(getFileContent()).append(\",\");\r\n    if (getFilePath() != null)\r\n        sb.append(\"FilePath: \").append(getFilePath()).append(\",\");\r\n    if (getFileMode() != null)\r\n        sb.append(\"FileMode: \").append(getFileMode()).append(\",\");\r\n    if (getParentCommitId() != null)\r\n        sb.append(\"ParentCommitId: \").append(getParentCommitId()).append(\",\");\r\n    if (getCommitMessage() != null)\r\n        sb.append(\"CommitMessage: \").append(getCommitMessage()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ECSService.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getClusterName() != null)\r\n        sb.append(\"ClusterName: \").append(getClusterName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTagKeyList() != null)\r\n        sb.append(\"TagKeyList: \").append(getTagKeyList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetBlobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DeleteDirectoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttributeKeyAndValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.ScalingPlan.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlanName() != null)\r\n        sb.append(\"ScalingPlanName: \").append(getScalingPlanName()).append(\",\");\r\n    if (getScalingPlanVersion() != null)\r\n        sb.append(\"ScalingPlanVersion: \").append(getScalingPlanVersion()).append(\",\");\r\n    if (getApplicationSource() != null)\r\n        sb.append(\"ApplicationSource: \").append(getApplicationSource()).append(\",\");\r\n    if (getScalingInstructions() != null)\r\n        sb.append(\"ScalingInstructions: \").append(getScalingInstructions()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getStatusStartTime() != null)\r\n        sb.append(\"StatusStartTime: \").append(getStatusStartTime()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchUpdateLinkAttributesResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.Webhook.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getPayloadUrl() != null)\r\n        sb.append(\"PayloadUrl: \").append(getPayloadUrl()).append(\",\");\r\n    if (getSecret() != null)\r\n        sb.append(\"Secret: \").append(getSecret()).append(\",\");\r\n    if (getBranchFilter() != null)\r\n        sb.append(\"BranchFilter: \").append(getBranchFilter()).append(\",\");\r\n    if (getLastModifiedSecret() != null)\r\n        sb.append(\"LastModifiedSecret: \").append(getLastModifiedSecret());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateDirectoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.AcknowledgeJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getNonce() != null)\r\n        sb.append(\"Nonce: \").append(getNonce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DescribeComputeEnvironmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComputeEnvironments() != null)\r\n        sb.append(\"ComputeEnvironments: \").append(getComputeEnvironments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.deleteDomain",
	"Comment": "permanently deletes a search domain and all of its data. once a domain has been deleted, it cannot be recovered.for more information, see deleting a search domain in the amazon cloudsearch developer guide.",
	"Method": "DeleteDomainResult deleteDomain(DeleteDomainRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDomain(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AbstractAWSCloudHSMAsync.describeLunaClientAsync",
	"Comment": "simplified method form for invoking the describelunaclient operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeLunaClientResult> describeLunaClientAsync(DescribeLunaClientRequest request,java.util.concurrent.Future<DescribeLunaClientResult> describeLunaClientAsync,DescribeLunaClientRequest request,com.amazonaws.handlers.AsyncHandler<DescribeLunaClientRequest, DescribeLunaClientResult> asyncHandler,java.util.concurrent.Future<DescribeLunaClientResult> describeLunaClientAsync,java.util.concurrent.Future<DescribeLunaClientResult> describeLunaClientAsync,com.amazonaws.handlers.AsyncHandler<DescribeLunaClientRequest, DescribeLunaClientResult> asyncHandler){\r\n    return describeLunaClientAsync(new DescribeLunaClientRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeploymentStyle.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentType() != null)\r\n        sb.append(\"DeploymentType: \").append(getDeploymentType()).append(\",\");\r\n    if (getDeploymentOption() != null)\r\n        sb.append(\"DeploymentOption: \").append(getDeploymentOption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DeleteDashboardsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDashboardNames() != null)\r\n        sb.append(\"DashboardNames: \").append(getDashboardNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RegisterApplicationRevisionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.GetIdRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getLogins() != null)\r\n        sb.append(\"Logins: \").append(getLogins());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.RollbackTrigger.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ResourceChangeDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget()).append(\",\");\r\n    if (getEvaluation() != null)\r\n        sb.append(\"Evaluation: \").append(getEvaluation()).append(\",\");\r\n    if (getChangeSource() != null)\r\n        sb.append(\"ChangeSource: \").append(getChangeSource()).append(\",\");\r\n    if (getCausingEntity() != null)\r\n        sb.append(\"CausingEntity: \").append(getCausingEntity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchReadRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.UpdateTerminationProtectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnableTerminationProtection() != null)\r\n        sb.append(\"EnableTerminationProtection: \").append(getEnableTerminationProtection()).append(\",\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateDistributionWithTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistributionConfigWithTags() != null)\r\n        sb.append(\"DistributionConfigWithTags: \").append(getDistributionConfigWithTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ThirdPartyJob.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientId() != null)\r\n        sb.append(\"ClientId: \").append(getClientId()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.GetAccountSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountSettings() != null)\r\n        sb.append(\"AccountSettings: \").append(getAccountSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.updateEnvironment",
	"Comment": "changes the settings of an existing aws cloud9 development environment.",
	"Method": "UpdateEnvironmentResult updateEnvironment(UpdateEnvironmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateEnvironment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DeleteStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getRetainResources() != null)\r\n        sb.append(\"RetainResources: \").append(getRetainResources()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.DeleteCustomActionTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getProvider() != null)\r\n        sb.append(\"Provider: \").append(getProvider()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ArtifactStore.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getEncryptionKey() != null)\r\n        sb.append(\"EncryptionKey: \").append(getEncryptionKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.TagFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ListHsmsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PostCommentForComparedCommitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBeforeCommitId() != null)\r\n        sb.append(\"BeforeCommitId: \").append(getBeforeCommitId()).append(\",\");\r\n    if (getAfterCommitId() != null)\r\n        sb.append(\"AfterCommitId: \").append(getAfterCommitId()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.NodePropertiesSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIsMainNode() != null)\r\n        sb.append(\"IsMainNode: \").append(getIsMainNode()).append(\",\");\r\n    if (getNumNodes() != null)\r\n        sb.append(\"NumNodes: \").append(getNumNodes()).append(\",\");\r\n    if (getNodeIndex() != null)\r\n        sb.append(\"NodeIndex: \").append(getNodeIndex());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.GetThirdPartyJobDetailsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobDetails() != null)\r\n        sb.append(\"JobDetails: \").append(getJobDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.DeleteScalingPlanResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.AWSCloudHSMV2Client.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DescribeJobDefinitionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobDefinitions() != null)\r\n        sb.append(\"JobDefinitions: \").append(getJobDefinitions()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getJobDefinitionName() != null)\r\n        sb.append(\"JobDefinitionName: \").append(getJobDefinitionName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.OriginGroupFailoverCriteria.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatusCodes() != null)\r\n        sb.append(\"StatusCodes: \").append(getStatusCodes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.ListDomainNamesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainNames() != null)\r\n        sb.append(\"DomainNames: \").append(getDomainNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DisableAlarmActionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.Directory.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttachTypedLinkResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTypedLinkSpecifier() != null)\r\n        sb.append(\"TypedLinkSpecifier: \").append(getTypedLinkSpecifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackResourceDrift.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getLogicalResourceId() != null)\r\n        sb.append(\"LogicalResourceId: \").append(getLogicalResourceId()).append(\",\");\r\n    if (getPhysicalResourceId() != null)\r\n        sb.append(\"PhysicalResourceId: \").append(getPhysicalResourceId()).append(\",\");\r\n    if (getPhysicalResourceIdContext() != null)\r\n        sb.append(\"PhysicalResourceIdContext: \").append(getPhysicalResourceIdContext()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getExpectedProperties() != null)\r\n        sb.append(\"ExpectedProperties: \").append(getExpectedProperties()).append(\",\");\r\n    if (getActualProperties() != null)\r\n        sb.append(\"ActualProperties: \").append(getActualProperties()).append(\",\");\r\n    if (getPropertyDifferences() != null)\r\n        sb.append(\"PropertyDifferences: \").append(getPropertyDifferences()).append(\",\");\r\n    if (getStackResourceDriftStatus() != null)\r\n        sb.append(\"StackResourceDriftStatus: \").append(getStackResourceDriftStatus()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.ListPublicKeysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKeyList() != null)\r\n        sb.append(\"PublicKeyList: \").append(getPublicKeyList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RegisterOnPremisesInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName()).append(\",\");\r\n    if (getIamSessionArn() != null)\r\n        sb.append(\"IamSessionArn: \").append(getIamSessionArn()).append(\",\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.LambdaFunctionAssociations.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.PullRequestStatusChangedEventMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestStatus() != null)\r\n        sb.append(\"PullRequestStatus: \").append(getPullRequestStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.enableStageTransition",
	"Comment": "enables artifacts in a pipeline to transition to a stage in a pipeline.",
	"Method": "EnableStageTransitionResult enableStageTransition(EnableStageTransitionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeEnableStageTransition(request);\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.intermediate.ShapeModel.findMemberModelByC2jName",
	"Comment": "returns the member model associated with the given c2j member name from this shape model.",
	"Method": "MemberModel findMemberModelByC2jName(String memberC2jName){\r\n    MemberModel model = tryFindMemberModelByC2jName(memberC2jName, false);\r\n    if (model == null) {\r\n        throw new IllegalArgumentException(memberC2jName + \" member (c2j name) does not exist in the shape.\");\r\n    }\r\n    return model;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DetectStackDriftResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackDriftDetectionId() != null)\r\n        sb.append(\"StackDriftDetectionId: \").append(getStackDriftDetectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMClient.listHsms",
	"Comment": "this is documentation for aws cloudhsm classic. for more information, see aws cloudhsm classic faqs, the aws cloudhsm classic user guide, and the aws cloudhsm classic api reference.for information about the current version of aws cloudhsm, see aws cloudhsm, the aws cloudhsm user guide, and the aws cloudhsm api reference.retrieves the identifiers of all of the hsms provisioned for the current customer.this operation supports pagination with the use of the nexttoken member. if more results areavailable, the nexttoken member of the response contains a token that you pass in the next call tolisthsms to retrieve the next set of items.",
	"Method": "ListHsmsResult listHsms(ListHsmsRequest request,ListHsmsResult listHsms){\r\n    return listHsms(new ListHsmsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.UpdatePipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.LookupEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.Distribution.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getInProgressInvalidationBatches() != null)\r\n        sb.append(\"InProgressInvalidationBatches: \").append(getInProgressInvalidationBatches()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getActiveTrustedSigners() != null)\r\n        sb.append(\"ActiveTrustedSigners: \").append(getActiveTrustedSigners()).append(\",\");\r\n    if (getDistributionConfig() != null)\r\n        sb.append(\"DistributionConfig: \").append(getDistributionConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetRepositoryTriggersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListDirectoriesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonchime using the current builder configuration.",
	"Method": "AmazonChime build(AwsSyncClientParams params){\r\n    return new AmazonChimeClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeChangeSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeSetName() != null)\r\n        sb.append(\"ChangeSetName: \").append(getChangeSetName()).append(\",\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CustomHeaders.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ArrayProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.AmazonCloudSearchDomainAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazoncloudsearchdomainasync using the current builder configuration.",
	"Method": "AmazonCloudSearchDomainAsync build(AwsAsyncClientParams params){\r\n    return new AmazonCloudSearchDomainAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListFacetAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdatePullRequestTitleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestId() != null)\r\n        sb.append(\"PullRequestId: \").append(getPullRequestId()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ListBuildsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIds() != null)\r\n        sb.append(\"Ids: \").append(getIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.batchWrite",
	"Comment": "performs all the write operations in a batch. either all the operations succeed or none.",
	"Method": "BatchWriteResult batchWrite(BatchWriteRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeBatchWrite(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttachObjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getParentReference() != null)\r\n        sb.append(\"ParentReference: \").append(getParentReference()).append(\",\");\r\n    if (getChildReference() != null)\r\n        sb.append(\"ChildReference: \").append(getChildReference()).append(\",\");\r\n    if (getLinkName() != null)\r\n        sb.append(\"LinkName: \").append(getLinkName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.PutThirdPartyJobSuccessResultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getCurrentRevision() != null)\r\n        sb.append(\"CurrentRevision: \").append(getCurrentRevision()).append(\",\");\r\n    if (getContinuationToken() != null)\r\n        sb.append(\"ContinuationToken: \").append(getContinuationToken()).append(\",\");\r\n    if (getExecutionDetails() != null)\r\n        sb.append(\"ExecutionDetails: \").append(getExecutionDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.DeleteCommentContentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.batchUpdateUser",
	"Comment": "updates user details within the updateuserrequestitem object for up to 20 users for the specified amazonchime account. currently, only licensetype updates are supported for this action.",
	"Method": "BatchUpdateUserResult batchUpdateUser(BatchUpdateUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeBatchUpdateUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.DeleteWebhookRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.StreamingDistributionList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient.listMetricsAsync",
	"Comment": "simplified method form for invoking the listmetrics operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListMetricsResult> listMetricsAsync(ListMetricsRequest request,java.util.concurrent.Future<ListMetricsResult> listMetricsAsync,ListMetricsRequest request,com.amazonaws.handlers.AsyncHandler<ListMetricsRequest, ListMetricsResult> asyncHandler,java.util.concurrent.Future<ListMetricsResult> listMetricsAsync,java.util.concurrent.Future<ListMetricsResult> listMetricsAsync,com.amazonaws.handlers.AsyncHandler<ListMetricsRequest, ListMetricsResult> asyncHandler){\r\n    return listMetricsAsync(new ListMetricsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.util.SignerUtils.makeStringUrlSafe",
	"Comment": "converts the given string to be safe for use in signed urls for a privatedistribution.",
	"Method": "String makeStringUrlSafe(String str){\r\n    return makeBytesUrlSafe(str.getBytes(StringUtils.UTF8));\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClient.describeAlarmsForMetric",
	"Comment": "retrieves the alarms for the specified metric. to filter the results, specify a statistic, period, or unit.",
	"Method": "DescribeAlarmsForMetricResult describeAlarmsForMetric(DescribeAlarmsForMetricRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAlarmsForMetric(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DeleteBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackup() != null)\r\n        sb.append(\"Backup: \").append(getBackup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.StopDeploymentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getAutoRollbackEnabled() != null)\r\n        sb.append(\"AutoRollbackEnabled: \").append(getAutoRollbackEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.deleteFacet",
	"Comment": "deletes a given facet. all attributes and rules that are associated with the facet will be deleted.only development schema facets are allowed deletion.",
	"Method": "DeleteFacetResult deleteFacet(DeleteFacetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteFacet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.DisableStageTransitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DeleteTypedLinkFacetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListObjectAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel()).append(\",\");\r\n    if (getFacetFilter() != null)\r\n        sb.append(\"FacetFilter: \").append(getFacetFilter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchRemoveFacetFromObject.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaFacet() != null)\r\n        sb.append(\"SchemaFacet: \").append(getSchemaFacet()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DoubleOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceField() != null)\r\n        sb.append(\"SourceField: \").append(getSourceField()).append(\",\");\r\n    if (getFacetEnabled() != null)\r\n        sb.append(\"FacetEnabled: \").append(getFacetEnabled()).append(\",\");\r\n    if (getSearchEnabled() != null)\r\n        sb.append(\"SearchEnabled: \").append(getSearchEnabled()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled()).append(\",\");\r\n    if (getSortEnabled() != null)\r\n        sb.append(\"SortEnabled: \").append(getSortEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.AWSAutoScalingPlansClient.deleteScalingPlan",
	"Comment": "deletes the specified scaling plan.deleting a scaling plan deletes the underlying scalinginstruction for all of the scalable resources thatare covered by the plan.if the plan has launched resources or has scaling activities in progress, you must delete those resourcesseparately.",
	"Method": "DeleteScalingPlanResult deleteScalingPlan(DeleteScalingPlanRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteScalingPlan(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.DescribeEnvironmentMembershipsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getPermissions() != null)\r\n        sb.append(\"Permissions: \").append(getPermissions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.UpdatePullRequestDescriptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequest() != null)\r\n        sb.append(\"PullRequest: \").append(getPullRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.AutoRollbackConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.BudgetPerformanceHistory.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getBudgetType() != null)\r\n        sb.append(\"BudgetType: \").append(getBudgetType()).append(\",\");\r\n    if (getCostFilters() != null)\r\n        sb.append(\"CostFilters: \").append(getCostFilters()).append(\",\");\r\n    if (getCostTypes() != null)\r\n        sb.append(\"CostTypes: \").append(getCostTypes()).append(\",\");\r\n    if (getTimeUnit() != null)\r\n        sb.append(\"TimeUnit: \").append(getTimeUnit()).append(\",\");\r\n    if (getBudgetedAndActualAmountsList() != null)\r\n        sb.append(\"BudgetedAndActualAmountsList: \").append(getBudgetedAndActualAmountsList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetObjectAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DefineIndexFieldRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getIndexField() != null)\r\n        sb.append(\"IndexField: \").append(getIndexField());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetDistributionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ContentTypeProfiles.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetDeploymentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentIds() != null)\r\n        sb.append(\"DeploymentIds: \").append(getDeploymentIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListObjectParentPathsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPathToObjectIdentifiersList() != null)\r\n        sb.append(\"PathToObjectIdentifiersList: \").append(getPathToObjectIdentifiersList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.updatePipeline",
	"Comment": "updates a specified pipeline with edits or changes to its structure. use a json file with the pipeline structurein conjunction with updatepipeline to provide the full structure of the pipeline. updating the pipeline increasesthe version number of the pipeline by 1.",
	"Method": "UpdatePipelineResult updatePipeline(UpdatePipelineRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdatePipeline(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.DeleteTypedLinkFacetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.LastDeploymentInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.waiters.GetDeploymentFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "GetDeploymentResult apply(GetDeploymentRequest getDeploymentRequest){\r\n    return client.getDeployment(getDeploymentRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.deleteEnvironment",
	"Comment": "deletes an aws cloud9 development environment. if an amazon ec2 instance is connected to the environment, alsoterminates the instance.",
	"Method": "DeleteEnvironmentResult deleteEnvironment(DeleteEnvironmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteEnvironment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetObjectInformationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.DescribeTrailsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrailList() != null)\r\n        sb.append(\"TrailList: \").append(getTrailList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.CurrentRevision.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision()).append(\",\");\r\n    if (getChangeIdentifier() != null)\r\n        sb.append(\"ChangeIdentifier: \").append(getChangeIdentifier()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getRevisionSummary() != null)\r\n        sb.append(\"RevisionSummary: \").append(getRevisionSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AWSCloudTrailClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchAsyncClient.describeAlarmHistoryAsync",
	"Comment": "simplified method form for invoking the describealarmhistory operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAlarmHistoryResult> describeAlarmHistoryAsync(DescribeAlarmHistoryRequest request,java.util.concurrent.Future<DescribeAlarmHistoryResult> describeAlarmHistoryAsync,DescribeAlarmHistoryRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAlarmHistoryRequest, DescribeAlarmHistoryResult> asyncHandler,java.util.concurrent.Future<DescribeAlarmHistoryResult> describeAlarmHistoryAsync,java.util.concurrent.Future<DescribeAlarmHistoryResult> describeAlarmHistoryAsync,com.amazonaws.handlers.AsyncHandler<DescribeAlarmHistoryRequest, DescribeAlarmHistoryResult> asyncHandler){\r\n    return describeAlarmHistoryAsync(new DescribeAlarmHistoryRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationAsyncClient.listStacksAsync",
	"Comment": "simplified method form for invoking the liststacks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListStacksResult> listStacksAsync(ListStacksRequest request,java.util.concurrent.Future<ListStacksResult> listStacksAsync,ListStacksRequest request,com.amazonaws.handlers.AsyncHandler<ListStacksRequest, ListStacksResult> asyncHandler,java.util.concurrent.Future<ListStacksResult> listStacksAsync,java.util.concurrent.Future<ListStacksResult> listStacksAsync,com.amazonaws.handlers.AsyncHandler<ListStacksRequest, ListStacksResult> asyncHandler){\r\n    return listStacksAsync(new ListStacksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.EnableAlarmActionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.JobData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionTypeId() != null)\r\n        sb.append(\"ActionTypeId: \").append(getActionTypeId()).append(\",\");\r\n    if (getActionConfiguration() != null)\r\n        sb.append(\"ActionConfiguration: \").append(getActionConfiguration()).append(\",\");\r\n    if (getPipelineContext() != null)\r\n        sb.append(\"PipelineContext: \").append(getPipelineContext()).append(\",\");\r\n    if (getInputArtifacts() != null)\r\n        sb.append(\"InputArtifacts: \").append(getInputArtifacts()).append(\",\");\r\n    if (getOutputArtifacts() != null)\r\n        sb.append(\"OutputArtifacts: \").append(getOutputArtifacts()).append(\",\");\r\n    if (getArtifactCredentials() != null)\r\n        sb.append(\"ArtifactCredentials: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getContinuationToken() != null)\r\n        sb.append(\"ContinuationToken: \").append(getContinuationToken()).append(\",\");\r\n    if (getEncryptionKey() != null)\r\n        sb.append(\"EncryptionKey: \").append(getEncryptionKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeleteStreamingDistributionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.AWSCodeBuildClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.GetCredentialsForIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId()).append(\",\");\r\n    if (getCredentials() != null)\r\n        sb.append(\"Credentials: \").append(getCredentials());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchDetachObject.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParentReference() != null)\r\n        sb.append(\"ParentReference: \").append(getParentReference()).append(\",\");\r\n    if (getLinkName() != null)\r\n        sb.append(\"LinkName: \").append(getLinkName()).append(\",\");\r\n    if (getBatchReferenceName() != null)\r\n        sb.append(\"BatchReferenceName: \").append(getBatchReferenceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.UpdateAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetStreamingDistributionConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamingDistributionConfig() != null)\r\n        sb.append(\"StreamingDistributionConfig: \").append(getStreamingDistributionConfig()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.TextOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceField() != null)\r\n        sb.append(\"SourceField: \").append(getSourceField()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled()).append(\",\");\r\n    if (getSortEnabled() != null)\r\n        sb.append(\"SortEnabled: \").append(getSortEnabled()).append(\",\");\r\n    if (getHighlightEnabled() != null)\r\n        sb.append(\"HighlightEnabled: \").append(getHighlightEnabled()).append(\",\");\r\n    if (getAnalysisScheme() != null)\r\n        sb.append(\"AnalysisScheme: \").append(getAnalysisScheme());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListPublishedSchemaArnsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArns() != null)\r\n        sb.append(\"SchemaArns: \").append(getSchemaArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.deregisterWebhookWithThirdParty",
	"Comment": "removes the connection between the webhook that was created by codepipeline and the external tool with events tobe detected. currently only supported for webhooks that target an action type of github.",
	"Method": "DeregisterWebhookWithThirdPartyResult deregisterWebhookWithThirdParty(DeregisterWebhookWithThirdPartyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeregisterWebhookWithThirdParty(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.CreateBudgetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudget() != null)\r\n        sb.append(\"Budget: \").append(getBudget()).append(\",\");\r\n    if (getNotificationsWithSubscribers() != null)\r\n        sb.append(\"NotificationsWithSubscribers: \").append(getNotificationsWithSubscribers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GenericRevisionInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDeploymentGroups() != null)\r\n        sb.append(\"DeploymentGroups: \").append(getDeploymentGroups()).append(\",\");\r\n    if (getFirstUsedTime() != null)\r\n        sb.append(\"FirstUsedTime: \").append(getFirstUsedTime()).append(\",\");\r\n    if (getLastUsedTime() != null)\r\n        sb.append(\"LastUsedTime: \").append(getLastUsedTime()).append(\",\");\r\n    if (getRegisterTime() != null)\r\n        sb.append(\"RegisterTime: \").append(getRegisterTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateFacetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetLinkAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpdateSchemaResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClient.createNotification",
	"Comment": "creates a notification. you must create the budget before you create the associated notification.",
	"Method": "CreateNotificationResult createNotification(CreateNotificationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateNotification(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ThirdPartyJobDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getNonce() != null)\r\n        sb.append(\"Nonce: \").append(getNonce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AWSCloudHSMAsyncClient.describeHsmAsync",
	"Comment": "simplified method form for invoking the describehsm operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeHsmResult> describeHsmAsync(DescribeHsmRequest request,java.util.concurrent.Future<DescribeHsmResult> describeHsmAsync,DescribeHsmRequest request,com.amazonaws.handlers.AsyncHandler<DescribeHsmRequest, DescribeHsmResult> asyncHandler,java.util.concurrent.Future<DescribeHsmResult> describeHsmAsync,java.util.concurrent.Future<DescribeHsmResult> describeHsmAsync,com.amazonaws.handlers.AsyncHandler<DescribeHsmRequest, DescribeHsmResult> asyncHandler){\r\n    return describeHsmAsync(new DescribeHsmRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.UpdateScalingPlanResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchDetachPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyReference() != null)\r\n        sb.append(\"PolicyReference: \").append(getPolicyReference()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetMergeConflictsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getDestinationCommitSpecifier() != null)\r\n        sb.append(\"DestinationCommitSpecifier: \").append(getDestinationCommitSpecifier()).append(\",\");\r\n    if (getSourceCommitSpecifier() != null)\r\n        sb.append(\"SourceCommitSpecifier: \").append(getSourceCommitSpecifier()).append(\",\");\r\n    if (getMergeOption() != null)\r\n        sb.append(\"MergeOption: \").append(getMergeOption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttachPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.GetPipelineStateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getPipelineVersion() != null)\r\n        sb.append(\"PipelineVersion: \").append(getPipelineVersion()).append(\",\");\r\n    if (getStageStates() != null)\r\n        sb.append(\"StageStates: \").append(getStageStates()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getUpdated() != null)\r\n        sb.append(\"Updated: \").append(getUpdated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.UpdateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DeleteClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.Account.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAccountType() != null)\r\n        sb.append(\"AccountType: \").append(getAccountType()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getDefaultLicense() != null)\r\n        sb.append(\"DefaultLicense: \").append(getDefaultLicense()).append(\",\");\r\n    if (getSupportedLicenses() != null)\r\n        sb.append(\"SupportedLicenses: \").append(getSupportedLicenses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.FieldStats.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMin() != null)\r\n        sb.append(\"Min: \").append(getMin()).append(\",\");\r\n    if (getMax() != null)\r\n        sb.append(\"Max: \").append(getMax()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getMissing() != null)\r\n        sb.append(\"Missing: \").append(getMissing()).append(\",\");\r\n    if (getSum() != null)\r\n        sb.append(\"Sum: \").append(getSum()).append(\",\");\r\n    if (getSumOfSquares() != null)\r\n        sb.append(\"SumOfSquares: \").append(getSumOfSquares()).append(\",\");\r\n    if (getMean() != null)\r\n        sb.append(\"Mean: \").append(getMean()).append(\",\");\r\n    if (getStddev() != null)\r\n        sb.append(\"Stddev: \").append(getStddev());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.getPipelineExecution",
	"Comment": "returns information about an execution of a pipeline, including details about artifacts, the pipeline executionid, and the name, version, and status of the pipeline.",
	"Method": "GetPipelineExecutionResult getPipelineExecution(GetPipelineExecutionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetPipelineExecution(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.RollbackConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRollbackTriggers() != null)\r\n        sb.append(\"RollbackTriggers: \").append(getRollbackTriggers()).append(\",\");\r\n    if (getMonitoringTimeInMinutes() != null)\r\n        sb.append(\"MonitoringTimeInMinutes: \").append(getMonitoringTimeInMinutes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeAccountLimitsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.UpdateStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getTemplateURL() != null)\r\n        sb.append(\"TemplateURL: \").append(getTemplateURL()).append(\",\");\r\n    if (getUsePreviousTemplate() != null)\r\n        sb.append(\"UsePreviousTemplate: \").append(getUsePreviousTemplate()).append(\",\");\r\n    if (getStackPolicyDuringUpdateBody() != null)\r\n        sb.append(\"StackPolicyDuringUpdateBody: \").append(getStackPolicyDuringUpdateBody()).append(\",\");\r\n    if (getStackPolicyDuringUpdateURL() != null)\r\n        sb.append(\"StackPolicyDuringUpdateURL: \").append(getStackPolicyDuringUpdateURL()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getResourceTypes() != null)\r\n        sb.append(\"ResourceTypes: \").append(getResourceTypes()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getRollbackConfiguration() != null)\r\n        sb.append(\"RollbackConfiguration: \").append(getRollbackConfiguration()).append(\",\");\r\n    if (getStackPolicyBody() != null)\r\n        sb.append(\"StackPolicyBody: \").append(getStackPolicyBody()).append(\",\");\r\n    if (getStackPolicyURL() != null)\r\n        sb.append(\"StackPolicyURL: \").append(getStackPolicyURL()).append(\",\");\r\n    if (getNotificationARNs() != null)\r\n        sb.append(\"NotificationARNs: \").append(getNotificationARNs()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ImportSourceCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getServerType() != null)\r\n        sb.append(\"ServerType: \").append(getServerType()).append(\",\");\r\n    if (getAuthType() != null)\r\n        sb.append(\"AuthType: \").append(getAuthType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetAppliedSchemaVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ValidateTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getCapabilitiesReason() != null)\r\n        sb.append(\"CapabilitiesReason: \").append(getCapabilitiesReason()).append(\",\");\r\n    if (getDeclaredTransforms() != null)\r\n        sb.append(\"DeclaredTransforms: \").append(getDeclaredTransforms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.Export.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportingStackId() != null)\r\n        sb.append(\"ExportingStackId: \").append(getExportingStackId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.SuggestionMatch.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuggestion() != null)\r\n        sb.append(\"Suggestion: \").append(getSuggestion()).append(\",\");\r\n    if (getScore() != null)\r\n        sb.append(\"Score: \").append(getScore()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetBlobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBlobId() != null)\r\n        sb.append(\"BlobId: \").append(getBlobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.UpdateStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetFieldLevelEncryptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.DescribeEnvironmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironments() != null)\r\n        sb.append(\"Environments: \").append(getEnvironments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeServiceAccessPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getDeployed() != null)\r\n        sb.append(\"Deployed: \").append(getDeployed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.StopDeploymentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DescribeBudgetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBudget() != null)\r\n        sb.append(\"Budget: \").append(getBudget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetDeploymentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentsInfo() != null)\r\n        sb.append(\"DeploymentsInfo: \").append(getDeploymentsInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.DescribeIdentityPoolRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DescribeBudgetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttachObjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedObjectIdentifier() != null)\r\n        sb.append(\"AttachedObjectIdentifier: \").append(getAttachedObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.UpdateDeploymentGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentDeploymentGroupName() != null)\r\n        sb.append(\"CurrentDeploymentGroupName: \").append(getCurrentDeploymentGroupName()).append(\",\");\r\n    if (getNewDeploymentGroupName() != null)\r\n        sb.append(\"NewDeploymentGroupName: \").append(getNewDeploymentGroupName()).append(\",\");\r\n    if (getDeploymentConfigName() != null)\r\n        sb.append(\"DeploymentConfigName: \").append(getDeploymentConfigName()).append(\",\");\r\n    if (getEc2TagFilters() != null)\r\n        sb.append(\"Ec2TagFilters: \").append(getEc2TagFilters()).append(\",\");\r\n    if (getOnPremisesInstanceTagFilters() != null)\r\n        sb.append(\"OnPremisesInstanceTagFilters: \").append(getOnPremisesInstanceTagFilters()).append(\",\");\r\n    if (getAutoScalingGroups() != null)\r\n        sb.append(\"AutoScalingGroups: \").append(getAutoScalingGroups()).append(\",\");\r\n    if (getServiceRoleArn() != null)\r\n        sb.append(\"ServiceRoleArn: \").append(getServiceRoleArn()).append(\",\");\r\n    if (getTriggerConfigurations() != null)\r\n        sb.append(\"TriggerConfigurations: \").append(getTriggerConfigurations()).append(\",\");\r\n    if (getAlarmConfiguration() != null)\r\n        sb.append(\"AlarmConfiguration: \").append(getAlarmConfiguration()).append(\",\");\r\n    if (getAutoRollbackConfiguration() != null)\r\n        sb.append(\"AutoRollbackConfiguration: \").append(getAutoRollbackConfiguration()).append(\",\");\r\n    if (getDeploymentStyle() != null)\r\n        sb.append(\"DeploymentStyle: \").append(getDeploymentStyle()).append(\",\");\r\n    if (getBlueGreenDeploymentConfiguration() != null)\r\n        sb.append(\"BlueGreenDeploymentConfiguration: \").append(getBlueGreenDeploymentConfiguration()).append(\",\");\r\n    if (getLoadBalancerInfo() != null)\r\n        sb.append(\"LoadBalancerInfo: \").append(getLoadBalancerInfo()).append(\",\");\r\n    if (getEc2TagSet() != null)\r\n        sb.append(\"Ec2TagSet: \").append(getEc2TagSet()).append(\",\");\r\n    if (getEcsServices() != null)\r\n        sb.append(\"EcsServices: \").append(getEcsServices()).append(\",\");\r\n    if (getOnPremisesTagSet() != null)\r\n        sb.append(\"OnPremisesTagSet: \").append(getOnPremisesTagSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.updateAccount",
	"Comment": "updates account details for the specified amazon chime account. currently, only account name updates aresupported for this action.",
	"Method": "UpdateAccountResult updateAccount(UpdateAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.User.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getPrimaryEmail() != null)\r\n        sb.append(\"PrimaryEmail: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getLicenseType() != null)\r\n        sb.append(\"LicenseType: \").append(getLicenseType()).append(\",\");\r\n    if (getUserRegistrationStatus() != null)\r\n        sb.append(\"UserRegistrationStatus: \").append(getUserRegistrationStatus()).append(\",\");\r\n    if (getUserInvitationStatus() != null)\r\n        sb.append(\"UserInvitationStatus: \").append(getUserInvitationStatus()).append(\",\");\r\n    if (getRegisteredOn() != null)\r\n        sb.append(\"RegisteredOn: \").append(getRegisteredOn()).append(\",\");\r\n    if (getInvitedOn() != null)\r\n        sb.append(\"InvitedOn: \").append(getInvitedOn()).append(\",\");\r\n    if (getPersonalPIN() != null)\r\n        sb.append(\"PersonalPIN: \").append(getPersonalPIN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.internal.Utils.assertNotNull",
	"Comment": "throws illegalargumentexception with the specified error message if the inputis null, otherwise return the input as is.",
	"Method": "T assertNotNull(T argument,String msg){\r\n    if (argument == null)\r\n        throw new IllegalArgumentException(msg);\r\n    return argument;\r\n}"
}, {
	"Path": "com.amazonaws.codegen.AddMetadata.requiresApiKey",
	"Comment": "if any operation requires an api key we generate a setter on the builder.",
	"Method": "boolean requiresApiKey(ServiceModel serviceModel){\r\n    return serviceModel.getOperations().values().stream().anyMatch(Operation::requiresApiKey);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.deleteTypedLinkFacet",
	"Comment": "deletes a typedlinkfacet. for more information, see typed links.",
	"Method": "DeleteTypedLinkFacetResult deleteTypedLinkFacet(DeleteTypedLinkFacetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteTypedLinkFacet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.ListTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceTagList() != null)\r\n        sb.append(\"ResourceTagList: \").append(getResourceTagList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.DescribePullRequestEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPullRequestEvents() != null)\r\n        sb.append(\"PullRequestEvents: \").append(getPullRequestEvents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackResourceDriftsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackResourceDrifts() != null)\r\n        sb.append(\"StackResourceDrifts: \").append(getStackResourceDrifts()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.Metric.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.describeExpressions",
	"Comment": "gets the expressions configured for the search domain. can be limited to specific expressions by name. bydefault, shows all expressions and includes any pending changes to the configuration. set thedeployed option to true to show the active configuration and exclude pending changes.for more information, see configuring expressions in the amazon cloudsearch developer guide.",
	"Method": "DescribeExpressionsResult describeExpressions(DescribeExpressionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeExpressions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.StatisticSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSampleCount() != null)\r\n        sb.append(\"SampleCount: \").append(getSampleCount()).append(\",\");\r\n    if (getSum() != null)\r\n        sb.append(\"Sum: \").append(getSum()).append(\",\");\r\n    if (getMinimum() != null)\r\n        sb.append(\"Minimum: \").append(getMinimum()).append(\",\");\r\n    if (getMaximum() != null)\r\n        sb.append(\"Maximum: \").append(getMaximum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AbstractAmazonCodeDeployAsync.batchGetOnPremisesInstancesAsync",
	"Comment": "simplified method form for invoking the batchgetonpremisesinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<BatchGetOnPremisesInstancesResult> batchGetOnPremisesInstancesAsync(BatchGetOnPremisesInstancesRequest request,java.util.concurrent.Future<BatchGetOnPremisesInstancesResult> batchGetOnPremisesInstancesAsync,BatchGetOnPremisesInstancesRequest request,com.amazonaws.handlers.AsyncHandler<BatchGetOnPremisesInstancesRequest, BatchGetOnPremisesInstancesResult> asyncHandler,java.util.concurrent.Future<BatchGetOnPremisesInstancesResult> batchGetOnPremisesInstancesAsync,java.util.concurrent.Future<BatchGetOnPremisesInstancesResult> batchGetOnPremisesInstancesAsync,com.amazonaws.handlers.AsyncHandler<BatchGetOnPremisesInstancesRequest, BatchGetOnPremisesInstancesResult> asyncHandler){\r\n    return batchGetOnPremisesInstancesAsync(new BatchGetOnPremisesInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.RegisterWebhookWithThirdPartyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.DescribeEnvironmentStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.CreateDeploymentGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDeploymentGroupName() != null)\r\n        sb.append(\"DeploymentGroupName: \").append(getDeploymentGroupName()).append(\",\");\r\n    if (getDeploymentConfigName() != null)\r\n        sb.append(\"DeploymentConfigName: \").append(getDeploymentConfigName()).append(\",\");\r\n    if (getEc2TagFilters() != null)\r\n        sb.append(\"Ec2TagFilters: \").append(getEc2TagFilters()).append(\",\");\r\n    if (getOnPremisesInstanceTagFilters() != null)\r\n        sb.append(\"OnPremisesInstanceTagFilters: \").append(getOnPremisesInstanceTagFilters()).append(\",\");\r\n    if (getAutoScalingGroups() != null)\r\n        sb.append(\"AutoScalingGroups: \").append(getAutoScalingGroups()).append(\",\");\r\n    if (getServiceRoleArn() != null)\r\n        sb.append(\"ServiceRoleArn: \").append(getServiceRoleArn()).append(\",\");\r\n    if (getTriggerConfigurations() != null)\r\n        sb.append(\"TriggerConfigurations: \").append(getTriggerConfigurations()).append(\",\");\r\n    if (getAlarmConfiguration() != null)\r\n        sb.append(\"AlarmConfiguration: \").append(getAlarmConfiguration()).append(\",\");\r\n    if (getAutoRollbackConfiguration() != null)\r\n        sb.append(\"AutoRollbackConfiguration: \").append(getAutoRollbackConfiguration()).append(\",\");\r\n    if (getDeploymentStyle() != null)\r\n        sb.append(\"DeploymentStyle: \").append(getDeploymentStyle()).append(\",\");\r\n    if (getBlueGreenDeploymentConfiguration() != null)\r\n        sb.append(\"BlueGreenDeploymentConfiguration: \").append(getBlueGreenDeploymentConfiguration()).append(\",\");\r\n    if (getLoadBalancerInfo() != null)\r\n        sb.append(\"LoadBalancerInfo: \").append(getLoadBalancerInfo()).append(\",\");\r\n    if (getEc2TagSet() != null)\r\n        sb.append(\"Ec2TagSet: \").append(getEc2TagSet()).append(\",\");\r\n    if (getEcsServices() != null)\r\n        sb.append(\"EcsServices: \").append(getEcsServices()).append(\",\");\r\n    if (getOnPremisesTagSet() != null)\r\n        sb.append(\"OnPremisesTagSet: \").append(getOnPremisesTagSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.IndexFieldStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.deleteAccount",
	"Comment": "deletes the specified amazon chime account. you must suspend all users before deleting a teamaccount. you can use the batchsuspenduser action to do so.for enterpriselwa and enterprisead accounts, you must release the claimed domains foryour amazon chime account before deletion. as soon as you release the domain, all users under that account aresuspended.deleted accounts appear in your disabled accounts list for 90 days. to restore a deleted accountfrom your disabled accounts list, you must contact aws support.after 90 days, deleted accounts are permanently removed from your disabled accounts list.",
	"Method": "DeleteAccountResult deleteAccount(DeleteAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ProjectSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getGitCloneDepth() != null)\r\n        sb.append(\"GitCloneDepth: \").append(getGitCloneDepth()).append(\",\");\r\n    if (getBuildspec() != null)\r\n        sb.append(\"Buildspec: \").append(getBuildspec()).append(\",\");\r\n    if (getAuth() != null)\r\n        sb.append(\"Auth: \").append(getAuth()).append(\",\");\r\n    if (getReportBuildStatus() != null)\r\n        sb.append(\"ReportBuildStatus: \").append(getReportBuildStatus()).append(\",\");\r\n    if (getInsecureSsl() != null)\r\n        sb.append(\"InsecureSsl: \").append(getInsecureSsl()).append(\",\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdateFieldLevelEncryptionProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionProfileConfig() != null)\r\n        sb.append(\"FieldLevelEncryptionProfileConfig: \").append(getFieldLevelEncryptionProfileConfig()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIfMatch() != null)\r\n        sb.append(\"IfMatch: \").append(getIfMatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.intermediate.ShapeModel.tryFindMemberModelByC2jName",
	"Comment": "tries to find the member model associated with the given c2j member name from this shapemodel. returns the member model if present else returns null.",
	"Method": "MemberModel tryFindMemberModelByC2jName(String memberC2jName,boolean ignoreCase){\r\n    final List<MemberModel> memberModels = getMembers();\r\n    final String expectedName = ignoreCase ? StringUtils.lowerCase(memberC2jName) : memberC2jName;\r\n    if (memberModels != null) {\r\n        for (MemberModel member : memberModels) {\r\n            String actualName = ignoreCase ? StringUtils.lowerCase(member.getC2jName()) : member.getC2jName();\r\n            if (expectedName.equals(actualName)) {\r\n                return member;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.IndexDocumentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldNames() != null)\r\n        sb.append(\"FieldNames: \").append(getFieldNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.FacetAttributeUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CookiePreference.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getForward() != null)\r\n        sb.append(\"Forward: \").append(getForward()).append(\",\");\r\n    if (getWhitelistedNames() != null)\r\n        sb.append(\"WhitelistedNames: \").append(getWhitelistedNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.Environment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getOwnerArn() != null)\r\n        sb.append(\"OwnerArn: \").append(getOwnerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.DeletePipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.StreamingDistribution.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getActiveTrustedSigners() != null)\r\n        sb.append(\"ActiveTrustedSigners: \").append(getActiveTrustedSigners()).append(\",\");\r\n    if (getStreamingDistributionConfig() != null)\r\n        sb.append(\"StreamingDistributionConfig: \").append(getStreamingDistributionConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.AWSAutoScalingPlansAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsautoscalingplansasync using the current builder configuration.",
	"Method": "AWSAutoScalingPlansAsync build(AwsAsyncClientParams params){\r\n    return new AWSAutoScalingPlansAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetDistributionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistribution() != null)\r\n        sb.append(\"Distribution: \").append(getDistribution()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.AppSpecContent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getSha256() != null)\r\n        sb.append(\"Sha256: \").append(getSha256());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.TagProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpdateTypedLinkFacetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClientBuilder.build",
	"Comment": "construct a synchronous implementation of awscodecommit using the current builder configuration.",
	"Method": "AWSCodeCommit build(AwsSyncClientParams params){\r\n    return new AWSCodeCommitClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.RegisterOnPremisesInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.CreateIdentityPoolRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolName() != null)\r\n        sb.append(\"IdentityPoolName: \").append(getIdentityPoolName()).append(\",\");\r\n    if (getAllowUnauthenticatedIdentities() != null)\r\n        sb.append(\"AllowUnauthenticatedIdentities: \").append(getAllowUnauthenticatedIdentities()).append(\",\");\r\n    if (getSupportedLoginProviders() != null)\r\n        sb.append(\"SupportedLoginProviders: \").append(getSupportedLoginProviders()).append(\",\");\r\n    if (getDeveloperProviderName() != null)\r\n        sb.append(\"DeveloperProviderName: \").append(getDeveloperProviderName()).append(\",\");\r\n    if (getOpenIdConnectProviderARNs() != null)\r\n        sb.append(\"OpenIdConnectProviderARNs: \").append(getOpenIdConnectProviderARNs()).append(\",\");\r\n    if (getCognitoIdentityProviders() != null)\r\n        sb.append(\"CognitoIdentityProviders: \").append(getCognitoIdentityProviders()).append(\",\");\r\n    if (getSamlProviderARNs() != null)\r\n        sb.append(\"SamlProviderARNs: \").append(getSamlProviderARNs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.TerminateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.UpdateAvailabilityOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityOptions() != null)\r\n        sb.append(\"AvailabilityOptions: \").append(getAvailabilityOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.TypedLinkFacet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getIdentityAttributeOrder() != null)\r\n        sb.append(\"IdentityAttributeOrder: \").append(getIdentityAttributeOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.ScalingParametersStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.UpdateDeploymentGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHooksNotCleanedUp() != null)\r\n        sb.append(\"HooksNotCleanedUp: \").append(getHooksNotCleanedUp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSet() != null)\r\n        sb.append(\"StackSet: \").append(getStackSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DescribeBudgetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.detachTypedLink",
	"Comment": "detaches a typed link from a specified source and target object. for more information, see typed links.",
	"Method": "DetachTypedLinkResult detachTypedLink(DetachTypedLinkRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDetachTypedLink(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetRepositoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryMetadata() != null)\r\n        sb.append(\"RepositoryMetadata: \").append(getRepositoryMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.DeregisterOnPremisesInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.startPipelineExecution",
	"Comment": "starts the specified pipeline. specifically, it begins processing the latest commit to the source locationspecified as part of the pipeline.",
	"Method": "StartPipelineExecutionResult startPipelineExecution(StartPipelineExecutionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartPipelineExecution(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.GetOpenIdTokenForDeveloperIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getIdentityId() != null)\r\n        sb.append(\"IdentityId: \").append(getIdentityId()).append(\",\");\r\n    if (getLogins() != null)\r\n        sb.append(\"Logins: \").append(getLogins()).append(\",\");\r\n    if (getTokenDuration() != null)\r\n        sb.append(\"TokenDuration: \").append(getTokenDuration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchWriteOperation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateObject() != null)\r\n        sb.append(\"CreateObject: \").append(getCreateObject()).append(\",\");\r\n    if (getAttachObject() != null)\r\n        sb.append(\"AttachObject: \").append(getAttachObject()).append(\",\");\r\n    if (getDetachObject() != null)\r\n        sb.append(\"DetachObject: \").append(getDetachObject()).append(\",\");\r\n    if (getUpdateObjectAttributes() != null)\r\n        sb.append(\"UpdateObjectAttributes: \").append(getUpdateObjectAttributes()).append(\",\");\r\n    if (getDeleteObject() != null)\r\n        sb.append(\"DeleteObject: \").append(getDeleteObject()).append(\",\");\r\n    if (getAddFacetToObject() != null)\r\n        sb.append(\"AddFacetToObject: \").append(getAddFacetToObject()).append(\",\");\r\n    if (getRemoveFacetFromObject() != null)\r\n        sb.append(\"RemoveFacetFromObject: \").append(getRemoveFacetFromObject()).append(\",\");\r\n    if (getAttachPolicy() != null)\r\n        sb.append(\"AttachPolicy: \").append(getAttachPolicy()).append(\",\");\r\n    if (getDetachPolicy() != null)\r\n        sb.append(\"DetachPolicy: \").append(getDetachPolicy()).append(\",\");\r\n    if (getCreateIndex() != null)\r\n        sb.append(\"CreateIndex: \").append(getCreateIndex()).append(\",\");\r\n    if (getAttachToIndex() != null)\r\n        sb.append(\"AttachToIndex: \").append(getAttachToIndex()).append(\",\");\r\n    if (getDetachFromIndex() != null)\r\n        sb.append(\"DetachFromIndex: \").append(getDetachFromIndex()).append(\",\");\r\n    if (getAttachTypedLink() != null)\r\n        sb.append(\"AttachTypedLink: \").append(getAttachTypedLink()).append(\",\");\r\n    if (getDetachTypedLink() != null)\r\n        sb.append(\"DetachTypedLink: \").append(getDetachTypedLink()).append(\",\");\r\n    if (getUpdateLinkAttributes() != null)\r\n        sb.append(\"UpdateLinkAttributes: \").append(getUpdateLinkAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.CreateBranchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBranchName() != null)\r\n        sb.append(\"BranchName: \").append(getBranchName()).append(\",\");\r\n    if (getCommitId() != null)\r\n        sb.append(\"CommitId: \").append(getCommitId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.waiters.AmazonAutoScalingWaiters.groupExists",
	"Comment": "builds a groupexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeAutoScalingGroupsRequest> groupExists(){\r\n    return new WaiterBuilder<DescribeAutoScalingGroupsRequest, DescribeAutoScalingGroupsResult>().withSdkFunction(new DescribeAutoScalingGroupsFunction(client)).withAcceptors(new GroupExists.IsTrueMatcher(), new GroupExists.IsFalseMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(10), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.deleteSuggester",
	"Comment": "deletes a suggester. for more information, see getting search suggestions in the amazon cloudsearch developer guide.",
	"Method": "DeleteSuggesterResult deleteSuggester(DeleteSuggesterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteSuggester(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.TerminateInstanceInAutoScalingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActivity() != null)\r\n        sb.append(\"Activity: \").append(getActivity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.GetJobDetailsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.AttemptDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainer() != null)\r\n        sb.append(\"Container: \").append(getContainer()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getStoppedAt() != null)\r\n        sb.append(\"StoppedAt: \").append(getStoppedAt()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.Credentials.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId()).append(\",\");\r\n    if (getSecretKey() != null)\r\n        sb.append(\"SecretKey: \").append(getSecretKey()).append(\",\");\r\n    if (getSessionToken() != null)\r\n        sb.append(\"SessionToken: \").append(getSessionToken()).append(\",\");\r\n    if (getExpiration() != null)\r\n        sb.append(\"Expiration: \").append(getExpiration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ChangeSetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getChangeSetId() != null)\r\n        sb.append(\"ChangeSetId: \").append(getChangeSetId()).append(\",\");\r\n    if (getChangeSetName() != null)\r\n        sb.append(\"ChangeSetName: \").append(getChangeSetName()).append(\",\");\r\n    if (getExecutionStatus() != null)\r\n        sb.append(\"ExecutionStatus: \").append(getExecutionStatus()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.IndexAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexedAttributes() != null)\r\n        sb.append(\"IndexedAttributes: \").append(getIndexedAttributes()).append(\",\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.DeleteFieldLevelEncryptionConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ResourceChange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getLogicalResourceId() != null)\r\n        sb.append(\"LogicalResourceId: \").append(getLogicalResourceId()).append(\",\");\r\n    if (getPhysicalResourceId() != null)\r\n        sb.append(\"PhysicalResourceId: \").append(getPhysicalResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getReplacement() != null)\r\n        sb.append(\"Replacement: \").append(getReplacement()).append(\",\");\r\n    if (getScope() != null)\r\n        sb.append(\"Scope: \").append(getScope()).append(\",\");\r\n    if (getDetails() != null)\r\n        sb.append(\"Details: \").append(getDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.codegen.model.intermediate.OperationModel.getEndpointTrait",
	"Comment": "returns the endpoint trait that will be used to resolve the endpoint of an api.",
	"Method": "EndpointTrait getEndpointTrait(){\r\n    return endpointTrait;\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.model.DisassociateTeamMemberRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId()).append(\",\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeChangeSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeSetName() != null)\r\n        sb.append(\"ChangeSetName: \").append(getChangeSetName()).append(\",\");\r\n    if (getChangeSetId() != null)\r\n        sb.append(\"ChangeSetId: \").append(getChangeSetId()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getStackName() != null)\r\n        sb.append(\"StackName: \").append(getStackName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getExecutionStatus() != null)\r\n        sb.append(\"ExecutionStatus: \").append(getExecutionStatus()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason()).append(\",\");\r\n    if (getNotificationARNs() != null)\r\n        sb.append(\"NotificationARNs: \").append(getNotificationARNs()).append(\",\");\r\n    if (getRollbackConfiguration() != null)\r\n        sb.append(\"RollbackConfiguration: \").append(getRollbackConfiguration()).append(\",\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getChanges() != null)\r\n        sb.append(\"Changes: \").append(getChanges()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.ListApplicationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplications() != null)\r\n        sb.append(\"Applications: \").append(getApplications()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.DescribeLunaClientResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientArn() != null)\r\n        sb.append(\"ClientArn: \").append(getClientArn()).append(\",\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate()).append(\",\");\r\n    if (getCertificateFingerprint() != null)\r\n        sb.append(\"CertificateFingerprint: \").append(getCertificateFingerprint()).append(\",\");\r\n    if (getLastModifiedTimestamp() != null)\r\n        sb.append(\"LastModifiedTimestamp: \").append(getLastModifiedTimestamp()).append(\",\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.detachObject",
	"Comment": "detaches a given object from the parent object. the object that is to be detached from the parent is specified bythe link name.",
	"Method": "DetachObjectResult detachObject(DetachObjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDetachObject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.CreateCustomActionTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getProvider() != null)\r\n        sb.append(\"Provider: \").append(getProvider()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings()).append(\",\");\r\n    if (getConfigurationProperties() != null)\r\n        sb.append(\"ConfigurationProperties: \").append(getConfigurationProperties()).append(\",\");\r\n    if (getInputArtifactDetails() != null)\r\n        sb.append(\"InputArtifactDetails: \").append(getInputArtifactDetails()).append(\",\");\r\n    if (getOutputArtifactDetails() != null)\r\n        sb.append(\"OutputArtifactDetails: \").append(getOutputArtifactDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DefineAnalysisSchemeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAnalysisScheme() != null)\r\n        sb.append(\"AnalysisScheme: \").append(getAnalysisScheme());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.LogoutUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ListActionTypesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionOwnerFilter() != null)\r\n        sb.append(\"ActionOwnerFilter: \").append(getActionOwnerFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.BuildSuggestersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.ListTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.CreateApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.ArrayPropertiesDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatusSummary() != null)\r\n        sb.append(\"StatusSummary: \").append(getStatusSummary()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getIndex() != null)\r\n        sb.append(\"Index: \").append(getIndex());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.describeEnvironments",
	"Comment": "gets information about aws cloud9 development environments.",
	"Method": "DescribeEnvironmentsResult describeEnvironments(DescribeEnvironmentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEnvironments(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.AWSBatchClient.describeComputeEnvironments",
	"Comment": "describes one or more of your compute environments.if you are using an unmanaged compute environment, you can use the describecomputeenvironmentoperation to determine the ecsclusterarn that you should launch your amazon ecs container instancesinto.",
	"Method": "DescribeComputeEnvironmentsResult describeComputeEnvironments(DescribeComputeEnvironmentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeComputeEnvironments(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetCommentsForComparedCommitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getBeforeCommitId() != null)\r\n        sb.append(\"BeforeCommitId: \").append(getBeforeCommitId()).append(\",\");\r\n    if (getAfterCommitId() != null)\r\n        sb.append(\"AfterCommitId: \").append(getAfterCommitId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.waiters.GetDistributionFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "GetDistributionResult apply(GetDistributionRequest getDistributionRequest){\r\n    return client.getDistribution(getDistributionRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GetDeploymentGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentGroupInfo() != null)\r\n        sb.append(\"DeploymentGroupInfo: \").append(getDeploymentGroupInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.AmazonChimeClient.getAccount",
	"Comment": "retrieves details for the specified amazon chime account, such as account type and supported licenses.",
	"Method": "GetAccountResult getAccount(GetAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.StatusCodes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.GetStackPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackPolicyBody() != null)\r\n        sb.append(\"StackPolicyBody: \").append(getStackPolicyBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.BatchGetRepositoriesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryNames() != null)\r\n        sb.append(\"RepositoryNames: \").append(getRepositoryNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.model.ListEnvironmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getEnvironmentIds() != null)\r\n        sb.append(\"EnvironmentIds: \").append(getEnvironmentIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.NotificationWithSubscribers.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotification() != null)\r\n        sb.append(\"Notification: \").append(getNotification()).append(\",\");\r\n    if (getSubscribers() != null)\r\n        sb.append(\"Subscribers: \").append(getSubscribers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchDetachFromIndex.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexReference() != null)\r\n        sb.append(\"IndexReference: \").append(getIndexReference()).append(\",\");\r\n    if (getTargetReference() != null)\r\n        sb.append(\"TargetReference: \").append(getTargetReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdateCloudFrontOriginAccessIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudFrontOriginAccessIdentity() != null)\r\n        sb.append(\"CloudFrontOriginAccessIdentity: \").append(getCloudFrontOriginAccessIdentity()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.buildSuggesters",
	"Comment": "indexes the search suggestions. for more information, see configuring suggesters in the amazon cloudsearch developer guide.",
	"Method": "BuildSuggestersResult buildSuggesters(BuildSuggestersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeBuildSuggesters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.BatchGetProjectsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DescribeAlarmHistoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlarmName() != null)\r\n        sb.append(\"AlarmName: \").append(getAlarmName()).append(\",\");\r\n    if (getHistoryItemType() != null)\r\n        sb.append(\"HistoryItemType: \").append(getHistoryItemType()).append(\",\");\r\n    if (getStartDate() != null)\r\n        sb.append(\"StartDate: \").append(getStartDate()).append(\",\");\r\n    if (getEndDate() != null)\r\n        sb.append(\"EndDate: \").append(getEndDate()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.GetRepositoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.AmazonCloudFrontClient.getStreamingDistribution",
	"Comment": "gets information about a specified rtmp distribution, including the distribution configuration.",
	"Method": "GetStreamingDistributionResult getStreamingDistribution(GetStreamingDistributionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetStreamingDistribution(request);\r\n}"
}, {
	"Path": "com.amazonaws.codegen.protocol.BaseProtocolMetadataProvider.isIonProtocol",
	"Comment": "default is false, subclasses can override to indicate they are ion protocols.",
	"Method": "boolean isIonProtocol(){\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BatchGetApplicationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationsInfo() != null)\r\n        sb.append(\"ApplicationsInfo: \").append(getApplicationsInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CustomErrorResponses.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.UpdateDistributionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistribution() != null)\r\n        sb.append(\"Distribution: \").append(getDistribution()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.LinkAttributeUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeKey() != null)\r\n        sb.append(\"AttributeKey: \").append(getAttributeKey()).append(\",\");\r\n    if (getAttributeAction() != null)\r\n        sb.append(\"AttributeAction: \").append(getAttributeAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.ListInvalidationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDistributionId() != null)\r\n        sb.append(\"DistributionId: \").append(getDistributionId()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetTypedLinkFacetInformationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityAttributeOrder() != null)\r\n        sb.append(\"IdentityAttributeOrder: \").append(getIdentityAttributeOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.CreateClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getHsmType() != null)\r\n        sb.append(\"HsmType: \").append(getHsmType()).append(\",\");\r\n    if (getSourceBackupId() != null)\r\n        sb.append(\"SourceBackupId: \").append(getSourceBackupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.CreateComputeEnvironmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComputeEnvironmentName() != null)\r\n        sb.append(\"ComputeEnvironmentName: \").append(getComputeEnvironmentName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getComputeResources() != null)\r\n        sb.append(\"ComputeResources: \").append(getComputeResources()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.CloudWatchMetricConfig.setClientConfiguration",
	"Comment": "sets the client configuration. this clientconfiguration is used by the uploader thread to connect to amazon cloudwatch.",
	"Method": "void setClientConfiguration(ClientConfiguration clientConfiguration){\r\n    this.clientConfiguration = clientConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.AWSBudgetsClient.deleteSubscriber",
	"Comment": "deletes a subscriber.deleting the last subscriber to a notification also deletes the notification.",
	"Method": "DeleteSubscriberResult deleteSubscriber(DeleteSubscriberRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteSubscriber(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.GetSchemaAsJsonRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.IndexField.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexFieldName() != null)\r\n        sb.append(\"IndexFieldName: \").append(getIndexFieldName()).append(\",\");\r\n    if (getIndexFieldType() != null)\r\n        sb.append(\"IndexFieldType: \").append(getIndexFieldType()).append(\",\");\r\n    if (getIntOptions() != null)\r\n        sb.append(\"IntOptions: \").append(getIntOptions()).append(\",\");\r\n    if (getDoubleOptions() != null)\r\n        sb.append(\"DoubleOptions: \").append(getDoubleOptions()).append(\",\");\r\n    if (getLiteralOptions() != null)\r\n        sb.append(\"LiteralOptions: \").append(getLiteralOptions()).append(\",\");\r\n    if (getTextOptions() != null)\r\n        sb.append(\"TextOptions: \").append(getTextOptions()).append(\",\");\r\n    if (getDateOptions() != null)\r\n        sb.append(\"DateOptions: \").append(getDateOptions()).append(\",\");\r\n    if (getLatLonOptions() != null)\r\n        sb.append(\"LatLonOptions: \").append(getLatLonOptions()).append(\",\");\r\n    if (getIntArrayOptions() != null)\r\n        sb.append(\"IntArrayOptions: \").append(getIntArrayOptions()).append(\",\");\r\n    if (getDoubleArrayOptions() != null)\r\n        sb.append(\"DoubleArrayOptions: \").append(getDoubleArrayOptions()).append(\",\");\r\n    if (getLiteralArrayOptions() != null)\r\n        sb.append(\"LiteralArrayOptions: \").append(getLiteralArrayOptions()).append(\",\");\r\n    if (getTextArrayOptions() != null)\r\n        sb.append(\"TextArrayOptions: \").append(getTextArrayOptions()).append(\",\");\r\n    if (getDateArrayOptions() != null)\r\n        sb.append(\"DateArrayOptions: \").append(getDateArrayOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.waiters.GetInvalidationFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "GetInvalidationResult apply(GetInvalidationRequest getInvalidationRequest){\r\n    return client.getInvalidation(getInvalidationRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.S3Origin.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getOriginAccessIdentity() != null)\r\n        sb.append(\"OriginAccessIdentity: \").append(getOriginAccessIdentity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.putSchemaFromJson",
	"Comment": "allows a schema to be updated using json upload. only available for development schemas. see jsonschema format for more information.",
	"Method": "PutSchemaFromJsonResult putSchemaFromJson(PutSchemaFromJsonRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutSchemaFromJson(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazoncloudsearchasync using the current builder configuration.",
	"Method": "AmazonCloudSearchAsync build(AwsAsyncClientParams params){\r\n    return new AmazonCloudSearchAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.AWSCloudTrailAsyncClient.describeTrailsAsync",
	"Comment": "simplified method form for invoking the describetrails operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTrailsResult> describeTrailsAsync(DescribeTrailsRequest request,java.util.concurrent.Future<DescribeTrailsResult> describeTrailsAsync,DescribeTrailsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTrailsRequest, DescribeTrailsResult> asyncHandler,java.util.concurrent.Future<DescribeTrailsResult> describeTrailsAsync,java.util.concurrent.Future<DescribeTrailsResult> describeTrailsAsync,com.amazonaws.handlers.AsyncHandler<DescribeTrailsRequest, DescribeTrailsResult> asyncHandler){\r\n    return describeTrailsAsync(new DescribeTrailsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployAsyncClient.batchGetApplicationsAsync",
	"Comment": "simplified method form for invoking the batchgetapplications operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<BatchGetApplicationsResult> batchGetApplicationsAsync(BatchGetApplicationsRequest request,java.util.concurrent.Future<BatchGetApplicationsResult> batchGetApplicationsAsync,BatchGetApplicationsRequest request,com.amazonaws.handlers.AsyncHandler<BatchGetApplicationsRequest, BatchGetApplicationsResult> asyncHandler,java.util.concurrent.Future<BatchGetApplicationsResult> batchGetApplicationsAsync,java.util.concurrent.Future<BatchGetApplicationsResult> batchGetApplicationsAsync,com.amazonaws.handlers.AsyncHandler<BatchGetApplicationsRequest, BatchGetApplicationsResult> asyncHandler){\r\n    return batchGetApplicationsAsync(new BatchGetApplicationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.AmazonCloudSearchClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListObjectParentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParents() != null)\r\n        sb.append(\"Parents: \").append(getParents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getParentLinks() != null)\r\n        sb.append(\"ParentLinks: \").append(getParentLinks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.ListIdentitiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getHideDisabled() != null)\r\n        sb.append(\"HideDisabled: \").append(getHideDisabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codestar.AWSCodeStarClient.listProjects",
	"Comment": "lists all projects in aws codestar associated with your aws account.",
	"Method": "ListProjectsResult listProjects(ListProjectsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListProjects(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.DeleteBranchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeletedBranch() != null)\r\n        sb.append(\"DeletedBranch: \").append(getDeletedBranch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.InvalidationBatch.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPaths() != null)\r\n        sb.append(\"Paths: \").append(getPaths()).append(\",\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GitHubLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepository() != null)\r\n        sb.append(\"Repository: \").append(getRepository()).append(\",\");\r\n    if (getCommitId() != null)\r\n        sb.append(\"CommitId: \").append(getCommitId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsmv2.model.DeleteBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.UpdatePipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.LogsLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getDeepLink() != null)\r\n        sb.append(\"DeepLink: \").append(getDeepLink()).append(\",\");\r\n    if (getS3DeepLink() != null)\r\n        sb.append(\"S3DeepLink: \").append(getS3DeepLink()).append(\",\");\r\n    if (getCloudWatchLogs() != null)\r\n        sb.append(\"CloudWatchLogs: \").append(getCloudWatchLogs()).append(\",\");\r\n    if (getS3Logs() != null)\r\n        sb.append(\"S3Logs: \").append(getS3Logs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.JobDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobDefinitionName() != null)\r\n        sb.append(\"JobDefinitionName: \").append(getJobDefinitionName()).append(\",\");\r\n    if (getJobDefinitionArn() != null)\r\n        sb.append(\"JobDefinitionArn: \").append(getJobDefinitionArn()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getRetryStrategy() != null)\r\n        sb.append(\"RetryStrategy: \").append(getRetryStrategy()).append(\",\");\r\n    if (getContainerProperties() != null)\r\n        sb.append(\"ContainerProperties: \").append(getContainerProperties()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getNodeProperties() != null)\r\n        sb.append(\"NodeProperties: \").append(getNodeProperties());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codebuild.model.ListSourceCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceCredentialsInfos() != null)\r\n        sb.append(\"SourceCredentialsInfos: \").append(getSourceCredentialsInfos());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.LiteralOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceField() != null)\r\n        sb.append(\"SourceField: \").append(getSourceField()).append(\",\");\r\n    if (getFacetEnabled() != null)\r\n        sb.append(\"FacetEnabled: \").append(getFacetEnabled()).append(\",\");\r\n    if (getSearchEnabled() != null)\r\n        sb.append(\"SearchEnabled: \").append(getSearchEnabled()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled()).append(\",\");\r\n    if (getSortEnabled() != null)\r\n        sb.append(\"SortEnabled: \").append(getSortEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.DeleteNotificationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListDevelopmentSchemaArnsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArns() != null)\r\n        sb.append(\"SchemaArns: \").append(getSchemaArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeAnalysisSchemesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAnalysisSchemes() != null)\r\n        sb.append(\"AnalysisSchemes: \").append(getAnalysisSchemes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.ListDashboardsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDashboardNamePrefix() != null)\r\n        sb.append(\"DashboardNamePrefix: \").append(getDashboardNamePrefix()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.LatLonOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceField() != null)\r\n        sb.append(\"SourceField: \").append(getSourceField()).append(\",\");\r\n    if (getFacetEnabled() != null)\r\n        sb.append(\"FacetEnabled: \").append(getFacetEnabled()).append(\",\");\r\n    if (getSearchEnabled() != null)\r\n        sb.append(\"SearchEnabled: \").append(getSearchEnabled()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled()).append(\",\");\r\n    if (getSortEnabled() != null)\r\n        sb.append(\"SortEnabled: \").append(getSortEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AddFacetToObjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchListPolicyAttachmentsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectIdentifiers() != null)\r\n        sb.append(\"ObjectIdentifiers: \").append(getObjectIdentifiers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchAttachTypedLink.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceObjectReference() != null)\r\n        sb.append(\"SourceObjectReference: \").append(getSourceObjectReference()).append(\",\");\r\n    if (getTargetObjectReference() != null)\r\n        sb.append(\"TargetObjectReference: \").append(getTargetObjectReference()).append(\",\");\r\n    if (getTypedLinkFacet() != null)\r\n        sb.append(\"TypedLinkFacet: \").append(getTypedLinkFacet()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.CreateDeploymentConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentConfigId() != null)\r\n        sb.append(\"DeploymentConfigId: \").append(getDeploymentConfigId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchReadSuccessfulResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListObjectAttributes() != null)\r\n        sb.append(\"ListObjectAttributes: \").append(getListObjectAttributes()).append(\",\");\r\n    if (getListObjectChildren() != null)\r\n        sb.append(\"ListObjectChildren: \").append(getListObjectChildren()).append(\",\");\r\n    if (getGetObjectInformation() != null)\r\n        sb.append(\"GetObjectInformation: \").append(getGetObjectInformation()).append(\",\");\r\n    if (getGetObjectAttributes() != null)\r\n        sb.append(\"GetObjectAttributes: \").append(getGetObjectAttributes()).append(\",\");\r\n    if (getListAttachedIndices() != null)\r\n        sb.append(\"ListAttachedIndices: \").append(getListAttachedIndices()).append(\",\");\r\n    if (getListObjectParentPaths() != null)\r\n        sb.append(\"ListObjectParentPaths: \").append(getListObjectParentPaths()).append(\",\");\r\n    if (getListObjectPolicies() != null)\r\n        sb.append(\"ListObjectPolicies: \").append(getListObjectPolicies()).append(\",\");\r\n    if (getListPolicyAttachments() != null)\r\n        sb.append(\"ListPolicyAttachments: \").append(getListPolicyAttachments()).append(\",\");\r\n    if (getLookupPolicy() != null)\r\n        sb.append(\"LookupPolicy: \").append(getLookupPolicy()).append(\",\");\r\n    if (getListIndex() != null)\r\n        sb.append(\"ListIndex: \").append(getListIndex()).append(\",\");\r\n    if (getListOutgoingTypedLinks() != null)\r\n        sb.append(\"ListOutgoingTypedLinks: \").append(getListOutgoingTypedLinks()).append(\",\");\r\n    if (getListIncomingTypedLinks() != null)\r\n        sb.append(\"ListIncomingTypedLinks: \").append(getListIncomingTypedLinks()).append(\",\");\r\n    if (getGetLinkAttributes() != null)\r\n        sb.append(\"GetLinkAttributes: \").append(getGetLinkAttributes()).append(\",\");\r\n    if (getListObjectParents() != null)\r\n        sb.append(\"ListObjectParents: \").append(getListObjectParents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.ListImportsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImports() != null)\r\n        sb.append(\"Imports: \").append(getImports()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.metrics.internal.cloudwatch.BlockingRequestBuilder.toPutMetricDataRequests",
	"Comment": "consolidates the input metrics into a list of putmetricdatarequest, eachwithin the maximum size limit imposed by cloudwatch.",
	"Method": "Iterable<PutMetricDataRequest> toPutMetricDataRequests(Map<String, MetricDatum> uniqueMetrics){\r\n    for (MetricDatum datum : machineMetricFactory.generateMetrics()) {\r\n        summarize(datum, uniqueMetrics);\r\n    }\r\n    List<PutMetricDataRequest> list = new ArrayList<PutMetricDataRequest>();\r\n    List<MetricDatum> data = new ArrayList<MetricDatum>();\r\n    for (MetricDatum m : uniqueMetrics.values()) {\r\n        data.add(m);\r\n        if (data.size() == CloudWatchMetricConfig.MAX_METRICS_DATUM_SIZE) {\r\n            list.addAll(newPutMetricDataRequests(data));\r\n            data.clear();\r\n        }\r\n    }\r\n    if (data.size() > 0) {\r\n        list.addAll(newPutMetricDataRequests(data));\r\n    }\r\n    return list;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.FieldLevelEncryptionProfileConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getEncryptionEntities() != null)\r\n        sb.append(\"EncryptionEntities: \").append(getEncryptionEntities());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.DescribeAvailabilityOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getDeployed() != null)\r\n        sb.append(\"Deployed: \").append(getDeployed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.SourceRevision.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionName() != null)\r\n        sb.append(\"ActionName: \").append(getActionName()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getRevisionSummary() != null)\r\n        sb.append(\"RevisionSummary: \").append(getRevisionSummary()).append(\",\");\r\n    if (getRevisionUrl() != null)\r\n        sb.append(\"RevisionUrl: \").append(getRevisionUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.UpdateScalingPlanRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlanName() != null)\r\n        sb.append(\"ScalingPlanName: \").append(getScalingPlanName()).append(\",\");\r\n    if (getScalingPlanVersion() != null)\r\n        sb.append(\"ScalingPlanVersion: \").append(getScalingPlanVersion()).append(\",\");\r\n    if (getApplicationSource() != null)\r\n        sb.append(\"ApplicationSource: \").append(getApplicationSource()).append(\",\");\r\n    if (getScalingInstructions() != null)\r\n        sb.append(\"ScalingInstructions: \").append(getScalingInstructions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListManagedSchemaArnsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArns() != null)\r\n        sb.append(\"SchemaArns: \").append(getSchemaArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.AmazonCognitoIdentityClient.listIdentityPools",
	"Comment": "lists all of the cognito identity pools registered for your account.you must use aws developer credentials to call this api.",
	"Method": "ListIdentityPoolsResult listIdentityPools(ListIdentityPoolsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListIdentityPools(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.QueryArgProfileConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getForwardWhenQueryArgProfileIsUnknown() != null)\r\n        sb.append(\"ForwardWhenQueryArgProfileIsUnknown: \").append(getForwardWhenQueryArgProfileIsUnknown()).append(\",\");\r\n    if (getQueryArgProfiles() != null)\r\n        sb.append(\"QueryArgProfiles: \").append(getQueryArgProfiles());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.GetDashboardResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDashboardArn() != null)\r\n        sb.append(\"DashboardArn: \").append(getDashboardArn()).append(\",\");\r\n    if (getDashboardBody() != null)\r\n        sb.append(\"DashboardBody: \").append(getDashboardBody()).append(\",\");\r\n    if (getDashboardName() != null)\r\n        sb.append(\"DashboardName: \").append(getDashboardName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscaling.model.UpdateAutoScalingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoScalingGroupName() != null)\r\n        sb.append(\"AutoScalingGroupName: \").append(getAutoScalingGroupName()).append(\",\");\r\n    if (getLaunchConfigurationName() != null)\r\n        sb.append(\"LaunchConfigurationName: \").append(getLaunchConfigurationName()).append(\",\");\r\n    if (getLaunchTemplate() != null)\r\n        sb.append(\"LaunchTemplate: \").append(getLaunchTemplate()).append(\",\");\r\n    if (getMixedInstancesPolicy() != null)\r\n        sb.append(\"MixedInstancesPolicy: \").append(getMixedInstancesPolicy()).append(\",\");\r\n    if (getMinSize() != null)\r\n        sb.append(\"MinSize: \").append(getMinSize()).append(\",\");\r\n    if (getMaxSize() != null)\r\n        sb.append(\"MaxSize: \").append(getMaxSize()).append(\",\");\r\n    if (getDesiredCapacity() != null)\r\n        sb.append(\"DesiredCapacity: \").append(getDesiredCapacity()).append(\",\");\r\n    if (getDefaultCooldown() != null)\r\n        sb.append(\"DefaultCooldown: \").append(getDefaultCooldown()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getHealthCheckType() != null)\r\n        sb.append(\"HealthCheckType: \").append(getHealthCheckType()).append(\",\");\r\n    if (getHealthCheckGracePeriod() != null)\r\n        sb.append(\"HealthCheckGracePeriod: \").append(getHealthCheckGracePeriod()).append(\",\");\r\n    if (getPlacementGroup() != null)\r\n        sb.append(\"PlacementGroup: \").append(getPlacementGroup()).append(\",\");\r\n    if (getVPCZoneIdentifier() != null)\r\n        sb.append(\"VPCZoneIdentifier: \").append(getVPCZoneIdentifier()).append(\",\");\r\n    if (getTerminationPolicies() != null)\r\n        sb.append(\"TerminationPolicies: \").append(getTerminationPolicies()).append(\",\");\r\n    if (getNewInstancesProtectedFromScaleIn() != null)\r\n        sb.append(\"NewInstancesProtectedFromScaleIn: \").append(getNewInstancesProtectedFromScaleIn()).append(\",\");\r\n    if (getServiceLinkedRoleARN() != null)\r\n        sb.append(\"ServiceLinkedRoleARN: \").append(getServiceLinkedRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.getTypedLinkFacetInformation",
	"Comment": "returns the identity attribute order for a specific typedlinkfacet. for more information, see typed links.",
	"Method": "GetTypedLinkFacetInformationResult getTypedLinkFacetInformation(GetTypedLinkFacetInformationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTypedLinkFacetInformation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchv2.model.IntArrayOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getSourceFields() != null)\r\n        sb.append(\"SourceFields: \").append(getSourceFields()).append(\",\");\r\n    if (getFacetEnabled() != null)\r\n        sb.append(\"FacetEnabled: \").append(getFacetEnabled()).append(\",\");\r\n    if (getSearchEnabled() != null)\r\n        sb.append(\"SearchEnabled: \").append(getSearchEnabled()).append(\",\");\r\n    if (getReturnEnabled() != null)\r\n        sb.append(\"ReturnEnabled: \").append(getReturnEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ObjectAttributeAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectAttributeActionType() != null)\r\n        sb.append(\"ObjectAttributeActionType: \").append(getObjectAttributeActionType()).append(\",\");\r\n    if (getObjectAttributeUpdateValue() != null)\r\n        sb.append(\"ObjectAttributeUpdateValue: \").append(getObjectAttributeUpdateValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.CreateSubscriberResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.BranchInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBranchName() != null)\r\n        sb.append(\"BranchName: \").append(getBranchName()).append(\",\");\r\n    if (getCommitId() != null)\r\n        sb.append(\"CommitId: \").append(getCommitId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.AmazonCloudDirectoryClient.listIncomingTypedLinks",
	"Comment": "returns a paginated list of all the incoming typedlinkspecifier information for an object. it alsosupports filtering by typed link facet and identity attributes. for more information, see typed links.",
	"Method": "ListIncomingTypedLinksResult listIncomingTypedLinks(ListIncomingTypedLinksRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListIncomingTypedLinks(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.waiters.DescribeAlarmsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeAlarmsResult apply(DescribeAlarmsRequest describeAlarmsRequest){\r\n    return client.describeAlarms(describeAlarmsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.CreateObjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectIdentifier() != null)\r\n        sb.append(\"ObjectIdentifier: \").append(getObjectIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.StackDriftInformationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackDriftStatus() != null)\r\n        sb.append(\"StackDriftStatus: \").append(getStackDriftStatus()).append(\",\");\r\n    if (getLastCheckTimestamp() != null)\r\n        sb.append(\"LastCheckTimestamp: \").append(getLastCheckTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.GetUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.BlueInstanceTerminationOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getTerminationWaitTimeInMinutes() != null)\r\n        sb.append(\"TerminationWaitTimeInMinutes: \").append(getTerminationWaitTimeInMinutes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.DescribeScalingPlanResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPlanName() != null)\r\n        sb.append(\"ScalingPlanName: \").append(getScalingPlanName()).append(\",\");\r\n    if (getScalingPlanVersion() != null)\r\n        sb.append(\"ScalingPlanVersion: \").append(getScalingPlanVersion()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetFieldLevelEncryptionProfileConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListObjectAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.AWSCodeCommitClient.putRepositoryTriggers",
	"Comment": "replaces all triggers for a repository. this can be used to create or delete triggers.",
	"Method": "PutRepositoryTriggersResult putRepositoryTriggers(PutRepositoryTriggersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutRepositoryTriggers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AmazonCodeDeployClient.listDeploymentConfigs",
	"Comment": "lists the deployment configurations with the applicable iam user or aws account.",
	"Method": "ListDeploymentConfigsResult listDeploymentConfigs(ListDeploymentConfigsRequest request,ListDeploymentConfigsResult listDeploymentConfigs){\r\n    return listDeploymentConfigs(new ListDeploymentConfigsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudtrail.model.ResourceTag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTagsList() != null)\r\n        sb.append(\"TagsList: \").append(getTagsList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.AWSCodePipelineClient.listPipelines",
	"Comment": "gets a summary of all of the pipelines associated with your account.",
	"Method": "ListPipelinesResult listPipelines(ListPipelinesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListPipelines(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchUpdateObjectAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getAttributeUpdates() != null)\r\n        sb.append(\"AttributeUpdates: \").append(getAttributeUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.chime.model.UpdateUserRequestItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getLicenseType() != null)\r\n        sb.append(\"LicenseType: \").append(getLicenseType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpdateTypedLinkFacetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttributeUpdates() != null)\r\n        sb.append(\"AttributeUpdates: \").append(getAttributeUpdates()).append(\",\");\r\n    if (getIdentityAttributeOrder() != null)\r\n        sb.append(\"IdentityAttributeOrder: \").append(getIdentityAttributeOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codecommit.model.ListBranchesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cognitoidentity.model.ListIdentitiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getIdentities() != null)\r\n        sb.append(\"Identities: \").append(getIdentities()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DeregisterJobDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobDefinition() != null)\r\n        sb.append(\"JobDefinition: \").append(getJobDefinition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ListPipelinesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelines() != null)\r\n        sb.append(\"Pipelines: \").append(getPipelines()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.DescribeJobDefinitionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobDefinitions() != null)\r\n        sb.append(\"JobDefinitions: \").append(getJobDefinitions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.budgets.model.UpdateNotificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getBudgetName() != null)\r\n        sb.append(\"BudgetName: \").append(getBudgetName()).append(\",\");\r\n    if (getOldNotification() != null)\r\n        sb.append(\"OldNotification: \").append(getOldNotification()).append(\",\");\r\n    if (getNewNotification() != null)\r\n        sb.append(\"NewNotification: \").append(getNewNotification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudsearchdomain.model.DocumentServiceWarning.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.S3Location.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getBundleType() != null)\r\n        sb.append(\"BundleType: \").append(getBundleType()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.autoscalingplans.model.TargetTrackingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPredefinedScalingMetricSpecification() != null)\r\n        sb.append(\"PredefinedScalingMetricSpecification: \").append(getPredefinedScalingMetricSpecification()).append(\",\");\r\n    if (getCustomizedScalingMetricSpecification() != null)\r\n        sb.append(\"CustomizedScalingMetricSpecification: \").append(getCustomizedScalingMetricSpecification()).append(\",\");\r\n    if (getTargetValue() != null)\r\n        sb.append(\"TargetValue: \").append(getTargetValue()).append(\",\");\r\n    if (getDisableScaleIn() != null)\r\n        sb.append(\"DisableScaleIn: \").append(getDisableScaleIn()).append(\",\");\r\n    if (getScaleOutCooldown() != null)\r\n        sb.append(\"ScaleOutCooldown: \").append(getScaleOutCooldown()).append(\",\");\r\n    if (getScaleInCooldown() != null)\r\n        sb.append(\"ScaleInCooldown: \").append(getScaleInCooldown()).append(\",\");\r\n    if (getEstimatedInstanceWarmup() != null)\r\n        sb.append(\"EstimatedInstanceWarmup: \").append(getEstimatedInstanceWarmup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ListObjectChildrenRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn()).append(\",\");\r\n    if (getObjectReference() != null)\r\n        sb.append(\"ObjectReference: \").append(getObjectReference()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getConsistencyLevel() != null)\r\n        sb.append(\"ConsistencyLevel: \").append(getConsistencyLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.CreateStackInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName()).append(\",\");\r\n    if (getAccounts() != null)\r\n        sb.append(\"Accounts: \").append(getAccounts()).append(\",\");\r\n    if (getRegions() != null)\r\n        sb.append(\"Regions: \").append(getRegions()).append(\",\");\r\n    if (getParameterOverrides() != null)\r\n        sb.append(\"ParameterOverrides: \").append(getParameterOverrides()).append(\",\");\r\n    if (getOperationPreferences() != null)\r\n        sb.append(\"OperationPreferences: \").append(getOperationPreferences()).append(\",\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.AttributeNameAndValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.DescribeAlarmsForMetricResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricAlarms() != null)\r\n        sb.append(\"MetricAlarms: \").append(getMetricAlarms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.ApplySchemaResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAppliedSchemaArn() != null)\r\n        sb.append(\"AppliedSchemaArn: \").append(getAppliedSchemaArn()).append(\",\");\r\n    if (getDirectoryArn() != null)\r\n        sb.append(\"DirectoryArn: \").append(getDirectoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchUpdateLinkAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTypedLinkSpecifier() != null)\r\n        sb.append(\"TypedLinkSpecifier: \").append(getTypedLinkSpecifier()).append(\",\");\r\n    if (getAttributeUpdates() != null)\r\n        sb.append(\"AttributeUpdates: \").append(getAttributeUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.AbstractAmazonCodeDeployAsync.updateApplicationAsync",
	"Comment": "simplified method form for invoking the updateapplication operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<UpdateApplicationResult> updateApplicationAsync(UpdateApplicationRequest request,java.util.concurrent.Future<UpdateApplicationResult> updateApplicationAsync,UpdateApplicationRequest request,com.amazonaws.handlers.AsyncHandler<UpdateApplicationRequest, UpdateApplicationResult> asyncHandler,java.util.concurrent.Future<UpdateApplicationResult> updateApplicationAsync,java.util.concurrent.Future<UpdateApplicationResult> updateApplicationAsync,com.amazonaws.handlers.AsyncHandler<UpdateApplicationRequest, UpdateApplicationResult> asyncHandler){\r\n    return updateApplicationAsync(new UpdateApplicationRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.deleteEnvironmentMembership",
	"Comment": "deletes an environment member from an aws cloud9 development environment.",
	"Method": "DeleteEnvironmentMembershipResult deleteEnvironmentMembership(DeleteEnvironmentMembershipRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteEnvironmentMembership(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.codedeploy.model.GreenFleetProvisioningOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.DescribeStackSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSetName() != null)\r\n        sb.append(\"StackSetName: \").append(getStackSetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchReadException.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.GetCloudFrontOriginAccessIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudFrontOriginAccessIdentity() != null)\r\n        sb.append(\"CloudFrontOriginAccessIdentity: \").append(getCloudFrontOriginAccessIdentity()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloud9.AWSCloud9Client.describeEnvironmentMemberships",
	"Comment": "gets information about environment members for an aws cloud9 development environment.",
	"Method": "DescribeEnvironmentMembershipsResult describeEnvironmentMemberships(DescribeEnvironmentMembershipsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEnvironmentMemberships(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.AmazonCloudFormationAsyncClient.describeStacksAsync",
	"Comment": "simplified method form for invoking the describestacks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeStacksResult> describeStacksAsync(DescribeStacksRequest request,java.util.concurrent.Future<DescribeStacksResult> describeStacksAsync,DescribeStacksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeStacksRequest, DescribeStacksResult> asyncHandler,java.util.concurrent.Future<DescribeStacksResult> describeStacksAsync,java.util.concurrent.Future<DescribeStacksResult> describeStacksAsync,com.amazonaws.handlers.AsyncHandler<DescribeStacksRequest, DescribeStacksResult> asyncHandler){\r\n    return describeStacksAsync(new DescribeStacksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudformation.model.Output.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutputKey() != null)\r\n        sb.append(\"OutputKey: \").append(getOutputKey()).append(\",\");\r\n    if (getOutputValue() != null)\r\n        sb.append(\"OutputValue: \").append(getOutputValue()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getExportName() != null)\r\n        sb.append(\"ExportName: \").append(getExportName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.UpdateFacetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaArn() != null)\r\n        sb.append(\"SchemaArn: \").append(getSchemaArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttributeUpdates() != null)\r\n        sb.append(\"AttributeUpdates: \").append(getAttributeUpdates()).append(\",\");\r\n    if (getObjectType() != null)\r\n        sb.append(\"ObjectType: \").append(getObjectType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.util.SignerUtils.generateResourcePath",
	"Comment": "returns the resource path for the given distribution, object, andprotocol.",
	"Method": "String generateResourcePath(Protocol protocol,String distributionDomain,String resourcePath){\r\n    return protocol == Protocol.http || protocol == Protocol.https ? protocol + \"://\" + distributionDomain + \"/\" + resourcePath : resourcePath;\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.model.PutMetricAlarmResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.codepipeline.model.ActionState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionName() != null)\r\n        sb.append(\"ActionName: \").append(getActionName()).append(\",\");\r\n    if (getCurrentRevision() != null)\r\n        sb.append(\"CurrentRevision: \").append(getCurrentRevision()).append(\",\");\r\n    if (getLatestExecution() != null)\r\n        sb.append(\"LatestExecution: \").append(getLatestExecution()).append(\",\");\r\n    if (getEntityUrl() != null)\r\n        sb.append(\"EntityUrl: \").append(getEntityUrl()).append(\",\");\r\n    if (getRevisionUrl() != null)\r\n        sb.append(\"RevisionUrl: \").append(getRevisionUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudfront.model.CreateFieldLevelEncryptionProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFieldLevelEncryptionProfile() != null)\r\n        sb.append(\"FieldLevelEncryptionProfile: \").append(getFieldLevelEncryptionProfile()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.AbstractAWSCloudHSMAsync.listHsmsAsync",
	"Comment": "simplified method form for invoking the listhsms operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListHsmsResult> listHsmsAsync(ListHsmsRequest request,java.util.concurrent.Future<ListHsmsResult> listHsmsAsync,ListHsmsRequest request,com.amazonaws.handlers.AsyncHandler<ListHsmsRequest, ListHsmsResult> asyncHandler,java.util.concurrent.Future<ListHsmsResult> listHsmsAsync,java.util.concurrent.Future<ListHsmsResult> listHsmsAsync,com.amazonaws.handlers.AsyncHandler<ListHsmsRequest, ListHsmsResult> asyncHandler){\r\n    return listHsmsAsync(new ListHsmsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatch.AmazonCloudWatchClient.deleteDashboards",
	"Comment": "deletes all dashboards that you specify. you may specify up to 100 dashboards to delete. if there is an errorduring this call, no dashboards are deleted.",
	"Method": "DeleteDashboardsResult deleteDashboards(DeleteDashboardsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDashboards(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.clouddirectory.model.BatchGetLinkAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTypedLinkSpecifier() != null)\r\n        sb.append(\"TypedLinkSpecifier: \").append(getTypedLinkSpecifier()).append(\",\");\r\n    if (getAttributeNames() != null)\r\n        sb.append(\"AttributeNames: \").append(getAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudhsm.model.ListLunaClientsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.batch.model.LaunchTemplateSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}]