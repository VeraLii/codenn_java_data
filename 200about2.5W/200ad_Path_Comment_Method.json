[{
	"Path": "com.amazonaws.services.ec2.model.CreateVpcEndpointServiceConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceptanceRequired() != null)\r\n        sb.append(\"AcceptanceRequired: \").append(getAcceptanceRequired()).append(\",\");\r\n    if (getNetworkLoadBalancerArns() != null)\r\n        sb.append(\"NetworkLoadBalancerArns: \").append(getNetworkLoadBalancerArns()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.describeCacheParameterGroupsAsync",
	"Comment": "simplified method form for invoking the describecacheparametergroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCacheParameterGroupsResult> describeCacheParameterGroupsAsync(DescribeCacheParameterGroupsRequest request,java.util.concurrent.Future<DescribeCacheParameterGroupsResult> describeCacheParameterGroupsAsync,DescribeCacheParameterGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCacheParameterGroupsRequest, DescribeCacheParameterGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeCacheParameterGroupsResult> describeCacheParameterGroupsAsync,java.util.concurrent.Future<DescribeCacheParameterGroupsResult> describeCacheParameterGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeCacheParameterGroupsRequest, DescribeCacheParameterGroupsResult> asyncHandler){\r\n    return describeCacheParameterGroupsAsync(new DescribeCacheParameterGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.discoverPollEndpointAsync",
	"Comment": "simplified method form for invoking the discoverpollendpoint operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DiscoverPollEndpointResult> discoverPollEndpointAsync(DiscoverPollEndpointRequest request,java.util.concurrent.Future<DiscoverPollEndpointResult> discoverPollEndpointAsync,DiscoverPollEndpointRequest request,com.amazonaws.handlers.AsyncHandler<DiscoverPollEndpointRequest, DiscoverPollEndpointResult> asyncHandler,java.util.concurrent.Future<DiscoverPollEndpointResult> discoverPollEndpointAsync,java.util.concurrent.Future<DiscoverPollEndpointResult> discoverPollEndpointAsync,com.amazonaws.handlers.AsyncHandler<DiscoverPollEndpointRequest, DiscoverPollEndpointResult> asyncHandler){\r\n    return discoverPollEndpointAsync(new DiscoverPollEndpointRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeReservedInstancesModificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getReservedInstancesModifications() != null)\r\n        sb.append(\"ReservedInstancesModifications: \").append(getReservedInstancesModifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.RestartAppServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createTransitGatewayVpcAttachment",
	"Comment": "attaches the specified vpc to the specified transit gateway.if you attach a vpc with a cidr range that overlaps the cidr range of a vpc that is already attached, the new vpccidr range is not propagated to the default propagation route table.to send vpc traffic to an attached transit gateway, add a route to the vpc route table using createroute.",
	"Method": "CreateTransitGatewayVpcAttachmentResult createTransitGatewayVpcAttachment(CreateTransitGatewayVpcAttachmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateTransitGatewayVpcAttachment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteTransitGatewayRouteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeleteAccountSettingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPrincipalArn() != null)\r\n        sb.append(\"PrincipalArn: \").append(getPrincipalArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getSnapshots() != null)\r\n        sb.append(\"Snapshots: \").append(getSnapshots());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DeleteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableDescription() != null)\r\n        sb.append(\"TableDescription: \").append(getTableDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.HostInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeScheduledInstanceAvailability",
	"Comment": "finds available schedules that meet the specified criteria.you can search for an available schedule no more than 3 months in advance. you must meet the minimum requiredduration of 1,200 hours per year. for example, the minimum daily schedule is 4 hours, the minimum weekly scheduleis 24 hours, and the minimum monthly schedule is 100 hours.after you find a schedule that meets your needs, call purchasescheduledinstances to purchase scheduledinstances with that schedule.",
	"Method": "DescribeScheduledInstanceAvailabilityResult describeScheduledInstanceAvailability(DescribeScheduledInstanceAvailabilityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeScheduledInstanceAvailability(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Snapshot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataEncryptionKeyId() != null)\r\n        sb.append(\"DataEncryptionKeyId: \").append(getDataEncryptionKeyId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getProgress() != null)\r\n        sb.append(\"Progress: \").append(getProgress()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateMessage() != null)\r\n        sb.append(\"StateMessage: \").append(getStateMessage()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getVolumeSize() != null)\r\n        sb.append(\"VolumeSize: \").append(getVolumeSize()).append(\",\");\r\n    if (getOwnerAlias() != null)\r\n        sb.append(\"OwnerAlias: \").append(getOwnerAlias()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getLoadBalancerPorts() != null)\r\n        sb.append(\"LoadBalancerPorts: \").append(getLoadBalancerPorts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationStrategy() != null)\r\n        sb.append(\"AllocationStrategy: \").append(getAllocationStrategy()).append(\",\");\r\n    if (getInstanceInterruptionBehavior() != null)\r\n        sb.append(\"InstanceInterruptionBehavior: \").append(getInstanceInterruptionBehavior()).append(\",\");\r\n    if (getInstancePoolsToUseCount() != null)\r\n        sb.append(\"InstancePoolsToUseCount: \").append(getInstancePoolsToUseCount()).append(\",\");\r\n    if (getSingleInstanceType() != null)\r\n        sb.append(\"SingleInstanceType: \").append(getSingleInstanceType()).append(\",\");\r\n    if (getMinTargetCapacity() != null)\r\n        sb.append(\"MinTargetCapacity: \").append(getMinTargetCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ExpectedAttributeValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getExists() != null)\r\n        sb.append(\"Exists: \").append(getExists()).append(\",\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getAttributeValueList() != null)\r\n        sb.append(\"AttributeValueList: \").append(getAttributeValueList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FleetLaunchTemplateOverrides.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getMaxPrice() != null)\r\n        sb.append(\"MaxPrice: \").append(getMaxPrice()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getWeightedCapacity() != null)\r\n        sb.append(\"WeightedCapacity: \").append(getWeightedCapacity()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheEngineVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getCacheParameterGroupFamily() != null)\r\n        sb.append(\"CacheParameterGroupFamily: \").append(getCacheParameterGroupFamily()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDefaultOnly() != null)\r\n        sb.append(\"DefaultOnly: \").append(getDefaultOnly());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeReservedInstancesModificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getReservedInstancesModificationIds() != null)\r\n        sb.append(\"ReservedInstancesModificationIds: \").append(getReservedInstancesModificationIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withLong",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withLong(String attrName,long val){\r\n    checkInvalidAttrName(attrName);\r\n    return withNumber(attrName, Long.valueOf(val));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribePublicIpv4PoolsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPoolIds() != null)\r\n        sb.append(\"PoolIds: \").append(getPoolIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DeletePlatformVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatformSummary() != null)\r\n        sb.append(\"PlatformSummary: \").append(getPlatformSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.Subnet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIdentifier() != null)\r\n        sb.append(\"SubnetIdentifier: \").append(getSubnetIdentifier()).append(\",\");\r\n    if (getSubnetAvailabilityZone() != null)\r\n        sb.append(\"SubnetAvailabilityZone: \").append(getSubnetAvailabilityZone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.clearExpressionAttributeValuesEntries",
	"Comment": "removes all the entries added into expressionattributevalues.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DynamoDBQueryExpression<T> clearExpressionAttributeValuesEntries(){\r\n    this.expressionAttributeValues = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstanceAvailability.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getAvailableInstanceCount() != null)\r\n        sb.append(\"AvailableInstanceCount: \").append(getAvailableInstanceCount()).append(\",\");\r\n    if (getFirstSlotStartTime() != null)\r\n        sb.append(\"FirstSlotStartTime: \").append(getFirstSlotStartTime()).append(\",\");\r\n    if (getHourlyPrice() != null)\r\n        sb.append(\"HourlyPrice: \").append(getHourlyPrice()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getMaxTermDurationInDays() != null)\r\n        sb.append(\"MaxTermDurationInDays: \").append(getMaxTermDurationInDays()).append(\",\");\r\n    if (getMinTermDurationInDays() != null)\r\n        sb.append(\"MinTermDurationInDays: \").append(getMinTermDurationInDays()).append(\",\");\r\n    if (getNetworkPlatform() != null)\r\n        sb.append(\"NetworkPlatform: \").append(getNetworkPlatform()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getPurchaseToken() != null)\r\n        sb.append(\"PurchaseToken: \").append(getPurchaseToken()).append(\",\");\r\n    if (getRecurrence() != null)\r\n        sb.append(\"Recurrence: \").append(getRecurrence()).append(\",\");\r\n    if (getSlotDurationInHours() != null)\r\n        sb.append(\"SlotDurationInHours: \").append(getSlotDurationInHours()).append(\",\");\r\n    if (getTotalScheduledInstanceHours() != null)\r\n        sb.append(\"TotalScheduledInstanceHours: \").append(getTotalScheduledInstanceHours());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TerminateInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ContinuousBackupsDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContinuousBackupsStatus() != null)\r\n        sb.append(\"ContinuousBackupsStatus: \").append(getContinuousBackupsStatus()).append(\",\");\r\n    if (getPointInTimeRecoveryDescription() != null)\r\n        sb.append(\"PointInTimeRecoveryDescription: \").append(getPointInTimeRecoveryDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ModifyCacheClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getNumCacheNodes() != null)\r\n        sb.append(\"NumCacheNodes: \").append(getNumCacheNodes()).append(\",\");\r\n    if (getCacheNodeIdsToRemove() != null)\r\n        sb.append(\"CacheNodeIdsToRemove: \").append(getCacheNodeIdsToRemove()).append(\",\");\r\n    if (getAZMode() != null)\r\n        sb.append(\"AZMode: \").append(getAZMode()).append(\",\");\r\n    if (getNewAvailabilityZones() != null)\r\n        sb.append(\"NewAvailabilityZones: \").append(getNewAvailabilityZones()).append(\",\");\r\n    if (getCacheSecurityGroupNames() != null)\r\n        sb.append(\"CacheSecurityGroupNames: \").append(getCacheSecurityGroupNames()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getNotificationTopicArn() != null)\r\n        sb.append(\"NotificationTopicArn: \").append(getNotificationTopicArn()).append(\",\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getNotificationTopicStatus() != null)\r\n        sb.append(\"NotificationTopicStatus: \").append(getNotificationTopicStatus()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getSnapshotRetentionLimit() != null)\r\n        sb.append(\"SnapshotRetentionLimit: \").append(getSnapshotRetentionLimit()).append(\",\");\r\n    if (getSnapshotWindow() != null)\r\n        sb.append(\"SnapshotWindow: \").append(getSnapshotWindow()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeAggregateIdFormatResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUseLongIdsAggregated() != null)\r\n        sb.append(\"UseLongIdsAggregated: \").append(getUseLongIdsAggregated()).append(\",\");\r\n    if (getStatuses() != null)\r\n        sb.append(\"Statuses: \").append(getStatuses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ValidateConfigurationSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyIdentityIdFormatResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.waiters.DescribeCacheClustersFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeCacheClustersResult apply(DescribeCacheClustersRequest describeCacheClustersRequest){\r\n    return client.describeCacheClusters(describeCacheClustersRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.TestConnectionFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "TestConnectionResult apply(TestConnectionRequest testConnectionRequest){\r\n    return client.testConnection(testConnectionRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.SystemControl.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.Snapshot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName()).append(\",\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getReplicationGroupDescription() != null)\r\n        sb.append(\"ReplicationGroupDescription: \").append(getReplicationGroupDescription()).append(\",\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getSnapshotStatus() != null)\r\n        sb.append(\"SnapshotStatus: \").append(getSnapshotStatus()).append(\",\");\r\n    if (getSnapshotSource() != null)\r\n        sb.append(\"SnapshotSource: \").append(getSnapshotSource()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getNumCacheNodes() != null)\r\n        sb.append(\"NumCacheNodes: \").append(getNumCacheNodes()).append(\",\");\r\n    if (getPreferredAvailabilityZone() != null)\r\n        sb.append(\"PreferredAvailabilityZone: \").append(getPreferredAvailabilityZone()).append(\",\");\r\n    if (getCacheClusterCreateTime() != null)\r\n        sb.append(\"CacheClusterCreateTime: \").append(getCacheClusterCreateTime()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getTopicArn() != null)\r\n        sb.append(\"TopicArn: \").append(getTopicArn()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getCacheSubnetGroupName() != null)\r\n        sb.append(\"CacheSubnetGroupName: \").append(getCacheSubnetGroupName()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getSnapshotRetentionLimit() != null)\r\n        sb.append(\"SnapshotRetentionLimit: \").append(getSnapshotRetentionLimit()).append(\",\");\r\n    if (getSnapshotWindow() != null)\r\n        sb.append(\"SnapshotWindow: \").append(getSnapshotWindow()).append(\",\");\r\n    if (getNumNodeGroups() != null)\r\n        sb.append(\"NumNodeGroups: \").append(getNumNodeGroups()).append(\",\");\r\n    if (getAutomaticFailover() != null)\r\n        sb.append(\"AutomaticFailover: \").append(getAutomaticFailover()).append(\",\");\r\n    if (getNodeSnapshots() != null)\r\n        sb.append(\"NodeSnapshots: \").append(getNodeSnapshots());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.importImageAsync",
	"Comment": "simplified method form for invoking the importimage operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ImportImageResult> importImageAsync(ImportImageRequest request,java.util.concurrent.Future<ImportImageResult> importImageAsync,ImportImageRequest request,com.amazonaws.handlers.AsyncHandler<ImportImageRequest, ImportImageResult> asyncHandler,java.util.concurrent.Future<ImportImageResult> importImageAsync,java.util.concurrent.Future<ImportImageResult> importImageAsync,com.amazonaws.handlers.AsyncHandler<ImportImageRequest, ImportImageResult> asyncHandler){\r\n    return importImageAsync(new ImportImageRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.getHostReservationPurchasePreview",
	"Comment": "preview a reservation purchase with configurations that match those of your dedicated host. you must have activededicated hosts in your account before you purchase a reservation.this is a preview of the purchasehostreservation action and does not result in the offering beingpurchased.",
	"Method": "GetHostReservationPurchasePreviewResult getHostReservationPurchasePreview(GetHostReservationPurchasePreviewRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetHostReservationPurchasePreview(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.withConsistentRead",
	"Comment": "sets whether this scan uses consistent reads and returns a referenceto this object for method chaining.",
	"Method": "DynamoDBScanExpression withConsistentRead(Boolean consistentRead){\r\n    this.consistentRead = consistentRead;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeTagsAsync",
	"Comment": "simplified method form for invoking the describetags operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync(DescribeTagsRequest request,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,DescribeTagsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest, DescribeTagsResult> asyncHandler,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest, DescribeTagsResult> asyncHandler){\r\n    return describeTagsAsync(new DescribeTagsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeImportImageTasks",
	"Comment": "displays details about an import virtual machine or import snapshot tasks that are already created.",
	"Method": "DescribeImportImageTasksResult describeImportImageTasks(DescribeImportImageTasksRequest request,DescribeImportImageTasksResult describeImportImageTasks){\r\n    return describeImportImageTasks(new DescribeImportImageTasksRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.modifyNetworkInterfaceAttribute",
	"Comment": "modifies the specified network interface attribute. you can specify only one attribute at a time.",
	"Method": "ModifyNetworkInterfaceAttributeResult modifyNetworkInterfaceAttribute(ModifyNetworkInterfaceAttributeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyNetworkInterfaceAttribute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.createSnapshot",
	"Comment": "creates a copy of an entire cluster or replication group at a specific moment in time.this operation is valid for redis only.",
	"Method": "Snapshot createSnapshot(CreateSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.CreateTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeRulesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn()).append(\",\");\r\n    if (getRuleArns() != null)\r\n        sb.append(\"RuleArns: \").append(getRuleArns()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ExportTask.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getExportTaskId() != null)\r\n        sb.append(\"ExportTaskId: \").append(getExportTaskId()).append(\",\");\r\n    if (getExportToS3Task() != null)\r\n        sb.append(\"ExportToS3Task: \").append(getExportToS3Task()).append(\",\");\r\n    if (getInstanceExportDetails() != null)\r\n        sb.append(\"InstanceExportDetails: \").append(getInstanceExportDetails()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateRouteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRouteTableId() != null)\r\n        sb.append(\"RouteTableId: \").append(getRouteTableId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpnConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getLoadBalancerPort() != null)\r\n        sb.append(\"LoadBalancerPort: \").append(getLoadBalancerPort()).append(\",\");\r\n    if (getSSLCertificateId() != null)\r\n        sb.append(\"SSLCertificateId: \").append(getSSLCertificateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeClassicLinkInstancesAsync",
	"Comment": "simplified method form for invoking the describeclassiclinkinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClassicLinkInstancesResult> describeClassicLinkInstancesAsync(DescribeClassicLinkInstancesRequest request,java.util.concurrent.Future<DescribeClassicLinkInstancesResult> describeClassicLinkInstancesAsync,DescribeClassicLinkInstancesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClassicLinkInstancesRequest, DescribeClassicLinkInstancesResult> asyncHandler,java.util.concurrent.Future<DescribeClassicLinkInstancesResult> describeClassicLinkInstancesAsync,java.util.concurrent.Future<DescribeClassicLinkInstancesResult> describeClassicLinkInstancesAsync,com.amazonaws.handlers.AsyncHandler<DescribeClassicLinkInstancesRequest, DescribeClassicLinkInstancesResult> asyncHandler){\r\n    return describeClassicLinkInstancesAsync(new DescribeClassicLinkInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.describeTargetHealth",
	"Comment": "describes the health of the specified targets or all of your targets.",
	"Method": "DescribeTargetHealthResult describeTargetHealth(DescribeTargetHealthRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTargetHealth(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeNetworkInterfacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getNetworkInterfaceIds() != null)\r\n        sb.append(\"NetworkInterfaceIds: \").append(getNetworkInterfaceIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.L.set",
	"Comment": "returns a setaction for adding the value of evaluating thespecified listappend function as an attribute to an item. ifthis attribute already exists, it will be replaced by the new value.",
	"Method": "SetAction set(ListAppendFunction listAppendFunction,SetAction set,L source,SetAction set,List<?> value,SetAction set,IfNotExistsFunction<L> ifNotExistsFunction){\r\n    return new SetAction(this, ifNotExistsFunction);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ApplicationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationArn() != null)\r\n        sb.append(\"ApplicationArn: \").append(getApplicationArn()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDateCreated() != null)\r\n        sb.append(\"DateCreated: \").append(getDateCreated()).append(\",\");\r\n    if (getDateUpdated() != null)\r\n        sb.append(\"DateUpdated: \").append(getDateUpdated()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions()).append(\",\");\r\n    if (getConfigurationTemplates() != null)\r\n        sb.append(\"ConfigurationTemplates: \").append(getConfigurationTemplates()).append(\",\");\r\n    if (getResourceLifecycleConfig() != null)\r\n        sb.append(\"ResourceLifecycleConfig: \").append(getResourceLifecycleConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TableDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeDefinitions() != null)\r\n        sb.append(\"AttributeDefinitions: \").append(getAttributeDefinitions()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getTableStatus() != null)\r\n        sb.append(\"TableStatus: \").append(getTableStatus()).append(\",\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime()).append(\",\");\r\n    if (getProvisionedThroughput() != null)\r\n        sb.append(\"ProvisionedThroughput: \").append(getProvisionedThroughput()).append(\",\");\r\n    if (getTableSizeBytes() != null)\r\n        sb.append(\"TableSizeBytes: \").append(getTableSizeBytes()).append(\",\");\r\n    if (getItemCount() != null)\r\n        sb.append(\"ItemCount: \").append(getItemCount()).append(\",\");\r\n    if (getTableArn() != null)\r\n        sb.append(\"TableArn: \").append(getTableArn()).append(\",\");\r\n    if (getTableId() != null)\r\n        sb.append(\"TableId: \").append(getTableId()).append(\",\");\r\n    if (getBillingModeSummary() != null)\r\n        sb.append(\"BillingModeSummary: \").append(getBillingModeSummary()).append(\",\");\r\n    if (getLocalSecondaryIndexes() != null)\r\n        sb.append(\"LocalSecondaryIndexes: \").append(getLocalSecondaryIndexes()).append(\",\");\r\n    if (getGlobalSecondaryIndexes() != null)\r\n        sb.append(\"GlobalSecondaryIndexes: \").append(getGlobalSecondaryIndexes()).append(\",\");\r\n    if (getStreamSpecification() != null)\r\n        sb.append(\"StreamSpecification: \").append(getStreamSpecification()).append(\",\");\r\n    if (getLatestStreamLabel() != null)\r\n        sb.append(\"LatestStreamLabel: \").append(getLatestStreamLabel()).append(\",\");\r\n    if (getLatestStreamArn() != null)\r\n        sb.append(\"LatestStreamArn: \").append(getLatestStreamArn()).append(\",\");\r\n    if (getRestoreSummary() != null)\r\n        sb.append(\"RestoreSummary: \").append(getRestoreSummary()).append(\",\");\r\n    if (getSSEDescription() != null)\r\n        sb.append(\"SSEDescription: \").append(getSSEDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.AutoScalingSettingsUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinimumUnits() != null)\r\n        sb.append(\"MinimumUnits: \").append(getMinimumUnits()).append(\",\");\r\n    if (getMaximumUnits() != null)\r\n        sb.append(\"MaximumUnits: \").append(getMaximumUnits()).append(\",\");\r\n    if (getAutoScalingDisabled() != null)\r\n        sb.append(\"AutoScalingDisabled: \").append(getAutoScalingDisabled()).append(\",\");\r\n    if (getAutoScalingRoleArn() != null)\r\n        sb.append(\"AutoScalingRoleArn: \").append(getAutoScalingRoleArn()).append(\",\");\r\n    if (getScalingPolicyUpdate() != null)\r\n        sb.append(\"ScalingPolicyUpdate: \").append(getScalingPolicyUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResetInstanceAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AllocateHostsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostIds() != null)\r\n        sb.append(\"HostIds: \").append(getHostIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBSaveExpression.setExpected",
	"Comment": "sets the expected condition to the map of attribute names to expected attribute values given.",
	"Method": "void setExpected(Map<String, ExpectedAttributeValue> expectedAttributes){\r\n    this.expectedAttributes = expectedAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeTransitGatewayRouteTables",
	"Comment": "describes one or more transit gateway route tables. by default, all transit gateway route tables are described.alternatively, you can filter the results.",
	"Method": "DescribeTransitGatewayRouteTablesResult describeTransitGatewayRouteTables(DescribeTransitGatewayRouteTablesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTransitGatewayRouteTables(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.describeCacheParameterGroups",
	"Comment": "returns a list of cache parameter group descriptions. if a cache parameter group name is specified, the listcontains only the descriptions for that group.",
	"Method": "DescribeCacheParameterGroupsResult describeCacheParameterGroups(DescribeCacheParameterGroupsRequest request,DescribeCacheParameterGroupsResult describeCacheParameterGroups){\r\n    return describeCacheParameterGroups(new DescribeCacheParameterGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.RegisterTaskDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFamily() != null)\r\n        sb.append(\"Family: \").append(getFamily()).append(\",\");\r\n    if (getTaskRoleArn() != null)\r\n        sb.append(\"TaskRoleArn: \").append(getTaskRoleArn()).append(\",\");\r\n    if (getExecutionRoleArn() != null)\r\n        sb.append(\"ExecutionRoleArn: \").append(getExecutionRoleArn()).append(\",\");\r\n    if (getNetworkMode() != null)\r\n        sb.append(\"NetworkMode: \").append(getNetworkMode()).append(\",\");\r\n    if (getContainerDefinitions() != null)\r\n        sb.append(\"ContainerDefinitions: \").append(getContainerDefinitions()).append(\",\");\r\n    if (getVolumes() != null)\r\n        sb.append(\"Volumes: \").append(getVolumes()).append(\",\");\r\n    if (getPlacementConstraints() != null)\r\n        sb.append(\"PlacementConstraints: \").append(getPlacementConstraints()).append(\",\");\r\n    if (getRequiresCompatibilities() != null)\r\n        sb.append(\"RequiresCompatibilities: \").append(getRequiresCompatibilities()).append(\",\");\r\n    if (getCpu() != null)\r\n        sb.append(\"Cpu: \").append(getCpu()).append(\",\");\r\n    if (getMemory() != null)\r\n        sb.append(\"Memory: \").append(getMemory()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getPidMode() != null)\r\n        sb.append(\"PidMode: \").append(getPidMode()).append(\",\");\r\n    if (getIpcMode() != null)\r\n        sb.append(\"IpcMode: \").append(getIpcMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.keyPairExists",
	"Comment": "builds a keypairexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeKeyPairsRequest> keyPairExists(){\r\n    return new WaiterBuilder<DescribeKeyPairsRequest, DescribeKeyPairsResult>().withSdkFunction(new DescribeKeyPairsFunction(client)).withAcceptors(new KeyPairExists.IsTrueMatcher(), new KeyPairExists.IsInvalidKeyPairNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(6), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeVpcEndpointConnections",
	"Comment": "describes the vpc endpoint connections to your vpc endpoint services, including any endpoints that are pendingyour acceptance.",
	"Method": "DescribeVpcEndpointConnectionsResult describeVpcEndpointConnections(DescribeVpcEndpointConnectionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeVpcEndpointConnections(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateTransitGatewayRouteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.AWSDatabaseMigrationServiceWaiters.replicationInstanceDeleted",
	"Comment": "builds a replicationinstancedeleted waiter by using custom parameters waiterparameters and other parametersdefined in the waiters specification, and then polls until it determines whether the resource entered the desiredstate or not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeReplicationInstancesRequest> replicationInstanceDeleted(){\r\n    return new WaiterBuilder<DescribeReplicationInstancesRequest, DescribeReplicationInstancesResult>().withSdkFunction(new DescribeReplicationInstancesFunction(client)).withAcceptors(new ReplicationInstanceDeleted.IsAvailableMatcher(), new ReplicationInstanceDeleted.IsResourceNotFoundFaultMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEnvironmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironments() != null)\r\n        sb.append(\"Environments: \").append(getEnvironments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.Matcher.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHttpCode() != null)\r\n        sb.append(\"HttpCode: \").append(getHttpCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisableVgwRoutePropagationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayId() != null)\r\n        sb.append(\"GatewayId: \").append(getGatewayId()).append(\",\");\r\n    if (getRouteTableId() != null)\r\n        sb.append(\"RouteTableId: \").append(getRouteTableId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportImageTask.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getHypervisor() != null)\r\n        sb.append(\"Hypervisor: \").append(getHypervisor()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getImportTaskId() != null)\r\n        sb.append(\"ImportTaskId: \").append(getImportTaskId()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getLicenseType() != null)\r\n        sb.append(\"LicenseType: \").append(getLicenseType()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getProgress() != null)\r\n        sb.append(\"Progress: \").append(getProgress()).append(\",\");\r\n    if (getSnapshotDetails() != null)\r\n        sb.append(\"SnapshotDetails: \").append(getSnapshotDetails()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RunScheduledInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceIdSet() != null)\r\n        sb.append(\"InstanceIdSet: \").append(getInstanceIdSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.PortMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerPort() != null)\r\n        sb.append(\"ContainerPort: \").append(getContainerPort()).append(\",\");\r\n    if (getHostPort() != null)\r\n        sb.append(\"HostPort: \").append(getHostPort()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateEbsBlockDevice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getVolumeSize() != null)\r\n        sb.append(\"VolumeSize: \").append(getVolumeSize()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CheckDNSAvailabilityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailable() != null)\r\n        sb.append(\"Available: \").append(getAvailable()).append(\",\");\r\n    if (getFullyQualifiedCNAME() != null)\r\n        sb.append(\"FullyQualifiedCNAME: \").append(getFullyQualifiedCNAME());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getTargetType() != null)\r\n        sb.append(\"TargetType: \").append(getTargetType()).append(\",\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValue() != null)\r\n        sb.append(\"AttributeValue: \").append(getAttributeValue()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AdvertiseByoipCidrResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByoipCidr() != null)\r\n        sb.append(\"ByoipCidr: \").append(getByoipCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CopySnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.WithdrawByoipCidrResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByoipCidr() != null)\r\n        sb.append(\"ByoipCidr: \").append(getByoipCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AttachNetworkInterfaceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceIndex() != null)\r\n        sb.append(\"DeviceIndex: \").append(getDeviceIndex()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteRoute",
	"Comment": "deletes the specified route from the specified route table.",
	"Method": "DeleteRouteResult deleteRoute(DeleteRouteRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteRoute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteLaunchTemplateVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceStatusSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetails() != null)\r\n        sb.append(\"Details: \").append(getDetails()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.waiters.DescribeServicesFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeServicesResult apply(DescribeServicesRequest describeServicesRequest){\r\n    return client.describeServices(describeServicesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonelasticacheasync using the current builder configuration.",
	"Method": "AmazonElastiCacheAsync build(AwsAsyncClientParams params){\r\n    return new AmazonElastiCacheAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeKeyPairsAsync",
	"Comment": "simplified method form for invoking the describekeypairs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeKeyPairsResult> describeKeyPairsAsync(DescribeKeyPairsRequest request,java.util.concurrent.Future<DescribeKeyPairsResult> describeKeyPairsAsync,DescribeKeyPairsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeKeyPairsRequest, DescribeKeyPairsResult> asyncHandler,java.util.concurrent.Future<DescribeKeyPairsResult> describeKeyPairsAsync,java.util.concurrent.Future<DescribeKeyPairsResult> describeKeyPairsAsync,com.amazonaws.handlers.AsyncHandler<DescribeKeyPairsRequest, DescribeKeyPairsResult> asyncHandler){\r\n    return describeKeyPairsAsync(new DescribeKeyPairsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.deleteTableAsync",
	"Comment": "simplified method form for invoking the deletetable operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DeleteTableResult> deleteTableAsync(DeleteTableRequest request,java.util.concurrent.Future<DeleteTableResult> deleteTableAsync,DeleteTableRequest request,com.amazonaws.handlers.AsyncHandler<DeleteTableRequest, DeleteTableResult> asyncHandler,java.util.concurrent.Future<DeleteTableResult> deleteTableAsync,String tableName,java.util.concurrent.Future<DeleteTableResult> deleteTableAsync,String tableName,com.amazonaws.handlers.AsyncHandler<DeleteTableRequest, DeleteTableResult> asyncHandler){\r\n    return deleteTableAsync(new DeleteTableRequest().withTableName(tableName), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateGlobalTableSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableName() != null)\r\n        sb.append(\"GlobalTableName: \").append(getGlobalTableName()).append(\",\");\r\n    if (getReplicaSettings() != null)\r\n        sb.append(\"ReplicaSettings: \").append(getReplicaSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.describeCacheSecurityGroupsAsync",
	"Comment": "simplified method form for invoking the describecachesecuritygroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCacheSecurityGroupsResult> describeCacheSecurityGroupsAsync(DescribeCacheSecurityGroupsRequest request,java.util.concurrent.Future<DescribeCacheSecurityGroupsResult> describeCacheSecurityGroupsAsync,DescribeCacheSecurityGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCacheSecurityGroupsRequest, DescribeCacheSecurityGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeCacheSecurityGroupsResult> describeCacheSecurityGroupsAsync,java.util.concurrent.Future<DescribeCacheSecurityGroupsResult> describeCacheSecurityGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeCacheSecurityGroupsRequest, DescribeCacheSecurityGroupsResult> asyncHandler){\r\n    return describeCacheSecurityGroupsAsync(new DescribeCacheSecurityGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.AttributeValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS() != null)\r\n        sb.append(\"S: \").append(getS()).append(\",\");\r\n    if (getN() != null)\r\n        sb.append(\"N: \").append(getN()).append(\",\");\r\n    if (getB() != null)\r\n        sb.append(\"B: \").append(getB()).append(\",\");\r\n    if (getSS() != null)\r\n        sb.append(\"SS: \").append(getSS()).append(\",\");\r\n    if (getNS() != null)\r\n        sb.append(\"NS: \").append(getNS()).append(\",\");\r\n    if (getBS() != null)\r\n        sb.append(\"BS: \").append(getBS()).append(\",\");\r\n    if (getM() != null)\r\n        sb.append(\"M: \").append(getM()).append(\",\");\r\n    if (getL() != null)\r\n        sb.append(\"L: \").append(getL()).append(\",\");\r\n    if (getNULL() != null)\r\n        sb.append(\"NULL: \").append(getNULL()).append(\",\");\r\n    if (getBOOL() != null)\r\n        sb.append(\"BOOL: \").append(getBOOL());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.createVpcPeeringConnectionAsync",
	"Comment": "simplified method form for invoking the createvpcpeeringconnection operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateVpcPeeringConnectionResult> createVpcPeeringConnectionAsync(CreateVpcPeeringConnectionRequest request,java.util.concurrent.Future<CreateVpcPeeringConnectionResult> createVpcPeeringConnectionAsync,CreateVpcPeeringConnectionRequest request,com.amazonaws.handlers.AsyncHandler<CreateVpcPeeringConnectionRequest, CreateVpcPeeringConnectionResult> asyncHandler,java.util.concurrent.Future<CreateVpcPeeringConnectionResult> createVpcPeeringConnectionAsync,java.util.concurrent.Future<CreateVpcPeeringConnectionResult> createVpcPeeringConnectionAsync,com.amazonaws.handlers.AsyncHandler<CreateVpcPeeringConnectionRequest, CreateVpcPeeringConnectionResult> asyncHandler){\r\n    return createVpcPeeringConnectionAsync(new CreateVpcPeeringConnectionRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateHibernationOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigured() != null)\r\n        sb.append(\"Configured: \").append(getConfigured());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.waiters.AmazonDynamoDBWaiters.tableNotExists",
	"Comment": "builds a tablenotexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeTableRequest> tableNotExists(){\r\n    return new WaiterBuilder<DescribeTableRequest, DescribeTableResult>().withSdkFunction(new DescribeTableFunction(client)).withAcceptors(new TableNotExists.IsResourceNotFoundExceptionMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(25), new FixedDelayStrategy(20))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.PutRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.revokeSecurityGroupIngressAsync",
	"Comment": "simplified method form for invoking the revokesecuritygroupingress operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<RevokeSecurityGroupIngressResult> revokeSecurityGroupIngressAsync(RevokeSecurityGroupIngressRequest request,java.util.concurrent.Future<RevokeSecurityGroupIngressResult> revokeSecurityGroupIngressAsync,RevokeSecurityGroupIngressRequest request,com.amazonaws.handlers.AsyncHandler<RevokeSecurityGroupIngressRequest, RevokeSecurityGroupIngressResult> asyncHandler,java.util.concurrent.Future<RevokeSecurityGroupIngressResult> revokeSecurityGroupIngressAsync,java.util.concurrent.Future<RevokeSecurityGroupIngressResult> revokeSecurityGroupIngressAsync,com.amazonaws.handlers.AsyncHandler<RevokeSecurityGroupIngressRequest, RevokeSecurityGroupIngressResult> asyncHandler){\r\n    return revokeSecurityGroupIngressAsync(new RevokeSecurityGroupIngressRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateElasticInferenceAccelerator.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateInternetGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateDhcpOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateDhcpOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDhcpConfigurations() != null)\r\n        sb.append(\"DhcpConfigurations: \").append(getDhcpConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GetShardIteratorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamArn() != null)\r\n        sb.append(\"StreamArn: \").append(getStreamArn()).append(\",\");\r\n    if (getShardId() != null)\r\n        sb.append(\"ShardId: \").append(getShardId()).append(\",\");\r\n    if (getShardIteratorType() != null)\r\n        sb.append(\"ShardIteratorType: \").append(getShardIteratorType()).append(\",\");\r\n    if (getSequenceNumber() != null)\r\n        sb.append(\"SequenceNumber: \").append(getSequenceNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withStringSet",
	"Comment": "sets the value of the specified key in the current valuemap to thegiven value.",
	"Method": "ValueMap withStringSet(String key,Set<String> val,ValueMap withStringSet,String key,String val){\r\n    super.put(key, new LinkedHashSet<String>(Arrays.asList(val)));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.RegisterTargetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.S3ClientCache.getClient",
	"Comment": "returns a client for the requested region, or throws an exception whenunable.",
	"Method": "AmazonS3 getClient(Region region,AmazonS3 getClient,String region){\r\n    if (region == null) {\r\n        throw new IllegalArgumentException(\"S3 region must be specified\");\r\n    }\r\n    AmazonS3 client = clientsByRegion.get(region);\r\n    return client != null ? client : cacheClient(region);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.revokeCacheSecurityGroupIngress",
	"Comment": "revokes ingress from a cache security group. use this operation to disallow access from an amazon ec2 securitygroup that had been previously authorized.",
	"Method": "CacheSecurityGroup revokeCacheSecurityGroupIngress(RevokeCacheSecurityGroupIngressRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRevokeCacheSecurityGroupIngress(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.volumeInUse",
	"Comment": "builds a volumeinuse waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVolumesRequest> volumeInUse(){\r\n    return new WaiterBuilder<DescribeVolumesRequest, DescribeVolumesResult>().withSdkFunction(new DescribeVolumesFunction(client)).withAcceptors(new VolumeInUse.IsInuseMatcher(), new VolumeInUse.IsDeletedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getCreationToken() != null)\r\n        sb.append(\"CreationToken: \").append(getCreationToken()).append(\",\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeNetworkInterfaceAttribute",
	"Comment": "describes a network interface attribute. you can specify only one attribute at a time.",
	"Method": "DescribeNetworkInterfaceAttributeResult describeNetworkInterfaceAttribute(DescribeNetworkInterfaceAttributeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeNetworkInterfaceAttribute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTransitGatewayVpcAttachmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayVpcAttachment() != null)\r\n        sb.append(\"TransitGatewayVpcAttachment: \").append(getTransitGatewayVpcAttachment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DetachVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachment() != null)\r\n        sb.append(\"Attachment: \").append(getAttachment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagDescriptions() != null)\r\n        sb.append(\"TagDescriptions: \").append(getTagDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.GetLifecyclePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getLifecyclePolicyText() != null)\r\n        sb.append(\"LifecyclePolicyText: \").append(getLifecyclePolicyText()).append(\",\");\r\n    if (getLastEvaluatedAt() != null)\r\n        sb.append(\"LastEvaluatedAt: \").append(getLastEvaluatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SlotDateTimeRangeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEarliestTime() != null)\r\n        sb.append(\"EarliestTime: \").append(getEarliestTime()).append(\",\");\r\n    if (getLatestTime() != null)\r\n        sb.append(\"LatestTime: \").append(getLatestTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReservedInstances.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getEnd() != null)\r\n        sb.append(\"End: \").append(getEnd()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getReservedInstancesId() != null)\r\n        sb.append(\"ReservedInstancesId: \").append(getReservedInstancesId()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getInstanceTenancy() != null)\r\n        sb.append(\"InstanceTenancy: \").append(getInstanceTenancy()).append(\",\");\r\n    if (getOfferingClass() != null)\r\n        sb.append(\"OfferingClass: \").append(getOfferingClass()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getRecurringCharges() != null)\r\n        sb.append(\"RecurringCharges: \").append(getRecurringCharges()).append(\",\");\r\n    if (getScope() != null)\r\n        sb.append(\"Scope: \").append(getScope()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeReservedInstancesOfferingsAsync",
	"Comment": "simplified method form for invoking the describereservedinstancesofferings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedInstancesOfferingsResult> describeReservedInstancesOfferingsAsync(DescribeReservedInstancesOfferingsRequest request,java.util.concurrent.Future<DescribeReservedInstancesOfferingsResult> describeReservedInstancesOfferingsAsync,DescribeReservedInstancesOfferingsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesOfferingsRequest, DescribeReservedInstancesOfferingsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedInstancesOfferingsResult> describeReservedInstancesOfferingsAsync,java.util.concurrent.Future<DescribeReservedInstancesOfferingsResult> describeReservedInstancesOfferingsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesOfferingsRequest, DescribeReservedInstancesOfferingsResult> asyncHandler){\r\n    return describeReservedInstancesOfferingsAsync(new DescribeReservedInstancesOfferingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DeleteTargetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroupArn() != null)\r\n        sb.append(\"TargetGroupArn: \").append(getTargetGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResponseError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.ListenerDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListener() != null)\r\n        sb.append(\"Listener: \").append(getListener()).append(\",\");\r\n    if (getPolicyNames() != null)\r\n        sb.append(\"PolicyNames: \").append(getPolicyNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.describeReservedCacheNodes",
	"Comment": "returns information about reserved cache nodes for this account, or about a specified reserved cache node.",
	"Method": "DescribeReservedCacheNodesResult describeReservedCacheNodes(DescribeReservedCacheNodesRequest request,DescribeReservedCacheNodesResult describeReservedCacheNodes){\r\n    return describeReservedCacheNodes(new DescribeReservedCacheNodesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotFleetTagSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getEnableDnsHostnames() != null)\r\n        sb.append(\"EnableDnsHostnames: \").append(getEnableDnsHostnames()).append(\",\");\r\n    if (getEnableDnsSupport() != null)\r\n        sb.append(\"EnableDnsSupport: \").append(getEnableDnsSupport());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UnsuccessfulItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(getError()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.Listener.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getLoadBalancerPort() != null)\r\n        sb.append(\"LoadBalancerPort: \").append(getLoadBalancerPort()).append(\",\");\r\n    if (getInstanceProtocol() != null)\r\n        sb.append(\"InstanceProtocol: \").append(getInstanceProtocol()).append(\",\");\r\n    if (getInstancePort() != null)\r\n        sb.append(\"InstancePort: \").append(getInstancePort()).append(\",\");\r\n    if (getSSLCertificateId() != null)\r\n        sb.append(\"SSLCertificateId: \").append(getSSLCertificateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.CompleteLayerUploadRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getUploadId() != null)\r\n        sb.append(\"UploadId: \").append(getUploadId()).append(\",\");\r\n    if (getLayerDigests() != null)\r\n        sb.append(\"LayerDigests: \").append(getLayerDigests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpcEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcEndpoint() != null)\r\n        sb.append(\"VpcEndpoint: \").append(getVpcEndpoint()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.MovingAddressStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMoveStatus() != null)\r\n        sb.append(\"MoveStatus: \").append(getMoveStatus()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.putItemAsync",
	"Comment": "simplified method form for invoking the putitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<PutItemResult> putItemAsync(PutItemRequest request,java.util.concurrent.Future<PutItemResult> putItemAsync,PutItemRequest request,com.amazonaws.handlers.AsyncHandler<PutItemRequest, PutItemResult> asyncHandler,java.util.concurrent.Future<PutItemResult> putItemAsync,String tableName,java.util.Map<String, AttributeValue> item,java.util.concurrent.Future<PutItemResult> putItemAsync,String tableName,java.util.Map<String, AttributeValue> item,com.amazonaws.handlers.AsyncHandler<PutItemRequest, PutItemResult> asyncHandler,java.util.concurrent.Future<PutItemResult> putItemAsync,String tableName,java.util.Map<String, AttributeValue> item,String returnValues,java.util.concurrent.Future<PutItemResult> putItemAsync,String tableName,java.util.Map<String, AttributeValue> item,String returnValues,com.amazonaws.handlers.AsyncHandler<PutItemRequest, PutItemResult> asyncHandler){\r\n    return putItemAsync(new PutItemRequest().withTableName(tableName).withItem(item).withReturnValues(returnValues), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFleetError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateAndOverrides() != null)\r\n        sb.append(\"LaunchTemplateAndOverrides: \").append(getLaunchTemplateAndOverrides()).append(\",\");\r\n    if (getLifecycle() != null)\r\n        sb.append(\"Lifecycle: \").append(getLifecycle()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeSubnetsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeSubnetsResult apply(DescribeSubnetsRequest describeSubnetsRequest){\r\n    return client.describeSubnets(describeSubnetsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.CreateGlobalSecondaryIndexAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getProjection() != null)\r\n        sb.append(\"Projection: \").append(getProjection()).append(\",\");\r\n    if (getProvisionedThroughput() != null)\r\n        sb.append(\"ProvisionedThroughput: \").append(getProvisionedThroughput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CacheNodeTypeSpecificParameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterName() != null)\r\n        sb.append(\"ParameterName: \").append(getParameterName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getDataType() != null)\r\n        sb.append(\"DataType: \").append(getDataType()).append(\",\");\r\n    if (getAllowedValues() != null)\r\n        sb.append(\"AllowedValues: \").append(getAllowedValues()).append(\",\");\r\n    if (getIsModifiable() != null)\r\n        sb.append(\"IsModifiable: \").append(getIsModifiable()).append(\",\");\r\n    if (getMinimumEngineVersion() != null)\r\n        sb.append(\"MinimumEngineVersion: \").append(getMinimumEngineVersion()).append(\",\");\r\n    if (getCacheNodeTypeSpecificValues() != null)\r\n        sb.append(\"CacheNodeTypeSpecificValues: \").append(getCacheNodeTypeSpecificValues()).append(\",\");\r\n    if (getChangeType() != null)\r\n        sb.append(\"ChangeType: \").append(getChangeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.count",
	"Comment": "evaluates the specified scan expression and returns the count of matchingitems, without returning any of the actual item data.",
	"Method": "int count(DynamoDBQueryExpression<T> queryExpression,int count,DynamoDBScanExpression scanExpression){\r\n    return mapper.count(model.targetType(), scanExpression);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointServicePermissionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceId() != null)\r\n        sb.append(\"ServiceId: \").append(getServiceId()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetHostReservationPurchasePreviewResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getPurchase() != null)\r\n        sb.append(\"Purchase: \").append(getPurchase()).append(\",\");\r\n    if (getTotalHourlyPrice() != null)\r\n        sb.append(\"TotalHourlyPrice: \").append(getTotalHourlyPrice()).append(\",\");\r\n    if (getTotalUpfrontPrice() != null)\r\n        sb.append(\"TotalUpfrontPrice: \").append(getTotalUpfrontPrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyNetworkInterfaceAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeRegions",
	"Comment": "describes one or more regions that are currently available to you.for a list of the regions supported by amazon ec2, see regions and endpoints.",
	"Method": "DescribeRegionsResult describeRegions(DescribeRegionsRequest request,DescribeRegionsResult describeRegions){\r\n    return describeRegions(new DescribeRegionsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Get.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getProjectionExpression() != null)\r\n        sb.append(\"ProjectionExpression: \").append(getProjectionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.describeCacheSecurityGroupsAsync",
	"Comment": "simplified method form for invoking the describecachesecuritygroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCacheSecurityGroupsResult> describeCacheSecurityGroupsAsync(DescribeCacheSecurityGroupsRequest request,java.util.concurrent.Future<DescribeCacheSecurityGroupsResult> describeCacheSecurityGroupsAsync,DescribeCacheSecurityGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCacheSecurityGroupsRequest, DescribeCacheSecurityGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeCacheSecurityGroupsResult> describeCacheSecurityGroupsAsync,java.util.concurrent.Future<DescribeCacheSecurityGroupsResult> describeCacheSecurityGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeCacheSecurityGroupsRequest, DescribeCacheSecurityGroupsResult> asyncHandler){\r\n    return describeCacheSecurityGroupsAsync(new DescribeCacheSecurityGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DescribeImagesFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagStatus() != null)\r\n        sb.append(\"TagStatus: \").append(getTagStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.listClustersAsync",
	"Comment": "simplified method form for invoking the listclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListClustersResult> listClustersAsync(ListClustersRequest request,java.util.concurrent.Future<ListClustersResult> listClustersAsync,ListClustersRequest request,com.amazonaws.handlers.AsyncHandler<ListClustersRequest, ListClustersResult> asyncHandler,java.util.concurrent.Future<ListClustersResult> listClustersAsync,java.util.concurrent.Future<ListClustersResult> listClustersAsync,com.amazonaws.handlers.AsyncHandler<ListClustersRequest, ListClustersResult> asyncHandler){\r\n    return listClustersAsync(new ListClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.CreateReplicaAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelImportTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportTaskId() != null)\r\n        sb.append(\"ImportTaskId: \").append(getImportTaskId()).append(\",\");\r\n    if (getPreviousState() != null)\r\n        sb.append(\"PreviousState: \").append(getPreviousState()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonelasticloadbalancingasync using the current builderconfiguration.",
	"Method": "AmazonElasticLoadBalancingAsync build(AwsAsyncClientParams params){\r\n    return new AmazonElasticLoadBalancingAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.deleteCacheSecurityGroup",
	"Comment": "deletes a cache security group.you cannot delete a cache security group if it is associated with any clusters.",
	"Method": "DeleteCacheSecurityGroupResult deleteCacheSecurityGroup(DeleteCacheSecurityGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteCacheSecurityGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListAccountSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.listAllowedNodeTypeModificationsAsync",
	"Comment": "simplified method form for invoking the listallowednodetypemodifications operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAllowedNodeTypeModificationsResult> listAllowedNodeTypeModificationsAsync(ListAllowedNodeTypeModificationsRequest request,java.util.concurrent.Future<ListAllowedNodeTypeModificationsResult> listAllowedNodeTypeModificationsAsync,ListAllowedNodeTypeModificationsRequest request,com.amazonaws.handlers.AsyncHandler<ListAllowedNodeTypeModificationsRequest, ListAllowedNodeTypeModificationsResult> asyncHandler,java.util.concurrent.Future<ListAllowedNodeTypeModificationsResult> listAllowedNodeTypeModificationsAsync,java.util.concurrent.Future<ListAllowedNodeTypeModificationsResult> listAllowedNodeTypeModificationsAsync,com.amazonaws.handlers.AsyncHandler<ListAllowedNodeTypeModificationsRequest, ListAllowedNodeTypeModificationsResult> asyncHandler){\r\n    return listAllowedNodeTypeModificationsAsync(new ListAllowedNodeTypeModificationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeVpcClassicLinkAsync",
	"Comment": "simplified method form for invoking the describevpcclassiclink operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpcClassicLinkResult> describeVpcClassicLinkAsync(DescribeVpcClassicLinkRequest request,java.util.concurrent.Future<DescribeVpcClassicLinkResult> describeVpcClassicLinkAsync,DescribeVpcClassicLinkRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpcClassicLinkRequest, DescribeVpcClassicLinkResult> asyncHandler,java.util.concurrent.Future<DescribeVpcClassicLinkResult> describeVpcClassicLinkAsync,java.util.concurrent.Future<DescribeVpcClassicLinkResult> describeVpcClassicLinkAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpcClassicLinkRequest, DescribeVpcClassicLinkResult> asyncHandler){\r\n    return describeVpcClassicLinkAsync(new DescribeVpcClassicLinkRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskArns() != null)\r\n        sb.append(\"TaskArns: \").append(getTaskArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.describeEventsAsync",
	"Comment": "simplified method form for invoking the describeevents operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync(DescribeEventsRequest request,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,DescribeEventsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler){\r\n    return describeEventsAsync(new DescribeEventsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDiskImages() != null)\r\n        sb.append(\"DiskImages: \").append(getDiskImages()).append(\",\");\r\n    if (getLaunchSpecification() != null)\r\n        sb.append(\"LaunchSpecification: \").append(getLaunchSpecification()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeListenerCertificatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.AbortEnvironmentUpdateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.instanceStopped",
	"Comment": "builds a instancestopped waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstancesRequest> instanceStopped(){\r\n    return new WaiterBuilder<DescribeInstancesRequest, DescribeInstancesResult>().withSdkFunction(new DescribeInstancesFunction(client)).withAcceptors(new InstanceStopped.IsStoppedMatcher(), new InstanceStopped.IsPendingMatcher(), new InstanceStopped.IsTerminatedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Monitoring.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.LoadBalancerAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.Repository.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryArn() != null)\r\n        sb.append(\"RepositoryArn: \").append(getRepositoryArn()).append(\",\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getRepositoryUri() != null)\r\n        sb.append(\"RepositoryUri: \").append(getRepositoryUri()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceCreditSpecificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getCpuCredits() != null)\r\n        sb.append(\"CpuCredits: \").append(getCpuCredits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVolumeStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVolumeIds() != null)\r\n        sb.append(\"VolumeIds: \").append(getVolumeIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeAccountAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.getBoolean",
	"Comment": "returns the value of the specified attribute in the current item as aprimitive boolean.",
	"Method": "boolean getBoolean(String attrName){\r\n    final Boolean b = getBOOL(attrName);\r\n    return b.booleanValue();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeAvailabilityZonesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateFleetError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateAndOverrides() != null)\r\n        sb.append(\"LaunchTemplateAndOverrides: \").append(getLaunchTemplateAndOverrides()).append(\",\");\r\n    if (getLifecycle() != null)\r\n        sb.append(\"Lifecycle: \").append(getLifecycle()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ServiceDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getServiceType() != null)\r\n        sb.append(\"ServiceType: \").append(getServiceType()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getOwner() != null)\r\n        sb.append(\"Owner: \").append(getOwner()).append(\",\");\r\n    if (getBaseEndpointDnsNames() != null)\r\n        sb.append(\"BaseEndpointDnsNames: \").append(getBaseEndpointDnsNames()).append(\",\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getVpcEndpointPolicySupported() != null)\r\n        sb.append(\"VpcEndpointPolicySupported: \").append(getVpcEndpointPolicySupported()).append(\",\");\r\n    if (getAcceptanceRequired() != null)\r\n        sb.append(\"AcceptanceRequired: \").append(getAcceptanceRequired());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.getExpressionAttributeNames",
	"Comment": "one or more substitution variables for simplifying complex expressions.",
	"Method": "java.util.Map<String, String> getExpressionAttributeNames(){\r\n    return expressionAttributeNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withByteBufferSet",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withByteBufferSet(String attrName,Set<ByteBuffer> val){\r\n    checkInvalidAttribute(attrName, val);\r\n    Set<byte[]> set = new LinkedHashSet<byte[]>(val.size());\r\n    for (ByteBuffer bb : val) set.add(copyBytesFrom(bb));\r\n    attributes.put(attrName, set);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.createTableAsync",
	"Comment": "simplified method form for invoking the createtable operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateTableResult> createTableAsync(CreateTableRequest request,java.util.concurrent.Future<CreateTableResult> createTableAsync,CreateTableRequest request,com.amazonaws.handlers.AsyncHandler<CreateTableRequest, CreateTableResult> asyncHandler,java.util.concurrent.Future<CreateTableResult> createTableAsync,java.util.List<AttributeDefinition> attributeDefinitions,String tableName,java.util.List<KeySchemaElement> keySchema,ProvisionedThroughput provisionedThroughput,java.util.concurrent.Future<CreateTableResult> createTableAsync,java.util.List<AttributeDefinition> attributeDefinitions,String tableName,java.util.List<KeySchemaElement> keySchema,ProvisionedThroughput provisionedThroughput,com.amazonaws.handlers.AsyncHandler<CreateTableRequest, CreateTableResult> asyncHandler){\r\n    return createTableAsync(new CreateTableRequest().withAttributeDefinitions(attributeDefinitions).withTableName(tableName).withKeySchema(keySchema).withProvisionedThroughput(provisionedThroughput), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisableVgwRoutePropagationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.AuthenticateCognitoActionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserPoolArn() != null)\r\n        sb.append(\"UserPoolArn: \").append(getUserPoolArn()).append(\",\");\r\n    if (getUserPoolClientId() != null)\r\n        sb.append(\"UserPoolClientId: \").append(getUserPoolClientId()).append(\",\");\r\n    if (getUserPoolDomain() != null)\r\n        sb.append(\"UserPoolDomain: \").append(getUserPoolDomain()).append(\",\");\r\n    if (getSessionCookieName() != null)\r\n        sb.append(\"SessionCookieName: \").append(getSessionCookieName()).append(\",\");\r\n    if (getScope() != null)\r\n        sb.append(\"Scope: \").append(getScope()).append(\",\");\r\n    if (getSessionTimeout() != null)\r\n        sb.append(\"SessionTimeout: \").append(getSessionTimeout()).append(\",\");\r\n    if (getAuthenticationRequestExtraParams() != null)\r\n        sb.append(\"AuthenticationRequestExtraParams: \").append(getAuthenticationRequestExtraParams()).append(\",\");\r\n    if (getOnUnauthenticatedRequest() != null)\r\n        sb.append(\"OnUnauthenticatedRequest: \").append(getOnUnauthenticatedRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.TableWriteItems.withItemsToPut",
	"Comment": "used to specify the collection of items to be put in the current table ina batch write operation.",
	"Method": "TableWriteItems withItemsToPut(Item itemsToPut,TableWriteItems withItemsToPut,Collection<Item> itemsToPut){\r\n    if (itemsToPut == null)\r\n        this.itemsToPut = null;\r\n    else\r\n        this.itemsToPut = new ArrayList<Item>(itemsToPut);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FleetLaunchTemplateSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.configureHealthCheck",
	"Comment": "specifies the health check settings to use when evaluating the health state of your ec2 instances.for more information, see configure healthchecks for your load balancer in the classic load balancers guide.",
	"Method": "ConfigureHealthCheckResult configureHealthCheck(ConfigureHealthCheckRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeConfigureHealthCheck(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DeleteRepositoryPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AbstractAWSElasticBeanstalkAsync.describeEnvironmentsAsync",
	"Comment": "simplified method form for invoking the describeenvironments operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEnvironmentsResult> describeEnvironmentsAsync(DescribeEnvironmentsRequest request,java.util.concurrent.Future<DescribeEnvironmentsResult> describeEnvironmentsAsync,DescribeEnvironmentsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEnvironmentsRequest, DescribeEnvironmentsResult> asyncHandler,java.util.concurrent.Future<DescribeEnvironmentsResult> describeEnvironmentsAsync,java.util.concurrent.Future<DescribeEnvironmentsResult> describeEnvironmentsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEnvironmentsRequest, DescribeEnvironmentsResult> asyncHandler){\r\n    return describeEnvironmentsAsync(new DescribeEnvironmentsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFpgaImagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImages() != null)\r\n        sb.append(\"FpgaImages: \").append(getFpgaImages()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.BundleTask.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getBundleTaskError() != null)\r\n        sb.append(\"BundleTaskError: \").append(getBundleTaskError()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getProgress() != null)\r\n        sb.append(\"Progress: \").append(getProgress()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStorage() != null)\r\n        sb.append(\"Storage: \").append(getStorage()).append(\",\");\r\n    if (getUpdateTime() != null)\r\n        sb.append(\"UpdateTime: \").append(getUpdateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpcPeeringConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CpuOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCoreCount() != null)\r\n        sb.append(\"CoreCount: \").append(getCoreCount()).append(\",\");\r\n    if (getThreadsPerCore() != null)\r\n        sb.append(\"ThreadsPerCore: \").append(getThreadsPerCore());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateSpotMarketOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxPrice() != null)\r\n        sb.append(\"MaxPrice: \").append(getMaxPrice()).append(\",\");\r\n    if (getSpotInstanceType() != null)\r\n        sb.append(\"SpotInstanceType: \").append(getSpotInstanceType()).append(\",\");\r\n    if (getBlockDurationMinutes() != null)\r\n        sb.append(\"BlockDurationMinutes: \").append(getBlockDurationMinutes()).append(\",\");\r\n    if (getValidUntil() != null)\r\n        sb.append(\"ValidUntil: \").append(getValidUntil()).append(\",\");\r\n    if (getInstanceInterruptionBehavior() != null)\r\n        sb.append(\"InstanceInterruptionBehavior: \").append(getInstanceInterruptionBehavior());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.RevokeCacheSecurityGroupIngressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSecurityGroupName() != null)\r\n        sb.append(\"CacheSecurityGroupName: \").append(getCacheSecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupName() != null)\r\n        sb.append(\"EC2SecurityGroupName: \").append(getEC2SecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupOwnerId() != null)\r\n        sb.append(\"EC2SecurityGroupOwnerId: \").append(getEC2SecurityGroupOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NatGateway.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getDeleteTime() != null)\r\n        sb.append(\"DeleteTime: \").append(getDeleteTime()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getFailureMessage() != null)\r\n        sb.append(\"FailureMessage: \").append(getFailureMessage()).append(\",\");\r\n    if (getNatGatewayAddresses() != null)\r\n        sb.append(\"NatGatewayAddresses: \").append(getNatGatewayAddresses()).append(\",\");\r\n    if (getNatGatewayId() != null)\r\n        sb.append(\"NatGatewayId: \").append(getNatGatewayId()).append(\",\");\r\n    if (getProvisionedBandwidth() != null)\r\n        sb.append(\"ProvisionedBandwidth: \").append(getProvisionedBandwidth()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkInterfacePermission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfacePermissionId() != null)\r\n        sb.append(\"NetworkInterfacePermissionId: \").append(getNetworkInterfacePermissionId()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getAwsService() != null)\r\n        sb.append(\"AwsService: \").append(getAwsService()).append(\",\");\r\n    if (getPermission() != null)\r\n        sb.append(\"Permission: \").append(getPermission()).append(\",\");\r\n    if (getPermissionState() != null)\r\n        sb.append(\"PermissionState: \").append(getPermissionState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.modifyVpcTenancy",
	"Comment": "modifies the instance tenancy attribute of the specified vpc. you can change the instance tenancy attribute of avpc to default only. you cannot change the instance tenancy attribute to dedicated.after you modify the tenancy of the vpc, any new instances that you launch into the vpc have a tenancy ofdefault, unless you specify otherwise during launch. the tenancy of any existing instances in thevpc is not affected.for more information, see dedicated instances in theamazon elastic compute cloud user guide.",
	"Method": "ModifyVpcTenancyResult modifyVpcTenancy(ModifyVpcTenancyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyVpcTenancy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ListTagsOfResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribePrincipalIdFormatResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipals() != null)\r\n        sb.append(\"Principals: \").append(getPrincipals()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.DescribeReplicationTasksFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeReplicationTasksResult apply(DescribeReplicationTasksRequest describeReplicationTasksRequest){\r\n    return client.describeReplicationTasks(describeReplicationTasksRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DeleteItemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getConsumedCapacity() != null)\r\n        sb.append(\"ConsumedCapacity: \").append(getConsumedCapacity()).append(\",\");\r\n    if (getItemCollectionMetrics() != null)\r\n        sb.append(\"ItemCollectionMetrics: \").append(getItemCollectionMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withDouble",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withDouble(String attrName,double val){\r\n    checkInvalidAttrName(attrName);\r\n    return withNumber(attrName, Double.valueOf(val));\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ModifyReplicationGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getReplicationGroupDescription() != null)\r\n        sb.append(\"ReplicationGroupDescription: \").append(getReplicationGroupDescription()).append(\",\");\r\n    if (getPrimaryClusterId() != null)\r\n        sb.append(\"PrimaryClusterId: \").append(getPrimaryClusterId()).append(\",\");\r\n    if (getSnapshottingClusterId() != null)\r\n        sb.append(\"SnapshottingClusterId: \").append(getSnapshottingClusterId()).append(\",\");\r\n    if (getAutomaticFailoverEnabled() != null)\r\n        sb.append(\"AutomaticFailoverEnabled: \").append(getAutomaticFailoverEnabled()).append(\",\");\r\n    if (getCacheSecurityGroupNames() != null)\r\n        sb.append(\"CacheSecurityGroupNames: \").append(getCacheSecurityGroupNames()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getNotificationTopicArn() != null)\r\n        sb.append(\"NotificationTopicArn: \").append(getNotificationTopicArn()).append(\",\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getNotificationTopicStatus() != null)\r\n        sb.append(\"NotificationTopicStatus: \").append(getNotificationTopicStatus()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getSnapshotRetentionLimit() != null)\r\n        sb.append(\"SnapshotRetentionLimit: \").append(getSnapshotRetentionLimit()).append(\",\");\r\n    if (getSnapshotWindow() != null)\r\n        sb.append(\"SnapshotWindow: \").append(getSnapshotWindow()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getNodeGroupId() != null)\r\n        sb.append(\"NodeGroupId: \").append(getNodeGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteLaunchTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceNetworkInterfaceAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachTime() != null)\r\n        sb.append(\"AttachTime: \").append(getAttachTime()).append(\",\");\r\n    if (getAttachmentId() != null)\r\n        sb.append(\"AttachmentId: \").append(getAttachmentId()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getDeviceIndex() != null)\r\n        sb.append(\"DeviceIndex: \").append(getDeviceIndex()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AbstractAmazonECSAsync.discoverPollEndpointAsync",
	"Comment": "simplified method form for invoking the discoverpollendpoint operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DiscoverPollEndpointResult> discoverPollEndpointAsync(DiscoverPollEndpointRequest request,java.util.concurrent.Future<DiscoverPollEndpointResult> discoverPollEndpointAsync,DiscoverPollEndpointRequest request,com.amazonaws.handlers.AsyncHandler<DiscoverPollEndpointRequest, DiscoverPollEndpointResult> asyncHandler,java.util.concurrent.Future<DiscoverPollEndpointResult> discoverPollEndpointAsync,java.util.concurrent.Future<DiscoverPollEndpointResult> discoverPollEndpointAsync,com.amazonaws.handlers.AsyncHandler<DiscoverPollEndpointRequest, DiscoverPollEndpointResult> asyncHandler){\r\n    return discoverPollEndpointAsync(new DiscoverPollEndpointRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeSubnets",
	"Comment": "describes one or more of your subnets.for more information, see yourvpc and subnets in the amazon virtual private cloud user guide.",
	"Method": "DescribeSubnetsResult describeSubnets(DescribeSubnetsRequest request,DescribeSubnetsResult describeSubnets){\r\n    return describeSubnets(new DescribeSubnetsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.RestoreTableFromBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableDescription() != null)\r\n        sb.append(\"TableDescription: \").append(getTableDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeApplicationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplications() != null)\r\n        sb.append(\"Applications: \").append(getApplications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteTransitGatewayVpcAttachmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.LoadBalancer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointServicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceNames() != null)\r\n        sb.append(\"ServiceNames: \").append(getServiceNames()).append(\",\");\r\n    if (getServiceDetails() != null)\r\n        sb.append(\"ServiceDetails: \").append(getServiceDetails()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RejectVpcPeeringConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteSubnetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.scanAsync",
	"Comment": "simplified method form for invoking the scan operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ScanResult> scanAsync(ScanRequest request,java.util.concurrent.Future<ScanResult> scanAsync,ScanRequest request,com.amazonaws.handlers.AsyncHandler<ScanRequest, ScanResult> asyncHandler,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.List<String> attributesToGet,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.List<String> attributesToGet,com.amazonaws.handlers.AsyncHandler<ScanRequest, ScanResult> asyncHandler,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.Map<String, Condition> scanFilter,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.Map<String, Condition> scanFilter,com.amazonaws.handlers.AsyncHandler<ScanRequest, ScanResult> asyncHandler,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.List<String> attributesToGet,java.util.Map<String, Condition> scanFilter,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.List<String> attributesToGet,java.util.Map<String, Condition> scanFilter,com.amazonaws.handlers.AsyncHandler<ScanRequest, ScanResult> asyncHandler){\r\n    return scanAsync(new ScanRequest().withTableName(tableName).withAttributesToGet(attributesToGet).withScanFilter(scanFilter), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpcEndpointServiceConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceConfiguration() != null)\r\n        sb.append(\"ServiceConfiguration: \").append(getServiceConfiguration()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withBinarySet",
	"Comment": "sets the value of the specified key in the current valuemap to thegiven value.",
	"Method": "ValueMap withBinarySet(String key,Set<byte[]> val,ValueMap withBinarySet,String key,byte[] val){\r\n    super.put(key, new LinkedHashSet<byte[]>(Arrays.asList(val)));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.SecurityGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityGroupId() != null)\r\n        sb.append(\"SecurityGroupId: \").append(getSecurityGroupId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeTimeToLiveResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimeToLiveDescription() != null)\r\n        sb.append(\"TimeToLiveDescription: \").append(getTimeToLiveDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpnConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomerGatewayId() != null)\r\n        sb.append(\"CustomerGatewayId: \").append(getCustomerGatewayId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getVpnGatewayId() != null)\r\n        sb.append(\"VpnGatewayId: \").append(getVpnGatewayId()).append(\",\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifySpotFleetRequestRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExcessCapacityTerminationPolicy() != null)\r\n        sb.append(\"ExcessCapacityTerminationPolicy: \").append(getExcessCapacityTerminationPolicy()).append(\",\");\r\n    if (getSpotFleetRequestId() != null)\r\n        sb.append(\"SpotFleetRequestId: \").append(getSpotFleetRequestId()).append(\",\");\r\n    if (getTargetCapacity() != null)\r\n        sb.append(\"TargetCapacity: \").append(getTargetCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.KernelCapabilities.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdd() != null)\r\n        sb.append(\"Add: \").append(getAdd()).append(\",\");\r\n    if (getDrop() != null)\r\n        sb.append(\"Drop: \").append(getDrop());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.deleteLoadBalancer",
	"Comment": "deletes the specified load balancer.if you are attempting to recreate a load balancer, you must reconfigure all settings. the dns name associatedwith a deleted load balancer are no longer usable. the name and associated dns record of the deleted loadbalancer no longer exist and traffic sent to any of its ip addresses is no longer delivered to your instances.if the load balancer does not exist or has already been deleted, the call to deleteloadbalancerstill succeeds.",
	"Method": "DeleteLoadBalancerResult deleteLoadBalancer(DeleteLoadBalancerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLoadBalancer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.PrimaryKey.getComponentNameSet",
	"Comment": "returns all the key component names of this primary key as a set.",
	"Method": "Set<String> getComponentNameSet(){\r\n    return components.keySet();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RejectVpcEndpointConnectionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceId() != null)\r\n        sb.append(\"ServiceId: \").append(getServiceId()).append(\",\");\r\n    if (getVpcEndpointIds() != null)\r\n        sb.append(\"VpcEndpointIds: \").append(getVpcEndpointIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyTransitGatewayVpcAttachmentRequestOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDnsSupport() != null)\r\n        sb.append(\"DnsSupport: \").append(getDnsSupport()).append(\",\");\r\n    if (getIpv6Support() != null)\r\n        sb.append(\"Ipv6Support: \").append(getIpv6Support());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.ModifyTargetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroups() != null)\r\n        sb.append(\"TargetGroups: \").append(getTargetGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstancesIpv6Address.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6Address() != null)\r\n        sb.append(\"Ipv6Address: \").append(getIpv6Address());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Filter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.ModifyListenerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getSslPolicy() != null)\r\n        sb.append(\"SslPolicy: \").append(getSslPolicy()).append(\",\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates()).append(\",\");\r\n    if (getDefaultActions() != null)\r\n        sb.append(\"DefaultActions: \").append(getDefaultActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeSpotFleetRequestsAsync",
	"Comment": "simplified method form for invoking the describespotfleetrequests operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSpotFleetRequestsResult> describeSpotFleetRequestsAsync(DescribeSpotFleetRequestsRequest request,java.util.concurrent.Future<DescribeSpotFleetRequestsResult> describeSpotFleetRequestsAsync,DescribeSpotFleetRequestsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSpotFleetRequestsRequest, DescribeSpotFleetRequestsResult> asyncHandler,java.util.concurrent.Future<DescribeSpotFleetRequestsResult> describeSpotFleetRequestsAsync,java.util.concurrent.Future<DescribeSpotFleetRequestsResult> describeSpotFleetRequestsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSpotFleetRequestsRequest, DescribeSpotFleetRequestsResult> asyncHandler){\r\n    return describeSpotFleetRequestsAsync(new DescribeSpotFleetRequestsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeRouteTables",
	"Comment": "describes one or more of your route tables.each subnet in your vpc must be associated with a route table. if a subnet is not explicitly associated with anyroute table, it is implicitly associated with the main route table. this command does not return the subnet idfor implicit associations.for more information, see route tables in theamazon virtual private cloud user guide.",
	"Method": "DescribeRouteTablesResult describeRouteTables(DescribeRouteTablesRequest request,DescribeRouteTablesResult describeRouteTables){\r\n    return describeRouteTables(new DescribeRouteTablesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetLaunchTemplateDataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateData() != null)\r\n        sb.append(\"LaunchTemplateData: \").append(getLaunchTemplateData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstancesPlacement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.CreateTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeDefinitions() != null)\r\n        sb.append(\"AttributeDefinitions: \").append(getAttributeDefinitions()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getLocalSecondaryIndexes() != null)\r\n        sb.append(\"LocalSecondaryIndexes: \").append(getLocalSecondaryIndexes()).append(\",\");\r\n    if (getGlobalSecondaryIndexes() != null)\r\n        sb.append(\"GlobalSecondaryIndexes: \").append(getGlobalSecondaryIndexes()).append(\",\");\r\n    if (getBillingMode() != null)\r\n        sb.append(\"BillingMode: \").append(getBillingMode()).append(\",\");\r\n    if (getProvisionedThroughput() != null)\r\n        sb.append(\"ProvisionedThroughput: \").append(getProvisionedThroughput()).append(\",\");\r\n    if (getStreamSpecification() != null)\r\n        sb.append(\"StreamSpecification: \").append(getStreamSpecification()).append(\",\");\r\n    if (getSSESpecification() != null)\r\n        sb.append(\"SSESpecification: \").append(getSSESpecification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateGlobalSecondaryIndexAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getProvisionedThroughput() != null)\r\n        sb.append(\"ProvisionedThroughput: \").append(getProvisionedThroughput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PurchaseHostReservationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getPurchase() != null)\r\n        sb.append(\"Purchase: \").append(getPurchase()).append(\",\");\r\n    if (getTotalHourlyPrice() != null)\r\n        sb.append(\"TotalHourlyPrice: \").append(getTotalHourlyPrice()).append(\",\");\r\n    if (getTotalUpfrontPrice() != null)\r\n        sb.append(\"TotalUpfrontPrice: \").append(getTotalUpfrontPrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ListAvailableSolutionStacksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSolutionStacks() != null)\r\n        sb.append(\"SolutionStacks: \").append(getSolutionStacks()).append(\",\");\r\n    if (getSolutionStackDetails() != null)\r\n        sb.append(\"SolutionStackDetails: \").append(getSolutionStackDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.LifecyclePolicyPreviewSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExpiringImageTotalCount() != null)\r\n        sb.append(\"ExpiringImageTotalCount: \").append(getExpiringImageTotalCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.NodeGroupMember.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getCacheNodeId() != null)\r\n        sb.append(\"CacheNodeId: \").append(getCacheNodeId()).append(\",\");\r\n    if (getReadEndpoint() != null)\r\n        sb.append(\"ReadEndpoint: \").append(getReadEndpoint()).append(\",\");\r\n    if (getPreferredAvailabilityZone() != null)\r\n        sb.append(\"PreferredAvailabilityZone: \").append(getPreferredAvailabilityZone()).append(\",\");\r\n    if (getCurrentRole() != null)\r\n        sb.append(\"CurrentRole: \").append(getCurrentRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.RestartAppServerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.DescribeClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDNSName() != null)\r\n        sb.append(\"DNSName: \").append(getDNSName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeElasticGpusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticGpuIds() != null)\r\n        sb.append(\"ElasticGpuIds: \").append(getElasticGpuIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateEgressOnlyInternetGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReservedInstancesConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getScope() != null)\r\n        sb.append(\"Scope: \").append(getScope());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.rejectTransitGatewayVpcAttachment",
	"Comment": "rejects a request to attach a vpc to a transit gateway.the vpc attachment must be in the pendingacceptance state. usedescribetransitgatewayvpcattachments to view your pending vpc attachment requests. useaccepttransitgatewayvpcattachment to accept a vpc attachment request.",
	"Method": "RejectTransitGatewayVpcAttachmentResult rejectTransitGatewayVpcAttachment(RejectTransitGatewayVpcAttachmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRejectTransitGatewayVpcAttachment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.networkInterfaceAvailable",
	"Comment": "builds a networkinterfaceavailable waiter by using custom parameters waiterparameters and other parametersdefined in the waiters specification, and then polls until it determines whether the resource entered the desiredstate or not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeNetworkInterfacesRequest> networkInterfaceAvailable(){\r\n    return new WaiterBuilder<DescribeNetworkInterfacesRequest, DescribeNetworkInterfacesResult>().withSdkFunction(new DescribeNetworkInterfacesFunction(client)).withAcceptors(new NetworkInterfaceAvailable.IsAvailableMatcher(), new NetworkInterfaceAvailable.IsInvalidNetworkInterfaceIDNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(10), new FixedDelayStrategy(20))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFleetHistoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHistoryRecords() != null)\r\n        sb.append(\"HistoryRecords: \").append(getHistoryRecords()).append(\",\");\r\n    if (getLastEvaluatedTime() != null)\r\n        sb.append(\"LastEvaluatedTime: \").append(getLastEvaluatedTime()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AttachInternetGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVolumesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getVolumeIds() != null)\r\n        sb.append(\"VolumeIds: \").append(getVolumeIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DeleteItemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getExpected() != null)\r\n        sb.append(\"Expected: \").append(getExpected()).append(\",\");\r\n    if (getConditionalOperator() != null)\r\n        sb.append(\"ConditionalOperator: \").append(getConditionalOperator()).append(\",\");\r\n    if (getReturnValues() != null)\r\n        sb.append(\"ReturnValues: \").append(getReturnValues()).append(\",\");\r\n    if (getReturnConsumedCapacity() != null)\r\n        sb.append(\"ReturnConsumedCapacity: \").append(getReturnConsumedCapacity()).append(\",\");\r\n    if (getReturnItemCollectionMetrics() != null)\r\n        sb.append(\"ReturnItemCollectionMetrics: \").append(getReturnItemCollectionMetrics()).append(\",\");\r\n    if (getConditionExpression() != null)\r\n        sb.append(\"ConditionExpression: \").append(getConditionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames()).append(\",\");\r\n    if (getExpressionAttributeValues() != null)\r\n        sb.append(\"ExpressionAttributeValues: \").append(getExpressionAttributeValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DeleteGlobalSecondaryIndexAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ContainerStateChange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName()).append(\",\");\r\n    if (getExitCode() != null)\r\n        sb.append(\"ExitCode: \").append(getExitCode()).append(\",\");\r\n    if (getNetworkBindings() != null)\r\n        sb.append(\"NetworkBindings: \").append(getNetworkBindings()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.RemoveTagsFromResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.IncreaseReplicaCountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getNewReplicaCount() != null)\r\n        sb.append(\"NewReplicaCount: \").append(getNewReplicaCount()).append(\",\");\r\n    if (getReplicaConfiguration() != null)\r\n        sb.append(\"ReplicaConfiguration: \").append(getReplicaConfiguration()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CapacityReservationSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityReservationPreference() != null)\r\n        sb.append(\"CapacityReservationPreference: \").append(getCapacityReservationPreference()).append(\",\");\r\n    if (getCapacityReservationTarget() != null)\r\n        sb.append(\"CapacityReservationTarget: \").append(getCapacityReservationTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.batchWriteItemAsync",
	"Comment": "simplified method form for invoking the batchwriteitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<BatchWriteItemResult> batchWriteItemAsync(BatchWriteItemRequest request,java.util.concurrent.Future<BatchWriteItemResult> batchWriteItemAsync,BatchWriteItemRequest request,com.amazonaws.handlers.AsyncHandler<BatchWriteItemRequest, BatchWriteItemResult> asyncHandler,java.util.concurrent.Future<BatchWriteItemResult> batchWriteItemAsync,java.util.Map<String, java.util.List<WriteRequest>> requestItems,java.util.concurrent.Future<BatchWriteItemResult> batchWriteItemAsync,java.util.Map<String, java.util.List<WriteRequest>> requestItems,com.amazonaws.handlers.AsyncHandler<BatchWriteItemRequest, BatchWriteItemResult> asyncHandler){\r\n    return batchWriteItemAsync(new BatchWriteItemRequest().withRequestItems(requestItems), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeVolumeAttribute",
	"Comment": "describes the specified attribute of the specified volume. you can specify only one attribute at a time.for more information about ebs volumes, see amazon ebs volumes in the amazonelastic compute cloud user guide.",
	"Method": "DescribeVolumeAttributeResult describeVolumeAttribute(DescribeVolumeAttributeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeVolumeAttribute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ApplicationVersionLifecycleConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxCountRule() != null)\r\n        sb.append(\"MaxCountRule: \").append(getMaxCountRule()).append(\",\");\r\n    if (getMaxAgeRule() != null)\r\n        sb.append(\"MaxAgeRule: \").append(getMaxAgeRule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.ItemUtils.minimum",
	"Comment": "returns the minimum of the two input integers taking null into account.returns null if both integers are null. otherwise, a null integer istreated as infinity.",
	"Method": "Integer minimum(Integer one,Integer two){\r\n    if (one == null) {\r\n        return two;\r\n    } else if (two == null) {\r\n        return one;\r\n    } else if (one < two) {\r\n        return one;\r\n    } else {\r\n        return two;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.listAvailableSolutionStacks",
	"Comment": "returns a list of the available solution stack names, with the public version first and then in reversechronological order.",
	"Method": "ListAvailableSolutionStacksResult listAvailableSolutionStacks(ListAvailableSolutionStacksRequest request,ListAvailableSolutionStacksResult listAvailableSolutionStacks){\r\n    return listAvailableSolutionStacks(new ListAvailableSolutionStacksRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.internal.Filter.beginsWith",
	"Comment": "creates and returns a condition of the range key with a value that beginswith the given value.",
	"Method": "T beginsWith(String val){\r\n    return _withComparisonOperator(ComparisonOperator.BEGINS_WITH)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PricingDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getPrice() != null)\r\n        sb.append(\"Price: \").append(getPrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeVolumes",
	"Comment": "describes the specified ebs volumes.if you are describing a long list of volumes, you can paginate the output to make the list more manageable. themaxresults parameter sets the maximum number of results returned in a single page. if the list ofresults exceeds your maxresults value, then that number of results is returned along with anexttoken value that can be passed to a subsequent describevolumes request to retrievethe remaining results.for more information about ebs volumes, see amazon ebs volumes in the amazonelastic compute cloud user guide.",
	"Method": "DescribeVolumesResult describeVolumes(DescribeVolumesRequest request,DescribeVolumesResult describeVolumes){\r\n    return describeVolumes(new DescribeVolumesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcCidrBlockAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId()).append(\",\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock()).append(\",\");\r\n    if (getCidrBlockState() != null)\r\n        sb.append(\"CidrBlockState: \").append(getCidrBlockState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.RequestEnvironmentInfoResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteSubnet",
	"Comment": "deletes the specified subnet. you must terminate all running instances in the subnet before you can delete thesubnet.",
	"Method": "DeleteSubnetResult deleteSubnet(DeleteSubnetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteSubnet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeregisterImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.CreateTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableDescription() != null)\r\n        sb.append(\"TableDescription: \").append(getTableDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.BatchCheckLayerAvailabilityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getLayerDigests() != null)\r\n        sb.append(\"LayerDigests: \").append(getLayerDigests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Purchase.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getHostIdSet() != null)\r\n        sb.append(\"HostIdSet: \").append(getHostIdSet()).append(\",\");\r\n    if (getHostReservationId() != null)\r\n        sb.append(\"HostReservationId: \").append(getHostReservationId()).append(\",\");\r\n    if (getHourlyPrice() != null)\r\n        sb.append(\"HourlyPrice: \").append(getHourlyPrice()).append(\",\");\r\n    if (getInstanceFamily() != null)\r\n        sb.append(\"InstanceFamily: \").append(getInstanceFamily()).append(\",\");\r\n    if (getPaymentOption() != null)\r\n        sb.append(\"PaymentOption: \").append(getPaymentOption()).append(\",\");\r\n    if (getUpfrontPrice() != null)\r\n        sb.append(\"UpfrontPrice: \").append(getUpfrontPrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelSpotFleetRequestsErrorItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(getError()).append(\",\");\r\n    if (getSpotFleetRequestId() != null)\r\n        sb.append(\"SpotFleetRequestId: \").append(getSpotFleetRequestId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ProvisionByoipCidrResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByoipCidr() != null)\r\n        sb.append(\"ByoipCidr: \").append(getByoipCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeReservedInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstances() != null)\r\n        sb.append(\"ReservedInstances: \").append(getReservedInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifySnapshotAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.deleteTargetGroup",
	"Comment": "deletes the specified target group.you can delete a target group if it is not referenced by any actions. deleting a target group also deletes anyassociated health checks.",
	"Method": "DeleteTargetGroupResult deleteTargetGroup(DeleteTargetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteTargetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AbstractAWSElasticBeanstalkAsync.swapEnvironmentCNAMEsAsync",
	"Comment": "simplified method form for invoking the swapenvironmentcnames operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<SwapEnvironmentCNAMEsResult> swapEnvironmentCNAMEsAsync(SwapEnvironmentCNAMEsRequest request,java.util.concurrent.Future<SwapEnvironmentCNAMEsResult> swapEnvironmentCNAMEsAsync,SwapEnvironmentCNAMEsRequest request,com.amazonaws.handlers.AsyncHandler<SwapEnvironmentCNAMEsRequest, SwapEnvironmentCNAMEsResult> asyncHandler,java.util.concurrent.Future<SwapEnvironmentCNAMEsResult> swapEnvironmentCNAMEsAsync,java.util.concurrent.Future<SwapEnvironmentCNAMEsResult> swapEnvironmentCNAMEsAsync,com.amazonaws.handlers.AsyncHandler<SwapEnvironmentCNAMEsRequest, SwapEnvironmentCNAMEsResult> asyncHandler){\r\n    return swapEnvironmentCNAMEsAsync(new SwapEnvironmentCNAMEsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.acceptVpcPeeringConnectionAsync",
	"Comment": "simplified method form for invoking the acceptvpcpeeringconnection operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<AcceptVpcPeeringConnectionResult> acceptVpcPeeringConnectionAsync(AcceptVpcPeeringConnectionRequest request,java.util.concurrent.Future<AcceptVpcPeeringConnectionResult> acceptVpcPeeringConnectionAsync,AcceptVpcPeeringConnectionRequest request,com.amazonaws.handlers.AsyncHandler<AcceptVpcPeeringConnectionRequest, AcceptVpcPeeringConnectionResult> asyncHandler,java.util.concurrent.Future<AcceptVpcPeeringConnectionResult> acceptVpcPeeringConnectionAsync,java.util.concurrent.Future<AcceptVpcPeeringConnectionResult> acceptVpcPeeringConnectionAsync,com.amazonaws.handlers.AsyncHandler<AcceptVpcPeeringConnectionRequest, AcceptVpcPeeringConnectionResult> asyncHandler){\r\n    return acceptVpcPeeringConnectionAsync(new AcceptVpcPeeringConnectionRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AcceptTransitGatewayVpcAttachmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayVpcAttachment() != null)\r\n        sb.append(\"TransitGatewayVpcAttachment: \").append(getTransitGatewayVpcAttachment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getPolicyNames() != null)\r\n        sb.append(\"PolicyNames: \").append(getPolicyNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeVpcEndpointsAsync",
	"Comment": "simplified method form for invoking the describevpcendpoints operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpcEndpointsResult> describeVpcEndpointsAsync(DescribeVpcEndpointsRequest request,java.util.concurrent.Future<DescribeVpcEndpointsResult> describeVpcEndpointsAsync,DescribeVpcEndpointsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpcEndpointsRequest, DescribeVpcEndpointsResult> asyncHandler,java.util.concurrent.Future<DescribeVpcEndpointsResult> describeVpcEndpointsAsync,java.util.concurrent.Future<DescribeVpcEndpointsResult> describeVpcEndpointsAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpcEndpointsRequest, DescribeVpcEndpointsResult> asyncHandler){\r\n    return describeVpcEndpointsAsync(new DescribeVpcEndpointsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteSecurityGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.MonitorInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ListStreamsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getExclusiveStartStreamArn() != null)\r\n        sb.append(\"ExclusiveStartStreamArn: \").append(getExclusiveStartStreamArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DeleteTargetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportInstanceLaunchSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdditionalInfo() != null)\r\n        sb.append(\"AdditionalInfo: \").append(getAdditionalInfo()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getGroupIds() != null)\r\n        sb.append(\"GroupIds: \").append(getGroupIds()).append(\",\");\r\n    if (getGroupNames() != null)\r\n        sb.append(\"GroupNames: \").append(getGroupNames()).append(\",\");\r\n    if (getInstanceInitiatedShutdownBehavior() != null)\r\n        sb.append(\"InstanceInitiatedShutdownBehavior: \").append(getInstanceInitiatedShutdownBehavior()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getMonitoring() != null)\r\n        sb.append(\"Monitoring: \").append(getMonitoring()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetReservedInstancesExchangeQuoteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getIsValidExchange() != null)\r\n        sb.append(\"IsValidExchange: \").append(getIsValidExchange()).append(\",\");\r\n    if (getOutputReservedInstancesWillExpireAt() != null)\r\n        sb.append(\"OutputReservedInstancesWillExpireAt: \").append(getOutputReservedInstancesWillExpireAt()).append(\",\");\r\n    if (getPaymentDue() != null)\r\n        sb.append(\"PaymentDue: \").append(getPaymentDue()).append(\",\");\r\n    if (getReservedInstanceValueRollup() != null)\r\n        sb.append(\"ReservedInstanceValueRollup: \").append(getReservedInstanceValueRollup()).append(\",\");\r\n    if (getReservedInstanceValueSet() != null)\r\n        sb.append(\"ReservedInstanceValueSet: \").append(getReservedInstanceValueSet()).append(\",\");\r\n    if (getTargetConfigurationValueRollup() != null)\r\n        sb.append(\"TargetConfigurationValueRollup: \").append(getTargetConfigurationValueRollup()).append(\",\");\r\n    if (getTargetConfigurationValueSet() != null)\r\n        sb.append(\"TargetConfigurationValueSet: \").append(getTargetConfigurationValueSet()).append(\",\");\r\n    if (getValidationFailureReason() != null)\r\n        sb.append(\"ValidationFailureReason: \").append(getValidationFailureReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EnableVgwRoutePropagationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeInstancesFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeInstancesResult apply(DescribeInstancesRequest describeInstancesRequest){\r\n    return client.describeInstances(describeInstancesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeAccountAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountAttributes() != null)\r\n        sb.append(\"AccountAttributes: \").append(getAccountAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeFleetHistory",
	"Comment": "describes the events for the specified ec2 fleet during the specified time.",
	"Method": "DescribeFleetHistoryResult describeFleetHistory(DescribeFleetHistoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeFleetHistory(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.PolicyAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValue() != null)\r\n        sb.append(\"AttributeValue: \").append(getAttributeValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpcPeeringConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcPeeringConnection() != null)\r\n        sb.append(\"VpcPeeringConnection: \").append(getVpcPeeringConnection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ConfirmProductInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getProductCode() != null)\r\n        sb.append(\"ProductCode: \").append(getProductCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.EC2SecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEC2SecurityGroupName() != null)\r\n        sb.append(\"EC2SecurityGroupName: \").append(getEC2SecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupOwnerId() != null)\r\n        sb.append(\"EC2SecurityGroupOwnerId: \").append(getEC2SecurityGroupOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.associateTransitGatewayRouteTable",
	"Comment": "associates the specified attachment with the specified transit gateway route table. you can associate only oneroute table with an attachment.",
	"Method": "AssociateTransitGatewayRouteTableResult associateTransitGatewayRouteTable(AssociateTransitGatewayRouteTableRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAssociateTransitGatewayRouteTable(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.clearExpressionAttributeNamesEntries",
	"Comment": "removes all the entries added into expressionattributenames.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DynamoDBDeleteExpression clearExpressionAttributeNamesEntries(){\r\n    this.expressionAttributeNames = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTransitGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGateway() != null)\r\n        sb.append(\"TransitGateway: \").append(getTransitGateway());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.Rule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleArn() != null)\r\n        sb.append(\"RuleArn: \").append(getRuleArn()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getConditions() != null)\r\n        sb.append(\"Conditions: \").append(getConditions()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions()).append(\",\");\r\n    if (getIsDefault() != null)\r\n        sb.append(\"IsDefault: \").append(getIsDefault());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeregisterContainerInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getContainerInstance() != null)\r\n        sb.append(\"ContainerInstance: \").append(getContainerInstance()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReleaseHostsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccessful() != null)\r\n        sb.append(\"Successful: \").append(getSuccessful()).append(\",\");\r\n    if (getUnsuccessful() != null)\r\n        sb.append(\"Unsuccessful: \").append(getUnsuccessful());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelReservedInstancesListingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstancesListingId() != null)\r\n        sb.append(\"ReservedInstancesListingId: \").append(getReservedInstancesListingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkInterfaceAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachTime() != null)\r\n        sb.append(\"AttachTime: \").append(getAttachTime()).append(\",\");\r\n    if (getAttachmentId() != null)\r\n        sb.append(\"AttachmentId: \").append(getAttachmentId()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getDeviceIndex() != null)\r\n        sb.append(\"DeviceIndex: \").append(getDeviceIndex()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getInstanceOwnerId() != null)\r\n        sb.append(\"InstanceOwnerId: \").append(getInstanceOwnerId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.describeReservedCacheNodesOfferingsAsync",
	"Comment": "simplified method form for invoking the describereservedcachenodesofferings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedCacheNodesOfferingsResult> describeReservedCacheNodesOfferingsAsync(DescribeReservedCacheNodesOfferingsRequest request,java.util.concurrent.Future<DescribeReservedCacheNodesOfferingsResult> describeReservedCacheNodesOfferingsAsync,DescribeReservedCacheNodesOfferingsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedCacheNodesOfferingsRequest, DescribeReservedCacheNodesOfferingsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedCacheNodesOfferingsResult> describeReservedCacheNodesOfferingsAsync,java.util.concurrent.Future<DescribeReservedCacheNodesOfferingsResult> describeReservedCacheNodesOfferingsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedCacheNodesOfferingsRequest, DescribeReservedCacheNodesOfferingsResult> asyncHandler){\r\n    return describeReservedCacheNodesOfferingsAsync(new DescribeReservedCacheNodesOfferingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName()).append(\",\");\r\n    if (getSnapshotSource() != null)\r\n        sb.append(\"SnapshotSource: \").append(getSnapshotSource()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getShowNodeGroupConfig() != null)\r\n        sb.append(\"ShowNodeGroupConfig: \").append(getShowNodeGroupConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ItemResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getInstanceTypes() != null)\r\n        sb.append(\"InstanceTypes: \").append(getInstanceTypes()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getProductDescriptions() != null)\r\n        sb.append(\"ProductDescriptions: \").append(getProductDescriptions()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getIncludeMarketplace() != null)\r\n        sb.append(\"IncludeMarketplace: \").append(getIncludeMarketplace()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getMaxDuration() != null)\r\n        sb.append(\"MaxDuration: \").append(getMaxDuration()).append(\",\");\r\n    if (getMaxInstanceCount() != null)\r\n        sb.append(\"MaxInstanceCount: \").append(getMaxInstanceCount()).append(\",\");\r\n    if (getMinDuration() != null)\r\n        sb.append(\"MinDuration: \").append(getMinDuration()).append(\",\");\r\n    if (getOfferingClass() != null)\r\n        sb.append(\"OfferingClass: \").append(getOfferingClass()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getReservedInstancesOfferingIds() != null)\r\n        sb.append(\"ReservedInstancesOfferingIds: \").append(getReservedInstancesOfferingIds()).append(\",\");\r\n    if (getInstanceTenancy() != null)\r\n        sb.append(\"InstanceTenancy: \").append(getInstanceTenancy()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Stream.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamArn() != null)\r\n        sb.append(\"StreamArn: \").append(getStreamArn()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getStreamLabel() != null)\r\n        sb.append(\"StreamLabel: \").append(getStreamLabel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DeleteTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.getConditionalOperator",
	"Comment": "returns the logical operator on the query filter conditions.",
	"Method": "String getConditionalOperator(){\r\n    return conditionalOperator;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcEndpointId() != null)\r\n        sb.append(\"VpcEndpointId: \").append(getVpcEndpointId()).append(\",\");\r\n    if (getResetPolicy() != null)\r\n        sb.append(\"ResetPolicy: \").append(getResetPolicy()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getAddRouteTableIds() != null)\r\n        sb.append(\"AddRouteTableIds: \").append(getAddRouteTableIds()).append(\",\");\r\n    if (getRemoveRouteTableIds() != null)\r\n        sb.append(\"RemoveRouteTableIds: \").append(getRemoveRouteTableIds()).append(\",\");\r\n    if (getAddSubnetIds() != null)\r\n        sb.append(\"AddSubnetIds: \").append(getAddSubnetIds()).append(\",\");\r\n    if (getRemoveSubnetIds() != null)\r\n        sb.append(\"RemoveSubnetIds: \").append(getRemoveSubnetIds()).append(\",\");\r\n    if (getAddSecurityGroupIds() != null)\r\n        sb.append(\"AddSecurityGroupIds: \").append(getAddSecurityGroupIds()).append(\",\");\r\n    if (getRemoveSecurityGroupIds() != null)\r\n        sb.append(\"RemoveSecurityGroupIds: \").append(getRemoveSecurityGroupIds()).append(\",\");\r\n    if (getPrivateDnsEnabled() != null)\r\n        sb.append(\"PrivateDnsEnabled: \").append(getPrivateDnsEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSecurityGroupReferencesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityGroupReferenceSet() != null)\r\n        sb.append(\"SecurityGroupReferenceSet: \").append(getSecurityGroupReferenceSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBStreamsClient.listStreams",
	"Comment": "returns an array of stream arns associated with the current account and endpoint. if the tablenameparameter is present, then liststreams will return only the streams arns for that table.you can call liststreams at a maximum rate of 5 times per second.",
	"Method": "ListStreamsResult listStreams(ListStreamsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListStreams(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.imageExists",
	"Comment": "builds a imageexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeImagesRequest> imageExists(){\r\n    return new WaiterBuilder<DescribeImagesRequest, DescribeImagesResult>().withSdkFunction(new DescribeImagesFunction(client)).withAcceptors(new ImageExists.IsTrueMatcher(), new ImageExists.IsInvalidAMIIDNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DescribeTaskDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceTransitGatewayRouteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock()).append(\",\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getBlackhole() != null)\r\n        sb.append(\"Blackhole: \").append(getBlackhole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateEnvironmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEndpointURL() != null)\r\n        sb.append(\"EndpointURL: \").append(getEndpointURL()).append(\",\");\r\n    if (getCNAME() != null)\r\n        sb.append(\"CNAME: \").append(getCNAME()).append(\",\");\r\n    if (getDateCreated() != null)\r\n        sb.append(\"DateCreated: \").append(getDateCreated()).append(\",\");\r\n    if (getDateUpdated() != null)\r\n        sb.append(\"DateUpdated: \").append(getDateUpdated()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getAbortableOperationInProgress() != null)\r\n        sb.append(\"AbortableOperationInProgress: \").append(getAbortableOperationInProgress()).append(\",\");\r\n    if (getHealth() != null)\r\n        sb.append(\"Health: \").append(getHealth()).append(\",\");\r\n    if (getHealthStatus() != null)\r\n        sb.append(\"HealthStatus: \").append(getHealthStatus()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getTier() != null)\r\n        sb.append(\"Tier: \").append(getTier()).append(\",\");\r\n    if (getEnvironmentLinks() != null)\r\n        sb.append(\"EnvironmentLinks: \").append(getEnvironmentLinks()).append(\",\");\r\n    if (getEnvironmentArn() != null)\r\n        sb.append(\"EnvironmentArn: \").append(getEnvironmentArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeEngineDefaultParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupFamily() != null)\r\n        sb.append(\"CacheParameterGroupFamily: \").append(getCacheParameterGroupFamily()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ApplicationMetrics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getRequestCount() != null)\r\n        sb.append(\"RequestCount: \").append(getRequestCount()).append(\",\");\r\n    if (getStatusCodes() != null)\r\n        sb.append(\"StatusCodes: \").append(getStatusCodes()).append(\",\");\r\n    if (getLatency() != null)\r\n        sb.append(\"Latency: \").append(getLatency());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteFleetSuccessItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrentFleetState() != null)\r\n        sb.append(\"CurrentFleetState: \").append(getCurrentFleetState()).append(\",\");\r\n    if (getPreviousFleetState() != null)\r\n        sb.append(\"PreviousFleetState: \").append(getPreviousFleetState()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PeeringConnectionOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowDnsResolutionFromRemoteVpc() != null)\r\n        sb.append(\"AllowDnsResolutionFromRemoteVpc: \").append(getAllowDnsResolutionFromRemoteVpc()).append(\",\");\r\n    if (getAllowEgressFromLocalClassicLinkToRemoteVpc() != null)\r\n        sb.append(\"AllowEgressFromLocalClassicLinkToRemoteVpc: \").append(getAllowEgressFromLocalClassicLinkToRemoteVpc()).append(\",\");\r\n    if (getAllowEgressFromLocalVpcToRemoteClassicLink() != null)\r\n        sb.append(\"AllowEgressFromLocalVpcToRemoteClassicLink: \").append(getAllowEgressFromLocalVpcToRemoteClassicLink());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.ItemUtils.toExpectedAttributeValueMap",
	"Comment": "returns the low level representation of a collection of expected.",
	"Method": "Map<String, ExpectedAttributeValue> toExpectedAttributeValueMap(Collection<Expected> expectedSet){\r\n    if (expectedSet == null)\r\n        return null;\r\n    Map<String, ExpectedAttributeValue> expectedMap = new LinkedHashMap<String, ExpectedAttributeValue>();\r\n    for (Expected expected : expectedSet) {\r\n        final String attr = expected.getAttribute();\r\n        final Object[] values = expected.getValues();\r\n        ExpectedAttributeValue eav = new ExpectedAttributeValue();\r\n        if (values != null) {\r\n            if (values.length > 0) {\r\n                AttributeValue[] avs = InternalUtils.toAttributeValues(values);\r\n                eav.withAttributeValueList(avs);\r\n            } else {\r\n                throw new IllegalStateException(\"Bug!\");\r\n            }\r\n        }\r\n        ComparisonOperator op = expected.getComparisonOperator();\r\n        if (op == null) {\r\n            throw new IllegalArgumentException(\"Comparison operator for attribute \" + expected.getAttribute() + \" must be specified\");\r\n        }\r\n        eav.withComparisonOperator(op);\r\n        expectedMap.put(attr, eav);\r\n    }\r\n    if (expectedSet.size() != expectedMap.size())\r\n        throw new IllegalArgumentException(\"duplicates attribute names not allowed in input\");\r\n    return Collections.unmodifiableMap(expectedMap);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.CreateLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancers() != null)\r\n        sb.append(\"LoadBalancers: \").append(getLoadBalancers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.setConditionExpression",
	"Comment": "a condition that must be satisfied in order for a conditional deleteitemto succeed.",
	"Method": "void setConditionExpression(String conditionExpression){\r\n    this.conditionExpression = conditionExpression;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteDhcpOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDhcpOptionsId() != null)\r\n        sb.append(\"DhcpOptionsId: \").append(getDhcpOptionsId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.describeFileSystemsAsync",
	"Comment": "simplified method form for invoking the describefilesystems operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeFileSystemsResult> describeFileSystemsAsync(DescribeFileSystemsRequest request,java.util.concurrent.Future<DescribeFileSystemsResult> describeFileSystemsAsync,DescribeFileSystemsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest, DescribeFileSystemsResult> asyncHandler,java.util.concurrent.Future<DescribeFileSystemsResult> describeFileSystemsAsync,java.util.concurrent.Future<DescribeFileSystemsResult> describeFileSystemsAsync,com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest, DescribeFileSystemsResult> asyncHandler){\r\n    return describeFileSystemsAsync(new DescribeFileSystemsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DescribeTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeIdFormatAsync",
	"Comment": "simplified method form for invoking the describeidformat operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeIdFormatResult> describeIdFormatAsync(DescribeIdFormatRequest request,java.util.concurrent.Future<DescribeIdFormatResult> describeIdFormatAsync,DescribeIdFormatRequest request,com.amazonaws.handlers.AsyncHandler<DescribeIdFormatRequest, DescribeIdFormatResult> asyncHandler,java.util.concurrent.Future<DescribeIdFormatResult> describeIdFormatAsync,java.util.concurrent.Future<DescribeIdFormatResult> describeIdFormatAsync,com.amazonaws.handlers.AsyncHandler<DescribeIdFormatRequest, DescribeIdFormatResult> asyncHandler){\r\n    return describeIdFormatAsync(new DescribeIdFormatRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DescribeClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusters() != null)\r\n        sb.append(\"Clusters: \").append(getClusters()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.deleteItemAsync",
	"Comment": "simplified method form for invoking the deleteitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DeleteItemResult> deleteItemAsync(DeleteItemRequest request,java.util.concurrent.Future<DeleteItemResult> deleteItemAsync,DeleteItemRequest request,com.amazonaws.handlers.AsyncHandler<DeleteItemRequest, DeleteItemResult> asyncHandler,java.util.concurrent.Future<DeleteItemResult> deleteItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.concurrent.Future<DeleteItemResult> deleteItemAsync,String tableName,java.util.Map<String, AttributeValue> key,com.amazonaws.handlers.AsyncHandler<DeleteItemRequest, DeleteItemResult> asyncHandler,java.util.concurrent.Future<DeleteItemResult> deleteItemAsync,String tableName,java.util.Map<String, AttributeValue> key,String returnValues,java.util.concurrent.Future<DeleteItemResult> deleteItemAsync,String tableName,java.util.Map<String, AttributeValue> key,String returnValues,com.amazonaws.handlers.AsyncHandler<DeleteItemRequest, DeleteItemResult> asyncHandler){\r\n    return deleteItemAsync(new DeleteItemRequest().withTableName(tableName).withKey(key).withReturnValues(returnValues), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeRouteTablesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRouteTables() != null)\r\n        sb.append(\"RouteTables: \").append(getRouteTables()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AbstractAmazonECSAsync.listTaskDefinitionFamiliesAsync",
	"Comment": "simplified method form for invoking the listtaskdefinitionfamilies operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTaskDefinitionFamiliesResult> listTaskDefinitionFamiliesAsync(ListTaskDefinitionFamiliesRequest request,java.util.concurrent.Future<ListTaskDefinitionFamiliesResult> listTaskDefinitionFamiliesAsync,ListTaskDefinitionFamiliesRequest request,com.amazonaws.handlers.AsyncHandler<ListTaskDefinitionFamiliesRequest, ListTaskDefinitionFamiliesResult> asyncHandler,java.util.concurrent.Future<ListTaskDefinitionFamiliesResult> listTaskDefinitionFamiliesAsync,java.util.concurrent.Future<ListTaskDefinitionFamiliesResult> listTaskDefinitionFamiliesAsync,com.amazonaws.handlers.AsyncHandler<ListTaskDefinitionFamiliesRequest, ListTaskDefinitionFamiliesResult> asyncHandler){\r\n    return listTaskDefinitionFamiliesAsync(new ListTaskDefinitionFamiliesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeIdentityIdFormatResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatuses() != null)\r\n        sb.append(\"Statuses: \").append(getStatuses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcEndpoints() != null)\r\n        sb.append(\"VpcEndpoints: \").append(getVpcEndpoints()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeImagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImages() != null)\r\n        sb.append(\"Images: \").append(getImages());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBStreamsClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.CreateTargetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getHealthCheckProtocol() != null)\r\n        sb.append(\"HealthCheckProtocol: \").append(getHealthCheckProtocol()).append(\",\");\r\n    if (getHealthCheckPort() != null)\r\n        sb.append(\"HealthCheckPort: \").append(getHealthCheckPort()).append(\",\");\r\n    if (getHealthCheckEnabled() != null)\r\n        sb.append(\"HealthCheckEnabled: \").append(getHealthCheckEnabled()).append(\",\");\r\n    if (getHealthCheckPath() != null)\r\n        sb.append(\"HealthCheckPath: \").append(getHealthCheckPath()).append(\",\");\r\n    if (getHealthCheckIntervalSeconds() != null)\r\n        sb.append(\"HealthCheckIntervalSeconds: \").append(getHealthCheckIntervalSeconds()).append(\",\");\r\n    if (getHealthCheckTimeoutSeconds() != null)\r\n        sb.append(\"HealthCheckTimeoutSeconds: \").append(getHealthCheckTimeoutSeconds()).append(\",\");\r\n    if (getHealthyThresholdCount() != null)\r\n        sb.append(\"HealthyThresholdCount: \").append(getHealthyThresholdCount()).append(\",\");\r\n    if (getUnhealthyThresholdCount() != null)\r\n        sb.append(\"UnhealthyThresholdCount: \").append(getUnhealthyThresholdCount()).append(\",\");\r\n    if (getMatcher() != null)\r\n        sb.append(\"Matcher: \").append(getMatcher()).append(\",\");\r\n    if (getTargetType() != null)\r\n        sb.append(\"TargetType: \").append(getTargetType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AbstractAWSElasticBeanstalkAsync.abortEnvironmentUpdateAsync",
	"Comment": "simplified method form for invoking the abortenvironmentupdate operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<AbortEnvironmentUpdateResult> abortEnvironmentUpdateAsync(AbortEnvironmentUpdateRequest request,java.util.concurrent.Future<AbortEnvironmentUpdateResult> abortEnvironmentUpdateAsync,AbortEnvironmentUpdateRequest request,com.amazonaws.handlers.AsyncHandler<AbortEnvironmentUpdateRequest, AbortEnvironmentUpdateResult> asyncHandler,java.util.concurrent.Future<AbortEnvironmentUpdateResult> abortEnvironmentUpdateAsync,java.util.concurrent.Future<AbortEnvironmentUpdateResult> abortEnvironmentUpdateAsync,com.amazonaws.handlers.AsyncHandler<AbortEnvironmentUpdateRequest, AbortEnvironmentUpdateResult> asyncHandler){\r\n    return abortEnvironmentUpdateAsync(new AbortEnvironmentUpdateRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateConfigurationTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getDeploymentStatus() != null)\r\n        sb.append(\"DeploymentStatus: \").append(getDeploymentStatus()).append(\",\");\r\n    if (getDateCreated() != null)\r\n        sb.append(\"DateCreated: \").append(getDateCreated()).append(\",\");\r\n    if (getDateUpdated() != null)\r\n        sb.append(\"DateUpdated: \").append(getDateUpdated()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CopyFpgaImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageId() != null)\r\n        sb.append(\"FpgaImageId: \").append(getFpgaImageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceTransitGatewayRouteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoute() != null)\r\n        sb.append(\"Route: \").append(getRoute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.getTransitGatewayRouteTableAssociations",
	"Comment": "gets information about the associations for the specified transit gateway route table.",
	"Method": "GetTransitGatewayRouteTableAssociationsResult getTransitGatewayRouteTableAssociations(GetTransitGatewayRouteTableAssociationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTransitGatewayRouteTableAssociations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.LinuxParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapabilities() != null)\r\n        sb.append(\"Capabilities: \").append(getCapabilities()).append(\",\");\r\n    if (getDevices() != null)\r\n        sb.append(\"Devices: \").append(getDevices()).append(\",\");\r\n    if (getInitProcessEnabled() != null)\r\n        sb.append(\"InitProcessEnabled: \").append(getInitProcessEnabled()).append(\",\");\r\n    if (getSharedMemorySize() != null)\r\n        sb.append(\"SharedMemorySize: \").append(getSharedMemorySize()).append(\",\");\r\n    if (getTmpfs() != null)\r\n        sb.append(\"Tmpfs: \").append(getTmpfs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.UploadLayerPartResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getUploadId() != null)\r\n        sb.append(\"UploadId: \").append(getUploadId()).append(\",\");\r\n    if (getLastByteReceived() != null)\r\n        sb.append(\"LastByteReceived: \").append(getLastByteReceived());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeGlobalTableSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableName() != null)\r\n        sb.append(\"GlobalTableName: \").append(getGlobalTableName()).append(\",\");\r\n    if (getReplicaSettings() != null)\r\n        sb.append(\"ReplicaSettings: \").append(getReplicaSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelSpotFleetRequestsError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFleetInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointConnectionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcEndpointConnections() != null)\r\n        sb.append(\"VpcEndpointConnections: \").append(getVpcEndpointConnections()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeRulesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEnvironmentManagedActionHistoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getManagedActionHistoryItems() != null)\r\n        sb.append(\"ManagedActionHistoryItems: \").append(getManagedActionHistoryItems()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeHostReservationOfferingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getMaxDuration() != null)\r\n        sb.append(\"MaxDuration: \").append(getMaxDuration()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getMinDuration() != null)\r\n        sb.append(\"MinDuration: \").append(getMinDuration()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DeleteMountTargetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointConnectionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerNames() != null)\r\n        sb.append(\"LoadBalancerNames: \").append(getLoadBalancerNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ListBackupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupSummaries() != null)\r\n        sb.append(\"BackupSummaries: \").append(getBackupSummaries()).append(\",\");\r\n    if (getLastEvaluatedBackupArn() != null)\r\n        sb.append(\"LastEvaluatedBackupArn: \").append(getLastEvaluatedBackupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AbstractAmazonECSAsync.listTasksAsync",
	"Comment": "simplified method form for invoking the listtasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTasksResult> listTasksAsync(ListTasksRequest request,java.util.concurrent.Future<ListTasksResult> listTasksAsync,ListTasksRequest request,com.amazonaws.handlers.AsyncHandler<ListTasksRequest, ListTasksResult> asyncHandler,java.util.concurrent.Future<ListTasksResult> listTasksAsync,java.util.concurrent.Future<ListTasksResult> listTasksAsync,com.amazonaws.handlers.AsyncHandler<ListTasksRequest, ListTasksResult> asyncHandler){\r\n    return listTasksAsync(new ListTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeExportTasksAsync",
	"Comment": "simplified method form for invoking the describeexporttasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeExportTasksResult> describeExportTasksAsync(DescribeExportTasksRequest request,java.util.concurrent.Future<DescribeExportTasksResult> describeExportTasksAsync,DescribeExportTasksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeExportTasksRequest, DescribeExportTasksResult> asyncHandler,java.util.concurrent.Future<DescribeExportTasksResult> describeExportTasksAsync,java.util.concurrent.Future<DescribeExportTasksResult> describeExportTasksAsync,com.amazonaws.handlers.AsyncHandler<DescribeExportTasksRequest, DescribeExportTasksResult> asyncHandler){\r\n    return describeExportTasksAsync(new DescribeExportTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeLoadBalancerAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RebootInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ConfigurationSettingsDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getDeploymentStatus() != null)\r\n        sb.append(\"DeploymentStatus: \").append(getDeploymentStatus()).append(\",\");\r\n    if (getDateCreated() != null)\r\n        sb.append(\"DateCreated: \").append(getDateCreated()).append(\",\");\r\n    if (getDateUpdated() != null)\r\n        sb.append(\"DateUpdated: \").append(getDateUpdated()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReservedInstancesOffering.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getReservedInstancesOfferingId() != null)\r\n        sb.append(\"ReservedInstancesOfferingId: \").append(getReservedInstancesOfferingId()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getInstanceTenancy() != null)\r\n        sb.append(\"InstanceTenancy: \").append(getInstanceTenancy()).append(\",\");\r\n    if (getMarketplace() != null)\r\n        sb.append(\"Marketplace: \").append(getMarketplace()).append(\",\");\r\n    if (getOfferingClass() != null)\r\n        sb.append(\"OfferingClass: \").append(getOfferingClass()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getPricingDetails() != null)\r\n        sb.append(\"PricingDetails: \").append(getPricingDetails()).append(\",\");\r\n    if (getRecurringCharges() != null)\r\n        sb.append(\"RecurringCharges: \").append(getRecurringCharges()).append(\",\");\r\n    if (getScope() != null)\r\n        sb.append(\"Scope: \").append(getScope());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeNetworkInterfacesAsync",
	"Comment": "simplified method form for invoking the describenetworkinterfaces operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeNetworkInterfacesResult> describeNetworkInterfacesAsync(DescribeNetworkInterfacesRequest request,java.util.concurrent.Future<DescribeNetworkInterfacesResult> describeNetworkInterfacesAsync,DescribeNetworkInterfacesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeNetworkInterfacesRequest, DescribeNetworkInterfacesResult> asyncHandler,java.util.concurrent.Future<DescribeNetworkInterfacesResult> describeNetworkInterfacesAsync,java.util.concurrent.Future<DescribeNetworkInterfacesResult> describeNetworkInterfacesAsync,com.amazonaws.handlers.AsyncHandler<DescribeNetworkInterfacesRequest, DescribeNetworkInterfacesResult> asyncHandler){\r\n    return describeNetworkInterfacesAsync(new DescribeNetworkInterfacesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.NetworkConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAwsvpcConfiguration() != null)\r\n        sb.append(\"AwsvpcConfiguration: \").append(getAwsvpcConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Region.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReleaseAddressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.getConditionalOperator",
	"Comment": "returns the logical operator on the expected attribute conditions of thisdelete operation.",
	"Method": "String getConditionalOperator(){\r\n    return conditionalOperator;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describePlacementGroups",
	"Comment": "describes one or more of your placement groups. for more information, see placement groups in theamazon elastic compute cloud user guide.",
	"Method": "DescribePlacementGroupsResult describePlacementGroups(DescribePlacementGroupsRequest request,DescribePlacementGroupsResult describePlacementGroups){\r\n    return describePlacementGroups(new DescribePlacementGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeInstanceAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ModifyCacheSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSubnetGroupName() != null)\r\n        sb.append(\"CacheSubnetGroupName: \").append(getCacheSubnetGroupName()).append(\",\");\r\n    if (getCacheSubnetGroupDescription() != null)\r\n        sb.append(\"CacheSubnetGroupDescription: \").append(getCacheSubnetGroupDescription()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.AddTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateNetworkAclResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkAcl() != null)\r\n        sb.append(\"NetworkAcl: \").append(getNetworkAcl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ReplicationGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPendingModifiedValues() != null)\r\n        sb.append(\"PendingModifiedValues: \").append(getPendingModifiedValues()).append(\",\");\r\n    if (getMemberClusters() != null)\r\n        sb.append(\"MemberClusters: \").append(getMemberClusters()).append(\",\");\r\n    if (getNodeGroups() != null)\r\n        sb.append(\"NodeGroups: \").append(getNodeGroups()).append(\",\");\r\n    if (getSnapshottingClusterId() != null)\r\n        sb.append(\"SnapshottingClusterId: \").append(getSnapshottingClusterId()).append(\",\");\r\n    if (getAutomaticFailover() != null)\r\n        sb.append(\"AutomaticFailover: \").append(getAutomaticFailover()).append(\",\");\r\n    if (getConfigurationEndpoint() != null)\r\n        sb.append(\"ConfigurationEndpoint: \").append(getConfigurationEndpoint()).append(\",\");\r\n    if (getSnapshotRetentionLimit() != null)\r\n        sb.append(\"SnapshotRetentionLimit: \").append(getSnapshotRetentionLimit()).append(\",\");\r\n    if (getSnapshotWindow() != null)\r\n        sb.append(\"SnapshotWindow: \").append(getSnapshotWindow()).append(\",\");\r\n    if (getClusterEnabled() != null)\r\n        sb.append(\"ClusterEnabled: \").append(getClusterEnabled()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getAuthTokenEnabled() != null)\r\n        sb.append(\"AuthTokenEnabled: \").append(getAuthTokenEnabled()).append(\",\");\r\n    if (getTransitEncryptionEnabled() != null)\r\n        sb.append(\"TransitEncryptionEnabled: \").append(getTransitEncryptionEnabled()).append(\",\");\r\n    if (getAtRestEncryptionEnabled() != null)\r\n        sb.append(\"AtRestEncryptionEnabled: \").append(getAtRestEncryptionEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeExportTasksAsync",
	"Comment": "simplified method form for invoking the describeexporttasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeExportTasksResult> describeExportTasksAsync(DescribeExportTasksRequest request,java.util.concurrent.Future<DescribeExportTasksResult> describeExportTasksAsync,DescribeExportTasksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeExportTasksRequest, DescribeExportTasksResult> asyncHandler,java.util.concurrent.Future<DescribeExportTasksResult> describeExportTasksAsync,java.util.concurrent.Future<DescribeExportTasksResult> describeExportTasksAsync,com.amazonaws.handlers.AsyncHandler<DescribeExportTasksRequest, DescribeExportTasksResult> asyncHandler){\r\n    return describeExportTasksAsync(new DescribeExportTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateRouteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PciId.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId()).append(\",\");\r\n    if (getVendorId() != null)\r\n        sb.append(\"VendorId: \").append(getVendorId()).append(\",\");\r\n    if (getSubsystemId() != null)\r\n        sb.append(\"SubsystemId: \").append(getSubsystemId()).append(\",\");\r\n    if (getSubsystemVendorId() != null)\r\n        sb.append(\"SubsystemVendorId: \").append(getSubsystemVendorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeCustomerGatewaysFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeCustomerGatewaysResult apply(DescribeCustomerGatewaysRequest describeCustomerGatewaysRequest){\r\n    return client.describeCustomerGateways(describeCustomerGatewaysRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.ReflectionUtils.getFieldNameByGetter",
	"Comment": "returns the field name that corresponds to the given getter method,according to the java naming convention.",
	"Method": "String getFieldNameByGetter(Method getter,boolean forceCamelCase){\r\n    String getterName = getter.getName();\r\n    String fieldNameWithUpperCamelCase = \"\";\r\n    if (getterName.startsWith(\"get\")) {\r\n        fieldNameWithUpperCamelCase = getterName.substring(\"get\".length());\r\n    } else if (getterName.startsWith(\"is\")) {\r\n        fieldNameWithUpperCamelCase = getterName.substring(\"is\".length());\r\n    }\r\n    if (fieldNameWithUpperCamelCase.length() == 0) {\r\n        throw new DynamoDBMappingException(\"Getter must begin with 'get' or 'is', and the field name must contain at least one character.\");\r\n    }\r\n    if (forceCamelCase) {\r\n        return StringUtils.lowerCase(fieldNameWithUpperCamelCase.substring(0, 1)) + fieldNameWithUpperCamelCase.substring(1);\r\n    } else {\r\n        return fieldNameWithUpperCamelCase;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateEgressOnlyInternetGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getEgressOnlyInternetGateway() != null)\r\n        sb.append(\"EgressOnlyInternetGateway: \").append(getEgressOnlyInternetGateway());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AuthorizeSecurityGroupEgressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getIpPermissions() != null)\r\n        sb.append(\"IpPermissions: \").append(getIpPermissions()).append(\",\");\r\n    if (getCidrIp() != null)\r\n        sb.append(\"CidrIp: \").append(getCidrIp()).append(\",\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getIpProtocol() != null)\r\n        sb.append(\"IpProtocol: \").append(getIpProtocol()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort()).append(\",\");\r\n    if (getSourceSecurityGroupName() != null)\r\n        sb.append(\"SourceSecurityGroupName: \").append(getSourceSecurityGroupName()).append(\",\");\r\n    if (getSourceSecurityGroupOwnerId() != null)\r\n        sb.append(\"SourceSecurityGroupOwnerId: \").append(getSourceSecurityGroupOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LicenseConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.RequestEnvironmentInfoRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getInfoType() != null)\r\n        sb.append(\"InfoType: \").append(getInfoType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.S3Storage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAWSAccessKeyId() != null)\r\n        sb.append(\"AWSAccessKeyId: \").append(getAWSAccessKeyId()).append(\",\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getUploadPolicy() != null)\r\n        sb.append(\"UploadPolicy: \").append(getUploadPolicy()).append(\",\");\r\n    if (getUploadPolicySignature() != null)\r\n        sb.append(\"UploadPolicySignature: \").append(getUploadPolicySignature());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CidrBlock.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateRouteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TerminateInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTerminatingInstances() != null)\r\n        sb.append(\"TerminatingInstances: \").append(getTerminatingInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.CompleteLayerUploadResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getUploadId() != null)\r\n        sb.append(\"UploadId: \").append(getUploadId()).append(\",\");\r\n    if (getLayerDigest() != null)\r\n        sb.append(\"LayerDigest: \").append(getLayerDigest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplatePlacement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getAffinity() != null)\r\n        sb.append(\"Affinity: \").append(getAffinity()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getHostId() != null)\r\n        sb.append(\"HostId: \").append(getHostId()).append(\",\");\r\n    if (getTenancy() != null)\r\n        sb.append(\"Tenancy: \").append(getTenancy()).append(\",\");\r\n    if (getSpreadDomain() != null)\r\n        sb.append(\"SpreadDomain: \").append(getSpreadDomain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.waiters.AmazonECSWaiters.servicesInactive",
	"Comment": "builds a servicesinactive waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeServicesRequest> servicesInactive(){\r\n    return new WaiterBuilder<DescribeServicesRequest, DescribeServicesResult>().withSdkFunction(new DescribeServicesFunction(client)).withAcceptors(new ServicesInactive.IsMISSINGMatcher(), new ServicesInactive.IsINACTIVEMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceMarketOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarketType() != null)\r\n        sb.append(\"MarketType: \").append(getMarketType()).append(\",\");\r\n    if (getSpotOptions() != null)\r\n        sb.append(\"SpotOptions: \").append(getSpotOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeSpotInstanceRequestsAsync",
	"Comment": "simplified method form for invoking the describespotinstancerequests operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSpotInstanceRequestsResult> describeSpotInstanceRequestsAsync(DescribeSpotInstanceRequestsRequest request,java.util.concurrent.Future<DescribeSpotInstanceRequestsResult> describeSpotInstanceRequestsAsync,DescribeSpotInstanceRequestsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSpotInstanceRequestsRequest, DescribeSpotInstanceRequestsResult> asyncHandler,java.util.concurrent.Future<DescribeSpotInstanceRequestsResult> describeSpotInstanceRequestsAsync,java.util.concurrent.Future<DescribeSpotInstanceRequestsResult> describeSpotInstanceRequestsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSpotInstanceRequestsRequest, DescribeSpotInstanceRequestsResult> asyncHandler){\r\n    return describeSpotInstanceRequestsAsync(new DescribeSpotInstanceRequestsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.UploadLayerPartRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getUploadId() != null)\r\n        sb.append(\"UploadId: \").append(getUploadId()).append(\",\");\r\n    if (getPartFirstByte() != null)\r\n        sb.append(\"PartFirstByte: \").append(getPartFirstByte()).append(\",\");\r\n    if (getPartLastByte() != null)\r\n        sb.append(\"PartLastByte: \").append(getPartLastByte()).append(\",\");\r\n    if (getLayerPartBlob() != null)\r\n        sb.append(\"LayerPartBlob: \").append(getLayerPartBlob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.LoadBalancerAddress.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getAllocationId() != null)\r\n        sb.append(\"AllocationId: \").append(getAllocationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.StreamDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamArn() != null)\r\n        sb.append(\"StreamArn: \").append(getStreamArn()).append(\",\");\r\n    if (getStreamLabel() != null)\r\n        sb.append(\"StreamLabel: \").append(getStreamLabel()).append(\",\");\r\n    if (getStreamStatus() != null)\r\n        sb.append(\"StreamStatus: \").append(getStreamStatus()).append(\",\");\r\n    if (getStreamViewType() != null)\r\n        sb.append(\"StreamViewType: \").append(getStreamViewType()).append(\",\");\r\n    if (getCreationRequestDateTime() != null)\r\n        sb.append(\"CreationRequestDateTime: \").append(getCreationRequestDateTime()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getShards() != null)\r\n        sb.append(\"Shards: \").append(getShards()).append(\",\");\r\n    if (getLastEvaluatedShardId() != null)\r\n        sb.append(\"LastEvaluatedShardId: \").append(getLastEvaluatedShardId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpotDatafeedSubscription() != null)\r\n        sb.append(\"SpotDatafeedSubscription: \").append(getSpotDatafeedSubscription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateGlobalTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableDescription() != null)\r\n        sb.append(\"GlobalTableDescription: \").append(getGlobalTableDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteFpgaImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ProvisionedBandwidth.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProvisionTime() != null)\r\n        sb.append(\"ProvisionTime: \").append(getProvisionTime()).append(\",\");\r\n    if (getProvisioned() != null)\r\n        sb.append(\"Provisioned: \").append(getProvisioned()).append(\",\");\r\n    if (getRequestTime() != null)\r\n        sb.append(\"RequestTime: \").append(getRequestTime()).append(\",\");\r\n    if (getRequested() != null)\r\n        sb.append(\"Requested: \").append(getRequested()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.UpdateContainerInstancesStateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerInstances() != null)\r\n        sb.append(\"ContainerInstances: \").append(getContainerInstances()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.deleteListener",
	"Comment": "deletes the specified listener.alternatively, your listener is deleted when you delete the load balancer to which it is attached, usingdeleteloadbalancer.",
	"Method": "DeleteListenerResult deleteListener(DeleteListenerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteListener(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteTransitGatewayRouteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTable() != null)\r\n        sb.append(\"TransitGatewayRouteTable: \").append(getTransitGatewayRouteTable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeLaunchTemplateVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions()).append(\",\");\r\n    if (getMinVersion() != null)\r\n        sb.append(\"MinVersion: \").append(getMinVersion()).append(\",\");\r\n    if (getMaxVersion() != null)\r\n        sb.append(\"MaxVersion: \").append(getMaxVersion()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ListAllowedNodeTypeModificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Placement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getAffinity() != null)\r\n        sb.append(\"Affinity: \").append(getAffinity()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getHostId() != null)\r\n        sb.append(\"HostId: \").append(getHostId()).append(\",\");\r\n    if (getTenancy() != null)\r\n        sb.append(\"Tenancy: \").append(getTenancy()).append(\",\");\r\n    if (getSpreadDomain() != null)\r\n        sb.append(\"SpreadDomain: \").append(getSpreadDomain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FleetData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActivityStatus() != null)\r\n        sb.append(\"ActivityStatus: \").append(getActivityStatus()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getFleetState() != null)\r\n        sb.append(\"FleetState: \").append(getFleetState()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getExcessCapacityTerminationPolicy() != null)\r\n        sb.append(\"ExcessCapacityTerminationPolicy: \").append(getExcessCapacityTerminationPolicy()).append(\",\");\r\n    if (getFulfilledCapacity() != null)\r\n        sb.append(\"FulfilledCapacity: \").append(getFulfilledCapacity()).append(\",\");\r\n    if (getFulfilledOnDemandCapacity() != null)\r\n        sb.append(\"FulfilledOnDemandCapacity: \").append(getFulfilledOnDemandCapacity()).append(\",\");\r\n    if (getLaunchTemplateConfigs() != null)\r\n        sb.append(\"LaunchTemplateConfigs: \").append(getLaunchTemplateConfigs()).append(\",\");\r\n    if (getTargetCapacitySpecification() != null)\r\n        sb.append(\"TargetCapacitySpecification: \").append(getTargetCapacitySpecification()).append(\",\");\r\n    if (getTerminateInstancesWithExpiration() != null)\r\n        sb.append(\"TerminateInstancesWithExpiration: \").append(getTerminateInstancesWithExpiration()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValidFrom() != null)\r\n        sb.append(\"ValidFrom: \").append(getValidFrom()).append(\",\");\r\n    if (getValidUntil() != null)\r\n        sb.append(\"ValidUntil: \").append(getValidUntil()).append(\",\");\r\n    if (getReplaceUnhealthyInstances() != null)\r\n        sb.append(\"ReplaceUnhealthyInstances: \").append(getReplaceUnhealthyInstances()).append(\",\");\r\n    if (getSpotOptions() != null)\r\n        sb.append(\"SpotOptions: \").append(getSpotOptions()).append(\",\");\r\n    if (getOnDemandOptions() != null)\r\n        sb.append(\"OnDemandOptions: \").append(getOnDemandOptions()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyCapacityReservationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeSpotFleetRequestHistory",
	"Comment": "describes the events for the specified spot fleet request during the specified time.spot fleet events are delayed by up to 30 seconds before they can be described. this ensures that you can queryby the last evaluated time and not miss a recorded event. spot fleet events are available for 48 hours.",
	"Method": "DescribeSpotFleetRequestHistoryResult describeSpotFleetRequestHistory(DescribeSpotFleetRequestHistoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSpotFleetRequestHistory(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeDhcpOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDhcpOptionsIds() != null)\r\n        sb.append(\"DhcpOptionsIds: \").append(getDhcpOptionsIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.AttachLoadBalancerToSubnetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VolumeDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetPasswordDataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.VpcConfigResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeLaunchTemplatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplates() != null)\r\n        sb.append(\"LaunchTemplates: \").append(getLaunchTemplates()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DeleteBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupDescription() != null)\r\n        sb.append(\"BackupDescription: \").append(getBackupDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.listTasks",
	"Comment": "returns a list of tasks for a specified cluster. you can filter the results by family name, by a particularcontainer instance, or by the desired status of the task with the family,containerinstance, and desiredstatus parameters.recently stopped tasks might appear in the returned results. currently, stopped tasks appear in the returnedresults for at least one hour.",
	"Method": "ListTasksResult listTasks(ListTasksRequest request,ListTasksResult listTasks){\r\n    return listTasks(new ListTasksRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RegisterImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DockerVolumeConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScope() != null)\r\n        sb.append(\"Scope: \").append(getScope()).append(\",\");\r\n    if (getAutoprovision() != null)\r\n        sb.append(\"Autoprovision: \").append(getAutoprovision()).append(\",\");\r\n    if (getDriver() != null)\r\n        sb.append(\"Driver: \").append(getDriver()).append(\",\");\r\n    if (getDriverOpts() != null)\r\n        sb.append(\"DriverOpts: \").append(getDriverOpts()).append(\",\");\r\n    if (getLabels() != null)\r\n        sb.append(\"Labels: \").append(getLabels());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ReservedCacheNodesOffering.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedCacheNodesOfferingId() != null)\r\n        sb.append(\"ReservedCacheNodesOfferingId: \").append(getReservedCacheNodesOfferingId()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getRecurringCharges() != null)\r\n        sb.append(\"RecurringCharges: \").append(getRecurringCharges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GetItemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem()).append(\",\");\r\n    if (getConsumedCapacity() != null)\r\n        sb.append(\"ConsumedCapacity: \").append(getConsumedCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpcPeeringConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.FluentArrayList.appendAll",
	"Comment": "fluent method to add the elements from the specified collection to thislist.",
	"Method": "FluentArrayList<E> appendAll(Collection<? extends E> c,FluentArrayList<E> appendAll,E elements){\r\n    if (elements != null) {\r\n        for (E e : elements) add(e);\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeExportTasksFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeExportTasksResult apply(DescribeExportTasksRequest describeExportTasksRequest){\r\n    return client.describeExportTasks(describeExportTasksRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBStreamsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImageDiskContainer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getUserBucket() != null)\r\n        sb.append(\"UserBucket: \").append(getUserBucket());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateCapacityReservationSpecificationResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityReservationPreference() != null)\r\n        sb.append(\"CapacityReservationPreference: \").append(getCapacityReservationPreference()).append(\",\");\r\n    if (getCapacityReservationTarget() != null)\r\n        sb.append(\"CapacityReservationTarget: \").append(getCapacityReservationTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DetachVpnGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getVpnGatewayId() != null)\r\n        sb.append(\"VpnGatewayId: \").append(getVpnGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DescribeRepositoriesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositories() != null)\r\n        sb.append(\"Repositories: \").append(getRepositories()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeSnapshotsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeSnapshotsResult apply(DescribeSnapshotsRequest describeSnapshotsRequest){\r\n    return client.describeSnapshots(describeSnapshotsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ClassicLoadBalancersConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClassicLoadBalancers() != null)\r\n        sb.append(\"ClassicLoadBalancers: \").append(getClassicLoadBalancers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTransitGatewayVpcAttachmentRequestOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDnsSupport() != null)\r\n        sb.append(\"DnsSupport: \").append(getDnsSupport()).append(\",\");\r\n    if (getIpv6Support() != null)\r\n        sb.append(\"Ipv6Support: \").append(getIpv6Support());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.LifecyclePolicyPreviewResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageTags() != null)\r\n        sb.append(\"ImageTags: \").append(getImageTags()).append(\",\");\r\n    if (getImageDigest() != null)\r\n        sb.append(\"ImageDigest: \").append(getImageDigest()).append(\",\");\r\n    if (getImagePushedAt() != null)\r\n        sb.append(\"ImagePushedAt: \").append(getImagePushedAt()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getAppliedRulePriority() != null)\r\n        sb.append(\"AppliedRulePriority: \").append(getAppliedRulePriority());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ElasticGpuAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticGpuId() != null)\r\n        sb.append(\"ElasticGpuId: \").append(getElasticGpuId()).append(\",\");\r\n    if (getElasticGpuAssociationId() != null)\r\n        sb.append(\"ElasticGpuAssociationId: \").append(getElasticGpuAssociationId()).append(\",\");\r\n    if (getElasticGpuAssociationState() != null)\r\n        sb.append(\"ElasticGpuAssociationState: \").append(getElasticGpuAssociationState()).append(\",\");\r\n    if (getElasticGpuAssociationTime() != null)\r\n        sb.append(\"ElasticGpuAssociationTime: \").append(getElasticGpuAssociationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeVolumesAsync",
	"Comment": "simplified method form for invoking the describevolumes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVolumesResult> describeVolumesAsync(DescribeVolumesRequest request,java.util.concurrent.Future<DescribeVolumesResult> describeVolumesAsync,DescribeVolumesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVolumesRequest, DescribeVolumesResult> asyncHandler,java.util.concurrent.Future<DescribeVolumesResult> describeVolumesAsync,java.util.concurrent.Future<DescribeVolumesResult> describeVolumesAsync,com.amazonaws.handlers.AsyncHandler<DescribeVolumesRequest, DescribeVolumesResult> asyncHandler){\r\n    return describeVolumesAsync(new DescribeVolumesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.HibernationOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigured() != null)\r\n        sb.append(\"Configured: \").append(getConfigured());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.TableStatistics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaName() != null)\r\n        sb.append(\"SchemaName: \").append(getSchemaName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getInserts() != null)\r\n        sb.append(\"Inserts: \").append(getInserts()).append(\",\");\r\n    if (getDeletes() != null)\r\n        sb.append(\"Deletes: \").append(getDeletes()).append(\",\");\r\n    if (getUpdates() != null)\r\n        sb.append(\"Updates: \").append(getUpdates()).append(\",\");\r\n    if (getDdls() != null)\r\n        sb.append(\"Ddls: \").append(getDdls()).append(\",\");\r\n    if (getFullLoadRows() != null)\r\n        sb.append(\"FullLoadRows: \").append(getFullLoadRows()).append(\",\");\r\n    if (getFullLoadCondtnlChkFailedRows() != null)\r\n        sb.append(\"FullLoadCondtnlChkFailedRows: \").append(getFullLoadCondtnlChkFailedRows()).append(\",\");\r\n    if (getFullLoadErrorRows() != null)\r\n        sb.append(\"FullLoadErrorRows: \").append(getFullLoadErrorRows()).append(\",\");\r\n    if (getLastUpdateTime() != null)\r\n        sb.append(\"LastUpdateTime: \").append(getLastUpdateTime()).append(\",\");\r\n    if (getTableState() != null)\r\n        sb.append(\"TableState: \").append(getTableState()).append(\",\");\r\n    if (getValidationPendingRecords() != null)\r\n        sb.append(\"ValidationPendingRecords: \").append(getValidationPendingRecords()).append(\",\");\r\n    if (getValidationFailedRecords() != null)\r\n        sb.append(\"ValidationFailedRecords: \").append(getValidationFailedRecords()).append(\",\");\r\n    if (getValidationSuspendedRecords() != null)\r\n        sb.append(\"ValidationSuspendedRecords: \").append(getValidationSuspendedRecords()).append(\",\");\r\n    if (getValidationState() != null)\r\n        sb.append(\"ValidationState: \").append(getValidationState()).append(\",\");\r\n    if (getValidationStateDetails() != null)\r\n        sb.append(\"ValidationStateDetails: \").append(getValidationStateDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.modifyVpcEndpointConnectionNotification",
	"Comment": "modifies a connection notification for vpc endpoint or vpc endpoint service. you can change the sns topic for thenotification, or the events for which to be notified.",
	"Method": "ModifyVpcEndpointConnectionNotificationResult modifyVpcEndpointConnectionNotification(ModifyVpcEndpointConnectionNotificationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyVpcEndpointConnectionNotification(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteEgressOnlyInternetGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturnCode() != null)\r\n        sb.append(\"ReturnCode: \").append(getReturnCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteTransitGatewayRoute",
	"Comment": "deletes the specified route from the specified transit gateway route table.",
	"Method": "DeleteTransitGatewayRouteResult deleteTransitGatewayRoute(DeleteTransitGatewayRouteRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteTransitGatewayRoute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.AutoScalingTargetTrackingScalingPolicyConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDisableScaleIn() != null)\r\n        sb.append(\"DisableScaleIn: \").append(getDisableScaleIn()).append(\",\");\r\n    if (getScaleInCooldown() != null)\r\n        sb.append(\"ScaleInCooldown: \").append(getScaleInCooldown()).append(\",\");\r\n    if (getScaleOutCooldown() != null)\r\n        sb.append(\"ScaleOutCooldown: \").append(getScaleOutCooldown()).append(\",\");\r\n    if (getTargetValue() != null)\r\n        sb.append(\"TargetValue: \").append(getTargetValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeregisterImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.EnvironmentLink.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLinkName() != null)\r\n        sb.append(\"LinkName: \").append(getLinkName()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ConversionTask.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConversionTaskId() != null)\r\n        sb.append(\"ConversionTaskId: \").append(getConversionTaskId()).append(\",\");\r\n    if (getExpirationTime() != null)\r\n        sb.append(\"ExpirationTime: \").append(getExpirationTime()).append(\",\");\r\n    if (getImportInstance() != null)\r\n        sb.append(\"ImportInstance: \").append(getImportInstance()).append(\",\");\r\n    if (getImportVolume() != null)\r\n        sb.append(\"ImportVolume: \").append(getImportVolume()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.parallelScan",
	"Comment": "scans through an amazon dynamodb table on logically partitioned segmentsin parallel and returns the matching results in one unmodifiable list ofinstantiated objects.",
	"Method": "PaginatedParallelScanList<T> parallelScan(DynamoDBScanExpression scanExpression,int totalSegments){\r\n    return mapper.<T>parallelScan(model.targetType(), scanExpression, totalSegments);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getInstancePort() != null)\r\n        sb.append(\"InstancePort: \").append(getInstancePort()).append(\",\");\r\n    if (getPolicyNames() != null)\r\n        sb.append(\"PolicyNames: \").append(getPolicyNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeAccountAttributesAsync",
	"Comment": "simplified method form for invoking the describeaccountattributes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync(DescribeAccountAttributesRequest request,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,DescribeAccountAttributesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAccountAttributesRequest, DescribeAccountAttributesResult> asyncHandler,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,com.amazonaws.handlers.AsyncHandler<DescribeAccountAttributesRequest, DescribeAccountAttributesResult> asyncHandler){\r\n    return describeAccountAttributesAsync(new DescribeAccountAttributesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DescribeTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpcResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpc() != null)\r\n        sb.append(\"Vpc: \").append(getVpc());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFlowLogsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowLogs() != null)\r\n        sb.append(\"FlowLogs: \").append(getFlowLogs()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.deleteBackup",
	"Comment": "deletes an existing backup of a table.you can call deletebackup at a maximum rate of 10 times per second.",
	"Method": "DeleteBackupResult deleteBackup(DeleteBackupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteBackup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeNetworkInterfacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeImageAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageAttribute() != null)\r\n        sb.append(\"ImageAttribute: \").append(getImageAttribute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetTransitGatewayRouteTableAssociationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.EnvironmentInfoDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInfoType() != null)\r\n        sb.append(\"InfoType: \").append(getInfoType()).append(\",\");\r\n    if (getEc2InstanceId() != null)\r\n        sb.append(\"Ec2InstanceId: \").append(getEc2InstanceId()).append(\",\");\r\n    if (getSampleTimestamp() != null)\r\n        sb.append(\"SampleTimestamp: \").append(getSampleTimestamp()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelSpotFleetRequestsSuccessItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrentSpotFleetRequestState() != null)\r\n        sb.append(\"CurrentSpotFleetRequestState: \").append(getCurrentSpotFleetRequestState()).append(\",\");\r\n    if (getPreviousSpotFleetRequestState() != null)\r\n        sb.append(\"PreviousSpotFleetRequestState: \").append(getPreviousSpotFleetRequestState()).append(\",\");\r\n    if (getSpotFleetRequestId() != null)\r\n        sb.append(\"SpotFleetRequestId: \").append(getSpotFleetRequestId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.setExpressionAttributeNames",
	"Comment": "one or more substitution variables for simplifying complex expressions.",
	"Method": "void setExpressionAttributeNames(java.util.Map<String, String> expressionAttributeNames){\r\n    this.expressionAttributeNames = expressionAttributeNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.modifyCacheParameterGroup",
	"Comment": "modifies the parameters of a cache parameter group. you can modify up to 20 parameters in a single request bysubmitting a list parameter name and value pairs.",
	"Method": "ModifyCacheParameterGroupResult modifyCacheParameterGroup(ModifyCacheParameterGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyCacheParameterGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamArn() != null)\r\n        sb.append(\"StreamArn: \").append(getStreamArn()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getExclusiveStartShardId() != null)\r\n        sb.append(\"ExclusiveStartShardId: \").append(getExclusiveStartShardId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ReplicaGlobalSecondaryIndexSettingsDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getIndexStatus() != null)\r\n        sb.append(\"IndexStatus: \").append(getIndexStatus()).append(\",\");\r\n    if (getProvisionedReadCapacityUnits() != null)\r\n        sb.append(\"ProvisionedReadCapacityUnits: \").append(getProvisionedReadCapacityUnits()).append(\",\");\r\n    if (getProvisionedReadCapacityAutoScalingSettings() != null)\r\n        sb.append(\"ProvisionedReadCapacityAutoScalingSettings: \").append(getProvisionedReadCapacityAutoScalingSettings()).append(\",\");\r\n    if (getProvisionedWriteCapacityUnits() != null)\r\n        sb.append(\"ProvisionedWriteCapacityUnits: \").append(getProvisionedWriteCapacityUnits()).append(\",\");\r\n    if (getProvisionedWriteCapacityAutoScalingSettings() != null)\r\n        sb.append(\"ProvisionedWriteCapacityAutoScalingSettings: \").append(getProvisionedWriteCapacityAutoScalingSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateDhcpOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDhcpOptions() != null)\r\n        sb.append(\"DhcpOptions: \").append(getDhcpOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.clearExpressionAttributeValuesEntries",
	"Comment": "removes all the entries added into expressionattributevalues.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DynamoDBScanExpression clearExpressionAttributeValuesEntries(){\r\n    this.expressionAttributeValues = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReleaseAddressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationId() != null)\r\n        sb.append(\"AllocationId: \").append(getAllocationId()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.createApplication",
	"Comment": "creates an application that has one configuration template named default and no applicationversions.",
	"Method": "CreateApplicationResult createApplication(CreateApplicationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateApplication(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.CreateBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupDetails() != null)\r\n        sb.append(\"BackupDetails: \").append(getBackupDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayVpcAttachmentOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDnsSupport() != null)\r\n        sb.append(\"DnsSupport: \").append(getDnsSupport()).append(\",\");\r\n    if (getIpv6Support() != null)\r\n        sb.append(\"Ipv6Support: \").append(getIpv6Support());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstancePrivateIpAddress.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociation() != null)\r\n        sb.append(\"Association: \").append(getAssociation()).append(\",\");\r\n    if (getPrimary() != null)\r\n        sb.append(\"Primary: \").append(getPrimary()).append(\",\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeImagesAsync",
	"Comment": "simplified method form for invoking the describeimages operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeImagesResult> describeImagesAsync(DescribeImagesRequest request,java.util.concurrent.Future<DescribeImagesResult> describeImagesAsync,DescribeImagesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeImagesRequest, DescribeImagesResult> asyncHandler,java.util.concurrent.Future<DescribeImagesResult> describeImagesAsync,java.util.concurrent.Future<DescribeImagesResult> describeImagesAsync,com.amazonaws.handlers.AsyncHandler<DescribeImagesRequest, DescribeImagesResult> asyncHandler){\r\n    return describeImagesAsync(new DescribeImagesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.acceptReservedInstancesExchangeQuote",
	"Comment": "accepts the convertible reserved instance exchange quote described in thegetreservedinstancesexchangequote call.",
	"Method": "AcceptReservedInstancesExchangeQuoteResult acceptReservedInstancesExchangeQuote(AcceptReservedInstancesExchangeQuoteRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAcceptReservedInstancesExchangeQuote(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Condition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeValueList() != null)\r\n        sb.append(\"AttributeValueList: \").append(getAttributeValueList()).append(\",\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.untagResource",
	"Comment": "removes the association of tags from an amazon dynamodb resource. you can call untagresource up to 5 times persecond, per account.for an overview on tagging dynamodb resources, see tagging for dynamodb inthe amazon dynamodb developer guide.",
	"Method": "UntagResourceResult untagResource(UntagResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUntagResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.disableTransitGatewayRouteTablePropagation",
	"Comment": "disables the specified resource attachment from propagating routes to the specified propagation route table.",
	"Method": "DisableTransitGatewayRouteTablePropagationResult disableTransitGatewayRouteTablePropagation(DisableTransitGatewayRouteTablePropagationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisableTransitGatewayRouteTablePropagation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.PlacementStrategy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getField() != null)\r\n        sb.append(\"Field: \").append(getField());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NatGatewayAddress.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationId() != null)\r\n        sb.append(\"AllocationId: \").append(getAllocationId()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getPrivateIp() != null)\r\n        sb.append(\"PrivateIp: \").append(getPrivateIp()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshot() != null)\r\n        sb.append(\"Snapshot: \").append(getSnapshot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotFleetInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActiveInstances() != null)\r\n        sb.append(\"ActiveInstances: \").append(getActiveInstances()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSpotFleetRequestId() != null)\r\n        sb.append(\"SpotFleetRequestId: \").append(getSpotFleetRequestId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpnConnectionRouteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisableTransitGatewayRouteTablePropagationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropagation() != null)\r\n        sb.append(\"Propagation: \").append(getPropagation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.Subnet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIdentifier() != null)\r\n        sb.append(\"SubnetIdentifier: \").append(getSubnetIdentifier()).append(\",\");\r\n    if (getSubnetAvailabilityZone() != null)\r\n        sb.append(\"SubnetAvailabilityZone: \").append(getSubnetAvailabilityZone()).append(\",\");\r\n    if (getSubnetStatus() != null)\r\n        sb.append(\"SubnetStatus: \").append(getSubnetStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkInterfaceAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationId() != null)\r\n        sb.append(\"AllocationId: \").append(getAllocationId()).append(\",\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId()).append(\",\");\r\n    if (getIpOwnerId() != null)\r\n        sb.append(\"IpOwnerId: \").append(getIpOwnerId()).append(\",\");\r\n    if (getPublicDnsName() != null)\r\n        sb.append(\"PublicDnsName: \").append(getPublicDnsName()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeFlowLogsAsync",
	"Comment": "simplified method form for invoking the describeflowlogs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeFlowLogsResult> describeFlowLogsAsync(DescribeFlowLogsRequest request,java.util.concurrent.Future<DescribeFlowLogsResult> describeFlowLogsAsync,DescribeFlowLogsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeFlowLogsRequest, DescribeFlowLogsResult> asyncHandler,java.util.concurrent.Future<DescribeFlowLogsResult> describeFlowLogsAsync,java.util.concurrent.Future<DescribeFlowLogsResult> describeFlowLogsAsync,com.amazonaws.handlers.AsyncHandler<DescribeFlowLogsRequest, DescribeFlowLogsResult> asyncHandler){\r\n    return describeFlowLogsAsync(new DescribeFlowLogsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DiskImageVolumeDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AllowedPrincipal.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipalType() != null)\r\n        sb.append(\"PrincipalType: \").append(getPrincipalType()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DeregisterTargetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyInstanceAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceDestCheck() != null)\r\n        sb.append(\"SourceDestCheck: \").append(getSourceDestCheck()).append(\",\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getDisableApiTermination() != null)\r\n        sb.append(\"DisableApiTermination: \").append(getDisableApiTermination()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getEnaSupport() != null)\r\n        sb.append(\"EnaSupport: \").append(getEnaSupport()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getInstanceInitiatedShutdownBehavior() != null)\r\n        sb.append(\"InstanceInitiatedShutdownBehavior: \").append(getInstanceInitiatedShutdownBehavior()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKernel() != null)\r\n        sb.append(\"Kernel: \").append(getKernel()).append(\",\");\r\n    if (getRamdisk() != null)\r\n        sb.append(\"Ramdisk: \").append(getRamdisk()).append(\",\");\r\n    if (getSriovNetSupport() != null)\r\n        sb.append(\"SriovNetSupport: \").append(getSriovNetSupport()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.describeReplicationGroups",
	"Comment": "returns information about a particular replication group. if no identifier is specified,describereplicationgroups returns information about all replication groups.this operation is valid for redis only.",
	"Method": "DescribeReplicationGroupsResult describeReplicationGroups(DescribeReplicationGroupsRequest request,DescribeReplicationGroupsResult describeReplicationGroups){\r\n    return describeReplicationGroups(new DescribeReplicationGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupDescription() != null)\r\n        sb.append(\"BackupDescription: \").append(getBackupDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplatesMonitoringRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.AttributeDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeType() != null)\r\n        sb.append(\"AttributeType: \").append(getAttributeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeConfigurationSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSettings() != null)\r\n        sb.append(\"ConfigurationSettings: \").append(getConfigurationSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.RemoveTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerNames() != null)\r\n        sb.append(\"LoadBalancerNames: \").append(getLoadBalancerNames()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.UpdateContainerAgentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerInstance() != null)\r\n        sb.append(\"ContainerInstance: \").append(getContainerInstance());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.PlatformSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getPlatformOwner() != null)\r\n        sb.append(\"PlatformOwner: \").append(getPlatformOwner()).append(\",\");\r\n    if (getPlatformStatus() != null)\r\n        sb.append(\"PlatformStatus: \").append(getPlatformStatus()).append(\",\");\r\n    if (getPlatformCategory() != null)\r\n        sb.append(\"PlatformCategory: \").append(getPlatformCategory()).append(\",\");\r\n    if (getOperatingSystemName() != null)\r\n        sb.append(\"OperatingSystemName: \").append(getOperatingSystemName()).append(\",\");\r\n    if (getOperatingSystemVersion() != null)\r\n        sb.append(\"OperatingSystemVersion: \").append(getOperatingSystemVersion()).append(\",\");\r\n    if (getSupportedTierList() != null)\r\n        sb.append(\"SupportedTierList: \").append(getSupportedTierList()).append(\",\");\r\n    if (getSupportedAddonList() != null)\r\n        sb.append(\"SupportedAddonList: \").append(getSupportedAddonList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.QueryResultPage.getLastEvaluatedKey",
	"Comment": "returns the last evaluated key, which can be used as theexclusivestartkey to fetch the next page of results. returns null if thisis the last page of results.",
	"Method": "Map<String, AttributeValue> getLastEvaluatedKey(){\r\n    return lastEvaluatedKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeVpcPeeringConnectionsAsync",
	"Comment": "simplified method form for invoking the describevpcpeeringconnections operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpcPeeringConnectionsResult> describeVpcPeeringConnectionsAsync(DescribeVpcPeeringConnectionsRequest request,java.util.concurrent.Future<DescribeVpcPeeringConnectionsResult> describeVpcPeeringConnectionsAsync,DescribeVpcPeeringConnectionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpcPeeringConnectionsRequest, DescribeVpcPeeringConnectionsResult> asyncHandler,java.util.concurrent.Future<DescribeVpcPeeringConnectionsResult> describeVpcPeeringConnectionsAsync,java.util.concurrent.Future<DescribeVpcPeeringConnectionsResult> describeVpcPeeringConnectionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpcPeeringConnectionsRequest, DescribeVpcPeeringConnectionsResult> asyncHandler){\r\n    return describeVpcPeeringConnectionsAsync(new DescribeVpcPeeringConnectionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeTransitGatewayAttachmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentIds() != null)\r\n        sb.append(\"TransitGatewayAttachmentIds: \").append(getTransitGatewayAttachmentIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateDefaultVpcResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpc() != null)\r\n        sb.append(\"Vpc: \").append(getVpc());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeNatGatewaysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNatGatewayIds() != null)\r\n        sb.append(\"NatGatewayIds: \").append(getNatGatewayIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DetachVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevice() != null)\r\n        sb.append(\"Device: \").append(getDevice()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreateConfigurationTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getDeploymentStatus() != null)\r\n        sb.append(\"DeploymentStatus: \").append(getDeploymentStatus()).append(\",\");\r\n    if (getDateCreated() != null)\r\n        sb.append(\"DateCreated: \").append(getDateCreated()).append(\",\");\r\n    if (getDateUpdated() != null)\r\n        sb.append(\"DateUpdated: \").append(getDateUpdated()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ServiceEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TagDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.AuthorizeCacheSecurityGroupIngressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSecurityGroupName() != null)\r\n        sb.append(\"CacheSecurityGroupName: \").append(getCacheSecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupName() != null)\r\n        sb.append(\"EC2SecurityGroupName: \").append(getEC2SecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupOwnerId() != null)\r\n        sb.append(\"EC2SecurityGroupOwnerId: \").append(getEC2SecurityGroupOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DescribeImagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getImageIds() != null)\r\n        sb.append(\"ImageIds: \").append(getImageIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.deleteCluster",
	"Comment": "deletes the specified cluster. you must deregister all container instances from this cluster before you maydelete it. you can list the container instances in a cluster with listcontainerinstances and deregisterthem with deregistercontainerinstance.",
	"Method": "DeleteClusterResult deleteCluster(DeleteClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.saveIfExists",
	"Comment": "saves the object given into dynamodb with the condition that the hashand, if applicable, the range key, already exist.",
	"Method": "void saveIfExists(T object){\r\n    final DynamoDBSaveExpression saveExpression = new DynamoDBSaveExpression();\r\n    for (final DynamoDBMapperFieldModel<T, Object> key : model.keys()) {\r\n        saveExpression.withExpectedEntry(key.name(), new ExpectedAttributeValue().withExists(true).withValue(key.convert(key.get(object))));\r\n    }\r\n    mapper.<T>save(object, saveExpression);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstanceRecurrence.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrequency() != null)\r\n        sb.append(\"Frequency: \").append(getFrequency()).append(\",\");\r\n    if (getInterval() != null)\r\n        sb.append(\"Interval: \").append(getInterval()).append(\",\");\r\n    if (getOccurrenceDaySet() != null)\r\n        sb.append(\"OccurrenceDaySet: \").append(getOccurrenceDaySet()).append(\",\");\r\n    if (getOccurrenceRelativeToEnd() != null)\r\n        sb.append(\"OccurrenceRelativeToEnd: \").append(getOccurrenceRelativeToEnd()).append(\",\");\r\n    if (getOccurrenceUnit() != null)\r\n        sb.append(\"OccurrenceUnit: \").append(getOccurrenceUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreateEnvironmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCNAMEPrefix() != null)\r\n        sb.append(\"CNAMEPrefix: \").append(getCNAMEPrefix()).append(\",\");\r\n    if (getTier() != null)\r\n        sb.append(\"Tier: \").append(getTier()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings()).append(\",\");\r\n    if (getOptionsToRemove() != null)\r\n        sb.append(\"OptionsToRemove: \").append(getOptionsToRemove());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeIdFormatRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.describeCacheEngineVersionsAsync",
	"Comment": "simplified method form for invoking the describecacheengineversions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCacheEngineVersionsResult> describeCacheEngineVersionsAsync(DescribeCacheEngineVersionsRequest request,java.util.concurrent.Future<DescribeCacheEngineVersionsResult> describeCacheEngineVersionsAsync,DescribeCacheEngineVersionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCacheEngineVersionsRequest, DescribeCacheEngineVersionsResult> asyncHandler,java.util.concurrent.Future<DescribeCacheEngineVersionsResult> describeCacheEngineVersionsAsync,java.util.concurrent.Future<DescribeCacheEngineVersionsResult> describeCacheEngineVersionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeCacheEngineVersionsRequest, DescribeCacheEngineVersionsResult> asyncHandler){\r\n    return describeCacheEngineVersionsAsync(new DescribeCacheEngineVersionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreateStorageLocationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonelasticfilesystem using the current builder configuration.",
	"Method": "AmazonElasticFileSystem build(AwsSyncClientParams params){\r\n    return new AmazonElasticFileSystemClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeHostReservations",
	"Comment": "describes reservations that are associated with dedicated hosts in your account.",
	"Method": "DescribeHostReservationsResult describeHostReservations(DescribeHostReservationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeHostReservations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EnableVpcClassicLinkRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFleetInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActiveInstances() != null)\r\n        sb.append(\"ActiveInstances: \").append(getActiveInstances()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeSpotDatafeedSubscription",
	"Comment": "describes the data feed for spot instances. for more information, see spot instance data feed in theamazon ec2 user guide for linux instances.",
	"Method": "DescribeSpotDatafeedSubscriptionResult describeSpotDatafeedSubscription(DescribeSpotDatafeedSubscriptionRequest request,DescribeSpotDatafeedSubscriptionResult describeSpotDatafeedSubscription){\r\n    return describeSpotDatafeedSubscription(new DescribeSpotDatafeedSubscriptionRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeReservedCacheNodesOfferingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getReservedCacheNodesOfferings() != null)\r\n        sb.append(\"ReservedCacheNodesOfferings: \").append(getReservedCacheNodesOfferings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateFleetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GetShardIteratorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShardIterator() != null)\r\n        sb.append(\"ShardIterator: \").append(getShardIterator());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.CreateClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterName() != null)\r\n        sb.append(\"ClusterName: \").append(getClusterName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.scan",
	"Comment": "scans through an amazon dynamodb table and returns the matching resultsas an unmodifiable list of instantiated objects.",
	"Method": "PaginatedScanList<T> scan(DynamoDBScanExpression scanExpression){\r\n    return mapper.<T>scan(model.targetType(), scanExpression);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LoadPermission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AbstractAmazonElasticLoadBalancingAsync.describeLoadBalancerPoliciesAsync",
	"Comment": "simplified method form for invoking the describeloadbalancerpolicies operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeLoadBalancerPoliciesResult> describeLoadBalancerPoliciesAsync(DescribeLoadBalancerPoliciesRequest request,java.util.concurrent.Future<DescribeLoadBalancerPoliciesResult> describeLoadBalancerPoliciesAsync,DescribeLoadBalancerPoliciesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancerPoliciesRequest, DescribeLoadBalancerPoliciesResult> asyncHandler,java.util.concurrent.Future<DescribeLoadBalancerPoliciesResult> describeLoadBalancerPoliciesAsync,java.util.concurrent.Future<DescribeLoadBalancerPoliciesResult> describeLoadBalancerPoliciesAsync,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancerPoliciesRequest, DescribeLoadBalancerPoliciesResult> asyncHandler){\r\n    return describeLoadBalancerPoliciesAsync(new DescribeLoadBalancerPoliciesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListAccountSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getPrincipalArn() != null)\r\n        sb.append(\"PrincipalArn: \").append(getPrincipalArn()).append(\",\");\r\n    if (getEffectiveSettings() != null)\r\n        sb.append(\"EffectiveSettings: \").append(getEffectiveSettings()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeConversionTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConversionTasks() != null)\r\n        sb.append(\"ConversionTasks: \").append(getConversionTasks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationStrategy() != null)\r\n        sb.append(\"AllocationStrategy: \").append(getAllocationStrategy()).append(\",\");\r\n    if (getInstanceInterruptionBehavior() != null)\r\n        sb.append(\"InstanceInterruptionBehavior: \").append(getInstanceInterruptionBehavior()).append(\",\");\r\n    if (getInstancePoolsToUseCount() != null)\r\n        sb.append(\"InstancePoolsToUseCount: \").append(getInstancePoolsToUseCount()).append(\",\");\r\n    if (getSingleInstanceType() != null)\r\n        sb.append(\"SingleInstanceType: \").append(getSingleInstanceType()).append(\",\");\r\n    if (getMinTargetCapacity() != null)\r\n        sb.append(\"MinTargetCapacity: \").append(getMinTargetCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.getProjectionExpression",
	"Comment": "a string that identifies one or more attributes to retrieve from thetable. these attributes can include scalars, sets, or elements of ajson document. the attributes in the expression must be separated bycommas. if no attribute names are specified, then all attributeswill be returned. if any of the requested attributes are not found,they will not appear in the result. for more information, go to accessingitem attributes in the amazon dynamodb developer guide.",
	"Method": "String getProjectionExpression(){\r\n    return projectionExpression;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.AWSDatabaseMigrationServiceWaiters.replicationTaskStopped",
	"Comment": "builds a replicationtaskstopped waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeReplicationTasksRequest> replicationTaskStopped(){\r\n    return new WaiterBuilder<DescribeReplicationTasksRequest, DescribeReplicationTasksResult>().withSdkFunction(new DescribeReplicationTasksFunction(client)).withAcceptors(new ReplicationTaskStopped.IsStoppedMatcher(), new ReplicationTaskStopped.IsReadyMatcher(), new ReplicationTaskStopped.IsCreatingMatcher(), new ReplicationTaskStopped.IsStartingMatcher(), new ReplicationTaskStopped.IsRunningMatcher(), new ReplicationTaskStopped.IsFailedMatcher(), new ReplicationTaskStopped.IsModifyingMatcher(), new ReplicationTaskStopped.IsTestingMatcher(), new ReplicationTaskStopped.IsDeletingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeListenersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn()).append(\",\");\r\n    if (getListenerArns() != null)\r\n        sb.append(\"ListenerArns: \").append(getListenerArns()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.conversionTaskCancelled",
	"Comment": "builds a conversiontaskcancelled waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeConversionTasksRequest> conversionTaskCancelled(){\r\n    return new WaiterBuilder<DescribeConversionTasksRequest, DescribeConversionTasksResult>().withSdkFunction(new DescribeConversionTasksFunction(client)).withAcceptors(new ConversionTaskCancelled.IsCancelledMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeRouteTablesAsync",
	"Comment": "simplified method form for invoking the describeroutetables operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeRouteTablesResult> describeRouteTablesAsync(DescribeRouteTablesRequest request,java.util.concurrent.Future<DescribeRouteTablesResult> describeRouteTablesAsync,DescribeRouteTablesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeRouteTablesRequest, DescribeRouteTablesResult> asyncHandler,java.util.concurrent.Future<DescribeRouteTablesResult> describeRouteTablesAsync,java.util.concurrent.Future<DescribeRouteTablesResult> describeRouteTablesAsync,com.amazonaws.handlers.AsyncHandler<DescribeRouteTablesRequest, DescribeRouteTablesResult> asyncHandler){\r\n    return describeRouteTablesAsync(new DescribeRouteTablesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PortRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrom() != null)\r\n        sb.append(\"From: \").append(getFrom()).append(\",\");\r\n    if (getTo() != null)\r\n        sb.append(\"To: \").append(getTo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeVolumesAsync",
	"Comment": "simplified method form for invoking the describevolumes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVolumesResult> describeVolumesAsync(DescribeVolumesRequest request,java.util.concurrent.Future<DescribeVolumesResult> describeVolumesAsync,DescribeVolumesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVolumesRequest, DescribeVolumesResult> asyncHandler,java.util.concurrent.Future<DescribeVolumesResult> describeVolumesAsync,java.util.concurrent.Future<DescribeVolumesResult> describeVolumesAsync,com.amazonaws.handlers.AsyncHandler<DescribeVolumesRequest, DescribeVolumesResult> asyncHandler){\r\n    return describeVolumesAsync(new DescribeVolumesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RebootInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.completeLayerUpload",
	"Comment": "informs amazon ecr that the image layer upload has completed for a specified registry, repository name, andupload id. you can optionally provide a sha256 digest of the image layer for data validationpurposes.this operation is used by the amazon ecr proxy, and it is not intended for general use by customers for pullingand pushing images. in most cases, you should use the docker cli to pull, tag, and push images.",
	"Method": "CompleteLayerUploadResult completeLayerUpload(CompleteLayerUploadRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCompleteLayerUpload(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.associateRouteTable",
	"Comment": "associates a subnet with a route table. the subnet and route table must be in the same vpc. this associationcauses traffic originating from the subnet to be routed according to the routes in the route table. the actionreturns an association id, which you need in order to disassociate the route table from the subnet later. a routetable can be associated with multiple subnets.for more information, see route tables in theamazon virtual private cloud user guide.",
	"Method": "AssociateRouteTableResult associateRouteTable(AssociateRouteTableRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAssociateRouteTable(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayRoute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock()).append(\",\");\r\n    if (getTransitGatewayAttachments() != null)\r\n        sb.append(\"TransitGatewayAttachments: \").append(getTransitGatewayAttachments()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VolumeAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachTime() != null)\r\n        sb.append(\"AttachTime: \").append(getAttachTime()).append(\",\");\r\n    if (getDevice() != null)\r\n        sb.append(\"Device: \").append(getDevice()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkAsyncClient.describeApplicationVersionsAsync",
	"Comment": "simplified method form for invoking the describeapplicationversions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeApplicationVersionsResult> describeApplicationVersionsAsync(DescribeApplicationVersionsRequest request,java.util.concurrent.Future<DescribeApplicationVersionsResult> describeApplicationVersionsAsync,DescribeApplicationVersionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeApplicationVersionsRequest, DescribeApplicationVersionsResult> asyncHandler,java.util.concurrent.Future<DescribeApplicationVersionsResult> describeApplicationVersionsAsync,java.util.concurrent.Future<DescribeApplicationVersionsResult> describeApplicationVersionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeApplicationVersionsRequest, DescribeApplicationVersionsResult> asyncHandler){\r\n    return describeApplicationVersionsAsync(new DescribeApplicationVersionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PrincipalIdFormat.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getStatuses() != null)\r\n        sb.append(\"Statuses: \").append(getStatuses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2ClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonec2 using the current builder configuration.",
	"Method": "AmazonEC2 build(AwsSyncClientParams params){\r\n    return new AmazonEC2Client(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DeleteSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeRouteTablesAsync",
	"Comment": "simplified method form for invoking the describeroutetables operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeRouteTablesResult> describeRouteTablesAsync(DescribeRouteTablesRequest request,java.util.concurrent.Future<DescribeRouteTablesResult> describeRouteTablesAsync,DescribeRouteTablesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeRouteTablesRequest, DescribeRouteTablesResult> asyncHandler,java.util.concurrent.Future<DescribeRouteTablesResult> describeRouteTablesAsync,java.util.concurrent.Future<DescribeRouteTablesResult> describeRouteTablesAsync,com.amazonaws.handlers.AsyncHandler<DescribeRouteTablesRequest, DescribeRouteTablesResult> asyncHandler){\r\n    return describeRouteTablesAsync(new DescribeRouteTablesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeRegionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegions() != null)\r\n        sb.append(\"Regions: \").append(getRegions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.waiters.DescribeTableFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeTableResult apply(DescribeTableRequest describeTableRequest){\r\n    return client.describeTable(describeTableRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeVpnGateways",
	"Comment": "describes one or more of your virtual private gateways.for more information about virtual private gateways, see aws managed vpn connections in theamazon virtual private cloud user guide.",
	"Method": "DescribeVpnGatewaysResult describeVpnGateways(DescribeVpnGatewaysRequest request,DescribeVpnGatewaysResult describeVpnGateways){\r\n    return describeVpnGateways(new DescribeVpnGatewaysRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.replaceTransitGatewayRoute",
	"Comment": "replaces the specified route in the specified transit gateway route table.",
	"Method": "ReplaceTransitGatewayRouteResult replaceTransitGatewayRoute(ReplaceTransitGatewayRouteRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeReplaceTransitGatewayRoute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getClientData() != null)\r\n        sb.append(\"ClientData: \").append(getClientData()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDiskContainers() != null)\r\n        sb.append(\"DiskContainers: \").append(getDiskContainers()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getHypervisor() != null)\r\n        sb.append(\"Hypervisor: \").append(getHypervisor()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getLicenseType() != null)\r\n        sb.append(\"LicenseType: \").append(getLicenseType()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceNetworkInterfaceAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpOwnerId() != null)\r\n        sb.append(\"IpOwnerId: \").append(getIpOwnerId()).append(\",\");\r\n    if (getPublicDnsName() != null)\r\n        sb.append(\"PublicDnsName: \").append(getPublicDnsName()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.IpPermission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getIpProtocol() != null)\r\n        sb.append(\"IpProtocol: \").append(getIpProtocol()).append(\",\");\r\n    if (getIpv6Ranges() != null)\r\n        sb.append(\"Ipv6Ranges: \").append(getIpv6Ranges()).append(\",\");\r\n    if (getPrefixListIds() != null)\r\n        sb.append(\"PrefixListIds: \").append(getPrefixListIds()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort()).append(\",\");\r\n    if (getUserIdGroupPairs() != null)\r\n        sb.append(\"UserIdGroupPairs: \").append(getUserIdGroupPairs()).append(\",\");\r\n    if (getIpv4Ranges() != null)\r\n        sb.append(\"Ipv4Ranges: \").append(getIpv4Ranges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifySubnetAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssignIpv6AddressOnCreation() != null)\r\n        sb.append(\"AssignIpv6AddressOnCreation: \").append(getAssignIpv6AddressOnCreation()).append(\",\");\r\n    if (getMapPublicIpOnLaunch() != null)\r\n        sb.append(\"MapPublicIpOnLaunch: \").append(getMapPublicIpOnLaunch()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.applyEnvironmentManagedAction",
	"Comment": "applies a scheduled managed action immediately. a managed action can be applied only if its status isscheduled. get the status and action id of a managed action withdescribeenvironmentmanagedactions.",
	"Method": "ApplyEnvironmentManagedActionResult applyEnvironmentManagedAction(ApplyEnvironmentManagedActionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeApplyEnvironmentManagedAction(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CreateCacheParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getCacheParameterGroupFamily() != null)\r\n        sb.append(\"CacheParameterGroupFamily: \").append(getCacheParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeAccountLimitsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimits() != null)\r\n        sb.append(\"Limits: \").append(getLimits()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ProvisionedThroughput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReadCapacityUnits() != null)\r\n        sb.append(\"ReadCapacityUnits: \").append(getReadCapacityUnits()).append(\",\");\r\n    if (getWriteCapacityUnits() != null)\r\n        sb.append(\"WriteCapacityUnits: \").append(getWriteCapacityUnits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFlowLogsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getFlowLogIds() != null)\r\n        sb.append(\"FlowLogIds: \").append(getFlowLogIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.ListClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PriceScheduleSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getPrice() != null)\r\n        sb.append(\"Price: \").append(getPrice()).append(\",\");\r\n    if (getTerm() != null)\r\n        sb.append(\"Term: \").append(getTerm());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AttachVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachment() != null)\r\n        sb.append(\"Attachment: \").append(getAttachment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteLaunchTemplateVersionsResponseSuccessItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.IpRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrIp() != null)\r\n        sb.append(\"CidrIp: \").append(getCidrIp()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.getExpressionAttributeNames",
	"Comment": "one or more substitution variables for simplifying complex expressions.",
	"Method": "java.util.Map<String, String> getExpressionAttributeNames(){\r\n    return expressionAttributeNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.importSnapshotAsync",
	"Comment": "simplified method form for invoking the importsnapshot operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ImportSnapshotResult> importSnapshotAsync(ImportSnapshotRequest request,java.util.concurrent.Future<ImportSnapshotResult> importSnapshotAsync,ImportSnapshotRequest request,com.amazonaws.handlers.AsyncHandler<ImportSnapshotRequest, ImportSnapshotResult> asyncHandler,java.util.concurrent.Future<ImportSnapshotResult> importSnapshotAsync,java.util.concurrent.Future<ImportSnapshotResult> importSnapshotAsync,com.amazonaws.handlers.AsyncHandler<ImportSnapshotRequest, ImportSnapshotResult> asyncHandler){\r\n    return importSnapshotAsync(new ImportSnapshotRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CustomerGateway.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBgpAsn() != null)\r\n        sb.append(\"BgpAsn: \").append(getBgpAsn()).append(\",\");\r\n    if (getCustomerGatewayId() != null)\r\n        sb.append(\"CustomerGatewayId: \").append(getCustomerGatewayId()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.describeReservedCacheNodesOfferingsAsync",
	"Comment": "simplified method form for invoking the describereservedcachenodesofferings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedCacheNodesOfferingsResult> describeReservedCacheNodesOfferingsAsync(DescribeReservedCacheNodesOfferingsRequest request,java.util.concurrent.Future<DescribeReservedCacheNodesOfferingsResult> describeReservedCacheNodesOfferingsAsync,DescribeReservedCacheNodesOfferingsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedCacheNodesOfferingsRequest, DescribeReservedCacheNodesOfferingsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedCacheNodesOfferingsResult> describeReservedCacheNodesOfferingsAsync,java.util.concurrent.Future<DescribeReservedCacheNodesOfferingsResult> describeReservedCacheNodesOfferingsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedCacheNodesOfferingsRequest, DescribeReservedCacheNodesOfferingsResult> asyncHandler){\r\n    return describeReservedCacheNodesOfferingsAsync(new DescribeReservedCacheNodesOfferingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpcRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock()).append(\",\");\r\n    if (getAmazonProvidedIpv6CidrBlock() != null)\r\n        sb.append(\"AmazonProvidedIpv6CidrBlock: \").append(getAmazonProvidedIpv6CidrBlock()).append(\",\");\r\n    if (getInstanceTenancy() != null)\r\n        sb.append(\"InstanceTenancy: \").append(getInstanceTenancy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.describeCacheSubnetGroupsAsync",
	"Comment": "simplified method form for invoking the describecachesubnetgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCacheSubnetGroupsResult> describeCacheSubnetGroupsAsync(DescribeCacheSubnetGroupsRequest request,java.util.concurrent.Future<DescribeCacheSubnetGroupsResult> describeCacheSubnetGroupsAsync,DescribeCacheSubnetGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCacheSubnetGroupsRequest, DescribeCacheSubnetGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeCacheSubnetGroupsResult> describeCacheSubnetGroupsAsync,java.util.concurrent.Future<DescribeCacheSubnetGroupsResult> describeCacheSubnetGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeCacheSubnetGroupsRequest, DescribeCacheSubnetGroupsResult> asyncHandler){\r\n    return describeCacheSubnetGroupsAsync(new DescribeCacheSubnetGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.systemStatusOk",
	"Comment": "builds a systemstatusok waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstanceStatusRequest> systemStatusOk(){\r\n    return new WaiterBuilder<DescribeInstanceStatusRequest, DescribeInstanceStatusResult>().withSdkFunction(new DescribeInstanceStatusFunction(client)).withAcceptors(new SystemStatusOk.IsOkMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.getRangeKeyConditions",
	"Comment": "gets the range key condition for this query. all range key attributes forthe table must be specified by attribute name in the map.",
	"Method": "Map<String, Condition> getRangeKeyConditions(){\r\n    return rangeKeyConditions;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AccountAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValues() != null)\r\n        sb.append(\"AttributeValues: \").append(getAttributeValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResetImageAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceIpv6AddressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6Address() != null)\r\n        sb.append(\"Ipv6Address: \").append(getIpv6Address());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVolumePermissionModifications.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdd() != null)\r\n        sb.append(\"Add: \").append(getAdd()).append(\",\");\r\n    if (getRemove() != null)\r\n        sb.append(\"Remove: \").append(getRemove());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEnvironmentManagedActionHistoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeContinuousBackupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.PutItemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getConsumedCapacity() != null)\r\n        sb.append(\"ConsumedCapacity: \").append(getConsumedCapacity()).append(\",\");\r\n    if (getItemCollectionMetrics() != null)\r\n        sb.append(\"ItemCollectionMetrics: \").append(getItemCollectionMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpoints() != null)\r\n        sb.append(\"Endpoints: \").append(getEndpoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.spec.AbstractSpecWithPrimaryKey.withPrimaryKey",
	"Comment": "sets the primary key with the specified hash key and range key.",
	"Method": "AbstractSpecWithPrimaryKey<T> withPrimaryKey(KeyAttribute components,AbstractSpecWithPrimaryKey<T> withPrimaryKey,PrimaryKey primaryKey,AbstractSpecWithPrimaryKey<T> withPrimaryKey,String hashKeyName,Object hashKeyValue,AbstractSpecWithPrimaryKey<T> withPrimaryKey,String hashKeyName,Object hashKeyValue,String rangeKeyName,Object rangeKeyValue){\r\n    if (hashKeyName == null)\r\n        throw new IllegalArgumentException(\"Invalid hash key name\");\r\n    if (rangeKeyName == null)\r\n        throw new IllegalArgumentException(\"Invalid range key name\");\r\n    if (hashKeyName.equals(rangeKeyName))\r\n        throw new IllegalArgumentException(\"Names of hash and range keys must not be the same\");\r\n    withPrimaryKey(new PrimaryKey(hashKeyName, hashKeyValue, rangeKeyName, rangeKeyValue));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreateApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getResourceLifecycleConfig() != null)\r\n        sb.append(\"ResourceLifecycleConfig: \").append(getResourceLifecycleConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Host.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoPlacement() != null)\r\n        sb.append(\"AutoPlacement: \").append(getAutoPlacement()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getAvailableCapacity() != null)\r\n        sb.append(\"AvailableCapacity: \").append(getAvailableCapacity()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getHostId() != null)\r\n        sb.append(\"HostId: \").append(getHostId()).append(\",\");\r\n    if (getHostProperties() != null)\r\n        sb.append(\"HostProperties: \").append(getHostProperties()).append(\",\");\r\n    if (getHostReservationId() != null)\r\n        sb.append(\"HostReservationId: \").append(getHostReservationId()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getAllocationTime() != null)\r\n        sb.append(\"AllocationTime: \").append(getAllocationTime()).append(\",\");\r\n    if (getReleaseTime() != null)\r\n        sb.append(\"ReleaseTime: \").append(getReleaseTime()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.MoveAddressToVpcRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ModifyCacheParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceCount.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.NodeSnapshot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getNodeGroupId() != null)\r\n        sb.append(\"NodeGroupId: \").append(getNodeGroupId()).append(\",\");\r\n    if (getCacheNodeId() != null)\r\n        sb.append(\"CacheNodeId: \").append(getCacheNodeId()).append(\",\");\r\n    if (getNodeGroupConfiguration() != null)\r\n        sb.append(\"NodeGroupConfiguration: \").append(getNodeGroupConfiguration()).append(\",\");\r\n    if (getCacheSize() != null)\r\n        sb.append(\"CacheSize: \").append(getCacheSize()).append(\",\");\r\n    if (getCacheNodeCreateTime() != null)\r\n        sb.append(\"CacheNodeCreateTime: \").append(getCacheNodeCreateTime()).append(\",\");\r\n    if (getSnapshotCreateTime() != null)\r\n        sb.append(\"SnapshotCreateTime: \").append(getSnapshotCreateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateApplicationResourceLifecycleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getResourceLifecycleConfig() != null)\r\n        sb.append(\"ResourceLifecycleConfig: \").append(getResourceLifecycleConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.describeCacheEngineVersionsAsync",
	"Comment": "simplified method form for invoking the describecacheengineversions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCacheEngineVersionsResult> describeCacheEngineVersionsAsync(DescribeCacheEngineVersionsRequest request,java.util.concurrent.Future<DescribeCacheEngineVersionsResult> describeCacheEngineVersionsAsync,DescribeCacheEngineVersionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCacheEngineVersionsRequest, DescribeCacheEngineVersionsResult> asyncHandler,java.util.concurrent.Future<DescribeCacheEngineVersionsResult> describeCacheEngineVersionsAsync,java.util.concurrent.Future<DescribeCacheEngineVersionsResult> describeCacheEngineVersionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeCacheEngineVersionsRequest, DescribeCacheEngineVersionsResult> asyncHandler){\r\n    return describeCacheEngineVersionsAsync(new DescribeCacheEngineVersionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeIdFormatResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatuses() != null)\r\n        sb.append(\"Statuses: \").append(getStatuses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayVpcAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getVpcOwnerId() != null)\r\n        sb.append(\"VpcOwnerId: \").append(getVpcOwnerId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.AppCookieStickinessPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getCookieName() != null)\r\n        sb.append(\"CookieName: \").append(getCookieName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.addListenerCertificates",
	"Comment": "adds the specified certificate to the specified secure listener.if the certificate was already added, the call is successful but the certificate is not added again.to list the certificates for your listener, use describelistenercertificates. to remove certificates fromyour listener, use removelistenercertificates. to specify the default ssl server certificate, usemodifylistener.",
	"Method": "AddListenerCertificatesResult addListenerCertificates(AddListenerCertificatesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddListenerCertificates(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeSpotFleetRequestsAsync",
	"Comment": "simplified method form for invoking the describespotfleetrequests operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSpotFleetRequestsResult> describeSpotFleetRequestsAsync(DescribeSpotFleetRequestsRequest request,java.util.concurrent.Future<DescribeSpotFleetRequestsResult> describeSpotFleetRequestsAsync,DescribeSpotFleetRequestsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSpotFleetRequestsRequest, DescribeSpotFleetRequestsResult> asyncHandler,java.util.concurrent.Future<DescribeSpotFleetRequestsResult> describeSpotFleetRequestsAsync,java.util.concurrent.Future<DescribeSpotFleetRequestsResult> describeSpotFleetRequestsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSpotFleetRequestsRequest, DescribeSpotFleetRequestsResult> asyncHandler){\r\n    return describeSpotFleetRequestsAsync(new DescribeSpotFleetRequestsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreditSpecificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCpuCredits() != null)\r\n        sb.append(\"CpuCredits: \").append(getCpuCredits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateDhcpOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDhcpOptionsId() != null)\r\n        sb.append(\"DhcpOptionsId: \").append(getDhcpOptionsId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DescribeContainerInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getContainerInstances() != null)\r\n        sb.append(\"ContainerInstances: \").append(getContainerInstances()).append(\",\");\r\n    if (getInclude() != null)\r\n        sb.append(\"Include: \").append(getInclude());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.CreateListenerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getSslPolicy() != null)\r\n        sb.append(\"SslPolicy: \").append(getSslPolicy()).append(\",\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates()).append(\",\");\r\n    if (getDefaultActions() != null)\r\n        sb.append(\"DefaultActions: \").append(getDefaultActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFpgaImagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageIds() != null)\r\n        sb.append(\"FpgaImageIds: \").append(getFpgaImageIds()).append(\",\");\r\n    if (getOwners() != null)\r\n        sb.append(\"Owners: \").append(getOwners()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UnassignPrivateIpAddressesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getPrivateIpAddresses() != null)\r\n        sb.append(\"PrivateIpAddresses: \").append(getPrivateIpAddresses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DeleteCacheClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getFinalSnapshotIdentifier() != null)\r\n        sb.append(\"FinalSnapshotIdentifier: \").append(getFinalSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.SourceSecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOwnerAlias() != null)\r\n        sb.append(\"OwnerAlias: \").append(getOwnerAlias()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeImportSnapshotTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportSnapshotTasks() != null)\r\n        sb.append(\"ImportSnapshotTasks: \").append(getImportSnapshotTasks()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListServicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getLaunchType() != null)\r\n        sb.append(\"LaunchType: \").append(getLaunchType()).append(\",\");\r\n    if (getSchedulingStrategy() != null)\r\n        sb.append(\"SchedulingStrategy: \").append(getSchedulingStrategy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.allocateHosts",
	"Comment": "allocates a dedicated host to your account. at a minimum, specify the instance size type, availability zone, andquantity of hosts to allocate.",
	"Method": "AllocateHostsResult allocateHosts(AllocateHostsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAllocateHosts(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreatePlacementGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DiskImageDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getImportManifestUrl() != null)\r\n        sb.append(\"ImportManifestUrl: \").append(getImportManifestUrl()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.MountPoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceVolume() != null)\r\n        sb.append(\"SourceVolume: \").append(getSourceVolume()).append(\",\");\r\n    if (getContainerPath() != null)\r\n        sb.append(\"ContainerPath: \").append(getContainerPath()).append(\",\");\r\n    if (getReadOnly() != null)\r\n        sb.append(\"ReadOnly: \").append(getReadOnly());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RequestSpotFleetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpotFleetRequestId() != null)\r\n        sb.append(\"SpotFleetRequestId: \").append(getSpotFleetRequestId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheEngineVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getCacheEngineVersions() != null)\r\n        sb.append(\"CacheEngineVersions: \").append(getCacheEngineVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateNetworkInterfacePermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getAwsService() != null)\r\n        sb.append(\"AwsService: \").append(getAwsService()).append(\",\");\r\n    if (getPermission() != null)\r\n        sb.append(\"Permission: \").append(getPermission());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonelasticloadbalancing using the current builder configuration.",
	"Method": "AmazonElasticLoadBalancing build(AwsSyncClientParams params){\r\n    return new AmazonElasticLoadBalancingClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.GetAuthorizationTokenResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizationData() != null)\r\n        sb.append(\"AuthorizationData: \").append(getAuthorizationData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResetSnapshotAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.UpdateAction.asSubstituted",
	"Comment": "returns the attribute as a string, substituted if necessary with tokensusing the given substitution context.",
	"Method": "String asSubstituted(SubstitutionContext context){\r\n    return value == null ? attribute.asSubstituted(context) : attribute.asSubstituted(context) + \" \" + value.asSubstituted(context);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DeleteApplicationVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UnsuccessfulInstanceCreditSpecificationItemError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeNetworkAclsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkAcls() != null)\r\n        sb.append(\"NetworkAcls: \").append(getNetworkAcls());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ElasticInferenceAcceleratorAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticInferenceAcceleratorArn() != null)\r\n        sb.append(\"ElasticInferenceAcceleratorArn: \").append(getElasticInferenceAcceleratorArn()).append(\",\");\r\n    if (getElasticInferenceAcceleratorAssociationId() != null)\r\n        sb.append(\"ElasticInferenceAcceleratorAssociationId: \").append(getElasticInferenceAcceleratorAssociationId()).append(\",\");\r\n    if (getElasticInferenceAcceleratorAssociationState() != null)\r\n        sb.append(\"ElasticInferenceAcceleratorAssociationState: \").append(getElasticInferenceAcceleratorAssociationState()).append(\",\");\r\n    if (getElasticInferenceAcceleratorAssociationTime() != null)\r\n        sb.append(\"ElasticInferenceAcceleratorAssociationTime: \").append(getElasticInferenceAcceleratorAssociationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteNetworkInterfaceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AttachInternetGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInternetGatewayId() != null)\r\n        sb.append(\"InternetGatewayId: \").append(getInternetGatewayId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber()).append(\",\");\r\n    if (getVersionDescription() != null)\r\n        sb.append(\"VersionDescription: \").append(getVersionDescription()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getCreatedBy() != null)\r\n        sb.append(\"CreatedBy: \").append(getCreatedBy()).append(\",\");\r\n    if (getDefaultVersion() != null)\r\n        sb.append(\"DefaultVersion: \").append(getDefaultVersion()).append(\",\");\r\n    if (getLaunchTemplateData() != null)\r\n        sb.append(\"LaunchTemplateData: \").append(getLaunchTemplateData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.AutoScalingGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.BatchDeleteImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getImageIds() != null)\r\n        sb.append(\"ImageIds: \").append(getImageIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeTargetGroupAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.PaginatedScanTaskTest.stubSuccessfulScan",
	"Comment": "stub a successful scan of a segment with a precanned item to return.",
	"Method": "void stubSuccessfulScan(int segmentNumber){\r\n    when(dynamoDB.scan(isSegmentNumber(segmentNumber))).thenReturn(new ScanResult().withItems(generateItems()));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeVpcEndpointConnectionNotifications",
	"Comment": "describes the connection notifications for vpc endpoints and vpc endpoint services.",
	"Method": "DescribeVpcEndpointConnectionNotificationsResult describeVpcEndpointConnectionNotifications(DescribeVpcEndpointConnectionNotificationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeVpcEndpointConnectionNotifications(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient.updateFileSystem",
	"Comment": "updates the throughput mode or the amount of provisioned throughput of an existing file system.",
	"Method": "UpdateFileSystemResult updateFileSystem(UpdateFileSystemRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateFileSystem(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.BackupDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupDetails() != null)\r\n        sb.append(\"BackupDetails: \").append(getBackupDetails()).append(\",\");\r\n    if (getSourceTableDetails() != null)\r\n        sb.append(\"SourceTableDetails: \").append(getSourceTableDetails()).append(\",\");\r\n    if (getSourceTableFeatureDetails() != null)\r\n        sb.append(\"SourceTableFeatureDetails: \").append(getSourceTableFeatureDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpcResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.vpcPeeringConnectionExists",
	"Comment": "builds a vpcpeeringconnectionexists waiter by using custom parameters waiterparameters and other parametersdefined in the waiters specification, and then polls until it determines whether the resource entered the desiredstate or not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVpcPeeringConnectionsRequest> vpcPeeringConnectionExists(){\r\n    return new WaiterBuilder<DescribeVpcPeeringConnectionsRequest, DescribeVpcPeeringConnectionsResult>().withSdkFunction(new DescribeVpcPeeringConnectionsFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor(WaiterState.SUCCESS), new VpcPeeringConnectionExists.IsInvalidVpcPeeringConnectionIDNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Attachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getDetails() != null)\r\n        sb.append(\"Details: \").append(getDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ListBackupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getTimeRangeLowerBound() != null)\r\n        sb.append(\"TimeRangeLowerBound: \").append(getTimeRangeLowerBound()).append(\",\");\r\n    if (getTimeRangeUpperBound() != null)\r\n        sb.append(\"TimeRangeUpperBound: \").append(getTimeRangeUpperBound()).append(\",\");\r\n    if (getExclusiveStartBackupArn() != null)\r\n        sb.append(\"ExclusiveStartBackupArn: \").append(getExclusiveStartBackupArn()).append(\",\");\r\n    if (getBackupType() != null)\r\n        sb.append(\"BackupType: \").append(getBackupType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.unassignPrivateIpAddresses",
	"Comment": "unassigns one or more secondary private ip addresses from a network interface.",
	"Method": "UnassignPrivateIpAddressesResult unassignPrivateIpAddresses(UnassignPrivateIpAddressesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUnassignPrivateIpAddresses(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateInternetGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInternetGateway() != null)\r\n        sb.append(\"InternetGateway: \").append(getInternetGateway());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyLaunchTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplate() != null)\r\n        sb.append(\"LaunchTemplate: \").append(getLaunchTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig.getPaginationLoadingStrategy",
	"Comment": "returns the pagination loading strategy for this configuration.",
	"Method": "PaginationLoadingStrategy getPaginationLoadingStrategy(PaginationLoadingStrategy getPaginationLoadingStrategy){\r\n    return paginationLoadingStrategy;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssignPrivateIpAddressesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.listTaskDefinitions",
	"Comment": "returns a list of task definitions that are registered to your account. you can filter the results by family namewith the familyprefix parameter or by status with the status parameter.",
	"Method": "ListTaskDefinitionsResult listTaskDefinitions(ListTaskDefinitionsRequest request,ListTaskDefinitionsResult listTaskDefinitions){\r\n    return listTaskDefinitions(new ListTaskDefinitionsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetTransitGatewayRouteTablePropagationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTablePropagations() != null)\r\n        sb.append(\"TransitGatewayRouteTablePropagations: \").append(getTransitGatewayRouteTablePropagations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeIamInstanceProfileAssociationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamInstanceProfileAssociations() != null)\r\n        sb.append(\"IamInstanceProfileAssociations: \").append(getIamInstanceProfileAssociations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.BackupDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupArn() != null)\r\n        sb.append(\"BackupArn: \").append(getBackupArn()).append(\",\");\r\n    if (getBackupName() != null)\r\n        sb.append(\"BackupName: \").append(getBackupName()).append(\",\");\r\n    if (getBackupSizeBytes() != null)\r\n        sb.append(\"BackupSizeBytes: \").append(getBackupSizeBytes()).append(\",\");\r\n    if (getBackupStatus() != null)\r\n        sb.append(\"BackupStatus: \").append(getBackupStatus()).append(\",\");\r\n    if (getBackupType() != null)\r\n        sb.append(\"BackupType: \").append(getBackupType()).append(\",\");\r\n    if (getBackupCreationDateTime() != null)\r\n        sb.append(\"BackupCreationDateTime: \").append(getBackupCreationDateTime()).append(\",\");\r\n    if (getBackupExpiryDateTime() != null)\r\n        sb.append(\"BackupExpiryDateTime: \").append(getBackupExpiryDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotFleetRequestConfigData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationStrategy() != null)\r\n        sb.append(\"AllocationStrategy: \").append(getAllocationStrategy()).append(\",\");\r\n    if (getOnDemandAllocationStrategy() != null)\r\n        sb.append(\"OnDemandAllocationStrategy: \").append(getOnDemandAllocationStrategy()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getExcessCapacityTerminationPolicy() != null)\r\n        sb.append(\"ExcessCapacityTerminationPolicy: \").append(getExcessCapacityTerminationPolicy()).append(\",\");\r\n    if (getFulfilledCapacity() != null)\r\n        sb.append(\"FulfilledCapacity: \").append(getFulfilledCapacity()).append(\",\");\r\n    if (getOnDemandFulfilledCapacity() != null)\r\n        sb.append(\"OnDemandFulfilledCapacity: \").append(getOnDemandFulfilledCapacity()).append(\",\");\r\n    if (getIamFleetRole() != null)\r\n        sb.append(\"IamFleetRole: \").append(getIamFleetRole()).append(\",\");\r\n    if (getLaunchSpecifications() != null)\r\n        sb.append(\"LaunchSpecifications: \").append(getLaunchSpecifications()).append(\",\");\r\n    if (getLaunchTemplateConfigs() != null)\r\n        sb.append(\"LaunchTemplateConfigs: \").append(getLaunchTemplateConfigs()).append(\",\");\r\n    if (getSpotPrice() != null)\r\n        sb.append(\"SpotPrice: \").append(getSpotPrice()).append(\",\");\r\n    if (getTargetCapacity() != null)\r\n        sb.append(\"TargetCapacity: \").append(getTargetCapacity()).append(\",\");\r\n    if (getOnDemandTargetCapacity() != null)\r\n        sb.append(\"OnDemandTargetCapacity: \").append(getOnDemandTargetCapacity()).append(\",\");\r\n    if (getTerminateInstancesWithExpiration() != null)\r\n        sb.append(\"TerminateInstancesWithExpiration: \").append(getTerminateInstancesWithExpiration()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValidFrom() != null)\r\n        sb.append(\"ValidFrom: \").append(getValidFrom()).append(\",\");\r\n    if (getValidUntil() != null)\r\n        sb.append(\"ValidUntil: \").append(getValidUntil()).append(\",\");\r\n    if (getReplaceUnhealthyInstances() != null)\r\n        sb.append(\"ReplaceUnhealthyInstances: \").append(getReplaceUnhealthyInstances()).append(\",\");\r\n    if (getInstanceInterruptionBehavior() != null)\r\n        sb.append(\"InstanceInterruptionBehavior: \").append(getInstanceInterruptionBehavior()).append(\",\");\r\n    if (getLoadBalancersConfig() != null)\r\n        sb.append(\"LoadBalancersConfig: \").append(getLoadBalancersConfig()).append(\",\");\r\n    if (getInstancePoolsToUseCount() != null)\r\n        sb.append(\"InstancePoolsToUseCount: \").append(getInstancePoolsToUseCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeConversionTasksAsync",
	"Comment": "simplified method form for invoking the describeconversiontasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeConversionTasksResult> describeConversionTasksAsync(DescribeConversionTasksRequest request,java.util.concurrent.Future<DescribeConversionTasksResult> describeConversionTasksAsync,DescribeConversionTasksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeConversionTasksRequest, DescribeConversionTasksResult> asyncHandler,java.util.concurrent.Future<DescribeConversionTasksResult> describeConversionTasksAsync,java.util.concurrent.Future<DescribeConversionTasksResult> describeConversionTasksAsync,com.amazonaws.handlers.AsyncHandler<DescribeConversionTasksRequest, DescribeConversionTasksResult> asyncHandler){\r\n    return describeConversionTasksAsync(new DescribeConversionTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AvailabilityZoneMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.UpdateContainerAgentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getContainerInstance() != null)\r\n        sb.append(\"ContainerInstance: \").append(getContainerInstance());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AbstractAmazonElasticLoadBalancingAsync.describeLoadBalancerPolicyTypesAsync",
	"Comment": "simplified method form for invoking the describeloadbalancerpolicytypes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeLoadBalancerPolicyTypesResult> describeLoadBalancerPolicyTypesAsync(DescribeLoadBalancerPolicyTypesRequest request,java.util.concurrent.Future<DescribeLoadBalancerPolicyTypesResult> describeLoadBalancerPolicyTypesAsync,DescribeLoadBalancerPolicyTypesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancerPolicyTypesRequest, DescribeLoadBalancerPolicyTypesResult> asyncHandler,java.util.concurrent.Future<DescribeLoadBalancerPolicyTypesResult> describeLoadBalancerPolicyTypesAsync,java.util.concurrent.Future<DescribeLoadBalancerPolicyTypesResult> describeLoadBalancerPolicyTypesAsync,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancerPolicyTypesRequest, DescribeLoadBalancerPolicyTypesResult> asyncHandler){\r\n    return describeLoadBalancerPolicyTypesAsync(new DescribeLoadBalancerPolicyTypesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerListenersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportSnapshotTask.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getImportTaskId() != null)\r\n        sb.append(\"ImportTaskId: \").append(getImportTaskId()).append(\",\");\r\n    if (getSnapshotTaskDetail() != null)\r\n        sb.append(\"SnapshotTaskDetail: \").append(getSnapshotTaskDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.TestConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnection() != null)\r\n        sb.append(\"Connection: \").append(getConnection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.FluentHashSet.withAll",
	"Comment": "fluent method to add the elements from the specified collection to thisset.",
	"Method": "FluentHashSet<E> withAll(Collection<? extends E> c,FluentHashSet<E> withAll,E elements){\r\n    if (elements != null) {\r\n        for (E e : elements) add(e);\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpcEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnsuccessful() != null)\r\n        sb.append(\"Unsuccessful: \").append(getUnsuccessful());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InternetGateway.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachments() != null)\r\n        sb.append(\"Attachments: \").append(getAttachments()).append(\",\");\r\n    if (getInternetGatewayId() != null)\r\n        sb.append(\"InternetGatewayId: \").append(getInternetGatewayId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteFpgaImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageId() != null)\r\n        sb.append(\"FpgaImageId: \").append(getFpgaImageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.CancellationReason.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem()).append(\",\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SearchTransitGatewayRoutesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoutes() != null)\r\n        sb.append(\"Routes: \").append(getRoutes()).append(\",\");\r\n    if (getAdditionalRoutesAvailable() != null)\r\n        sb.append(\"AdditionalRoutesAvailable: \").append(getAdditionalRoutesAvailable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnableDnsHostnames() != null)\r\n        sb.append(\"EnableDnsHostnames: \").append(getEnableDnsHostnames()).append(\",\");\r\n    if (getEnableDnsSupport() != null)\r\n        sb.append(\"EnableDnsSupport: \").append(getEnableDnsSupport()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.CreateServiceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getService() != null)\r\n        sb.append(\"Service: \").append(getService());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.buildForPut",
	"Comment": "returns an expression specification for use in a putitemrequest to dynamodb.",
	"Method": "PutItemExpressionSpec buildForPut(){\r\n    return new PutItemExpressionSpec(this);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateCpuOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCoreCount() != null)\r\n        sb.append(\"CoreCount: \").append(getCoreCount()).append(\",\");\r\n    if (getThreadsPerCore() != null)\r\n        sb.append(\"ThreadsPerCore: \").append(getThreadsPerCore());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AttachVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevice() != null)\r\n        sb.append(\"Device: \").append(getDevice()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.SSEDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSSEType() != null)\r\n        sb.append(\"SSEType: \").append(getSSEType()).append(\",\");\r\n    if (getKMSMasterKeyArn() != null)\r\n        sb.append(\"KMSMasterKeyArn: \").append(getKMSMasterKeyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.initiateLayerUpload",
	"Comment": "notify amazon ecr that you intend to upload an image layer.this operation is used by the amazon ecr proxy, and it is not intended for general use by customers for pullingand pushing images. in most cases, you should use the docker cli to pull, tag, and push images.",
	"Method": "InitiateLayerUploadResult initiateLayerUpload(InitiateLayerUploadRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeInitiateLayerUpload(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.setProjectionExpression",
	"Comment": "a string that identifies one or more attributes to retrieve from thetable. these attributes can include scalars, sets, or elements of ajson document. the attributes in the expression must be separated bycommas. if no attribute names are specified, then all attributeswill be returned. if any of the requested attributes are not found,they will not appear in the result. for more information, go to accessingitem attributes in the amazon dynamodb developer guide.",
	"Method": "void setProjectionExpression(String projectionExpression){\r\n    this.projectionExpression = projectionExpression;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeLimitsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountMaxReadCapacityUnits() != null)\r\n        sb.append(\"AccountMaxReadCapacityUnits: \").append(getAccountMaxReadCapacityUnits()).append(\",\");\r\n    if (getAccountMaxWriteCapacityUnits() != null)\r\n        sb.append(\"AccountMaxWriteCapacityUnits: \").append(getAccountMaxWriteCapacityUnits()).append(\",\");\r\n    if (getTableMaxReadCapacityUnits() != null)\r\n        sb.append(\"TableMaxReadCapacityUnits: \").append(getTableMaxReadCapacityUnits()).append(\",\");\r\n    if (getTableMaxWriteCapacityUnits() != null)\r\n        sb.append(\"TableMaxWriteCapacityUnits: \").append(getTableMaxWriteCapacityUnits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.withProjectionExpression",
	"Comment": "a string that identifies one or more attributes to retrieve from thetable. these attributes can include scalars, sets, or elements of ajson document. the attributes in the expression must be separated bycommas. if no attribute names are specified, then all attributeswill be returned. if any of the requested attributes are not found,they will not appear in the result. for more information, go to accessingitem attributes in the amazon dynamodb developer guide.returns a reference to this object so that method calls can be chained together.",
	"Method": "DynamoDBScanExpression withProjectionExpression(String projectionExpression){\r\n    this.projectionExpression = projectionExpression;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describePrefixListsAsync",
	"Comment": "simplified method form for invoking the describeprefixlists operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribePrefixListsResult> describePrefixListsAsync(DescribePrefixListsRequest request,java.util.concurrent.Future<DescribePrefixListsResult> describePrefixListsAsync,DescribePrefixListsRequest request,com.amazonaws.handlers.AsyncHandler<DescribePrefixListsRequest, DescribePrefixListsResult> asyncHandler,java.util.concurrent.Future<DescribePrefixListsResult> describePrefixListsAsync,java.util.concurrent.Future<DescribePrefixListsResult> describePrefixListsAsync,com.amazonaws.handlers.AsyncHandler<DescribePrefixListsRequest, DescribePrefixListsResult> asyncHandler){\r\n    return describePrefixListsAsync(new DescribePrefixListsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UnassignIpv6AddressesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeCustomerGateways",
	"Comment": "describes one or more of your vpn customer gateways.for more information about vpn customer gateways, see aws managed vpn connections in theamazon virtual private cloud user guide.",
	"Method": "DescribeCustomerGatewaysResult describeCustomerGateways(DescribeCustomerGatewaysRequest request,DescribeCustomerGatewaysResult describeCustomerGateways){\r\n    return describeCustomerGateways(new DescribeCustomerGatewaysRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeImportImageTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getImportTaskIds() != null)\r\n        sb.append(\"ImportTaskIds: \").append(getImportTaskIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.KeySchemaElement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getKeyType() != null)\r\n        sb.append(\"KeyType: \").append(getKeyType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeVpnGatewaysAsync",
	"Comment": "simplified method form for invoking the describevpngateways operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpnGatewaysResult> describeVpnGatewaysAsync(DescribeVpnGatewaysRequest request,java.util.concurrent.Future<DescribeVpnGatewaysResult> describeVpnGatewaysAsync,DescribeVpnGatewaysRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpnGatewaysRequest, DescribeVpnGatewaysResult> asyncHandler,java.util.concurrent.Future<DescribeVpnGatewaysResult> describeVpnGatewaysAsync,java.util.concurrent.Future<DescribeVpnGatewaysResult> describeVpnGatewaysAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpnGatewaysRequest, DescribeVpnGatewaysResult> asyncHandler){\r\n    return describeVpnGatewaysAsync(new DescribeVpnGatewaysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.modifyInstanceCreditSpecification",
	"Comment": "modifies the credit option for cpu usage on a running or stopped t2 or t3 instance. the credit options arestandard and unlimited.for more information, see burstableperformance instances in the amazon elastic compute cloud user guide.",
	"Method": "ModifyInstanceCreditSpecificationResult modifyInstanceCreditSpecification(ModifyInstanceCreditSpecificationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyInstanceCreditSpecification(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayRouteTable.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getDefaultAssociationRouteTable() != null)\r\n        sb.append(\"DefaultAssociationRouteTable: \").append(getDefaultAssociationRouteTable()).append(\",\");\r\n    if (getDefaultPropagationRouteTable() != null)\r\n        sb.append(\"DefaultPropagationRouteTable: \").append(getDefaultPropagationRouteTable()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.StorageLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateFleetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getSpotOptions() != null)\r\n        sb.append(\"SpotOptions: \").append(getSpotOptions()).append(\",\");\r\n    if (getOnDemandOptions() != null)\r\n        sb.append(\"OnDemandOptions: \").append(getOnDemandOptions()).append(\",\");\r\n    if (getExcessCapacityTerminationPolicy() != null)\r\n        sb.append(\"ExcessCapacityTerminationPolicy: \").append(getExcessCapacityTerminationPolicy()).append(\",\");\r\n    if (getLaunchTemplateConfigs() != null)\r\n        sb.append(\"LaunchTemplateConfigs: \").append(getLaunchTemplateConfigs()).append(\",\");\r\n    if (getTargetCapacitySpecification() != null)\r\n        sb.append(\"TargetCapacitySpecification: \").append(getTargetCapacitySpecification()).append(\",\");\r\n    if (getTerminateInstancesWithExpiration() != null)\r\n        sb.append(\"TerminateInstancesWithExpiration: \").append(getTerminateInstancesWithExpiration()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValidFrom() != null)\r\n        sb.append(\"ValidFrom: \").append(getValidFrom()).append(\",\");\r\n    if (getValidUntil() != null)\r\n        sb.append(\"ValidUntil: \").append(getValidUntil()).append(\",\");\r\n    if (getReplaceUnhealthyInstances() != null)\r\n        sb.append(\"ReplaceUnhealthyInstances: \").append(getReplaceUnhealthyInstances()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.PaginatedList.loadNextResults",
	"Comment": "attempts to load the next batch of results, if there are any, into thenextresults buffer. returns whether there were any results to load. areturn value of true guarantees that nextresults had items added to it.",
	"Method": "boolean loadNextResults(){\r\n    if (atEndOfResults())\r\n        return false;\r\n    do {\r\n        nextResults.addAll(fetchNextPage());\r\n    } while (!atEndOfResults() && nextResults.isEmpty());\r\n    return !nextResults.isEmpty();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.ListImagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DeregisterTargetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroupArn() != null)\r\n        sb.append(\"TargetGroupArn: \").append(getTargetGroupArn()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.RangeKeyCondition.between",
	"Comment": "creates and returns a condition of the range key that has a value betweenthe given values.",
	"Method": "RangeKeyCondition between(Object low,Object hi){\r\n    kcond = KeyConditions.BETWEEN;\r\n    return withValues(low, hi);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.listImages",
	"Comment": "lists all the image ids for a given repository.you can filter images based on whether or not they are tagged by setting the tagstatus parameter totagged or untagged. for example, you can filter your results to return onlyuntagged images and then pipe that result to a batchdeleteimage operation to delete them. or,you can filter your results to return only tagged images to list all of the tags in your repository.",
	"Method": "ListImagesResult listImages(ListImagesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListImages(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeTransitGatewaysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayIds() != null)\r\n        sb.append(\"TransitGatewayIds: \").append(getTransitGatewayIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.BatchWriteItemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRequestItems() != null)\r\n        sb.append(\"RequestItems: \").append(getRequestItems()).append(\",\");\r\n    if (getReturnConsumedCapacity() != null)\r\n        sb.append(\"ReturnConsumedCapacity: \").append(getReturnConsumedCapacity()).append(\",\");\r\n    if (getReturnItemCollectionMetrics() != null)\r\n        sb.append(\"ReturnItemCollectionMetrics: \").append(getReturnItemCollectionMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeReservedInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getOfferingClass() != null)\r\n        sb.append(\"OfferingClass: \").append(getOfferingClass()).append(\",\");\r\n    if (getReservedInstancesIds() != null)\r\n        sb.append(\"ReservedInstancesIds: \").append(getReservedInstancesIds()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.getRepositoryPolicy",
	"Comment": "retrieves the repository policy for a specified repository.",
	"Method": "GetRepositoryPolicyResult getRepositoryPolicy(GetRepositoryPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRepositoryPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DiskImage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getVolume() != null)\r\n        sb.append(\"Volume: \").append(getVolume());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelReservedInstancesListingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstancesListings() != null)\r\n        sb.append(\"ReservedInstancesListings: \").append(getReservedInstancesListings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.VpcSecurityGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcSecurityGroupId() != null)\r\n        sb.append(\"VpcSecurityGroupId: \").append(getVpcSecurityGroupId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.RuleCondition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getField() != null)\r\n        sb.append(\"Field: \").append(getField()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AbstractAmazonECSAsync.listTaskDefinitionsAsync",
	"Comment": "simplified method form for invoking the listtaskdefinitions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTaskDefinitionsResult> listTaskDefinitionsAsync(ListTaskDefinitionsRequest request,java.util.concurrent.Future<ListTaskDefinitionsResult> listTaskDefinitionsAsync,ListTaskDefinitionsRequest request,com.amazonaws.handlers.AsyncHandler<ListTaskDefinitionsRequest, ListTaskDefinitionsResult> asyncHandler,java.util.concurrent.Future<ListTaskDefinitionsResult> listTaskDefinitionsAsync,java.util.concurrent.Future<ListTaskDefinitionsResult> listTaskDefinitionsAsync,com.amazonaws.handlers.AsyncHandler<ListTaskDefinitionsRequest, ListTaskDefinitionsResult> asyncHandler){\r\n    return listTaskDefinitionsAsync(new ListTaskDefinitionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ClientData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getUploadEnd() != null)\r\n        sb.append(\"UploadEnd: \").append(getUploadEnd()).append(\",\");\r\n    if (getUploadSize() != null)\r\n        sb.append(\"UploadSize: \").append(getUploadSize()).append(\",\");\r\n    if (getUploadStart() != null)\r\n        sb.append(\"UploadStart: \").append(getUploadStart());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.DescribeReplicationInstancesFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeReplicationInstancesResult apply(DescribeReplicationInstancesRequest describeReplicationInstancesRequest){\r\n    return client.describeReplicationInstances(describeReplicationInstancesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.LaunchConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.QueryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getScannedCount() != null)\r\n        sb.append(\"ScannedCount: \").append(getScannedCount()).append(\",\");\r\n    if (getLastEvaluatedKey() != null)\r\n        sb.append(\"LastEvaluatedKey: \").append(getLastEvaluatedKey()).append(\",\");\r\n    if (getConsumedCapacity() != null)\r\n        sb.append(\"ConsumedCapacity: \").append(getConsumedCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkInterfacePrivateIpAddress.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociation() != null)\r\n        sb.append(\"Association: \").append(getAssociation()).append(\",\");\r\n    if (getPrimary() != null)\r\n        sb.append(\"Primary: \").append(getPrimary()).append(\",\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.ReflectionUtils.getterOrFieldHasAnnotation",
	"Comment": "returns true if an annotation for the specified type is found on thegetter method or its corresponding class field.",
	"Method": "boolean getterOrFieldHasAnnotation(Method getter,Class<T> annotationClass){\r\n    return getAnnotationFromGetterOrField(getter, annotationClass) != null;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpcEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcEndpointIds() != null)\r\n        sb.append(\"VpcEndpointIds: \").append(getVpcEndpointIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Cluster.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterArn() != null)\r\n        sb.append(\"ClusterArn: \").append(getClusterArn()).append(\",\");\r\n    if (getClusterName() != null)\r\n        sb.append(\"ClusterName: \").append(getClusterName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getRegisteredContainerInstancesCount() != null)\r\n        sb.append(\"RegisteredContainerInstancesCount: \").append(getRegisteredContainerInstancesCount()).append(\",\");\r\n    if (getRunningTasksCount() != null)\r\n        sb.append(\"RunningTasksCount: \").append(getRunningTasksCount()).append(\",\");\r\n    if (getPendingTasksCount() != null)\r\n        sb.append(\"PendingTasksCount: \").append(getPendingTasksCount()).append(\",\");\r\n    if (getActiveServicesCount() != null)\r\n        sb.append(\"ActiveServicesCount: \").append(getActiveServicesCount()).append(\",\");\r\n    if (getStatistics() != null)\r\n        sb.append(\"Statistics: \").append(getStatistics()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.vpcAvailable",
	"Comment": "builds a vpcavailable waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVpcsRequest> vpcAvailable(){\r\n    return new WaiterBuilder<DescribeVpcsRequest, DescribeVpcsResult>().withSdkFunction(new DescribeVpcsFunction(client)).withAcceptors(new VpcAvailable.IsAvailableMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateAndOverridesResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateSpecification() != null)\r\n        sb.append(\"LaunchTemplateSpecification: \").append(getLaunchTemplateSpecification()).append(\",\");\r\n    if (getOverrides() != null)\r\n        sb.append(\"Overrides: \").append(getOverrides());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Subnet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getAvailabilityZoneId() != null)\r\n        sb.append(\"AvailabilityZoneId: \").append(getAvailabilityZoneId()).append(\",\");\r\n    if (getAvailableIpAddressCount() != null)\r\n        sb.append(\"AvailableIpAddressCount: \").append(getAvailableIpAddressCount()).append(\",\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock()).append(\",\");\r\n    if (getDefaultForAz() != null)\r\n        sb.append(\"DefaultForAz: \").append(getDefaultForAz()).append(\",\");\r\n    if (getMapPublicIpOnLaunch() != null)\r\n        sb.append(\"MapPublicIpOnLaunch: \").append(getMapPublicIpOnLaunch()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getAssignIpv6AddressOnCreation() != null)\r\n        sb.append(\"AssignIpv6AddressOnCreation: \").append(getAssignIpv6AddressOnCreation()).append(\",\");\r\n    if (getIpv6CidrBlockAssociationSet() != null)\r\n        sb.append(\"Ipv6CidrBlockAssociationSet: \").append(getIpv6CidrBlockAssociationSet()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getSubnetArn() != null)\r\n        sb.append(\"SubnetArn: \").append(getSubnetArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withBoolean",
	"Comment": "sets the value of the specified attribute in the current item to theboolean value.",
	"Method": "Item withBoolean(String attrName,boolean val){\r\n    checkInvalidAttrName(attrName);\r\n    attributes.put(attrName, Boolean.valueOf(val));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstancesIamInstanceProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.VolumeFrom.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceContainer() != null)\r\n        sb.append(\"SourceContainer: \").append(getSourceContainer()).append(\",\");\r\n    if (getReadOnly() != null)\r\n        sb.append(\"ReadOnly: \").append(getReadOnly());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InternetGatewayAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AcceptReservedInstancesExchangeQuoteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExchangeId() != null)\r\n        sb.append(\"ExchangeId: \").append(getExchangeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.ApplySecurityGroupsToLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeNetworkAcls",
	"Comment": "describes one or more of your network acls.for more information, see networkacls in the amazon virtual private cloud user guide.",
	"Method": "DescribeNetworkAclsResult describeNetworkAcls(DescribeNetworkAclsRequest request,DescribeNetworkAclsResult describeNetworkAcls){\r\n    return describeNetworkAcls(new DescribeNetworkAclsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpcEndpointConnectionNotificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionNotificationIds() != null)\r\n        sb.append(\"ConnectionNotificationIds: \").append(getConnectionNotificationIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DeleteListenerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RecurringCharge.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmount() != null)\r\n        sb.append(\"Amount: \").append(getAmount()).append(\",\");\r\n    if (getFrequency() != null)\r\n        sb.append(\"Frequency: \").append(getFrequency());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.AttachLoadBalancerToSubnetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetConsoleOutputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(getOutput()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyReservedInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstancesIds() != null)\r\n        sb.append(\"ReservedInstancesIds: \").append(getReservedInstancesIds()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getTargetConfigurations() != null)\r\n        sb.append(\"TargetConfigurations: \").append(getTargetConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeImportSnapshotTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getImportTaskIds() != null)\r\n        sb.append(\"ImportTaskIds: \").append(getImportTaskIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.CreateTargetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroups() != null)\r\n        sb.append(\"TargetGroups: \").append(getTargetGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.modifyRule",
	"Comment": "modifies the specified rule.any existing properties that you do not modify retain their current values.to modify the actions for the default rule, use modifylistener.",
	"Method": "ModifyRuleResult modifyRule(ModifyRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFleetHistoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventType() != null)\r\n        sb.append(\"EventType: \").append(getEventType()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createLaunchTemplateVersion",
	"Comment": "creates a new version for a launch template. you can specify an existing version of launch template from which tobase the new version.launch template versions are numbered in the order in which they are created. you cannot specify, change, orreplace the numbering of launch template versions.",
	"Method": "CreateLaunchTemplateVersionResult createLaunchTemplateVersion(CreateLaunchTemplateVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateLaunchTemplateVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.waiters.DescribeReplicationGroupsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeReplicationGroupsResult apply(DescribeReplicationGroupsRequest describeReplicationGroupsRequest){\r\n    return client.describeReplicationGroups(describeReplicationGroupsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReservedInstancesId.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstancesId() != null)\r\n        sb.append(\"ReservedInstancesId: \").append(getReservedInstancesId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeleteAccountSettingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSetting() != null)\r\n        sb.append(\"Setting: \").append(getSetting());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.SubstitutionContext.nameTokenFor",
	"Comment": "returns the name token for the given name, creating a new token asnecessary.",
	"Method": "String nameTokenFor(String name){\r\n    Integer token = nameToToken.get(name);\r\n    if (token == null) {\r\n        token = nameToToken.size();\r\n        nameToToken.put(name, token);\r\n    }\r\n    return \"#\" + token;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreateApplicationVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationVersion() != null)\r\n        sb.append(\"ApplicationVersion: \").append(getApplicationVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.describeEvents",
	"Comment": "returns list of event descriptions matching criteria up to the last 6 weeks.this action returns the most recent 1,000 events from the specified nexttoken.",
	"Method": "DescribeEventsResult describeEvents(DescribeEventsRequest request,DescribeEventsResult describeEvents){\r\n    return describeEvents(new DescribeEventsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CacheCluster.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getConfigurationEndpoint() != null)\r\n        sb.append(\"ConfigurationEndpoint: \").append(getConfigurationEndpoint()).append(\",\");\r\n    if (getClientDownloadLandingPage() != null)\r\n        sb.append(\"ClientDownloadLandingPage: \").append(getClientDownloadLandingPage()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getCacheClusterStatus() != null)\r\n        sb.append(\"CacheClusterStatus: \").append(getCacheClusterStatus()).append(\",\");\r\n    if (getNumCacheNodes() != null)\r\n        sb.append(\"NumCacheNodes: \").append(getNumCacheNodes()).append(\",\");\r\n    if (getPreferredAvailabilityZone() != null)\r\n        sb.append(\"PreferredAvailabilityZone: \").append(getPreferredAvailabilityZone()).append(\",\");\r\n    if (getCacheClusterCreateTime() != null)\r\n        sb.append(\"CacheClusterCreateTime: \").append(getCacheClusterCreateTime()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getPendingModifiedValues() != null)\r\n        sb.append(\"PendingModifiedValues: \").append(getPendingModifiedValues()).append(\",\");\r\n    if (getNotificationConfiguration() != null)\r\n        sb.append(\"NotificationConfiguration: \").append(getNotificationConfiguration()).append(\",\");\r\n    if (getCacheSecurityGroups() != null)\r\n        sb.append(\"CacheSecurityGroups: \").append(getCacheSecurityGroups()).append(\",\");\r\n    if (getCacheParameterGroup() != null)\r\n        sb.append(\"CacheParameterGroup: \").append(getCacheParameterGroup()).append(\",\");\r\n    if (getCacheSubnetGroupName() != null)\r\n        sb.append(\"CacheSubnetGroupName: \").append(getCacheSubnetGroupName()).append(\",\");\r\n    if (getCacheNodes() != null)\r\n        sb.append(\"CacheNodes: \").append(getCacheNodes()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getSnapshotRetentionLimit() != null)\r\n        sb.append(\"SnapshotRetentionLimit: \").append(getSnapshotRetentionLimit()).append(\",\");\r\n    if (getSnapshotWindow() != null)\r\n        sb.append(\"SnapshotWindow: \").append(getSnapshotWindow()).append(\",\");\r\n    if (getAuthTokenEnabled() != null)\r\n        sb.append(\"AuthTokenEnabled: \").append(getAuthTokenEnabled()).append(\",\");\r\n    if (getTransitEncryptionEnabled() != null)\r\n        sb.append(\"TransitEncryptionEnabled: \").append(getTransitEncryptionEnabled()).append(\",\");\r\n    if (getAtRestEncryptionEnabled() != null)\r\n        sb.append(\"AtRestEncryptionEnabled: \").append(getAtRestEncryptionEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getSeverity() != null)\r\n        sb.append(\"Severity: \").append(getSeverity()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withString",
	"Comment": "sets the value of the specified attribute in the current item to thegiven string value.",
	"Method": "Item withString(String attrName,String val){\r\n    checkInvalidAttribute(attrName, val);\r\n    attributes.put(attrName, val);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DhcpConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeSpotDatafeedSubscriptionAsync",
	"Comment": "simplified method form for invoking the describespotdatafeedsubscription operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSpotDatafeedSubscriptionResult> describeSpotDatafeedSubscriptionAsync(DescribeSpotDatafeedSubscriptionRequest request,java.util.concurrent.Future<DescribeSpotDatafeedSubscriptionResult> describeSpotDatafeedSubscriptionAsync,DescribeSpotDatafeedSubscriptionRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSpotDatafeedSubscriptionRequest, DescribeSpotDatafeedSubscriptionResult> asyncHandler,java.util.concurrent.Future<DescribeSpotDatafeedSubscriptionResult> describeSpotDatafeedSubscriptionAsync,java.util.concurrent.Future<DescribeSpotDatafeedSubscriptionResult> describeSpotDatafeedSubscriptionAsync,com.amazonaws.handlers.AsyncHandler<DescribeSpotDatafeedSubscriptionRequest, DescribeSpotDatafeedSubscriptionResult> asyncHandler){\r\n    return describeSpotDatafeedSubscriptionAsync(new DescribeSpotDatafeedSubscriptionRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBStreamsClient.getShardIterator",
	"Comment": "returns a shard iterator. a shard iterator provides information about how to retrieve the stream records fromwithin a shard. use the shard iterator in a subsequent getrecords request to read the stream recordsfrom the shard.a shard iterator expires 15 minutes after it is returned to the requester.",
	"Method": "GetShardIteratorResult getShardIterator(GetShardIteratorRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetShardIterator(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResetInstanceAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.spec.AbstractCollectionSpec.getMaxResultSize",
	"Comment": "the maximum number of resources to be retrieved in this query, includingall the resources in all pages to be retrieved.",
	"Method": "Integer getMaxResultSize(){\r\n    return maxResultSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.BS.delete",
	"Comment": "returns a deleteaction for deleting the specified valuesfrom this binary set.",
	"Method": "DeleteAction delete(byte[] values,DeleteAction delete,ByteBuffer values){\r\n    return new DeleteAction(this, new LiteralOperand(new LinkedHashSet<ByteBuffer>(Arrays.asList(values))));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVolumePermission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.AuthorizationData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizationToken() != null)\r\n        sb.append(\"AuthorizationToken: \").append(getAuthorizationToken()).append(\",\");\r\n    if (getExpiresAt() != null)\r\n        sb.append(\"ExpiresAt: \").append(getExpiresAt()).append(\",\");\r\n    if (getProxyEndpoint() != null)\r\n        sb.append(\"ProxyEndpoint: \").append(getProxyEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceIamInstanceProfileAssociationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamInstanceProfileAssociation() != null)\r\n        sb.append(\"IamInstanceProfileAssociation: \").append(getIamInstanceProfileAssociation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeImportImageTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportImageTasks() != null)\r\n        sb.append(\"ImportImageTasks: \").append(getImportImageTasks()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcClassicLinkDnsSupportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVpcIds() != null)\r\n        sb.append(\"VpcIds: \").append(getVpcIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ConnectionNotification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionNotificationId() != null)\r\n        sb.append(\"ConnectionNotificationId: \").append(getConnectionNotificationId()).append(\",\");\r\n    if (getServiceId() != null)\r\n        sb.append(\"ServiceId: \").append(getServiceId()).append(\",\");\r\n    if (getVpcEndpointId() != null)\r\n        sb.append(\"VpcEndpointId: \").append(getVpcEndpointId()).append(\",\");\r\n    if (getConnectionNotificationType() != null)\r\n        sb.append(\"ConnectionNotificationType: \").append(getConnectionNotificationType()).append(\",\");\r\n    if (getConnectionNotificationArn() != null)\r\n        sb.append(\"ConnectionNotificationArn: \").append(getConnectionNotificationArn()).append(\",\");\r\n    if (getConnectionEvents() != null)\r\n        sb.append(\"ConnectionEvents: \").append(getConnectionEvents()).append(\",\");\r\n    if (getConnectionNotificationState() != null)\r\n        sb.append(\"ConnectionNotificationState: \").append(getConnectionNotificationState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelBundleTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RunInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservation() != null)\r\n        sb.append(\"Reservation: \").append(getReservation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcEndpointConnection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceId() != null)\r\n        sb.append(\"ServiceId: \").append(getServiceId()).append(\",\");\r\n    if (getVpcEndpointId() != null)\r\n        sb.append(\"VpcEndpointId: \").append(getVpcEndpointId()).append(\",\");\r\n    if (getVpcEndpointOwner() != null)\r\n        sb.append(\"VpcEndpointOwner: \").append(getVpcEndpointOwner()).append(\",\");\r\n    if (getVpcEndpointState() != null)\r\n        sb.append(\"VpcEndpointState: \").append(getVpcEndpointState()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getMountTargetId() != null)\r\n        sb.append(\"MountTargetId: \").append(getMountTargetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ListPlatformVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatformSummaryList() != null)\r\n        sb.append(\"PlatformSummaryList: \").append(getPlatformSummaryList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DeleteFileSystemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayPropagation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteKeyPairRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.addTags",
	"Comment": "adds the specified tags to the specified elastic load balancing resource. you can tag your application loadbalancers, network load balancers, and your target groups.each tag consists of a key and an optional value. if a resource already has a tag with the same key,addtags updates its value.to list the current tags for your resources, use describetags. to remove tags from your resources, useremovetags.",
	"Method": "AddTagsResult addTags(AddTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcEndpointConnectionNotificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionNotificationId() != null)\r\n        sb.append(\"ConnectionNotificationId: \").append(getConnectionNotificationId()).append(\",\");\r\n    if (getConnectionNotificationArn() != null)\r\n        sb.append(\"ConnectionNotificationArn: \").append(getConnectionNotificationArn()).append(\",\");\r\n    if (getConnectionEvents() != null)\r\n        sb.append(\"ConnectionEvents: \").append(getConnectionEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheParameterGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getCacheParameterGroups() != null)\r\n        sb.append(\"CacheParameterGroups: \").append(getCacheParameterGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.instanceRunning",
	"Comment": "builds a instancerunning waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstancesRequest> instanceRunning(){\r\n    return new WaiterBuilder<DescribeInstancesRequest, DescribeInstancesResult>().withSdkFunction(new DescribeInstancesFunction(client)).withAcceptors(new InstanceRunning.IsRunningMatcher(), new InstanceRunning.IsShuttingdownMatcher(), new InstanceRunning.IsTerminatedMatcher(), new InstanceRunning.IsStoppingMatcher(), new InstanceRunning.IsInvalidInstanceIDNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.S3Link.downloadTo",
	"Comment": "downloads the data from the object represented by this s3link to thespecified output stream.",
	"Method": "ObjectMetadata downloadTo(File destination,ObjectMetadata downloadTo,File destination,RequestMetricCollector requestMetricCollector,ObjectMetadata downloadTo,OutputStream output,ObjectMetadata downloadTo,OutputStream output,RequestMetricCollector requestMetricCollector){\r\n    return downloadTo0(output, requestMetricCollector);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkAsyncClient.describeApplicationsAsync",
	"Comment": "simplified method form for invoking the describeapplications operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeApplicationsResult> describeApplicationsAsync(DescribeApplicationsRequest request,java.util.concurrent.Future<DescribeApplicationsResult> describeApplicationsAsync,DescribeApplicationsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeApplicationsRequest, DescribeApplicationsResult> asyncHandler,java.util.concurrent.Future<DescribeApplicationsResult> describeApplicationsAsync,java.util.concurrent.Future<DescribeApplicationsResult> describeApplicationsAsync,com.amazonaws.handlers.AsyncHandler<DescribeApplicationsRequest, DescribeApplicationsResult> asyncHandler){\r\n    return describeApplicationsAsync(new DescribeApplicationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withJSON",
	"Comment": "sets the value of the specified key to an object represented by the jsonstructure passed.",
	"Method": "ValueMap withJSON(String key,String jsonValue){\r\n    super.put(key, valueConformer.transform(Jackson.fromJsonString(jsonValue, Object.class)));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.describeListenerCertificates",
	"Comment": "describes the certificates for the specified secure listener.",
	"Method": "DescribeListenerCertificatesResult describeListenerCertificates(DescribeListenerCertificatesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeListenerCertificates(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotPlacement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getTenancy() != null)\r\n        sb.append(\"Tenancy: \").append(getTenancy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ListPlatformVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.describeCacheParameters",
	"Comment": "returns the detailed parameter list for a particular cache parameter group.",
	"Method": "DescribeCacheParametersResult describeCacheParameters(DescribeCacheParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeCacheParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteRouteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AbstractAmazonECSAsync.listServicesAsync",
	"Comment": "simplified method form for invoking the listservices operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListServicesResult> listServicesAsync(ListServicesRequest request,java.util.concurrent.Future<ListServicesResult> listServicesAsync,ListServicesRequest request,com.amazonaws.handlers.AsyncHandler<ListServicesRequest, ListServicesResult> asyncHandler,java.util.concurrent.Future<ListServicesResult> listServicesAsync,java.util.concurrent.Future<ListServicesResult> listServicesAsync,com.amazonaws.handlers.AsyncHandler<ListServicesRequest, ListServicesResult> asyncHandler){\r\n    return listServicesAsync(new ListServicesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeBundleTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleTasks() != null)\r\n        sb.append(\"BundleTasks: \").append(getBundleTasks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeleteServiceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getService() != null)\r\n        sb.append(\"Service: \").append(getService()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.passwordDataAvailable",
	"Comment": "builds a passworddataavailable waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<GetPasswordDataRequest> passwordDataAvailable(){\r\n    return new WaiterBuilder<GetPasswordDataRequest, GetPasswordDataResult>().withSdkFunction(new GetPasswordDataFunction(client)).withAcceptors(new PasswordDataAvailable.IsTrueMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withList",
	"Comment": "sets the value of the specified key in the current valuemap to thegiven values as a list.",
	"Method": "ValueMap withList(String key,List<?> val,ValueMap withList,String key,Object vals){\r\n    super.put(key, vals == null ? null : new ArrayList<Object>(Arrays.asList(vals)));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.withExpressionAttributeNames",
	"Comment": "one or more substitution variables for simplifying complex expressions.",
	"Method": "DynamoDBDeleteExpression withExpressionAttributeNames(java.util.Map<String, String> expressionAttributeNames){\r\n    setExpressionAttributeNames(expressionAttributeNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withPrimaryKey",
	"Comment": "convenient method to set the attributes of this item from the givenhash and range primary key.",
	"Method": "Item withPrimaryKey(PrimaryKey primaryKey,Item withPrimaryKey,String hashKeyName,Object hashKeyValue,Item withPrimaryKey,String hashKeyName,Object hashKeyValue,String rangeKeyName,Object rangeKeyValue){\r\n    return withKeyComponent(hashKeyName, hashKeyValue).withKeyComponent(rangeKeyName, rangeKeyValue);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ReplicaGlobalSecondaryIndexSettingsUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getProvisionedReadCapacityUnits() != null)\r\n        sb.append(\"ProvisionedReadCapacityUnits: \").append(getProvisionedReadCapacityUnits()).append(\",\");\r\n    if (getProvisionedReadCapacityAutoScalingSettingsUpdate() != null)\r\n        sb.append(\"ProvisionedReadCapacityAutoScalingSettingsUpdate: \").append(getProvisionedReadCapacityAutoScalingSettingsUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayAttachmentPropagation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.describeContainerInstances",
	"Comment": "describes amazon elastic container service container instances. returns metadata about registered and remainingresources on each container instance requested.",
	"Method": "DescribeContainerInstancesResult describeContainerInstances(DescribeContainerInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeContainerInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.WriteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPutRequest() != null)\r\n        sb.append(\"PutRequest: \").append(getPutRequest()).append(\",\");\r\n    if (getDeleteRequest() != null)\r\n        sb.append(\"DeleteRequest: \").append(getDeleteRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DeleteApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTerminateEnvByForce() != null)\r\n        sb.append(\"TerminateEnvByForce: \").append(getTerminateEnvByForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeFlowLogsAsync",
	"Comment": "simplified method form for invoking the describeflowlogs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeFlowLogsResult> describeFlowLogsAsync(DescribeFlowLogsRequest request,java.util.concurrent.Future<DescribeFlowLogsResult> describeFlowLogsAsync,DescribeFlowLogsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeFlowLogsRequest, DescribeFlowLogsResult> asyncHandler,java.util.concurrent.Future<DescribeFlowLogsResult> describeFlowLogsAsync,java.util.concurrent.Future<DescribeFlowLogsResult> describeFlowLogsAsync,com.amazonaws.handlers.AsyncHandler<DescribeFlowLogsRequest, DescribeFlowLogsResult> asyncHandler){\r\n    return describeFlowLogsAsync(new DescribeFlowLogsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotFleetLaunchSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getAddressingType() != null)\r\n        sb.append(\"AddressingType: \").append(getAddressingType()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName()).append(\",\");\r\n    if (getMonitoring() != null)\r\n        sb.append(\"Monitoring: \").append(getMonitoring()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement()).append(\",\");\r\n    if (getRamdiskId() != null)\r\n        sb.append(\"RamdiskId: \").append(getRamdiskId()).append(\",\");\r\n    if (getSpotPrice() != null)\r\n        sb.append(\"SpotPrice: \").append(getSpotPrice()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData()).append(\",\");\r\n    if (getWeightedCapacity() != null)\r\n        sb.append(\"WeightedCapacity: \").append(getWeightedCapacity()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getResourceTags() != null)\r\n        sb.append(\"ResourceTags: \").append(getResourceTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.modifySubnetAttribute",
	"Comment": "modifies a subnet attribute. you can only modify one attribute at a time.",
	"Method": "ModifySubnetAttributeResult modifySubnetAttribute(ModifySubnetAttributeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifySubnetAttribute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateFpgaImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageId() != null)\r\n        sb.append(\"FpgaImageId: \").append(getFpgaImageId()).append(\",\");\r\n    if (getFpgaImageGlobalId() != null)\r\n        sb.append(\"FpgaImageGlobalId: \").append(getFpgaImageGlobalId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.cancelConversionTask",
	"Comment": "cancels an active conversion task. the task can be the import of an instance or volume. the action removes allartifacts of the conversion, including a partially uploaded volume or instance. if the conversion is complete oris in the process of transferring the final disk image, the command fails and returns an exception.for more information, see importing avirtual machine using the amazon ec2 cli.",
	"Method": "CancelConversionTaskResult cancelConversionTask(CancelConversionTaskRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCancelConversionTask(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DnsEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDnsName() != null)\r\n        sb.append(\"DnsName: \").append(getDnsName()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotPrice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getSpotPrice() != null)\r\n        sb.append(\"SpotPrice: \").append(getSpotPrice()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBSaveExpression.getConditionalOperator",
	"Comment": "returns the logical operator on the expected value conditions of this saveoperation.",
	"Method": "String getConditionalOperator(){\r\n    return conditionalOperator;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeElasticGpus",
	"Comment": "describes the elastic graphics accelerator associated with your instances. for more information about elasticgraphics, see amazonelastic graphics.",
	"Method": "DescribeElasticGpusResult describeElasticGpus(DescribeElasticGpusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeElasticGpus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.StaleIpPermission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getIpProtocol() != null)\r\n        sb.append(\"IpProtocol: \").append(getIpProtocol()).append(\",\");\r\n    if (getIpRanges() != null)\r\n        sb.append(\"IpRanges: \").append(getIpRanges()).append(\",\");\r\n    if (getPrefixListIds() != null)\r\n        sb.append(\"PrefixListIds: \").append(getPrefixListIds()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort()).append(\",\");\r\n    if (getUserIdGroupPairs() != null)\r\n        sb.append(\"UserIdGroupPairs: \").append(getUserIdGroupPairs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.removeTags",
	"Comment": "removes the specified tags from the specified elastic load balancing resource.to list the current tags for your resources, use describetags.",
	"Method": "RemoveTagsResult removeTags(RemoveTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.RangeKeyCondition.lt",
	"Comment": "creates and returns a condition of the range key being less than thegiven value.",
	"Method": "RangeKeyCondition lt(Object val){\r\n    kcond = KeyConditions.LT;\r\n    return withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.SourceTableDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getTableId() != null)\r\n        sb.append(\"TableId: \").append(getTableId()).append(\",\");\r\n    if (getTableArn() != null)\r\n        sb.append(\"TableArn: \").append(getTableArn()).append(\",\");\r\n    if (getTableSizeBytes() != null)\r\n        sb.append(\"TableSizeBytes: \").append(getTableSizeBytes()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getTableCreationDateTime() != null)\r\n        sb.append(\"TableCreationDateTime: \").append(getTableCreationDateTime()).append(\",\");\r\n    if (getProvisionedThroughput() != null)\r\n        sb.append(\"ProvisionedThroughput: \").append(getProvisionedThroughput()).append(\",\");\r\n    if (getItemCount() != null)\r\n        sb.append(\"ItemCount: \").append(getItemCount()).append(\",\");\r\n    if (getBillingMode() != null)\r\n        sb.append(\"BillingMode: \").append(getBillingMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.AWSDatabaseMigrationServiceWaiters.testConnectionSucceeds",
	"Comment": "builds a testconnectionsucceeds waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<TestConnectionRequest> testConnectionSucceeds(){\r\n    return new WaiterBuilder<TestConnectionRequest, TestConnectionResult>().withSdkFunction(new TestConnectionFunction(client)).withAcceptors(new TestConnectionSucceeds.IsSuccessfulMatcher(), new TestConnectionSucceeds.IsFailedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.query",
	"Comment": "queries an amazon dynamodb table and returns the matching results as anunmodifiable list of instantiated objects.",
	"Method": "PaginatedQueryList<T> query(DynamoDBQueryExpression<T> queryExpression){\r\n    return mapper.<T>query(model.targetType(), queryExpression);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.createRule",
	"Comment": "creates a rule for the specified listener. the listener must be associated with an application load balancer.rules are evaluated in priority order, from the lowest value to the highest value. when the conditions for a ruleare met, its actions are performed. if the conditions for no rules are met, the actions for the default rule areperformed. for more information, see listener rules in the application load balancers guide.to view your current rules, use describerules. to update a rule, use modifyrule. to set thepriorities of your rules, use setrulepriorities. to delete a rule, use deleterule.",
	"Method": "CreateRuleResult createRule(CreateRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointServicePermissionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowedPrincipals() != null)\r\n        sb.append(\"AllowedPrincipals: \").append(getAllowedPrincipals()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AllocateAddressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getPublicIpv4Pool() != null)\r\n        sb.append(\"PublicIpv4Pool: \").append(getPublicIpv4Pool());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.describeTags",
	"Comment": "describes the tags for the specified resources. you can describe the tags for one or more application loadbalancers, network load balancers, and target groups.",
	"Method": "DescribeTagsResult describeTags(DescribeTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTransitGatewayVpcAttachmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreateConfigurationTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getSourceConfiguration() != null)\r\n        sb.append(\"SourceConfiguration: \").append(getSourceConfiguration()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.RangeKeyCondition.le",
	"Comment": "creates and returns a condition of the range key being less than or equalto the given value.",
	"Method": "RangeKeyCondition le(Object val){\r\n    kcond = KeyConditions.LE;\r\n    return withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeVpcsAsync",
	"Comment": "simplified method form for invoking the describevpcs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpcsResult> describeVpcsAsync(DescribeVpcsRequest request,java.util.concurrent.Future<DescribeVpcsResult> describeVpcsAsync,DescribeVpcsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpcsRequest, DescribeVpcsResult> asyncHandler,java.util.concurrent.Future<DescribeVpcsResult> describeVpcsAsync,java.util.concurrent.Future<DescribeVpcsResult> describeVpcsAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpcsRequest, DescribeVpcsResult> asyncHandler){\r\n    return describeVpcsAsync(new DescribeVpcsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DescribeFileSystemsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getFileSystems() != null)\r\n        sb.append(\"FileSystems: \").append(getFileSystems()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.waiters.DescribeClusterFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeClusterResult apply(DescribeClusterRequest describeClusterRequest){\r\n    return client.describeCluster(describeClusterRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.NetworkBinding.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBindIP() != null)\r\n        sb.append(\"BindIP: \").append(getBindIP()).append(\",\");\r\n    if (getContainerPort() != null)\r\n        sb.append(\"ContainerPort: \").append(getContainerPort()).append(\",\");\r\n    if (getHostPort() != null)\r\n        sb.append(\"HostPort: \").append(getHostPort()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.GetDownloadUrlForLayerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getLayerDigest() != null)\r\n        sb.append(\"LayerDigest: \").append(getLayerDigest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.vpcExists",
	"Comment": "builds a vpcexists waiter by using custom parameters waiterparameters and other parameters defined in the waitersspecification, and then polls until it determines whether the resource entered the desired state or not, wherepolling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVpcsRequest> vpcExists(){\r\n    return new WaiterBuilder<DescribeVpcsRequest, DescribeVpcsResult>().withSdkFunction(new DescribeVpcsFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor(WaiterState.SUCCESS), new VpcExists.IsInvalidVpcIDNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(5), new FixedDelayStrategy(1))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeIdentityIdFormatRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipalArn() != null)\r\n        sb.append(\"PrincipalArn: \").append(getPrincipalArn()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PrefixList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrs() != null)\r\n        sb.append(\"Cidrs: \").append(getCidrs()).append(\",\");\r\n    if (getPrefixListId() != null)\r\n        sb.append(\"PrefixListId: \").append(getPrefixListId()).append(\",\");\r\n    if (getPrefixListName() != null)\r\n        sb.append(\"PrefixListName: \").append(getPrefixListName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.PointInTimeRecoveryDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPointInTimeRecoveryStatus() != null)\r\n        sb.append(\"PointInTimeRecoveryStatus: \").append(getPointInTimeRecoveryStatus()).append(\",\");\r\n    if (getEarliestRestorableDateTime() != null)\r\n        sb.append(\"EarliestRestorableDateTime: \").append(getEarliestRestorableDateTime()).append(\",\");\r\n    if (getLatestRestorableDateTime() != null)\r\n        sb.append(\"LatestRestorableDateTime: \").append(getLatestRestorableDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.clearExpressionAttributeNamesEntries",
	"Comment": "removes all the entries added into expressionattributenames.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DynamoDBScanExpression clearExpressionAttributeNamesEntries(){\r\n    this.expressionAttributeNames = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeMovingAddressesAsync",
	"Comment": "simplified method form for invoking the describemovingaddresses operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeMovingAddressesResult> describeMovingAddressesAsync(DescribeMovingAddressesRequest request,java.util.concurrent.Future<DescribeMovingAddressesResult> describeMovingAddressesAsync,DescribeMovingAddressesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeMovingAddressesRequest, DescribeMovingAddressesResult> asyncHandler,java.util.concurrent.Future<DescribeMovingAddressesResult> describeMovingAddressesAsync,java.util.concurrent.Future<DescribeMovingAddressesResult> describeMovingAddressesAsync,com.amazonaws.handlers.AsyncHandler<DescribeMovingAddressesRequest, DescribeMovingAddressesResult> asyncHandler){\r\n    return describeMovingAddressesAsync(new DescribeMovingAddressesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TransactWriteItemsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransactItems() != null)\r\n        sb.append(\"TransactItems: \").append(getTransactItems()).append(\",\");\r\n    if (getReturnConsumedCapacity() != null)\r\n        sb.append(\"ReturnConsumedCapacity: \").append(getReturnConsumedCapacity()).append(\",\");\r\n    if (getReturnItemCollectionMetrics() != null)\r\n        sb.append(\"ReturnItemCollectionMetrics: \").append(getReturnItemCollectionMetrics()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcIpv6CidrBlockAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId()).append(\",\");\r\n    if (getIpv6CidrBlock() != null)\r\n        sb.append(\"Ipv6CidrBlock: \").append(getIpv6CidrBlock()).append(\",\");\r\n    if (getIpv6CidrBlockState() != null)\r\n        sb.append(\"Ipv6CidrBlockState: \").append(getIpv6CidrBlockState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awselasticbeanstalkasync using the current builder configuration.",
	"Method": "AWSElasticBeanstalkAsync build(AwsAsyncClientParams params){\r\n    return new AWSElasticBeanstalkAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.RangeKeyCondition.gt",
	"Comment": "creates and returns a condition of the range key being greater than thegiven value.",
	"Method": "RangeKeyCondition gt(Object val){\r\n    kcond = KeyConditions.GT;\r\n    return withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.FluentArrayList.delete",
	"Comment": "fluent method to remove the specified element from this list.",
	"Method": "FluentArrayList<E> delete(Object o){\r\n    super.remove(o);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeSSLPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSslPolicies() != null)\r\n        sb.append(\"SslPolicies: \").append(getSslPolicies()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeVpcPeeringConnectionsAsync",
	"Comment": "simplified method form for invoking the describevpcpeeringconnections operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpcPeeringConnectionsResult> describeVpcPeeringConnectionsAsync(DescribeVpcPeeringConnectionsRequest request,java.util.concurrent.Future<DescribeVpcPeeringConnectionsResult> describeVpcPeeringConnectionsAsync,DescribeVpcPeeringConnectionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpcPeeringConnectionsRequest, DescribeVpcPeeringConnectionsResult> asyncHandler,java.util.concurrent.Future<DescribeVpcPeeringConnectionsResult> describeVpcPeeringConnectionsAsync,java.util.concurrent.Future<DescribeVpcPeeringConnectionsResult> describeVpcPeeringConnectionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpcPeeringConnectionsRequest, DescribeVpcPeeringConnectionsResult> asyncHandler){\r\n    return describeVpcPeeringConnectionsAsync(new DescribeVpcPeeringConnectionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EventInformation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventDescription() != null)\r\n        sb.append(\"EventDescription: \").append(getEventDescription()).append(\",\");\r\n    if (getEventSubType() != null)\r\n        sb.append(\"EventSubType: \").append(getEventSubType()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.RangeKeyCondition.ge",
	"Comment": "creates and returns a condition of the range key being greater than orequal to the given value.",
	"Method": "RangeKeyCondition ge(Object val){\r\n    kcond = KeyConditions.GE;\r\n    return withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.AutoScalingPolicyDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getTargetTrackingScalingPolicyConfiguration() != null)\r\n        sb.append(\"TargetTrackingScalingPolicyConfiguration: \").append(getTargetTrackingScalingPolicyConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpnGateway.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getVpcAttachments() != null)\r\n        sb.append(\"VpcAttachments: \").append(getVpcAttachments()).append(\",\");\r\n    if (getVpnGatewayId() != null)\r\n        sb.append(\"VpnGatewayId: \").append(getVpnGatewayId()).append(\",\");\r\n    if (getAmazonSideAsn() != null)\r\n        sb.append(\"AmazonSideAsn: \").append(getAmazonSideAsn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SubnetIpv6CidrBlockAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId()).append(\",\");\r\n    if (getIpv6CidrBlock() != null)\r\n        sb.append(\"Ipv6CidrBlock: \").append(getIpv6CidrBlock()).append(\",\");\r\n    if (getIpv6CidrBlockState() != null)\r\n        sb.append(\"Ipv6CidrBlockState: \").append(getIpv6CidrBlockState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeTransitGatewaysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGateways() != null)\r\n        sb.append(\"TransitGateways: \").append(getTransitGateways()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteSpotDatafeedSubscriptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.RebuildEnvironmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyTypeNames() != null)\r\n        sb.append(\"PolicyTypeNames: \").append(getPolicyTypeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DescribeServicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices()).append(\",\");\r\n    if (getInclude() != null)\r\n        sb.append(\"Include: \").append(getInclude());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.deleteIfExists",
	"Comment": "deletes the given object from its dynamodb table with the condition thatthe hash and, if applicable, the range key, already exist.",
	"Method": "void deleteIfExists(T object){\r\n    final DynamoDBDeleteExpression deleteExpression = new DynamoDBDeleteExpression();\r\n    for (final DynamoDBMapperFieldModel<T, Object> key : model.keys()) {\r\n        deleteExpression.withExpectedEntry(key.name(), new ExpectedAttributeValue().withExists(true).withValue(key.convert(key.get(object))));\r\n    }\r\n    mapper.delete(object, deleteExpression);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientData() != null)\r\n        sb.append(\"ClientData: \").append(getClientData()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDiskContainer() != null)\r\n        sb.append(\"DiskContainer: \").append(getDiskContainer()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.AttributeValueUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.ConnectionDraining.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeDhcpOptionsAsync",
	"Comment": "simplified method form for invoking the describedhcpoptions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDhcpOptionsResult> describeDhcpOptionsAsync(DescribeDhcpOptionsRequest request,java.util.concurrent.Future<DescribeDhcpOptionsResult> describeDhcpOptionsAsync,DescribeDhcpOptionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDhcpOptionsRequest, DescribeDhcpOptionsResult> asyncHandler,java.util.concurrent.Future<DescribeDhcpOptionsResult> describeDhcpOptionsAsync,java.util.concurrent.Future<DescribeDhcpOptionsResult> describeDhcpOptionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDhcpOptionsRequest, DescribeDhcpOptionsResult> asyncHandler){\r\n    return describeDhcpOptionsAsync(new DescribeDhcpOptionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.RangeKeyCondition.eq",
	"Comment": "creates and returns a condition of the range key being equal to the givenvalue.",
	"Method": "RangeKeyCondition eq(Object val){\r\n    kcond = KeyConditions.EQ;\r\n    return withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.describeTable",
	"Comment": "returns information about the table, including the current status of thetable, when it was created, the primary key schema, and any indexes onthe table.",
	"Method": "TableDescription describeTable(){\r\n    return db.describeTable(mapper.getTableName(model.targetType(), config)).getTable();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreatePlatformVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatformSummary() != null)\r\n        sb.append(\"PlatformSummary: \").append(getPlatformSummary()).append(\",\");\r\n    if (getBuilder() != null)\r\n        sb.append(\"Builder: \").append(getBuilder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateElasticInferenceAcceleratorResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateFpgaImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputStorageLocation() != null)\r\n        sb.append(\"InputStorageLocation: \").append(getInputStorageLocation()).append(\",\");\r\n    if (getLogsStorageLocation() != null)\r\n        sb.append(\"LogsStorageLocation: \").append(getLogsStorageLocation()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.createEnvironment",
	"Comment": "launches an environment for the specified application using the specified configuration.",
	"Method": "CreateEnvironmentResult createEnvironment(CreateEnvironmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateEnvironment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateVpcCidrBlockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.StateReason.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpnTunnelOptionsSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTunnelInsideCidr() != null)\r\n        sb.append(\"TunnelInsideCidr: \").append(getTunnelInsideCidr()).append(\",\");\r\n    if (getPreSharedKey() != null)\r\n        sb.append(\"PreSharedKey: \").append(getPreSharedKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DeleteRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyInstancePlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateTimeToLiveResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimeToLiveSpecification() != null)\r\n        sb.append(\"TimeToLiveSpecification: \").append(getTimeToLiveSpecification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AdvertiseByoipCidrRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidr() != null)\r\n        sb.append(\"Cidr: \").append(getCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.listTablesAsync",
	"Comment": "simplified method form for invoking the listtables operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTablesResult> listTablesAsync(ListTablesRequest request,java.util.concurrent.Future<ListTablesResult> listTablesAsync,ListTablesRequest request,com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult> asyncHandler,java.util.concurrent.Future<ListTablesResult> listTablesAsync,java.util.concurrent.Future<ListTablesResult> listTablesAsync,com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult> asyncHandler,java.util.concurrent.Future<ListTablesResult> listTablesAsync,String exclusiveStartTableName,java.util.concurrent.Future<ListTablesResult> listTablesAsync,String exclusiveStartTableName,com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult> asyncHandler,java.util.concurrent.Future<ListTablesResult> listTablesAsync,String exclusiveStartTableName,Integer limit,java.util.concurrent.Future<ListTablesResult> listTablesAsync,String exclusiveStartTableName,Integer limit,com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult> asyncHandler,java.util.concurrent.Future<ListTablesResult> listTablesAsync,Integer limit,java.util.concurrent.Future<ListTablesResult> listTablesAsync,Integer limit,com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult> asyncHandler){\r\n    return listTablesAsync(new ListTablesRequest().withLimit(limit), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.SingleInstanceHealth.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getHealthStatus() != null)\r\n        sb.append(\"HealthStatus: \").append(getHealthStatus()).append(\",\");\r\n    if (getColor() != null)\r\n        sb.append(\"Color: \").append(getColor()).append(\",\");\r\n    if (getCauses() != null)\r\n        sb.append(\"Causes: \").append(getCauses()).append(\",\");\r\n    if (getLaunchedAt() != null)\r\n        sb.append(\"LaunchedAt: \").append(getLaunchedAt()).append(\",\");\r\n    if (getApplicationMetrics() != null)\r\n        sb.append(\"ApplicationMetrics: \").append(getApplicationMetrics()).append(\",\");\r\n    if (getSystem() != null)\r\n        sb.append(\"System: \").append(getSystem()).append(\",\");\r\n    if (getDeployment() != null)\r\n        sb.append(\"Deployment: \").append(getDeployment()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.FileSystemSize.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.StopReplicationTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationTask() != null)\r\n        sb.append(\"ReplicationTask: \").append(getReplicationTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribePrincipalIdFormatRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.ConvertibleType.of",
	"Comment": "returns the conversion type for the method and annotations.",
	"Method": "ConvertibleType<T> of(Method getter,TypedMap<T> annotations,ConvertibleType<T> of,DynamoDBTypeConverter<?, T> converter,ConvertibleType<T> of,Type genericType){\r\n    final Class<T> targetType;\r\n    if (genericType instanceof Class) {\r\n        targetType = (Class<T>) genericType;\r\n    } else if (genericType instanceof ParameterizedType) {\r\n        targetType = (Class<T>) ((ParameterizedType) genericType).getRawType();\r\n    } else if (genericType.toString().equals(\"byte[]\")) {\r\n        targetType = (Class<T>) byte[].class;\r\n    } else {\r\n        targetType = (Class<T>) Object.class;\r\n    }\r\n    final TypedMap<T> annotations = StandardAnnotationMaps.<T>of(targetType);\r\n    return new ConvertibleType<T>(genericType, annotations, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateKeyPairResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyPair() != null)\r\n        sb.append(\"KeyPair: \").append(getKeyPair());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBSaveExpression.getExpected",
	"Comment": "gets the map of attribute names to expected attribute values to check on save.",
	"Method": "Map<String, ExpectedAttributeValue> getExpected(){\r\n    return expectedAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeReservedInstancesListingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstancesListings() != null)\r\n        sb.append(\"ReservedInstancesListings: \").append(getReservedInstancesListings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.deregisterTargets",
	"Comment": "deregisters the specified targets from the specified target group. after the targets are deregistered, they nolonger receive traffic from the load balancer.",
	"Method": "DeregisterTargetsResult deregisterTargets(DeregisterTargetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeregisterTargets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateIamInstanceProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamInstanceProfileAssociation() != null)\r\n        sb.append(\"IamInstanceProfileAssociation: \").append(getIamInstanceProfileAssociation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.getTransitGatewayAttachmentPropagations",
	"Comment": "lists the route tables to which the specified resource attachment propagates routes.",
	"Method": "GetTransitGatewayAttachmentPropagationsResult getTransitGatewayAttachmentPropagations(GetTransitGatewayAttachmentPropagationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTransitGatewayAttachmentPropagations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeScheduledInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getScheduledInstanceIds() != null)\r\n        sb.append(\"ScheduledInstanceIds: \").append(getScheduledInstanceIds()).append(\",\");\r\n    if (getSlotStartTimeRange() != null)\r\n        sb.append(\"SlotStartTimeRange: \").append(getSlotStartTimeRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.TerminateEnvironmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEndpointURL() != null)\r\n        sb.append(\"EndpointURL: \").append(getEndpointURL()).append(\",\");\r\n    if (getCNAME() != null)\r\n        sb.append(\"CNAME: \").append(getCNAME()).append(\",\");\r\n    if (getDateCreated() != null)\r\n        sb.append(\"DateCreated: \").append(getDateCreated()).append(\",\");\r\n    if (getDateUpdated() != null)\r\n        sb.append(\"DateUpdated: \").append(getDateUpdated()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getAbortableOperationInProgress() != null)\r\n        sb.append(\"AbortableOperationInProgress: \").append(getAbortableOperationInProgress()).append(\",\");\r\n    if (getHealth() != null)\r\n        sb.append(\"Health: \").append(getHealth()).append(\",\");\r\n    if (getHealthStatus() != null)\r\n        sb.append(\"HealthStatus: \").append(getHealthStatus()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getTier() != null)\r\n        sb.append(\"Tier: \").append(getTier()).append(\",\");\r\n    if (getEnvironmentLinks() != null)\r\n        sb.append(\"EnvironmentLinks: \").append(getEnvironmentLinks()).append(\",\");\r\n    if (getEnvironmentArn() != null)\r\n        sb.append(\"EnvironmentArn: \").append(getEnvironmentArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheSecurityGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getCacheSecurityGroups() != null)\r\n        sb.append(\"CacheSecurityGroups: \").append(getCacheSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.Limit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMax() != null)\r\n        sb.append(\"Max: \").append(getMax());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FleetLaunchTemplateConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateSpecification() != null)\r\n        sb.append(\"LaunchTemplateSpecification: \").append(getLaunchTemplateSpecification()).append(\",\");\r\n    if (getOverrides() != null)\r\n        sb.append(\"Overrides: \").append(getOverrides());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.enableTransitGatewayRouteTablePropagation",
	"Comment": "enables the specified attachment to propagate routes to the specified propagation route table.",
	"Method": "EnableTransitGatewayRouteTablePropagationResult enableTransitGatewayRouteTablePropagation(EnableTransitGatewayRouteTablePropagationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeEnableTransitGatewayRouteTablePropagation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.GetLifecyclePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcPeeringConnection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccepterVpcInfo() != null)\r\n        sb.append(\"AccepterVpcInfo: \").append(getAccepterVpcInfo()).append(\",\");\r\n    if (getExpirationTime() != null)\r\n        sb.append(\"ExpirationTime: \").append(getExpirationTime()).append(\",\");\r\n    if (getRequesterVpcInfo() != null)\r\n        sb.append(\"RequesterVpcInfo: \").append(getRequesterVpcInfo()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SlotStartTimeRangeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEarliestTime() != null)\r\n        sb.append(\"EarliestTime: \").append(getEarliestTime()).append(\",\");\r\n    if (getLatestTime() != null)\r\n        sb.append(\"LatestTime: \").append(getLatestTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PlacementGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStrategy() != null)\r\n        sb.append(\"Strategy: \").append(getStrategy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.describeCacheSecurityGroups",
	"Comment": "returns a list of cache security group descriptions. if a cache security group name is specified, the listcontains only the description of that group.",
	"Method": "DescribeCacheSecurityGroupsResult describeCacheSecurityGroups(DescribeCacheSecurityGroupsRequest request,DescribeCacheSecurityGroupsResult describeCacheSecurityGroups){\r\n    return describeCacheSecurityGroups(new DescribeCacheSecurityGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DeleteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ResourceQuotas.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationQuota() != null)\r\n        sb.append(\"ApplicationQuota: \").append(getApplicationQuota()).append(\",\");\r\n    if (getApplicationVersionQuota() != null)\r\n        sb.append(\"ApplicationVersionQuota: \").append(getApplicationVersionQuota()).append(\",\");\r\n    if (getEnvironmentQuota() != null)\r\n        sb.append(\"EnvironmentQuota: \").append(getEnvironmentQuota()).append(\",\");\r\n    if (getConfigurationTemplateQuota() != null)\r\n        sb.append(\"ConfigurationTemplateQuota: \").append(getConfigurationTemplateQuota()).append(\",\");\r\n    if (getCustomPlatformQuota() != null)\r\n        sb.append(\"CustomPlatformQuota: \").append(getCustomPlatformQuota());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeKeyPairsAsync",
	"Comment": "simplified method form for invoking the describekeypairs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeKeyPairsResult> describeKeyPairsAsync(DescribeKeyPairsRequest request,java.util.concurrent.Future<DescribeKeyPairsResult> describeKeyPairsAsync,DescribeKeyPairsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeKeyPairsRequest, DescribeKeyPairsResult> asyncHandler,java.util.concurrent.Future<DescribeKeyPairsResult> describeKeyPairsAsync,java.util.concurrent.Future<DescribeKeyPairsResult> describeKeyPairsAsync,com.amazonaws.handlers.AsyncHandler<DescribeKeyPairsRequest, DescribeKeyPairsResult> asyncHandler){\r\n    return describeKeyPairsAsync(new DescribeKeyPairsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.modifyLaunchTemplate",
	"Comment": "modifies a launch template. you can specify which version of the launch template to set as the default version.when launching an instance, the default version applies when a launch template version is not specified.",
	"Method": "ModifyLaunchTemplateResult modifyLaunchTemplate(ModifyLaunchTemplateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyLaunchTemplate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeReservedInstancesListingsAsync",
	"Comment": "simplified method form for invoking the describereservedinstanceslistings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedInstancesListingsResult> describeReservedInstancesListingsAsync(DescribeReservedInstancesListingsRequest request,java.util.concurrent.Future<DescribeReservedInstancesListingsResult> describeReservedInstancesListingsAsync,DescribeReservedInstancesListingsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesListingsRequest, DescribeReservedInstancesListingsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedInstancesListingsResult> describeReservedInstancesListingsAsync,java.util.concurrent.Future<DescribeReservedInstancesListingsResult> describeReservedInstancesListingsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesListingsRequest, DescribeReservedInstancesListingsResult> asyncHandler){\r\n    return describeReservedInstancesListingsAsync(new DescribeReservedInstancesListingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.deleteRepositoryPolicy",
	"Comment": "deletes the repository policy from a specified repository.",
	"Method": "DeleteRepositoryPolicyResult deleteRepositoryPolicy(DeleteRepositoryPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteRepositoryPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTransitGatewayRouteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeLaunchTemplateVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateVersions() != null)\r\n        sb.append(\"LaunchTemplateVersions: \").append(getLaunchTemplateVersions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBStreamsClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazondynamodbstreams using the current builder configuration.",
	"Method": "AmazonDynamoDBStreams build(AwsSyncClientParams params){\r\n    return new AmazonDynamoDBStreamsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DescribeTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getTasks() != null)\r\n        sb.append(\"Tasks: \").append(getTasks()).append(\",\");\r\n    if (getInclude() != null)\r\n        sb.append(\"Include: \").append(getInclude());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBReflector.getRelevantGetters",
	"Comment": "returns the set of getter methods which are relevant when marshalling orunmarshalling an object.",
	"Method": "Collection<Method> getRelevantGetters(Class<?> clazz){\r\n    synchronized (getterCache) {\r\n        if (!getterCache.containsKey(clazz)) {\r\n            List<Method> relevantGetters = findRelevantGetters(clazz);\r\n            getterCache.put(clazz, relevantGetters);\r\n        }\r\n        return getterCache.get(clazz);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getCookieName() != null)\r\n        sb.append(\"CookieName: \").append(getCookieName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Expected.between",
	"Comment": "creates and returns a condition of the range key that has a value betweenthe given values.",
	"Method": "Expected between(Object low,Object hi){\r\n    return _withComparisonOperator(ComparisonOperator.BETWEEN)._withValues(low, hi);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeBundleTasksFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeBundleTasksResult apply(DescribeBundleTasksRequest describeBundleTasksRequest){\r\n    return client.describeBundleTasks(describeBundleTasksRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeConversionTasksFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeConversionTasksResult apply(DescribeConversionTasksRequest describeConversionTasksRequest){\r\n    return client.describeConversionTasks(describeConversionTasksRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeMovingAddressesAsync",
	"Comment": "simplified method form for invoking the describemovingaddresses operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeMovingAddressesResult> describeMovingAddressesAsync(DescribeMovingAddressesRequest request,java.util.concurrent.Future<DescribeMovingAddressesResult> describeMovingAddressesAsync,DescribeMovingAddressesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeMovingAddressesRequest, DescribeMovingAddressesResult> asyncHandler,java.util.concurrent.Future<DescribeMovingAddressesResult> describeMovingAddressesAsync,java.util.concurrent.Future<DescribeMovingAddressesResult> describeMovingAddressesAsync,com.amazonaws.handlers.AsyncHandler<DescribeMovingAddressesRequest, DescribeMovingAddressesResult> asyncHandler){\r\n    return describeMovingAddressesAsync(new DescribeMovingAddressesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceRouteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock()).append(\",\");\r\n    if (getDestinationIpv6CidrBlock() != null)\r\n        sb.append(\"DestinationIpv6CidrBlock: \").append(getDestinationIpv6CidrBlock()).append(\",\");\r\n    if (getEgressOnlyInternetGatewayId() != null)\r\n        sb.append(\"EgressOnlyInternetGatewayId: \").append(getEgressOnlyInternetGatewayId()).append(\",\");\r\n    if (getGatewayId() != null)\r\n        sb.append(\"GatewayId: \").append(getGatewayId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getNatGatewayId() != null)\r\n        sb.append(\"NatGatewayId: \").append(getNatGatewayId()).append(\",\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getRouteTableId() != null)\r\n        sb.append(\"RouteTableId: \").append(getRouteTableId()).append(\",\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.updateItemAsync",
	"Comment": "simplified method form for invoking the updateitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<UpdateItemResult> updateItemAsync(UpdateItemRequest request,java.util.concurrent.Future<UpdateItemResult> updateItemAsync,UpdateItemRequest request,com.amazonaws.handlers.AsyncHandler<UpdateItemRequest, UpdateItemResult> asyncHandler,java.util.concurrent.Future<UpdateItemResult> updateItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.Map<String, AttributeValueUpdate> attributeUpdates,java.util.concurrent.Future<UpdateItemResult> updateItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.Map<String, AttributeValueUpdate> attributeUpdates,com.amazonaws.handlers.AsyncHandler<UpdateItemRequest, UpdateItemResult> asyncHandler,java.util.concurrent.Future<UpdateItemResult> updateItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.Map<String, AttributeValueUpdate> attributeUpdates,String returnValues,java.util.concurrent.Future<UpdateItemResult> updateItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.Map<String, AttributeValueUpdate> attributeUpdates,String returnValues,com.amazonaws.handlers.AsyncHandler<UpdateItemRequest, UpdateItemResult> asyncHandler){\r\n    return updateItemAsync(new UpdateItemRequest().withTableName(tableName).withKey(key).withAttributeUpdates(attributeUpdates).withReturnValues(returnValues), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcPeeringConnectionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getVpcPeeringConnectionIds() != null)\r\n        sb.append(\"VpcPeeringConnectionIds: \").append(getVpcPeeringConnectionIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteLaunchTemplateVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccessfullyDeletedLaunchTemplateVersions() != null)\r\n        sb.append(\"SuccessfullyDeletedLaunchTemplateVersions: \").append(getSuccessfullyDeletedLaunchTemplateVersions()).append(\",\");\r\n    if (getUnsuccessfullyDeletedLaunchTemplateVersions() != null)\r\n        sb.append(\"UnsuccessfullyDeletedLaunchTemplateVersions: \").append(getUnsuccessfullyDeletedLaunchTemplateVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.getShort",
	"Comment": "returns the value of the specified attribute in the current item as ashort.",
	"Method": "short getShort(String attrName){\r\n    BigDecimal bd = getNumber(attrName);\r\n    if (bd == null)\r\n        throw new NumberFormatException(\"value of \" + attrName + \" is null\");\r\n    return bd.shortValue();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RevokeSecurityGroupEgressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListTaskDefinitionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskDefinitionArns() != null)\r\n        sb.append(\"TaskDefinitionArns: \").append(getTaskDefinitionArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.updateTableAsync",
	"Comment": "simplified method form for invoking the updatetable operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<UpdateTableResult> updateTableAsync(UpdateTableRequest request,java.util.concurrent.Future<UpdateTableResult> updateTableAsync,UpdateTableRequest request,com.amazonaws.handlers.AsyncHandler<UpdateTableRequest, UpdateTableResult> asyncHandler,java.util.concurrent.Future<UpdateTableResult> updateTableAsync,String tableName,ProvisionedThroughput provisionedThroughput,java.util.concurrent.Future<UpdateTableResult> updateTableAsync,String tableName,ProvisionedThroughput provisionedThroughput,com.amazonaws.handlers.AsyncHandler<UpdateTableRequest, UpdateTableResult> asyncHandler){\r\n    return updateTableAsync(new UpdateTableRequest().withTableName(tableName).withProvisionedThroughput(provisionedThroughput), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.RedirectActionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getHost() != null)\r\n        sb.append(\"Host: \").append(getHost()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getQuery() != null)\r\n        sb.append(\"Query: \").append(getQuery()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateLicenseConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.BackendServerDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstancePort() != null)\r\n        sb.append(\"InstancePort: \").append(getInstancePort()).append(\",\");\r\n    if (getPolicyNames() != null)\r\n        sb.append(\"PolicyNames: \").append(getPolicyNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.AddTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.getExpected",
	"Comment": "gets the map of attribute names to expected attribute values to check on delete.",
	"Method": "Map<String, ExpectedAttributeValue> getExpected(){\r\n    return expectedAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Expected.gt",
	"Comment": "creates and returns a condition of the range key being greater than thegiven value.",
	"Method": "Expected gt(Object val){\r\n    return _withComparisonOperator(ComparisonOperator.GT)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonelasticfilesystemasync using the current builder configuration.",
	"Method": "AmazonElasticFileSystemAsync build(AwsAsyncClientParams params){\r\n    return new AmazonElasticFileSystemAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ListAvailableSolutionStacksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AbstractAmazonElasticLoadBalancingAsync.describeLoadBalancersAsync",
	"Comment": "simplified method form for invoking the describeloadbalancers operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeLoadBalancersResult> describeLoadBalancersAsync(DescribeLoadBalancersRequest request,java.util.concurrent.Future<DescribeLoadBalancersResult> describeLoadBalancersAsync,DescribeLoadBalancersRequest request,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancersRequest, DescribeLoadBalancersResult> asyncHandler,java.util.concurrent.Future<DescribeLoadBalancersResult> describeLoadBalancersAsync,java.util.concurrent.Future<DescribeLoadBalancersResult> describeLoadBalancersAsync,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancersRequest, DescribeLoadBalancersResult> asyncHandler){\r\n    return describeLoadBalancersAsync(new DescribeLoadBalancersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeNetworkInterfacesAsync",
	"Comment": "simplified method form for invoking the describenetworkinterfaces operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeNetworkInterfacesResult> describeNetworkInterfacesAsync(DescribeNetworkInterfacesRequest request,java.util.concurrent.Future<DescribeNetworkInterfacesResult> describeNetworkInterfacesAsync,DescribeNetworkInterfacesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeNetworkInterfacesRequest, DescribeNetworkInterfacesResult> asyncHandler,java.util.concurrent.Future<DescribeNetworkInterfacesResult> describeNetworkInterfacesAsync,java.util.concurrent.Future<DescribeNetworkInterfacesResult> describeNetworkInterfacesAsync,com.amazonaws.handlers.AsyncHandler<DescribeNetworkInterfacesRequest, DescribeNetworkInterfacesResult> asyncHandler){\r\n    return describeNetworkInterfacesAsync(new DescribeNetworkInterfacesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.modifyFleet",
	"Comment": "modifies the specified ec2 fleet.while the ec2 fleet is being modified, it is in the modifying state.",
	"Method": "ModifyFleetResult modifyFleet(ModifyFleetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyFleet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeInstanceCreditSpecificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceCreditSpecifications() != null)\r\n        sb.append(\"InstanceCreditSpecifications: \").append(getInstanceCreditSpecifications()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Record.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventID() != null)\r\n        sb.append(\"EventID: \").append(getEventID()).append(\",\");\r\n    if (getEventName() != null)\r\n        sb.append(\"EventName: \").append(getEventName()).append(\",\");\r\n    if (getEventVersion() != null)\r\n        sb.append(\"EventVersion: \").append(getEventVersion()).append(\",\");\r\n    if (getEventSource() != null)\r\n        sb.append(\"EventSource: \").append(getEventSource()).append(\",\");\r\n    if (getAwsRegion() != null)\r\n        sb.append(\"AwsRegion: \").append(getAwsRegion()).append(\",\");\r\n    if (getDynamodb() != null)\r\n        sb.append(\"Dynamodb: \").append(getDynamodb()).append(\",\");\r\n    if (getUserIdentity() != null)\r\n        sb.append(\"UserIdentity: \").append(getUserIdentity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTable() != null)\r\n        sb.append(\"Table: \").append(getTable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeregisterTaskDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Expected.ge",
	"Comment": "creates and returns a condition of the range key being greater than orequal to the given value.",
	"Method": "Expected ge(Object val){\r\n    return _withComparisonOperator(ComparisonOperator.GE)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CopyFpgaImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceFpgaImageId() != null)\r\n        sb.append(\"SourceFpgaImageId: \").append(getSourceFpgaImageId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VolumeStatusDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.SourceTableFeatureDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocalSecondaryIndexes() != null)\r\n        sb.append(\"LocalSecondaryIndexes: \").append(getLocalSecondaryIndexes()).append(\",\");\r\n    if (getGlobalSecondaryIndexes() != null)\r\n        sb.append(\"GlobalSecondaryIndexes: \").append(getGlobalSecondaryIndexes()).append(\",\");\r\n    if (getStreamDescription() != null)\r\n        sb.append(\"StreamDescription: \").append(getStreamDescription()).append(\",\");\r\n    if (getTimeToLiveDescription() != null)\r\n        sb.append(\"TimeToLiveDescription: \").append(getTimeToLiveDescription()).append(\",\");\r\n    if (getSSEDescription() != null)\r\n        sb.append(\"SSEDescription: \").append(getSSEDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Ulimit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSoftLimit() != null)\r\n        sb.append(\"SoftLimit: \").append(getSoftLimit()).append(\",\");\r\n    if (getHardLimit() != null)\r\n        sb.append(\"HardLimit: \").append(getHardLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Expected.eq",
	"Comment": "creates and returns a condition of the range key being equal to the givenvalue.",
	"Method": "Expected eq(Object val){\r\n    return _withComparisonOperator(ComparisonOperator.EQ)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeApplicationVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabels() != null)\r\n        sb.append(\"VersionLabels: \").append(getVersionLabels()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ExportTransitGatewayRoutesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Location() != null)\r\n        sb.append(\"S3Location: \").append(getS3Location());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.waiters.AmazonElasticLoadBalancingWaiters.instanceDeregistered",
	"Comment": "builds a instancederegistered waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstanceHealthRequest> instanceDeregistered(){\r\n    return new WaiterBuilder<DescribeInstanceHealthRequest, DescribeInstanceHealthResult>().withSdkFunction(new DescribeInstanceHealthFunction(client)).withAcceptors(new InstanceDeregistered.IsOutOfServiceMatcher(), new InstanceDeregistered.IsInvalidInstanceMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.util.TableUtils.waitForTableDescription",
	"Comment": "wait for the table to reach the desired status and returns the table\tdescription",
	"Method": "TableDescription waitForTableDescription(AmazonDynamoDB dynamo,String tableName,TableStatus desiredStatus,int timeout,int interval){\r\n    if (timeout < 0) {\r\n        throw new IllegalArgumentException(\"Timeout must be >= 0\");\r\n    }\r\n    if (interval <= 0 || interval >= timeout) {\r\n        throw new IllegalArgumentException(\"Interval must be > 0 and < timeout\");\r\n    }\r\n    long startTime = System.currentTimeMillis();\r\n    long endTime = startTime + timeout;\r\n    TableDescription table = null;\r\n    while (System.currentTimeMillis() < endTime) {\r\n        try {\r\n            table = dynamo.describeTable(new DescribeTableRequest(tableName)).getTable();\r\n            if (desiredStatus == null || table.getTableStatus().equals(desiredStatus.toString())) {\r\n                return table;\r\n            }\r\n        } catch (ResourceNotFoundException rnfe) {\r\n        }\r\n        Thread.sleep(interval);\r\n    }\r\n    return table;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcPeeringConnectionOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccepterPeeringConnectionOptions() != null)\r\n        sb.append(\"AccepterPeeringConnectionOptions: \").append(getAccepterPeeringConnectionOptions()).append(\",\");\r\n    if (getRequesterPeeringConnectionOptions() != null)\r\n        sb.append(\"RequesterPeeringConnectionOptions: \").append(getRequesterPeeringConnectionOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVolumeAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DescribeRepositoriesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryNames() != null)\r\n        sb.append(\"RepositoryNames: \").append(getRepositoryNames()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteNetworkInterfacePermissionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEnvironmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getEnvironmentIds() != null)\r\n        sb.append(\"EnvironmentIds: \").append(getEnvironmentIds()).append(\",\");\r\n    if (getEnvironmentNames() != null)\r\n        sb.append(\"EnvironmentNames: \").append(getEnvironmentNames()).append(\",\");\r\n    if (getIncludeDeleted() != null)\r\n        sb.append(\"IncludeDeleted: \").append(getIncludeDeleted()).append(\",\");\r\n    if (getIncludedDeletedBackTo() != null)\r\n        sb.append(\"IncludedDeletedBackTo: \").append(getIncludedDeletedBackTo()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DetachLoadBalancerFromSubnetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkInterfaceIpv6Address.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6Address() != null)\r\n        sb.append(\"Ipv6Address: \").append(getIpv6Address());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeCustomerGatewaysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomerGateways() != null)\r\n        sb.append(\"CustomerGateways: \").append(getCustomerGateways());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVolumeAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RunInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getIpv6AddressCount() != null)\r\n        sb.append(\"Ipv6AddressCount: \").append(getIpv6AddressCount()).append(\",\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName()).append(\",\");\r\n    if (getMaxCount() != null)\r\n        sb.append(\"MaxCount: \").append(getMaxCount()).append(\",\");\r\n    if (getMinCount() != null)\r\n        sb.append(\"MinCount: \").append(getMinCount()).append(\",\");\r\n    if (getMonitoring() != null)\r\n        sb.append(\"Monitoring: \").append(getMonitoring()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement()).append(\",\");\r\n    if (getRamdiskId() != null)\r\n        sb.append(\"RamdiskId: \").append(getRamdiskId()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData()).append(\",\");\r\n    if (getAdditionalInfo() != null)\r\n        sb.append(\"AdditionalInfo: \").append(getAdditionalInfo()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getDisableApiTermination() != null)\r\n        sb.append(\"DisableApiTermination: \").append(getDisableApiTermination()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getInstanceInitiatedShutdownBehavior() != null)\r\n        sb.append(\"InstanceInitiatedShutdownBehavior: \").append(getInstanceInitiatedShutdownBehavior()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getElasticGpuSpecification() != null)\r\n        sb.append(\"ElasticGpuSpecification: \").append(getElasticGpuSpecification()).append(\",\");\r\n    if (getElasticInferenceAccelerators() != null)\r\n        sb.append(\"ElasticInferenceAccelerators: \").append(getElasticInferenceAccelerators()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications()).append(\",\");\r\n    if (getLaunchTemplate() != null)\r\n        sb.append(\"LaunchTemplate: \").append(getLaunchTemplate()).append(\",\");\r\n    if (getInstanceMarketOptions() != null)\r\n        sb.append(\"InstanceMarketOptions: \").append(getInstanceMarketOptions()).append(\",\");\r\n    if (getCreditSpecification() != null)\r\n        sb.append(\"CreditSpecification: \").append(getCreditSpecification()).append(\",\");\r\n    if (getCpuOptions() != null)\r\n        sb.append(\"CpuOptions: \").append(getCpuOptions()).append(\",\");\r\n    if (getCapacityReservationSpecification() != null)\r\n        sb.append(\"CapacityReservationSpecification: \").append(getCapacityReservationSpecification()).append(\",\");\r\n    if (getHibernationOptions() != null)\r\n        sb.append(\"HibernationOptions: \").append(getHibernationOptions()).append(\",\");\r\n    if (getLicenseSpecifications() != null)\r\n        sb.append(\"LicenseSpecifications: \").append(getLicenseSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateInstanceNetworkInterfaceSpecificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociatePublicIpAddress() != null)\r\n        sb.append(\"AssociatePublicIpAddress: \").append(getAssociatePublicIpAddress()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDeviceIndex() != null)\r\n        sb.append(\"DeviceIndex: \").append(getDeviceIndex()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getIpv6AddressCount() != null)\r\n        sb.append(\"Ipv6AddressCount: \").append(getIpv6AddressCount()).append(\",\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getPrivateIpAddresses() != null)\r\n        sb.append(\"PrivateIpAddresses: \").append(getPrivateIpAddresses()).append(\",\");\r\n    if (getSecondaryPrivateIpAddressCount() != null)\r\n        sb.append(\"SecondaryPrivateIpAddressCount: \").append(getSecondaryPrivateIpAddressCount()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RestoreAddressToClassicResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TargetCapacitySpecificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTotalTargetCapacity() != null)\r\n        sb.append(\"TotalTargetCapacity: \").append(getTotalTargetCapacity()).append(\",\");\r\n    if (getOnDemandTargetCapacity() != null)\r\n        sb.append(\"OnDemandTargetCapacity: \").append(getOnDemandTargetCapacity()).append(\",\");\r\n    if (getSpotTargetCapacity() != null)\r\n        sb.append(\"SpotTargetCapacity: \").append(getSpotTargetCapacity()).append(\",\");\r\n    if (getDefaultTargetCapacityType() != null)\r\n        sb.append(\"DefaultTargetCapacityType: \").append(getDefaultTargetCapacityType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateVpcCidrBlockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmazonProvidedIpv6CidrBlock() != null)\r\n        sb.append(\"AmazonProvidedIpv6CidrBlock: \").append(getAmazonProvidedIpv6CidrBlock()).append(\",\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyDescriptions() != null)\r\n        sb.append(\"PolicyDescriptions: \").append(getPolicyDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateGlobalTableSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableName() != null)\r\n        sb.append(\"GlobalTableName: \").append(getGlobalTableName()).append(\",\");\r\n    if (getGlobalTableBillingMode() != null)\r\n        sb.append(\"GlobalTableBillingMode: \").append(getGlobalTableBillingMode()).append(\",\");\r\n    if (getGlobalTableProvisionedWriteCapacityUnits() != null)\r\n        sb.append(\"GlobalTableProvisionedWriteCapacityUnits: \").append(getGlobalTableProvisionedWriteCapacityUnits()).append(\",\");\r\n    if (getGlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate() != null)\r\n        sb.append(\"GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate: \").append(getGlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate()).append(\",\");\r\n    if (getGlobalTableGlobalSecondaryIndexSettingsUpdate() != null)\r\n        sb.append(\"GlobalTableGlobalSecondaryIndexSettingsUpdate: \").append(getGlobalTableGlobalSecondaryIndexSettingsUpdate()).append(\",\");\r\n    if (getReplicaSettingsUpdate() != null)\r\n        sb.append(\"ReplicaSettingsUpdate: \").append(getReplicaSettingsUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AcceptVpcPeeringConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CacheParameterGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getCacheParameterGroupFamily() != null)\r\n        sb.append(\"CacheParameterGroupFamily: \").append(getCacheParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeAvailabilityZonesAsync",
	"Comment": "simplified method form for invoking the describeavailabilityzones operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAvailabilityZonesResult> describeAvailabilityZonesAsync(DescribeAvailabilityZonesRequest request,java.util.concurrent.Future<DescribeAvailabilityZonesResult> describeAvailabilityZonesAsync,DescribeAvailabilityZonesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAvailabilityZonesRequest, DescribeAvailabilityZonesResult> asyncHandler,java.util.concurrent.Future<DescribeAvailabilityZonesResult> describeAvailabilityZonesAsync,java.util.concurrent.Future<DescribeAvailabilityZonesResult> describeAvailabilityZonesAsync,com.amazonaws.handlers.AsyncHandler<DescribeAvailabilityZonesRequest, DescribeAvailabilityZonesResult> asyncHandler){\r\n    return describeAvailabilityZonesAsync(new DescribeAvailabilityZonesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerListenerSSLCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.ModifyRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleArn() != null)\r\n        sb.append(\"RuleArn: \").append(getRuleArn()).append(\",\");\r\n    if (getConditions() != null)\r\n        sb.append(\"Conditions: \").append(getConditions()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeStaleSecurityGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyInstanceAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.StartReplicationTaskAssessmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationTaskArn() != null)\r\n        sb.append(\"ReplicationTaskArn: \").append(getReplicationTaskArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.FileSystemDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getCreationToken() != null)\r\n        sb.append(\"CreationToken: \").append(getCreationToken()).append(\",\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLifeCycleState() != null)\r\n        sb.append(\"LifeCycleState: \").append(getLifeCycleState()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNumberOfMountTargets() != null)\r\n        sb.append(\"NumberOfMountTargets: \").append(getNumberOfMountTargets()).append(\",\");\r\n    if (getSizeInBytes() != null)\r\n        sb.append(\"SizeInBytes: \").append(getSizeInBytes()).append(\",\");\r\n    if (getPerformanceMode() != null)\r\n        sb.append(\"PerformanceMode: \").append(getPerformanceMode()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getThroughputMode() != null)\r\n        sb.append(\"ThroughputMode: \").append(getThroughputMode()).append(\",\");\r\n    if (getProvisionedThroughputInMibps() != null)\r\n        sb.append(\"ProvisionedThroughputInMibps: \").append(getProvisionedThroughputInMibps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.RestoreSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceBackupArn() != null)\r\n        sb.append(\"SourceBackupArn: \").append(getSourceBackupArn()).append(\",\");\r\n    if (getSourceTableArn() != null)\r\n        sb.append(\"SourceTableArn: \").append(getSourceTableArn()).append(\",\");\r\n    if (getRestoreDateTime() != null)\r\n        sb.append(\"RestoreDateTime: \").append(getRestoreDateTime()).append(\",\");\r\n    if (getRestoreInProgress() != null)\r\n        sb.append(\"RestoreInProgress: \").append(getRestoreInProgress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcTenancyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getInstanceTenancy() != null)\r\n        sb.append(\"InstanceTenancy: \").append(getInstanceTenancy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportKeyPairRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName()).append(\",\");\r\n    if (getPublicKeyMaterial() != null)\r\n        sb.append(\"PublicKeyMaterial: \").append(getPublicKeyMaterial());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GroupIdentifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyLaunchTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getDefaultVersion() != null)\r\n        sb.append(\"DefaultVersion: \").append(getDefaultVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceRouteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AcceptReservedInstancesExchangeQuoteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstanceIds() != null)\r\n        sb.append(\"ReservedInstanceIds: \").append(getReservedInstanceIds()).append(\",\");\r\n    if (getTargetConfigurations() != null)\r\n        sb.append(\"TargetConfigurations: \").append(getTargetConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeReservedInstancesAsync",
	"Comment": "simplified method form for invoking the describereservedinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedInstancesResult> describeReservedInstancesAsync(DescribeReservedInstancesRequest request,java.util.concurrent.Future<DescribeReservedInstancesResult> describeReservedInstancesAsync,DescribeReservedInstancesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesRequest, DescribeReservedInstancesResult> asyncHandler,java.util.concurrent.Future<DescribeReservedInstancesResult> describeReservedInstancesAsync,java.util.concurrent.Future<DescribeReservedInstancesResult> describeReservedInstancesAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesRequest, DescribeReservedInstancesResult> asyncHandler){\r\n    return describeReservedInstancesAsync(new DescribeReservedInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeConversionTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConversionTaskIds() != null)\r\n        sb.append(\"ConversionTaskIds: \").append(getConversionTaskIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EnableVpcClassicLinkDnsSupportResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBReflector.isAssignableKey",
	"Comment": "returns whether the method given is an assignable key getter.",
	"Method": "boolean isAssignableKey(Method getter){\r\n    synchronized (autoGeneratedKeyGetterCache) {\r\n        if (!autoGeneratedKeyGetterCache.containsKey(getter)) {\r\n            autoGeneratedKeyGetterCache.put(getter, ReflectionUtils.getterOrFieldHasAnnotation(getter, DynamoDBAutoGeneratedKey.class) && (ReflectionUtils.getterOrFieldHasAnnotation(getter, DynamoDBHashKey.class) || ReflectionUtils.getterOrFieldHasAnnotation(getter, DynamoDBRangeKey.class) || ReflectionUtils.getterOrFieldHasAnnotation(getter, DynamoDBIndexHashKey.class) || ReflectionUtils.getterOrFieldHasAnnotation(getter, DynamoDBIndexRangeKey.class)));\r\n        }\r\n        return autoGeneratedKeyGetterCache.get(getter);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DeleteCacheSubnetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.CreateGlobalTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableDescription() != null)\r\n        sb.append(\"GlobalTableDescription: \").append(getGlobalTableDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PlacementResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ExportToS3TaskSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerFormat() != null)\r\n        sb.append(\"ContainerFormat: \").append(getContainerFormat()).append(\",\");\r\n    if (getDiskImageFormat() != null)\r\n        sb.append(\"DiskImageFormat: \").append(getDiskImageFormat()).append(\",\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Prefix() != null)\r\n        sb.append(\"S3Prefix: \").append(getS3Prefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AbstractAmazonECSAsync.submitContainerStateChangeAsync",
	"Comment": "simplified method form for invoking the submitcontainerstatechange operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<SubmitContainerStateChangeResult> submitContainerStateChangeAsync(SubmitContainerStateChangeRequest request,java.util.concurrent.Future<SubmitContainerStateChangeResult> submitContainerStateChangeAsync,SubmitContainerStateChangeRequest request,com.amazonaws.handlers.AsyncHandler<SubmitContainerStateChangeRequest, SubmitContainerStateChangeResult> asyncHandler,java.util.concurrent.Future<SubmitContainerStateChangeResult> submitContainerStateChangeAsync,java.util.concurrent.Future<SubmitContainerStateChangeResult> submitContainerStateChangeAsync,com.amazonaws.handlers.AsyncHandler<SubmitContainerStateChangeRequest, SubmitContainerStateChangeResult> asyncHandler){\r\n    return submitContainerStateChangeAsync(new SubmitContainerStateChangeRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.Instance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CreateAppCookieStickinessPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withInt",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withInt(String attrName,int val){\r\n    checkInvalidAttrName(attrName);\r\n    return withNumber(attrName, Integer.valueOf(val));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.customerGatewayAvailable",
	"Comment": "builds a customergatewayavailable waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeCustomerGatewaysRequest> customerGatewayAvailable(){\r\n    return new WaiterBuilder<DescribeCustomerGatewaysRequest, DescribeCustomerGatewaysResult>().withSdkFunction(new DescribeCustomerGatewaysFunction(client)).withAcceptors(new CustomerGatewayAvailable.IsAvailableMatcher(), new CustomerGatewayAvailable.IsDeletedMatcher(), new CustomerGatewayAvailable.IsDeletingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.OnDemandOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationStrategy() != null)\r\n        sb.append(\"AllocationStrategy: \").append(getAllocationStrategy()).append(\",\");\r\n    if (getSingleInstanceType() != null)\r\n        sb.append(\"SingleInstanceType: \").append(getSingleInstanceType()).append(\",\");\r\n    if (getMinTargetCapacity() != null)\r\n        sb.append(\"MinTargetCapacity: \").append(getMinTargetCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.AddListenerCertificatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn()).append(\",\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeRegionsAsync",
	"Comment": "simplified method form for invoking the describeregions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeRegionsResult> describeRegionsAsync(DescribeRegionsRequest request,java.util.concurrent.Future<DescribeRegionsResult> describeRegionsAsync,DescribeRegionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeRegionsRequest, DescribeRegionsResult> asyncHandler,java.util.concurrent.Future<DescribeRegionsResult> describeRegionsAsync,java.util.concurrent.Future<DescribeRegionsResult> describeRegionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeRegionsRequest, DescribeRegionsResult> asyncHandler){\r\n    return describeRegionsAsync(new DescribeRegionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PublicIpv4Pool.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPoolId() != null)\r\n        sb.append(\"PoolId: \").append(getPoolId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getPoolAddressRanges() != null)\r\n        sb.append(\"PoolAddressRanges: \").append(getPoolAddressRanges()).append(\",\");\r\n    if (getTotalAddressCount() != null)\r\n        sb.append(\"TotalAddressCount: \").append(getTotalAddressCount()).append(\",\");\r\n    if (getTotalAvailableAddressCount() != null)\r\n        sb.append(\"TotalAvailableAddressCount: \").append(getTotalAvailableAddressCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.listServicesAsync",
	"Comment": "simplified method form for invoking the listservices operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListServicesResult> listServicesAsync(ListServicesRequest request,java.util.concurrent.Future<ListServicesResult> listServicesAsync,ListServicesRequest request,com.amazonaws.handlers.AsyncHandler<ListServicesRequest, ListServicesResult> asyncHandler,java.util.concurrent.Future<ListServicesResult> listServicesAsync,java.util.concurrent.Future<ListServicesResult> listServicesAsync,com.amazonaws.handlers.AsyncHandler<ListServicesRequest, ListServicesResult> asyncHandler){\r\n    return listServicesAsync(new ListServicesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.getItem",
	"Comment": "the getitem operation returns a set of attributes for the item with the given primary key. if thereis no matching item, getitem does not return any data and there will be no item elementin the response.getitem provides an eventually consistent read by default. if your application requires a stronglyconsistent read, set consistentread to true. although a strongly consistent read mighttake more time than an eventually consistent read, it always returns the last updated value.",
	"Method": "GetItemResult getItem(GetItemRequest request,GetItemResult getItem,String tableName,java.util.Map<String, AttributeValue> key,GetItemResult getItem,String tableName,java.util.Map<String, AttributeValue> key,Boolean consistentRead){\r\n    return getItem(new GetItemRequest().withTableName(tableName).withKey(key).withConsistentRead(consistentRead));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteTransitGatewayVpcAttachmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayVpcAttachment() != null)\r\n        sb.append(\"TransitGatewayVpcAttachment: \").append(getTransitGatewayVpcAttachment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.SwapEnvironmentCNAMEsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceEnvironmentId() != null)\r\n        sb.append(\"SourceEnvironmentId: \").append(getSourceEnvironmentId()).append(\",\");\r\n    if (getSourceEnvironmentName() != null)\r\n        sb.append(\"SourceEnvironmentName: \").append(getSourceEnvironmentName()).append(\",\");\r\n    if (getDestinationEnvironmentId() != null)\r\n        sb.append(\"DestinationEnvironmentId: \").append(getDestinationEnvironmentId()).append(\",\");\r\n    if (getDestinationEnvironmentName() != null)\r\n        sb.append(\"DestinationEnvironmentName: \").append(getDestinationEnvironmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.SwapEnvironmentCNAMEsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeImageAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.createInternetGatewayAsync",
	"Comment": "simplified method form for invoking the createinternetgateway operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateInternetGatewayResult> createInternetGatewayAsync(CreateInternetGatewayRequest request,java.util.concurrent.Future<CreateInternetGatewayResult> createInternetGatewayAsync,CreateInternetGatewayRequest request,com.amazonaws.handlers.AsyncHandler<CreateInternetGatewayRequest, CreateInternetGatewayResult> asyncHandler,java.util.concurrent.Future<CreateInternetGatewayResult> createInternetGatewayAsync,java.util.concurrent.Future<CreateInternetGatewayResult> createInternetGatewayAsync,com.amazonaws.handlers.AsyncHandler<CreateInternetGatewayRequest, CreateInternetGatewayResult> asyncHandler){\r\n    return createInternetGatewayAsync(new CreateInternetGatewayRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.RebuildEnvironmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceNetworkAclEntryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock()).append(\",\");\r\n    if (getEgress() != null)\r\n        sb.append(\"Egress: \").append(getEgress()).append(\",\");\r\n    if (getIcmpTypeCode() != null)\r\n        sb.append(\"IcmpTypeCode: \").append(getIcmpTypeCode()).append(\",\");\r\n    if (getIpv6CidrBlock() != null)\r\n        sb.append(\"Ipv6CidrBlock: \").append(getIpv6CidrBlock()).append(\",\");\r\n    if (getNetworkAclId() != null)\r\n        sb.append(\"NetworkAclId: \").append(getNetworkAclId()).append(\",\");\r\n    if (getPortRange() != null)\r\n        sb.append(\"PortRange: \").append(getPortRange()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getRuleAction() != null)\r\n        sb.append(\"RuleAction: \").append(getRuleAction()).append(\",\");\r\n    if (getRuleNumber() != null)\r\n        sb.append(\"RuleNumber: \").append(getRuleNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateSubnetCidrBlockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.deleteSpotDatafeedSubscriptionAsync",
	"Comment": "simplified method form for invoking the deletespotdatafeedsubscription operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DeleteSpotDatafeedSubscriptionResult> deleteSpotDatafeedSubscriptionAsync(DeleteSpotDatafeedSubscriptionRequest request,java.util.concurrent.Future<DeleteSpotDatafeedSubscriptionResult> deleteSpotDatafeedSubscriptionAsync,DeleteSpotDatafeedSubscriptionRequest request,com.amazonaws.handlers.AsyncHandler<DeleteSpotDatafeedSubscriptionRequest, DeleteSpotDatafeedSubscriptionResult> asyncHandler,java.util.concurrent.Future<DeleteSpotDatafeedSubscriptionResult> deleteSpotDatafeedSubscriptionAsync,java.util.concurrent.Future<DeleteSpotDatafeedSubscriptionResult> deleteSpotDatafeedSubscriptionAsync,com.amazonaws.handlers.AsyncHandler<DeleteSpotDatafeedSubscriptionRequest, DeleteSpotDatafeedSubscriptionResult> asyncHandler){\r\n    return deleteSpotDatafeedSubscriptionAsync(new DeleteSpotDatafeedSubscriptionRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.waiters.AmazonElastiCacheWaiters.replicationGroupDeleted",
	"Comment": "builds a replicationgroupdeleted waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeReplicationGroupsRequest> replicationGroupDeleted(){\r\n    return new WaiterBuilder<DescribeReplicationGroupsRequest, DescribeReplicationGroupsResult>().withSdkFunction(new DescribeReplicationGroupsFunction(client)).withAcceptors(new ReplicationGroupDeleted.IsDeletedMatcher(), new ReplicationGroupDeleted.IsAvailableMatcher(), new ReplicationGroupDeleted.IsReplicationGroupNotFoundFaultMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelSpotFleetRequestsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccessfulFleetRequests() != null)\r\n        sb.append(\"SuccessfulFleetRequests: \").append(getSuccessfulFleetRequests()).append(\",\");\r\n    if (getUnsuccessfulFleetRequests() != null)\r\n        sb.append(\"UnsuccessfulFleetRequests: \").append(getUnsuccessfulFleetRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSubnetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeSubnetsAsync",
	"Comment": "simplified method form for invoking the describesubnets operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSubnetsResult> describeSubnetsAsync(DescribeSubnetsRequest request,java.util.concurrent.Future<DescribeSubnetsResult> describeSubnetsAsync,DescribeSubnetsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSubnetsRequest, DescribeSubnetsResult> asyncHandler,java.util.concurrent.Future<DescribeSubnetsResult> describeSubnetsAsync,java.util.concurrent.Future<DescribeSubnetsResult> describeSubnetsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSubnetsRequest, DescribeSubnetsResult> asyncHandler){\r\n    return describeSubnetsAsync(new DescribeSubnetsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withMap",
	"Comment": "sets the value of the specified key in the current valuemap to thegiven value.",
	"Method": "ValueMap withMap(String key,Map<String, ?> val){\r\n    super.put(key, val);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeBundleTasksAsync",
	"Comment": "simplified method form for invoking the describebundletasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeBundleTasksResult> describeBundleTasksAsync(DescribeBundleTasksRequest request,java.util.concurrent.Future<DescribeBundleTasksResult> describeBundleTasksAsync,DescribeBundleTasksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeBundleTasksRequest, DescribeBundleTasksResult> asyncHandler,java.util.concurrent.Future<DescribeBundleTasksResult> describeBundleTasksAsync,java.util.concurrent.Future<DescribeBundleTasksResult> describeBundleTasksAsync,com.amazonaws.handlers.AsyncHandler<DescribeBundleTasksRequest, DescribeBundleTasksResult> asyncHandler){\r\n    return describeBundleTasksAsync(new DescribeBundleTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.importImageAsync",
	"Comment": "simplified method form for invoking the importimage operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ImportImageResult> importImageAsync(ImportImageRequest request,java.util.concurrent.Future<ImportImageResult> importImageAsync,ImportImageRequest request,com.amazonaws.handlers.AsyncHandler<ImportImageRequest, ImportImageResult> asyncHandler,java.util.concurrent.Future<ImportImageResult> importImageAsync,java.util.concurrent.Future<ImportImageResult> importImageAsync,com.amazonaws.handlers.AsyncHandler<ImportImageRequest, ImportImageResult> asyncHandler){\r\n    return importImageAsync(new ImportImageRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.spec.AbstractSpecWithPrimaryKey.getKeyComponents",
	"Comment": "returns the primary key components that has been specified.",
	"Method": "Collection<KeyAttribute> getKeyComponents(){\r\n    return keyComponents;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteCustomerGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.ScanResultPage.getConsumedCapacity",
	"Comment": "the capacity units consumed by an operation. the data returnedincludes the total provisioned throughput consumed, along withstatistics for the table and any indexes involved in the operation.consumedcapacity is only returned if the request asked for it.for more information, see provisionedthroughput in the amazon dynamodb developer guide.",
	"Method": "ConsumedCapacity getConsumedCapacity(){\r\n    return consumedCapacity;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.RebootCacheClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getCacheNodeIdsToReboot() != null)\r\n        sb.append(\"CacheNodeIdsToReboot: \").append(getCacheNodeIdsToReboot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeAccountLimitsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimits() != null)\r\n        sb.append(\"Limits: \").append(getLimits()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Expected.lt",
	"Comment": "creates and returns a condition of the range key being less than thegiven value.",
	"Method": "Expected lt(Object val){\r\n    return _withComparisonOperator(ComparisonOperator.LT)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DetachClassicLinkVpcRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeGlobalTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableName() != null)\r\n        sb.append(\"GlobalTableName: \").append(getGlobalTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateSubnetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getAvailabilityZoneId() != null)\r\n        sb.append(\"AvailabilityZoneId: \").append(getAvailabilityZoneId()).append(\",\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock()).append(\",\");\r\n    if (getIpv6CidrBlock() != null)\r\n        sb.append(\"Ipv6CidrBlock: \").append(getIpv6CidrBlock()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.spotInstanceRequestFulfilled",
	"Comment": "builds a spotinstancerequestfulfilled waiter by using custom parameters waiterparameters and other parametersdefined in the waiters specification, and then polls until it determines whether the resource entered the desiredstate or not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeSpotInstanceRequestsRequest> spotInstanceRequestFulfilled(){\r\n    return new WaiterBuilder<DescribeSpotInstanceRequestsRequest, DescribeSpotInstanceRequestsResult>().withSdkFunction(new DescribeSpotInstanceRequestsFunction(client)).withAcceptors(new SpotInstanceRequestFulfilled.IsFulfilledMatcher(), new SpotInstanceRequestFulfilled.IsRequestcanceledandinstancerunningMatcher(), new SpotInstanceRequestFulfilled.IsScheduleexpiredMatcher(), new SpotInstanceRequestFulfilled.IsCanceledbeforefulfillmentMatcher(), new SpotInstanceRequestFulfilled.IsBadparametersMatcher(), new SpotInstanceRequestFulfilled.IsSystemerrorMatcher(), new SpotInstanceRequestFulfilled.IsInvalidSpotInstanceRequestIDNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotDatafeedSubscription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getFault() != null)\r\n        sb.append(\"Fault: \").append(getFault()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TransactWriteItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConditionCheck() != null)\r\n        sb.append(\"ConditionCheck: \").append(getConditionCheck()).append(\",\");\r\n    if (getPut() != null)\r\n        sb.append(\"Put: \").append(getPut()).append(\",\");\r\n    if (getDelete() != null)\r\n        sb.append(\"Delete: \").append(getDelete()).append(\",\");\r\n    if (getUpdate() != null)\r\n        sb.append(\"Update: \").append(getUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateEbsBlockDeviceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getVolumeSize() != null)\r\n        sb.append(\"VolumeSize: \").append(getVolumeSize()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ReservedCacheNode.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedCacheNodeId() != null)\r\n        sb.append(\"ReservedCacheNodeId: \").append(getReservedCacheNodeId()).append(\",\");\r\n    if (getReservedCacheNodesOfferingId() != null)\r\n        sb.append(\"ReservedCacheNodesOfferingId: \").append(getReservedCacheNodesOfferingId()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice()).append(\",\");\r\n    if (getCacheNodeCount() != null)\r\n        sb.append(\"CacheNodeCount: \").append(getCacheNodeCount()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getRecurringCharges() != null)\r\n        sb.append(\"RecurringCharges: \").append(getRecurringCharges()).append(\",\");\r\n    if (getReservationARN() != null)\r\n        sb.append(\"ReservationARN: \").append(getReservationARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssignPrivateIpAddressesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowReassignment() != null)\r\n        sb.append(\"AllowReassignment: \").append(getAllowReassignment()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getPrivateIpAddresses() != null)\r\n        sb.append(\"PrivateIpAddresses: \").append(getPrivateIpAddresses()).append(\",\");\r\n    if (getSecondaryPrivateIpAddressCount() != null)\r\n        sb.append(\"SecondaryPrivateIpAddressCount: \").append(getSecondaryPrivateIpAddressCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.S3ClientCache.cacheClient",
	"Comment": "returns a new client with region configured toregion.also updates the clientsbyregion map by associating thenew client with region.",
	"Method": "AmazonS3 cacheClient(String region){\r\n    if (awscredentialsProvider == null) {\r\n        throw new IllegalArgumentException(\"No credentials provider found to connect to S3\");\r\n    }\r\n    AmazonS3 client = new AmazonS3Client(awscredentialsProvider);\r\n    client.setRegion(RegionUtils.getRegion(region));\r\n    clientsByRegion.put(region, client);\r\n    return client;\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.StopTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTask() != null)\r\n        sb.append(\"Task: \").append(getTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.batchGetItemAsync",
	"Comment": "simplified method form for invoking the batchgetitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync(BatchGetItemRequest request,java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync,BatchGetItemRequest request,com.amazonaws.handlers.AsyncHandler<BatchGetItemRequest, BatchGetItemResult> asyncHandler,java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync,java.util.Map<String, KeysAndAttributes> requestItems,String returnConsumedCapacity,java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync,java.util.Map<String, KeysAndAttributes> requestItems,String returnConsumedCapacity,com.amazonaws.handlers.AsyncHandler<BatchGetItemRequest, BatchGetItemResult> asyncHandler,java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync,java.util.Map<String, KeysAndAttributes> requestItems,java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync,java.util.Map<String, KeysAndAttributes> requestItems,com.amazonaws.handlers.AsyncHandler<BatchGetItemRequest, BatchGetItemResult> asyncHandler){\r\n    return batchGetItemAsync(new BatchGetItemRequest().withRequestItems(requestItems), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GetRecordsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecords() != null)\r\n        sb.append(\"Records: \").append(getRecords()).append(\",\");\r\n    if (getNextShardIterator() != null)\r\n        sb.append(\"NextShardIterator: \").append(getNextShardIterator());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createVpnConnectionRoute",
	"Comment": "creates a static route associated with a vpn connection between an existing virtual private gateway and a vpncustomer gateway. the static route allows traffic to be routed from the virtual private gateway to the vpncustomer gateway.for more information about vpn connections, see aws managed vpn connections in theamazon virtual private cloud user guide.",
	"Method": "CreateVpnConnectionRouteResult createVpnConnectionRoute(CreateVpnConnectionRouteRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateVpnConnectionRoute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DeleteLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOwnerIds() != null)\r\n        sb.append(\"OwnerIds: \").append(getOwnerIds()).append(\",\");\r\n    if (getRestorableByUserIds() != null)\r\n        sb.append(\"RestorableByUserIds: \").append(getRestorableByUserIds()).append(\",\");\r\n    if (getSnapshotIds() != null)\r\n        sb.append(\"SnapshotIds: \").append(getSnapshotIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Expected.le",
	"Comment": "creates and returns a condition of the range key being less than or equalto the given value.",
	"Method": "Expected le(Object val){\r\n    return _withComparisonOperator(ComparisonOperator.LE)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateIamInstanceProfileSpecificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.AmazonElasticFileSystemClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withShort",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withShort(String attrName,short val){\r\n    checkInvalidAttrName(attrName);\r\n    return withNumber(attrName, Short.valueOf(val));\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.NetworkInterface.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachmentId() != null)\r\n        sb.append(\"AttachmentId: \").append(getAttachmentId()).append(\",\");\r\n    if (getPrivateIpv4Address() != null)\r\n        sb.append(\"PrivateIpv4Address: \").append(getPrivateIpv4Address()).append(\",\");\r\n    if (getIpv6Address() != null)\r\n        sb.append(\"Ipv6Address: \").append(getIpv6Address());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstancesBlockDeviceMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getEbs() != null)\r\n        sb.append(\"Ebs: \").append(getEbs()).append(\",\");\r\n    if (getNoDevice() != null)\r\n        sb.append(\"NoDevice: \").append(getNoDevice()).append(\",\");\r\n    if (getVirtualName() != null)\r\n        sb.append(\"VirtualName: \").append(getVirtualName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeListenerCertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyIdentityIdFormatRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipalArn() != null)\r\n        sb.append(\"PrincipalArn: \").append(getPrincipalArn()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getUseLongIds() != null)\r\n        sb.append(\"UseLongIds: \").append(getUseLongIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheck() != null)\r\n        sb.append(\"HealthCheck: \").append(getHealthCheck());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelExportTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withBinarySet",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withBinarySet(String attrName,Set<byte[]> val,Item withBinarySet,String attrName,byte[] vals,Item withBinarySet,String attrName,ByteBuffer vals){\r\n    checkInvalidAttribute(attrName, vals);\r\n    Set<byte[]> set = new LinkedHashSet<byte[]>(vals.length);\r\n    for (ByteBuffer bb : vals) set.add(copyBytesFrom(bb));\r\n    if (set.size() != vals.length)\r\n        throw new IllegalArgumentException(DUPLICATE_VALUES_FOUND_IN_INPUT);\r\n    attributes.put(attrName, set);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CapacityReservationSpecificationResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityReservationPreference() != null)\r\n        sb.append(\"CapacityReservationPreference: \").append(getCapacityReservationPreference()).append(\",\");\r\n    if (getCapacityReservationTarget() != null)\r\n        sb.append(\"CapacityReservationTarget: \").append(getCapacityReservationTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportVolumeTaskDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getBytesConverted() != null)\r\n        sb.append(\"BytesConverted: \").append(getBytesConverted()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getVolume() != null)\r\n        sb.append(\"Volume: \").append(getVolume());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.VpcConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeInstancesAsync",
	"Comment": "simplified method form for invoking the describeinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeInstancesResult> describeInstancesAsync(DescribeInstancesRequest request,java.util.concurrent.Future<DescribeInstancesResult> describeInstancesAsync,DescribeInstancesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeInstancesRequest, DescribeInstancesResult> asyncHandler,java.util.concurrent.Future<DescribeInstancesResult> describeInstancesAsync,java.util.concurrent.Future<DescribeInstancesResult> describeInstancesAsync,com.amazonaws.handlers.AsyncHandler<DescribeInstancesRequest, DescribeInstancesResult> asyncHandler){\r\n    return describeInstancesAsync(new DescribeInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.StreamRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApproximateCreationDateTime() != null)\r\n        sb.append(\"ApproximateCreationDateTime: \").append(getApproximateCreationDateTime()).append(\",\");\r\n    if (getKeys() != null)\r\n        sb.append(\"Keys: \").append(getKeys()).append(\",\");\r\n    if (getNewImage() != null)\r\n        sb.append(\"NewImage: \").append(getNewImage()).append(\",\");\r\n    if (getOldImage() != null)\r\n        sb.append(\"OldImage: \").append(getOldImage()).append(\",\");\r\n    if (getSequenceNumber() != null)\r\n        sb.append(\"SequenceNumber: \").append(getSequenceNumber()).append(\",\");\r\n    if (getSizeBytes() != null)\r\n        sb.append(\"SizeBytes: \").append(getSizeBytes()).append(\",\");\r\n    if (getStreamViewType() != null)\r\n        sb.append(\"StreamViewType: \").append(getStreamViewType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.deleteService",
	"Comment": "deletes a specified service within a cluster. you can delete a service if you have no running tasks in it and thedesired task count is zero. if the service is actively maintaining tasks, you cannot delete it, and you mustupdate the service to a desired task count of zero. for more information, see updateservice.when you delete a service, if there are still running tasks that require cleanup, the service status moves fromactive to draining, and the service is no longer visible in the console or in thelistservices api operation. after the tasks have stopped, then the service status moves fromdraining to inactive. services in the draining or inactivestatus can still be viewed with the describeservices api operation. however, in the future,inactive services may be cleaned up and purged from amazon ecs record keeping, anddescribeservices calls on those services return a servicenotfoundexception error. if you attempt to create a new service with the same name as an existing service in either active ordraining status, you receive an error.",
	"Method": "DeleteServiceResult deleteService(DeleteServiceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteService(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.CreateRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerPolicyTypesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyTypeDescriptions() != null)\r\n        sb.append(\"PolicyTypeDescriptions: \").append(getPolicyTypeDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.AvailabilityZone.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.IamInstanceProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ActiveInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getSpotInstanceRequestId() != null)\r\n        sb.append(\"SpotInstanceRequestId: \").append(getSpotInstanceRequestId()).append(\",\");\r\n    if (getInstanceHealth() != null)\r\n        sb.append(\"InstanceHealth: \").append(getInstanceHealth());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DeleteRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleArn() != null)\r\n        sb.append(\"RuleArn: \").append(getRuleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonec2async using the current builder configuration.",
	"Method": "AmazonEC2Async build(AwsAsyncClientParams params){\r\n    return new AmazonEC2AsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeReservedInstancesOfferingsAsync",
	"Comment": "simplified method form for invoking the describereservedinstancesofferings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedInstancesOfferingsResult> describeReservedInstancesOfferingsAsync(DescribeReservedInstancesOfferingsRequest request,java.util.concurrent.Future<DescribeReservedInstancesOfferingsResult> describeReservedInstancesOfferingsAsync,DescribeReservedInstancesOfferingsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesOfferingsRequest, DescribeReservedInstancesOfferingsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedInstancesOfferingsResult> describeReservedInstancesOfferingsAsync,java.util.concurrent.Future<DescribeReservedInstancesOfferingsResult> describeReservedInstancesOfferingsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesOfferingsRequest, DescribeReservedInstancesOfferingsResult> asyncHandler){\r\n    return describeReservedInstancesOfferingsAsync(new DescribeReservedInstancesOfferingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheSubnetGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSubnetGroupName() != null)\r\n        sb.append(\"CacheSubnetGroupName: \").append(getCacheSubnetGroupName()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeFleetInstances",
	"Comment": "describes the running instances for the specified ec2 fleet.",
	"Method": "DescribeFleetInstancesResult describeFleetInstances(DescribeFleetInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeFleetInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.acceptTransitGatewayVpcAttachment",
	"Comment": "accepts a request to attach a vpc to a transit gateway.the vpc attachment must be in the pendingacceptance state. usedescribetransitgatewayvpcattachments to view your pending vpc attachment requests. userejecttransitgatewayvpcattachment to reject a vpc attachment request.",
	"Method": "AcceptTransitGatewayVpcAttachmentResult acceptTransitGatewayVpcAttachment(AcceptTransitGatewayVpcAttachmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAcceptTransitGatewayVpcAttachment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.SubstitutionContext.valueTokenFor",
	"Comment": "returns the value token for the given value, creating a new token asnecessary.",
	"Method": "String valueTokenFor(Object value){\r\n    Integer token = valueToToken.get(value);\r\n    if (token == null) {\r\n        token = valueToToken.size();\r\n        valueToToken.put(value, token);\r\n    }\r\n    return \":\" + token;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelledSpotInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpotInstanceRequestId() != null)\r\n        sb.append(\"SpotInstanceRequestId: \").append(getSpotInstanceRequestId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient.describeLoadBalancersAsync",
	"Comment": "simplified method form for invoking the describeloadbalancers operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeLoadBalancersResult> describeLoadBalancersAsync(DescribeLoadBalancersRequest request,java.util.concurrent.Future<DescribeLoadBalancersResult> describeLoadBalancersAsync,DescribeLoadBalancersRequest request,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancersRequest, DescribeLoadBalancersResult> asyncHandler,java.util.concurrent.Future<DescribeLoadBalancersResult> describeLoadBalancersAsync,java.util.concurrent.Future<DescribeLoadBalancersResult> describeLoadBalancersAsync,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancersRequest, DescribeLoadBalancersResult> asyncHandler){\r\n    return describeLoadBalancersAsync(new DescribeLoadBalancersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Image.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getImageLocation() != null)\r\n        sb.append(\"ImageLocation: \").append(getImageLocation()).append(\",\");\r\n    if (getImageType() != null)\r\n        sb.append(\"ImageType: \").append(getImageType()).append(\",\");\r\n    if (getPublic() != null)\r\n        sb.append(\"Public: \").append(getPublic()).append(\",\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes()).append(\",\");\r\n    if (getRamdiskId() != null)\r\n        sb.append(\"RamdiskId: \").append(getRamdiskId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEnaSupport() != null)\r\n        sb.append(\"EnaSupport: \").append(getEnaSupport()).append(\",\");\r\n    if (getHypervisor() != null)\r\n        sb.append(\"Hypervisor: \").append(getHypervisor()).append(\",\");\r\n    if (getImageOwnerAlias() != null)\r\n        sb.append(\"ImageOwnerAlias: \").append(getImageOwnerAlias()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRootDeviceName() != null)\r\n        sb.append(\"RootDeviceName: \").append(getRootDeviceName()).append(\",\");\r\n    if (getRootDeviceType() != null)\r\n        sb.append(\"RootDeviceType: \").append(getRootDeviceType()).append(\",\");\r\n    if (getSriovNetSupport() != null)\r\n        sb.append(\"SriovNetSupport: \").append(getSriovNetSupport()).append(\",\");\r\n    if (getStateReason() != null)\r\n        sb.append(\"StateReason: \").append(getStateReason()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVirtualizationType() != null)\r\n        sb.append(\"VirtualizationType: \").append(getVirtualizationType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateSpotDatafeedSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonecsasync using the current builder configuration.",
	"Method": "AmazonECSAsync build(AwsAsyncClientParams params){\r\n    return new AmazonECSAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.ImageDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getImageDigest() != null)\r\n        sb.append(\"ImageDigest: \").append(getImageDigest()).append(\",\");\r\n    if (getImageTags() != null)\r\n        sb.append(\"ImageTags: \").append(getImageTags()).append(\",\");\r\n    if (getImageSizeInBytes() != null)\r\n        sb.append(\"ImageSizeInBytes: \").append(getImageSizeInBytes()).append(\",\");\r\n    if (getImagePushedAt() != null)\r\n        sb.append(\"ImagePushedAt: \").append(getImagePushedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeTransitGatewayRouteTablesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableIds() != null)\r\n        sb.append(\"TransitGatewayRouteTableIds: \").append(getTransitGatewayRouteTableIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpnConnectionRouteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock()).append(\",\");\r\n    if (getVpnConnectionId() != null)\r\n        sb.append(\"VpnConnectionId: \").append(getVpnConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeAccountLimitsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyNetworkInterfaceAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachment() != null)\r\n        sb.append(\"Attachment: \").append(getAttachment()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getSourceDestCheck() != null)\r\n        sb.append(\"SourceDestCheck: \").append(getSourceDestCheck());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.PrimaryKey.addComponent",
	"Comment": "add a key component to this primary key.note adding a key component with the same name as that of an existingone would overwrite and become a single key component instead of two.",
	"Method": "PrimaryKey addComponent(String keyAttributeName,Object keyAttributeValue){\r\n    components.put(keyAttributeName, new KeyAttribute(keyAttributeName, keyAttributeValue));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.importVolume",
	"Comment": "creates an import volume task using metadata from the specified disk image.for more information, see importing disks to amazon ebs.for information about the import manifest referenced by this api action, see vm import manifest.",
	"Method": "ImportVolumeResult importVolume(ImportVolumeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeImportVolume(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DeleteLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createVpnGateway",
	"Comment": "creates a virtual private gateway. a virtual private gateway is the endpoint on the vpc side of your vpnconnection. you can create a virtual private gateway before creating the vpc itself.for more information about virtual private gateways, see aws managed vpn connections in theamazon virtual private cloud user guide.",
	"Method": "CreateVpnGatewayResult createVpnGateway(CreateVpnGatewayRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateVpnGateway(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceRouteTableAssociationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId()).append(\",\");\r\n    if (getRouteTableId() != null)\r\n        sb.append(\"RouteTableId: \").append(getRouteTableId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AvailabilityZone.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getMessages() != null)\r\n        sb.append(\"Messages: \").append(getMessages()).append(\",\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName()).append(\",\");\r\n    if (getZoneName() != null)\r\n        sb.append(\"ZoneName: \").append(getZoneName()).append(\",\");\r\n    if (getZoneId() != null)\r\n        sb.append(\"ZoneId: \").append(getZoneId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.GetLifecyclePolicyPreviewResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getLifecyclePolicyText() != null)\r\n        sb.append(\"LifecyclePolicyText: \").append(getLifecyclePolicyText()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getPreviewResults() != null)\r\n        sb.append(\"PreviewResults: \").append(getPreviewResults()).append(\",\");\r\n    if (getSummary() != null)\r\n        sb.append(\"Summary: \").append(getSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeHostsAsync",
	"Comment": "simplified method form for invoking the describehosts operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeHostsResult> describeHostsAsync(DescribeHostsRequest request,java.util.concurrent.Future<DescribeHostsResult> describeHostsAsync,DescribeHostsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeHostsRequest, DescribeHostsResult> asyncHandler,java.util.concurrent.Future<DescribeHostsResult> describeHostsAsync,java.util.concurrent.Future<DescribeHostsResult> describeHostsAsync,com.amazonaws.handlers.AsyncHandler<DescribeHostsRequest, DescribeHostsResult> asyncHandler){\r\n    return describeHostsAsync(new DescribeHostsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResetNetworkInterfaceAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointServiceConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceConfigurations() != null)\r\n        sb.append(\"ServiceConfigurations: \").append(getServiceConfigurations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.CreateMountTargetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpnConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpnConnectionId() != null)\r\n        sb.append(\"VpnConnectionId: \").append(getVpnConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withBigDecimalSet",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withBigDecimalSet(String attrName,Set<BigDecimal> val,Item withBigDecimalSet,String attrName,BigDecimal vals){\r\n    checkInvalidAttribute(attrName, vals);\r\n    Set<BigDecimal> set = new LinkedHashSet<BigDecimal>(Arrays.asList(vals));\r\n    if (set.size() != vals.length)\r\n        throw new IllegalArgumentException(DUPLICATE_VALUES_FOUND_IN_INPUT);\r\n    attributes.put(attrName, set);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EnableVpcClassicLinkDnsSupportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.putItemAsync",
	"Comment": "simplified method form for invoking the putitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<PutItemResult> putItemAsync(PutItemRequest request,java.util.concurrent.Future<PutItemResult> putItemAsync,PutItemRequest request,com.amazonaws.handlers.AsyncHandler<PutItemRequest, PutItemResult> asyncHandler,java.util.concurrent.Future<PutItemResult> putItemAsync,String tableName,java.util.Map<String, AttributeValue> item,java.util.concurrent.Future<PutItemResult> putItemAsync,String tableName,java.util.Map<String, AttributeValue> item,com.amazonaws.handlers.AsyncHandler<PutItemRequest, PutItemResult> asyncHandler,java.util.concurrent.Future<PutItemResult> putItemAsync,String tableName,java.util.Map<String, AttributeValue> item,String returnValues,java.util.concurrent.Future<PutItemResult> putItemAsync,String tableName,java.util.Map<String, AttributeValue> item,String returnValues,com.amazonaws.handlers.AsyncHandler<PutItemRequest, PutItemResult> asyncHandler){\r\n    return putItemAsync(new PutItemRequest().withTableName(tableName).withItem(item).withReturnValues(returnValues), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEnvironmentResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.TableToReload.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaName() != null)\r\n        sb.append(\"SchemaName: \").append(getSchemaName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.getFloat",
	"Comment": "returns the value of the specified attribute in the current item as afloat.",
	"Method": "float getFloat(String attrName){\r\n    BigDecimal bd = getNumber(attrName);\r\n    if (bd == null)\r\n        throw new NumberFormatException(\"value of \" + attrName + \" is null\");\r\n    return bd.floatValue();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.getConditionExpression",
	"Comment": "a condition that must be satisfied in order for a conditional deleteitemto succeed.",
	"Method": "String getConditionExpression(){\r\n    return conditionExpression;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeSpotInstanceRequestsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeSpotInstanceRequestsResult apply(DescribeSpotInstanceRequestsRequest describeSpotInstanceRequestsRequest){\r\n    return client.describeSpotInstanceRequests(describeSpotInstanceRequestsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.vpcPeeringConnectionDeleted",
	"Comment": "builds a vpcpeeringconnectiondeleted waiter by using custom parameters waiterparameters and other parametersdefined in the waiters specification, and then polls until it determines whether the resource entered the desiredstate or not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVpcPeeringConnectionsRequest> vpcPeeringConnectionDeleted(){\r\n    return new WaiterBuilder<DescribeVpcPeeringConnectionsRequest, DescribeVpcPeeringConnectionsResult>().withSdkFunction(new DescribeVpcPeeringConnectionsFunction(client)).withAcceptors(new VpcPeeringConnectionDeleted.IsDeletedMatcher(), new VpcPeeringConnectionDeleted.IsInvalidVpcPeeringConnectionIDNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateNetworkAclRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeSecurityGroupsAsync",
	"Comment": "simplified method form for invoking the describesecuritygroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSecurityGroupsResult> describeSecurityGroupsAsync(DescribeSecurityGroupsRequest request,java.util.concurrent.Future<DescribeSecurityGroupsResult> describeSecurityGroupsAsync,DescribeSecurityGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSecurityGroupsRequest, DescribeSecurityGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeSecurityGroupsResult> describeSecurityGroupsAsync,java.util.concurrent.Future<DescribeSecurityGroupsResult> describeSecurityGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSecurityGroupsRequest, DescribeSecurityGroupsResult> asyncHandler){\r\n    return describeSecurityGroupsAsync(new DescribeSecurityGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.EngineDefaults.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupFamily() != null)\r\n        sb.append(\"CacheParameterGroupFamily: \").append(getCacheParameterGroupFamily()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCacheNodeTypeSpecificParameters() != null)\r\n        sb.append(\"CacheNodeTypeSpecificParameters: \").append(getCacheNodeTypeSpecificParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateNetworkAclEntryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock()).append(\",\");\r\n    if (getEgress() != null)\r\n        sb.append(\"Egress: \").append(getEgress()).append(\",\");\r\n    if (getIcmpTypeCode() != null)\r\n        sb.append(\"IcmpTypeCode: \").append(getIcmpTypeCode()).append(\",\");\r\n    if (getIpv6CidrBlock() != null)\r\n        sb.append(\"Ipv6CidrBlock: \").append(getIpv6CidrBlock()).append(\",\");\r\n    if (getNetworkAclId() != null)\r\n        sb.append(\"NetworkAclId: \").append(getNetworkAclId()).append(\",\");\r\n    if (getPortRange() != null)\r\n        sb.append(\"PortRange: \").append(getPortRange()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getRuleAction() != null)\r\n        sb.append(\"RuleAction: \").append(getRuleAction()).append(\",\");\r\n    if (getRuleNumber() != null)\r\n        sb.append(\"RuleNumber: \").append(getRuleNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.ScanResultPage.getScannedCount",
	"Comment": "the number of items evaluated, before any scanfilter isapplied. a high scannedcount value with few, or no,count results indicates an inefficient scan operation.for more information, see countand scannedcount in the amazon dynamodb developer guide.if you did not use a filter in the request, thenscannedcount is the same as count.",
	"Method": "Integer getScannedCount(){\r\n    return scannedCount;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RejectVpcEndpointConnectionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnsuccessful() != null)\r\n        sb.append(\"Unsuccessful: \").append(getUnsuccessful());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.describeConfigurationOptions",
	"Comment": "describes the configuration options that are used in a particular configuration template or environment, or thata specified solution stack defines. the description includes the values the options, their default values, and anindication of the required action on a running environment if an option value is changed.",
	"Method": "DescribeConfigurationOptionsResult describeConfigurationOptions(DescribeConfigurationOptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeConfigurationOptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.submitContainerStateChangeAsync",
	"Comment": "simplified method form for invoking the submitcontainerstatechange operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<SubmitContainerStateChangeResult> submitContainerStateChangeAsync(SubmitContainerStateChangeRequest request,java.util.concurrent.Future<SubmitContainerStateChangeResult> submitContainerStateChangeAsync,SubmitContainerStateChangeRequest request,com.amazonaws.handlers.AsyncHandler<SubmitContainerStateChangeRequest, SubmitContainerStateChangeResult> asyncHandler,java.util.concurrent.Future<SubmitContainerStateChangeResult> submitContainerStateChangeAsync,java.util.concurrent.Future<SubmitContainerStateChangeResult> submitContainerStateChangeAsync,com.amazonaws.handlers.AsyncHandler<SubmitContainerStateChangeRequest, SubmitContainerStateChangeResult> asyncHandler){\r\n    return submitContainerStateChangeAsync(new SubmitContainerStateChangeRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEnvironmentHealthResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getHealthStatus() != null)\r\n        sb.append(\"HealthStatus: \").append(getHealthStatus()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getColor() != null)\r\n        sb.append(\"Color: \").append(getColor()).append(\",\");\r\n    if (getCauses() != null)\r\n        sb.append(\"Causes: \").append(getCauses()).append(\",\");\r\n    if (getApplicationMetrics() != null)\r\n        sb.append(\"ApplicationMetrics: \").append(getApplicationMetrics()).append(\",\");\r\n    if (getInstancesHealth() != null)\r\n        sb.append(\"InstancesHealth: \").append(getInstancesHealth()).append(\",\");\r\n    if (getRefreshedAt() != null)\r\n        sb.append(\"RefreshedAt: \").append(getRefreshedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.LocalSecondaryIndexDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getProjection() != null)\r\n        sb.append(\"Projection: \").append(getProjection()).append(\",\");\r\n    if (getIndexSizeBytes() != null)\r\n        sb.append(\"IndexSizeBytes: \").append(getIndexSizeBytes()).append(\",\");\r\n    if (getItemCount() != null)\r\n        sb.append(\"ItemCount: \").append(getItemCount()).append(\",\");\r\n    if (getIndexArn() != null)\r\n        sb.append(\"IndexArn: \").append(getIndexArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeprovisionByoipCidrResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByoipCidr() != null)\r\n        sb.append(\"ByoipCidr: \").append(getByoipCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstancesNetworkInterface.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociatePublicIpAddress() != null)\r\n        sb.append(\"AssociatePublicIpAddress: \").append(getAssociatePublicIpAddress()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDeviceIndex() != null)\r\n        sb.append(\"DeviceIndex: \").append(getDeviceIndex()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getIpv6AddressCount() != null)\r\n        sb.append(\"Ipv6AddressCount: \").append(getIpv6AddressCount()).append(\",\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getPrivateIpAddressConfigs() != null)\r\n        sb.append(\"PrivateIpAddressConfigs: \").append(getPrivateIpAddressConfigs()).append(\",\");\r\n    if (getSecondaryPrivateIpAddressCount() != null)\r\n        sb.append(\"SecondaryPrivateIpAddressCount: \").append(getSecondaryPrivateIpAddressCount()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.MountTargetDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getMountTargetId() != null)\r\n        sb.append(\"MountTargetId: \").append(getMountTargetId()).append(\",\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getLifeCycleState() != null)\r\n        sb.append(\"LifeCycleState: \").append(getLifeCycleState()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SecurityGroupIdentifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.AbstractAmazonElasticFileSystemAsync.describeFileSystemsAsync",
	"Comment": "simplified method form for invoking the describefilesystems operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeFileSystemsResult> describeFileSystemsAsync(DescribeFileSystemsRequest request,java.util.concurrent.Future<DescribeFileSystemsResult> describeFileSystemsAsync,DescribeFileSystemsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest, DescribeFileSystemsResult> asyncHandler,java.util.concurrent.Future<DescribeFileSystemsResult> describeFileSystemsAsync,java.util.concurrent.Future<DescribeFileSystemsResult> describeFileSystemsAsync,com.amazonaws.handlers.AsyncHandler<DescribeFileSystemsRequest, DescribeFileSystemsResult> asyncHandler){\r\n    return describeFileSystemsAsync(new DescribeFileSystemsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.batchWriteItemAsync",
	"Comment": "simplified method form for invoking the batchwriteitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<BatchWriteItemResult> batchWriteItemAsync(BatchWriteItemRequest request,java.util.concurrent.Future<BatchWriteItemResult> batchWriteItemAsync,BatchWriteItemRequest request,com.amazonaws.handlers.AsyncHandler<BatchWriteItemRequest, BatchWriteItemResult> asyncHandler,java.util.concurrent.Future<BatchWriteItemResult> batchWriteItemAsync,java.util.Map<String, java.util.List<WriteRequest>> requestItems,java.util.concurrent.Future<BatchWriteItemResult> batchWriteItemAsync,java.util.Map<String, java.util.List<WriteRequest>> requestItems,com.amazonaws.handlers.AsyncHandler<BatchWriteItemRequest, BatchWriteItemResult> asyncHandler){\r\n    return batchWriteItemAsync(new BatchWriteItemRequest().withRequestItems(requestItems), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deletePlacementGroup",
	"Comment": "deletes the specified placement group. you must terminate all instances in the placement group before you candelete the placement group. for more information, see placement groups in theamazon elastic compute cloud user guide.",
	"Method": "DeletePlacementGroupResult deletePlacementGroup(DeletePlacementGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeletePlacementGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateNetworkInterfaceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterface() != null)\r\n        sb.append(\"NetworkInterface: \").append(getNetworkInterface());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.clearExpressionAttributeNamesEntries",
	"Comment": "removes all the entries added into expressionattributenames.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DynamoDBQueryExpression<T> clearExpressionAttributeNamesEntries(){\r\n    this.expressionAttributeNames = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.KeyValuePair.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.BundleTaskError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResetImageAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ContainerDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getRepositoryCredentials() != null)\r\n        sb.append(\"RepositoryCredentials: \").append(getRepositoryCredentials()).append(\",\");\r\n    if (getCpu() != null)\r\n        sb.append(\"Cpu: \").append(getCpu()).append(\",\");\r\n    if (getMemory() != null)\r\n        sb.append(\"Memory: \").append(getMemory()).append(\",\");\r\n    if (getMemoryReservation() != null)\r\n        sb.append(\"MemoryReservation: \").append(getMemoryReservation()).append(\",\");\r\n    if (getLinks() != null)\r\n        sb.append(\"Links: \").append(getLinks()).append(\",\");\r\n    if (getPortMappings() != null)\r\n        sb.append(\"PortMappings: \").append(getPortMappings()).append(\",\");\r\n    if (getEssential() != null)\r\n        sb.append(\"Essential: \").append(getEssential()).append(\",\");\r\n    if (getEntryPoint() != null)\r\n        sb.append(\"EntryPoint: \").append(getEntryPoint()).append(\",\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getMountPoints() != null)\r\n        sb.append(\"MountPoints: \").append(getMountPoints()).append(\",\");\r\n    if (getVolumesFrom() != null)\r\n        sb.append(\"VolumesFrom: \").append(getVolumesFrom()).append(\",\");\r\n    if (getLinuxParameters() != null)\r\n        sb.append(\"LinuxParameters: \").append(getLinuxParameters()).append(\",\");\r\n    if (getSecrets() != null)\r\n        sb.append(\"Secrets: \").append(getSecrets()).append(\",\");\r\n    if (getHostname() != null)\r\n        sb.append(\"Hostname: \").append(getHostname()).append(\",\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser()).append(\",\");\r\n    if (getWorkingDirectory() != null)\r\n        sb.append(\"WorkingDirectory: \").append(getWorkingDirectory()).append(\",\");\r\n    if (getDisableNetworking() != null)\r\n        sb.append(\"DisableNetworking: \").append(getDisableNetworking()).append(\",\");\r\n    if (getPrivileged() != null)\r\n        sb.append(\"Privileged: \").append(getPrivileged()).append(\",\");\r\n    if (getReadonlyRootFilesystem() != null)\r\n        sb.append(\"ReadonlyRootFilesystem: \").append(getReadonlyRootFilesystem()).append(\",\");\r\n    if (getDnsServers() != null)\r\n        sb.append(\"DnsServers: \").append(getDnsServers()).append(\",\");\r\n    if (getDnsSearchDomains() != null)\r\n        sb.append(\"DnsSearchDomains: \").append(getDnsSearchDomains()).append(\",\");\r\n    if (getExtraHosts() != null)\r\n        sb.append(\"ExtraHosts: \").append(getExtraHosts()).append(\",\");\r\n    if (getDockerSecurityOptions() != null)\r\n        sb.append(\"DockerSecurityOptions: \").append(getDockerSecurityOptions()).append(\",\");\r\n    if (getInteractive() != null)\r\n        sb.append(\"Interactive: \").append(getInteractive()).append(\",\");\r\n    if (getPseudoTerminal() != null)\r\n        sb.append(\"PseudoTerminal: \").append(getPseudoTerminal()).append(\",\");\r\n    if (getDockerLabels() != null)\r\n        sb.append(\"DockerLabels: \").append(getDockerLabels()).append(\",\");\r\n    if (getUlimits() != null)\r\n        sb.append(\"Ulimits: \").append(getUlimits()).append(\",\");\r\n    if (getLogConfiguration() != null)\r\n        sb.append(\"LogConfiguration: \").append(getLogConfiguration()).append(\",\");\r\n    if (getHealthCheck() != null)\r\n        sb.append(\"HealthCheck: \").append(getHealthCheck()).append(\",\");\r\n    if (getSystemControls() != null)\r\n        sb.append(\"SystemControls: \").append(getSystemControls());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.BatchGetImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImages() != null)\r\n        sb.append(\"Images: \").append(getImages()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ReshardingStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSlotMigration() != null)\r\n        sb.append(\"SlotMigration: \").append(getSlotMigration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeKeyPairsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeKeyPairsResult apply(DescribeKeyPairsRequest describeKeyPairsRequest){\r\n    return client.describeKeyPairs(describeKeyPairsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UserData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreatePlacementGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getStrategy() != null)\r\n        sb.append(\"Strategy: \").append(getStrategy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeNetworkAclsAsync",
	"Comment": "simplified method form for invoking the describenetworkacls operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeNetworkAclsResult> describeNetworkAclsAsync(DescribeNetworkAclsRequest request,java.util.concurrent.Future<DescribeNetworkAclsResult> describeNetworkAclsAsync,DescribeNetworkAclsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeNetworkAclsRequest, DescribeNetworkAclsResult> asyncHandler,java.util.concurrent.Future<DescribeNetworkAclsResult> describeNetworkAclsAsync,java.util.concurrent.Future<DescribeNetworkAclsResult> describeNetworkAclsAsync,com.amazonaws.handlers.AsyncHandler<DescribeNetworkAclsRequest, DescribeNetworkAclsResult> asyncHandler){\r\n    return describeNetworkAclsAsync(new DescribeNetworkAclsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Reservation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getRequesterId() != null)\r\n        sb.append(\"RequesterId: \").append(getRequesterId()).append(\",\");\r\n    if (getReservationId() != null)\r\n        sb.append(\"ReservationId: \").append(getReservationId()).append(\",\");\r\n    if (getGroupNames() != null)\r\n        sb.append(\"GroupNames: \").append(getGroupNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeVpnConnectionsAsync",
	"Comment": "simplified method form for invoking the describevpnconnections operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpnConnectionsResult> describeVpnConnectionsAsync(DescribeVpnConnectionsRequest request,java.util.concurrent.Future<DescribeVpnConnectionsResult> describeVpnConnectionsAsync,DescribeVpnConnectionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpnConnectionsRequest, DescribeVpnConnectionsResult> asyncHandler,java.util.concurrent.Future<DescribeVpnConnectionsResult> describeVpnConnectionsAsync,java.util.concurrent.Future<DescribeVpnConnectionsResult> describeVpnConnectionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpnConnectionsRequest, DescribeVpnConnectionsResult> asyncHandler){\r\n    return describeVpnConnectionsAsync(new DescribeVpnConnectionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateRouteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withBinary",
	"Comment": "sets the value of the specified key in the current valuemap to thegiven value.",
	"Method": "ValueMap withBinary(String key,byte[] val){\r\n    super.put(key, val);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.Instance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReportInstanceStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeVpcEndpointServicesAsync",
	"Comment": "simplified method form for invoking the describevpcendpointservices operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpcEndpointServicesResult> describeVpcEndpointServicesAsync(DescribeVpcEndpointServicesRequest request,java.util.concurrent.Future<DescribeVpcEndpointServicesResult> describeVpcEndpointServicesAsync,DescribeVpcEndpointServicesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpcEndpointServicesRequest, DescribeVpcEndpointServicesResult> asyncHandler,java.util.concurrent.Future<DescribeVpcEndpointServicesResult> describeVpcEndpointServicesAsync,java.util.concurrent.Future<DescribeVpcEndpointServicesResult> describeVpcEndpointServicesAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpcEndpointServicesRequest, DescribeVpcEndpointServicesResult> asyncHandler){\r\n    return describeVpcEndpointServicesAsync(new DescribeVpcEndpointServicesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RejectTransitGatewayVpcAttachmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisableTransitGatewayRouteTablePropagationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Ipv6CidrBlock.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6CidrBlock() != null)\r\n        sb.append(\"Ipv6CidrBlock: \").append(getIpv6CidrBlock());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetPasswordDataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getPasswordData() != null)\r\n        sb.append(\"PasswordData: \").append(getPasswordData()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.listTablesAsync",
	"Comment": "simplified method form for invoking the listtables operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTablesResult> listTablesAsync(ListTablesRequest request,java.util.concurrent.Future<ListTablesResult> listTablesAsync,ListTablesRequest request,com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult> asyncHandler,java.util.concurrent.Future<ListTablesResult> listTablesAsync,java.util.concurrent.Future<ListTablesResult> listTablesAsync,com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult> asyncHandler,java.util.concurrent.Future<ListTablesResult> listTablesAsync,String exclusiveStartTableName,java.util.concurrent.Future<ListTablesResult> listTablesAsync,String exclusiveStartTableName,com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult> asyncHandler,java.util.concurrent.Future<ListTablesResult> listTablesAsync,String exclusiveStartTableName,Integer limit,java.util.concurrent.Future<ListTablesResult> listTablesAsync,String exclusiveStartTableName,Integer limit,com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult> asyncHandler,java.util.concurrent.Future<ListTablesResult> listTablesAsync,Integer limit,java.util.concurrent.Future<ListTablesResult> listTablesAsync,Integer limit,com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult> asyncHandler){\r\n    return listTablesAsync(new ListTablesRequest().withLimit(limit), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ByoipCidr.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidr() != null)\r\n        sb.append(\"Cidr: \").append(getCidr()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.Condition.negate",
	"Comment": "returns a new condition based on the negation of the current condition.",
	"Method": "NegationCondition negate(){\r\n    return new NegationCondition(this);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.util.S3UploadPolicy.getPolicyString",
	"Comment": "base64 representation of the serialized policy. use policy generated bythis method for passing to ec2 bundling calls.",
	"Method": "String getPolicyString(){\r\n    return this.policyString;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateInstanceExportTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getExportToS3Task() != null)\r\n        sb.append(\"ExportToS3Task: \").append(getExportToS3Task()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getTargetEnvironment() != null)\r\n        sb.append(\"TargetEnvironment: \").append(getTargetEnvironment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.PutAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GlobalSecondaryIndexDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getProjection() != null)\r\n        sb.append(\"Projection: \").append(getProjection()).append(\",\");\r\n    if (getIndexStatus() != null)\r\n        sb.append(\"IndexStatus: \").append(getIndexStatus()).append(\",\");\r\n    if (getBackfilling() != null)\r\n        sb.append(\"Backfilling: \").append(getBackfilling()).append(\",\");\r\n    if (getProvisionedThroughput() != null)\r\n        sb.append(\"ProvisionedThroughput: \").append(getProvisionedThroughput()).append(\",\");\r\n    if (getIndexSizeBytes() != null)\r\n        sb.append(\"IndexSizeBytes: \").append(getIndexSizeBytes()).append(\",\");\r\n    if (getItemCount() != null)\r\n        sb.append(\"ItemCount: \").append(getItemCount()).append(\",\");\r\n    if (getIndexArn() != null)\r\n        sb.append(\"IndexArn: \").append(getIndexArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeReservedInstances",
	"Comment": "describes one or more of the reserved instances that you purchased.for more information about reserved instances, see reservedinstances in the amazon elastic compute cloud user guide.",
	"Method": "DescribeReservedInstancesResult describeReservedInstances(DescribeReservedInstancesRequest request,DescribeReservedInstancesResult describeReservedInstances){\r\n    return describeReservedInstances(new DescribeReservedInstancesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ComposeEnvironmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironments() != null)\r\n        sb.append(\"Environments: \").append(getEnvironments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.GetRepositoryPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getPolicyText() != null)\r\n        sb.append(\"PolicyText: \").append(getPolicyText());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateHibernationOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigured() != null)\r\n        sb.append(\"Configured: \").append(getConfigured());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateInstanceExportTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportTask() != null)\r\n        sb.append(\"ExportTask: \").append(getExportTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.util.S3UploadPolicy.getPolicySignature",
	"Comment": "policy signature in base64 format use signature generated by this methodfor passing to ec2 bunding calls along with policy.",
	"Method": "String getPolicySignature(){\r\n    return this.policySignature;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeSnapshotsAsync",
	"Comment": "simplified method form for invoking the describesnapshots operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync(DescribeSnapshotsRequest request,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,DescribeSnapshotsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotsRequest, DescribeSnapshotsResult> asyncHandler,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotsRequest, DescribeSnapshotsResult> asyncHandler){\r\n    return describeSnapshotsAsync(new DescribeSnapshotsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DeleteCacheParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.Layer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerDigest() != null)\r\n        sb.append(\"LayerDigest: \").append(getLayerDigest()).append(\",\");\r\n    if (getLayerAvailability() != null)\r\n        sb.append(\"LayerAvailability: \").append(getLayerAvailability()).append(\",\");\r\n    if (getLayerSize() != null)\r\n        sb.append(\"LayerSize: \").append(getLayerSize()).append(\",\");\r\n    if (getMediaType() != null)\r\n        sb.append(\"MediaType: \").append(getMediaType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.HostReservation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getEnd() != null)\r\n        sb.append(\"End: \").append(getEnd()).append(\",\");\r\n    if (getHostIdSet() != null)\r\n        sb.append(\"HostIdSet: \").append(getHostIdSet()).append(\",\");\r\n    if (getHostReservationId() != null)\r\n        sb.append(\"HostReservationId: \").append(getHostReservationId()).append(\",\");\r\n    if (getHourlyPrice() != null)\r\n        sb.append(\"HourlyPrice: \").append(getHourlyPrice()).append(\",\");\r\n    if (getInstanceFamily() != null)\r\n        sb.append(\"InstanceFamily: \").append(getInstanceFamily()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId()).append(\",\");\r\n    if (getPaymentOption() != null)\r\n        sb.append(\"PaymentOption: \").append(getPaymentOption()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getUpfrontPrice() != null)\r\n        sb.append(\"UpfrontPrice: \").append(getUpfrontPrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeTagsAsync",
	"Comment": "simplified method form for invoking the describetags operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync(DescribeTagsRequest request,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,DescribeTagsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest, DescribeTagsResult> asyncHandler,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest, DescribeTagsResult> asyncHandler){\r\n    return describeTagsAsync(new DescribeTagsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.EnvironmentResourceDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getAutoScalingGroups() != null)\r\n        sb.append(\"AutoScalingGroups: \").append(getAutoScalingGroups()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getLaunchConfigurations() != null)\r\n        sb.append(\"LaunchConfigurations: \").append(getLaunchConfigurations()).append(\",\");\r\n    if (getLoadBalancers() != null)\r\n        sb.append(\"LoadBalancers: \").append(getLoadBalancers()).append(\",\");\r\n    if (getTriggers() != null)\r\n        sb.append(\"Triggers: \").append(getTriggers()).append(\",\");\r\n    if (getQueues() != null)\r\n        sb.append(\"Queues: \").append(getQueues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.describeClustersAsync",
	"Comment": "simplified method form for invoking the describeclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync(DescribeClustersRequest request,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,DescribeClustersRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClustersRequest, DescribeClustersResult> asyncHandler,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,com.amazonaws.handlers.AsyncHandler<DescribeClustersRequest, DescribeClustersResult> asyncHandler){\r\n    return describeClustersAsync(new DescribeClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyTransitGatewayVpcAttachmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getAddSubnetIds() != null)\r\n        sb.append(\"AddSubnetIds: \").append(getAddSubnetIds()).append(\",\");\r\n    if (getRemoveSubnetIds() != null)\r\n        sb.append(\"RemoveSubnetIds: \").append(getRemoveSubnetIds()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UnmonitorInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.RepositoryCredentials.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCredentialsParameter() != null)\r\n        sb.append(\"CredentialsParameter: \").append(getCredentialsParameter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcEndpointServiceConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceId() != null)\r\n        sb.append(\"ServiceId: \").append(getServiceId()).append(\",\");\r\n    if (getAcceptanceRequired() != null)\r\n        sb.append(\"AcceptanceRequired: \").append(getAcceptanceRequired()).append(\",\");\r\n    if (getAddNetworkLoadBalancerArns() != null)\r\n        sb.append(\"AddNetworkLoadBalancerArns: \").append(getAddNetworkLoadBalancerArns()).append(\",\");\r\n    if (getRemoveNetworkLoadBalancerArns() != null)\r\n        sb.append(\"RemoveNetworkLoadBalancerArns: \").append(getRemoveNetworkLoadBalancerArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GetRecordsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShardIterator() != null)\r\n        sb.append(\"ShardIterator: \").append(getShardIterator()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.Queue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getURL() != null)\r\n        sb.append(\"URL: \").append(getURL());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DetachLoadBalancerFromSubnetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EnableTransitGatewayRouteTablePropagationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropagation() != null)\r\n        sb.append(\"Propagation: \").append(getPropagation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeNatGatewaysFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeNatGatewaysResult apply(DescribeNatGatewaysRequest describeNatGatewaysRequest){\r\n    return client.describeNatGateways(describeNatGatewaysRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.PutItemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem()).append(\",\");\r\n    if (getExpected() != null)\r\n        sb.append(\"Expected: \").append(getExpected()).append(\",\");\r\n    if (getReturnValues() != null)\r\n        sb.append(\"ReturnValues: \").append(getReturnValues()).append(\",\");\r\n    if (getReturnConsumedCapacity() != null)\r\n        sb.append(\"ReturnConsumedCapacity: \").append(getReturnConsumedCapacity()).append(\",\");\r\n    if (getReturnItemCollectionMetrics() != null)\r\n        sb.append(\"ReturnItemCollectionMetrics: \").append(getReturnItemCollectionMetrics()).append(\",\");\r\n    if (getConditionalOperator() != null)\r\n        sb.append(\"ConditionalOperator: \").append(getConditionalOperator()).append(\",\");\r\n    if (getConditionExpression() != null)\r\n        sb.append(\"ConditionExpression: \").append(getConditionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames()).append(\",\");\r\n    if (getExpressionAttributeValues() != null)\r\n        sb.append(\"ExpressionAttributeValues: \").append(getExpressionAttributeValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotFleetRequestHistoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventType() != null)\r\n        sb.append(\"EventType: \").append(getEventType()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSpotFleetRequestId() != null)\r\n        sb.append(\"SpotFleetRequestId: \").append(getSpotFleetRequestId()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteNetworkInterface",
	"Comment": "deletes the specified network interface. you must detach the network interface before you can delete it.",
	"Method": "DeleteNetworkInterfaceResult deleteNetworkInterface(DeleteNetworkInterfaceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteNetworkInterface(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeKeyPairsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getKeyNames() != null)\r\n        sb.append(\"KeyNames: \").append(getKeyNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.createTable",
	"Comment": "the createtable operation adds a new table to your account. in an aws account, table names must beunique within each region. that is, you can have two tables with same name if you create the tables in differentregions.createtable is an asynchronous operation. upon receiving a createtable request,dynamodb immediately returns a response with a tablestatus of creating. after the tableis created, dynamodb sets the tablestatus to active. you can perform read and writeoperations only on an active table.you can optionally define secondary indexes on the new table, as part of the createtable operation.if you want to create multiple tables with secondary indexes on them, you must create the tables sequentially.only one table with secondary indexes can be in the creating state at any given time.you can use the describetable action to check the table status.",
	"Method": "CreateTableResult createTable(CreateTableRequest request,CreateTableResult createTable,java.util.List<AttributeDefinition> attributeDefinitions,String tableName,java.util.List<KeySchemaElement> keySchema,ProvisionedThroughput provisionedThroughput){\r\n    return createTable(new CreateTableRequest().withAttributeDefinitions(attributeDefinitions).withTableName(tableName).withKeySchema(keySchema).withProvisionedThroughput(provisionedThroughput));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateNetworkInterfacePermissionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInterfacePermission() != null)\r\n        sb.append(\"InterfacePermission: \").append(getInterfacePermission());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FleetLaunchTemplateSpecificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteFleetError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.StreamSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamEnabled() != null)\r\n        sb.append(\"StreamEnabled: \").append(getStreamEnabled()).append(\",\");\r\n    if (getStreamViewType() != null)\r\n        sb.append(\"StreamViewType: \").append(getStreamViewType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeVolumeStatusAsync",
	"Comment": "simplified method form for invoking the describevolumestatus operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVolumeStatusResult> describeVolumeStatusAsync(DescribeVolumeStatusRequest request,java.util.concurrent.Future<DescribeVolumeStatusResult> describeVolumeStatusAsync,DescribeVolumeStatusRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVolumeStatusRequest, DescribeVolumeStatusResult> asyncHandler,java.util.concurrent.Future<DescribeVolumeStatusResult> describeVolumeStatusAsync,java.util.concurrent.Future<DescribeVolumeStatusResult> describeVolumeStatusAsync,com.amazonaws.handlers.AsyncHandler<DescribeVolumeStatusRequest, DescribeVolumeStatusResult> asyncHandler){\r\n    return describeVolumeStatusAsync(new DescribeVolumeStatusRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.ModifyLoadBalancerAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getLoadBalancerAttributes() != null)\r\n        sb.append(\"LoadBalancerAttributes: \").append(getLoadBalancerAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.CreateMountTargetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getMountTargetId() != null)\r\n        sb.append(\"MountTargetId: \").append(getMountTargetId()).append(\",\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getLifeCycleState() != null)\r\n        sb.append(\"LifeCycleState: \").append(getLifeCycleState()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeTransitGatewayVpcAttachmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentIds() != null)\r\n        sb.append(\"TransitGatewayAttachmentIds: \").append(getTransitGatewayAttachmentIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetConsoleScreenshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageData() != null)\r\n        sb.append(\"ImageData: \").append(getImageData()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.waiters.AmazonECSWaiters.servicesStable",
	"Comment": "builds a servicesstable waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeServicesRequest> servicesStable(){\r\n    return new WaiterBuilder<DescribeServicesRequest, DescribeServicesResult>().withSdkFunction(new DescribeServicesFunction(client)).withAcceptors(new ServicesStable.IsMISSINGMatcher(), new ServicesStable.IsDRAININGMatcher(), new ServicesStable.IsINACTIVEMatcher(), new ServicesStable.IsTrueMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConversionTask() != null)\r\n        sb.append(\"ConversionTask: \").append(getConversionTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.getLaunchTemplateData",
	"Comment": "retrieves the configuration data of the specified instance. you can use this data to create a launch template.",
	"Method": "GetLaunchTemplateDataResult getLaunchTemplateData(GetLaunchTemplateDataRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLaunchTemplateData(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssignIpv6AddressesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6AddressCount() != null)\r\n        sb.append(\"Ipv6AddressCount: \").append(getIpv6AddressCount()).append(\",\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DiscoverPollEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getTelemetryEndpoint() != null)\r\n        sb.append(\"TelemetryEndpoint: \").append(getTelemetryEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TransactGetItemsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransactItems() != null)\r\n        sb.append(\"TransactItems: \").append(getTransactItems()).append(\",\");\r\n    if (getReturnConsumedCapacity() != null)\r\n        sb.append(\"ReturnConsumedCapacity: \").append(getReturnConsumedCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotFleetRequestHistoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHistoryRecords() != null)\r\n        sb.append(\"HistoryRecords: \").append(getHistoryRecords()).append(\",\");\r\n    if (getLastEvaluatedTime() != null)\r\n        sb.append(\"LastEvaluatedTime: \").append(getLastEvaluatedTime()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSpotFleetRequestId() != null)\r\n        sb.append(\"SpotFleetRequestId: \").append(getSpotFleetRequestId()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.AmazonEKSClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.Deployment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getDeploymentTime() != null)\r\n        sb.append(\"DeploymentTime: \").append(getDeploymentTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RevokeSecurityGroupIngressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrIp() != null)\r\n        sb.append(\"CidrIp: \").append(getCidrIp()).append(\",\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getIpPermissions() != null)\r\n        sb.append(\"IpPermissions: \").append(getIpPermissions()).append(\",\");\r\n    if (getIpProtocol() != null)\r\n        sb.append(\"IpProtocol: \").append(getIpProtocol()).append(\",\");\r\n    if (getSourceSecurityGroupName() != null)\r\n        sb.append(\"SourceSecurityGroupName: \").append(getSourceSecurityGroupName()).append(\",\");\r\n    if (getSourceSecurityGroupOwnerId() != null)\r\n        sb.append(\"SourceSecurityGroupOwnerId: \").append(getSourceSecurityGroupOwnerId()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.MoveAddressToVpcResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationId() != null)\r\n        sb.append(\"AllocationId: \").append(getAllocationId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreatePlatformVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatformName() != null)\r\n        sb.append(\"PlatformName: \").append(getPlatformName()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getPlatformDefinitionBundle() != null)\r\n        sb.append(\"PlatformDefinitionBundle: \").append(getPlatformDefinitionBundle()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeTypeDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeType() != null)\r\n        sb.append(\"AttributeType: \").append(getAttributeType()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getCardinality() != null)\r\n        sb.append(\"Cardinality: \").append(getCardinality());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.startLifecyclePolicyPreview",
	"Comment": "starts a preview of the specified lifecycle policy. this allows you to see the results before creating thelifecycle policy.",
	"Method": "StartLifecyclePolicyPreviewResult startLifecyclePolicyPreview(StartLifecyclePolicyPreviewRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartLifecyclePolicyPreview(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.AwsVpcConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getAssignPublicIp() != null)\r\n        sb.append(\"AssignPublicIp: \").append(getAssignPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeSnapshotsAsync",
	"Comment": "simplified method form for invoking the describesnapshots operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync(DescribeSnapshotsRequest request,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,DescribeSnapshotsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotsRequest, DescribeSnapshotsResult> asyncHandler,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotsRequest, DescribeSnapshotsResult> asyncHandler){\r\n    return describeSnapshotsAsync(new DescribeSnapshotsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.GetRepositoryPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeVpcClassicLinkAsync",
	"Comment": "simplified method form for invoking the describevpcclassiclink operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpcClassicLinkResult> describeVpcClassicLinkAsync(DescribeVpcClassicLinkRequest request,java.util.concurrent.Future<DescribeVpcClassicLinkResult> describeVpcClassicLinkAsync,DescribeVpcClassicLinkRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpcClassicLinkRequest, DescribeVpcClassicLinkResult> asyncHandler,java.util.concurrent.Future<DescribeVpcClassicLinkResult> describeVpcClassicLinkAsync,java.util.concurrent.Future<DescribeVpcClassicLinkResult> describeVpcClassicLinkAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpcClassicLinkRequest, DescribeVpcClassicLinkResult> asyncHandler){\r\n    return describeVpcClassicLinkAsync(new DescribeVpcClassicLinkRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.getLifecyclePolicyPreview",
	"Comment": "retrieves the results of the specified lifecycle policy preview request.",
	"Method": "GetLifecyclePolicyPreviewResult getLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLifecyclePolicyPreview(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DeleteConfigurationTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.CreateLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getSubnetMappings() != null)\r\n        sb.append(\"SubnetMappings: \").append(getSubnetMappings()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getScheme() != null)\r\n        sb.append(\"Scheme: \").append(getScheme()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getIpAddressType() != null)\r\n        sb.append(\"IpAddressType: \").append(getIpAddressType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeRouteTablesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getRouteTableIds() != null)\r\n        sb.append(\"RouteTableIds: \").append(getRouteTableIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.AddTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkAsyncClient.createStorageLocationAsync",
	"Comment": "simplified method form for invoking the createstoragelocation operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateStorageLocationResult> createStorageLocationAsync(CreateStorageLocationRequest request,java.util.concurrent.Future<CreateStorageLocationResult> createStorageLocationAsync,CreateStorageLocationRequest request,com.amazonaws.handlers.AsyncHandler<CreateStorageLocationRequest, CreateStorageLocationResult> asyncHandler,java.util.concurrent.Future<CreateStorageLocationResult> createStorageLocationAsync,java.util.concurrent.Future<CreateStorageLocationResult> createStorageLocationAsync,com.amazonaws.handlers.AsyncHandler<CreateStorageLocationRequest, CreateStorageLocationResult> asyncHandler){\r\n    return createStorageLocationAsync(new CreateStorageLocationRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PurchaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getPurchaseToken() != null)\r\n        sb.append(\"PurchaseToken: \").append(getPurchaseToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EbsInstanceBlockDevice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachTime() != null)\r\n        sb.append(\"AttachTime: \").append(getAttachTime()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createPlacementGroup",
	"Comment": "creates a placement group in which to launch instances. the strategy of the placement group determines how theinstances are organized within the group.a cluster placement group is a logical grouping of instances within a single availability zone thatbenefit from low network latency, high network throughput. a spread placement group places instanceson distinct hardware.for more information, see placement groups in theamazon elastic compute cloud user guide.",
	"Method": "CreatePlacementGroupResult createPlacementGroup(CreatePlacementGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreatePlacementGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.withExpressionAttributeNames",
	"Comment": "one or more substitution variables for simplifying complex expressions.",
	"Method": "DynamoDBScanExpression withExpressionAttributeNames(java.util.Map<String, String> expressionAttributeNames){\r\n    setExpressionAttributeNames(expressionAttributeNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.deleteRepository",
	"Comment": "deletes an existing image repository. if a repository contains images, you must use the force optionto delete it.",
	"Method": "DeleteRepositoryResult deleteRepository(DeleteRepositoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteRepository(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.describeTableAsync",
	"Comment": "simplified method form for invoking the describetable operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTableResult> describeTableAsync(DescribeTableRequest request,java.util.concurrent.Future<DescribeTableResult> describeTableAsync,DescribeTableRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTableRequest, DescribeTableResult> asyncHandler,java.util.concurrent.Future<DescribeTableResult> describeTableAsync,String tableName,java.util.concurrent.Future<DescribeTableResult> describeTableAsync,String tableName,com.amazonaws.handlers.AsyncHandler<DescribeTableRequest, DescribeTableResult> asyncHandler){\r\n    return describeTableAsync(new DescribeTableRequest().withTableName(tableName), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withBoolean",
	"Comment": "sets the value of the specified key in the current valuemap to theboolean value.",
	"Method": "ValueMap withBoolean(String key,boolean val){\r\n    super.put(key, Boolean.valueOf(val));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteFleetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccessfulFleetDeletions() != null)\r\n        sb.append(\"SuccessfulFleetDeletions: \").append(getSuccessfulFleetDeletions()).append(\",\");\r\n    if (getUnsuccessfulFleetDeletions() != null)\r\n        sb.append(\"UnsuccessfulFleetDeletions: \").append(getUnsuccessfulFleetDeletions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.revokeSecurityGroupIngressAsync",
	"Comment": "simplified method form for invoking the revokesecuritygroupingress operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<RevokeSecurityGroupIngressResult> revokeSecurityGroupIngressAsync(RevokeSecurityGroupIngressRequest request,java.util.concurrent.Future<RevokeSecurityGroupIngressResult> revokeSecurityGroupIngressAsync,RevokeSecurityGroupIngressRequest request,com.amazonaws.handlers.AsyncHandler<RevokeSecurityGroupIngressRequest, RevokeSecurityGroupIngressResult> asyncHandler,java.util.concurrent.Future<RevokeSecurityGroupIngressResult> revokeSecurityGroupIngressAsync,java.util.concurrent.Future<RevokeSecurityGroupIngressResult> revokeSecurityGroupIngressAsync,com.amazonaws.handlers.AsyncHandler<RevokeSecurityGroupIngressRequest, RevokeSecurityGroupIngressResult> asyncHandler){\r\n    return revokeSecurityGroupIngressAsync(new RevokeSecurityGroupIngressRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.updateItemAsync",
	"Comment": "simplified method form for invoking the updateitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<UpdateItemResult> updateItemAsync(UpdateItemRequest request,java.util.concurrent.Future<UpdateItemResult> updateItemAsync,UpdateItemRequest request,com.amazonaws.handlers.AsyncHandler<UpdateItemRequest, UpdateItemResult> asyncHandler,java.util.concurrent.Future<UpdateItemResult> updateItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.Map<String, AttributeValueUpdate> attributeUpdates,java.util.concurrent.Future<UpdateItemResult> updateItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.Map<String, AttributeValueUpdate> attributeUpdates,com.amazonaws.handlers.AsyncHandler<UpdateItemRequest, UpdateItemResult> asyncHandler,java.util.concurrent.Future<UpdateItemResult> updateItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.Map<String, AttributeValueUpdate> attributeUpdates,String returnValues,java.util.concurrent.Future<UpdateItemResult> updateItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.Map<String, AttributeValueUpdate> attributeUpdates,String returnValues,com.amazonaws.handlers.AsyncHandler<UpdateItemRequest, UpdateItemResult> asyncHandler){\r\n    return updateItemAsync(new UpdateItemRequest().withTableName(tableName).withKey(key).withAttributeUpdates(attributeUpdates).withReturnValues(returnValues), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.unmonitorInstances",
	"Comment": "disables detailed monitoring for a running instance. for more information, see monitoring your instances andvolumes in the amazon elastic compute cloud user guide.",
	"Method": "UnmonitorInstancesResult unmonitorInstances(UnmonitorInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUnmonitorInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteLaunchTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplate() != null)\r\n        sb.append(\"LaunchTemplate: \").append(getLaunchTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ProvisionedThroughputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLastIncreaseDateTime() != null)\r\n        sb.append(\"LastIncreaseDateTime: \").append(getLastIncreaseDateTime()).append(\",\");\r\n    if (getLastDecreaseDateTime() != null)\r\n        sb.append(\"LastDecreaseDateTime: \").append(getLastDecreaseDateTime()).append(\",\");\r\n    if (getNumberOfDecreasesToday() != null)\r\n        sb.append(\"NumberOfDecreasesToday: \").append(getNumberOfDecreasesToday()).append(\",\");\r\n    if (getReadCapacityUnits() != null)\r\n        sb.append(\"ReadCapacityUnits: \").append(getReadCapacityUnits()).append(\",\");\r\n    if (getWriteCapacityUnits() != null)\r\n        sb.append(\"WriteCapacityUnits: \").append(getWriteCapacityUnits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.LoadBalancerState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ConfigurationOptionDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getChangeSeverity() != null)\r\n        sb.append(\"ChangeSeverity: \").append(getChangeSeverity()).append(\",\");\r\n    if (getUserDefined() != null)\r\n        sb.append(\"UserDefined: \").append(getUserDefined()).append(\",\");\r\n    if (getValueType() != null)\r\n        sb.append(\"ValueType: \").append(getValueType()).append(\",\");\r\n    if (getValueOptions() != null)\r\n        sb.append(\"ValueOptions: \").append(getValueOptions()).append(\",\");\r\n    if (getMinValue() != null)\r\n        sb.append(\"MinValue: \").append(getMinValue()).append(\",\");\r\n    if (getMaxValue() != null)\r\n        sb.append(\"MaxValue: \").append(getMaxValue()).append(\",\");\r\n    if (getMaxLength() != null)\r\n        sb.append(\"MaxLength: \").append(getMaxLength()).append(\",\");\r\n    if (getRegex() != null)\r\n        sb.append(\"Regex: \").append(getRegex());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteNetworkInterfacePermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfacePermissionId() != null)\r\n        sb.append(\"NetworkInterfacePermissionId: \").append(getNetworkInterfacePermissionId()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.RegisterContainerInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerInstance() != null)\r\n        sb.append(\"ContainerInstance: \").append(getContainerInstance());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GlobalSecondaryIndexInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getProjection() != null)\r\n        sb.append(\"Projection: \").append(getProjection()).append(\",\");\r\n    if (getProvisionedThroughput() != null)\r\n        sb.append(\"ProvisionedThroughput: \").append(getProvisionedThroughput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.RestoreTableToPointInTimeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceTableName() != null)\r\n        sb.append(\"SourceTableName: \").append(getSourceTableName()).append(\",\");\r\n    if (getTargetTableName() != null)\r\n        sb.append(\"TargetTableName: \").append(getTargetTableName()).append(\",\");\r\n    if (getUseLatestRestorableTime() != null)\r\n        sb.append(\"UseLatestRestorableTime: \").append(getUseLatestRestorableTime()).append(\",\");\r\n    if (getRestoreDateTime() != null)\r\n        sb.append(\"RestoreDateTime: \").append(getRestoreDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeImportSnapshotTasksAsync",
	"Comment": "simplified method form for invoking the describeimportsnapshottasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeImportSnapshotTasksResult> describeImportSnapshotTasksAsync(DescribeImportSnapshotTasksRequest request,java.util.concurrent.Future<DescribeImportSnapshotTasksResult> describeImportSnapshotTasksAsync,DescribeImportSnapshotTasksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeImportSnapshotTasksRequest, DescribeImportSnapshotTasksResult> asyncHandler,java.util.concurrent.Future<DescribeImportSnapshotTasksResult> describeImportSnapshotTasksAsync,java.util.concurrent.Future<DescribeImportSnapshotTasksResult> describeImportSnapshotTasksAsync,com.amazonaws.handlers.AsyncHandler<DescribeImportSnapshotTasksRequest, DescribeImportSnapshotTasksResult> asyncHandler){\r\n    return describeImportSnapshotTasksAsync(new DescribeImportSnapshotTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeClassicLinkInstancesAsync",
	"Comment": "simplified method form for invoking the describeclassiclinkinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClassicLinkInstancesResult> describeClassicLinkInstancesAsync(DescribeClassicLinkInstancesRequest request,java.util.concurrent.Future<DescribeClassicLinkInstancesResult> describeClassicLinkInstancesAsync,DescribeClassicLinkInstancesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClassicLinkInstancesRequest, DescribeClassicLinkInstancesResult> asyncHandler,java.util.concurrent.Future<DescribeClassicLinkInstancesResult> describeClassicLinkInstancesAsync,java.util.concurrent.Future<DescribeClassicLinkInstancesResult> describeClassicLinkInstancesAsync,com.amazonaws.handlers.AsyncHandler<DescribeClassicLinkInstancesRequest, DescribeClassicLinkInstancesResult> asyncHandler){\r\n    return describeClassicLinkInstancesAsync(new DescribeClassicLinkInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeApplicationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationNames() != null)\r\n        sb.append(\"ApplicationNames: \").append(getApplicationNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.describeEngineDefaultParameters",
	"Comment": "returns the default engine and system parameter information for the specified cache engine.",
	"Method": "EngineDefaults describeEngineDefaultParameters(DescribeEngineDefaultParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEngineDefaultParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.SubmitTaskStateChangeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getTask() != null)\r\n        sb.append(\"Task: \").append(getTask()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getContainers() != null)\r\n        sb.append(\"Containers: \").append(getContainers()).append(\",\");\r\n    if (getAttachments() != null)\r\n        sb.append(\"Attachments: \").append(getAttachments()).append(\",\");\r\n    if (getPullStartedAt() != null)\r\n        sb.append(\"PullStartedAt: \").append(getPullStartedAt()).append(\",\");\r\n    if (getPullStoppedAt() != null)\r\n        sb.append(\"PullStoppedAt: \").append(getPullStoppedAt()).append(\",\");\r\n    if (getExecutionStoppedAt() != null)\r\n        sb.append(\"ExecutionStoppedAt: \").append(getExecutionStoppedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.reportInstanceStatus",
	"Comment": "submits feedback about the status of an instance. the instance must be in the running state. if yourexperience with the instance differs from the instance status returned by describeinstancestatus, usereportinstancestatus to report your experience with the instance. amazon ec2 collects this information toimprove the accuracy of status checks.use of this action does not change the value returned by describeinstancestatus.",
	"Method": "ReportInstanceStatusResult reportInstanceStatus(ReportInstanceStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeReportInstanceStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RequestSpotInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpotInstanceRequests() != null)\r\n        sb.append(\"SpotInstanceRequests: \").append(getSpotInstanceRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcClassicLink.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClassicLinkEnabled() != null)\r\n        sb.append(\"ClassicLinkEnabled: \").append(getClassicLinkEnabled()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.QueryResultPage.getScannedCount",
	"Comment": "the number of items evaluated, before any queryfilter isapplied. a high scannedcount value with few, or no,count results indicates an inefficient query operation.for more information, see countand scannedcount in the amazon dynamodb developer guide.if you did not use a filter in the request, thenscannedcount is the same as count.",
	"Method": "Integer getScannedCount(){\r\n    return scannedCount;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateSubnetCidrBlockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6CidrBlockAssociation() != null)\r\n        sb.append(\"Ipv6CidrBlockAssociation: \").append(getIpv6CidrBlockAssociation()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeReplicationGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeListenersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListeners() != null)\r\n        sb.append(\"Listeners: \").append(getListeners()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.L",
	"Comment": "creates a path operand that refers to a list attribute for the purpose of building expressions.",
	"Method": "L L(String path){\r\n    return new L(path);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstancesEbs.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getVolumeSize() != null)\r\n        sb.append(\"VolumeSize: \").append(getVolumeSize()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamDescription() != null)\r\n        sb.append(\"StreamDescription: \").append(getStreamDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeSpotFleetRequests",
	"Comment": "describes your spot fleet requests.spot fleet requests are deleted 48 hours after they are canceled and their instances are terminated.",
	"Method": "DescribeSpotFleetRequestsResult describeSpotFleetRequests(DescribeSpotFleetRequestsRequest request,DescribeSpotFleetRequestsResult describeSpotFleetRequests){\r\n    return describeSpotFleetRequests(new DescribeSpotFleetRequestsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.B",
	"Comment": "creates a path operand that refers to a binary attribute for the purpose of building expressions.",
	"Method": "B B(String path){\r\n    return new B(path);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.Certificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getIsDefault() != null)\r\n        sb.append(\"IsDefault: \").append(getIsDefault());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DetachInternetGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInternetGatewayId() != null)\r\n        sb.append(\"InternetGatewayId: \").append(getInternetGatewayId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.M",
	"Comment": "creates a path operand that refers to a map attribute for the purpose of building expressions.",
	"Method": "M M(String path){\r\n    return new M(path);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.N",
	"Comment": "creates a path operand that refers to a number attribute for the purpose of building expressions.",
	"Method": "N N(String path){\r\n    return new N(path);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.S",
	"Comment": "creates a path operand that refers to a string attribute for the purpose of building expressions.",
	"Method": "S S(String path){\r\n    return new S(path);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReleaseHostsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostIds() != null)\r\n        sb.append(\"HostIds: \").append(getHostIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeVpnConnections",
	"Comment": "describes one or more of your vpn connections.for more information about vpn connections, see aws managed vpn connections in theamazon virtual private cloud user guide.",
	"Method": "DescribeVpnConnectionsResult describeVpnConnections(DescribeVpnConnectionsRequest request,DescribeVpnConnectionsResult describeVpnConnections){\r\n    return describeVpnConnections(new DescribeVpnConnectionsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateApplicationResourceLifecycleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getResourceLifecycleConfig() != null)\r\n        sb.append(\"ResourceLifecycleConfig: \").append(getResourceLifecycleConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DecreaseReplicaCountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getNewReplicaCount() != null)\r\n        sb.append(\"NewReplicaCount: \").append(getNewReplicaCount()).append(\",\");\r\n    if (getReplicaConfiguration() != null)\r\n        sb.append(\"ReplicaConfiguration: \").append(getReplicaConfiguration()).append(\",\");\r\n    if (getReplicasToRemove() != null)\r\n        sb.append(\"ReplicasToRemove: \").append(getReplicasToRemove()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTransitGatewayRouteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock()).append(\",\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getBlackhole() != null)\r\n        sb.append(\"Blackhole: \").append(getBlackhole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateLaunchTemplateVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateVersion() != null)\r\n        sb.append(\"LaunchTemplateVersion: \").append(getLaunchTemplateVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeVolumeStatusAsync",
	"Comment": "simplified method form for invoking the describevolumestatus operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVolumeStatusResult> describeVolumeStatusAsync(DescribeVolumeStatusRequest request,java.util.concurrent.Future<DescribeVolumeStatusResult> describeVolumeStatusAsync,DescribeVolumeStatusRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVolumeStatusRequest, DescribeVolumeStatusResult> asyncHandler,java.util.concurrent.Future<DescribeVolumeStatusResult> describeVolumeStatusAsync,java.util.concurrent.Future<DescribeVolumeStatusResult> describeVolumeStatusAsync,com.amazonaws.handlers.AsyncHandler<DescribeVolumeStatusRequest, DescribeVolumeStatusResult> asyncHandler){\r\n    return describeVolumeStatusAsync(new DescribeVolumeStatusRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ListTablesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableNames() != null)\r\n        sb.append(\"TableNames: \").append(getTableNames()).append(\",\");\r\n    if (getLastEvaluatedTableName() != null)\r\n        sb.append(\"LastEvaluatedTableName: \").append(getLastEvaluatedTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeNatGatewaysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNatGateways() != null)\r\n        sb.append(\"NatGateways: \").append(getNatGateways()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ScanResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getScannedCount() != null)\r\n        sb.append(\"ScannedCount: \").append(getScannedCount()).append(\",\");\r\n    if (getLastEvaluatedKey() != null)\r\n        sb.append(\"LastEvaluatedKey: \").append(getLastEvaluatedKey()).append(\",\");\r\n    if (getConsumedCapacity() != null)\r\n        sb.append(\"ConsumedCapacity: \").append(getConsumedCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.Limit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMax() != null)\r\n        sb.append(\"Max: \").append(getMax());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.describeCacheParameterGroupsAsync",
	"Comment": "simplified method form for invoking the describecacheparametergroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCacheParameterGroupsResult> describeCacheParameterGroupsAsync(DescribeCacheParameterGroupsRequest request,java.util.concurrent.Future<DescribeCacheParameterGroupsResult> describeCacheParameterGroupsAsync,DescribeCacheParameterGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCacheParameterGroupsRequest, DescribeCacheParameterGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeCacheParameterGroupsResult> describeCacheParameterGroupsAsync,java.util.concurrent.Future<DescribeCacheParameterGroupsResult> describeCacheParameterGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeCacheParameterGroupsRequest, DescribeCacheParameterGroupsResult> asyncHandler){\r\n    return describeCacheParameterGroupsAsync(new DescribeCacheParameterGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.describeInstanceHealth",
	"Comment": "describes the state of the specified instances with respect to the specified load balancer. if no instances arespecified, the call describes the state of all instances that are currently registered with the load balancer. ifinstances are specified, their state is returned even if they are no longer registered with the load balancer.the state of terminated instances is not returned.",
	"Method": "DescribeInstanceHealthResult describeInstanceHealth(DescribeInstanceHealthRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeInstanceHealth(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.listAllowedNodeTypeModificationsAsync",
	"Comment": "simplified method form for invoking the listallowednodetypemodifications operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAllowedNodeTypeModificationsResult> listAllowedNodeTypeModificationsAsync(ListAllowedNodeTypeModificationsRequest request,java.util.concurrent.Future<ListAllowedNodeTypeModificationsResult> listAllowedNodeTypeModificationsAsync,ListAllowedNodeTypeModificationsRequest request,com.amazonaws.handlers.AsyncHandler<ListAllowedNodeTypeModificationsRequest, ListAllowedNodeTypeModificationsResult> asyncHandler,java.util.concurrent.Future<ListAllowedNodeTypeModificationsResult> listAllowedNodeTypeModificationsAsync,java.util.concurrent.Future<ListAllowedNodeTypeModificationsResult> listAllowedNodeTypeModificationsAsync,com.amazonaws.handlers.AsyncHandler<ListAllowedNodeTypeModificationsRequest, ListAllowedNodeTypeModificationsResult> asyncHandler){\r\n    return listAllowedNodeTypeModificationsAsync(new ListAllowedNodeTypeModificationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ListTagsOfResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceExportDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getTargetEnvironment() != null)\r\n        sb.append(\"TargetEnvironment: \").append(getTargetEnvironment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeReservedInstancesModificationsAsync",
	"Comment": "simplified method form for invoking the describereservedinstancesmodifications operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedInstancesModificationsResult> describeReservedInstancesModificationsAsync(DescribeReservedInstancesModificationsRequest request,java.util.concurrent.Future<DescribeReservedInstancesModificationsResult> describeReservedInstancesModificationsAsync,DescribeReservedInstancesModificationsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesModificationsRequest, DescribeReservedInstancesModificationsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedInstancesModificationsResult> describeReservedInstancesModificationsAsync,java.util.concurrent.Future<DescribeReservedInstancesModificationsResult> describeReservedInstancesModificationsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesModificationsRequest, DescribeReservedInstancesModificationsResult> asyncHandler){\r\n    return describeReservedInstancesModificationsAsync(new DescribeReservedInstancesModificationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceNetworkInterface.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociation() != null)\r\n        sb.append(\"Association: \").append(getAssociation()).append(\",\");\r\n    if (getAttachment() != null)\r\n        sb.append(\"Attachment: \").append(getAttachment()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getMacAddress() != null)\r\n        sb.append(\"MacAddress: \").append(getMacAddress()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getPrivateIpAddresses() != null)\r\n        sb.append(\"PrivateIpAddresses: \").append(getPrivateIpAddresses()).append(\",\");\r\n    if (getSourceDestCheck() != null)\r\n        sb.append(\"SourceDestCheck: \").append(getSourceDestCheck()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeInstancesAsync",
	"Comment": "simplified method form for invoking the describeinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeInstancesResult> describeInstancesAsync(DescribeInstancesRequest request,java.util.concurrent.Future<DescribeInstancesResult> describeInstancesAsync,DescribeInstancesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeInstancesRequest, DescribeInstancesResult> asyncHandler,java.util.concurrent.Future<DescribeInstancesResult> describeInstancesAsync,java.util.concurrent.Future<DescribeInstancesResult> describeInstancesAsync,com.amazonaws.handlers.AsyncHandler<DescribeInstancesRequest, DescribeInstancesResult> asyncHandler){\r\n    return describeInstancesAsync(new DescribeInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelCapacityReservationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBStreamsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazondynamodbstreamsasync using the current builder configuration.",
	"Method": "AmazonDynamoDBStreamsAsync build(AwsAsyncClientParams params){\r\n    return new AmazonDynamoDBStreamsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CreateCacheSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSecurityGroupName() != null)\r\n        sb.append(\"CacheSecurityGroupName: \").append(getCacheSecurityGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpnConnectionOptionsSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticRoutesOnly() != null)\r\n        sb.append(\"StaticRoutesOnly: \").append(getStaticRoutesOnly()).append(\",\");\r\n    if (getTunnelOptions() != null)\r\n        sb.append(\"TunnelOptions: \").append(getTunnelOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AttachClassicLinkVpcRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateRouteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Volume.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachments() != null)\r\n        sb.append(\"Attachments: \").append(getAttachments()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.StopTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getTask() != null)\r\n        sb.append(\"Task: \").append(getTask()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.ScanResultPage.getLastEvaluatedKey",
	"Comment": "returns the last evaluated key, which can be used as theexclusivestartkey to fetch the next page of results. returns null if thisis the last page of results.",
	"Method": "Map<String, AttributeValue> getLastEvaluatedKey(){\r\n    return lastEvaluatedKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.describeImages",
	"Comment": "returns metadata about the images in a repository, including image size, image tags, and creation date.beginning with docker version 1.9, the docker client compresses image layers before pushing them to a v2 dockerregistry. the output of the docker images command shows the uncompressed image size, so it mayreturn a larger image size than the image sizes returned by describeimages.",
	"Method": "DescribeImagesResult describeImages(DescribeImagesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeImages(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.resetCacheParameterGroup",
	"Comment": "modifies the parameters of a cache parameter group to the engine or system default value. you can reset specificparameters by submitting a list of parameter names. to reset the entire cache parameter group, specify theresetallparameters and cacheparametergroupname parameters.",
	"Method": "ResetCacheParameterGroupResult resetCacheParameterGroup(ResetCacheParameterGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeResetCacheParameterGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getVpcIds() != null)\r\n        sb.append(\"VpcIds: \").append(getVpcIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Volume.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getHost() != null)\r\n        sb.append(\"Host: \").append(getHost()).append(\",\");\r\n    if (getDockerVolumeConfiguration() != null)\r\n        sb.append(\"DockerVolumeConfiguration: \").append(getDockerVolumeConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeHostReservationOfferingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOfferingSet() != null)\r\n        sb.append(\"OfferingSet: \").append(getOfferingSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.CreateClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.acceptVpcEndpointConnections",
	"Comment": "accepts one or more interface vpc endpoint connection requests to your vpc endpoint service.",
	"Method": "AcceptVpcEndpointConnectionsResult acceptVpcEndpointConnections(AcceptVpcEndpointConnectionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAcceptVpcEndpointConnections(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TargetConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.KeyPairInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyFingerprint() != null)\r\n        sb.append(\"KeyFingerprint: \").append(getKeyFingerprint()).append(\",\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withBigInteger",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withBigInteger(String attrName,BigInteger val){\r\n    checkInvalidAttrName(attrName);\r\n    return withNumber(attrName, val);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.batchSave",
	"Comment": "saves the objects given using one or more calls to the batchwriteitem api.",
	"Method": "List<DynamoDBMapper.FailedBatch> batchSave(Iterable<T> objectsToSave){\r\n    return mapper.batchWrite(objectsToSave, (Iterable<T>) Collections.<T>emptyList());\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getCacheClusters() != null)\r\n        sb.append(\"CacheClusters: \").append(getCacheClusters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpnConnectionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getVpnConnectionIds() != null)\r\n        sb.append(\"VpnConnectionIds: \").append(getVpnConnectionIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstancesLaunchSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName()).append(\",\");\r\n    if (getMonitoring() != null)\r\n        sb.append(\"Monitoring: \").append(getMonitoring()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement()).append(\",\");\r\n    if (getRamdiskId() != null)\r\n        sb.append(\"RamdiskId: \").append(getRamdiskId()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.PutAccountSettingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSetting() != null)\r\n        sb.append(\"Setting: \").append(getSetting());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReservedInstanceReservationValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservationValue() != null)\r\n        sb.append(\"ReservationValue: \").append(getReservationValue()).append(\",\");\r\n    if (getReservedInstanceId() != null)\r\n        sb.append(\"ReservedInstanceId: \").append(getReservedInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AttachClassicLinkVpcResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DiskImageDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBytes() != null)\r\n        sb.append(\"Bytes: \").append(getBytes()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getImportManifestUrl() != null)\r\n        sb.append(\"ImportManifestUrl: \").append(getImportManifestUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResetNetworkInterfaceAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getSourceDestCheck() != null)\r\n        sb.append(\"SourceDestCheck: \").append(getSourceDestCheck());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshots() != null)\r\n        sb.append(\"Snapshots: \").append(getSnapshots()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.waiters.AmazonDynamoDBWaiters.tableExists",
	"Comment": "builds a tableexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeTableRequest> tableExists(){\r\n    return new WaiterBuilder<DescribeTableRequest, DescribeTableResult>().withSdkFunction(new DescribeTableFunction(client)).withAcceptors(new TableExists.IsACTIVEMatcher(), new TableExists.IsResourceNotFoundExceptionMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(25), new FixedDelayStrategy(20))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.buildForDeleteItem",
	"Comment": "returns an expression specification for use in a deleteitemrequest to dynamodb.",
	"Method": "DeleteItemExpressionSpec buildForDeleteItem(){\r\n    return new DeleteItemExpressionSpec(this);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteTransitGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGateway() != null)\r\n        sb.append(\"TransitGateway: \").append(getTransitGateway());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeVpnConnectionsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeVpnConnectionsResult apply(DescribeVpnConnectionsRequest describeVpnConnectionsRequest){\r\n    return client.describeVpnConnections(describeVpnConnectionsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.internal.ItemValueConformer.transform",
	"Comment": "this method is assumed to be called for the purpose of a setter methodinvocation, but not a getter method invocation.",
	"Method": "Object transform(Object value){\r\n    if (value == null) {\r\n        return value;\r\n    } else if (value instanceof Boolean) {\r\n        return value;\r\n    } else if (value instanceof String) {\r\n        return value;\r\n    } else if (value instanceof Number) {\r\n        return InternalUtils.toBigDecimal((Number) value);\r\n    } else if (value instanceof byte[]) {\r\n        return value;\r\n    } else if (value instanceof ByteBuffer) {\r\n        return copyBytesFrom((ByteBuffer) value);\r\n    } else if (value instanceof Set) {\r\n        @SuppressWarnings(\"unchecked\")\r\n        Set<Object> set = (Set<Object>) value;\r\n        if (set.size() == 0)\r\n            return value;\r\n        Object element = set.iterator().next();\r\n        if (element instanceof String) {\r\n            return value;\r\n        } else if (element instanceof BigDecimal) {\r\n            return value;\r\n        } else if (element instanceof Number) {\r\n            @SuppressWarnings(\"unchecked\")\r\n            Set<Number> in = (Set<Number>) value;\r\n            Set<BigDecimal> out = new LinkedHashSet<BigDecimal>(set.size());\r\n            for (Number n : in) out.add(InternalUtils.toBigDecimal(n));\r\n            return out;\r\n        } else if (element instanceof byte[]) {\r\n            return value;\r\n        } else if (element instanceof ByteBuffer) {\r\n            @SuppressWarnings(\"unchecked\")\r\n            Set<ByteBuffer> bs = (Set<ByteBuffer>) value;\r\n            Set<byte[]> out = new LinkedHashSet<byte[]>(bs.size());\r\n            for (ByteBuffer bb : bs) out.add(copyBytesFrom(bb));\r\n            return out;\r\n        } else {\r\n            throw new UnsupportedOperationException(\"element type: \" + element.getClass());\r\n        }\r\n    } else if (value instanceof List) {\r\n        @SuppressWarnings(\"unchecked\")\r\n        List<Object> in = (List<Object>) value;\r\n        if (in.size() == 0)\r\n            return in;\r\n        List<Object> out = new ArrayList<Object>();\r\n        for (Object v : in) out.add(transform(v));\r\n        return out;\r\n    } else if (value instanceof Map) {\r\n        @SuppressWarnings(\"unchecked\")\r\n        Map<String, Object> in = (Map<String, Object>) value;\r\n        if (in.size() == 0)\r\n            return in;\r\n        Map<String, Object> out = new LinkedHashMap<String, Object>(in.size());\r\n        for (Map.Entry<String, Object> e : in.entrySet()) out.put(e.getKey(), transform(e.getValue()));\r\n        return out;\r\n    } else {\r\n        throw new UnsupportedOperationException(\"value type: \" + value.getClass());\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeDhcpOptions",
	"Comment": "describes one or more of your dhcp options sets.for more information, see dhcp options sets in theamazon virtual private cloud user guide.",
	"Method": "DescribeDhcpOptionsResult describeDhcpOptions(DescribeDhcpOptionsRequest request,DescribeDhcpOptionsResult describeDhcpOptions){\r\n    return describeDhcpOptions(new DescribeDhcpOptionsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CreateReplicationGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getReplicationGroupDescription() != null)\r\n        sb.append(\"ReplicationGroupDescription: \").append(getReplicationGroupDescription()).append(\",\");\r\n    if (getPrimaryClusterId() != null)\r\n        sb.append(\"PrimaryClusterId: \").append(getPrimaryClusterId()).append(\",\");\r\n    if (getAutomaticFailoverEnabled() != null)\r\n        sb.append(\"AutomaticFailoverEnabled: \").append(getAutomaticFailoverEnabled()).append(\",\");\r\n    if (getNumCacheClusters() != null)\r\n        sb.append(\"NumCacheClusters: \").append(getNumCacheClusters()).append(\",\");\r\n    if (getPreferredCacheClusterAZs() != null)\r\n        sb.append(\"PreferredCacheClusterAZs: \").append(getPreferredCacheClusterAZs()).append(\",\");\r\n    if (getNumNodeGroups() != null)\r\n        sb.append(\"NumNodeGroups: \").append(getNumNodeGroups()).append(\",\");\r\n    if (getReplicasPerNodeGroup() != null)\r\n        sb.append(\"ReplicasPerNodeGroup: \").append(getReplicasPerNodeGroup()).append(\",\");\r\n    if (getNodeGroupConfiguration() != null)\r\n        sb.append(\"NodeGroupConfiguration: \").append(getNodeGroupConfiguration()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getCacheSubnetGroupName() != null)\r\n        sb.append(\"CacheSubnetGroupName: \").append(getCacheSubnetGroupName()).append(\",\");\r\n    if (getCacheSecurityGroupNames() != null)\r\n        sb.append(\"CacheSecurityGroupNames: \").append(getCacheSecurityGroupNames()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getSnapshotArns() != null)\r\n        sb.append(\"SnapshotArns: \").append(getSnapshotArns()).append(\",\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getNotificationTopicArn() != null)\r\n        sb.append(\"NotificationTopicArn: \").append(getNotificationTopicArn()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getSnapshotRetentionLimit() != null)\r\n        sb.append(\"SnapshotRetentionLimit: \").append(getSnapshotRetentionLimit()).append(\",\");\r\n    if (getSnapshotWindow() != null)\r\n        sb.append(\"SnapshotWindow: \").append(getSnapshotWindow()).append(\",\");\r\n    if (getAuthToken() != null)\r\n        sb.append(\"AuthToken: \").append(getAuthToken()).append(\",\");\r\n    if (getTransitEncryptionEnabled() != null)\r\n        sb.append(\"TransitEncryptionEnabled: \").append(getTransitEncryptionEnabled()).append(\",\");\r\n    if (getAtRestEncryptionEnabled() != null)\r\n        sb.append(\"AtRestEncryptionEnabled: \").append(getAtRestEncryptionEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateVpcCidrBlockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6CidrBlockAssociation() != null)\r\n        sb.append(\"Ipv6CidrBlockAssociation: \").append(getIpv6CidrBlockAssociation()).append(\",\");\r\n    if (getCidrBlockAssociation() != null)\r\n        sb.append(\"CidrBlockAssociation: \").append(getCidrBlockAssociation()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupArn() != null)\r\n        sb.append(\"BackupArn: \").append(getBackupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.ConnectionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdleTimeout() != null)\r\n        sb.append(\"IdleTimeout: \").append(getIdleTimeout());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFleetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFleetIds() != null)\r\n        sb.append(\"FleetIds: \").append(getFleetIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UserBucketDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Key() != null)\r\n        sb.append(\"S3Key: \").append(getS3Key());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.PolicyTypeDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyTypeName() != null)\r\n        sb.append(\"PolicyTypeName: \").append(getPolicyTypeName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getPolicyAttributeTypeDescriptions() != null)\r\n        sb.append(\"PolicyAttributeTypeDescriptions: \").append(getPolicyAttributeTypeDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.OnDemandOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationStrategy() != null)\r\n        sb.append(\"AllocationStrategy: \").append(getAllocationStrategy()).append(\",\");\r\n    if (getSingleInstanceType() != null)\r\n        sb.append(\"SingleInstanceType: \").append(getSingleInstanceType()).append(\",\");\r\n    if (getMinTargetCapacity() != null)\r\n        sb.append(\"MinTargetCapacity: \").append(getMinTargetCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Replica.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.PlatformProgrammingLanguage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.subnetAvailable",
	"Comment": "builds a subnetavailable waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeSubnetsRequest> subnetAvailable(){\r\n    return new WaiterBuilder<DescribeSubnetsRequest, DescribeSubnetsResult>().withSdkFunction(new DescribeSubnetsFunction(client)).withAcceptors(new SubnetAvailable.IsAvailableMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getDisableApiTermination() != null)\r\n        sb.append(\"DisableApiTermination: \").append(getDisableApiTermination()).append(\",\");\r\n    if (getEnaSupport() != null)\r\n        sb.append(\"EnaSupport: \").append(getEnaSupport()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getInstanceInitiatedShutdownBehavior() != null)\r\n        sb.append(\"InstanceInitiatedShutdownBehavior: \").append(getInstanceInitiatedShutdownBehavior()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes()).append(\",\");\r\n    if (getRamdiskId() != null)\r\n        sb.append(\"RamdiskId: \").append(getRamdiskId()).append(\",\");\r\n    if (getRootDeviceName() != null)\r\n        sb.append(\"RootDeviceName: \").append(getRootDeviceName()).append(\",\");\r\n    if (getSourceDestCheck() != null)\r\n        sb.append(\"SourceDestCheck: \").append(getSourceDestCheck()).append(\",\");\r\n    if (getSriovNetSupport() != null)\r\n        sb.append(\"SriovNetSupport: \").append(getSriovNetSupport()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReservedInstancesModificationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstancesId() != null)\r\n        sb.append(\"ReservedInstancesId: \").append(getReservedInstancesId()).append(\",\");\r\n    if (getTargetConfiguration() != null)\r\n        sb.append(\"TargetConfiguration: \").append(getTargetConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateInstanceMarketOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarketType() != null)\r\n        sb.append(\"MarketType: \").append(getMarketType()).append(\",\");\r\n    if (getSpotOptions() != null)\r\n        sb.append(\"SpotOptions: \").append(getSpotOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelCapacityReservationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityReservationId() != null)\r\n        sb.append(\"CapacityReservationId: \").append(getCapacityReservationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyInstanceCapacityReservationAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getCapacityReservationSpecification() != null)\r\n        sb.append(\"CapacityReservationSpecification: \").append(getCapacityReservationSpecification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.PurchaseReservedCacheNodesOfferingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedCacheNodesOfferingId() != null)\r\n        sb.append(\"ReservedCacheNodesOfferingId: \").append(getReservedCacheNodesOfferingId()).append(\",\");\r\n    if (getReservedCacheNodeId() != null)\r\n        sb.append(\"ReservedCacheNodeId: \").append(getReservedCacheNodeId()).append(\",\");\r\n    if (getCacheNodeCount() != null)\r\n        sb.append(\"CacheNodeCount: \").append(getCacheNodeCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GetItemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getAttributesToGet() != null)\r\n        sb.append(\"AttributesToGet: \").append(getAttributesToGet()).append(\",\");\r\n    if (getConsistentRead() != null)\r\n        sb.append(\"ConsistentRead: \").append(getConsistentRead()).append(\",\");\r\n    if (getReturnConsumedCapacity() != null)\r\n        sb.append(\"ReturnConsumedCapacity: \").append(getReturnConsumedCapacity()).append(\",\");\r\n    if (getProjectionExpression() != null)\r\n        sb.append(\"ProjectionExpression: \").append(getProjectionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ConsumedCapacity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getCapacityUnits() != null)\r\n        sb.append(\"CapacityUnits: \").append(getCapacityUnits()).append(\",\");\r\n    if (getReadCapacityUnits() != null)\r\n        sb.append(\"ReadCapacityUnits: \").append(getReadCapacityUnits()).append(\",\");\r\n    if (getWriteCapacityUnits() != null)\r\n        sb.append(\"WriteCapacityUnits: \").append(getWriteCapacityUnits()).append(\",\");\r\n    if (getTable() != null)\r\n        sb.append(\"Table: \").append(getTable()).append(\",\");\r\n    if (getLocalSecondaryIndexes() != null)\r\n        sb.append(\"LocalSecondaryIndexes: \").append(getLocalSecondaryIndexes()).append(\",\");\r\n    if (getGlobalSecondaryIndexes() != null)\r\n        sb.append(\"GlobalSecondaryIndexes: \").append(getGlobalSecondaryIndexes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CidrAuthorizationContext.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CacheSubnetGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSubnetGroupName() != null)\r\n        sb.append(\"CacheSubnetGroupName: \").append(getCacheSubnetGroupName()).append(\",\");\r\n    if (getCacheSubnetGroupDescription() != null)\r\n        sb.append(\"CacheSubnetGroupDescription: \").append(getCacheSubnetGroupDescription()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.describeListeners",
	"Comment": "describes the specified listeners or the listeners for the specified application load balancer or network loadbalancer. you must specify either a load balancer or one or more listeners.",
	"Method": "DescribeListenersResult describeListeners(DescribeListenersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeListeners(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.MonitorInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceMonitorings() != null)\r\n        sb.append(\"InstanceMonitorings: \").append(getInstanceMonitorings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Route.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock()).append(\",\");\r\n    if (getDestinationIpv6CidrBlock() != null)\r\n        sb.append(\"DestinationIpv6CidrBlock: \").append(getDestinationIpv6CidrBlock()).append(\",\");\r\n    if (getDestinationPrefixListId() != null)\r\n        sb.append(\"DestinationPrefixListId: \").append(getDestinationPrefixListId()).append(\",\");\r\n    if (getEgressOnlyInternetGatewayId() != null)\r\n        sb.append(\"EgressOnlyInternetGatewayId: \").append(getEgressOnlyInternetGatewayId()).append(\",\");\r\n    if (getGatewayId() != null)\r\n        sb.append(\"GatewayId: \").append(getGatewayId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getInstanceOwnerId() != null)\r\n        sb.append(\"InstanceOwnerId: \").append(getInstanceOwnerId()).append(\",\");\r\n    if (getNatGatewayId() != null)\r\n        sb.append(\"NatGatewayId: \").append(getNatGatewayId()).append(\",\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getOrigin() != null)\r\n        sb.append(\"Origin: \").append(getOrigin()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DescribeServicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeLoadBalancerAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotFleetRequestConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActivityStatus() != null)\r\n        sb.append(\"ActivityStatus: \").append(getActivityStatus()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getSpotFleetRequestConfig() != null)\r\n        sb.append(\"SpotFleetRequestConfig: \").append(getSpotFleetRequestConfig()).append(\",\");\r\n    if (getSpotFleetRequestId() != null)\r\n        sb.append(\"SpotFleetRequestId: \").append(getSpotFleetRequestId()).append(\",\");\r\n    if (getSpotFleetRequestState() != null)\r\n        sb.append(\"SpotFleetRequestState: \").append(getSpotFleetRequestState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeprovisionByoipCidrRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidr() != null)\r\n        sb.append(\"Cidr: \").append(getCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.HistoryRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventInformation() != null)\r\n        sb.append(\"EventInformation: \").append(getEventInformation()).append(\",\");\r\n    if (getEventType() != null)\r\n        sb.append(\"EventType: \").append(getEventType()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getHourlyPrice() != null)\r\n        sb.append(\"HourlyPrice: \").append(getHourlyPrice()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getNetworkPlatform() != null)\r\n        sb.append(\"NetworkPlatform: \").append(getNetworkPlatform()).append(\",\");\r\n    if (getNextSlotStartTime() != null)\r\n        sb.append(\"NextSlotStartTime: \").append(getNextSlotStartTime()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getPreviousSlotEndTime() != null)\r\n        sb.append(\"PreviousSlotEndTime: \").append(getPreviousSlotEndTime()).append(\",\");\r\n    if (getRecurrence() != null)\r\n        sb.append(\"Recurrence: \").append(getRecurrence()).append(\",\");\r\n    if (getScheduledInstanceId() != null)\r\n        sb.append(\"ScheduledInstanceId: \").append(getScheduledInstanceId()).append(\",\");\r\n    if (getSlotDurationInHours() != null)\r\n        sb.append(\"SlotDurationInHours: \").append(getSlotDurationInHours()).append(\",\");\r\n    if (getTermEndDate() != null)\r\n        sb.append(\"TermEndDate: \").append(getTermEndDate()).append(\",\");\r\n    if (getTermStartDate() != null)\r\n        sb.append(\"TermStartDate: \").append(getTermStartDate()).append(\",\");\r\n    if (getTotalScheduledInstanceHours() != null)\r\n        sb.append(\"TotalScheduledInstanceHours: \").append(getTotalScheduledInstanceHours());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VolumeStatusItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getVolumeStatus() != null)\r\n        sb.append(\"VolumeStatus: \").append(getVolumeStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.describeTaskDefinition",
	"Comment": "describes a task definition. you can specify a family and revision to find informationabout a specific task definition, or you can simply specify the family to find the latest activerevision in that family.you can only describe inactive task definitions while an active task or service references them.",
	"Method": "DescribeTaskDefinitionResult describeTaskDefinition(DescribeTaskDefinitionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTaskDefinition(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.GetDownloadUrlForLayerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDownloadUrl() != null)\r\n        sb.append(\"DownloadUrl: \").append(getDownloadUrl()).append(\",\");\r\n    if (getLayerDigest() != null)\r\n        sb.append(\"LayerDigest: \").append(getLayerDigest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DeleteApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateReservedInstancesListingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getPriceSchedules() != null)\r\n        sb.append(\"PriceSchedules: \").append(getPriceSchedules()).append(\",\");\r\n    if (getReservedInstancesId() != null)\r\n        sb.append(\"ReservedInstancesId: \").append(getReservedInstancesId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.LoadBalancerDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getListeners() != null)\r\n        sb.append(\"Listeners: \").append(getListeners());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.waiters.DescribeInstanceHealthFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeInstanceHealthResult apply(DescribeInstanceHealthRequest describeInstanceHealthRequest){\r\n    return client.describeInstanceHealth(describeInstanceHealthRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateSecurityGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.describeSnapshotsAsync",
	"Comment": "simplified method form for invoking the describesnapshots operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync(DescribeSnapshotsRequest request,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,DescribeSnapshotsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotsRequest, DescribeSnapshotsResult> asyncHandler,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotsRequest, DescribeSnapshotsResult> asyncHandler){\r\n    return describeSnapshotsAsync(new DescribeSnapshotsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.listTasksAsync",
	"Comment": "simplified method form for invoking the listtasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTasksResult> listTasksAsync(ListTasksRequest request,java.util.concurrent.Future<ListTasksResult> listTasksAsync,ListTasksRequest request,com.amazonaws.handlers.AsyncHandler<ListTasksRequest, ListTasksResult> asyncHandler,java.util.concurrent.Future<ListTasksResult> listTasksAsync,java.util.concurrent.Future<ListTasksResult> listTasksAsync,com.amazonaws.handlers.AsyncHandler<ListTasksRequest, ListTasksResult> asyncHandler){\r\n    return listTasksAsync(new ListTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ManagedAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionId() != null)\r\n        sb.append(\"ActionId: \").append(getActionId()).append(\",\");\r\n    if (getActionDescription() != null)\r\n        sb.append(\"ActionDescription: \").append(getActionDescription()).append(\",\");\r\n    if (getActionType() != null)\r\n        sb.append(\"ActionType: \").append(getActionType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getWindowStartTime() != null)\r\n        sb.append(\"WindowStartTime: \").append(getWindowStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateOverrides.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getSpotPrice() != null)\r\n        sb.append(\"SpotPrice: \").append(getSpotPrice()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getWeightedCapacity() != null)\r\n        sb.append(\"WeightedCapacity: \").append(getWeightedCapacity()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.GetPasswordDataFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "GetPasswordDataResult apply(GetPasswordDataRequest getPasswordDataRequest){\r\n    return client.getPasswordData(getPasswordDataRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.attachVpnGateway",
	"Comment": "attaches a virtual private gateway to a vpc. you can attach one virtual private gateway to one vpc at a time.for more information, see awsmanaged vpn connections in the amazon virtual private cloud user guide.",
	"Method": "AttachVpnGatewayResult attachVpnGateway(AttachVpnGatewayRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAttachVpnGateway(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeHostsAsync",
	"Comment": "simplified method form for invoking the describehosts operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeHostsResult> describeHostsAsync(DescribeHostsRequest request,java.util.concurrent.Future<DescribeHostsResult> describeHostsAsync,DescribeHostsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeHostsRequest, DescribeHostsResult> asyncHandler,java.util.concurrent.Future<DescribeHostsResult> describeHostsAsync,java.util.concurrent.Future<DescribeHostsResult> describeHostsAsync,com.amazonaws.handlers.AsyncHandler<DescribeHostsRequest, DescribeHostsResult> asyncHandler){\r\n    return describeHostsAsync(new DescribeHostsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayAttachmentAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AuthorizeSecurityGroupEgressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ListTablesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExclusiveStartTableName() != null)\r\n        sb.append(\"ExclusiveStartTableName: \").append(getExclusiveStartTableName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.requestSpotInstances",
	"Comment": "creates a spot instance request.for more information, see spotinstance requests in the amazon ec2 user guide for linux instances.",
	"Method": "RequestSpotInstancesResult requestSpotInstances(RequestSpotInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRequestSpotInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.bundleTaskComplete",
	"Comment": "builds a bundletaskcomplete waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeBundleTasksRequest> bundleTaskComplete(){\r\n    return new WaiterBuilder<DescribeBundleTasksRequest, DescribeBundleTasksResult>().withSdkFunction(new DescribeBundleTasksFunction(client)).withAcceptors(new BundleTaskComplete.IsCompleteMatcher(), new BundleTaskComplete.IsFailedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.startTask",
	"Comment": "starts a new task from the specified task definition on the specified container instance or instances.alternatively, you can use runtask to place tasks for you. for more information, see scheduling tasks inthe amazon elastic container service developer guide.",
	"Method": "StartTaskResult startTask(StartTaskRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartTask(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.NodeGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodeGroupId() != null)\r\n        sb.append(\"NodeGroupId: \").append(getNodeGroupId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPrimaryEndpoint() != null)\r\n        sb.append(\"PrimaryEndpoint: \").append(getPrimaryEndpoint()).append(\",\");\r\n    if (getSlots() != null)\r\n        sb.append(\"Slots: \").append(getSlots()).append(\",\");\r\n    if (getNodeGroupMembers() != null)\r\n        sb.append(\"NodeGroupMembers: \").append(getNodeGroupMembers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RequestSpotFleetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpotFleetRequestConfig() != null)\r\n        sb.append(\"SpotFleetRequestConfig: \").append(getSpotFleetRequestConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeCustomerGatewaysAsync",
	"Comment": "simplified method form for invoking the describecustomergateways operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCustomerGatewaysResult> describeCustomerGatewaysAsync(DescribeCustomerGatewaysRequest request,java.util.concurrent.Future<DescribeCustomerGatewaysResult> describeCustomerGatewaysAsync,DescribeCustomerGatewaysRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCustomerGatewaysRequest, DescribeCustomerGatewaysResult> asyncHandler,java.util.concurrent.Future<DescribeCustomerGatewaysResult> describeCustomerGatewaysAsync,java.util.concurrent.Future<DescribeCustomerGatewaysResult> describeCustomerGatewaysAsync,com.amazonaws.handlers.AsyncHandler<DescribeCustomerGatewaysRequest, DescribeCustomerGatewaysResult> asyncHandler){\r\n    return describeCustomerGatewaysAsync(new DescribeCustomerGatewaysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateTransitGatewayRouteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeCustomerGatewaysAsync",
	"Comment": "simplified method form for invoking the describecustomergateways operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCustomerGatewaysResult> describeCustomerGatewaysAsync(DescribeCustomerGatewaysRequest request,java.util.concurrent.Future<DescribeCustomerGatewaysResult> describeCustomerGatewaysAsync,DescribeCustomerGatewaysRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCustomerGatewaysRequest, DescribeCustomerGatewaysResult> asyncHandler,java.util.concurrent.Future<DescribeCustomerGatewaysResult> describeCustomerGatewaysAsync,java.util.concurrent.Future<DescribeCustomerGatewaysResult> describeCustomerGatewaysAsync,com.amazonaws.handlers.AsyncHandler<DescribeCustomerGatewaysRequest, DescribeCustomerGatewaysResult> asyncHandler){\r\n    return describeCustomerGatewaysAsync(new DescribeCustomerGatewaysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.LogConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogDriver() != null)\r\n        sb.append(\"LogDriver: \").append(getLogDriver()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CacheEngineVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getCacheParameterGroupFamily() != null)\r\n        sb.append(\"CacheParameterGroupFamily: \").append(getCacheParameterGroupFamily()).append(\",\");\r\n    if (getCacheEngineDescription() != null)\r\n        sb.append(\"CacheEngineDescription: \").append(getCacheEngineDescription()).append(\",\");\r\n    if (getCacheEngineVersionDescription() != null)\r\n        sb.append(\"CacheEngineVersionDescription: \").append(getCacheEngineVersionDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelConversionTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConversionTaskId() != null)\r\n        sb.append(\"ConversionTaskId: \").append(getConversionTaskId()).append(\",\");\r\n    if (getReasonMessage() != null)\r\n        sb.append(\"ReasonMessage: \").append(getReasonMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.BundleInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleTask() != null)\r\n        sb.append(\"BundleTask: \").append(getBundleTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.QueryResultPage.getConsumedCapacity",
	"Comment": "the capacity units consumed by an operation. the data returnedincludes the total provisioned throughput consumed, along withstatistics for the table and any indexes involved in the operation.consumedcapacity is only returned if the request asked for it.for more information, see provisionedthroughput in the amazon dynamodb developer guide.",
	"Method": "ConsumedCapacity getConsumedCapacity(){\r\n    return consumedCapacity;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withNumber",
	"Comment": "sets the value of the specified key in the current valuemap to thegiven value.",
	"Method": "ValueMap withNumber(String key,BigDecimal val,ValueMap withNumber,String key,Number val){\r\n    super.put(key, InternalUtils.toBigDecimal(val));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LicenseConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.HostProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCores() != null)\r\n        sb.append(\"Cores: \").append(getCores()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getSockets() != null)\r\n        sb.append(\"Sockets: \").append(getSockets()).append(\",\");\r\n    if (getTotalVCpus() != null)\r\n        sb.append(\"TotalVCpus: \").append(getTotalVCpus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeExportTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportTasks() != null)\r\n        sb.append(\"ExportTasks: \").append(getExportTasks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EnableTransitGatewayRouteTablePropagationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.createVpcPeeringConnectionAsync",
	"Comment": "simplified method form for invoking the createvpcpeeringconnection operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateVpcPeeringConnectionResult> createVpcPeeringConnectionAsync(CreateVpcPeeringConnectionRequest request,java.util.concurrent.Future<CreateVpcPeeringConnectionResult> createVpcPeeringConnectionAsync,CreateVpcPeeringConnectionRequest request,com.amazonaws.handlers.AsyncHandler<CreateVpcPeeringConnectionRequest, CreateVpcPeeringConnectionResult> asyncHandler,java.util.concurrent.Future<CreateVpcPeeringConnectionResult> createVpcPeeringConnectionAsync,java.util.concurrent.Future<CreateVpcPeeringConnectionResult> createVpcPeeringConnectionAsync,com.amazonaws.handlers.AsyncHandler<CreateVpcPeeringConnectionRequest, CreateVpcPeeringConnectionResult> asyncHandler){\r\n    return createVpcPeeringConnectionAsync(new CreateVpcPeeringConnectionRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.UpdateServiceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getService() != null)\r\n        sb.append(\"Service: \").append(getService()).append(\",\");\r\n    if (getDesiredCount() != null)\r\n        sb.append(\"DesiredCount: \").append(getDesiredCount()).append(\",\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition()).append(\",\");\r\n    if (getDeploymentConfiguration() != null)\r\n        sb.append(\"DeploymentConfiguration: \").append(getDeploymentConfiguration()).append(\",\");\r\n    if (getNetworkConfiguration() != null)\r\n        sb.append(\"NetworkConfiguration: \").append(getNetworkConfiguration()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getForceNewDeployment() != null)\r\n        sb.append(\"ForceNewDeployment: \").append(getForceNewDeployment()).append(\",\");\r\n    if (getHealthCheckGracePeriodSeconds() != null)\r\n        sb.append(\"HealthCheckGracePeriodSeconds: \").append(getHealthCheckGracePeriodSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.AutoScalingTargetTrackingScalingPolicyConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDisableScaleIn() != null)\r\n        sb.append(\"DisableScaleIn: \").append(getDisableScaleIn()).append(\",\");\r\n    if (getScaleInCooldown() != null)\r\n        sb.append(\"ScaleInCooldown: \").append(getScaleInCooldown()).append(\",\");\r\n    if (getScaleOutCooldown() != null)\r\n        sb.append(\"ScaleOutCooldown: \").append(getScaleOutCooldown()).append(\",\");\r\n    if (getTargetValue() != null)\r\n        sb.append(\"TargetValue: \").append(getTargetValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.describeCacheEngineVersions",
	"Comment": "returns a list of the available cache engines and their versions.",
	"Method": "DescribeCacheEngineVersionsResult describeCacheEngineVersions(DescribeCacheEngineVersionsRequest request,DescribeCacheEngineVersionsResult describeCacheEngineVersions){\r\n    return describeCacheEngineVersions(new DescribeCacheEngineVersionsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreditSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCpuCredits() != null)\r\n        sb.append(\"CpuCredits: \").append(getCpuCredits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.LayerFailure.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerDigest() != null)\r\n        sb.append(\"LayerDigest: \").append(getLayerDigest()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelExportTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportTaskId() != null)\r\n        sb.append(\"ExportTaskId: \").append(getExportTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.listTaskDefinitionsAsync",
	"Comment": "simplified method form for invoking the listtaskdefinitions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTaskDefinitionsResult> listTaskDefinitionsAsync(ListTaskDefinitionsRequest request,java.util.concurrent.Future<ListTaskDefinitionsResult> listTaskDefinitionsAsync,ListTaskDefinitionsRequest request,com.amazonaws.handlers.AsyncHandler<ListTaskDefinitionsRequest, ListTaskDefinitionsResult> asyncHandler,java.util.concurrent.Future<ListTaskDefinitionsResult> listTaskDefinitionsAsync,java.util.concurrent.Future<ListTaskDefinitionsResult> listTaskDefinitionsAsync,com.amazonaws.handlers.AsyncHandler<ListTaskDefinitionsRequest, ListTaskDefinitionsResult> asyncHandler){\r\n    return listTaskDefinitionsAsync(new ListTaskDefinitionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotMarketOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxPrice() != null)\r\n        sb.append(\"MaxPrice: \").append(getMaxPrice()).append(\",\");\r\n    if (getSpotInstanceType() != null)\r\n        sb.append(\"SpotInstanceType: \").append(getSpotInstanceType()).append(\",\");\r\n    if (getBlockDurationMinutes() != null)\r\n        sb.append(\"BlockDurationMinutes: \").append(getBlockDurationMinutes()).append(\",\");\r\n    if (getValidUntil() != null)\r\n        sb.append(\"ValidUntil: \").append(getValidUntil()).append(\",\");\r\n    if (getInstanceInterruptionBehavior() != null)\r\n        sb.append(\"InstanceInterruptionBehavior: \").append(getInstanceInterruptionBehavior());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteInternetGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.Action.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getTargetGroupArn() != null)\r\n        sb.append(\"TargetGroupArn: \").append(getTargetGroupArn()).append(\",\");\r\n    if (getAuthenticateOidcConfig() != null)\r\n        sb.append(\"AuthenticateOidcConfig: \").append(getAuthenticateOidcConfig()).append(\",\");\r\n    if (getAuthenticateCognitoConfig() != null)\r\n        sb.append(\"AuthenticateCognitoConfig: \").append(getAuthenticateCognitoConfig()).append(\",\");\r\n    if (getOrder() != null)\r\n        sb.append(\"Order: \").append(getOrder()).append(\",\");\r\n    if (getRedirectConfig() != null)\r\n        sb.append(\"RedirectConfig: \").append(getRedirectConfig()).append(\",\");\r\n    if (getFixedResponseConfig() != null)\r\n        sb.append(\"FixedResponseConfig: \").append(getFixedResponseConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateBlockDeviceMappingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getVirtualName() != null)\r\n        sb.append(\"VirtualName: \").append(getVirtualName()).append(\",\");\r\n    if (getEbs() != null)\r\n        sb.append(\"Ebs: \").append(getEbs()).append(\",\");\r\n    if (getNoDevice() != null)\r\n        sb.append(\"NoDevice: \").append(getNoDevice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Ipv6Range.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrIpv6() != null)\r\n        sb.append(\"CidrIpv6: \").append(getCidrIpv6()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeInstanceCreditSpecificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.PlatformDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getPlatformOwner() != null)\r\n        sb.append(\"PlatformOwner: \").append(getPlatformOwner()).append(\",\");\r\n    if (getPlatformName() != null)\r\n        sb.append(\"PlatformName: \").append(getPlatformName()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformStatus() != null)\r\n        sb.append(\"PlatformStatus: \").append(getPlatformStatus()).append(\",\");\r\n    if (getDateCreated() != null)\r\n        sb.append(\"DateCreated: \").append(getDateCreated()).append(\",\");\r\n    if (getDateUpdated() != null)\r\n        sb.append(\"DateUpdated: \").append(getDateUpdated()).append(\",\");\r\n    if (getPlatformCategory() != null)\r\n        sb.append(\"PlatformCategory: \").append(getPlatformCategory()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getMaintainer() != null)\r\n        sb.append(\"Maintainer: \").append(getMaintainer()).append(\",\");\r\n    if (getOperatingSystemName() != null)\r\n        sb.append(\"OperatingSystemName: \").append(getOperatingSystemName()).append(\",\");\r\n    if (getOperatingSystemVersion() != null)\r\n        sb.append(\"OperatingSystemVersion: \").append(getOperatingSystemVersion()).append(\",\");\r\n    if (getProgrammingLanguages() != null)\r\n        sb.append(\"ProgrammingLanguages: \").append(getProgrammingLanguages()).append(\",\");\r\n    if (getFrameworks() != null)\r\n        sb.append(\"Frameworks: \").append(getFrameworks()).append(\",\");\r\n    if (getCustomAmiList() != null)\r\n        sb.append(\"CustomAmiList: \").append(getCustomAmiList()).append(\",\");\r\n    if (getSupportedTierList() != null)\r\n        sb.append(\"SupportedTierList: \").append(getSupportedTierList()).append(\",\");\r\n    if (getSupportedAddonList() != null)\r\n        sb.append(\"SupportedAddonList: \").append(getSupportedAddonList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.SupportedEndpointType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngineName() != null)\r\n        sb.append(\"EngineName: \").append(getEngineName()).append(\",\");\r\n    if (getSupportsCDC() != null)\r\n        sb.append(\"SupportsCDC: \").append(getSupportsCDC()).append(\",\");\r\n    if (getEndpointType() != null)\r\n        sb.append(\"EndpointType: \").append(getEndpointType()).append(\",\");\r\n    if (getEngineDisplayName() != null)\r\n        sb.append(\"EngineDisplayName: \").append(getEngineDisplayName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateAddressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationId() != null)\r\n        sb.append(\"AllocationId: \").append(getAllocationId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp()).append(\",\");\r\n    if (getAllowReassociation() != null)\r\n        sb.append(\"AllowReassociation: \").append(getAllowReassociation()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.disassociateSubnetCidrBlock",
	"Comment": "disassociates a cidr block from a subnet. currently, you can disassociate an ipv6 cidr block only. you mustdetach or delete all gateways and resources that are associated with the cidr block before you can disassociateit.",
	"Method": "DisassociateSubnetCidrBlockResult disassociateSubnetCidrBlock(DisassociateSubnetCidrBlockRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateSubnetCidrBlock(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Storage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3() != null)\r\n        sb.append(\"S3: \").append(getS3());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.buildForScan",
	"Comment": "returns an expression specification for use in a scanrequest to dynamodb.",
	"Method": "ScanExpressionSpec buildForScan(){\r\n    return new ScanExpressionSpec(this);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.requestEnvironmentInfo",
	"Comment": "initiates a request to compile the specified type of information of the deployed environment.setting the infotype to tail compiles the last lines from the application server logfiles of every amazon ec2 instance in your environment.setting the infotype to bundle compresses the application server log files for everyamazon ec2 instance into a .zip file. legacy and .net containers do not support bundle logs.use retrieveenvironmentinfo to obtain the set of logs.related topicsretrieveenvironmentinfo",
	"Method": "RequestEnvironmentInfoResult requestEnvironmentInfo(RequestEnvironmentInfoRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRequestEnvironmentInfo(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.OptionRestrictionRegex.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPattern() != null)\r\n        sb.append(\"Pattern: \").append(getPattern()).append(\",\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateLaunchTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplate() != null)\r\n        sb.append(\"LaunchTemplate: \").append(getLaunchTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ReplicaSettingsUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName()).append(\",\");\r\n    if (getReplicaProvisionedReadCapacityUnits() != null)\r\n        sb.append(\"ReplicaProvisionedReadCapacityUnits: \").append(getReplicaProvisionedReadCapacityUnits()).append(\",\");\r\n    if (getReplicaProvisionedReadCapacityAutoScalingSettingsUpdate() != null)\r\n        sb.append(\"ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate: \").append(getReplicaProvisionedReadCapacityAutoScalingSettingsUpdate()).append(\",\");\r\n    if (getReplicaGlobalSecondaryIndexSettingsUpdate() != null)\r\n        sb.append(\"ReplicaGlobalSecondaryIndexSettingsUpdate: \").append(getReplicaGlobalSecondaryIndexSettingsUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.updateEnvironment",
	"Comment": "updates the environment description, deploys a new application version, updates the configuration settings to anentirely new configuration template, or updates select configuration option values in the running environment.attempting to update both the release and configuration is not allowed and aws elastic beanstalk returns aninvalidparametercombination error.when updating the configuration settings to a new template or individual settings, a draft configuration iscreated and describeconfigurationsettings for this environment returns two setting descriptions withdifferent deploymentstatus values.",
	"Method": "UpdateEnvironmentResult updateEnvironment(UpdateEnvironmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateEnvironment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.S3Link.uploadFrom",
	"Comment": "convenience method to synchronously upload from the given buffer to theamazon s3 object represented by this s3link.",
	"Method": "PutObjectResult uploadFrom(File source,PutObjectResult uploadFrom,File source,RequestMetricCollector requestMetricCollector,PutObjectResult uploadFrom,byte[] buffer,PutObjectResult uploadFrom,byte[] buffer,RequestMetricCollector requestMetricCollector){\r\n    return uploadFrom0(buffer, requestMetricCollector);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyHostsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoPlacement() != null)\r\n        sb.append(\"AutoPlacement: \").append(getAutoPlacement()).append(\",\");\r\n    if (getHostIds() != null)\r\n        sb.append(\"HostIds: \").append(getHostIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PurchaseHostReservationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getHostIdSet() != null)\r\n        sb.append(\"HostIdSet: \").append(getHostIdSet()).append(\",\");\r\n    if (getLimitPrice() != null)\r\n        sb.append(\"LimitPrice: \").append(getLimitPrice()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LoadPermissionModifications.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdd() != null)\r\n        sb.append(\"Add: \").append(getAdd()).append(\",\");\r\n    if (getRemove() != null)\r\n        sb.append(\"Remove: \").append(getRemove());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.putAccountSetting",
	"Comment": "modifies the arn and resource id format of a resource for a specified iam user, iam role, or the root user for anaccount. you can specify whether the new arn and resource id format are enabled for new resources that arecreated. enabling this setting is required to use new amazon ecs features such as resource tagging.",
	"Method": "PutAccountSettingResult putAccountSetting(PutAccountSettingRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutAccountSetting(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ConfigureShard.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodeGroupId() != null)\r\n        sb.append(\"NodeGroupId: \").append(getNodeGroupId()).append(\",\");\r\n    if (getNewReplicaCount() != null)\r\n        sb.append(\"NewReplicaCount: \").append(getNewReplicaCount()).append(\",\");\r\n    if (getPreferredAvailabilityZones() != null)\r\n        sb.append(\"PreferredAvailabilityZones: \").append(getPreferredAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateNetworkAclEntryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteRouteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeBundleTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleIds() != null)\r\n        sb.append(\"BundleIds: \").append(getBundleIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.CreateBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getBackupName() != null)\r\n        sb.append(\"BackupName: \").append(getBackupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.SystemStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCPUUtilization() != null)\r\n        sb.append(\"CPUUtilization: \").append(getCPUUtilization()).append(\",\");\r\n    if (getLoadAverage() != null)\r\n        sb.append(\"LoadAverage: \").append(getLoadAverage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetHostReservationPurchasePreviewRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostIdSet() != null)\r\n        sb.append(\"HostIdSet: \").append(getHostIdSet()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeReservedCacheNodesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedCacheNodeId() != null)\r\n        sb.append(\"ReservedCacheNodeId: \").append(getReservedCacheNodeId()).append(\",\");\r\n    if (getReservedCacheNodesOfferingId() != null)\r\n        sb.append(\"ReservedCacheNodesOfferingId: \").append(getReservedCacheNodesOfferingId()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateTagSpecificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.QueryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getSelect() != null)\r\n        sb.append(\"Select: \").append(getSelect()).append(\",\");\r\n    if (getAttributesToGet() != null)\r\n        sb.append(\"AttributesToGet: \").append(getAttributesToGet()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getConsistentRead() != null)\r\n        sb.append(\"ConsistentRead: \").append(getConsistentRead()).append(\",\");\r\n    if (getKeyConditions() != null)\r\n        sb.append(\"KeyConditions: \").append(getKeyConditions()).append(\",\");\r\n    if (getQueryFilter() != null)\r\n        sb.append(\"QueryFilter: \").append(getQueryFilter()).append(\",\");\r\n    if (getConditionalOperator() != null)\r\n        sb.append(\"ConditionalOperator: \").append(getConditionalOperator()).append(\",\");\r\n    if (getScanIndexForward() != null)\r\n        sb.append(\"ScanIndexForward: \").append(getScanIndexForward()).append(\",\");\r\n    if (getExclusiveStartKey() != null)\r\n        sb.append(\"ExclusiveStartKey: \").append(getExclusiveStartKey()).append(\",\");\r\n    if (getReturnConsumedCapacity() != null)\r\n        sb.append(\"ReturnConsumedCapacity: \").append(getReturnConsumedCapacity()).append(\",\");\r\n    if (getProjectionExpression() != null)\r\n        sb.append(\"ProjectionExpression: \").append(getProjectionExpression()).append(\",\");\r\n    if (getFilterExpression() != null)\r\n        sb.append(\"FilterExpression: \").append(getFilterExpression()).append(\",\");\r\n    if (getKeyConditionExpression() != null)\r\n        sb.append(\"KeyConditionExpression: \").append(getKeyConditionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames()).append(\",\");\r\n    if (getExpressionAttributeValues() != null)\r\n        sb.append(\"ExpressionAttributeValues: \").append(getExpressionAttributeValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.discoverPollEndpoint",
	"Comment": "this action is only used by the amazon ecs agent, and it is not intended for use outside of the agent.returns an endpoint for the amazon ecs agent to poll for updates.",
	"Method": "DiscoverPollEndpointResult discoverPollEndpoint(DiscoverPollEndpointRequest request,DiscoverPollEndpointResult discoverPollEndpoint){\r\n    return discoverPollEndpoint(new DiscoverPollEndpointRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateGlobalTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableName() != null)\r\n        sb.append(\"GlobalTableName: \").append(getGlobalTableName()).append(\",\");\r\n    if (getReplicaUpdates() != null)\r\n        sb.append(\"ReplicaUpdates: \").append(getReplicaUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVolumeStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVolumeStatuses() != null)\r\n        sb.append(\"VolumeStatuses: \").append(getVolumeStatuses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.PlatformFramework.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.QueryRequest.withExclusiveStartKey",
	"Comment": "the primary hash and range keys of the first item that this operation will evaluate. use the value that wasreturned for lastevaluatedkey in the previous operation.the data type for exclusivestartkey must be string, number or binary. no set data types are allowed.returns a reference to this object so that method calls can be chained together.",
	"Method": "QueryRequest withExclusiveStartKey(java.util.Map<String, AttributeValue> exclusiveStartKey,QueryRequest withExclusiveStartKey,java.util.Map.Entry<String, AttributeValue> hashKey,java.util.Map.Entry<String, AttributeValue> rangeKey){\r\n    setExclusiveStartKey(hashKey, rangeKey);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelSpotFleetRequestsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpotFleetRequestIds() != null)\r\n        sb.append(\"SpotFleetRequestIds: \").append(getSpotFleetRequestIds()).append(\",\");\r\n    if (getTerminateInstances() != null)\r\n        sb.append(\"TerminateInstances: \").append(getTerminateInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.LifecyclePolicyRuleAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CreateCacheSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSubnetGroupName() != null)\r\n        sb.append(\"CacheSubnetGroupName: \").append(getCacheSubnetGroupName()).append(\",\");\r\n    if (getCacheSubnetGroupDescription() != null)\r\n        sb.append(\"CacheSubnetGroupDescription: \").append(getCacheSubnetGroupDescription()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcEndpointServiceConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ConfirmProductInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResetFpgaImageAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActualBlockHourlyPrice() != null)\r\n        sb.append(\"ActualBlockHourlyPrice: \").append(getActualBlockHourlyPrice()).append(\",\");\r\n    if (getAvailabilityZoneGroup() != null)\r\n        sb.append(\"AvailabilityZoneGroup: \").append(getAvailabilityZoneGroup()).append(\",\");\r\n    if (getBlockDurationMinutes() != null)\r\n        sb.append(\"BlockDurationMinutes: \").append(getBlockDurationMinutes()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getFault() != null)\r\n        sb.append(\"Fault: \").append(getFault()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getLaunchGroup() != null)\r\n        sb.append(\"LaunchGroup: \").append(getLaunchGroup()).append(\",\");\r\n    if (getLaunchSpecification() != null)\r\n        sb.append(\"LaunchSpecification: \").append(getLaunchSpecification()).append(\",\");\r\n    if (getLaunchedAvailabilityZone() != null)\r\n        sb.append(\"LaunchedAvailabilityZone: \").append(getLaunchedAvailabilityZone()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getSpotInstanceRequestId() != null)\r\n        sb.append(\"SpotInstanceRequestId: \").append(getSpotInstanceRequestId()).append(\",\");\r\n    if (getSpotPrice() != null)\r\n        sb.append(\"SpotPrice: \").append(getSpotPrice()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValidFrom() != null)\r\n        sb.append(\"ValidFrom: \").append(getValidFrom()).append(\",\");\r\n    if (getValidUntil() != null)\r\n        sb.append(\"ValidUntil: \").append(getValidUntil()).append(\",\");\r\n    if (getInstanceInterruptionBehavior() != null)\r\n        sb.append(\"InstanceInterruptionBehavior: \").append(getInstanceInterruptionBehavior());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeReservedInstancesModifications",
	"Comment": "describes the modifications made to your reserved instances. if no parameter is specified, information about allyour reserved instances modification requests is returned. if a modification id is specified, only informationabout the specific modification is returned.for more information, see modifying reserved instances inthe amazon elastic compute cloud user guide.",
	"Method": "DescribeReservedInstancesModificationsResult describeReservedInstancesModifications(DescribeReservedInstancesModificationsRequest request,DescribeReservedInstancesModificationsResult describeReservedInstancesModifications){\r\n    return describeReservedInstancesModifications(new DescribeReservedInstancesModificationsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.SSESpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getSSEType() != null)\r\n        sb.append(\"SSEType: \").append(getSSEType()).append(\",\");\r\n    if (getKMSMasterKeyId() != null)\r\n        sb.append(\"KMSMasterKeyId: \").append(getKMSMasterKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.AmazonEKSClient.describeCluster",
	"Comment": "returns descriptive information about an amazon eks cluster.the api server endpoint and certificate authority data returned by this operation are required forkubelet and kubectl to communicate with your kubernetes api server. for moreinformation, see create akubeconfig for amazon eks.the api server endpoint and certificate authority data are not available until the cluster reaches theactive state.",
	"Method": "DescribeClusterResult describeCluster(DescribeClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ApplyEnvironmentManagedActionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getActionId() != null)\r\n        sb.append(\"ActionId: \").append(getActionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonecr using the current builder configuration.",
	"Method": "AmazonECR build(AwsSyncClientParams params){\r\n    return new AmazonECRClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.deleteCacheParameterGroup",
	"Comment": "deletes the specified cache parameter group. you cannot delete a cache parameter group if it is associated withany cache clusters.",
	"Method": "DeleteCacheParameterGroupResult deleteCacheParameterGroup(DeleteCacheParameterGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteCacheParameterGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCacheNodeTypeSpecificParameters() != null)\r\n        sb.append(\"CacheNodeTypeSpecificParameters: \").append(getCacheNodeTypeSpecificParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.AmazonEKSClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Update.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getUpdateExpression() != null)\r\n        sb.append(\"UpdateExpression: \").append(getUpdateExpression()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getConditionExpression() != null)\r\n        sb.append(\"ConditionExpression: \").append(getConditionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames()).append(\",\");\r\n    if (getExpressionAttributeValues() != null)\r\n        sb.append(\"ExpressionAttributeValues: \").append(getExpressionAttributeValues()).append(\",\");\r\n    if (getReturnValuesOnConditionCheckFailure() != null)\r\n        sb.append(\"ReturnValuesOnConditionCheckFailure: \").append(getReturnValuesOnConditionCheckFailure());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.volumeAvailable",
	"Comment": "builds a volumeavailable waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVolumesRequest> volumeAvailable(){\r\n    return new WaiterBuilder<DescribeVolumesRequest, DescribeVolumesResult>().withSdkFunction(new DescribeVolumesFunction(client)).withAcceptors(new VolumeAvailable.IsAvailableMatcher(), new VolumeAvailable.IsDeletedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotFleetInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSpotFleetRequestId() != null)\r\n        sb.append(\"SpotFleetRequestId: \").append(getSpotFleetRequestId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeTargetGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroups() != null)\r\n        sb.append(\"TargetGroups: \").append(getTargetGroups()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.UpdateContainerInstancesStateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getContainerInstances() != null)\r\n        sb.append(\"ContainerInstances: \").append(getContainerInstances()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.scanAsync",
	"Comment": "simplified method form for invoking the scan operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ScanResult> scanAsync(ScanRequest request,java.util.concurrent.Future<ScanResult> scanAsync,ScanRequest request,com.amazonaws.handlers.AsyncHandler<ScanRequest, ScanResult> asyncHandler,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.List<String> attributesToGet,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.List<String> attributesToGet,com.amazonaws.handlers.AsyncHandler<ScanRequest, ScanResult> asyncHandler,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.Map<String, Condition> scanFilter,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.Map<String, Condition> scanFilter,com.amazonaws.handlers.AsyncHandler<ScanRequest, ScanResult> asyncHandler,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.List<String> attributesToGet,java.util.Map<String, Condition> scanFilter,java.util.concurrent.Future<ScanResult> scanAsync,String tableName,java.util.List<String> attributesToGet,java.util.Map<String, Condition> scanFilter,com.amazonaws.handlers.AsyncHandler<ScanRequest, ScanResult> asyncHandler){\r\n    return scanAsync(new ScanRequest().withTableName(tableName).withAttributesToGet(attributesToGet).withScanFilter(scanFilter), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TimeToLiveSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.LoadBalancerDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getDNSName() != null)\r\n        sb.append(\"DNSName: \").append(getDNSName()).append(\",\");\r\n    if (getCanonicalHostedZoneName() != null)\r\n        sb.append(\"CanonicalHostedZoneName: \").append(getCanonicalHostedZoneName()).append(\",\");\r\n    if (getCanonicalHostedZoneNameID() != null)\r\n        sb.append(\"CanonicalHostedZoneNameID: \").append(getCanonicalHostedZoneNameID()).append(\",\");\r\n    if (getListenerDescriptions() != null)\r\n        sb.append(\"ListenerDescriptions: \").append(getListenerDescriptions()).append(\",\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies()).append(\",\");\r\n    if (getBackendServerDescriptions() != null)\r\n        sb.append(\"BackendServerDescriptions: \").append(getBackendServerDescriptions()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getVPCId() != null)\r\n        sb.append(\"VPCId: \").append(getVPCId()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getHealthCheck() != null)\r\n        sb.append(\"HealthCheck: \").append(getHealthCheck()).append(\",\");\r\n    if (getSourceSecurityGroup() != null)\r\n        sb.append(\"SourceSecurityGroup: \").append(getSourceSecurityGroup()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getCreatedTime() != null)\r\n        sb.append(\"CreatedTime: \").append(getCreatedTime()).append(\",\");\r\n    if (getScheme() != null)\r\n        sb.append(\"Scheme: \").append(getScheme());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateCapacityReservationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getInstancePlatform() != null)\r\n        sb.append(\"InstancePlatform: \").append(getInstancePlatform()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getTenancy() != null)\r\n        sb.append(\"Tenancy: \").append(getTenancy()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getEphemeralStorage() != null)\r\n        sb.append(\"EphemeralStorage: \").append(getEphemeralStorage()).append(\",\");\r\n    if (getEndDate() != null)\r\n        sb.append(\"EndDate: \").append(getEndDate()).append(\",\");\r\n    if (getEndDateType() != null)\r\n        sb.append(\"EndDateType: \").append(getEndDateType()).append(\",\");\r\n    if (getInstanceMatchCriteria() != null)\r\n        sb.append(\"InstanceMatchCriteria: \").append(getInstanceMatchCriteria()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpcEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcEndpointType() != null)\r\n        sb.append(\"VpcEndpointType: \").append(getVpcEndpointType()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getRouteTableIds() != null)\r\n        sb.append(\"RouteTableIds: \").append(getRouteTableIds()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getPrivateDnsEnabled() != null)\r\n        sb.append(\"PrivateDnsEnabled: \").append(getPrivateDnsEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ComposeEnvironmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getVersionLabels() != null)\r\n        sb.append(\"VersionLabels: \").append(getVersionLabels());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.ModifyListenerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListeners() != null)\r\n        sb.append(\"Listeners: \").append(getListeners());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonecrasync using the current builder configuration.",
	"Method": "AmazonECRAsync build(AwsAsyncClientParams params){\r\n    return new AmazonECRAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribePlacementGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacementGroups() != null)\r\n        sb.append(\"PlacementGroups: \").append(getPlacementGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createVpcEndpointConnectionNotification",
	"Comment": "creates a connection notification for a specified vpc endpoint or vpc endpoint service. a connection notificationnotifies you of specific endpoint events. you must create an sns topic to receive notifications. for moreinformation, see create a topic in theamazon simple notification service developer guide.you can create a connection notification for interface endpoints only.",
	"Method": "CreateVpcEndpointConnectionNotificationResult createVpcEndpointConnectionNotification(CreateVpcEndpointConnectionNotificationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateVpcEndpointConnectionNotification(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DeleteLifecyclePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getLifecyclePolicyText() != null)\r\n        sb.append(\"LifecyclePolicyText: \").append(getLifecyclePolicyText()).append(\",\");\r\n    if (getLastEvaluatedAt() != null)\r\n        sb.append(\"LastEvaluatedAt: \").append(getLastEvaluatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DeleteEnvironmentConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateAddressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeInstances",
	"Comment": "describes one or more of your instances.if you specify one or more instance ids, amazon ec2 returns information for those instances. if you do notspecify instance ids, amazon ec2 returns information for all relevant instances. if you specify an instance idthat is not valid, an error is returned. if you specify an instance that you do not own, it is not included inthe returned results.recently terminated instances might appear in the returned results. this interval is usually less than one hour.if you describe instances in the rare case where an availability zone is experiencing a service disruption andyou specify instance ids that are in the affected zone, or do not specify any instance ids at all, the callfails. if you describe instances and specify only instance ids that are in an unaffected zone, the call worksnormally.",
	"Method": "DescribeInstancesResult describeInstances(DescribeInstancesRequest request,DescribeInstancesResult describeInstances){\r\n    return describeInstances(new DescribeInstancesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SnapshotTaskDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDiskImageSize() != null)\r\n        sb.append(\"DiskImageSize: \").append(getDiskImageSize()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getProgress() != null)\r\n        sb.append(\"Progress: \").append(getProgress()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getUserBucket() != null)\r\n        sb.append(\"UserBucket: \").append(getUserBucket());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.removeTagsFromResource",
	"Comment": "removes the tags identified by the tagkeys list from the named resource.",
	"Method": "RemoveTagsFromResourceResult removeTagsFromResource(RemoveTagsFromResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveTagsFromResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PropagatingVgw.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayId() != null)\r\n        sb.append(\"GatewayId: \").append(getGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.HistoryRecordEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventInformation() != null)\r\n        sb.append(\"EventInformation: \").append(getEventInformation()).append(\",\");\r\n    if (getEventType() != null)\r\n        sb.append(\"EventType: \").append(getEventType()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.InitiateLayerUploadRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.describeSnapshotsAsync",
	"Comment": "simplified method form for invoking the describesnapshots operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync(DescribeSnapshotsRequest request,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,DescribeSnapshotsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotsRequest, DescribeSnapshotsResult> asyncHandler,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,java.util.concurrent.Future<DescribeSnapshotsResult> describeSnapshotsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotsRequest, DescribeSnapshotsResult> asyncHandler){\r\n    return describeSnapshotsAsync(new DescribeSnapshotsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.deleteTableAsync",
	"Comment": "simplified method form for invoking the deletetable operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DeleteTableResult> deleteTableAsync(DeleteTableRequest request,java.util.concurrent.Future<DeleteTableResult> deleteTableAsync,DeleteTableRequest request,com.amazonaws.handlers.AsyncHandler<DeleteTableRequest, DeleteTableResult> asyncHandler,java.util.concurrent.Future<DeleteTableResult> deleteTableAsync,String tableName,java.util.concurrent.Future<DeleteTableResult> deleteTableAsync,String tableName,com.amazonaws.handlers.AsyncHandler<DeleteTableRequest, DeleteTableResult> asyncHandler){\r\n    return deleteTableAsync(new DeleteTableRequest().withTableName(tableName), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.createTargetGroup",
	"Comment": "creates a target group.to register targets with the target group, use registertargets. to update the health check settings forthe target group, use modifytargetgroup. to monitor the health of targets in the target group, usedescribetargethealth.to route traffic to the targets in a target group, specify the target group in an action usingcreatelistener or createrule.to delete a target group, use deletetargetgroup.this operation is idempotent, which means that it completes at most one time. if you attempt to create multipletarget groups with the same settings, each call succeeds.for more information, see targetgroups for your application load balancers in the application load balancers guide or targetgroups for your network load balancers in the network load balancers guide.",
	"Method": "CreateTargetGroupResult createTargetGroup(CreateTargetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateTargetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper.newTableMapper",
	"Comment": "creates a new table mapper using this mapper to perform operations.",
	"Method": "DynamoDBTableMapper<T, H, R> newTableMapper(Class<T> clazz){\r\n    DynamoDBMapperConfig config = mergeConfig(null);\r\n    return new DynamoDBTableMapper<T, H, R>(this.db, this, config, getTableModel(clazz, config));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateLicenseConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeRegionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getRegionNames() != null)\r\n        sb.append(\"RegionNames: \").append(getRegionNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.StartReplicationTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationTask() != null)\r\n        sb.append(\"ReplicationTask: \").append(getReplicationTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.util.TableUtils.createTableIfNotExists",
	"Comment": "creates the table and ignores any errors if it already exists.",
	"Method": "boolean createTableIfNotExists(AmazonDynamoDB dynamo,CreateTableRequest createTableRequest){\r\n    try {\r\n        dynamo.createTable(createTableRequest);\r\n        return true;\r\n    } catch (final ResourceInUseException e) {\r\n        if (LOG.isTraceEnabled()) {\r\n            LOG.trace(\"Table \" + createTableRequest.getTableName() + \" already exists\", e);\r\n        }\r\n    }\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcEndpointServicePermissionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturnValue() != null)\r\n        sb.append(\"ReturnValue: \").append(getReturnValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetLaunchTemplateDataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayRouteTablePropagation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ItemCollectionMetrics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItemCollectionKey() != null)\r\n        sb.append(\"ItemCollectionKey: \").append(getItemCollectionKey()).append(\",\");\r\n    if (getSizeEstimateRangeGB() != null)\r\n        sb.append(\"SizeEstimateRangeGB: \").append(getSizeEstimateRangeGB());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.getInt",
	"Comment": "returns the value of the specified attribute in the current item as anint.",
	"Method": "int getInt(String attrName){\r\n    BigDecimal bd = getNumber(attrName);\r\n    if (bd == null)\r\n        throw new NumberFormatException(\"value of \" + attrName + \" is null\");\r\n    return bd.intValue();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteLaunchTemplateVersionsResponseErrorItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber()).append(\",\");\r\n    if (getResponseError() != null)\r\n        sb.append(\"ResponseError: \").append(getResponseError());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.SlotMigration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressPercentage() != null)\r\n        sb.append(\"ProgressPercentage: \").append(getProgressPercentage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.BatchWriteItemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedItems() != null)\r\n        sb.append(\"UnprocessedItems: \").append(getUnprocessedItems()).append(\",\");\r\n    if (getItemCollectionMetrics() != null)\r\n        sb.append(\"ItemCollectionMetrics: \").append(getItemCollectionMetrics()).append(\",\");\r\n    if (getConsumedCapacity() != null)\r\n        sb.append(\"ConsumedCapacity: \").append(getConsumedCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.internal.Filter.le",
	"Comment": "creates and returns a condition of the range key being less than or equalto the given value.",
	"Method": "T le(Object val){\r\n    return _withComparisonOperator(ComparisonOperator.LE)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportInstanceTaskDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getVolumes() != null)\r\n        sb.append(\"Volumes: \").append(getVolumes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.deleteCacheSubnetGroup",
	"Comment": "deletes a cache subnet group.you cannot delete a cache subnet group if it is associated with any clusters.",
	"Method": "DeleteCacheSubnetGroupResult deleteCacheSubnetGroup(DeleteCacheSubnetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteCacheSubnetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.AmazonEKSAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ExportToS3Task.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerFormat() != null)\r\n        sb.append(\"ContainerFormat: \").append(getContainerFormat()).append(\",\");\r\n    if (getDiskImageFormat() != null)\r\n        sb.append(\"DiskImageFormat: \").append(getDiskImageFormat()).append(\",\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Key() != null)\r\n        sb.append(\"S3Key: \").append(getS3Key());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeTransitGateways",
	"Comment": "describes one or more transit gateways. by default, all transit gateways are described. alternatively, you canfilter the results.",
	"Method": "DescribeTransitGatewaysResult describeTransitGateways(DescribeTransitGatewaysRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTransitGateways(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.deleteLoadBalancerPolicy",
	"Comment": "deletes the specified policy from the specified load balancer. this policy must not be enabled for any listeners.",
	"Method": "DeleteLoadBalancerPolicyResult deleteLoadBalancerPolicy(DeleteLoadBalancerPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLoadBalancerPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SuccessfulInstanceCreditSpecificationItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.KeysAndAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeys() != null)\r\n        sb.append(\"Keys: \").append(getKeys()).append(\",\");\r\n    if (getAttributesToGet() != null)\r\n        sb.append(\"AttributesToGet: \").append(getAttributesToGet()).append(\",\");\r\n    if (getConsistentRead() != null)\r\n        sb.append(\"ConsistentRead: \").append(getConsistentRead()).append(\",\");\r\n    if (getProjectionExpression() != null)\r\n        sb.append(\"ProjectionExpression: \").append(getProjectionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisableVpcClassicLinkRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.BatchGetImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getImageIds() != null)\r\n        sb.append(\"ImageIds: \").append(getImageIds()).append(\",\");\r\n    if (getAcceptedMediaTypes() != null)\r\n        sb.append(\"AcceptedMediaTypes: \").append(getAcceptedMediaTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.StaleSecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getStaleIpPermissions() != null)\r\n        sb.append(\"StaleIpPermissions: \").append(getStaleIpPermissions()).append(\",\");\r\n    if (getStaleIpPermissionsEgress() != null)\r\n        sb.append(\"StaleIpPermissionsEgress: \").append(getStaleIpPermissionsEgress()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpnConnection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomerGatewayConfiguration() != null)\r\n        sb.append(\"CustomerGatewayConfiguration: \").append(getCustomerGatewayConfiguration()).append(\",\");\r\n    if (getCustomerGatewayId() != null)\r\n        sb.append(\"CustomerGatewayId: \").append(getCustomerGatewayId()).append(\",\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getVpnConnectionId() != null)\r\n        sb.append(\"VpnConnectionId: \").append(getVpnConnectionId()).append(\",\");\r\n    if (getVpnGatewayId() != null)\r\n        sb.append(\"VpnGatewayId: \").append(getVpnGatewayId()).append(\",\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getRoutes() != null)\r\n        sb.append(\"Routes: \").append(getRoutes()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVgwTelemetry() != null)\r\n        sb.append(\"VgwTelemetry: \").append(getVgwTelemetry());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ParameterNameValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterName() != null)\r\n        sb.append(\"ParameterName: \").append(getParameterName()).append(\",\");\r\n    if (getParameterValue() != null)\r\n        sb.append(\"ParameterValue: \").append(getParameterValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AuthorizeSecurityGroupIngressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrIp() != null)\r\n        sb.append(\"CidrIp: \").append(getCidrIp()).append(\",\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getIpPermissions() != null)\r\n        sb.append(\"IpPermissions: \").append(getIpPermissions()).append(\",\");\r\n    if (getIpProtocol() != null)\r\n        sb.append(\"IpProtocol: \").append(getIpProtocol()).append(\",\");\r\n    if (getSourceSecurityGroupName() != null)\r\n        sb.append(\"SourceSecurityGroupName: \").append(getSourceSecurityGroupName()).append(\",\");\r\n    if (getSourceSecurityGroupOwnerId() != null)\r\n        sb.append(\"SourceSecurityGroupOwnerId: \").append(getSourceSecurityGroupOwnerId()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AbstractAWSElasticBeanstalkAsync.createStorageLocationAsync",
	"Comment": "simplified method form for invoking the createstoragelocation operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateStorageLocationResult> createStorageLocationAsync(CreateStorageLocationRequest request,java.util.concurrent.Future<CreateStorageLocationResult> createStorageLocationAsync,CreateStorageLocationRequest request,com.amazonaws.handlers.AsyncHandler<CreateStorageLocationRequest, CreateStorageLocationResult> asyncHandler,java.util.concurrent.Future<CreateStorageLocationResult> createStorageLocationAsync,java.util.concurrent.Future<CreateStorageLocationResult> createStorageLocationAsync,com.amazonaws.handlers.AsyncHandler<CreateStorageLocationRequest, CreateStorageLocationResult> asyncHandler){\r\n    return createStorageLocationAsync(new CreateStorageLocationRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.allocateAddressAsync",
	"Comment": "simplified method form for invoking the allocateaddress operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<AllocateAddressResult> allocateAddressAsync(AllocateAddressRequest request,java.util.concurrent.Future<AllocateAddressResult> allocateAddressAsync,AllocateAddressRequest request,com.amazonaws.handlers.AsyncHandler<AllocateAddressRequest, AllocateAddressResult> asyncHandler,java.util.concurrent.Future<AllocateAddressResult> allocateAddressAsync,java.util.concurrent.Future<AllocateAddressResult> allocateAddressAsync,com.amazonaws.handlers.AsyncHandler<AllocateAddressRequest, AllocateAddressResult> asyncHandler){\r\n    return allocateAddressAsync(new AllocateAddressRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.DescribeClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceIamInstanceProfileAssociationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.internal.Filter.lt",
	"Comment": "creates and returns a condition of the range key being less than thegiven value.",
	"Method": "T lt(Object val){\r\n    return _withComparisonOperator(ComparisonOperator.LT)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.Condition.or",
	"Comment": "returns a new condition based on the disjunction of the current conditionand the given condition.",
	"Method": "OrCondition or(Condition that){\r\n    return new OrCondition(this, that.atomic() ? that : _(that));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getTransitGatewayOwnerId() != null)\r\n        sb.append(\"TransitGatewayOwnerId: \").append(getTransitGatewayOwnerId()).append(\",\");\r\n    if (getResourceOwnerId() != null)\r\n        sb.append(\"ResourceOwnerId: \").append(getResourceOwnerId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getAssociation() != null)\r\n        sb.append(\"Association: \").append(getAssociation()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AllocateAddressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp()).append(\",\");\r\n    if (getAllocationId() != null)\r\n        sb.append(\"AllocationId: \").append(getAllocationId()).append(\",\");\r\n    if (getPublicIpv4Pool() != null)\r\n        sb.append(\"PublicIpv4Pool: \").append(getPublicIpv4Pool()).append(\",\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AcceptVpcPeeringConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcPeeringConnection() != null)\r\n        sb.append(\"VpcPeeringConnection: \").append(getVpcPeeringConnection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withStringSet",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withStringSet(String attrName,Set<String> val,Item withStringSet,String attrName,String val){\r\n    checkInvalidAttribute(attrName, val);\r\n    Set<String> strSet = new LinkedHashSet<String>(Arrays.asList(val));\r\n    if (strSet.size() != val.length)\r\n        throw new IllegalArgumentException(DUPLICATE_VALUES_FOUND_IN_INPUT);\r\n    attributes.put(attrName, strSet);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DescribeClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusters() != null)\r\n        sb.append(\"Clusters: \").append(getClusters()).append(\",\");\r\n    if (getInclude() != null)\r\n        sb.append(\"Include: \").append(getInclude());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.acceptVpcPeeringConnectionAsync",
	"Comment": "simplified method form for invoking the acceptvpcpeeringconnection operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<AcceptVpcPeeringConnectionResult> acceptVpcPeeringConnectionAsync(AcceptVpcPeeringConnectionRequest request,java.util.concurrent.Future<AcceptVpcPeeringConnectionResult> acceptVpcPeeringConnectionAsync,AcceptVpcPeeringConnectionRequest request,com.amazonaws.handlers.AsyncHandler<AcceptVpcPeeringConnectionRequest, AcceptVpcPeeringConnectionResult> asyncHandler,java.util.concurrent.Future<AcceptVpcPeeringConnectionResult> acceptVpcPeeringConnectionAsync,java.util.concurrent.Future<AcceptVpcPeeringConnectionResult> acceptVpcPeeringConnectionAsync,com.amazonaws.handlers.AsyncHandler<AcceptVpcPeeringConnectionRequest, AcceptVpcPeeringConnectionResult> asyncHandler){\r\n    return acceptVpcPeeringConnectionAsync(new AcceptVpcPeeringConnectionRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.TerminateEnvironmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getTerminateResources() != null)\r\n        sb.append(\"TerminateResources: \").append(getTerminateResources()).append(\",\");\r\n    if (getForceTerminate() != null)\r\n        sb.append(\"ForceTerminate: \").append(getForceTerminate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateFlowLogsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getFlowLogIds() != null)\r\n        sb.append(\"FlowLogIds: \").append(getFlowLogIds()).append(\",\");\r\n    if (getUnsuccessful() != null)\r\n        sb.append(\"Unsuccessful: \").append(getUnsuccessful());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.batchCheckLayerAvailability",
	"Comment": "check the availability of multiple image layers in a specified registry and repository.this operation is used by the amazon ecr proxy, and it is not intended for general use by customers for pullingand pushing images. in most cases, you should use the docker cli to pull, tag, and push images.",
	"Method": "BatchCheckLayerAvailabilityResult batchCheckLayerAvailability(BatchCheckLayerAvailabilityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeBatchCheckLayerAvailability(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.BuildConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArtifactName() != null)\r\n        sb.append(\"ArtifactName: \").append(getArtifactName()).append(\",\");\r\n    if (getCodeBuildServiceRole() != null)\r\n        sb.append(\"CodeBuildServiceRole: \").append(getCodeBuildServiceRole()).append(\",\");\r\n    if (getComputeType() != null)\r\n        sb.append(\"ComputeType: \").append(getComputeType()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getTimeoutInMinutes() != null)\r\n        sb.append(\"TimeoutInMinutes: \").append(getTimeoutInMinutes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateSubnetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnet() != null)\r\n        sb.append(\"Subnet: \").append(getSubnet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.PutAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient.describeLoadBalancerPoliciesAsync",
	"Comment": "simplified method form for invoking the describeloadbalancerpolicies operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeLoadBalancerPoliciesResult> describeLoadBalancerPoliciesAsync(DescribeLoadBalancerPoliciesRequest request,java.util.concurrent.Future<DescribeLoadBalancerPoliciesResult> describeLoadBalancerPoliciesAsync,DescribeLoadBalancerPoliciesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancerPoliciesRequest, DescribeLoadBalancerPoliciesResult> asyncHandler,java.util.concurrent.Future<DescribeLoadBalancerPoliciesResult> describeLoadBalancerPoliciesAsync,java.util.concurrent.Future<DescribeLoadBalancerPoliciesResult> describeLoadBalancerPoliciesAsync,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancerPoliciesRequest, DescribeLoadBalancerPoliciesResult> asyncHandler){\r\n    return describeLoadBalancerPoliciesAsync(new DescribeLoadBalancerPoliciesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.OptionSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getOptionName() != null)\r\n        sb.append(\"OptionName: \").append(getOptionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.BackupSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getTableId() != null)\r\n        sb.append(\"TableId: \").append(getTableId()).append(\",\");\r\n    if (getTableArn() != null)\r\n        sb.append(\"TableArn: \").append(getTableArn()).append(\",\");\r\n    if (getBackupArn() != null)\r\n        sb.append(\"BackupArn: \").append(getBackupArn()).append(\",\");\r\n    if (getBackupName() != null)\r\n        sb.append(\"BackupName: \").append(getBackupName()).append(\",\");\r\n    if (getBackupCreationDateTime() != null)\r\n        sb.append(\"BackupCreationDateTime: \").append(getBackupCreationDateTime()).append(\",\");\r\n    if (getBackupExpiryDateTime() != null)\r\n        sb.append(\"BackupExpiryDateTime: \").append(getBackupExpiryDateTime()).append(\",\");\r\n    if (getBackupStatus() != null)\r\n        sb.append(\"BackupStatus: \").append(getBackupStatus()).append(\",\");\r\n    if (getBackupType() != null)\r\n        sb.append(\"BackupType: \").append(getBackupType()).append(\",\");\r\n    if (getBackupSizeBytes() != null)\r\n        sb.append(\"BackupSizeBytes: \").append(getBackupSizeBytes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.AbortEnvironmentUpdateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeSnapshotAttribute",
	"Comment": "describes the specified attribute of the specified snapshot. you can specify only one attribute at a time.for more information about ebs snapshots, see amazon ebs snapshots in theamazon elastic compute cloud user guide.",
	"Method": "DescribeSnapshotAttributeResult describeSnapshotAttribute(DescribeSnapshotAttributeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSnapshotAttribute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.deleteAttributes",
	"Comment": "deletes one or more custom attributes from an amazon ecs resource.",
	"Method": "DeleteAttributesResult deleteAttributes(DeleteAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeBundleTasks",
	"Comment": "describes one or more of your bundling tasks.completed bundle tasks are listed for only a limited time. if your bundle task is no longer in the list, you canstill register an ami from it. just use registerimage with the amazon s3 bucket name and imagemanifest name you provided to the bundle task.",
	"Method": "DescribeBundleTasksResult describeBundleTasks(DescribeBundleTasksRequest request,DescribeBundleTasksResult describeBundleTasks){\r\n    return describeBundleTasks(new DescribeBundleTasksRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.SourceBuildInformation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getSourceRepository() != null)\r\n        sb.append(\"SourceRepository: \").append(getSourceRepository()).append(\",\");\r\n    if (getSourceLocation() != null)\r\n        sb.append(\"SourceLocation: \").append(getSourceLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PrivateIpAddressSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrimary() != null)\r\n        sb.append(\"Primary: \").append(getPrimary()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getVolume() != null)\r\n        sb.append(\"Volume: \").append(getVolume());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AbstractAWSElasticBeanstalkAsync.describeApplicationsAsync",
	"Comment": "simplified method form for invoking the describeapplications operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeApplicationsResult> describeApplicationsAsync(DescribeApplicationsRequest request,java.util.concurrent.Future<DescribeApplicationsResult> describeApplicationsAsync,DescribeApplicationsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeApplicationsRequest, DescribeApplicationsResult> asyncHandler,java.util.concurrent.Future<DescribeApplicationsResult> describeApplicationsAsync,java.util.concurrent.Future<DescribeApplicationsResult> describeApplicationsAsync,com.amazonaws.handlers.AsyncHandler<DescribeApplicationsRequest, DescribeApplicationsResult> asyncHandler){\r\n    return describeApplicationsAsync(new DescribeApplicationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.listAccountSettings",
	"Comment": "lists the account settings for an amazon ecs resource for a specified principal.",
	"Method": "ListAccountSettingsResult listAccountSettings(ListAccountSettingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListAccountSettings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceStateChange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrentState() != null)\r\n        sb.append(\"CurrentState: \").append(getCurrentState()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getPreviousState() != null)\r\n        sb.append(\"PreviousState: \").append(getPreviousState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.associateIamInstanceProfile",
	"Comment": "associates an iam instance profile with a running or stopped instance. you cannot associate more than one iaminstance profile with an instance.",
	"Method": "AssociateIamInstanceProfileResult associateIamInstanceProfile(AssociateIamInstanceProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAssociateIamInstanceProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.waiters.AmazonECSWaiters.tasksStopped",
	"Comment": "builds a tasksstopped waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeTasksRequest> tasksStopped(){\r\n    return new WaiterBuilder<DescribeTasksRequest, DescribeTasksResult>().withSdkFunction(new DescribeTasksFunction(client)).withAcceptors(new TasksStopped.IsSTOPPEDMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(100), new FixedDelayStrategy(6))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.PutImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.describeRules",
	"Comment": "describes the specified rules or the rules for the specified listener. you must specify either a listener or oneor more rules.",
	"Method": "DescribeRulesResult describeRules(DescribeRulesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeRules(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazondynamodb using the current builder configuration.",
	"Method": "AmazonDynamoDB build(AwsSyncClientParams params){\r\n    if (endpointDiscoveryEnabled() && getEndpoint() == null) {\r\n        return new AmazonDynamoDBClient(params, true);\r\n    }\r\n    return new AmazonDynamoDBClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeImagesAsync",
	"Comment": "simplified method form for invoking the describeimages operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeImagesResult> describeImagesAsync(DescribeImagesRequest request,java.util.concurrent.Future<DescribeImagesResult> describeImagesAsync,DescribeImagesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeImagesRequest, DescribeImagesResult> asyncHandler,java.util.concurrent.Future<DescribeImagesResult> describeImagesAsync,java.util.concurrent.Future<DescribeImagesResult> describeImagesAsync,com.amazonaws.handlers.AsyncHandler<DescribeImagesRequest, DescribeImagesResult> asyncHandler){\r\n    return describeImagesAsync(new DescribeImagesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AvailableCapacity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailableInstanceCapacity() != null)\r\n        sb.append(\"AvailableInstanceCapacity: \").append(getAvailableInstanceCapacity()).append(\",\");\r\n    if (getAvailableVCpus() != null)\r\n        sb.append(\"AvailableVCpus: \").append(getAvailableVCpus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeVpcsAsync",
	"Comment": "simplified method form for invoking the describevpcs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpcsResult> describeVpcsAsync(DescribeVpcsRequest request,java.util.concurrent.Future<DescribeVpcsResult> describeVpcsAsync,DescribeVpcsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpcsRequest, DescribeVpcsResult> asyncHandler,java.util.concurrent.Future<DescribeVpcsResult> describeVpcsAsync,java.util.concurrent.Future<DescribeVpcsResult> describeVpcsAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpcsRequest, DescribeVpcsResult> asyncHandler){\r\n    return describeVpcsAsync(new DescribeVpcsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.setIpAddressType",
	"Comment": "sets the type of ip addresses used by the subnets of the specified application load balancer or network loadbalancer.network load balancers must use ipv4.",
	"Method": "SetIpAddressTypeResult setIpAddressType(SetIpAddressTypeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSetIpAddressType(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ReshardingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodeGroupId() != null)\r\n        sb.append(\"NodeGroupId: \").append(getNodeGroupId()).append(\",\");\r\n    if (getPreferredAvailabilityZones() != null)\r\n        sb.append(\"PreferredAvailabilityZones: \").append(getPreferredAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Failure.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteCustomerGateway",
	"Comment": "deletes the specified customer gateway. you must delete the vpn connection before you can delete the customergateway.",
	"Method": "DeleteCustomerGatewayResult deleteCustomerGateway(DeleteCustomerGatewayRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteCustomerGateway(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeletePlacementGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.setScanFilter",
	"Comment": "sets the scan filter to the map of attribute names to conditions given.",
	"Method": "void setScanFilter(Map<String, Condition> scanFilter){\r\n    this.scanFilter = scanFilter;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GlobalTable.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableName() != null)\r\n        sb.append(\"GlobalTableName: \").append(getGlobalTableName()).append(\",\");\r\n    if (getReplicationGroup() != null)\r\n        sb.append(\"ReplicationGroup: \").append(getReplicationGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchPermissionModifications.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdd() != null)\r\n        sb.append(\"Add: \").append(getAdd()).append(\",\");\r\n    if (getRemove() != null)\r\n        sb.append(\"Remove: \").append(getRemove());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withFloat",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withFloat(String attrName,float val){\r\n    checkInvalidAttrName(attrName);\r\n    return withNumber(attrName, Float.valueOf(val));\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.Policies.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAppCookieStickinessPolicies() != null)\r\n        sb.append(\"AppCookieStickinessPolicies: \").append(getAppCookieStickinessPolicies()).append(\",\");\r\n    if (getLBCookieStickinessPolicies() != null)\r\n        sb.append(\"LBCookieStickinessPolicies: \").append(getLBCookieStickinessPolicies()).append(\",\");\r\n    if (getOtherPolicies() != null)\r\n        sb.append(\"OtherPolicies: \").append(getOtherPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.HealthCheck.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget()).append(\",\");\r\n    if (getInterval() != null)\r\n        sb.append(\"Interval: \").append(getInterval()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getUnhealthyThreshold() != null)\r\n        sb.append(\"UnhealthyThreshold: \").append(getUnhealthyThreshold()).append(\",\");\r\n    if (getHealthyThreshold() != null)\r\n        sb.append(\"HealthyThreshold: \").append(getHealthyThreshold());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VolumeStatusEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEventId() != null)\r\n        sb.append(\"EventId: \").append(getEventId()).append(\",\");\r\n    if (getEventType() != null)\r\n        sb.append(\"EventType: \").append(getEventType()).append(\",\");\r\n    if (getNotAfter() != null)\r\n        sb.append(\"NotAfter: \").append(getNotAfter()).append(\",\");\r\n    if (getNotBefore() != null)\r\n        sb.append(\"NotBefore: \").append(getNotBefore());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelConversionTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeVpcEndpointServicesAsync",
	"Comment": "simplified method form for invoking the describevpcendpointservices operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpcEndpointServicesResult> describeVpcEndpointServicesAsync(DescribeVpcEndpointServicesRequest request,java.util.concurrent.Future<DescribeVpcEndpointServicesResult> describeVpcEndpointServicesAsync,DescribeVpcEndpointServicesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpcEndpointServicesRequest, DescribeVpcEndpointServicesResult> asyncHandler,java.util.concurrent.Future<DescribeVpcEndpointServicesResult> describeVpcEndpointServicesAsync,java.util.concurrent.Future<DescribeVpcEndpointServicesResult> describeVpcEndpointServicesAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpcEndpointServicesRequest, DescribeVpcEndpointServicesResult> asyncHandler){\r\n    return describeVpcEndpointServicesAsync(new DescribeVpcEndpointServicesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.disassociateTransitGatewayRouteTable",
	"Comment": "disassociates a resource attachment from a transit gateway route table.",
	"Method": "DisassociateTransitGatewayRouteTableResult disassociateTransitGatewayRouteTable(DisassociateTransitGatewayRouteTableRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateTransitGatewayRouteTable(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AcceptVpcEndpointConnectionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceId() != null)\r\n        sb.append(\"ServiceId: \").append(getServiceId()).append(\",\");\r\n    if (getVpcEndpointIds() != null)\r\n        sb.append(\"VpcEndpointIds: \").append(getVpcEndpointIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UpdateSecurityGroupRuleDescriptionsEgressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.AWSDatabaseMigrationServiceWaiters.replicationTaskDeleted",
	"Comment": "builds a replicationtaskdeleted waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeReplicationTasksRequest> replicationTaskDeleted(){\r\n    return new WaiterBuilder<DescribeReplicationTasksRequest, DescribeReplicationTasksResult>().withSdkFunction(new DescribeReplicationTasksFunction(client)).withAcceptors(new ReplicationTaskDeleted.IsReadyMatcher(), new ReplicationTaskDeleted.IsCreatingMatcher(), new ReplicationTaskDeleted.IsStoppedMatcher(), new ReplicationTaskDeleted.IsRunningMatcher(), new ReplicationTaskDeleted.IsFailedMatcher(), new ReplicationTaskDeleted.IsResourceNotFoundFaultMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeAddressesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddresses() != null)\r\n        sb.append(\"Addresses: \").append(getAddresses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.AddListenerCertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DeleteCacheParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.describeTable",
	"Comment": "returns information about the table, including the current status of the table, when it was created, the primarykey schema, and any indexes on the table.if you issue a describetable request immediately after a createtable request, dynamodbmight return a resourcenotfoundexception. this is because describetable uses aneventually consistent query, and the metadata for your table might not be available at that moment. wait for afew seconds, and then try the describetable request again.",
	"Method": "DescribeTableResult describeTable(DescribeTableRequest request,DescribeTableResult describeTable,String tableName){\r\n    return describeTable(new DescribeTableRequest().withTableName(tableName));\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.SequenceNumberRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartingSequenceNumber() != null)\r\n        sb.append(\"StartingSequenceNumber: \").append(getStartingSequenceNumber()).append(\",\");\r\n    if (getEndingSequenceNumber() != null)\r\n        sb.append(\"EndingSequenceNumber: \").append(getEndingSequenceNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.waiters.AmazonElasticLoadBalancingWaiters.anyInstanceInService",
	"Comment": "builds a anyinstanceinservice waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstanceHealthRequest> anyInstanceInService(){\r\n    return new WaiterBuilder<DescribeInstanceHealthRequest, DescribeInstanceHealthResult>().withSdkFunction(new DescribeInstanceHealthFunction(client)).withAcceptors(new AnyInstanceInService.IsInServiceMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DeleteRepositoryPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getPolicyText() != null)\r\n        sb.append(\"PolicyText: \").append(getPolicyText());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.updateContinuousBackups",
	"Comment": "updatecontinuousbackups enables or disables point in time recovery for the specified table. asuccessful updatecontinuousbackups call returns the currentcontinuousbackupsdescription. continuous backups are enabled on all tables at tablecreation. if point in time recovery is enabled, pointintimerecoverystatus will be set to enabled.once continuous backups and point in time recovery are enabled, you can restore to any point in time withinearliestrestorabledatetime and latestrestorabledatetime.latestrestorabledatetime is typically 5 minutes before the current time. you can restore your tableto any point in time during the last 35 days..",
	"Method": "UpdateContinuousBackupsResult updateContinuousBackups(UpdateContinuousBackupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateContinuousBackups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeTransitGatewayRouteTablesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTables() != null)\r\n        sb.append(\"TransitGatewayRouteTables: \").append(getTransitGatewayRouteTables()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TargetGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getShowCacheNodeInfo() != null)\r\n        sb.append(\"ShowCacheNodeInfo: \").append(getShowCacheNodeInfo()).append(\",\");\r\n    if (getShowCacheClustersNotInReplicationGroups() != null)\r\n        sb.append(\"ShowCacheClustersNotInReplicationGroups: \").append(getShowCacheClustersNotInReplicationGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetConsoleScreenshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getWakeUp() != null)\r\n        sb.append(\"WakeUp: \").append(getWakeUp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.RecurringCharge.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecurringChargeAmount() != null)\r\n        sb.append(\"RecurringChargeAmount: \").append(getRecurringChargeAmount()).append(\",\");\r\n    if (getRecurringChargeFrequency() != null)\r\n        sb.append(\"RecurringChargeFrequency: \").append(getRecurringChargeFrequency());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.authorizeCacheSecurityGroupIngress",
	"Comment": "allows network ingress to a cache security group. applications using elasticache must be running on amazon ec2,and amazon ec2 security groups are used as the authorization mechanism.you cannot authorize ingress from an amazon ec2 security group in one region to an elasticache cluster in anotherregion.",
	"Method": "CacheSecurityGroup authorizeCacheSecurityGroupIngress(AuthorizeCacheSecurityGroupIngressRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAuthorizeCacheSecurityGroupIngress(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeLaunchTemplateVersions",
	"Comment": "describes one or more versions of a specified launch template. you can describe all versions, individualversions, or a range of versions.",
	"Method": "DescribeLaunchTemplateVersionsResult describeLaunchTemplateVersions(DescribeLaunchTemplateVersionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeLaunchTemplateVersions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.BundleInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getStorage() != null)\r\n        sb.append(\"Storage: \").append(getStorage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeGlobalTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableDescription() != null)\r\n        sb.append(\"GlobalTableDescription: \").append(getGlobalTableDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeLaunchTemplatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateIds() != null)\r\n        sb.append(\"LaunchTemplateIds: \").append(getLaunchTemplateIds()).append(\",\");\r\n    if (getLaunchTemplateNames() != null)\r\n        sb.append(\"LaunchTemplateNames: \").append(getLaunchTemplateNames()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpnConnectionOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticRoutesOnly() != null)\r\n        sb.append(\"StaticRoutesOnly: \").append(getStaticRoutesOnly());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DeleteConfigurationTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeDhcpOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDhcpOptions() != null)\r\n        sb.append(\"DhcpOptions: \").append(getDhcpOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RestoreAddressToClassicRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.withConditionExpression",
	"Comment": "a condition that must be satisfied in order for a conditional deleteitemto succeed.",
	"Method": "DynamoDBDeleteExpression withConditionExpression(String conditionExpression){\r\n    this.conditionExpression = conditionExpression;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateIamInstanceProfileSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.batchGetItemAsync",
	"Comment": "simplified method form for invoking the batchgetitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync(BatchGetItemRequest request,java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync,BatchGetItemRequest request,com.amazonaws.handlers.AsyncHandler<BatchGetItemRequest, BatchGetItemResult> asyncHandler,java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync,java.util.Map<String, KeysAndAttributes> requestItems,String returnConsumedCapacity,java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync,java.util.Map<String, KeysAndAttributes> requestItems,String returnConsumedCapacity,com.amazonaws.handlers.AsyncHandler<BatchGetItemRequest, BatchGetItemResult> asyncHandler,java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync,java.util.Map<String, KeysAndAttributes> requestItems,java.util.concurrent.Future<BatchGetItemResult> batchGetItemAsync,java.util.Map<String, KeysAndAttributes> requestItems,com.amazonaws.handlers.AsyncHandler<BatchGetItemRequest, BatchGetItemResult> asyncHandler){\r\n    return batchGetItemAsync(new BatchGetItemRequest().withRequestItems(requestItems), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSnapshotAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateVolumePermissions() != null)\r\n        sb.append(\"CreateVolumePermissions: \").append(getCreateVolumePermissions()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.getConditionalOperator",
	"Comment": "returns the logical operator on the filter conditions of this scan.",
	"Method": "String getConditionalOperator(){\r\n    return conditionalOperator;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ListGlobalTablesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTables() != null)\r\n        sb.append(\"GlobalTables: \").append(getGlobalTables()).append(\",\");\r\n    if (getLastEvaluatedGlobalTableName() != null)\r\n        sb.append(\"LastEvaluatedGlobalTableName: \").append(getLastEvaluatedGlobalTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.createClusterAsync",
	"Comment": "simplified method form for invoking the createcluster operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateClusterResult> createClusterAsync(CreateClusterRequest request,java.util.concurrent.Future<CreateClusterResult> createClusterAsync,CreateClusterRequest request,com.amazonaws.handlers.AsyncHandler<CreateClusterRequest, CreateClusterResult> asyncHandler,java.util.concurrent.Future<CreateClusterResult> createClusterAsync,java.util.concurrent.Future<CreateClusterResult> createClusterAsync,com.amazonaws.handlers.AsyncHandler<CreateClusterRequest, CreateClusterResult> asyncHandler){\r\n    return createClusterAsync(new CreateClusterRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreateApplicationVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSourceBuildInformation() != null)\r\n        sb.append(\"SourceBuildInformation: \").append(getSourceBuildInformation()).append(\",\");\r\n    if (getSourceBundle() != null)\r\n        sb.append(\"SourceBundle: \").append(getSourceBundle()).append(\",\");\r\n    if (getBuildConfiguration() != null)\r\n        sb.append(\"BuildConfiguration: \").append(getBuildConfiguration()).append(\",\");\r\n    if (getAutoCreateApplication() != null)\r\n        sb.append(\"AutoCreateApplication: \").append(getAutoCreateApplication()).append(\",\");\r\n    if (getProcess() != null)\r\n        sb.append(\"Process: \").append(getProcess());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.internal.Filter.eq",
	"Comment": "creates and returns a condition of the range key being equal to the givenvalue.",
	"Method": "T eq(Object val){\r\n    return _withComparisonOperator(ComparisonOperator.EQ)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.PutImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getImageManifest() != null)\r\n        sb.append(\"ImageManifest: \").append(getImageManifest()).append(\",\");\r\n    if (getImageTag() != null)\r\n        sb.append(\"ImageTag: \").append(getImageTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.InstanceState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getReasonCode() != null)\r\n        sb.append(\"ReasonCode: \").append(getReasonCode()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerDescriptions() != null)\r\n        sb.append(\"LoadBalancerDescriptions: \").append(getLoadBalancerDescriptions()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.IamInstanceProfileSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.internal.Filter.ge",
	"Comment": "creates and returns a condition of the range key being greater than orequal to the given value.",
	"Method": "T ge(Object val){\r\n    return _withComparisonOperator(ComparisonOperator.GE)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.cancelReservedInstancesListing",
	"Comment": "cancels the specified reserved instance listing in the reserved instance marketplace.for more information, see reserved instancemarketplace in the amazon elastic compute cloud user guide.",
	"Method": "CancelReservedInstancesListingResult cancelReservedInstancesListing(CancelReservedInstancesListingRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCancelReservedInstancesListing(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.listTaskDefinitionFamiliesAsync",
	"Comment": "simplified method form for invoking the listtaskdefinitionfamilies operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTaskDefinitionFamiliesResult> listTaskDefinitionFamiliesAsync(ListTaskDefinitionFamiliesRequest request,java.util.concurrent.Future<ListTaskDefinitionFamiliesResult> listTaskDefinitionFamiliesAsync,ListTaskDefinitionFamiliesRequest request,com.amazonaws.handlers.AsyncHandler<ListTaskDefinitionFamiliesRequest, ListTaskDefinitionFamiliesResult> asyncHandler,java.util.concurrent.Future<ListTaskDefinitionFamiliesResult> listTaskDefinitionFamiliesAsync,java.util.concurrent.Future<ListTaskDefinitionFamiliesResult> listTaskDefinitionFamiliesAsync,com.amazonaws.handlers.AsyncHandler<ListTaskDefinitionFamiliesRequest, ListTaskDefinitionFamiliesResult> asyncHandler){\r\n    return listTaskDefinitionFamiliesAsync(new ListTaskDefinitionFamiliesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.StartInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds()).append(\",\");\r\n    if (getAdditionalInfo() != null)\r\n        sb.append(\"AdditionalInfo: \").append(getAdditionalInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CacheSecurityGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSecurityGroupName() != null)\r\n        sb.append(\"CacheSecurityGroupName: \").append(getCacheSecurityGroupName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateInstanceMarketOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarketType() != null)\r\n        sb.append(\"MarketType: \").append(getMarketType()).append(\",\");\r\n    if (getSpotOptions() != null)\r\n        sb.append(\"SpotOptions: \").append(getSpotOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.ApplySecurityGroupsToLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteNetworkAclRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkAclId() != null)\r\n        sb.append(\"NetworkAclId: \").append(getNetworkAclId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.uploadLayerPart",
	"Comment": "uploads an image layer part to amazon ecr.this operation is used by the amazon ecr proxy, and it is not intended for general use by customers for pullingand pushing images. in most cases, you should use the docker cli to pull, tag, and push images.",
	"Method": "UploadLayerPartResult uploadLayerPart(UploadLayerPartRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUploadLayerPart(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEnvironmentManagedActionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getManagedActions() != null)\r\n        sb.append(\"ManagedActions: \").append(getManagedActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteNatGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNatGatewayId() != null)\r\n        sb.append(\"NatGatewayId: \").append(getNatGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFleetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFleets() != null)\r\n        sb.append(\"Fleets: \").append(getFleets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.DeleteClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.putImage",
	"Comment": "creates or updates the image manifest and tags associated with an image.this operation is used by the amazon ecr proxy, and it is not intended for general use by customers for pullingand pushing images. in most cases, you should use the docker cli to pull, tag, and push images.",
	"Method": "PutImageResult putImage(PutImageRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutImage(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeVpcsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeVpcsResult apply(DescribeVpcsRequest describeVpcsRequest){\r\n    return client.describeVpcs(describeVpcsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.internal.Filter.gt",
	"Comment": "creates and returns a condition of the range key being greater than thegiven value.",
	"Method": "T gt(Object val){\r\n    return _withComparisonOperator(ComparisonOperator.GT)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.BatchCheckLayerAvailabilityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Setting.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getPrincipalArn() != null)\r\n        sb.append(\"PrincipalArn: \").append(getPrincipalArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.ModifyLoadBalancerAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getLoadBalancerAttributes() != null)\r\n        sb.append(\"LoadBalancerAttributes: \").append(getLoadBalancerAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceStates() != null)\r\n        sb.append(\"InstanceStates: \").append(getInstanceStates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpnGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpnGateway() != null)\r\n        sb.append(\"VpnGateway: \").append(getVpnGateway());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.WithdrawByoipCidrRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidr() != null)\r\n        sb.append(\"Cidr: \").append(getCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.UpdateFileSystemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getThroughputMode() != null)\r\n        sb.append(\"ThroughputMode: \").append(getThroughputMode()).append(\",\");\r\n    if (getProvisionedThroughputInMibps() != null)\r\n        sb.append(\"ProvisionedThroughputInMibps: \").append(getProvisionedThroughputInMibps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ValidationMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getSeverity() != null)\r\n        sb.append(\"Severity: \").append(getSeverity()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getOptionName() != null)\r\n        sb.append(\"OptionName: \").append(getOptionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.getTransitGatewayRouteTablePropagations",
	"Comment": "gets information about the route table propagations for the specified transit gateway route table.",
	"Method": "GetTransitGatewayRouteTablePropagationsResult getTransitGatewayRouteTablePropagations(GetTransitGatewayRouteTablePropagationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTransitGatewayRouteTablePropagations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteFlowLogsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowLogIds() != null)\r\n        sb.append(\"FlowLogIds: \").append(getFlowLogIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.UpdateFileSystemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getCreationToken() != null)\r\n        sb.append(\"CreationToken: \").append(getCreationToken()).append(\",\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLifeCycleState() != null)\r\n        sb.append(\"LifeCycleState: \").append(getLifeCycleState()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNumberOfMountTargets() != null)\r\n        sb.append(\"NumberOfMountTargets: \").append(getNumberOfMountTargets()).append(\",\");\r\n    if (getSizeInBytes() != null)\r\n        sb.append(\"SizeInBytes: \").append(getSizeInBytes()).append(\",\");\r\n    if (getPerformanceMode() != null)\r\n        sb.append(\"PerformanceMode: \").append(getPerformanceMode()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getThroughputMode() != null)\r\n        sb.append(\"ThroughputMode: \").append(getThroughputMode()).append(\",\");\r\n    if (getProvisionedThroughputInMibps() != null)\r\n        sb.append(\"ProvisionedThroughputInMibps: \").append(getProvisionedThroughputInMibps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpnConnectionRouteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock()).append(\",\");\r\n    if (getVpnConnectionId() != null)\r\n        sb.append(\"VpnConnectionId: \").append(getVpnConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Instance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmiLaunchIndex() != null)\r\n        sb.append(\"AmiLaunchIndex: \").append(getAmiLaunchIndex()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName()).append(\",\");\r\n    if (getLaunchTime() != null)\r\n        sb.append(\"LaunchTime: \").append(getLaunchTime()).append(\",\");\r\n    if (getMonitoring() != null)\r\n        sb.append(\"Monitoring: \").append(getMonitoring()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes()).append(\",\");\r\n    if (getPublicDnsName() != null)\r\n        sb.append(\"PublicDnsName: \").append(getPublicDnsName()).append(\",\");\r\n    if (getPublicIpAddress() != null)\r\n        sb.append(\"PublicIpAddress: \").append(getPublicIpAddress()).append(\",\");\r\n    if (getRamdiskId() != null)\r\n        sb.append(\"RamdiskId: \").append(getRamdiskId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateTransitionReason() != null)\r\n        sb.append(\"StateTransitionReason: \").append(getStateTransitionReason()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getEnaSupport() != null)\r\n        sb.append(\"EnaSupport: \").append(getEnaSupport()).append(\",\");\r\n    if (getHypervisor() != null)\r\n        sb.append(\"Hypervisor: \").append(getHypervisor()).append(\",\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getInstanceLifecycle() != null)\r\n        sb.append(\"InstanceLifecycle: \").append(getInstanceLifecycle()).append(\",\");\r\n    if (getElasticGpuAssociations() != null)\r\n        sb.append(\"ElasticGpuAssociations: \").append(getElasticGpuAssociations()).append(\",\");\r\n    if (getElasticInferenceAcceleratorAssociations() != null)\r\n        sb.append(\"ElasticInferenceAcceleratorAssociations: \").append(getElasticInferenceAcceleratorAssociations()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces()).append(\",\");\r\n    if (getRootDeviceName() != null)\r\n        sb.append(\"RootDeviceName: \").append(getRootDeviceName()).append(\",\");\r\n    if (getRootDeviceType() != null)\r\n        sb.append(\"RootDeviceType: \").append(getRootDeviceType()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getSourceDestCheck() != null)\r\n        sb.append(\"SourceDestCheck: \").append(getSourceDestCheck()).append(\",\");\r\n    if (getSpotInstanceRequestId() != null)\r\n        sb.append(\"SpotInstanceRequestId: \").append(getSpotInstanceRequestId()).append(\",\");\r\n    if (getSriovNetSupport() != null)\r\n        sb.append(\"SriovNetSupport: \").append(getSriovNetSupport()).append(\",\");\r\n    if (getStateReason() != null)\r\n        sb.append(\"StateReason: \").append(getStateReason()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVirtualizationType() != null)\r\n        sb.append(\"VirtualizationType: \").append(getVirtualizationType()).append(\",\");\r\n    if (getCpuOptions() != null)\r\n        sb.append(\"CpuOptions: \").append(getCpuOptions()).append(\",\");\r\n    if (getCapacityReservationId() != null)\r\n        sb.append(\"CapacityReservationId: \").append(getCapacityReservationId()).append(\",\");\r\n    if (getCapacityReservationSpecification() != null)\r\n        sb.append(\"CapacityReservationSpecification: \").append(getCapacityReservationSpecification()).append(\",\");\r\n    if (getHibernationOptions() != null)\r\n        sb.append(\"HibernationOptions: \").append(getHibernationOptions()).append(\",\");\r\n    if (getLicenses() != null)\r\n        sb.append(\"Licenses: \").append(getLicenses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeKeyPairs",
	"Comment": "describes one or more of your key pairs.for more information about key pairs, see key pairs in the amazonelastic compute cloud user guide.",
	"Method": "DescribeKeyPairsResult describeKeyPairs(DescribeKeyPairsRequest request,DescribeKeyPairsResult describeKeyPairs){\r\n    return describeKeyPairs(new DescribeKeyPairsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.SourceConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyInstanceCapacityReservationAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.createLoadBalancer",
	"Comment": "creates an application load balancer or a network load balancer.when you create a load balancer, you can specify security groups, public subnets, ip address type, and tags.otherwise, you could do so later using setsecuritygroups, setsubnets, setipaddresstype, andaddtags.to create listeners for your load balancer, use createlistener. to describe your current load balancers,see describeloadbalancers. when you are finished with a load balancer, you can delete it usingdeleteloadbalancer.for limit information, see limits foryour application load balancer in the application load balancers guide and limits for yournetwork load balancer in the network load balancers guide.this operation is idempotent, which means that it completes at most one time. if you attempt to create multipleload balancers with the same settings, each call succeeds.for more information, see application load balancers in the application load balancers guide and network loadbalancers in the network load balancers guide.",
	"Method": "CreateLoadBalancerResult createLoadBalancer(CreateLoadBalancerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateLoadBalancer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ResetCacheParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getResetAllParameters() != null)\r\n        sb.append(\"ResetAllParameters: \").append(getResetAllParameters()).append(\",\");\r\n    if (getParameterNameValues() != null)\r\n        sb.append(\"ParameterNameValues: \").append(getParameterNameValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListContainerInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.CreateClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getResourcesVpcConfig() != null)\r\n        sb.append(\"ResourcesVpcConfig: \").append(getResourcesVpcConfig()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.describeReservedCacheNodesAsync",
	"Comment": "simplified method form for invoking the describereservedcachenodes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedCacheNodesResult> describeReservedCacheNodesAsync(DescribeReservedCacheNodesRequest request,java.util.concurrent.Future<DescribeReservedCacheNodesResult> describeReservedCacheNodesAsync,DescribeReservedCacheNodesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedCacheNodesRequest, DescribeReservedCacheNodesResult> asyncHandler,java.util.concurrent.Future<DescribeReservedCacheNodesResult> describeReservedCacheNodesAsync,java.util.concurrent.Future<DescribeReservedCacheNodesResult> describeReservedCacheNodesAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedCacheNodesRequest, DescribeReservedCacheNodesResult> asyncHandler){\r\n    return describeReservedCacheNodesAsync(new DescribeReservedCacheNodesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.StopInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStoppingInstances() != null)\r\n        sb.append(\"StoppingInstances: \").append(getStoppingInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.Latency.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getP999() != null)\r\n        sb.append(\"P999: \").append(getP999()).append(\",\");\r\n    if (getP99() != null)\r\n        sb.append(\"P99: \").append(getP99()).append(\",\");\r\n    if (getP95() != null)\r\n        sb.append(\"P95: \").append(getP95()).append(\",\");\r\n    if (getP90() != null)\r\n        sb.append(\"P90: \").append(getP90()).append(\",\");\r\n    if (getP85() != null)\r\n        sb.append(\"P85: \").append(getP85()).append(\",\");\r\n    if (getP75() != null)\r\n        sb.append(\"P75: \").append(getP75()).append(\",\");\r\n    if (getP50() != null)\r\n        sb.append(\"P50: \").append(getP50()).append(\",\");\r\n    if (getP10() != null)\r\n        sb.append(\"P10: \").append(getP10());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReservedInstancesModification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getEffectiveDate() != null)\r\n        sb.append(\"EffectiveDate: \").append(getEffectiveDate()).append(\",\");\r\n    if (getModificationResults() != null)\r\n        sb.append(\"ModificationResults: \").append(getModificationResults()).append(\",\");\r\n    if (getReservedInstancesIds() != null)\r\n        sb.append(\"ReservedInstancesIds: \").append(getReservedInstancesIds()).append(\",\");\r\n    if (getReservedInstancesModificationId() != null)\r\n        sb.append(\"ReservedInstancesModificationId: \").append(getReservedInstancesModificationId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getUpdateDate() != null)\r\n        sb.append(\"UpdateDate: \").append(getUpdateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateVpcCidrBlockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6CidrBlockAssociation() != null)\r\n        sb.append(\"Ipv6CidrBlockAssociation: \").append(getIpv6CidrBlockAssociation()).append(\",\");\r\n    if (getCidrBlockAssociation() != null)\r\n        sb.append(\"CidrBlockAssociation: \").append(getCidrBlockAssociation()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UnassignPrivateIpAddressesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ResourceQuota.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaximum() != null)\r\n        sb.append(\"Maximum: \").append(getMaximum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.TaskSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getTaskSetArn() != null)\r\n        sb.append(\"TaskSetArn: \").append(getTaskSetArn()).append(\",\");\r\n    if (getStartedBy() != null)\r\n        sb.append(\"StartedBy: \").append(getStartedBy()).append(\",\");\r\n    if (getExternalId() != null)\r\n        sb.append(\"ExternalId: \").append(getExternalId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition()).append(\",\");\r\n    if (getComputedDesiredCount() != null)\r\n        sb.append(\"ComputedDesiredCount: \").append(getComputedDesiredCount()).append(\",\");\r\n    if (getPendingCount() != null)\r\n        sb.append(\"PendingCount: \").append(getPendingCount()).append(\",\");\r\n    if (getRunningCount() != null)\r\n        sb.append(\"RunningCount: \").append(getRunningCount()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getUpdatedAt() != null)\r\n        sb.append(\"UpdatedAt: \").append(getUpdatedAt()).append(\",\");\r\n    if (getLaunchType() != null)\r\n        sb.append(\"LaunchType: \").append(getLaunchType()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getNetworkConfiguration() != null)\r\n        sb.append(\"NetworkConfiguration: \").append(getNetworkConfiguration()).append(\",\");\r\n    if (getLoadBalancers() != null)\r\n        sb.append(\"LoadBalancers: \").append(getLoadBalancers()).append(\",\");\r\n    if (getScale() != null)\r\n        sb.append(\"Scale: \").append(getScale()).append(\",\");\r\n    if (getStabilityStatus() != null)\r\n        sb.append(\"StabilityStatus: \").append(getStabilityStatus()).append(\",\");\r\n    if (getStabilityStatusAt() != null)\r\n        sb.append(\"StabilityStatusAt: \").append(getStabilityStatusAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeVpcPeeringConnectionsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeVpcPeeringConnectionsResult apply(DescribeVpcPeeringConnectionsRequest describeVpcPeeringConnectionsRequest){\r\n    return client.describeVpcPeeringConnections(describeVpcPeeringConnectionsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeVpcEndpointsAsync",
	"Comment": "simplified method form for invoking the describevpcendpoints operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpcEndpointsResult> describeVpcEndpointsAsync(DescribeVpcEndpointsRequest request,java.util.concurrent.Future<DescribeVpcEndpointsResult> describeVpcEndpointsAsync,DescribeVpcEndpointsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpcEndpointsRequest, DescribeVpcEndpointsResult> asyncHandler,java.util.concurrent.Future<DescribeVpcEndpointsResult> describeVpcEndpointsAsync,java.util.concurrent.Future<DescribeVpcEndpointsResult> describeVpcEndpointsAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpcEndpointsRequest, DescribeVpcEndpointsResult> asyncHandler){\r\n    return describeVpcEndpointsAsync(new DescribeVpcEndpointsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeInstanceStatusAsync",
	"Comment": "simplified method form for invoking the describeinstancestatus operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeInstanceStatusResult> describeInstanceStatusAsync(DescribeInstanceStatusRequest request,java.util.concurrent.Future<DescribeInstanceStatusResult> describeInstanceStatusAsync,DescribeInstanceStatusRequest request,com.amazonaws.handlers.AsyncHandler<DescribeInstanceStatusRequest, DescribeInstanceStatusResult> asyncHandler,java.util.concurrent.Future<DescribeInstanceStatusResult> describeInstanceStatusAsync,java.util.concurrent.Future<DescribeInstanceStatusResult> describeInstanceStatusAsync,com.amazonaws.handlers.AsyncHandler<DescribeInstanceStatusRequest, DescribeInstanceStatusResult> asyncHandler){\r\n    return describeInstanceStatusAsync(new DescribeInstanceStatusRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TimeToLiveDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimeToLiveStatus() != null)\r\n        sb.append(\"TimeToLiveStatus: \").append(getTimeToLiveStatus()).append(\",\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DeleteCacheSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSubnetGroupName() != null)\r\n        sb.append(\"CacheSubnetGroupName: \").append(getCacheSubnetGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpotInstanceRequests() != null)\r\n        sb.append(\"SpotInstanceRequests: \").append(getSpotInstanceRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeExportTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportTaskIds() != null)\r\n        sb.append(\"ExportTaskIds: \").append(getExportTaskIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createFlowLogs",
	"Comment": "creates one or more flow logs to capture information about ip traffic for a specific network interface, subnet,or vpc.flow log data for a monitored network interface is recorded as flow log records, which are log events consistingof fields that describe the traffic flow. for more information, see flow log recordsin the amazon virtual private cloud user guide.when publishing to cloudwatch logs, flow log records are published to a log group, and each network interface hasa unique log stream in the log group. when publishing to amazon s3, flow log records for all of the monitorednetwork interfaces are published to a single log file object that is stored in the specified bucket.for more information, see vpc flowlogs in the amazon virtual private cloud user guide.",
	"Method": "CreateFlowLogsResult createFlowLogs(CreateFlowLogsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateFlowLogs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.AccessLog.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getS3BucketName() != null)\r\n        sb.append(\"S3BucketName: \").append(getS3BucketName()).append(\",\");\r\n    if (getEmitInterval() != null)\r\n        sb.append(\"EmitInterval: \").append(getEmitInterval()).append(\",\");\r\n    if (getS3BucketPrefix() != null)\r\n        sb.append(\"S3BucketPrefix: \").append(getS3BucketPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.createListener",
	"Comment": "creates a listener for the specified application load balancer or network load balancer.to update a listener, use modifylistener. when you are finished with a listener, you can delete it usingdeletelistener. if you are finished with both the listener and the load balancer, you can delete them bothusing deleteloadbalancer.this operation is idempotent, which means that it completes at most one time. if you attempt to create multiplelisteners with the same settings, each call succeeds.for more information, see listenersfor your application load balancers in the application load balancers guide and listeners foryour network load balancers in the network load balancers guide.",
	"Method": "CreateListenerResult createListener(CreateListenerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateListener(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createInternetGateway",
	"Comment": "creates an internet gateway for use with a vpc. after creating the internet gateway, you attach it to a vpc usingattachinternetgateway.for more information about your vpc and internet gateway, see the amazon virtual private cloud user guide.",
	"Method": "CreateInternetGatewayResult createInternetGateway(CreateInternetGatewayRequest request,CreateInternetGatewayResult createInternetGateway){\r\n    return createInternetGateway(new CreateInternetGatewayRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeTransitGatewayVpcAttachments",
	"Comment": "describes one or more vpc attachments. by default, all vpc attachments are described. alternatively, you canfilter the results.",
	"Method": "DescribeTransitGatewayVpcAttachmentsResult describeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTransitGatewayVpcAttachments(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.RestoreTableFromBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetTableName() != null)\r\n        sb.append(\"TargetTableName: \").append(getTargetTableName()).append(\",\");\r\n    if (getBackupArn() != null)\r\n        sb.append(\"BackupArn: \").append(getBackupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableDescription() != null)\r\n        sb.append(\"TableDescription: \").append(getTableDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.ModifyMountTargetSecurityGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMountTargetId() != null)\r\n        sb.append(\"MountTargetId: \").append(getMountTargetId()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.ModifyLoadBalancerAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesForBackendServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteTransitGatewayRouteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoute() != null)\r\n        sb.append(\"Route: \").append(getRoute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeletePlacementGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeScheduledInstanceAvailabilityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getFirstSlotStartTimeRange() != null)\r\n        sb.append(\"FirstSlotStartTimeRange: \").append(getFirstSlotStartTimeRange()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getMaxSlotDurationInHours() != null)\r\n        sb.append(\"MaxSlotDurationInHours: \").append(getMaxSlotDurationInHours()).append(\",\");\r\n    if (getMinSlotDurationInHours() != null)\r\n        sb.append(\"MinSlotDurationInHours: \").append(getMinSlotDurationInHours()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getRecurrence() != null)\r\n        sb.append(\"Recurrence: \").append(getRecurrence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.deleteTable",
	"Comment": "the deletetable operation deletes a table and all of its items. after a deletetablerequest, the specified table is in the deleting state until dynamodb completes the deletion. if thetable is in the active state, you can delete it. if a table is in creating orupdating states, then dynamodb returns a resourceinuseexception. if the specified tabledoes not exist, dynamodb returns a resourcenotfoundexception. if table is already in thedeleting state, no error is returned.dynamodb might continue to accept data read and write operations, such as getitem andputitem, on a table in the deleting state until the table deletion is complete.when you delete a table, any indexes on that table are also deleted.if you have dynamodb streams enabled on the table, then the corresponding stream on that table goes into thedisabled state, and the stream is automatically deleted after 24 hours.use the describetable action to check the status of the table.",
	"Method": "DeleteTableResult deleteTable(DeleteTableRequest request,DeleteTableResult deleteTable,String tableName){\r\n    return deleteTable(new DeleteTableRequest().withTableName(tableName));\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.batchLoad",
	"Comment": "retrieves multiple items from the table using their primary keys.",
	"Method": "List<T> batchLoad(Iterable<T> itemsToGet){\r\n    final Map<String, List<Object>> results = mapper.batchLoad(itemsToGet);\r\n    if (results.isEmpty()) {\r\n        return Collections.<T>emptyList();\r\n    }\r\n    return (List<T>) results.get(mapper.getTableName(model.targetType(), config));\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.CreateClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.withExpressionAttributeNames",
	"Comment": "one or more substitution variables for simplifying complex expressions.",
	"Method": "DynamoDBQueryExpression<T> withExpressionAttributeNames(java.util.Map<String, String> expressionAttributeNames){\r\n    setExpressionAttributeNames(expressionAttributeNames);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.deleteItemAsync",
	"Comment": "simplified method form for invoking the deleteitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DeleteItemResult> deleteItemAsync(DeleteItemRequest request,java.util.concurrent.Future<DeleteItemResult> deleteItemAsync,DeleteItemRequest request,com.amazonaws.handlers.AsyncHandler<DeleteItemRequest, DeleteItemResult> asyncHandler,java.util.concurrent.Future<DeleteItemResult> deleteItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.concurrent.Future<DeleteItemResult> deleteItemAsync,String tableName,java.util.Map<String, AttributeValue> key,com.amazonaws.handlers.AsyncHandler<DeleteItemRequest, DeleteItemResult> asyncHandler,java.util.concurrent.Future<DeleteItemResult> deleteItemAsync,String tableName,java.util.Map<String, AttributeValue> key,String returnValues,java.util.concurrent.Future<DeleteItemResult> deleteItemAsync,String tableName,java.util.Map<String, AttributeValue> key,String returnValues,com.amazonaws.handlers.AsyncHandler<DeleteItemRequest, DeleteItemResult> asyncHandler){\r\n    return deleteItemAsync(new DeleteItemRequest().withTableName(tableName).withKey(key).withReturnValues(returnValues), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateCustomerGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBgpAsn() != null)\r\n        sb.append(\"BgpAsn: \").append(getBgpAsn()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeConfigurationSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcEndpointServicePermissionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceId() != null)\r\n        sb.append(\"ServiceId: \").append(getServiceId()).append(\",\");\r\n    if (getAddAllowedPrincipals() != null)\r\n        sb.append(\"AddAllowedPrincipals: \").append(getAddAllowedPrincipals()).append(\",\");\r\n    if (getRemoveAllowedPrincipals() != null)\r\n        sb.append(\"RemoveAllowedPrincipals: \").append(getRemoveAllowedPrincipals());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.rejectVpcEndpointConnections",
	"Comment": "rejects one or more vpc endpoint connection requests to your vpc endpoint service.",
	"Method": "RejectVpcEndpointConnectionsResult rejectVpcEndpointConnections(RejectVpcEndpointConnectionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRejectVpcEndpointConnections(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateCpuOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCoreCount() != null)\r\n        sb.append(\"CoreCount: \").append(getCoreCount()).append(\",\");\r\n    if (getThreadsPerCore() != null)\r\n        sb.append(\"ThreadsPerCore: \").append(getThreadsPerCore());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeScheduledInstanceAvailabilityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getScheduledInstanceAvailabilitySet() != null)\r\n        sb.append(\"ScheduledInstanceAvailabilitySet: \").append(getScheduledInstanceAvailabilitySet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DisableAvailabilityZonesForLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkAsyncClient.describeEventsAsync",
	"Comment": "simplified method form for invoking the describeevents operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync(DescribeEventsRequest request,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,DescribeEventsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler){\r\n    return describeEventsAsync(new DescribeEventsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.internal.PageBasedCollection.setLastLowLevelResult",
	"Comment": "internal method used by the implementation layer for settingthe low level result received from the server side.",
	"Method": "void setLastLowLevelResult(R lowLevelResult){\r\n    this.lastLowLevelResult = lowLevelResult;\r\n    listener.onLowLevelResult(lowLevelResult);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ElasticGpuHealth.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcPeeringConnectionStateReason.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.TagKeyOnly.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.CreateFileSystemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationToken() != null)\r\n        sb.append(\"CreationToken: \").append(getCreationToken()).append(\",\");\r\n    if (getPerformanceMode() != null)\r\n        sb.append(\"PerformanceMode: \").append(getPerformanceMode()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getThroughputMode() != null)\r\n        sb.append(\"ThroughputMode: \").append(getThroughputMode()).append(\",\");\r\n    if (getProvisionedThroughputInMibps() != null)\r\n        sb.append(\"ProvisionedThroughputInMibps: \").append(getProvisionedThroughputInMibps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TransactWriteItemsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConsumedCapacity() != null)\r\n        sb.append(\"ConsumedCapacity: \").append(getConsumedCapacity()).append(\",\");\r\n    if (getItemCollectionMetrics() != null)\r\n        sb.append(\"ItemCollectionMetrics: \").append(getItemCollectionMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetTransitGatewayRouteTableAssociationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociations() != null)\r\n        sb.append(\"Associations: \").append(getAssociations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ConfigurationOptionSetting.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getOptionName() != null)\r\n        sb.append(\"OptionName: \").append(getOptionName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcCidrBlockState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.ImageIdentifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageDigest() != null)\r\n        sb.append(\"ImageDigest: \").append(getImageDigest()).append(\",\");\r\n    if (getImageTag() != null)\r\n        sb.append(\"ImageTag: \").append(getImageTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateDefaultVpcRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcEndpointIds() != null)\r\n        sb.append(\"VpcEndpointIds: \").append(getVpcEndpointIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteRouteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock()).append(\",\");\r\n    if (getDestinationIpv6CidrBlock() != null)\r\n        sb.append(\"DestinationIpv6CidrBlock: \").append(getDestinationIpv6CidrBlock()).append(\",\");\r\n    if (getRouteTableId() != null)\r\n        sb.append(\"RouteTableId: \").append(getRouteTableId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.volumeDeleted",
	"Comment": "builds a volumedeleted waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVolumesRequest> volumeDeleted(){\r\n    return new WaiterBuilder<DescribeVolumesRequest, DescribeVolumesResult>().withSdkFunction(new DescribeVolumesFunction(client)).withAcceptors(new VolumeDeleted.IsDeletedMatcher(), new VolumeDeleted.IsInvalidVolumeNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListContainerInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerInstanceArns() != null)\r\n        sb.append(\"ContainerInstanceArns: \").append(getContainerInstanceArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.PointInTimeRecoverySpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPointInTimeRecoveryEnabled() != null)\r\n        sb.append(\"PointInTimeRecoveryEnabled: \").append(getPointInTimeRecoveryEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeCapacityReservationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getCapacityReservations() != null)\r\n        sb.append(\"CapacityReservations: \").append(getCapacityReservations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.StopReplicationTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationTaskArn() != null)\r\n        sb.append(\"ReplicationTaskArn: \").append(getReplicationTaskArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVolumesModificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumesModifications() != null)\r\n        sb.append(\"VolumesModifications: \").append(getVolumesModifications()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeInstanceStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getIncludeAllInstances() != null)\r\n        sb.append(\"IncludeAllInstances: \").append(getIncludeAllInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReservationValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHourlyPrice() != null)\r\n        sb.append(\"HourlyPrice: \").append(getHourlyPrice()).append(\",\");\r\n    if (getRemainingTotalValue() != null)\r\n        sb.append(\"RemainingTotalValue: \").append(getRemainingTotalValue()).append(\",\");\r\n    if (getRemainingUpfrontValue() != null)\r\n        sb.append(\"RemainingUpfrontValue: \").append(getRemainingUpfrontValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.toByteArray",
	"Comment": "this method is assumed to be only called from a getter method, but notfrom a setter method.",
	"Method": "byte[] toByteArray(Object val){\r\n    if (val == null)\r\n        return null;\r\n    if (val instanceof byte[])\r\n        return (byte[]) val;\r\n    if (val instanceof ByteBuffer) {\r\n        return copyAllBytesFrom((ByteBuffer) val);\r\n    }\r\n    throw new IncompatibleTypeException(val.getClass() + \" cannot be converted into a byte array\");\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeNetworkAclsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getNetworkAclIds() != null)\r\n        sb.append(\"NetworkAclIds: \").append(getNetworkAclIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RequestSpotInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZoneGroup() != null)\r\n        sb.append(\"AvailabilityZoneGroup: \").append(getAvailabilityZoneGroup()).append(\",\");\r\n    if (getBlockDurationMinutes() != null)\r\n        sb.append(\"BlockDurationMinutes: \").append(getBlockDurationMinutes()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getLaunchGroup() != null)\r\n        sb.append(\"LaunchGroup: \").append(getLaunchGroup()).append(\",\");\r\n    if (getLaunchSpecification() != null)\r\n        sb.append(\"LaunchSpecification: \").append(getLaunchSpecification()).append(\",\");\r\n    if (getSpotPrice() != null)\r\n        sb.append(\"SpotPrice: \").append(getSpotPrice()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValidFrom() != null)\r\n        sb.append(\"ValidFrom: \").append(getValidFrom()).append(\",\");\r\n    if (getValidUntil() != null)\r\n        sb.append(\"ValidUntil: \").append(getValidUntil()).append(\",\");\r\n    if (getInstanceInterruptionBehavior() != null)\r\n        sb.append(\"InstanceInterruptionBehavior: \").append(getInstanceInterruptionBehavior());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.ModifyTargetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroupArn() != null)\r\n        sb.append(\"TargetGroupArn: \").append(getTargetGroupArn()).append(\",\");\r\n    if (getHealthCheckProtocol() != null)\r\n        sb.append(\"HealthCheckProtocol: \").append(getHealthCheckProtocol()).append(\",\");\r\n    if (getHealthCheckPort() != null)\r\n        sb.append(\"HealthCheckPort: \").append(getHealthCheckPort()).append(\",\");\r\n    if (getHealthCheckPath() != null)\r\n        sb.append(\"HealthCheckPath: \").append(getHealthCheckPath()).append(\",\");\r\n    if (getHealthCheckEnabled() != null)\r\n        sb.append(\"HealthCheckEnabled: \").append(getHealthCheckEnabled()).append(\",\");\r\n    if (getHealthCheckIntervalSeconds() != null)\r\n        sb.append(\"HealthCheckIntervalSeconds: \").append(getHealthCheckIntervalSeconds()).append(\",\");\r\n    if (getHealthCheckTimeoutSeconds() != null)\r\n        sb.append(\"HealthCheckTimeoutSeconds: \").append(getHealthCheckTimeoutSeconds()).append(\",\");\r\n    if (getHealthyThresholdCount() != null)\r\n        sb.append(\"HealthyThresholdCount: \").append(getHealthyThresholdCount()).append(\",\");\r\n    if (getUnhealthyThresholdCount() != null)\r\n        sb.append(\"UnhealthyThresholdCount: \").append(getUnhealthyThresholdCount()).append(\",\");\r\n    if (getMatcher() != null)\r\n        sb.append(\"Matcher: \").append(getMatcher());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.describeEventsAsync",
	"Comment": "simplified method form for invoking the describeevents operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync(DescribeEventsRequest request,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,DescribeEventsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler){\r\n    return describeEventsAsync(new DescribeEventsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreateEnvironmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEndpointURL() != null)\r\n        sb.append(\"EndpointURL: \").append(getEndpointURL()).append(\",\");\r\n    if (getCNAME() != null)\r\n        sb.append(\"CNAME: \").append(getCNAME()).append(\",\");\r\n    if (getDateCreated() != null)\r\n        sb.append(\"DateCreated: \").append(getDateCreated()).append(\",\");\r\n    if (getDateUpdated() != null)\r\n        sb.append(\"DateUpdated: \").append(getDateUpdated()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getAbortableOperationInProgress() != null)\r\n        sb.append(\"AbortableOperationInProgress: \").append(getAbortableOperationInProgress()).append(\",\");\r\n    if (getHealth() != null)\r\n        sb.append(\"Health: \").append(getHealth()).append(\",\");\r\n    if (getHealthStatus() != null)\r\n        sb.append(\"HealthStatus: \").append(getHealthStatus()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getTier() != null)\r\n        sb.append(\"Tier: \").append(getTier()).append(\",\");\r\n    if (getEnvironmentLinks() != null)\r\n        sb.append(\"EnvironmentLinks: \").append(getEnvironmentLinks()).append(\",\");\r\n    if (getEnvironmentArn() != null)\r\n        sb.append(\"EnvironmentArn: \").append(getEnvironmentArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkAcl.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociations() != null)\r\n        sb.append(\"Associations: \").append(getAssociations()).append(\",\");\r\n    if (getEntries() != null)\r\n        sb.append(\"Entries: \").append(getEntries()).append(\",\");\r\n    if (getIsDefault() != null)\r\n        sb.append(\"IsDefault: \").append(getIsDefault()).append(\",\");\r\n    if (getNetworkAclId() != null)\r\n        sb.append(\"NetworkAclId: \").append(getNetworkAclId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeVpcEndpointServices",
	"Comment": "describes available services to which you can create a vpc endpoint.",
	"Method": "DescribeVpcEndpointServicesResult describeVpcEndpointServices(DescribeVpcEndpointServicesRequest request,DescribeVpcEndpointServicesResult describeVpcEndpointServices){\r\n    return describeVpcEndpointServices(new DescribeVpcEndpointServicesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.AvailabilityZone.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getZoneName() != null)\r\n        sb.append(\"ZoneName: \").append(getZoneName()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getLoadBalancerAddresses() != null)\r\n        sb.append(\"LoadBalancerAddresses: \").append(getLoadBalancerAddresses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteVpcEndpointConnectionNotifications",
	"Comment": "deletes one or more vpc endpoint connection notifications.",
	"Method": "DeleteVpcEndpointConnectionNotificationsResult deleteVpcEndpointConnectionNotifications(DeleteVpcEndpointConnectionNotificationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteVpcEndpointConnectionNotifications(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetTransitGatewayAttachmentPropagationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentPropagations() != null)\r\n        sb.append(\"TransitGatewayAttachmentPropagations: \").append(getTransitGatewayAttachmentPropagations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelBundleTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleTask() != null)\r\n        sb.append(\"BundleTask: \").append(getBundleTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GlobalSecondaryIndex.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getProjection() != null)\r\n        sb.append(\"Projection: \").append(getProjection()).append(\",\");\r\n    if (getProvisionedThroughput() != null)\r\n        sb.append(\"ProvisionedThroughput: \").append(getProvisionedThroughput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.AWSDatabaseMigrationServiceWaiters.replicationTaskRunning",
	"Comment": "builds a replicationtaskrunning waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeReplicationTasksRequest> replicationTaskRunning(){\r\n    return new WaiterBuilder<DescribeReplicationTasksRequest, DescribeReplicationTasksResult>().withSdkFunction(new DescribeReplicationTasksFunction(client)).withAcceptors(new ReplicationTaskRunning.IsRunningMatcher(), new ReplicationTaskRunning.IsReadyMatcher(), new ReplicationTaskRunning.IsCreatingMatcher(), new ReplicationTaskRunning.IsStoppingMatcher(), new ReplicationTaskRunning.IsStoppedMatcher(), new ReplicationTaskRunning.IsFailedMatcher(), new ReplicationTaskRunning.IsModifyingMatcher(), new ReplicationTaskRunning.IsTestingMatcher(), new ReplicationTaskRunning.IsDeletingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeReservedInstancesModificationsAsync",
	"Comment": "simplified method form for invoking the describereservedinstancesmodifications operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedInstancesModificationsResult> describeReservedInstancesModificationsAsync(DescribeReservedInstancesModificationsRequest request,java.util.concurrent.Future<DescribeReservedInstancesModificationsResult> describeReservedInstancesModificationsAsync,DescribeReservedInstancesModificationsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesModificationsRequest, DescribeReservedInstancesModificationsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedInstancesModificationsResult> describeReservedInstancesModificationsAsync,java.util.concurrent.Future<DescribeReservedInstancesModificationsResult> describeReservedInstancesModificationsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesModificationsRequest, DescribeReservedInstancesModificationsResult> asyncHandler){\r\n    return describeReservedInstancesModificationsAsync(new DescribeReservedInstancesModificationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CopySnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceSnapshotName() != null)\r\n        sb.append(\"SourceSnapshotName: \").append(getSourceSnapshotName()).append(\",\");\r\n    if (getTargetSnapshotName() != null)\r\n        sb.append(\"TargetSnapshotName: \").append(getTargetSnapshotName()).append(\",\");\r\n    if (getTargetBucket() != null)\r\n        sb.append(\"TargetBucket: \").append(getTargetBucket());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.CreateGlobalTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableName() != null)\r\n        sb.append(\"GlobalTableName: \").append(getGlobalTableName()).append(\",\");\r\n    if (getReplicationGroup() != null)\r\n        sb.append(\"ReplicationGroup: \").append(getReplicationGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateApplicationVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationVersion() != null)\r\n        sb.append(\"ApplicationVersion: \").append(getApplicationVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ListAllowedNodeTypeModificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScaleUpModifications() != null)\r\n        sb.append(\"ScaleUpModifications: \").append(getScaleUpModifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.deleteEnvironmentConfiguration",
	"Comment": "deletes the draft configuration associated with the running environment.updating a running environment with any configuration changes creates a draft configuration set. you can get thedraft configuration using describeconfigurationsettings while the update is in progress or if the updatefails. the deploymentstatus for the draft configuration indicates whether the deployment is inprocess or has failed. the draft configuration remains in existence until it is deleted with this action.",
	"Method": "DeleteEnvironmentConfigurationResult deleteEnvironmentConfiguration(DeleteEnvironmentConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteEnvironmentConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DeleteRepositoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepository() != null)\r\n        sb.append(\"Repository: \").append(getRepository());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PurchaseScheduledInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getPurchaseRequests() != null)\r\n        sb.append(\"PurchaseRequests: \").append(getPurchaseRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeTargetGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn()).append(\",\");\r\n    if (getTargetGroupArns() != null)\r\n        sb.append(\"TargetGroupArns: \").append(getTargetGroupArns()).append(\",\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateContinuousBackupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContinuousBackupsDescription() != null)\r\n        sb.append(\"ContinuousBackupsDescription: \").append(getContinuousBackupsDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeApplicationVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationVersions() != null)\r\n        sb.append(\"ApplicationVersions: \").append(getApplicationVersions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.StartTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition()).append(\",\");\r\n    if (getOverrides() != null)\r\n        sb.append(\"Overrides: \").append(getOverrides()).append(\",\");\r\n    if (getContainerInstances() != null)\r\n        sb.append(\"ContainerInstances: \").append(getContainerInstances()).append(\",\");\r\n    if (getStartedBy() != null)\r\n        sb.append(\"StartedBy: \").append(getStartedBy()).append(\",\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getNetworkConfiguration() != null)\r\n        sb.append(\"NetworkConfiguration: \").append(getNetworkConfiguration()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getEnableECSManagedTags() != null)\r\n        sb.append(\"EnableECSManagedTags: \").append(getEnableECSManagedTags()).append(\",\");\r\n    if (getPropagateTags() != null)\r\n        sb.append(\"PropagateTags: \").append(getPropagateTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig.getConsistentReads",
	"Comment": "returns the consistent read behavior for this configuration.",
	"Method": "ConsistentReads getConsistentReads(ConsistentReads getConsistentReads){\r\n    return consistentReads;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.Builder.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkAsyncClient.swapEnvironmentCNAMEsAsync",
	"Comment": "simplified method form for invoking the swapenvironmentcnames operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<SwapEnvironmentCNAMEsResult> swapEnvironmentCNAMEsAsync(SwapEnvironmentCNAMEsRequest request,java.util.concurrent.Future<SwapEnvironmentCNAMEsResult> swapEnvironmentCNAMEsAsync,SwapEnvironmentCNAMEsRequest request,com.amazonaws.handlers.AsyncHandler<SwapEnvironmentCNAMEsRequest, SwapEnvironmentCNAMEsResult> asyncHandler,java.util.concurrent.Future<SwapEnvironmentCNAMEsResult> swapEnvironmentCNAMEsAsync,java.util.concurrent.Future<SwapEnvironmentCNAMEsResult> swapEnvironmentCNAMEsAsync,com.amazonaws.handlers.AsyncHandler<SwapEnvironmentCNAMEsRequest, SwapEnvironmentCNAMEsResult> asyncHandler){\r\n    return swapEnvironmentCNAMEsAsync(new SwapEnvironmentCNAMEsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ClassicLinkInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteNetworkInterfaceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteVpcEndpointServiceConfigurations",
	"Comment": "deletes one or more vpc endpoint service configurations in your account. before you delete the endpoint serviceconfiguration, you must reject any available or pendingacceptance interface endpointconnections that are attached to the service.",
	"Method": "DeleteVpcEndpointServiceConfigurationsResult deleteVpcEndpointServiceConfigurations(DeleteVpcEndpointServiceConfigurationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteVpcEndpointServiceConfigurations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.waiters.AmazonElastiCacheWaiters.cacheClusterDeleted",
	"Comment": "builds a cacheclusterdeleted waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeCacheClustersRequest> cacheClusterDeleted(){\r\n    return new WaiterBuilder<DescribeCacheClustersRequest, DescribeCacheClustersResult>().withSdkFunction(new DescribeCacheClustersFunction(client)).withAcceptors(new CacheClusterDeleted.IsDeletedMatcher(), new CacheClusterDeleted.IsCacheClusterNotFoundMatcher(), new CacheClusterDeleted.IsAvailableMatcher(), new CacheClusterDeleted.IsCreatingMatcher(), new CacheClusterDeleted.IsIncompatiblenetworkMatcher(), new CacheClusterDeleted.IsModifyingMatcher(), new CacheClusterDeleted.IsRestorefailedMatcher(), new CacheClusterDeleted.IsSnapshottingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteSubnetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSubnetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FleetLaunchTemplateOverridesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getMaxPrice() != null)\r\n        sb.append(\"MaxPrice: \").append(getMaxPrice()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getWeightedCapacity() != null)\r\n        sb.append(\"WeightedCapacity: \").append(getWeightedCapacity()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper.processKeyConditions",
	"Comment": "utility method for checking the validity of both hash and range keyconditions. it also tries to infer the correct index name from the pojoannotation, if such information is not directly specified by the user.",
	"Method": "void processKeyConditions(QueryRequest queryRequest,DynamoDBQueryExpression<T> expression,DynamoDBMapperTableModel<T> model){\r\n    final Map<String, Condition> hashKeyConditions = new LinkedHashMap<String, Condition>();\r\n    if (expression.getHashKeyValues() != null) {\r\n        for (final DynamoDBMapperFieldModel<T, Object> field : model.fields()) {\r\n            if (field.keyType() == HASH || !field.globalSecondaryIndexNames(HASH).isEmpty()) {\r\n                final Object value = field.get(expression.getHashKeyValues());\r\n                if (value != null) {\r\n                    hashKeyConditions.put(field.name(), field.eq(value));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    final Map<String, Condition> rangeKeyConditions = expression.getRangeKeyConditions();\r\n    final String keyCondExpression = queryRequest.getKeyConditionExpression();\r\n    if (keyCondExpression == null) {\r\n        if (isNullOrEmpty(hashKeyConditions)) {\r\n            throw new IllegalArgumentException(\"Illegal query expression: No hash key condition is found in the query\");\r\n        }\r\n    } else {\r\n        if (!isNullOrEmpty(hashKeyConditions)) {\r\n            throw new IllegalArgumentException(\"Illegal query expression: Either the hash key conditions or the key condition expression must be specified but not both.\");\r\n        }\r\n        if (!isNullOrEmpty(rangeKeyConditions)) {\r\n            throw new IllegalArgumentException(\"Illegal query expression: The range key conditions can only be specified when the key condition expression is not specified.\");\r\n        }\r\n        return;\r\n    }\r\n    if (rangeKeyConditions != null && rangeKeyConditions.size() > 1) {\r\n        throw new IllegalArgumentException(\"Illegal query expression: Conditions on multiple range keys (\" + rangeKeyConditions.keySet().toString() + \") are found in the query. DynamoDB service only accepts up to ONE range key condition.\");\r\n    }\r\n    final boolean hasRangeKeyCondition = (rangeKeyConditions != null) && (!rangeKeyConditions.isEmpty());\r\n    final String userProvidedIndexName = queryRequest.getIndexName();\r\n    final String primaryHashKeyName = model.hashKey().name();\r\n    boolean hasPrimaryHashKeyCondition = false;\r\n    final Map<String, Set<String>> annotatedGSIsOnHashKeys = new HashMap<String, Set<String>>();\r\n    String hashKeyNameForThisQuery = null;\r\n    boolean hasPrimaryRangeKeyCondition = false;\r\n    final Set<String> annotatedLSIsOnRangeKey = new HashSet<String>();\r\n    final Set<String> annotatedGSIsOnRangeKey = new HashSet<String>();\r\n    String rangeKeyNameForThisQuery = null;\r\n    if (hasRangeKeyCondition) {\r\n        for (String rangeKeyName : rangeKeyConditions.keySet()) {\r\n            rangeKeyNameForThisQuery = rangeKeyName;\r\n            final DynamoDBMapperFieldModel<T, Object> rk = model.field(rangeKeyName);\r\n            if (rk.keyType() == RANGE) {\r\n                hasPrimaryRangeKeyCondition = true;\r\n            }\r\n            annotatedLSIsOnRangeKey.addAll(rk.localSecondaryIndexNames());\r\n            annotatedGSIsOnRangeKey.addAll(rk.globalSecondaryIndexNames(RANGE));\r\n        }\r\n        if (!hasPrimaryRangeKeyCondition && annotatedLSIsOnRangeKey.isEmpty() && annotatedGSIsOnRangeKey.isEmpty()) {\r\n            throw new DynamoDBMappingException(\"The query contains a condition on a range key (\" + rangeKeyNameForThisQuery + \") \" + \"that is not annotated with either @DynamoDBRangeKey or @DynamoDBIndexRangeKey.\");\r\n        }\r\n    }\r\n    final boolean userProvidedLSIWithRangeKeyCondition = (userProvidedIndexName != null) && (annotatedLSIsOnRangeKey.contains(userProvidedIndexName));\r\n    final boolean hashOnlyLSIQuery = (userProvidedIndexName != null) && (!hasRangeKeyCondition) && model.localSecondaryIndex(userProvidedIndexName) != null;\r\n    final boolean userProvidedLSI = userProvidedLSIWithRangeKeyCondition || hashOnlyLSIQuery;\r\n    final boolean userProvidedGSIWithRangeKeyCondition = (userProvidedIndexName != null) && (annotatedGSIsOnRangeKey.contains(userProvidedIndexName));\r\n    final boolean hashOnlyGSIQuery = (userProvidedIndexName != null) && (!hasRangeKeyCondition) && model.globalSecondaryIndex(userProvidedIndexName) != null;\r\n    final boolean userProvidedGSI = userProvidedGSIWithRangeKeyCondition || hashOnlyGSIQuery;\r\n    if (userProvidedLSI && userProvidedGSI) {\r\n        throw new DynamoDBMappingException(\"Invalid query: \" + \"Index \\\"\" + userProvidedIndexName + \"\\\" \" + \"is annotateded as both a LSI and a GSI for attribute.\");\r\n    }\r\n    for (String hashKeyName : hashKeyConditions.keySet()) {\r\n        if (hashKeyName.equals(primaryHashKeyName)) {\r\n            hasPrimaryHashKeyCondition = true;\r\n        }\r\n        final DynamoDBMapperFieldModel<T, Object> hk = model.field(hashKeyName);\r\n        Collection<String> annotatedGSINames = hk.globalSecondaryIndexNames(HASH);\r\n        annotatedGSIsOnHashKeys.put(hashKeyName, annotatedGSINames == null ? new HashSet<String>() : new HashSet<String>(annotatedGSINames));\r\n        if (userProvidedIndexName != null) {\r\n            boolean foundHashKeyConditionValidWithUserProvidedIndex = false;\r\n            if (userProvidedLSI && hashKeyName.equals(primaryHashKeyName)) {\r\n                foundHashKeyConditionValidWithUserProvidedIndex = true;\r\n            } else if (userProvidedGSI && annotatedGSINames != null && annotatedGSINames.contains(userProvidedIndexName)) {\r\n                foundHashKeyConditionValidWithUserProvidedIndex = true;\r\n            }\r\n            if (foundHashKeyConditionValidWithUserProvidedIndex) {\r\n                if (hashKeyNameForThisQuery != null) {\r\n                    throw new IllegalArgumentException(\"Ambiguous query expression: More than one hash key EQ conditions (\" + hashKeyNameForThisQuery + \", \" + hashKeyName + \") are applicable to the specified index (\" + userProvidedIndexName + \"). \" + \"Please provide only one of them in the query expression.\");\r\n                } else {\r\n                    hashKeyNameForThisQuery = hashKeyName;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Map<String, Condition> keyConditions = new HashMap<String, Condition>();\r\n    if (userProvidedIndexName != null) {\r\n        if (hasRangeKeyCondition && (!userProvidedLSI) && (!userProvidedGSI)) {\r\n            throw new IllegalArgumentException(\"Illegal query expression: No range key condition is applicable to the specified index (\" + userProvidedIndexName + \"). \");\r\n        }\r\n        if (hashKeyNameForThisQuery == null) {\r\n            throw new IllegalArgumentException(\"Illegal query expression: No hash key condition is applicable to the specified index (\" + userProvidedIndexName + \"). \");\r\n        }\r\n        keyConditions.put(hashKeyNameForThisQuery, hashKeyConditions.get(hashKeyNameForThisQuery));\r\n        if (hasRangeKeyCondition) {\r\n            keyConditions.putAll(rangeKeyConditions);\r\n        }\r\n    } else {\r\n        if (hasRangeKeyCondition) {\r\n            String inferredIndexName = null;\r\n            hashKeyNameForThisQuery = null;\r\n            if (hasPrimaryHashKeyCondition && hasPrimaryRangeKeyCondition) {\r\n                hashKeyNameForThisQuery = primaryHashKeyName;\r\n            } else {\r\n                for (String hashKeyName : annotatedGSIsOnHashKeys.keySet()) {\r\n                    boolean foundValidQueryExpressionWithInferredIndex = false;\r\n                    String indexNameInferredByThisHashKey = null;\r\n                    if (hashKeyName.equals(primaryHashKeyName)) {\r\n                        if (annotatedLSIsOnRangeKey.size() == 1) {\r\n                            foundValidQueryExpressionWithInferredIndex = true;\r\n                            indexNameInferredByThisHashKey = annotatedLSIsOnRangeKey.iterator().next();\r\n                        }\r\n                    }\r\n                    Set<String> annotatedGSIsOnHashKey = annotatedGSIsOnHashKeys.get(hashKeyName);\r\n                    annotatedGSIsOnHashKey.retainAll(annotatedGSIsOnRangeKey);\r\n                    if (annotatedGSIsOnHashKey.size() == 1) {\r\n                        if (foundValidQueryExpressionWithInferredIndex) {\r\n                            hashKeyNameForThisQuery = hashKeyName;\r\n                            inferredIndexName = indexNameInferredByThisHashKey;\r\n                        }\r\n                        foundValidQueryExpressionWithInferredIndex = true;\r\n                        indexNameInferredByThisHashKey = annotatedGSIsOnHashKey.iterator().next();\r\n                    }\r\n                    if (foundValidQueryExpressionWithInferredIndex) {\r\n                        if (hashKeyNameForThisQuery != null) {\r\n                            throw new IllegalArgumentException(\"Ambiguous query expression: Found multiple valid queries: \" + \"(Hash: \\\"\" + hashKeyNameForThisQuery + \"\\\", Range: \\\"\" + rangeKeyNameForThisQuery + \"\\\", Index: \\\"\" + inferredIndexName + \"\\\") and \" + \"(Hash: \\\"\" + hashKeyName + \"\\\", Range: \\\"\" + rangeKeyNameForThisQuery + \"\\\", Index: \\\"\" + indexNameInferredByThisHashKey + \"\\\").\");\r\n                        } else {\r\n                            hashKeyNameForThisQuery = hashKeyName;\r\n                            inferredIndexName = indexNameInferredByThisHashKey;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (hashKeyNameForThisQuery != null) {\r\n                keyConditions.put(hashKeyNameForThisQuery, hashKeyConditions.get(hashKeyNameForThisQuery));\r\n                keyConditions.putAll(rangeKeyConditions);\r\n                queryRequest.setIndexName(inferredIndexName);\r\n            } else {\r\n                throw new IllegalArgumentException(\"Illegal query expression: Cannot infer the index name from the query expression.\");\r\n            }\r\n        } else {\r\n            if (hashKeyConditions.size() > 1) {\r\n                if (hasPrimaryHashKeyCondition) {\r\n                    keyConditions.put(primaryHashKeyName, hashKeyConditions.get(primaryHashKeyName));\r\n                } else {\r\n                    throw new IllegalArgumentException(\"Ambiguous query expression: More than one index hash key EQ conditions (\" + hashKeyConditions.keySet() + \") are applicable to the query. \" + \"Please provide only one of them in the query expression, or specify the appropriate index name.\");\r\n                }\r\n            } else {\r\n                String hashKeyName = annotatedGSIsOnHashKeys.keySet().iterator().next();\r\n                if (!hasPrimaryHashKeyCondition) {\r\n                    if (annotatedGSIsOnHashKeys.get(hashKeyName).size() == 1) {\r\n                        queryRequest.setIndexName(annotatedGSIsOnHashKeys.get(hashKeyName).iterator().next());\r\n                    } else if (annotatedGSIsOnHashKeys.get(hashKeyName).size() > 1) {\r\n                        throw new IllegalArgumentException(\"Ambiguous query expression: More than one GSIs (\" + annotatedGSIsOnHashKeys.get(hashKeyName) + \") are applicable to the query. \" + \"Please specify one of them in your query expression.\");\r\n                    } else {\r\n                        throw new IllegalArgumentException(\"Illegal query expression: No GSI is found in the @DynamoDBIndexHashKey annotation for attribute \" + \"\\\"\" + hashKeyName + \"\\\".\");\r\n                    }\r\n                }\r\n                keyConditions.putAll(hashKeyConditions);\r\n            }\r\n        }\r\n    }\r\n    queryRequest.setKeyConditions(keyConditions);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFpgaImageAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageAttribute() != null)\r\n        sb.append(\"FpgaImageAttribute: \").append(getFpgaImageAttribute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayRouteTableAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createVpcEndpoint",
	"Comment": "creates a vpc endpoint for a specified service. an endpoint enables you to create a private connection betweenyour vpc and the service. the service may be provided by aws, an aws marketplace partner, or another aws account.for more information, see vpcendpoints in the amazon virtual private cloud user guide.a gateway endpoint serves as a target for a route in your route table for traffic destined for theaws service. you can specify an endpoint policy to attach to the endpoint that will control access to the servicefrom your vpc. you can also specify the vpc route tables that use the endpoint.an interface endpoint is a network interface in your subnet that serves as an endpoint forcommunicating with the specified service. you can specify the subnets in which to create an endpoint, and thesecurity groups to associate with the endpoint network interface.use describevpcendpointservices to get a list of supported services.",
	"Method": "CreateVpcEndpointResult createVpcEndpoint(CreateVpcEndpointRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateVpcEndpoint(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListTaskDefinitionFamiliesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFamilies() != null)\r\n        sb.append(\"Families: \").append(getFamilies()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.RemoveTagsFromResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DescribeImagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageDetails() != null)\r\n        sb.append(\"ImageDetails: \").append(getImageDetails()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeInternetGatewaysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getInternetGatewayIds() != null)\r\n        sb.append(\"InternetGatewayIds: \").append(getInternetGatewayIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyCapacityReservationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityReservationId() != null)\r\n        sb.append(\"CapacityReservationId: \").append(getCapacityReservationId()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getEndDate() != null)\r\n        sb.append(\"EndDate: \").append(getEndDate()).append(\",\");\r\n    if (getEndDateType() != null)\r\n        sb.append(\"EndDateType: \").append(getEndDateType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeTargetHealthRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroupArn() != null)\r\n        sb.append(\"TargetGroupArn: \").append(getTargetGroupArn()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withNumberSet",
	"Comment": "sets the value of the specified key in the current valuemap to thegiven value.",
	"Method": "ValueMap withNumberSet(String key,Set<BigDecimal> val,ValueMap withNumberSet,String key,BigDecimal val,ValueMap withNumberSet,String key,Number val){\r\n    super.put(key, InternalUtils.toBigDecimalSet(val));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.PlatformFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getOperator() != null)\r\n        sb.append(\"Operator: \").append(getOperator()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DeregisterInstancesFromLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeTags",
	"Comment": "describes one or more of the tags for your ec2 resources.for more information about tags, see tagging your resources in theamazon elastic compute cloud user guide.",
	"Method": "DescribeTagsResult describeTags(DescribeTagsRequest request,DescribeTagsResult describeTags){\r\n    return describeTags(new DescribeTagsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.resetSnapshotAttribute",
	"Comment": "resets permission settings for the specified snapshot.for more information about modifying snapshot permissions, see sharingsnapshots in the amazon elastic compute cloud user guide.",
	"Method": "ResetSnapshotAttributeResult resetSnapshotAttribute(ResetSnapshotAttributeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeResetSnapshotAttribute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.waiters.AmazonElastiCacheWaiters.replicationGroupAvailable",
	"Comment": "builds a replicationgroupavailable waiter by using custom parameters waiterparameters and other parametersdefined in the waiters specification, and then polls until it determines whether the resource entered the desiredstate or not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeReplicationGroupsRequest> replicationGroupAvailable(){\r\n    return new WaiterBuilder<DescribeReplicationGroupsRequest, DescribeReplicationGroupsResult>().withSdkFunction(new DescribeReplicationGroupsFunction(client)).withAcceptors(new ReplicationGroupAvailable.IsAvailableMatcher(), new ReplicationGroupAvailable.IsDeletedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.modifyTargetGroup",
	"Comment": "modifies the health checks used when evaluating the health state of the targets in the specified target group.to monitor the health of the targets, use describetargethealth.",
	"Method": "ModifyTargetGroupResult modifyTargetGroup(ModifyTargetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyTargetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createRouteTable",
	"Comment": "creates a route table for the specified vpc. after you create a route table, you can add routes and associate thetable with a subnet.for more information, see route tables in theamazon virtual private cloud user guide.",
	"Method": "CreateRouteTableResult createRouteTable(CreateRouteTableRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateRouteTable(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkAsyncClient.describeEnvironmentsAsync",
	"Comment": "simplified method form for invoking the describeenvironments operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEnvironmentsResult> describeEnvironmentsAsync(DescribeEnvironmentsRequest request,java.util.concurrent.Future<DescribeEnvironmentsResult> describeEnvironmentsAsync,DescribeEnvironmentsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEnvironmentsRequest, DescribeEnvironmentsResult> asyncHandler,java.util.concurrent.Future<DescribeEnvironmentsResult> describeEnvironmentsAsync,java.util.concurrent.Future<DescribeEnvironmentsResult> describeEnvironmentsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEnvironmentsRequest, DescribeEnvironmentsResult> asyncHandler){\r\n    return describeEnvironmentsAsync(new DescribeEnvironmentsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Deployment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition()).append(\",\");\r\n    if (getDesiredCount() != null)\r\n        sb.append(\"DesiredCount: \").append(getDesiredCount()).append(\",\");\r\n    if (getPendingCount() != null)\r\n        sb.append(\"PendingCount: \").append(getPendingCount()).append(\",\");\r\n    if (getRunningCount() != null)\r\n        sb.append(\"RunningCount: \").append(getRunningCount()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getUpdatedAt() != null)\r\n        sb.append(\"UpdatedAt: \").append(getUpdatedAt()).append(\",\");\r\n    if (getLaunchType() != null)\r\n        sb.append(\"LaunchType: \").append(getLaunchType()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getNetworkConfiguration() != null)\r\n        sb.append(\"NetworkConfiguration: \").append(getNetworkConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Resource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getDoubleValue() != null)\r\n        sb.append(\"DoubleValue: \").append(getDoubleValue()).append(\",\");\r\n    if (getLongValue() != null)\r\n        sb.append(\"LongValue: \").append(getLongValue()).append(\",\");\r\n    if (getIntegerValue() != null)\r\n        sb.append(\"IntegerValue: \").append(getIntegerValue()).append(\",\");\r\n    if (getStringSetValue() != null)\r\n        sb.append(\"StringSetValue: \").append(getStringSetValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetReservedInstancesExchangeQuoteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstanceIds() != null)\r\n        sb.append(\"ReservedInstanceIds: \").append(getReservedInstanceIds()).append(\",\");\r\n    if (getTargetConfigurations() != null)\r\n        sb.append(\"TargetConfigurations: \").append(getTargetConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.CreateListenerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListeners() != null)\r\n        sb.append(\"Listeners: \").append(getListeners());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSecurityGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CreateCacheClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getAZMode() != null)\r\n        sb.append(\"AZMode: \").append(getAZMode()).append(\",\");\r\n    if (getPreferredAvailabilityZone() != null)\r\n        sb.append(\"PreferredAvailabilityZone: \").append(getPreferredAvailabilityZone()).append(\",\");\r\n    if (getPreferredAvailabilityZones() != null)\r\n        sb.append(\"PreferredAvailabilityZones: \").append(getPreferredAvailabilityZones()).append(\",\");\r\n    if (getNumCacheNodes() != null)\r\n        sb.append(\"NumCacheNodes: \").append(getNumCacheNodes()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getCacheSubnetGroupName() != null)\r\n        sb.append(\"CacheSubnetGroupName: \").append(getCacheSubnetGroupName()).append(\",\");\r\n    if (getCacheSecurityGroupNames() != null)\r\n        sb.append(\"CacheSecurityGroupNames: \").append(getCacheSecurityGroupNames()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getSnapshotArns() != null)\r\n        sb.append(\"SnapshotArns: \").append(getSnapshotArns()).append(\",\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getNotificationTopicArn() != null)\r\n        sb.append(\"NotificationTopicArn: \").append(getNotificationTopicArn()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getSnapshotRetentionLimit() != null)\r\n        sb.append(\"SnapshotRetentionLimit: \").append(getSnapshotRetentionLimit()).append(\",\");\r\n    if (getSnapshotWindow() != null)\r\n        sb.append(\"SnapshotWindow: \").append(getSnapshotWindow()).append(\",\");\r\n    if (getAuthToken() != null)\r\n        sb.append(\"AuthToken: \").append(getAuthToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.ItemUtils.toAttributeConditionMap",
	"Comment": "returns the low level representation of a collection of filter.",
	"Method": "Map<String, Condition> toAttributeConditionMap(Collection<? extends Filter<?>> filters){\r\n    if (filters == null)\r\n        return null;\r\n    Map<String, Condition> conditionMap = new LinkedHashMap<String, Condition>();\r\n    for (Filter<?> filter : filters) {\r\n        final String attr = filter.getAttribute();\r\n        final Object[] values = filter.getValues();\r\n        Condition condition = new Condition();\r\n        if (values != null) {\r\n            if (values.length > 0) {\r\n                AttributeValue[] avs = InternalUtils.toAttributeValues(values);\r\n                condition.withAttributeValueList(avs);\r\n            } else {\r\n                throw new IllegalStateException(\"Bug!\");\r\n            }\r\n        }\r\n        ComparisonOperator op = filter.getComparisonOperator();\r\n        if (op == null) {\r\n            throw new IllegalArgumentException(\"Comparison operator for attribute \" + filter.getAttribute() + \" must be specified\");\r\n        }\r\n        condition.withComparisonOperator(op);\r\n        conditionMap.put(attr, condition);\r\n    }\r\n    if (filters.size() != conditionMap.size())\r\n        throw new IllegalArgumentException(\"duplicates attribute names not allowed in input\");\r\n    return Collections.unmodifiableMap(conditionMap);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.EventDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventDate() != null)\r\n        sb.append(\"EventDate: \").append(getEventDate()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getSeverity() != null)\r\n        sb.append(\"Severity: \").append(getSeverity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createTransitGatewayRoute",
	"Comment": "creates a static route for the specified transit gateway route table.",
	"Method": "CreateTransitGatewayRouteResult createTransitGatewayRoute(CreateTransitGatewayRouteRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateTransitGatewayRoute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerAttributes() != null)\r\n        sb.append(\"LoadBalancerAttributes: \").append(getLoadBalancerAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.deleteApplication",
	"Comment": "deletes the specified application along with all associated versions and configurations. the application versionswill not be deleted from your amazon s3 bucket.you cannot delete an application that has a running environment.",
	"Method": "DeleteApplicationResult deleteApplication(DeleteApplicationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteApplication(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeReservedInstancesAsync",
	"Comment": "simplified method form for invoking the describereservedinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedInstancesResult> describeReservedInstancesAsync(DescribeReservedInstancesRequest request,java.util.concurrent.Future<DescribeReservedInstancesResult> describeReservedInstancesAsync,DescribeReservedInstancesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesRequest, DescribeReservedInstancesResult> asyncHandler,java.util.concurrent.Future<DescribeReservedInstancesResult> describeReservedInstancesAsync,java.util.concurrent.Future<DescribeReservedInstancesResult> describeReservedInstancesAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesRequest, DescribeReservedInstancesResult> asyncHandler){\r\n    return describeReservedInstancesAsync(new DescribeReservedInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportInstanceVolumeDetailItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getBytesConverted() != null)\r\n        sb.append(\"BytesConverted: \").append(getBytesConverted()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getVolume() != null)\r\n        sb.append(\"Volume: \").append(getVolume());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotFleetRequestsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSpotFleetRequestIds() != null)\r\n        sb.append(\"SpotFleetRequestIds: \").append(getSpotFleetRequestIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeInternetGatewaysAsync",
	"Comment": "simplified method form for invoking the describeinternetgateways operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeInternetGatewaysResult> describeInternetGatewaysAsync(DescribeInternetGatewaysRequest request,java.util.concurrent.Future<DescribeInternetGatewaysResult> describeInternetGatewaysAsync,DescribeInternetGatewaysRequest request,com.amazonaws.handlers.AsyncHandler<DescribeInternetGatewaysRequest, DescribeInternetGatewaysResult> asyncHandler,java.util.concurrent.Future<DescribeInternetGatewaysResult> describeInternetGatewaysAsync,java.util.concurrent.Future<DescribeInternetGatewaysResult> describeInternetGatewaysAsync,com.amazonaws.handlers.AsyncHandler<DescribeInternetGatewaysRequest, DescribeInternetGatewaysResult> asyncHandler){\r\n    return describeInternetGatewaysAsync(new DescribeInternetGatewaysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeInstanceStatusFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeInstanceStatusResult apply(DescribeInstanceStatusRequest describeInstanceStatusRequest){\r\n    return client.describeInstanceStatus(describeInstanceStatusRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcPeeringConnectionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcPeeringConnections() != null)\r\n        sb.append(\"VpcPeeringConnections: \").append(getVpcPeeringConnections());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeHostReservationOfferings",
	"Comment": "describes the dedicated host reservations that are available to purchase.the results describe all the dedicated host reservation offerings, including offerings that may not match theinstance family and region of your dedicated hosts. when purchasing an offering, ensure that the instance familyand region of the offering matches that of the dedicated hosts with which it is to be associated. for moreinformation about supported instance types, see dedicated hostsoverview in the amazon elastic compute cloud user guide.",
	"Method": "DescribeHostReservationOfferingsResult describeHostReservationOfferings(DescribeHostReservationOfferingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeHostReservationOfferings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpnConnectionRouteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SnapshotDiskContainer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getUserBucket() != null)\r\n        sb.append(\"UserBucket: \").append(getUserBucket());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.ReflectionUtils.getAnnotationFromGetterOrField",
	"Comment": "this method searches for a specific type of annotation that is applied toeither the specified getter method or its corresponding class field.returns the annotation if it is found, else null.",
	"Method": "T getAnnotationFromGetterOrField(Method getter,Class<T> annotationClass){\r\n    T onGetter = getter.getAnnotation(annotationClass);\r\n    if (onGetter != null) {\r\n        return onGetter;\r\n    }\r\n    String fieldName = getFieldNameByGetter(getter, true);\r\n    Field field = getClassFieldByName(getter.getDeclaringClass(), fieldName);\r\n    T onField = null;\r\n    if (field != null) {\r\n        onField = field.getAnnotation(annotationClass);\r\n    }\r\n    return onField;\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.VersionInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAgentVersion() != null)\r\n        sb.append(\"AgentVersion: \").append(getAgentVersion()).append(\",\");\r\n    if (getAgentHash() != null)\r\n        sb.append(\"AgentHash: \").append(getAgentHash()).append(\",\");\r\n    if (getDockerVersion() != null)\r\n        sb.append(\"DockerVersion: \").append(getDockerVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeInternetGatewaysAsync",
	"Comment": "simplified method form for invoking the describeinternetgateways operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeInternetGatewaysResult> describeInternetGatewaysAsync(DescribeInternetGatewaysRequest request,java.util.concurrent.Future<DescribeInternetGatewaysResult> describeInternetGatewaysAsync,DescribeInternetGatewaysRequest request,com.amazonaws.handlers.AsyncHandler<DescribeInternetGatewaysRequest, DescribeInternetGatewaysResult> asyncHandler,java.util.concurrent.Future<DescribeInternetGatewaysResult> describeInternetGatewaysAsync,java.util.concurrent.Future<DescribeInternetGatewaysResult> describeInternetGatewaysAsync,com.amazonaws.handlers.AsyncHandler<DescribeInternetGatewaysRequest, DescribeInternetGatewaysResult> asyncHandler){\r\n    return describeInternetGatewaysAsync(new DescribeInternetGatewaysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeClassicLinkInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DeleteReplicationGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getRetainPrimaryCluster() != null)\r\n        sb.append(\"RetainPrimaryCluster: \").append(getRetainPrimaryCluster()).append(\",\");\r\n    if (getFinalSnapshotIdentifier() != null)\r\n        sb.append(\"FinalSnapshotIdentifier: \").append(getFinalSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteRouteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRouteTableId() != null)\r\n        sb.append(\"RouteTableId: \").append(getRouteTableId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBReflector.getAttributeName",
	"Comment": "returns the attribute name corresponding to the given getter method.",
	"Method": "String getAttributeName(Method getter){\r\n    String attributeName;\r\n    readLockAttrName.lock();\r\n    try {\r\n        attributeName = attributeNameCache.get(getter);\r\n    } finally {\r\n        readLockAttrName.unlock();\r\n    }\r\n    if (attributeName != null)\r\n        return attributeName;\r\n    DynamoDBHashKey hashKeyAnnotation = ReflectionUtils.getAnnotationFromGetterOrField(getter, DynamoDBHashKey.class);\r\n    if (hashKeyAnnotation != null) {\r\n        attributeName = hashKeyAnnotation.attributeName();\r\n        if (attributeName != null && attributeName.length() > 0)\r\n            return cacheAttributeName(getter, attributeName);\r\n    }\r\n    DynamoDBIndexHashKey indexHashKey = ReflectionUtils.getAnnotationFromGetterOrField(getter, DynamoDBIndexHashKey.class);\r\n    if (indexHashKey != null) {\r\n        attributeName = indexHashKey.attributeName();\r\n        if (attributeName != null && attributeName.length() > 0)\r\n            return cacheAttributeName(getter, attributeName);\r\n    }\r\n    DynamoDBRangeKey rangeKey = ReflectionUtils.getAnnotationFromGetterOrField(getter, DynamoDBRangeKey.class);\r\n    if (rangeKey != null) {\r\n        attributeName = rangeKey.attributeName();\r\n        if (attributeName != null && attributeName.length() > 0)\r\n            return cacheAttributeName(getter, attributeName);\r\n    }\r\n    DynamoDBIndexRangeKey indexRangeKey = ReflectionUtils.getAnnotationFromGetterOrField(getter, DynamoDBIndexRangeKey.class);\r\n    if (indexRangeKey != null) {\r\n        attributeName = indexRangeKey.attributeName();\r\n        if (attributeName != null && attributeName.length() > 0)\r\n            return cacheAttributeName(getter, attributeName);\r\n    }\r\n    DynamoDBAttribute attribute = ReflectionUtils.getAnnotationFromGetterOrField(getter, DynamoDBAttribute.class);\r\n    if (attribute != null) {\r\n        attributeName = attribute.attributeName();\r\n        if (attributeName != null && attributeName.length() > 0)\r\n            return cacheAttributeName(getter, attributeName);\r\n    }\r\n    DynamoDBVersionAttribute version = ReflectionUtils.getAnnotationFromGetterOrField(getter, DynamoDBVersionAttribute.class);\r\n    if (version != null) {\r\n        attributeName = version.attributeName();\r\n        if (attributeName != null && attributeName.length() > 0)\r\n            return cacheAttributeName(getter, attributeName);\r\n    }\r\n    attributeName = ReflectionUtils.getFieldNameByGetter(getter, true);\r\n    return cacheAttributeName(getter, attributeName);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.describeLoadBalancers",
	"Comment": "describes the specified the load balancers. if no load balancers are specified, the call describes all of yourload balancers.",
	"Method": "DescribeLoadBalancersResult describeLoadBalancers(DescribeLoadBalancersRequest request,DescribeLoadBalancersResult describeLoadBalancers){\r\n    return describeLoadBalancers(new DescribeLoadBalancersRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcEndpointConnectionNotificationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturnValue() != null)\r\n        sb.append(\"ReturnValue: \").append(getReturnValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.describeReplicationGroupsAsync",
	"Comment": "simplified method form for invoking the describereplicationgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReplicationGroupsResult> describeReplicationGroupsAsync(DescribeReplicationGroupsRequest request,java.util.concurrent.Future<DescribeReplicationGroupsResult> describeReplicationGroupsAsync,DescribeReplicationGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReplicationGroupsRequest, DescribeReplicationGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeReplicationGroupsResult> describeReplicationGroupsAsync,java.util.concurrent.Future<DescribeReplicationGroupsResult> describeReplicationGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReplicationGroupsRequest, DescribeReplicationGroupsResult> asyncHandler){\r\n    return describeReplicationGroupsAsync(new DescribeReplicationGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData()).append(\",\");\r\n    if (getAddressingType() != null)\r\n        sb.append(\"AddressingType: \").append(getAddressingType()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement()).append(\",\");\r\n    if (getRamdiskId() != null)\r\n        sb.append(\"RamdiskId: \").append(getRamdiskId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getAllSecurityGroups() != null)\r\n        sb.append(\"AllSecurityGroups: \").append(getAllSecurityGroups()).append(\",\");\r\n    if (getMonitoringEnabled() != null)\r\n        sb.append(\"MonitoringEnabled: \").append(getMonitoringEnabled()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.HibernationOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigured() != null)\r\n        sb.append(\"Configured: \").append(getConfigured());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AttachVpnGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getVpnGatewayId() != null)\r\n        sb.append(\"VpnGatewayId: \").append(getVpnGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.Endpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UnassignIpv6AddressesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getUnassignedIpv6Addresses() != null)\r\n        sb.append(\"UnassignedIpv6Addresses: \").append(getUnassignedIpv6Addresses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.getTotalSegments",
	"Comment": "returns the total number of segments into which the scan will be divided.",
	"Method": "Integer getTotalSegments(){\r\n    return totalSegments;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheSecurityGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSecurityGroupName() != null)\r\n        sb.append(\"CacheSecurityGroupName: \").append(getCacheSecurityGroupName()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteFlowLogsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnsuccessful() != null)\r\n        sb.append(\"Unsuccessful: \").append(getUnsuccessful());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withBinary",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withBinary(String attrName,byte[] val,Item withBinary,String attrName,ByteBuffer val){\r\n    checkInvalidAttribute(attrName, val);\r\n    attributes.put(attrName, copyBytesFrom(val));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyHostsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccessful() != null)\r\n        sb.append(\"Successful: \").append(getSuccessful()).append(\",\");\r\n    if (getUnsuccessful() != null)\r\n        sb.append(\"Unsuccessful: \").append(getUnsuccessful());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeregisterTaskDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpcEndpointServiceConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnsuccessful() != null)\r\n        sb.append(\"Unsuccessful: \").append(getUnsuccessful());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TargetReservationValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservationValue() != null)\r\n        sb.append(\"ReservationValue: \").append(getReservationValue()).append(\",\");\r\n    if (getTargetConfiguration() != null)\r\n        sb.append(\"TargetConfiguration: \").append(getTargetConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UserBucket.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Key() != null)\r\n        sb.append(\"S3Key: \").append(getS3Key());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.SubmitContainerStateChangeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcknowledgment() != null)\r\n        sb.append(\"Acknowledgment: \").append(getAcknowledgment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateItemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getAttributeUpdates() != null)\r\n        sb.append(\"AttributeUpdates: \").append(getAttributeUpdates()).append(\",\");\r\n    if (getExpected() != null)\r\n        sb.append(\"Expected: \").append(getExpected()).append(\",\");\r\n    if (getConditionalOperator() != null)\r\n        sb.append(\"ConditionalOperator: \").append(getConditionalOperator()).append(\",\");\r\n    if (getReturnValues() != null)\r\n        sb.append(\"ReturnValues: \").append(getReturnValues()).append(\",\");\r\n    if (getReturnConsumedCapacity() != null)\r\n        sb.append(\"ReturnConsumedCapacity: \").append(getReturnConsumedCapacity()).append(\",\");\r\n    if (getReturnItemCollectionMetrics() != null)\r\n        sb.append(\"ReturnItemCollectionMetrics: \").append(getReturnItemCollectionMetrics()).append(\",\");\r\n    if (getUpdateExpression() != null)\r\n        sb.append(\"UpdateExpression: \").append(getUpdateExpression()).append(\",\");\r\n    if (getConditionExpression() != null)\r\n        sb.append(\"ConditionExpression: \").append(getConditionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames()).append(\",\");\r\n    if (getExpressionAttributeValues() != null)\r\n        sb.append(\"ExpressionAttributeValues: \").append(getExpressionAttributeValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeLoadBalancersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArns() != null)\r\n        sb.append(\"LoadBalancerArns: \").append(getLoadBalancerArns()).append(\",\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DetachVpnGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribePublicIpv4PoolsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicIpv4Pools() != null)\r\n        sb.append(\"PublicIpv4Pools: \").append(getPublicIpv4Pools()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.MaxCountRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getMaxCount() != null)\r\n        sb.append(\"MaxCount: \").append(getMaxCount()).append(\",\");\r\n    if (getDeleteSourceFromS3() != null)\r\n        sb.append(\"DeleteSourceFromS3: \").append(getDeleteSourceFromS3());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.HostOffering.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getHourlyPrice() != null)\r\n        sb.append(\"HourlyPrice: \").append(getHourlyPrice()).append(\",\");\r\n    if (getInstanceFamily() != null)\r\n        sb.append(\"InstanceFamily: \").append(getInstanceFamily()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId()).append(\",\");\r\n    if (getPaymentOption() != null)\r\n        sb.append(\"PaymentOption: \").append(getPaymentOption()).append(\",\");\r\n    if (getUpfrontPrice() != null)\r\n        sb.append(\"UpfrontPrice: \").append(getUpfrontPrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGateway.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getTransitGatewayArn() != null)\r\n        sb.append(\"TransitGatewayArn: \").append(getTransitGatewayArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.putAttributes",
	"Comment": "create or update an attribute on an amazon ecs resource. if the attribute does not exist, it is created. if theattribute exists, its value is replaced with the specified value. to delete an attribute, usedeleteattributes. for more information, see attributes in the amazon elastic container service developer guide.",
	"Method": "PutAttributesResult putAttributes(PutAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CopySnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDestinationRegion() != null)\r\n        sb.append(\"DestinationRegion: \").append(getDestinationRegion()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getPresignedUrl() != null)\r\n        sb.append(\"PresignedUrl: \").append(getPresignedUrl()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion()).append(\",\");\r\n    if (getSourceSnapshotId() != null)\r\n        sb.append(\"SourceSnapshotId: \").append(getSourceSnapshotId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeImagesFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeImagesResult apply(DescribeImagesRequest describeImagesRequest){\r\n    return client.describeImages(describeImagesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.SS.delete",
	"Comment": "returns a deleteaction for deleting the specified valuesfrom this string set.",
	"Method": "DeleteAction delete(String values,DeleteAction delete,Set<String> values){\r\n    return new DeleteAction(this, new LiteralOperand(values));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateCustomerGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomerGateway() != null)\r\n        sb.append(\"CustomerGateway: \").append(getCustomerGateway());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.modifyVpcEndpointServiceConfiguration",
	"Comment": "modifies the attributes of your vpc endpoint service configuration. you can change the network load balancers foryour service, and you can specify whether acceptance is required for requests to connect to your endpoint servicethrough an interface vpc endpoint.",
	"Method": "ModifyVpcEndpointServiceConfigurationResult modifyVpcEndpointServiceConfiguration(ModifyVpcEndpointServiceConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyVpcEndpointServiceConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.getReservedInstancesExchangeQuote",
	"Comment": "returns a quote and exchange information for exchanging one or more specified convertible reserved instances fora new convertible reserved instance. if the exchange cannot be performed, the reason is returned in the response.use acceptreservedinstancesexchangequote to perform the exchange.",
	"Method": "GetReservedInstancesExchangeQuoteResult getReservedInstancesExchangeQuote(GetReservedInstancesExchangeQuoteRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetReservedInstancesExchangeQuote(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CacheSecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getCacheSecurityGroupName() != null)\r\n        sb.append(\"CacheSecurityGroupName: \").append(getCacheSecurityGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEC2SecurityGroups() != null)\r\n        sb.append(\"EC2SecurityGroups: \").append(getEC2SecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.NodeGroupConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodeGroupId() != null)\r\n        sb.append(\"NodeGroupId: \").append(getNodeGroupId()).append(\",\");\r\n    if (getSlots() != null)\r\n        sb.append(\"Slots: \").append(getSlots()).append(\",\");\r\n    if (getReplicaCount() != null)\r\n        sb.append(\"ReplicaCount: \").append(getReplicaCount()).append(\",\");\r\n    if (getPrimaryAvailabilityZone() != null)\r\n        sb.append(\"PrimaryAvailabilityZone: \").append(getPrimaryAvailabilityZone()).append(\",\");\r\n    if (getReplicaAvailabilityZones() != null)\r\n        sb.append(\"ReplicaAvailabilityZones: \").append(getReplicaAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribePlatformVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcPeeringConnectionOptionsDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowDnsResolutionFromRemoteVpc() != null)\r\n        sb.append(\"AllowDnsResolutionFromRemoteVpc: \").append(getAllowDnsResolutionFromRemoteVpc()).append(\",\");\r\n    if (getAllowEgressFromLocalClassicLinkToRemoteVpc() != null)\r\n        sb.append(\"AllowEgressFromLocalClassicLinkToRemoteVpc: \").append(getAllowEgressFromLocalClassicLinkToRemoteVpc()).append(\",\");\r\n    if (getAllowEgressFromLocalVpcToRemoteClassicLink() != null)\r\n        sb.append(\"AllowEgressFromLocalVpcToRemoteClassicLink: \").append(getAllowEgressFromLocalVpcToRemoteClassicLink());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UnsuccessfulInstanceCreditSpecificationItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(getError());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeSpotPriceHistoryAsync",
	"Comment": "simplified method form for invoking the describespotpricehistory operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSpotPriceHistoryResult> describeSpotPriceHistoryAsync(DescribeSpotPriceHistoryRequest request,java.util.concurrent.Future<DescribeSpotPriceHistoryResult> describeSpotPriceHistoryAsync,DescribeSpotPriceHistoryRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSpotPriceHistoryRequest, DescribeSpotPriceHistoryResult> asyncHandler,java.util.concurrent.Future<DescribeSpotPriceHistoryResult> describeSpotPriceHistoryAsync,java.util.concurrent.Future<DescribeSpotPriceHistoryResult> describeSpotPriceHistoryAsync,com.amazonaws.handlers.AsyncHandler<DescribeSpotPriceHistoryRequest, DescribeSpotPriceHistoryResult> asyncHandler){\r\n    return describeSpotPriceHistoryAsync(new DescribeSpotPriceHistoryRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeCapacityReservationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityReservationIds() != null)\r\n        sb.append(\"CapacityReservationIds: \").append(getCapacityReservationIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeReservedInstancesOfferingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstancesOfferings() != null)\r\n        sb.append(\"ReservedInstancesOfferings: \").append(getReservedInstancesOfferings()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpnGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteTransitGatewayRouteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.AdditionalAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceIpv6Address.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6Address() != null)\r\n        sb.append(\"Ipv6Address: \").append(getIpv6Address());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DeleteEnvironmentConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AbstractAmazonECSAsync.createClusterAsync",
	"Comment": "simplified method form for invoking the createcluster operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateClusterResult> createClusterAsync(CreateClusterRequest request,java.util.concurrent.Future<CreateClusterResult> createClusterAsync,CreateClusterRequest request,com.amazonaws.handlers.AsyncHandler<CreateClusterRequest, CreateClusterResult> asyncHandler,java.util.concurrent.Future<CreateClusterResult> createClusterAsync,java.util.concurrent.Future<CreateClusterResult> createClusterAsync,com.amazonaws.handlers.AsyncHandler<CreateClusterRequest, CreateClusterResult> asyncHandler){\r\n    return createClusterAsync(new CreateClusterRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstanceRecurrenceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrequency() != null)\r\n        sb.append(\"Frequency: \").append(getFrequency()).append(\",\");\r\n    if (getInterval() != null)\r\n        sb.append(\"Interval: \").append(getInterval()).append(\",\");\r\n    if (getOccurrenceDays() != null)\r\n        sb.append(\"OccurrenceDays: \").append(getOccurrenceDays()).append(\",\");\r\n    if (getOccurrenceRelativeToEnd() != null)\r\n        sb.append(\"OccurrenceRelativeToEnd: \").append(getOccurrenceRelativeToEnd()).append(\",\");\r\n    if (getOccurrenceUnit() != null)\r\n        sb.append(\"OccurrenceUnit: \").append(getOccurrenceUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EnableVolumeIORequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EnableVpcClassicLinkResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateNetworkInterfaceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getIpv6AddressCount() != null)\r\n        sb.append(\"Ipv6AddressCount: \").append(getIpv6AddressCount()).append(\",\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getPrivateIpAddresses() != null)\r\n        sb.append(\"PrivateIpAddresses: \").append(getPrivateIpAddresses()).append(\",\");\r\n    if (getSecondaryPrivateIpAddressCount() != null)\r\n        sb.append(\"SecondaryPrivateIpAddressCount: \").append(getSecondaryPrivateIpAddressCount()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointServicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceNames() != null)\r\n        sb.append(\"ServiceNames: \").append(getServiceNames()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerListenersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getListeners() != null)\r\n        sb.append(\"Listeners: \").append(getListeners());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ValidateConfigurationSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessages() != null)\r\n        sb.append(\"Messages: \").append(getMessages());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EnableVolumeIOResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describePlacementGroupsAsync",
	"Comment": "simplified method form for invoking the describeplacementgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribePlacementGroupsResult> describePlacementGroupsAsync(DescribePlacementGroupsRequest request,java.util.concurrent.Future<DescribePlacementGroupsResult> describePlacementGroupsAsync,DescribePlacementGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribePlacementGroupsRequest, DescribePlacementGroupsResult> asyncHandler,java.util.concurrent.Future<DescribePlacementGroupsResult> describePlacementGroupsAsync,java.util.concurrent.Future<DescribePlacementGroupsResult> describePlacementGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribePlacementGroupsRequest, DescribePlacementGroupsResult> asyncHandler){\r\n    return describePlacementGroupsAsync(new DescribePlacementGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportKeyPairResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyFingerprint() != null)\r\n        sb.append(\"KeyFingerprint: \").append(getKeyFingerprint()).append(\",\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeLimitsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.saveIfNotExists",
	"Comment": "saves the object given into dynamodb with the condition that the hashand if applicable, the range key, does not already exist.",
	"Method": "void saveIfNotExists(T object){\r\n    final DynamoDBSaveExpression saveExpression = new DynamoDBSaveExpression();\r\n    for (final DynamoDBMapperFieldModel<T, Object> key : model.keys()) {\r\n        saveExpression.withExpectedEntry(key.name(), new ExpectedAttributeValue().withExists(false));\r\n    }\r\n    mapper.<T>save(object, saveExpression);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DescribeTaskDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition()).append(\",\");\r\n    if (getInclude() != null)\r\n        sb.append(\"Include: \").append(getInclude());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createVolume",
	"Comment": "creates an ebs volume that can be attached to an instance in the same availability zone. the volume is created inthe regional endpoint that you send the http request to. for more information see regions and endpoints.you can create a new empty volume or restore a volume from an ebs snapshot. any aws marketplace product codesfrom the snapshot are propagated to the volume.you can create encrypted volumes with the encrypted parameter. encrypted volumes may only beattached to instances that support amazon ebs encryption. volumes that are created from encrypted snapshots arealso automatically encrypted. for more information, see amazon ebs encryption in theamazon elastic compute cloud user guide.you can tag your volumes during creation. for more information, see tagging your amazon ec2 resourcesin the amazon elastic compute cloud user guide.for more information, see creating an amazon ebsvolume in the amazon elastic compute cloud user guide.",
	"Method": "CreateVolumeResult createVolume(CreateVolumeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateVolume(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.NULL",
	"Comment": "creates a path operand that refers to a null attribute for the purpose of building expressions.",
	"Method": "NULL NULL(String path){\r\n    return new NULL(path);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFleetsInstances.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateAndOverrides() != null)\r\n        sb.append(\"LaunchTemplateAndOverrides: \").append(getLaunchTemplateAndOverrides()).append(\",\");\r\n    if (getLifecycle() != null)\r\n        sb.append(\"Lifecycle: \").append(getLifecycle()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReportInstanceStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getReasonCodes() != null)\r\n        sb.append(\"ReasonCodes: \").append(getReasonCodes()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeMovingAddressesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMovingAddressStatuses() != null)\r\n        sb.append(\"MovingAddressStatuses: \").append(getMovingAddressStatuses()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEnvironmentResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentResources() != null)\r\n        sb.append(\"EnvironmentResources: \").append(getEnvironmentResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeploymentConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaximumPercent() != null)\r\n        sb.append(\"MaximumPercent: \").append(getMaximumPercent()).append(\",\");\r\n    if (getMinimumHealthyPercent() != null)\r\n        sb.append(\"MinimumHealthyPercent: \").append(getMinimumHealthyPercent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.UpdateServiceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getService() != null)\r\n        sb.append(\"Service: \").append(getService());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcClassicLinkRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getVpcIds() != null)\r\n        sb.append(\"VpcIds: \").append(getVpcIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.deleteSpotDatafeedSubscriptionAsync",
	"Comment": "simplified method form for invoking the deletespotdatafeedsubscription operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DeleteSpotDatafeedSubscriptionResult> deleteSpotDatafeedSubscriptionAsync(DeleteSpotDatafeedSubscriptionRequest request,java.util.concurrent.Future<DeleteSpotDatafeedSubscriptionResult> deleteSpotDatafeedSubscriptionAsync,DeleteSpotDatafeedSubscriptionRequest request,com.amazonaws.handlers.AsyncHandler<DeleteSpotDatafeedSubscriptionRequest, DeleteSpotDatafeedSubscriptionResult> asyncHandler,java.util.concurrent.Future<DeleteSpotDatafeedSubscriptionResult> deleteSpotDatafeedSubscriptionAsync,java.util.concurrent.Future<DeleteSpotDatafeedSubscriptionResult> deleteSpotDatafeedSubscriptionAsync,com.amazonaws.handlers.AsyncHandler<DeleteSpotDatafeedSubscriptionRequest, DeleteSpotDatafeedSubscriptionResult> asyncHandler){\r\n    return deleteSpotDatafeedSubscriptionAsync(new DeleteSpotDatafeedSubscriptionRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpnConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpnConnection() != null)\r\n        sb.append(\"VpnConnection: \").append(getVpnConnection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.PolicyDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyTypeName() != null)\r\n        sb.append(\"PolicyTypeName: \").append(getPolicyTypeName()).append(\",\");\r\n    if (getPolicyAttributeDescriptions() != null)\r\n        sb.append(\"PolicyAttributeDescriptions: \").append(getPolicyAttributeDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeTargetGroupAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroupArn() != null)\r\n        sb.append(\"TargetGroupArn: \").append(getTargetGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpcEndpointConnectionNotificationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionNotification() != null)\r\n        sb.append(\"ConnectionNotification: \").append(getConnectionNotification()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSecurityGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getGroupIds() != null)\r\n        sb.append(\"GroupIds: \").append(getGroupIds()).append(\",\");\r\n    if (getGroupNames() != null)\r\n        sb.append(\"GroupNames: \").append(getGroupNames()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DetachNetworkInterfaceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResponseLaunchTemplateData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName()).append(\",\");\r\n    if (getMonitoring() != null)\r\n        sb.append(\"Monitoring: \").append(getMonitoring()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement()).append(\",\");\r\n    if (getRamDiskId() != null)\r\n        sb.append(\"RamDiskId: \").append(getRamDiskId()).append(\",\");\r\n    if (getDisableApiTermination() != null)\r\n        sb.append(\"DisableApiTermination: \").append(getDisableApiTermination()).append(\",\");\r\n    if (getInstanceInitiatedShutdownBehavior() != null)\r\n        sb.append(\"InstanceInitiatedShutdownBehavior: \").append(getInstanceInitiatedShutdownBehavior()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications()).append(\",\");\r\n    if (getElasticGpuSpecifications() != null)\r\n        sb.append(\"ElasticGpuSpecifications: \").append(getElasticGpuSpecifications()).append(\",\");\r\n    if (getElasticInferenceAccelerators() != null)\r\n        sb.append(\"ElasticInferenceAccelerators: \").append(getElasticInferenceAccelerators()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getInstanceMarketOptions() != null)\r\n        sb.append(\"InstanceMarketOptions: \").append(getInstanceMarketOptions()).append(\",\");\r\n    if (getCreditSpecification() != null)\r\n        sb.append(\"CreditSpecification: \").append(getCreditSpecification()).append(\",\");\r\n    if (getCpuOptions() != null)\r\n        sb.append(\"CpuOptions: \").append(getCpuOptions()).append(\",\");\r\n    if (getCapacityReservationSpecification() != null)\r\n        sb.append(\"CapacityReservationSpecification: \").append(getCapacityReservationSpecification()).append(\",\");\r\n    if (getHibernationOptions() != null)\r\n        sb.append(\"HibernationOptions: \").append(getHibernationOptions()).append(\",\");\r\n    if (getLicenseSpecifications() != null)\r\n        sb.append(\"LicenseSpecifications: \").append(getLicenseSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeNetworkInterfacePermissionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfacePermissions() != null)\r\n        sb.append(\"NetworkInterfacePermissions: \").append(getNetworkInterfacePermissions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getImportTaskId() != null)\r\n        sb.append(\"ImportTaskId: \").append(getImportTaskId()).append(\",\");\r\n    if (getSnapshotTaskDetail() != null)\r\n        sb.append(\"SnapshotTaskDetail: \").append(getSnapshotTaskDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ContainerInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerInstanceArn() != null)\r\n        sb.append(\"ContainerInstanceArn: \").append(getContainerInstanceArn()).append(\",\");\r\n    if (getEc2InstanceId() != null)\r\n        sb.append(\"Ec2InstanceId: \").append(getEc2InstanceId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getVersionInfo() != null)\r\n        sb.append(\"VersionInfo: \").append(getVersionInfo()).append(\",\");\r\n    if (getRemainingResources() != null)\r\n        sb.append(\"RemainingResources: \").append(getRemainingResources()).append(\",\");\r\n    if (getRegisteredResources() != null)\r\n        sb.append(\"RegisteredResources: \").append(getRegisteredResources()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getAgentConnected() != null)\r\n        sb.append(\"AgentConnected: \").append(getAgentConnected()).append(\",\");\r\n    if (getRunningTasksCount() != null)\r\n        sb.append(\"RunningTasksCount: \").append(getRunningTasksCount()).append(\",\");\r\n    if (getPendingTasksCount() != null)\r\n        sb.append(\"PendingTasksCount: \").append(getPendingTasksCount()).append(\",\");\r\n    if (getAgentUpdateStatus() != null)\r\n        sb.append(\"AgentUpdateStatus: \").append(getAgentUpdateStatus()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getRegisteredAt() != null)\r\n        sb.append(\"RegisteredAt: \").append(getRegisteredAt()).append(\",\");\r\n    if (getAttachments() != null)\r\n        sb.append(\"Attachments: \").append(getAttachments()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.describeCacheClustersAsync",
	"Comment": "simplified method form for invoking the describecacheclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCacheClustersResult> describeCacheClustersAsync(DescribeCacheClustersRequest request,java.util.concurrent.Future<DescribeCacheClustersResult> describeCacheClustersAsync,DescribeCacheClustersRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCacheClustersRequest, DescribeCacheClustersResult> asyncHandler,java.util.concurrent.Future<DescribeCacheClustersResult> describeCacheClustersAsync,java.util.concurrent.Future<DescribeCacheClustersResult> describeCacheClustersAsync,com.amazonaws.handlers.AsyncHandler<DescribeCacheClustersRequest, DescribeCacheClustersResult> asyncHandler){\r\n    return describeCacheClustersAsync(new DescribeCacheClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ElasticInferenceAccelerator.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.attachLoadBalancerToSubnets",
	"Comment": "adds one or more subnets to the set of configured subnets for the specified load balancer.the load balancer evenly distributes requests across all registered subnets. for more information, see add or removesubnets for your load balancer in a vpc in the classic load balancers guide.",
	"Method": "AttachLoadBalancerToSubnetsResult attachLoadBalancerToSubnets(AttachLoadBalancerToSubnetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAttachLoadBalancerToSubnets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FpgaImageAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageId() != null)\r\n        sb.append(\"FpgaImageId: \").append(getFpgaImageId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLoadPermissions() != null)\r\n        sb.append(\"LoadPermissions: \").append(getLoadPermissions()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateCapacityReservationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityReservation() != null)\r\n        sb.append(\"CapacityReservation: \").append(getCapacityReservation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.internal.Filter.between",
	"Comment": "creates and returns a condition of the range key that has a value betweenthe given values.",
	"Method": "T between(Object low,Object hi){\r\n    return _withComparisonOperator(ComparisonOperator.BETWEEN)._withValues(low, hi);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.ConvenientMapSetterTest.testPredefinedMapEntryMethod",
	"Comment": "test on using predefined map entry setter to provide map parameter.",
	"Method": "void testPredefinedMapEntryMethod(){\r\n    ScanRequest scanRequest = new ScanRequest().withExclusiveStartKey(new AbstractMap.SimpleEntry<String, AttributeValue>(\"hash-key\", new AttributeValue().withS(\"1\")), new AbstractMap.SimpleEntry<String, AttributeValue>(\"range-key\", new AttributeValue().withS(\"2\")));\r\n    Map<String, AttributeValue> item = scanRequest.getExclusiveStartKey();\r\n    assertEquals(2, item.size());\r\n    assertEquals(\"1\", item.get(\"hash-key\").getS());\r\n    assertEquals(\"2\", item.get(\"range-key\").getS());\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.Cluster.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getResourcesVpcConfig() != null)\r\n        sb.append(\"ResourcesVpcConfig: \").append(getResourcesVpcConfig()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCertificateAuthority() != null)\r\n        sb.append(\"CertificateAuthority: \").append(getCertificateAuthority()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.setExpressionAttributeNames",
	"Comment": "one or more substitution variables for simplifying complex expressions.",
	"Method": "void setExpressionAttributeNames(java.util.Map<String, String> expressionAttributeNames){\r\n    this.expressionAttributeNames = expressionAttributeNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PurchaseScheduledInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduledInstanceSet() != null)\r\n        sb.append(\"ScheduledInstanceSet: \").append(getScheduledInstanceSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointConnectionNotificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionNotificationId() != null)\r\n        sb.append(\"ConnectionNotificationId: \").append(getConnectionNotificationId()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeHostsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getHostIds() != null)\r\n        sb.append(\"HostIds: \").append(getHostIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AbstractAmazonECSAsync.describeClustersAsync",
	"Comment": "simplified method form for invoking the describeclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync(DescribeClustersRequest request,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,DescribeClustersRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClustersRequest, DescribeClustersResult> asyncHandler,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,com.amazonaws.handlers.AsyncHandler<DescribeClustersRequest, DescribeClustersResult> asyncHandler){\r\n    return describeClustersAsync(new DescribeClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyIdFormatRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getUseLongIds() != null)\r\n        sb.append(\"UseLongIds: \").append(getUseLongIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RevokeSecurityGroupEgressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getIpPermissions() != null)\r\n        sb.append(\"IpPermissions: \").append(getIpPermissions()).append(\",\");\r\n    if (getCidrIp() != null)\r\n        sb.append(\"CidrIp: \").append(getCidrIp()).append(\",\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getIpProtocol() != null)\r\n        sb.append(\"IpProtocol: \").append(getIpProtocol()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort()).append(\",\");\r\n    if (getSourceSecurityGroupName() != null)\r\n        sb.append(\"SourceSecurityGroupName: \").append(getSourceSecurityGroupName()).append(\",\");\r\n    if (getSourceSecurityGroupOwnerId() != null)\r\n        sb.append(\"SourceSecurityGroupOwnerId: \").append(getSourceSecurityGroupOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeIdFormatAsync",
	"Comment": "simplified method form for invoking the describeidformat operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeIdFormatResult> describeIdFormatAsync(DescribeIdFormatRequest request,java.util.concurrent.Future<DescribeIdFormatResult> describeIdFormatAsync,DescribeIdFormatRequest request,com.amazonaws.handlers.AsyncHandler<DescribeIdFormatRequest, DescribeIdFormatResult> asyncHandler,java.util.concurrent.Future<DescribeIdFormatResult> describeIdFormatAsync,java.util.concurrent.Future<DescribeIdFormatResult> describeIdFormatAsync,com.amazonaws.handlers.AsyncHandler<DescribeIdFormatRequest, DescribeIdFormatResult> asyncHandler){\r\n    return describeIdFormatAsync(new DescribeIdFormatRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.listTagsOfResource",
	"Comment": "list all tags on an amazon dynamodb resource. you can call listtagsofresource up to 10 times per second, peraccount.for an overview on tagging dynamodb resources, see tagging for dynamodb inthe amazon dynamodb developer guide.",
	"Method": "ListTagsOfResourceResult listTagsOfResource(ListTagsOfResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTagsOfResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.getScanFilter",
	"Comment": "returns the scan filter as a map of attribute names to conditions.",
	"Method": "Map<String, Condition> getScanFilter(){\r\n    return scanFilter;\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.CreateRepositoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepository() != null)\r\n        sb.append(\"Repository: \").append(getRepository());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeInternetGatewaysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInternetGateways() != null)\r\n        sb.append(\"InternetGateways: \").append(getInternetGateways());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DescribeContainerInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerInstances() != null)\r\n        sb.append(\"ContainerInstances: \").append(getContainerInstances()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyTypeName() != null)\r\n        sb.append(\"PolicyTypeName: \").append(getPolicyTypeName()).append(\",\");\r\n    if (getPolicyAttributes() != null)\r\n        sb.append(\"PolicyAttributes: \").append(getPolicyAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.AmazonEKSClient.listClusters",
	"Comment": "lists the amazon eks clusters in your aws account in the specified region.",
	"Method": "ListClustersResult listClusters(ListClustersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListClusters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CopyImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSourceImageId() != null)\r\n        sb.append(\"SourceImageId: \").append(getSourceImageId()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceBlockDeviceMappingSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getEbs() != null)\r\n        sb.append(\"Ebs: \").append(getEbs()).append(\",\");\r\n    if (getNoDevice() != null)\r\n        sb.append(\"NoDevice: \").append(getNoDevice()).append(\",\");\r\n    if (getVirtualName() != null)\r\n        sb.append(\"VirtualName: \").append(getVirtualName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeModification() != null)\r\n        sb.append(\"VolumeModification: \").append(getVolumeModification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DeleteListenerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.addTags",
	"Comment": "adds the specified tags to the specified load balancer. each load balancer can have a maximum of 10 tags.each tag consists of a key and an optional value. if a tag with the same key is already associated with the loadbalancer, addtags updates its value.for more information, see tag your classic loadbalancer in the classic load balancers guide.",
	"Method": "AddTagsResult addTags(AddTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.withProjectionExpression",
	"Comment": "a string that identifies one or more attributes to retrieve from thetable. these attributes can include scalars, sets, or elements of ajson document. the attributes in the expression must be separated bycommas. if no attribute names are specified, then all attributeswill be returned. if any of the requested attributes are not found,they will not appear in the result. for more information, go to accessingitem attributes in the amazon dynamodb developer guide.returns a reference to this object so that method calls can be chained together.",
	"Method": "DynamoDBQueryExpression<T> withProjectionExpression(String projectionExpression){\r\n    this.projectionExpression = projectionExpression;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyFpgaImageAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageAttribute() != null)\r\n        sb.append(\"FpgaImageAttribute: \").append(getFpgaImageAttribute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeScheduledInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getScheduledInstanceSet() != null)\r\n        sb.append(\"ScheduledInstanceSet: \").append(getScheduledInstanceSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.PendingModifiedValues.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumCacheNodes() != null)\r\n        sb.append(\"NumCacheNodes: \").append(getNumCacheNodes()).append(\",\");\r\n    if (getCacheNodeIdsToRemove() != null)\r\n        sb.append(\"CacheNodeIdsToRemove: \").append(getCacheNodeIdsToRemove()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ContainerOverride.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getCpu() != null)\r\n        sb.append(\"Cpu: \").append(getCpu()).append(\",\");\r\n    if (getMemory() != null)\r\n        sb.append(\"Memory: \").append(getMemory()).append(\",\");\r\n    if (getMemoryReservation() != null)\r\n        sb.append(\"MemoryReservation: \").append(getMemoryReservation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeReservedInstancesListingsAsync",
	"Comment": "simplified method form for invoking the describereservedinstanceslistings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedInstancesListingsResult> describeReservedInstancesListingsAsync(DescribeReservedInstancesListingsRequest request,java.util.concurrent.Future<DescribeReservedInstancesListingsResult> describeReservedInstancesListingsAsync,DescribeReservedInstancesListingsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesListingsRequest, DescribeReservedInstancesListingsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedInstancesListingsResult> describeReservedInstancesListingsAsync,java.util.concurrent.Future<DescribeReservedInstancesListingsResult> describeReservedInstancesListingsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedInstancesListingsRequest, DescribeReservedInstancesListingsResult> asyncHandler){\r\n    return describeReservedInstancesListingsAsync(new DescribeReservedInstancesListingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.vpnConnectionAvailable",
	"Comment": "builds a vpnconnectionavailable waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVpnConnectionsRequest> vpnConnectionAvailable(){\r\n    return new WaiterBuilder<DescribeVpnConnectionsRequest, DescribeVpnConnectionsResult>().withSdkFunction(new DescribeVpnConnectionsFunction(client)).withAcceptors(new VpnConnectionAvailable.IsAvailableMatcher(), new VpnConnectionAvailable.IsDeletingMatcher(), new VpnConnectionAvailable.IsDeletedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateAddressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeTimeToLiveRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteVpcEndpoints",
	"Comment": "deletes one or more specified vpc endpoints. deleting a gateway endpoint also deletes the endpoint routes in theroute tables that were associated with the endpoint. deleting an interface endpoint deletes the endpoint networkinterfaces.",
	"Method": "DeleteVpcEndpointsResult deleteVpcEndpoints(DeleteVpcEndpointsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteVpcEndpoints(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.setExpected",
	"Comment": "sets the expected condition to the map of attribute names to expected attribute values given.",
	"Method": "void setExpected(Map<String, ExpectedAttributeValue> expectedAttributes){\r\n    this.expectedAttributes = expectedAttributes;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.AddTagsToResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.ImageFailure.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.Image.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getImageManifest() != null)\r\n        sb.append(\"ImageManifest: \").append(getImageManifest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBReflector.hasPrimaryRangeKey",
	"Comment": "returns true if and only if the specified class has declared aprimary range key.",
	"Method": "boolean hasPrimaryRangeKey(Class<?> clazz){\r\n    return getPrimaryRangeKeyGetter(clazz) != null;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeInstanceHealthRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.submitContainerStateChange",
	"Comment": "this action is only used by the amazon ecs agent, and it is not intended for use outside of the agent.sent to acknowledge that a container changed states.",
	"Method": "SubmitContainerStateChangeResult submitContainerStateChange(SubmitContainerStateChangeRequest request,SubmitContainerStateChangeResult submitContainerStateChange){\r\n    return submitContainerStateChange(new SubmitContainerStateChangeRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.copyImage",
	"Comment": "initiates the copy of an ami from the specified source region to the current region. you specify the destinationregion by using its endpoint when making the request.copies of encrypted backing snapshots for the ami are encrypted. copies of unencrypted backing snapshots remainunencrypted, unless you set encrypted during the copy operation. you cannot create an unencryptedcopy of an encrypted backing snapshot.for more information about the prerequisites and limits when copying an ami, see copying an ami in the amazonelastic compute cloud user guide.",
	"Method": "CopyImageResult copyImage(CopyImageRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCopyImage(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ClassicLoadBalancer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateSubnetCidrBlockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6CidrBlock() != null)\r\n        sb.append(\"Ipv6CidrBlock: \").append(getIpv6CidrBlock()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.retrieveEnvironmentInfo",
	"Comment": "retrieves the compiled information from a requestenvironmentinfo request.related topicsrequestenvironmentinfo",
	"Method": "RetrieveEnvironmentInfoResult retrieveEnvironmentInfo(RetrieveEnvironmentInfoRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRetrieveEnvironmentInfo(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.SubmitContainerStateChangeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getTask() != null)\r\n        sb.append(\"Task: \").append(getTask()).append(\",\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getExitCode() != null)\r\n        sb.append(\"ExitCode: \").append(getExitCode()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getNetworkBindings() != null)\r\n        sb.append(\"NetworkBindings: \").append(getNetworkBindings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.StopInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds()).append(\",\");\r\n    if (getHibernate() != null)\r\n        sb.append(\"Hibernate: \").append(getHibernate()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribePlatformVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatformDescription() != null)\r\n        sb.append(\"PlatformDescription: \").append(getPlatformDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListServicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceArns() != null)\r\n        sb.append(\"ServiceArns: \").append(getServiceArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCancelledSpotInstanceRequests() != null)\r\n        sb.append(\"CancelledSpotInstanceRequests: \").append(getCancelledSpotInstanceRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpnGatewaysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpnGateways() != null)\r\n        sb.append(\"VpnGateways: \").append(getVpnGateways());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeStaleSecurityGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getStaleSecurityGroupSet() != null)\r\n        sb.append(\"StaleSecurityGroupSet: \").append(getStaleSecurityGroupSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DeleteLifecyclePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeReservedInstancesListingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getReservedInstancesId() != null)\r\n        sb.append(\"ReservedInstancesId: \").append(getReservedInstancesId()).append(\",\");\r\n    if (getReservedInstancesListingId() != null)\r\n        sb.append(\"ReservedInstancesListingId: \").append(getReservedInstancesListingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeImportImageTasksAsync",
	"Comment": "simplified method form for invoking the describeimportimagetasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeImportImageTasksResult> describeImportImageTasksAsync(DescribeImportImageTasksRequest request,java.util.concurrent.Future<DescribeImportImageTasksResult> describeImportImageTasksAsync,DescribeImportImageTasksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeImportImageTasksRequest, DescribeImportImageTasksResult> asyncHandler,java.util.concurrent.Future<DescribeImportImageTasksResult> describeImportImageTasksAsync,java.util.concurrent.Future<DescribeImportImageTasksResult> describeImportImageTasksAsync,com.amazonaws.handlers.AsyncHandler<DescribeImportImageTasksRequest, DescribeImportImageTasksResult> asyncHandler){\r\n    return describeImportImageTasksAsync(new DescribeImportImageTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceRouteTableAssociationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNewAssociationId() != null)\r\n        sb.append(\"NewAssociationId: \").append(getNewAssociationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceStatusDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImpairedSince() != null)\r\n        sb.append(\"ImpairedSince: \").append(getImpairedSince()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.waiters.AmazonElastiCacheWaiters.cacheClusterAvailable",
	"Comment": "builds a cacheclusteravailable waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeCacheClustersRequest> cacheClusterAvailable(){\r\n    return new WaiterBuilder<DescribeCacheClustersRequest, DescribeCacheClustersResult>().withSdkFunction(new DescribeCacheClustersFunction(client)).withAcceptors(new CacheClusterAvailable.IsAvailableMatcher(), new CacheClusterAvailable.IsDeletedMatcher(), new CacheClusterAvailable.IsDeletingMatcher(), new CacheClusterAvailable.IsIncompatiblenetworkMatcher(), new CacheClusterAvailable.IsRestorefailedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribePlacementGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getGroupNames() != null)\r\n        sb.append(\"GroupNames: \").append(getGroupNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.SetAction.asSubstituted",
	"Comment": "returns the operand for this update expression as a string, substitutedif necessary with tokens using the given substitution context.",
	"Method": "String asSubstituted(SubstitutionContext context){\r\n    return new StringBuilder(getPathOperand().asSubstituted(context)).append(\" = \").append(getValue().asSubstituted(context)).toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeAggregateIdFormatRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTransitGatewayRouteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoute() != null)\r\n        sb.append(\"Route: \").append(getRoute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CheckDNSAvailabilityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCNAMEPrefix() != null)\r\n        sb.append(\"CNAMEPrefix: \").append(getCNAMEPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.detachLoadBalancerFromSubnets",
	"Comment": "removes the specified subnets from the set of configured subnets for the load balancer.after a subnet is removed, all ec2 instances registered with the load balancer in the removed subnet go into theoutofservice state. then, the load balancer balances the traffic among the remaining routablesubnets.",
	"Method": "DetachLoadBalancerFromSubnetsResult detachLoadBalancerFromSubnets(DetachLoadBalancerFromSubnetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDetachLoadBalancerFromSubnets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetTransitGatewayRouteTablePropagationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayRouteAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.NS.delete",
	"Comment": "returns a deleteaction for deleting the specified valuesfrom this number set.",
	"Method": "DeleteAction delete(Number values,DeleteAction delete,Set<T> values){\r\n    return new DeleteAction(this, new LiteralOperand(values));\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonelasticache using the current builder configuration.",
	"Method": "AmazonElastiCache build(AwsSyncClientParams params){\r\n    return new AmazonElastiCacheClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonelasticloadbalancingasync using the current builderconfiguration.",
	"Method": "AmazonElasticLoadBalancingAsync build(AwsAsyncClientParams params){\r\n    return new AmazonElasticLoadBalancingAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerNames() != null)\r\n        sb.append(\"LoadBalancerNames: \").append(getLoadBalancerNames()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.NotificationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTopicArn() != null)\r\n        sb.append(\"TopicArn: \").append(getTopicArn()).append(\",\");\r\n    if (getTopicStatus() != null)\r\n        sb.append(\"TopicStatus: \").append(getTopicStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpcRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ProvisionByoipCidrRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidr() != null)\r\n        sb.append(\"Cidr: \").append(getCidr()).append(\",\");\r\n    if (getCidrAuthorizationContext() != null)\r\n        sb.append(\"CidrAuthorizationContext: \").append(getCidrAuthorizationContext()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AbstractAWSElasticBeanstalkAsync.describeApplicationVersionsAsync",
	"Comment": "simplified method form for invoking the describeapplicationversions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeApplicationVersionsResult> describeApplicationVersionsAsync(DescribeApplicationVersionsRequest request,java.util.concurrent.Future<DescribeApplicationVersionsResult> describeApplicationVersionsAsync,DescribeApplicationVersionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeApplicationVersionsRequest, DescribeApplicationVersionsResult> asyncHandler,java.util.concurrent.Future<DescribeApplicationVersionsResult> describeApplicationVersionsAsync,java.util.concurrent.Future<DescribeApplicationVersionsResult> describeApplicationVersionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeApplicationVersionsRequest, DescribeApplicationVersionsResult> asyncHandler){\r\n    return describeApplicationVersionsAsync(new DescribeApplicationVersionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.setExpressionAttributeNames",
	"Comment": "one or more substitution variables for simplifying complex expressions.",
	"Method": "void setExpressionAttributeNames(java.util.Map<String, String> expressionAttributeNames){\r\n    this.expressionAttributeNames = expressionAttributeNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSnapshotAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcPeeringConnectionVpcInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock()).append(\",\");\r\n    if (getIpv6CidrBlockSet() != null)\r\n        sb.append(\"Ipv6CidrBlockSet: \").append(getIpv6CidrBlockSet()).append(\",\");\r\n    if (getCidrBlockSet() != null)\r\n        sb.append(\"CidrBlockSet: \").append(getCidrBlockSet()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getPeeringOptions() != null)\r\n        sb.append(\"PeeringOptions: \").append(getPeeringOptions()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.importSnapshotAsync",
	"Comment": "simplified method form for invoking the importsnapshot operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ImportSnapshotResult> importSnapshotAsync(ImportSnapshotRequest request,java.util.concurrent.Future<ImportSnapshotResult> importSnapshotAsync,ImportSnapshotRequest request,com.amazonaws.handlers.AsyncHandler<ImportSnapshotRequest, ImportSnapshotResult> asyncHandler,java.util.concurrent.Future<ImportSnapshotResult> importSnapshotAsync,java.util.concurrent.Future<ImportSnapshotResult> importSnapshotAsync,com.amazonaws.handlers.AsyncHandler<ImportSnapshotRequest, ImportSnapshotResult> asyncHandler){\r\n    return importSnapshotAsync(new ImportSnapshotRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DetachInternetGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.PutLifecyclePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getLifecyclePolicyText() != null)\r\n        sb.append(\"LifecyclePolicyText: \").append(getLifecyclePolicyText());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeInstanceAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceAttribute() != null)\r\n        sb.append(\"InstanceAttribute: \").append(getInstanceAttribute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateDefaultSubnetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnet() != null)\r\n        sb.append(\"Subnet: \").append(getSubnet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteInternetGateway",
	"Comment": "deletes the specified internet gateway. you must detach the internet gateway from the vpc before you can deleteit.",
	"Method": "DeleteInternetGatewayResult deleteInternetGateway(DeleteInternetGatewayRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteInternetGateway(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceNetworkAclEntryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.RegisterTargetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroupArn() != null)\r\n        sb.append(\"TargetGroupArn: \").append(getTargetGroupArn()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.TestConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationInstanceArn() != null)\r\n        sb.append(\"ReplicationInstanceArn: \").append(getReplicationInstanceArn()).append(\",\");\r\n    if (getEndpointArn() != null)\r\n        sb.append(\"EndpointArn: \").append(getEndpointArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.batchDelete",
	"Comment": "deletes the objects given using one or more calls to the batchwtiteitem api.",
	"Method": "List<DynamoDBMapper.FailedBatch> batchDelete(Iterable<T> objectsToDelete){\r\n    return mapper.batchWrite((Iterable<T>) Collections.<T>emptyList(), objectsToDelete);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.ConvenientMapSetterTest.testDuplicatedKeysException",
	"Comment": "test on illegalargumentexception when providing duplicated keys.",
	"Method": "void testDuplicatedKeysException(){\r\n    new PutItemRequest().addItemEntry(\"hash-key\", new AttributeValue().withS(\"1\")).addItemEntry(\"hash-key\", new AttributeValue().withS(\"2\"));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.BlockDeviceMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getVirtualName() != null)\r\n        sb.append(\"VirtualName: \").append(getVirtualName()).append(\",\");\r\n    if (getEbs() != null)\r\n        sb.append(\"Ebs: \").append(getEbs()).append(\",\");\r\n    if (getNoDevice() != null)\r\n        sb.append(\"NoDevice: \").append(getNoDevice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateSpecification() != null)\r\n        sb.append(\"LaunchTemplateSpecification: \").append(getLaunchTemplateSpecification()).append(\",\");\r\n    if (getOverrides() != null)\r\n        sb.append(\"Overrides: \").append(getOverrides());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.describeTags",
	"Comment": "describes the tags associated with the specified load balancers.",
	"Method": "DescribeTagsResult describeTags(DescribeTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.ModifyRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeHostsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHosts() != null)\r\n        sb.append(\"Hosts: \").append(getHosts()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotInstanceRequestsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getSpotInstanceRequestIds() != null)\r\n        sb.append(\"SpotInstanceRequestIds: \").append(getSpotInstanceRequestIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifySnapshotAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getCreateVolumePermission() != null)\r\n        sb.append(\"CreateVolumePermission: \").append(getCreateVolumePermission()).append(\",\");\r\n    if (getGroupNames() != null)\r\n        sb.append(\"GroupNames: \").append(getGroupNames()).append(\",\");\r\n    if (getOperationType() != null)\r\n        sb.append(\"OperationType: \").append(getOperationType()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getUserIds() != null)\r\n        sb.append(\"UserIds: \").append(getUserIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Tmpfs.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerPath() != null)\r\n        sb.append(\"ContainerPath: \").append(getContainerPath()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getMountOptions() != null)\r\n        sb.append(\"MountOptions: \").append(getMountOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CPUUtilization.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser()).append(\",\");\r\n    if (getNice() != null)\r\n        sb.append(\"Nice: \").append(getNice()).append(\",\");\r\n    if (getSystem() != null)\r\n        sb.append(\"System: \").append(getSystem()).append(\",\");\r\n    if (getIdle() != null)\r\n        sb.append(\"Idle: \").append(getIdle()).append(\",\");\r\n    if (getIOWait() != null)\r\n        sb.append(\"IOWait: \").append(getIOWait()).append(\",\");\r\n    if (getIRQ() != null)\r\n        sb.append(\"IRQ: \").append(getIRQ()).append(\",\");\r\n    if (getSoftIRQ() != null)\r\n        sb.append(\"SoftIRQ: \").append(getSoftIRQ()).append(\",\");\r\n    if (getPrivileged() != null)\r\n        sb.append(\"Privileged: \").append(getPrivileged());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.TableWriteItems.getItemsToPut",
	"Comment": "returns the collection of items to be put in the current table ina batch write operation.",
	"Method": "Collection<Item> getItemsToPut(){\r\n    return itemsToPut == null ? null : Collections.unmodifiableCollection(itemsToPut);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeAddressesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getPublicIps() != null)\r\n        sb.append(\"PublicIps: \").append(getPublicIps()).append(\",\");\r\n    if (getAllocationIds() != null)\r\n        sb.append(\"AllocationIds: \").append(getAllocationIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.TaskDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskDefinitionArn() != null)\r\n        sb.append(\"TaskDefinitionArn: \").append(getTaskDefinitionArn()).append(\",\");\r\n    if (getContainerDefinitions() != null)\r\n        sb.append(\"ContainerDefinitions: \").append(getContainerDefinitions()).append(\",\");\r\n    if (getFamily() != null)\r\n        sb.append(\"Family: \").append(getFamily()).append(\",\");\r\n    if (getTaskRoleArn() != null)\r\n        sb.append(\"TaskRoleArn: \").append(getTaskRoleArn()).append(\",\");\r\n    if (getExecutionRoleArn() != null)\r\n        sb.append(\"ExecutionRoleArn: \").append(getExecutionRoleArn()).append(\",\");\r\n    if (getNetworkMode() != null)\r\n        sb.append(\"NetworkMode: \").append(getNetworkMode()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision()).append(\",\");\r\n    if (getVolumes() != null)\r\n        sb.append(\"Volumes: \").append(getVolumes()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getRequiresAttributes() != null)\r\n        sb.append(\"RequiresAttributes: \").append(getRequiresAttributes()).append(\",\");\r\n    if (getPlacementConstraints() != null)\r\n        sb.append(\"PlacementConstraints: \").append(getPlacementConstraints()).append(\",\");\r\n    if (getCompatibilities() != null)\r\n        sb.append(\"Compatibilities: \").append(getCompatibilities()).append(\",\");\r\n    if (getRequiresCompatibilities() != null)\r\n        sb.append(\"RequiresCompatibilities: \").append(getRequiresCompatibilities()).append(\",\");\r\n    if (getCpu() != null)\r\n        sb.append(\"Cpu: \").append(getCpu()).append(\",\");\r\n    if (getMemory() != null)\r\n        sb.append(\"Memory: \").append(getMemory()).append(\",\");\r\n    if (getPidMode() != null)\r\n        sb.append(\"PidMode: \").append(getPidMode()).append(\",\");\r\n    if (getIpcMode() != null)\r\n        sb.append(\"IpcMode: \").append(getIpcMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeSpotDatafeedSubscriptionAsync",
	"Comment": "simplified method form for invoking the describespotdatafeedsubscription operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSpotDatafeedSubscriptionResult> describeSpotDatafeedSubscriptionAsync(DescribeSpotDatafeedSubscriptionRequest request,java.util.concurrent.Future<DescribeSpotDatafeedSubscriptionResult> describeSpotDatafeedSubscriptionAsync,DescribeSpotDatafeedSubscriptionRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSpotDatafeedSubscriptionRequest, DescribeSpotDatafeedSubscriptionResult> asyncHandler,java.util.concurrent.Future<DescribeSpotDatafeedSubscriptionResult> describeSpotDatafeedSubscriptionAsync,java.util.concurrent.Future<DescribeSpotDatafeedSubscriptionResult> describeSpotDatafeedSubscriptionAsync,com.amazonaws.handlers.AsyncHandler<DescribeSpotDatafeedSubscriptionRequest, DescribeSpotDatafeedSubscriptionResult> asyncHandler){\r\n    return describeSpotDatafeedSubscriptionAsync(new DescribeSpotDatafeedSubscriptionRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConversionTask() != null)\r\n        sb.append(\"ConversionTask: \").append(getConversionTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.instanceExists",
	"Comment": "builds a instanceexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstancesRequest> instanceExists(){\r\n    return new WaiterBuilder<DescribeInstancesRequest, DescribeInstancesResult>().withSdkFunction(new DescribeInstancesFunction(client)).withAcceptors(new InstanceExists.IsTrueMatcher(), new InstanceExists.IsInvalidInstanceIDNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisableVpcClassicLinkDnsSupportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.BatchGetItemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRequestItems() != null)\r\n        sb.append(\"RequestItems: \").append(getRequestItems()).append(\",\");\r\n    if (getReturnConsumedCapacity() != null)\r\n        sb.append(\"ReturnConsumedCapacity: \").append(getReturnConsumedCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeSpotPriceHistoryAsync",
	"Comment": "simplified method form for invoking the describespotpricehistory operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSpotPriceHistoryResult> describeSpotPriceHistoryAsync(DescribeSpotPriceHistoryRequest request,java.util.concurrent.Future<DescribeSpotPriceHistoryResult> describeSpotPriceHistoryAsync,DescribeSpotPriceHistoryRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSpotPriceHistoryRequest, DescribeSpotPriceHistoryResult> asyncHandler,java.util.concurrent.Future<DescribeSpotPriceHistoryResult> describeSpotPriceHistoryAsync,java.util.concurrent.Future<DescribeSpotPriceHistoryResult> describeSpotPriceHistoryAsync,com.amazonaws.handlers.AsyncHandler<DescribeSpotPriceHistoryRequest, DescribeSpotPriceHistoryResult> asyncHandler){\r\n    return describeSpotPriceHistoryAsync(new DescribeSpotPriceHistoryRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotFleetMonitoring.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteFleetErrorItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(getError()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteNetworkAclEntryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AllocateHostsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoPlacement() != null)\r\n        sb.append(\"AutoPlacement: \").append(getAutoPlacement()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SearchTransitGatewayRoutesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.RunTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition()).append(\",\");\r\n    if (getOverrides() != null)\r\n        sb.append(\"Overrides: \").append(getOverrides()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getStartedBy() != null)\r\n        sb.append(\"StartedBy: \").append(getStartedBy()).append(\",\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getPlacementConstraints() != null)\r\n        sb.append(\"PlacementConstraints: \").append(getPlacementConstraints()).append(\",\");\r\n    if (getPlacementStrategy() != null)\r\n        sb.append(\"PlacementStrategy: \").append(getPlacementStrategy()).append(\",\");\r\n    if (getLaunchType() != null)\r\n        sb.append(\"LaunchType: \").append(getLaunchType()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getNetworkConfiguration() != null)\r\n        sb.append(\"NetworkConfiguration: \").append(getNetworkConfiguration()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getEnableECSManagedTags() != null)\r\n        sb.append(\"EnableECSManagedTags: \").append(getEnableECSManagedTags()).append(\",\");\r\n    if (getPropagateTags() != null)\r\n        sb.append(\"PropagateTags: \").append(getPropagateTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperConfig.getRequestMetricCollector",
	"Comment": "returns the request metric collector or null if not specified.",
	"Method": "RequestMetricCollector getRequestMetricCollector(RequestMetricCollector getRequestMetricCollector){\r\n    return requestMetricCollector;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeReservedCacheNodesOfferingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedCacheNodesOfferingId() != null)\r\n        sb.append(\"ReservedCacheNodesOfferingId: \").append(getReservedCacheNodesOfferingId()).append(\",\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DeleteCacheSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheSecurityGroupName() != null)\r\n        sb.append(\"CacheSecurityGroupName: \").append(getCacheSecurityGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describePrefixListsAsync",
	"Comment": "simplified method form for invoking the describeprefixlists operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribePrefixListsResult> describePrefixListsAsync(DescribePrefixListsRequest request,java.util.concurrent.Future<DescribePrefixListsResult> describePrefixListsAsync,DescribePrefixListsRequest request,com.amazonaws.handlers.AsyncHandler<DescribePrefixListsRequest, DescribePrefixListsResult> asyncHandler,java.util.concurrent.Future<DescribePrefixListsResult> describePrefixListsAsync,java.util.concurrent.Future<DescribePrefixListsResult> describePrefixListsAsync,com.amazonaws.handlers.AsyncHandler<DescribePrefixListsRequest, DescribePrefixListsResult> asyncHandler){\r\n    return describePrefixListsAsync(new DescribePrefixListsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.instanceTerminated",
	"Comment": "builds a instanceterminated waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstancesRequest> instanceTerminated(){\r\n    return new WaiterBuilder<DescribeInstancesRequest, DescribeInstancesResult>().withSdkFunction(new DescribeInstancesFunction(client)).withAcceptors(new InstanceTerminated.IsTerminatedMatcher(), new InstanceTerminated.IsPendingMatcher(), new InstanceTerminated.IsStoppingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TransactGetItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGet() != null)\r\n        sb.append(\"Get: \").append(getGet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ModifyReplicationGroupShardConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getNodeGroupCount() != null)\r\n        sb.append(\"NodeGroupCount: \").append(getNodeGroupCount()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately()).append(\",\");\r\n    if (getReshardingConfiguration() != null)\r\n        sb.append(\"ReshardingConfiguration: \").append(getReshardingConfiguration()).append(\",\");\r\n    if (getNodeGroupsToRemove() != null)\r\n        sb.append(\"NodeGroupsToRemove: \").append(getNodeGroupsToRemove()).append(\",\");\r\n    if (getNodeGroupsToRetain() != null)\r\n        sb.append(\"NodeGroupsToRetain: \").append(getNodeGroupsToRetain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.AWSDatabaseMigrationServiceWaiters.endpointDeleted",
	"Comment": "builds a endpointdeleted waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeEndpointsRequest> endpointDeleted(){\r\n    return new WaiterBuilder<DescribeEndpointsRequest, DescribeEndpointsResult>().withSdkFunction(new DescribeEndpointsFunction(client)).withAcceptors(new EndpointDeleted.IsResourceNotFoundFaultMatcher(), new EndpointDeleted.IsActiveMatcher(), new EndpointDeleted.IsCreatingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeVpnGatewaysAsync",
	"Comment": "simplified method form for invoking the describevpngateways operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpnGatewaysResult> describeVpnGatewaysAsync(DescribeVpnGatewaysRequest request,java.util.concurrent.Future<DescribeVpnGatewaysResult> describeVpnGatewaysAsync,DescribeVpnGatewaysRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpnGatewaysRequest, DescribeVpnGatewaysResult> asyncHandler,java.util.concurrent.Future<DescribeVpnGatewaysResult> describeVpnGatewaysAsync,java.util.concurrent.Future<DescribeVpnGatewaysResult> describeVpnGatewaysAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpnGatewaysRequest, DescribeVpnGatewaysResult> asyncHandler){\r\n    return describeVpnGatewaysAsync(new DescribeVpnGatewaysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AttachVpnGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcAttachment() != null)\r\n        sb.append(\"VpcAttachment: \").append(getVpcAttachment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Projection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectionType() != null)\r\n        sb.append(\"ProjectionType: \").append(getProjectionType()).append(\",\");\r\n    if (getNonKeyAttributes() != null)\r\n        sb.append(\"NonKeyAttributes: \").append(getNonKeyAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.imageAvailable",
	"Comment": "builds a imageavailable waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeImagesRequest> imageAvailable(){\r\n    return new WaiterBuilder<DescribeImagesRequest, DescribeImagesResult>().withSdkFunction(new DescribeImagesFunction(client)).withAcceptors(new ImageAvailable.IsAvailableMatcher(), new ImageAvailable.IsFailedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.PolicyAttributeDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValue() != null)\r\n        sb.append(\"AttributeValue: \").append(getAttributeValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.AutoScalingPolicyUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getTargetTrackingScalingPolicyConfiguration() != null)\r\n        sb.append(\"TargetTrackingScalingPolicyConfiguration: \").append(getTargetTrackingScalingPolicyConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeInstanceStatusAsync",
	"Comment": "simplified method form for invoking the describeinstancestatus operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeInstanceStatusResult> describeInstanceStatusAsync(DescribeInstanceStatusRequest request,java.util.concurrent.Future<DescribeInstanceStatusResult> describeInstanceStatusAsync,DescribeInstanceStatusRequest request,com.amazonaws.handlers.AsyncHandler<DescribeInstanceStatusRequest, DescribeInstanceStatusResult> asyncHandler,java.util.concurrent.Future<DescribeInstanceStatusResult> describeInstanceStatusAsync,java.util.concurrent.Future<DescribeInstanceStatusResult> describeInstanceStatusAsync,com.amazonaws.handlers.AsyncHandler<DescribeInstanceStatusRequest, DescribeInstanceStatusResult> asyncHandler){\r\n    return describeInstanceStatusAsync(new DescribeInstanceStatusRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeAccountAttributesAsync",
	"Comment": "simplified method form for invoking the describeaccountattributes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync(DescribeAccountAttributesRequest request,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,DescribeAccountAttributesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAccountAttributesRequest, DescribeAccountAttributesResult> asyncHandler,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,com.amazonaws.handlers.AsyncHandler<DescribeAccountAttributesRequest, DescribeAccountAttributesResult> asyncHandler){\r\n    return describeAccountAttributesAsync(new DescribeAccountAttributesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createSpotDatafeedSubscription",
	"Comment": "creates a data feed for spot instances, enabling you to view spot instance usage logs. you can create one datafeed per aws account. for more information, see spot instance data feed in theamazon ec2 user guide for linux instances.",
	"Method": "CreateSpotDatafeedSubscriptionResult createSpotDatafeedSubscription(CreateSpotDatafeedSubscriptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateSpotDatafeedSubscription(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ExportTransitGatewayRoutesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTableId() != null)\r\n        sb.append(\"TransitGatewayRouteTableId: \").append(getTransitGatewayRouteTableId()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateKeyPairRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.MaxAgeRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getMaxAgeInDays() != null)\r\n        sb.append(\"MaxAgeInDays: \").append(getMaxAgeInDays()).append(\",\");\r\n    if (getDeleteSourceFromS3() != null)\r\n        sb.append(\"DeleteSourceFromS3: \").append(getDeleteSourceFromS3());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotPriceHistoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSpotPriceHistory() != null)\r\n        sb.append(\"SpotPriceHistory: \").append(getSpotPriceHistory());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateReservedInstancesListingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstancesListings() != null)\r\n        sb.append(\"ReservedInstancesListings: \").append(getReservedInstancesListings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.withdrawByoipCidr",
	"Comment": "stops advertising an ipv4 address range that is provisioned as an address pool.you can perform this operation at most once every 10 seconds, even if you specify different address ranges eachtime.it can take a few minutes before traffic to the specified addresses stops routing to aws because of bgppropagation delays.",
	"Method": "WithdrawByoipCidrResult withdrawByoipCidr(WithdrawByoipCidrRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeWithdrawByoipCidr(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateRouteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UpdateSecurityGroupRuleDescriptionsEgressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getIpPermissions() != null)\r\n        sb.append(\"IpPermissions: \").append(getIpPermissions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CrossZoneLoadBalancing.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateLaunchTemplateVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getSourceVersion() != null)\r\n        sb.append(\"SourceVersion: \").append(getSourceVersion()).append(\",\");\r\n    if (getVersionDescription() != null)\r\n        sb.append(\"VersionDescription: \").append(getVersionDescription()).append(\",\");\r\n    if (getLaunchTemplateData() != null)\r\n        sb.append(\"LaunchTemplateData: \").append(getLaunchTemplateData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeClassicLinkInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteCustomerGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomerGatewayId() != null)\r\n        sb.append(\"CustomerGatewayId: \").append(getCustomerGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcPeeringConnectionOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccepterPeeringConnectionOptions() != null)\r\n        sb.append(\"AccepterPeeringConnectionOptions: \").append(getAccepterPeeringConnectionOptions()).append(\",\");\r\n    if (getRequesterPeeringConnectionOptions() != null)\r\n        sb.append(\"RequesterPeeringConnectionOptions: \").append(getRequesterPeeringConnectionOptions()).append(\",\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AbstractAWSElasticBeanstalkAsync.describeEventsAsync",
	"Comment": "simplified method form for invoking the describeevents operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync(DescribeEventsRequest request,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,DescribeEventsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler){\r\n    return describeEventsAsync(new DescribeEventsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AcceptTransitGatewayVpcAttachmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.CreateFileSystemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getCreationToken() != null)\r\n        sb.append(\"CreationToken: \").append(getCreationToken()).append(\",\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLifeCycleState() != null)\r\n        sb.append(\"LifeCycleState: \").append(getLifeCycleState()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNumberOfMountTargets() != null)\r\n        sb.append(\"NumberOfMountTargets: \").append(getNumberOfMountTargets()).append(\",\");\r\n    if (getSizeInBytes() != null)\r\n        sb.append(\"SizeInBytes: \").append(getSizeInBytes()).append(\",\");\r\n    if (getPerformanceMode() != null)\r\n        sb.append(\"PerformanceMode: \").append(getPerformanceMode()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getThroughputMode() != null)\r\n        sb.append(\"ThroughputMode: \").append(getThroughputMode()).append(\",\");\r\n    if (getProvisionedThroughputInMibps() != null)\r\n        sb.append(\"ProvisionedThroughputInMibps: \").append(getProvisionedThroughputInMibps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointServiceConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceIds() != null)\r\n        sb.append(\"ServiceIds: \").append(getServiceIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.batchWrite",
	"Comment": "saves and deletes the objects given using one or more calls to thebatchwriteitem api.",
	"Method": "List<DynamoDBMapper.FailedBatch> batchWrite(Iterable<T> objectsToWrite,Iterable<T> objectsToDelete){\r\n    return mapper.batchWrite(objectsToWrite, objectsToDelete);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.KeyPair.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyFingerprint() != null)\r\n        sb.append(\"KeyFingerprint: \").append(getKeyFingerprint()).append(\",\");\r\n    if (getKeyMaterial() != null)\r\n        sb.append(\"KeyMaterial: \").append(getKeyMaterial()).append(\",\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.StartInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartingInstances() != null)\r\n        sb.append(\"StartingInstances: \").append(getStartingInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CreateLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getListeners() != null)\r\n        sb.append(\"Listeners: \").append(getListeners()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getScheme() != null)\r\n        sb.append(\"Scheme: \").append(getScheme()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeImportImageTasksAsync",
	"Comment": "simplified method form for invoking the describeimportimagetasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeImportImageTasksResult> describeImportImageTasksAsync(DescribeImportImageTasksRequest request,java.util.concurrent.Future<DescribeImportImageTasksResult> describeImportImageTasksAsync,DescribeImportImageTasksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeImportImageTasksRequest, DescribeImportImageTasksResult> asyncHandler,java.util.concurrent.Future<DescribeImportImageTasksResult> describeImportImageTasksAsync,java.util.concurrent.Future<DescribeImportImageTasksResult> describeImportImageTasksAsync,com.amazonaws.handlers.AsyncHandler<DescribeImportImageTasksRequest, DescribeImportImageTasksResult> asyncHandler){\r\n    return describeImportImageTasksAsync(new DescribeImportImageTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RunScheduledInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getLaunchSpecification() != null)\r\n        sb.append(\"LaunchSpecification: \").append(getLaunchSpecification()).append(\",\");\r\n    if (getScheduledInstanceId() != null)\r\n        sb.append(\"ScheduledInstanceId: \").append(getScheduledInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelSpotInstanceRequestsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpotInstanceRequestIds() != null)\r\n        sb.append(\"SpotInstanceRequestIds: \").append(getSpotInstanceRequestIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeleteAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeSecurityGroupsAsync",
	"Comment": "simplified method form for invoking the describesecuritygroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSecurityGroupsResult> describeSecurityGroupsAsync(DescribeSecurityGroupsRequest request,java.util.concurrent.Future<DescribeSecurityGroupsResult> describeSecurityGroupsAsync,DescribeSecurityGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSecurityGroupsRequest, DescribeSecurityGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeSecurityGroupsResult> describeSecurityGroupsAsync,java.util.concurrent.Future<DescribeSecurityGroupsResult> describeSecurityGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSecurityGroupsRequest, DescribeSecurityGroupsResult> asyncHandler){\r\n    return describeSecurityGroupsAsync(new DescribeSecurityGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssignIpv6AddressesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssignedIpv6Addresses() != null)\r\n        sb.append(\"AssignedIpv6Addresses: \").append(getAssignedIpv6Addresses()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.getLong",
	"Comment": "returns the value of the specified attribute in the current item as anlong.",
	"Method": "long getLong(String attrName){\r\n    BigDecimal bd = getNumber(attrName);\r\n    if (bd == null)\r\n        throw new NumberFormatException(\"value of \" + attrName + \" is null\");\r\n    return bd.longValue();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.registerContainerInstance",
	"Comment": "this action is only used by the amazon ecs agent, and it is not intended for use outside of the agent.registers an ec2 instance into the specified cluster. this instance becomes available to place containers on.",
	"Method": "RegisterContainerInstanceResult registerContainerInstance(RegisterContainerInstanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRegisterContainerInstance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.buildForQuery",
	"Comment": "returns an expression specification for use in a queryrequest to dynamodb.",
	"Method": "QueryExpressionSpec buildForQuery(){\r\n    return new QueryExpressionSpec(this);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LoadPermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.AttachmentStateChange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachmentArn() != null)\r\n        sb.append(\"AttachmentArn: \").append(getAttachmentArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FpgaImage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageId() != null)\r\n        sb.append(\"FpgaImageId: \").append(getFpgaImageId()).append(\",\");\r\n    if (getFpgaImageGlobalId() != null)\r\n        sb.append(\"FpgaImageGlobalId: \").append(getFpgaImageGlobalId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getShellVersion() != null)\r\n        sb.append(\"ShellVersion: \").append(getShellVersion()).append(\",\");\r\n    if (getPciId() != null)\r\n        sb.append(\"PciId: \").append(getPciId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getUpdateTime() != null)\r\n        sb.append(\"UpdateTime: \").append(getUpdateTime()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getOwnerAlias() != null)\r\n        sb.append(\"OwnerAlias: \").append(getOwnerAlias()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getPublic() != null)\r\n        sb.append(\"Public: \").append(getPublic());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Delete.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getConditionExpression() != null)\r\n        sb.append(\"ConditionExpression: \").append(getConditionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames()).append(\",\");\r\n    if (getExpressionAttributeValues() != null)\r\n        sb.append(\"ExpressionAttributeValues: \").append(getExpressionAttributeValues()).append(\",\");\r\n    if (getReturnValuesOnConditionCheckFailure() != null)\r\n        sb.append(\"ReturnValuesOnConditionCheckFailure: \").append(getReturnValuesOnConditionCheckFailure());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateIamInstanceProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamInstanceProfileAssociation() != null)\r\n        sb.append(\"IamInstanceProfileAssociation: \").append(getIamInstanceProfileAssociation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.Listener.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.ModifyLoadBalancerAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.EnvironmentResourcesDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancer() != null)\r\n        sb.append(\"LoadBalancer: \").append(getLoadBalancer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDeleteExpression.clearExpressionAttributeValuesEntries",
	"Comment": "removes all the entries added into expressionattributevalues.returns a reference to this object so that method calls can be chainedtogether.",
	"Method": "DynamoDBDeleteExpression clearExpressionAttributeValuesEntries(){\r\n    this.expressionAttributeValues = null;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UpdateSecurityGroupRuleDescriptionsIngressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.purchaseHostReservation",
	"Comment": "purchase a reservation with configurations that match those of your dedicated host. you must have activededicated hosts in your account before you purchase a reservation. this action results in the specifiedreservation being purchased and charged to your account.",
	"Method": "PurchaseHostReservationResult purchaseHostReservation(PurchaseHostReservationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePurchaseHostReservation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.SetLoadBalancerPoliciesOfListenerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getLoadBalancerPort() != null)\r\n        sb.append(\"LoadBalancerPort: \").append(getLoadBalancerPort()).append(\",\");\r\n    if (getPolicyNames() != null)\r\n        sb.append(\"PolicyNames: \").append(getPolicyNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.TaskOverride.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerOverrides() != null)\r\n        sb.append(\"ContainerOverrides: \").append(getContainerOverrides()).append(\",\");\r\n    if (getTaskRoleArn() != null)\r\n        sb.append(\"TaskRoleArn: \").append(getTaskRoleArn()).append(\",\");\r\n    if (getExecutionRoleArn() != null)\r\n        sb.append(\"ExecutionRoleArn: \").append(getExecutionRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.LoadBalancer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroupArn() != null)\r\n        sb.append(\"TargetGroupArn: \").append(getTargetGroupArn()).append(\",\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName()).append(\",\");\r\n    if (getContainerPort() != null)\r\n        sb.append(\"ContainerPort: \").append(getContainerPort());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeImagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecutableUsers() != null)\r\n        sb.append(\"ExecutableUsers: \").append(getExecutableUsers()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getImageIds() != null)\r\n        sb.append(\"ImageIds: \").append(getImageIds()).append(\",\");\r\n    if (getOwners() != null)\r\n        sb.append(\"Owners: \").append(getOwners());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeAccountAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceQuotas() != null)\r\n        sb.append(\"ResourceQuotas: \").append(getResourceQuotas());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ConditionCheck.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getConditionExpression() != null)\r\n        sb.append(\"ConditionExpression: \").append(getConditionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames()).append(\",\");\r\n    if (getExpressionAttributeValues() != null)\r\n        sb.append(\"ExpressionAttributeValues: \").append(getExpressionAttributeValues()).append(\",\");\r\n    if (getReturnValuesOnConditionCheckFailure() != null)\r\n        sb.append(\"ReturnValuesOnConditionCheckFailure: \").append(getReturnValuesOnConditionCheckFailure());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteNetworkAclResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.IdFormat.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeadline() != null)\r\n        sb.append(\"Deadline: \").append(getDeadline()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getUseLongIds() != null)\r\n        sb.append(\"UseLongIds: \").append(getUseLongIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PeeringConnectionOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowDnsResolutionFromRemoteVpc() != null)\r\n        sb.append(\"AllowDnsResolutionFromRemoteVpc: \").append(getAllowDnsResolutionFromRemoteVpc()).append(\",\");\r\n    if (getAllowEgressFromLocalClassicLinkToRemoteVpc() != null)\r\n        sb.append(\"AllowEgressFromLocalClassicLinkToRemoteVpc: \").append(getAllowEgressFromLocalClassicLinkToRemoteVpc()).append(\",\");\r\n    if (getAllowEgressFromLocalVpcToRemoteClassicLink() != null)\r\n        sb.append(\"AllowEgressFromLocalVpcToRemoteClassicLink: \").append(getAllowEgressFromLocalVpcToRemoteClassicLink());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.InitiateLayerUploadResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUploadId() != null)\r\n        sb.append(\"UploadId: \").append(getUploadId()).append(\",\");\r\n    if (getPartSize() != null)\r\n        sb.append(\"PartSize: \").append(getPartSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.deleteAccountSetting",
	"Comment": "modifies the arn and resource id format of a resource for a specified iam user, iam role, or the root user for anaccount. you can specify whether the new arn and resource id format are disabled for new resources that arecreated.",
	"Method": "DeleteAccountSettingResult deleteAccountSetting(DeleteAccountSettingRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAccountSetting(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.StartLifecyclePolicyPreviewRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getLifecyclePolicyText() != null)\r\n        sb.append(\"LifecyclePolicyText: \").append(getLifecyclePolicyText());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateNatGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocationId() != null)\r\n        sb.append(\"AllocationId: \").append(getAllocationId()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImageAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getLaunchPermissions() != null)\r\n        sb.append(\"LaunchPermissions: \").append(getLaunchPermissions()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getRamdiskId() != null)\r\n        sb.append(\"RamdiskId: \").append(getRamdiskId()).append(\",\");\r\n    if (getSriovNetSupport() != null)\r\n        sb.append(\"SriovNetSupport: \").append(getSriovNetSupport());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.GetAuthorizationTokenRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryIds() != null)\r\n        sb.append(\"RegistryIds: \").append(getRegistryIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ScanRequest.withExclusiveStartKey",
	"Comment": "the primary hash and range keys of the first item that this operation will evaluate. use the value that wasreturned for lastevaluatedkey in the previous operation.the data type for exclusivestartkey must be string, number or binary. no set data types are allowed.returns a reference to this object so that method calls can be chained together.",
	"Method": "ScanRequest withExclusiveStartKey(java.util.Map<String, AttributeValue> exclusiveStartKey,ScanRequest withExclusiveStartKey,java.util.Map.Entry<String, AttributeValue> hashKey,java.util.Map.Entry<String, AttributeValue> rangeKey){\r\n    setExclusiveStartKey(hashKey, rangeKey);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpcEndpointServiceConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceIds() != null)\r\n        sb.append(\"ServiceIds: \").append(getServiceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.exportTaskCompleted",
	"Comment": "builds a exporttaskcompleted waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeExportTasksRequest> exportTaskCompleted(){\r\n    return new WaiterBuilder<DescribeExportTasksRequest, DescribeExportTasksResult>().withSdkFunction(new DescribeExportTasksFunction(client)).withAcceptors(new ExportTaskCompleted.IsCompletedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.createInternetGatewayAsync",
	"Comment": "simplified method form for invoking the createinternetgateway operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateInternetGatewayResult> createInternetGatewayAsync(CreateInternetGatewayRequest request,java.util.concurrent.Future<CreateInternetGatewayResult> createInternetGatewayAsync,CreateInternetGatewayRequest request,com.amazonaws.handlers.AsyncHandler<CreateInternetGatewayRequest, CreateInternetGatewayResult> asyncHandler,java.util.concurrent.Future<CreateInternetGatewayResult> createInternetGatewayAsync,java.util.concurrent.Future<CreateInternetGatewayResult> createInternetGatewayAsync,com.amazonaws.handlers.AsyncHandler<CreateInternetGatewayRequest, CreateInternetGatewayResult> asyncHandler){\r\n    return createInternetGatewayAsync(new CreateInternetGatewayRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DeleteFileSystemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteTransitGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Put.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getConditionExpression() != null)\r\n        sb.append(\"ConditionExpression: \").append(getConditionExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames()).append(\",\");\r\n    if (getExpressionAttributeValues() != null)\r\n        sb.append(\"ExpressionAttributeValues: \").append(getExpressionAttributeValues()).append(\",\");\r\n    if (getReturnValuesOnConditionCheckFailure() != null)\r\n        sb.append(\"ReturnValuesOnConditionCheckFailure: \").append(getReturnValuesOnConditionCheckFailure());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TransactGetItemsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConsumedCapacity() != null)\r\n        sb.append(\"ConsumedCapacity: \").append(getConsumedCapacity()).append(\",\");\r\n    if (getResponses() != null)\r\n        sb.append(\"Responses: \").append(getResponses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.describeContinuousBackups",
	"Comment": "checks the status of continuous backups and point in time recovery on the specified table. continuous backups areenabled on all tables at table creation. if point in time recovery is enabled,pointintimerecoverystatus will be set to enabled.once continuous backups and point in time recovery are enabled, you can restore to any point in time withinearliestrestorabledatetime and latestrestorabledatetime.latestrestorabledatetime is typically 5 minutes before the current time. you can restore your tableto any point in time during the last 35 days.you can call describecontinuousbackups at a maximum rate of 10 times per second.",
	"Method": "DescribeContinuousBackupsResult describeContinuousBackups(DescribeContinuousBackupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeContinuousBackups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVolumesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumes() != null)\r\n        sb.append(\"Volumes: \").append(getVolumes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.describeAccountLimits",
	"Comment": "describes the current elastic load balancing resource limits for your aws account.for more information, see limits foryour application load balancers in the application load balancer guide or limits for yournetwork load balancers in the network load balancers guide.",
	"Method": "DescribeAccountLimitsResult describeAccountLimits(DescribeAccountLimitsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAccountLimits(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.CreateRepositoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeNetworkInterfacesFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeNetworkInterfacesResult apply(DescribeNetworkInterfacesRequest describeNetworkInterfacesRequest){\r\n    return client.describeNetworkInterfaces(describeNetworkInterfacesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.ModifyTargetGroupAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceStatusEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getNotAfter() != null)\r\n        sb.append(\"NotAfter: \").append(getNotAfter()).append(\",\");\r\n    if (getNotBefore() != null)\r\n        sb.append(\"NotBefore: \").append(getNotBefore());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateConfigurationTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings()).append(\",\");\r\n    if (getOptionsToRemove() != null)\r\n        sb.append(\"OptionsToRemove: \").append(getOptionsToRemove());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateLaunchTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getVersionDescription() != null)\r\n        sb.append(\"VersionDescription: \").append(getVersionDescription()).append(\",\");\r\n    if (getLaunchTemplateData() != null)\r\n        sb.append(\"LaunchTemplateData: \").append(getLaunchTemplateData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolume() != null)\r\n        sb.append(\"Volume: \").append(getVolume());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.RegisterTaskDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.BillingModeSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingMode() != null)\r\n        sb.append(\"BillingMode: \").append(getBillingMode()).append(\",\");\r\n    if (getLastUpdateToPayPerRequestDateTime() != null)\r\n        sb.append(\"LastUpdateToPayPerRequestDateTime: \").append(getLastUpdateToPayPerRequestDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.SubmitTaskStateChangeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcknowledgment() != null)\r\n        sb.append(\"Acknowledgment: \").append(getAcknowledgment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.listContainerInstances",
	"Comment": "returns a list of container instances in a specified cluster. you can filter the results of alistcontainerinstances operation with cluster query language statements inside thefilter parameter. for more information, see cluster querylanguage in the amazon elastic container service developer guide.",
	"Method": "ListContainerInstancesResult listContainerInstances(ListContainerInstancesRequest request,ListContainerInstancesResult listContainerInstances){\r\n    return listContainerInstances(new ListContainerInstancesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcEndpointConnectionNotificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionNotificationSet() != null)\r\n        sb.append(\"ConnectionNotificationSet: \").append(getConnectionNotificationSet()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.ConfigureHealthCheckRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getHealthCheck() != null)\r\n        sb.append(\"HealthCheck: \").append(getHealthCheck());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CustomAmi.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVirtualizationType() != null)\r\n        sb.append(\"VirtualizationType: \").append(getVirtualizationType()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.listTables",
	"Comment": "returns an array of table names associated with the current account and endpoint. the output fromlisttables is paginated, with each page returning a maximum of 100 table names.",
	"Method": "ListTablesResult listTables(ListTablesRequest request,ListTablesResult listTables,ListTablesResult listTables,String exclusiveStartTableName,ListTablesResult listTables,String exclusiveStartTableName,Integer limit,ListTablesResult listTables,Integer limit){\r\n    return listTables(new ListTablesRequest().withLimit(limit));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeInstanceStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceStatuses() != null)\r\n        sb.append(\"InstanceStatuses: \").append(getInstanceStatuses()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateEnvironmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTier() != null)\r\n        sb.append(\"Tier: \").append(getTier()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings()).append(\",\");\r\n    if (getOptionsToRemove() != null)\r\n        sb.append(\"OptionsToRemove: \").append(getOptionsToRemove());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeNetworkInterfaceAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachment() != null)\r\n        sb.append(\"Attachment: \").append(getAttachment()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getSourceDestCheck() != null)\r\n        sb.append(\"SourceDestCheck: \").append(getSourceDestCheck());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeTransitGatewayAttachments",
	"Comment": "describes one or more attachments between resources and transit gateways. by default, all attachments aredescribed. alternatively, you can filter the results by attachment id, attachment state, resource id, or resourceowner.",
	"Method": "DescribeTransitGatewayAttachmentsResult describeTransitGatewayAttachments(DescribeTransitGatewayAttachmentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTransitGatewayAttachments(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.InstanceHealthSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNoData() != null)\r\n        sb.append(\"NoData: \").append(getNoData()).append(\",\");\r\n    if (getUnknown() != null)\r\n        sb.append(\"Unknown: \").append(getUnknown()).append(\",\");\r\n    if (getPending() != null)\r\n        sb.append(\"Pending: \").append(getPending()).append(\",\");\r\n    if (getOk() != null)\r\n        sb.append(\"Ok: \").append(getOk()).append(\",\");\r\n    if (getInfo() != null)\r\n        sb.append(\"Info: \").append(getInfo()).append(\",\");\r\n    if (getWarning() != null)\r\n        sb.append(\"Warning: \").append(getWarning()).append(\",\");\r\n    if (getDegraded() != null)\r\n        sb.append(\"Degraded: \").append(getDegraded()).append(\",\");\r\n    if (getSevere() != null)\r\n        sb.append(\"Severe: \").append(getSevere());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateFlowLogsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getDeliverLogsPermissionArn() != null)\r\n        sb.append(\"DeliverLogsPermissionArn: \").append(getDeliverLogsPermissionArn()).append(\",\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getResourceIds() != null)\r\n        sb.append(\"ResourceIds: \").append(getResourceIds()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTrafficType() != null)\r\n        sb.append(\"TrafficType: \").append(getTrafficType()).append(\",\");\r\n    if (getLogDestinationType() != null)\r\n        sb.append(\"LogDestinationType: \").append(getLogDestinationType()).append(\",\");\r\n    if (getLogDestination() != null)\r\n        sb.append(\"LogDestination: \").append(getLogDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TagSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ServiceTypeDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceType() != null)\r\n        sb.append(\"ServiceType: \").append(getServiceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.composeEnvironments",
	"Comment": "create or update a group of environments that each run a separate component of a single application. takes a listof version labels that specify application source bundles for each of the environments to create or update. thename of each environment and other required information must be included in the source bundles in an environmentmanifest named env.yaml. see composeenvironments for details.",
	"Method": "ComposeEnvironmentsResult composeEnvironments(ComposeEnvironmentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeComposeEnvironments(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ApplicationVersionDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationVersionArn() != null)\r\n        sb.append(\"ApplicationVersionArn: \").append(getApplicationVersionArn()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getSourceBuildInformation() != null)\r\n        sb.append(\"SourceBuildInformation: \").append(getSourceBuildInformation()).append(\",\");\r\n    if (getBuildArn() != null)\r\n        sb.append(\"BuildArn: \").append(getBuildArn()).append(\",\");\r\n    if (getSourceBundle() != null)\r\n        sb.append(\"SourceBundle: \").append(getSourceBundle()).append(\",\");\r\n    if (getDateCreated() != null)\r\n        sb.append(\"DateCreated: \").append(getDateCreated()).append(\",\");\r\n    if (getDateUpdated() != null)\r\n        sb.append(\"DateUpdated: \").append(getDateUpdated()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeIamInstanceProfileAssociationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationIds() != null)\r\n        sb.append(\"AssociationIds: \").append(getAssociationIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplatePlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getAffinity() != null)\r\n        sb.append(\"Affinity: \").append(getAffinity()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getHostId() != null)\r\n        sb.append(\"HostId: \").append(getHostId()).append(\",\");\r\n    if (getTenancy() != null)\r\n        sb.append(\"Tenancy: \").append(getTenancy()).append(\",\");\r\n    if (getSpreadDomain() != null)\r\n        sb.append(\"SpreadDomain: \").append(getSpreadDomain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.AWSDatabaseMigrationServiceWaiters.replicationInstanceAvailable",
	"Comment": "builds a replicationinstanceavailable waiter by using custom parameters waiterparameters and other parametersdefined in the waiters specification, and then polls until it determines whether the resource entered the desiredstate or not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeReplicationInstancesRequest> replicationInstanceAvailable(){\r\n    return new WaiterBuilder<DescribeReplicationInstancesRequest, DescribeReplicationInstancesResult>().withSdkFunction(new DescribeReplicationInstancesFunction(client)).withAcceptors(new ReplicationInstanceAvailable.IsAvailableMatcher(), new ReplicationInstanceAvailable.IsDeletingMatcher(), new ReplicationInstanceAvailable.IsIncompatiblecredentialsMatcher(), new ReplicationInstanceAvailable.IsIncompatiblenetworkMatcher(), new ReplicationInstanceAvailable.IsInaccessibleencryptioncredentialsMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(60))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Attribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getTargetType() != null)\r\n        sb.append(\"TargetType: \").append(getTargetType()).append(\",\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GlobalSecondaryIndexUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUpdate() != null)\r\n        sb.append(\"Update: \").append(getUpdate()).append(\",\");\r\n    if (getCreate() != null)\r\n        sb.append(\"Create: \").append(getCreate()).append(\",\");\r\n    if (getDelete() != null)\r\n        sb.append(\"Delete: \").append(getDelete());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyInstanceCreditSpecificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getInstanceCreditSpecifications() != null)\r\n        sb.append(\"InstanceCreditSpecifications: \").append(getInstanceCreditSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeVpcAttribute",
	"Comment": "describes the specified attribute of the specified vpc. you can specify only one attribute at a time.",
	"Method": "DescribeVpcAttributeResult describeVpcAttribute(DescribeVpcAttributeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeVpcAttribute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeleteServiceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getService() != null)\r\n        sb.append(\"Service: \").append(getService());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.CreateServiceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition()).append(\",\");\r\n    if (getLoadBalancers() != null)\r\n        sb.append(\"LoadBalancers: \").append(getLoadBalancers()).append(\",\");\r\n    if (getServiceRegistries() != null)\r\n        sb.append(\"ServiceRegistries: \").append(getServiceRegistries()).append(\",\");\r\n    if (getDesiredCount() != null)\r\n        sb.append(\"DesiredCount: \").append(getDesiredCount()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getLaunchType() != null)\r\n        sb.append(\"LaunchType: \").append(getLaunchType()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getDeploymentConfiguration() != null)\r\n        sb.append(\"DeploymentConfiguration: \").append(getDeploymentConfiguration()).append(\",\");\r\n    if (getPlacementConstraints() != null)\r\n        sb.append(\"PlacementConstraints: \").append(getPlacementConstraints()).append(\",\");\r\n    if (getPlacementStrategy() != null)\r\n        sb.append(\"PlacementStrategy: \").append(getPlacementStrategy()).append(\",\");\r\n    if (getNetworkConfiguration() != null)\r\n        sb.append(\"NetworkConfiguration: \").append(getNetworkConfiguration()).append(\",\");\r\n    if (getHealthCheckGracePeriodSeconds() != null)\r\n        sb.append(\"HealthCheckGracePeriodSeconds: \").append(getHealthCheckGracePeriodSeconds()).append(\",\");\r\n    if (getSchedulingStrategy() != null)\r\n        sb.append(\"SchedulingStrategy: \").append(getSchedulingStrategy()).append(\",\");\r\n    if (getDeploymentController() != null)\r\n        sb.append(\"DeploymentController: \").append(getDeploymentController()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getEnableECSManagedTags() != null)\r\n        sb.append(\"EnableECSManagedTags: \").append(getEnableECSManagedTags()).append(\",\");\r\n    if (getPropagateTags() != null)\r\n        sb.append(\"PropagateTags: \").append(getPropagateTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.RestoreTableToPointInTimeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableDescription() != null)\r\n        sb.append(\"TableDescription: \").append(getTableDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyInstancePlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAffinity() != null)\r\n        sb.append(\"Affinity: \").append(getAffinity()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getHostId() != null)\r\n        sb.append(\"HostId: \").append(getHostId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getTenancy() != null)\r\n        sb.append(\"Tenancy: \").append(getTenancy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.FixedResponseActionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageBody() != null)\r\n        sb.append(\"MessageBody: \").append(getMessageBody()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CacheParameterGroupStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getParameterApplyStatus() != null)\r\n        sb.append(\"ParameterApplyStatus: \").append(getParameterApplyStatus()).append(\",\");\r\n    if (getCacheNodeIdsToReboot() != null)\r\n        sb.append(\"CacheNodeIdsToReboot: \").append(getCacheNodeIdsToReboot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.EnvironmentTier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.describeEnvironmentHealth",
	"Comment": "returns information about the overall health of the specified environment. the describeenvironmenthealthoperation is only available with aws elastic beanstalk enhanced health.",
	"Method": "DescribeEnvironmentHealthResult describeEnvironmentHealth(DescribeEnvironmentHealthRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEnvironmentHealth(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ImportImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getHypervisor() != null)\r\n        sb.append(\"Hypervisor: \").append(getHypervisor()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getImportTaskId() != null)\r\n        sb.append(\"ImportTaskId: \").append(getImportTaskId()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getLicenseType() != null)\r\n        sb.append(\"LicenseType: \").append(getLicenseType()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getProgress() != null)\r\n        sb.append(\"Progress: \").append(getProgress()).append(\",\");\r\n    if (getSnapshotDetails() != null)\r\n        sb.append(\"SnapshotDetails: \").append(getSnapshotDetails()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RegisterImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageLocation() != null)\r\n        sb.append(\"ImageLocation: \").append(getImageLocation()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEnaSupport() != null)\r\n        sb.append(\"EnaSupport: \").append(getEnaSupport()).append(\",\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getBillingProducts() != null)\r\n        sb.append(\"BillingProducts: \").append(getBillingProducts()).append(\",\");\r\n    if (getRamdiskId() != null)\r\n        sb.append(\"RamdiskId: \").append(getRamdiskId()).append(\",\");\r\n    if (getRootDeviceName() != null)\r\n        sb.append(\"RootDeviceName: \").append(getRootDeviceName()).append(\",\");\r\n    if (getSriovNetSupport() != null)\r\n        sb.append(\"SriovNetSupport: \").append(getSriovNetSupport()).append(\",\");\r\n    if (getVirtualizationType() != null)\r\n        sb.append(\"VirtualizationType: \").append(getVirtualizationType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListTaskDefinitionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFamilyPrefix() != null)\r\n        sb.append(\"FamilyPrefix: \").append(getFamilyPrefix()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSort() != null)\r\n        sb.append(\"Sort: \").append(getSort()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTransitGatewayRouteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayRouteTable() != null)\r\n        sb.append(\"TransitGatewayRouteTable: \").append(getTransitGatewayRouteTable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeGlobalTableSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalTableName() != null)\r\n        sb.append(\"GlobalTableName: \").append(getGlobalTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateApplicationVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.putLifecyclePolicy",
	"Comment": "creates or updates a lifecycle policy. for information about lifecycle policy syntax, see lifecycle policytemplate.",
	"Method": "PutLifecyclePolicyResult putLifecyclePolicy(PutLifecyclePolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutLifecyclePolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DeletePlatformVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteNetworkAclEntryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEgress() != null)\r\n        sb.append(\"Egress: \").append(getEgress()).append(\",\");\r\n    if (getNetworkAclId() != null)\r\n        sb.append(\"NetworkAclId: \").append(getNetworkAclId()).append(\",\");\r\n    if (getRuleNumber() != null)\r\n        sb.append(\"RuleNumber: \").append(getRuleNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.Event.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getDate() != null)\r\n        sb.append(\"Date: \").append(getDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Shard.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShardId() != null)\r\n        sb.append(\"ShardId: \").append(getShardId()).append(\",\");\r\n    if (getSequenceNumberRange() != null)\r\n        sb.append(\"SequenceNumberRange: \").append(getSequenceNumberRange()).append(\",\");\r\n    if (getParentShardId() != null)\r\n        sb.append(\"ParentShardId: \").append(getParentShardId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ReplicationGroupPendingModifiedValues.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrimaryClusterId() != null)\r\n        sb.append(\"PrimaryClusterId: \").append(getPrimaryClusterId()).append(\",\");\r\n    if (getAutomaticFailoverStatus() != null)\r\n        sb.append(\"AutomaticFailoverStatus: \").append(getAutomaticFailoverStatus()).append(\",\");\r\n    if (getResharding() != null)\r\n        sb.append(\"Resharding: \").append(getResharding());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterArns() != null)\r\n        sb.append(\"ClusterArns: \").append(getClusterArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.getItemAsync",
	"Comment": "simplified method form for invoking the getitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetItemResult> getItemAsync(GetItemRequest request,java.util.concurrent.Future<GetItemResult> getItemAsync,GetItemRequest request,com.amazonaws.handlers.AsyncHandler<GetItemRequest, GetItemResult> asyncHandler,java.util.concurrent.Future<GetItemResult> getItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.concurrent.Future<GetItemResult> getItemAsync,String tableName,java.util.Map<String, AttributeValue> key,com.amazonaws.handlers.AsyncHandler<GetItemRequest, GetItemResult> asyncHandler,java.util.concurrent.Future<GetItemResult> getItemAsync,String tableName,java.util.Map<String, AttributeValue> key,Boolean consistentRead,java.util.concurrent.Future<GetItemResult> getItemAsync,String tableName,java.util.Map<String, AttributeValue> key,Boolean consistentRead,com.amazonaws.handlers.AsyncHandler<GetItemRequest, GetItemResult> asyncHandler){\r\n    return getItemAsync(new GetItemRequest().withTableName(tableName).withKey(key).withConsistentRead(consistentRead), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeImageAttribute",
	"Comment": "describes the specified attribute of the specified ami. you can specify only one attribute at a time.",
	"Method": "DescribeImageAttributeResult describeImageAttribute(DescribeImageAttributeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeImageAttribute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ReplicaSettingsDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName()).append(\",\");\r\n    if (getReplicaStatus() != null)\r\n        sb.append(\"ReplicaStatus: \").append(getReplicaStatus()).append(\",\");\r\n    if (getReplicaBillingModeSummary() != null)\r\n        sb.append(\"ReplicaBillingModeSummary: \").append(getReplicaBillingModeSummary()).append(\",\");\r\n    if (getReplicaProvisionedReadCapacityUnits() != null)\r\n        sb.append(\"ReplicaProvisionedReadCapacityUnits: \").append(getReplicaProvisionedReadCapacityUnits()).append(\",\");\r\n    if (getReplicaProvisionedReadCapacityAutoScalingSettings() != null)\r\n        sb.append(\"ReplicaProvisionedReadCapacityAutoScalingSettings: \").append(getReplicaProvisionedReadCapacityAutoScalingSettings()).append(\",\");\r\n    if (getReplicaProvisionedWriteCapacityUnits() != null)\r\n        sb.append(\"ReplicaProvisionedWriteCapacityUnits: \").append(getReplicaProvisionedWriteCapacityUnits()).append(\",\");\r\n    if (getReplicaProvisionedWriteCapacityAutoScalingSettings() != null)\r\n        sb.append(\"ReplicaProvisionedWriteCapacityAutoScalingSettings: \").append(getReplicaProvisionedWriteCapacityAutoScalingSettings()).append(\",\");\r\n    if (getReplicaGlobalSecondaryIndexSettings() != null)\r\n        sb.append(\"ReplicaGlobalSecondaryIndexSettings: \").append(getReplicaGlobalSecondaryIndexSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeleteClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.IamInstanceProfileAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withNumberSet",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withNumberSet(String attrName,Number vals,Item withNumberSet,String attrName,Set<Number> vals){\r\n    checkInvalidAttribute(attrName, vals);\r\n    Set<BigDecimal> set = InternalUtils.toBigDecimalSet(vals);\r\n    if (set.size() != vals.size())\r\n        throw new IllegalArgumentException(DUPLICATE_VALUES_FOUND_IN_INPUT);\r\n    return withBigDecimalSet(attrName, set);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EbsBlockDevice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getVolumeSize() != null)\r\n        sb.append(\"VolumeSize: \").append(getVolumeSize()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RejectTransitGatewayVpcAttachmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayVpcAttachment() != null)\r\n        sb.append(\"TransitGatewayVpcAttachment: \").append(getTransitGatewayVpcAttachment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.cancelSpotInstanceRequests",
	"Comment": "cancels one or more spot instance requests.canceling a spot instance request does not terminate running spot instances associated with the request.",
	"Method": "CancelSpotInstanceRequestsResult cancelSpotInstanceRequests(CancelSpotInstanceRequestsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCancelSpotInstanceRequests(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeAccountLimitsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.withRangeKeyConditions",
	"Comment": "sets the range key condition for this query. all range key attributes forthe table must be specified by attribute name in the map.",
	"Method": "DynamoDBQueryExpression<T> withRangeKeyConditions(Map<String, Condition> rangeKeyConditions){\r\n    setRangeKeyConditions(rangeKeyConditions);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ResetCacheParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.unassignIpv6Addresses",
	"Comment": "unassigns one or more ipv6 addresses from a network interface.",
	"Method": "UnassignIpv6AddressesResult unassignIpv6Addresses(UnassignIpv6AddressesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUnassignIpv6Addresses(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FpgaImageState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateTransitGatewayRouteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociation() != null)\r\n        sb.append(\"Association: \").append(getAssociation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotDatafeedSubscriptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpotDatafeedSubscription() != null)\r\n        sb.append(\"SpotDatafeedSubscription: \").append(getSpotDatafeedSubscription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkAsyncClient.abortEnvironmentUpdateAsync",
	"Comment": "simplified method form for invoking the abortenvironmentupdate operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<AbortEnvironmentUpdateResult> abortEnvironmentUpdateAsync(AbortEnvironmentUpdateRequest request,java.util.concurrent.Future<AbortEnvironmentUpdateResult> abortEnvironmentUpdateAsync,AbortEnvironmentUpdateRequest request,com.amazonaws.handlers.AsyncHandler<AbortEnvironmentUpdateRequest, AbortEnvironmentUpdateResult> asyncHandler,java.util.concurrent.Future<AbortEnvironmentUpdateResult> abortEnvironmentUpdateAsync,java.util.concurrent.Future<AbortEnvironmentUpdateResult> abortEnvironmentUpdateAsync,com.amazonaws.handlers.AsyncHandler<AbortEnvironmentUpdateRequest, AbortEnvironmentUpdateResult> asyncHandler){\r\n    return abortEnvironmentUpdateAsync(new AbortEnvironmentUpdateRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.HealthCheck.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getInterval() != null)\r\n        sb.append(\"Interval: \").append(getInterval()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getRetries() != null)\r\n        sb.append(\"Retries: \").append(getRetries()).append(\",\");\r\n    if (getStartPeriod() != null)\r\n        sb.append(\"StartPeriod: \").append(getStartPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getInstanceState() != null)\r\n        sb.append(\"InstanceState: \").append(getInstanceState()).append(\",\");\r\n    if (getInstanceStatus() != null)\r\n        sb.append(\"InstanceStatus: \").append(getInstanceStatus()).append(\",\");\r\n    if (getSystemStatus() != null)\r\n        sb.append(\"SystemStatus: \").append(getSystemStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeDhcpOptionsAsync",
	"Comment": "simplified method form for invoking the describedhcpoptions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDhcpOptionsResult> describeDhcpOptionsAsync(DescribeDhcpOptionsRequest request,java.util.concurrent.Future<DescribeDhcpOptionsResult> describeDhcpOptionsAsync,DescribeDhcpOptionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDhcpOptionsRequest, DescribeDhcpOptionsResult> asyncHandler,java.util.concurrent.Future<DescribeDhcpOptionsResult> describeDhcpOptionsAsync,java.util.concurrent.Future<DescribeDhcpOptionsResult> describeDhcpOptionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDhcpOptionsRequest, DescribeDhcpOptionsResult> asyncHandler){\r\n    return describeDhcpOptionsAsync(new DescribeDhcpOptionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.DeleteClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.describeReservedCacheNodesAsync",
	"Comment": "simplified method form for invoking the describereservedcachenodes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedCacheNodesResult> describeReservedCacheNodesAsync(DescribeReservedCacheNodesRequest request,java.util.concurrent.Future<DescribeReservedCacheNodesResult> describeReservedCacheNodesAsync,DescribeReservedCacheNodesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedCacheNodesRequest, DescribeReservedCacheNodesResult> asyncHandler,java.util.concurrent.Future<DescribeReservedCacheNodesResult> describeReservedCacheNodesAsync,java.util.concurrent.Future<DescribeReservedCacheNodesResult> describeReservedCacheNodesAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedCacheNodesRequest, DescribeReservedCacheNodesResult> asyncHandler){\r\n    return describeReservedCacheNodesAsync(new DescribeReservedCacheNodesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeKeyPairsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyPairs() != null)\r\n        sb.append(\"KeyPairs: \").append(getKeyPairs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplatesMonitoring.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getContainerInstance() != null)\r\n        sb.append(\"ContainerInstance: \").append(getContainerInstance()).append(\",\");\r\n    if (getFamily() != null)\r\n        sb.append(\"Family: \").append(getFamily()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getStartedBy() != null)\r\n        sb.append(\"StartedBy: \").append(getStartedBy()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getDesiredStatus() != null)\r\n        sb.append(\"DesiredStatus: \").append(getDesiredStatus()).append(\",\");\r\n    if (getLaunchType() != null)\r\n        sb.append(\"LaunchType: \").append(getLaunchType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeAccountAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeNames() != null)\r\n        sb.append(\"AttributeNames: \").append(getAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceNetworkAclAssociationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNewAssociationId() != null)\r\n        sb.append(\"NewAssociationId: \").append(getNewAssociationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.LifecyclePolicyPreviewFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagStatus() != null)\r\n        sb.append(\"TagStatus: \").append(getTagStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcClassicLinkResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcs() != null)\r\n        sb.append(\"Vpcs: \").append(getVpcs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withInt",
	"Comment": "sets the value of the specified key in the current valuemap to thegiven value.",
	"Method": "ValueMap withInt(String key,int val){\r\n    return withNumber(key, Integer.valueOf(val));\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.BatchGetItemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResponses() != null)\r\n        sb.append(\"Responses: \").append(getResponses()).append(\",\");\r\n    if (getUnprocessedKeys() != null)\r\n        sb.append(\"UnprocessedKeys: \").append(getUnprocessedKeys()).append(\",\");\r\n    if (getConsumedCapacity() != null)\r\n        sb.append(\"ConsumedCapacity: \").append(getConsumedCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeSSLPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.Certificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TargetGroupsConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroups() != null)\r\n        sb.append(\"TargetGroups: \").append(getTargetGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkInterface.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociation() != null)\r\n        sb.append(\"Association: \").append(getAssociation()).append(\",\");\r\n    if (getAttachment() != null)\r\n        sb.append(\"Attachment: \").append(getAttachment()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getInterfaceType() != null)\r\n        sb.append(\"InterfaceType: \").append(getInterfaceType()).append(\",\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getMacAddress() != null)\r\n        sb.append(\"MacAddress: \").append(getMacAddress()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getPrivateIpAddresses() != null)\r\n        sb.append(\"PrivateIpAddresses: \").append(getPrivateIpAddresses()).append(\",\");\r\n    if (getRequesterId() != null)\r\n        sb.append(\"RequesterId: \").append(getRequesterId()).append(\",\");\r\n    if (getRequesterManaged() != null)\r\n        sb.append(\"RequesterManaged: \").append(getRequesterManaged()).append(\",\");\r\n    if (getSourceDestCheck() != null)\r\n        sb.append(\"SourceDestCheck: \").append(getSourceDestCheck()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getTagSet() != null)\r\n        sb.append(\"TagSet: \").append(getTagSet()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TargetCapacitySpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTotalTargetCapacity() != null)\r\n        sb.append(\"TotalTargetCapacity: \").append(getTotalTargetCapacity()).append(\",\");\r\n    if (getOnDemandTargetCapacity() != null)\r\n        sb.append(\"OnDemandTargetCapacity: \").append(getOnDemandTargetCapacity()).append(\",\");\r\n    if (getSpotTargetCapacity() != null)\r\n        sb.append(\"SpotTargetCapacity: \").append(getSpotTargetCapacity()).append(\",\");\r\n    if (getDefaultTargetCapacityType() != null)\r\n        sb.append(\"DefaultTargetCapacityType: \").append(getDefaultTargetCapacityType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.AddTagsToResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PublicIpv4PoolRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFirstAddress() != null)\r\n        sb.append(\"FirstAddress: \").append(getFirstAddress()).append(\",\");\r\n    if (getLastAddress() != null)\r\n        sb.append(\"LastAddress: \").append(getLastAddress()).append(\",\");\r\n    if (getAddressCount() != null)\r\n        sb.append(\"AddressCount: \").append(getAddressCount()).append(\",\");\r\n    if (getAvailableAddressCount() != null)\r\n        sb.append(\"AvailableAddressCount: \").append(getAvailableAddressCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.PutLifecyclePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getLifecyclePolicyText() != null)\r\n        sb.append(\"LifecyclePolicyText: \").append(getLifecyclePolicyText());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetTransitGatewayAttachmentPropagationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachmentId() != null)\r\n        sb.append(\"TransitGatewayAttachmentId: \").append(getTransitGatewayAttachmentId()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeByoipCidrs",
	"Comment": "describes the ip address ranges that were specified in calls to provisionbyoipcidr.to describe the address pools that were created when you provisioned the address ranges, usedescribepublicipv4pools.",
	"Method": "DescribeByoipCidrsResult describeByoipCidrs(DescribeByoipCidrsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeByoipCidrs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpcEndpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcEndpointId() != null)\r\n        sb.append(\"VpcEndpointId: \").append(getVpcEndpointId()).append(\",\");\r\n    if (getVpcEndpointType() != null)\r\n        sb.append(\"VpcEndpointType: \").append(getVpcEndpointType()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getRouteTableIds() != null)\r\n        sb.append(\"RouteTableIds: \").append(getRouteTableIds()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getPrivateDnsEnabled() != null)\r\n        sb.append(\"PrivateDnsEnabled: \").append(getPrivateDnsEnabled()).append(\",\");\r\n    if (getNetworkInterfaceIds() != null)\r\n        sb.append(\"NetworkInterfaceIds: \").append(getNetworkInterfaceIds()).append(\",\");\r\n    if (getDnsEntries() != null)\r\n        sb.append(\"DnsEntries: \").append(getDnsEntries()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeleteClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.ListImagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageIds() != null)\r\n        sb.append(\"ImageIds: \").append(getImageIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VolumeStatusInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetails() != null)\r\n        sb.append(\"Details: \").append(getDetails()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ServiceRegistry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryArn() != null)\r\n        sb.append(\"RegistryArn: \").append(getRegistryArn()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName()).append(\",\");\r\n    if (getContainerPort() != null)\r\n        sb.append(\"ContainerPort: \").append(getContainerPort());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.ReflectionUtils.getClassFieldByName",
	"Comment": "returns the field object for the specified field name declared in thespecified class. returns null if no such field can be found.",
	"Method": "Field getClassFieldByName(Class<?> clazz,String fieldName){\r\n    try {\r\n        return clazz.getDeclaredField(fieldName);\r\n    } catch (SecurityException e) {\r\n        throw new DynamoDBMappingException(\"Denied access to the [\" + fieldName + \"] field in class [\" + clazz + \"].\", e);\r\n    } catch (NoSuchFieldException e) {\r\n        return null;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Expected.beginsWith",
	"Comment": "creates and returns a condition of the range key with a value that beginswith the given value.",
	"Method": "Expected beginsWith(String val){\r\n    return _withComparisonOperator(ComparisonOperator.BEGINS_WITH)._withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.allocateAddressAsync",
	"Comment": "simplified method form for invoking the allocateaddress operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<AllocateAddressResult> allocateAddressAsync(AllocateAddressRequest request,java.util.concurrent.Future<AllocateAddressResult> allocateAddressAsync,AllocateAddressRequest request,com.amazonaws.handlers.AsyncHandler<AllocateAddressRequest, AllocateAddressResult> asyncHandler,java.util.concurrent.Future<AllocateAddressResult> allocateAddressAsync,java.util.concurrent.Future<AllocateAddressResult> allocateAddressAsync,com.amazonaws.handlers.AsyncHandler<AllocateAddressRequest, AllocateAddressResult> asyncHandler){\r\n    return allocateAddressAsync(new AllocateAddressRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateBlockDeviceMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getVirtualName() != null)\r\n        sb.append(\"VirtualName: \").append(getVirtualName()).append(\",\");\r\n    if (getEbs() != null)\r\n        sb.append(\"Ebs: \").append(getEbs()).append(\",\");\r\n    if (getNoDevice() != null)\r\n        sb.append(\"NoDevice: \").append(getNoDevice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LoadBalancersConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClassicLoadBalancersConfig() != null)\r\n        sb.append(\"ClassicLoadBalancersConfig: \").append(getClassicLoadBalancersConfig()).append(\",\");\r\n    if (getTargetGroupsConfig() != null)\r\n        sb.append(\"TargetGroupsConfig: \").append(getTargetGroupsConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.describeConfigurationSettings",
	"Comment": "returns a description of the settings for the specified configuration set, that is, either a configurationtemplate or the configuration set associated with a running environment.when describing the settings for the configuration set associated with a running environment, it is possible toreceive two sets of setting descriptions. one is the deployed configuration set, and the other is a draftconfiguration of an environment that is either in the process of deployment or that failed to deploy.related topicsdeleteenvironmentconfiguration",
	"Method": "DescribeConfigurationSettingsResult describeConfigurationSettings(DescribeConfigurationSettingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeConfigurationSettings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.HostVolumeProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourcePath() != null)\r\n        sb.append(\"SourcePath: \").append(getSourcePath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Task.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskArn() != null)\r\n        sb.append(\"TaskArn: \").append(getTaskArn()).append(\",\");\r\n    if (getClusterArn() != null)\r\n        sb.append(\"ClusterArn: \").append(getClusterArn()).append(\",\");\r\n    if (getTaskDefinitionArn() != null)\r\n        sb.append(\"TaskDefinitionArn: \").append(getTaskDefinitionArn()).append(\",\");\r\n    if (getContainerInstanceArn() != null)\r\n        sb.append(\"ContainerInstanceArn: \").append(getContainerInstanceArn()).append(\",\");\r\n    if (getOverrides() != null)\r\n        sb.append(\"Overrides: \").append(getOverrides()).append(\",\");\r\n    if (getLastStatus() != null)\r\n        sb.append(\"LastStatus: \").append(getLastStatus()).append(\",\");\r\n    if (getDesiredStatus() != null)\r\n        sb.append(\"DesiredStatus: \").append(getDesiredStatus()).append(\",\");\r\n    if (getCpu() != null)\r\n        sb.append(\"Cpu: \").append(getCpu()).append(\",\");\r\n    if (getMemory() != null)\r\n        sb.append(\"Memory: \").append(getMemory()).append(\",\");\r\n    if (getContainers() != null)\r\n        sb.append(\"Containers: \").append(getContainers()).append(\",\");\r\n    if (getStartedBy() != null)\r\n        sb.append(\"StartedBy: \").append(getStartedBy()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getStoppedReason() != null)\r\n        sb.append(\"StoppedReason: \").append(getStoppedReason()).append(\",\");\r\n    if (getStopCode() != null)\r\n        sb.append(\"StopCode: \").append(getStopCode()).append(\",\");\r\n    if (getConnectivity() != null)\r\n        sb.append(\"Connectivity: \").append(getConnectivity()).append(\",\");\r\n    if (getConnectivityAt() != null)\r\n        sb.append(\"ConnectivityAt: \").append(getConnectivityAt()).append(\",\");\r\n    if (getPullStartedAt() != null)\r\n        sb.append(\"PullStartedAt: \").append(getPullStartedAt()).append(\",\");\r\n    if (getPullStoppedAt() != null)\r\n        sb.append(\"PullStoppedAt: \").append(getPullStoppedAt()).append(\",\");\r\n    if (getExecutionStoppedAt() != null)\r\n        sb.append(\"ExecutionStoppedAt: \").append(getExecutionStoppedAt()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getStoppingAt() != null)\r\n        sb.append(\"StoppingAt: \").append(getStoppingAt()).append(\",\");\r\n    if (getStoppedAt() != null)\r\n        sb.append(\"StoppedAt: \").append(getStoppedAt()).append(\",\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getLaunchType() != null)\r\n        sb.append(\"LaunchType: \").append(getLaunchType()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getAttachments() != null)\r\n        sb.append(\"Attachments: \").append(getAttachments()).append(\",\");\r\n    if (getHealthStatus() != null)\r\n        sb.append(\"HealthStatus: \").append(getHealthStatus()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeploymentController.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.RemoveTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RejectVpcPeeringConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.attachInternetGateway",
	"Comment": "attaches an internet gateway to a vpc, enabling connectivity between the internet and the vpc. for moreinformation about your vpc and internet gateway, see the amazon virtual private cloud user guide.",
	"Method": "AttachInternetGatewayResult attachInternetGateway(AttachInternetGatewayRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAttachInternetGateway(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.RangeKeyCondition.beginsWith",
	"Comment": "creates and returns a condition of the range key with a value that beginswith the given value.",
	"Method": "RangeKeyCondition beginsWith(String val){\r\n    kcond = KeyConditions.BEGINS_WITH;\r\n    return withValues(val);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpnGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpnGatewayId() != null)\r\n        sb.append(\"VpnGatewayId: \").append(getVpnGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createLaunchTemplate",
	"Comment": "creates a launch template. a launch template contains the parameters to launch an instance. when you launch aninstance using runinstances, you can specify a launch template instead of providing the launch parametersin the request.",
	"Method": "CreateLaunchTemplateResult createLaunchTemplate(CreateLaunchTemplateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateLaunchTemplate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CopyImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheParameterGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GlobalTableDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroup() != null)\r\n        sb.append(\"ReplicationGroup: \").append(getReplicationGroup()).append(\",\");\r\n    if (getGlobalTableArn() != null)\r\n        sb.append(\"GlobalTableArn: \").append(getGlobalTableArn()).append(\",\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime()).append(\",\");\r\n    if (getGlobalTableStatus() != null)\r\n        sb.append(\"GlobalTableStatus: \").append(getGlobalTableStatus()).append(\",\");\r\n    if (getGlobalTableName() != null)\r\n        sb.append(\"GlobalTableName: \").append(getGlobalTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateIamInstanceProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.setRepositoryPolicy",
	"Comment": "applies a repository policy on a specified repository to control access permissions.",
	"Method": "SetRepositoryPolicyResult setRepositoryPolicy(SetRepositoryPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSetRepositoryPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeConfigurationOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifySubnetAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.spec.AbstractSpec.getRequest",
	"Comment": "internal method.not meant to be called directly.may change without notice.",
	"Method": "T getRequest(){\r\n    return req;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.TagDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeSpotFleetInstances",
	"Comment": "describes the running instances for the specified spot fleet.",
	"Method": "DescribeSpotFleetInstancesResult describeSpotFleetInstances(DescribeSpotFleetInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSpotFleetInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UserIdGroupPair.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getPeeringStatus() != null)\r\n        sb.append(\"PeeringStatus: \").append(getPeeringStatus()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotInstanceStateFault.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DeleteTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UnsuccessfulItemError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.describeBackup",
	"Comment": "describes an existing backup of a table.you can call describebackup at a maximum rate of 10 times per second.",
	"Method": "DescribeBackupResult describeBackup(DescribeBackupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeBackup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.conversionTaskCompleted",
	"Comment": "builds a conversiontaskcompleted waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeConversionTasksRequest> conversionTaskCompleted(){\r\n    return new WaiterBuilder<DescribeConversionTasksRequest, DescribeConversionTasksResult>().withSdkFunction(new DescribeConversionTasksFunction(client)).withAcceptors(new ConversionTaskCompleted.IsCompletedMatcher(), new ConversionTaskCompleted.IsCancelledMatcher(), new ConversionTaskCompleted.IsCancellingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createNetworkInterface",
	"Comment": "creates a network interface in the specified subnet.for more information about network interfaces, see elastic network interfaces in theamazon virtual private cloud user guide.",
	"Method": "CreateNetworkInterfaceResult createNetworkInterface(CreateNetworkInterfaceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateNetworkInterface(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeTransitGatewayVpcAttachmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayVpcAttachments() != null)\r\n        sb.append(\"TransitGatewayVpcAttachments: \").append(getTransitGatewayVpcAttachments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.RegisterInstancesWithLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.waiters.AmazonECSWaiters.tasksRunning",
	"Comment": "builds a tasksrunning waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeTasksRequest> tasksRunning(){\r\n    return new WaiterBuilder<DescribeTasksRequest, DescribeTasksResult>().withSdkFunction(new DescribeTasksFunction(client)).withAcceptors(new TasksRunning.IsSTOPPEDMatcher(), new TasksRunning.IsMISSINGMatcher(), new TasksRunning.IsRUNNINGMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(100), new FixedDelayStrategy(6))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ElasticGpuSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteLaunchTemplate",
	"Comment": "deletes a launch template. deleting a launch template deletes all of its versions.",
	"Method": "DeleteLaunchTemplateResult deleteLaunchTemplate(DeleteLaunchTemplateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLaunchTemplate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateId() != null)\r\n        sb.append(\"LaunchTemplateId: \").append(getLaunchTemplateId()).append(\",\");\r\n    if (getLaunchTemplateName() != null)\r\n        sb.append(\"LaunchTemplateName: \").append(getLaunchTemplateName()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getCreatedBy() != null)\r\n        sb.append(\"CreatedBy: \").append(getCreatedBy()).append(\",\");\r\n    if (getDefaultVersionNumber() != null)\r\n        sb.append(\"DefaultVersionNumber: \").append(getDefaultVersionNumber()).append(\",\");\r\n    if (getLatestVersionNumber() != null)\r\n        sb.append(\"LatestVersionNumber: \").append(getLatestVersionNumber()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonecs using the current builder configuration.",
	"Method": "AmazonECS build(AwsSyncClientParams params){\r\n    return new AmazonECSClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeLoadBalancersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancers() != null)\r\n        sb.append(\"LoadBalancers: \").append(getLoadBalancers()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.monitorInstances",
	"Comment": "enables detailed monitoring for a running instance. otherwise, basic monitoring is enabled. for more information,see monitoring your instancesand volumes in the amazon elastic compute cloud user guide.to disable detailed monitoring, see .",
	"Method": "MonitorInstancesResult monitorInstances(MonitorInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeMonitorInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withString",
	"Comment": "sets the value of the specified key in the current valuemap to thegiven value.",
	"Method": "ValueMap withString(String key,String val){\r\n    super.put(key, val);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReservedInstancesListing.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getInstanceCounts() != null)\r\n        sb.append(\"InstanceCounts: \").append(getInstanceCounts()).append(\",\");\r\n    if (getPriceSchedules() != null)\r\n        sb.append(\"PriceSchedules: \").append(getPriceSchedules()).append(\",\");\r\n    if (getReservedInstancesId() != null)\r\n        sb.append(\"ReservedInstancesId: \").append(getReservedInstancesId()).append(\",\");\r\n    if (getReservedInstancesListingId() != null)\r\n        sb.append(\"ReservedInstancesListingId: \").append(getReservedInstancesListingId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getUpdateDate() != null)\r\n        sb.append(\"UpdateDate: \").append(getUpdateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.Vpc.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock()).append(\",\");\r\n    if (getDhcpOptionsId() != null)\r\n        sb.append(\"DhcpOptionsId: \").append(getDhcpOptionsId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getInstanceTenancy() != null)\r\n        sb.append(\"InstanceTenancy: \").append(getInstanceTenancy()).append(\",\");\r\n    if (getIpv6CidrBlockAssociationSet() != null)\r\n        sb.append(\"Ipv6CidrBlockAssociationSet: \").append(getIpv6CidrBlockAssociationSet()).append(\",\");\r\n    if (getCidrBlockAssociationSet() != null)\r\n        sb.append(\"CidrBlockAssociationSet: \").append(getCidrBlockAssociationSet()).append(\",\");\r\n    if (getIsDefault() != null)\r\n        sb.append(\"IsDefault: \").append(getIsDefault()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeEgressOnlyInternetGatewaysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEgressOnlyInternetGatewayIds() != null)\r\n        sb.append(\"EgressOnlyInternetGatewayIds: \").append(getEgressOnlyInternetGatewayIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ListStreamsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreams() != null)\r\n        sb.append(\"Streams: \").append(getStreams()).append(\",\");\r\n    if (getLastEvaluatedStreamArn() != null)\r\n        sb.append(\"LastEvaluatedStreamArn: \").append(getLastEvaluatedStreamArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Capacity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReadCapacityUnits() != null)\r\n        sb.append(\"ReadCapacityUnits: \").append(getReadCapacityUnits()).append(\",\");\r\n    if (getWriteCapacityUnits() != null)\r\n        sb.append(\"WriteCapacityUnits: \").append(getWriteCapacityUnits()).append(\",\");\r\n    if (getCapacityUnits() != null)\r\n        sb.append(\"CapacityUnits: \").append(getCapacityUnits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.StartTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTasks() != null)\r\n        sb.append(\"Tasks: \").append(getTasks()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.waiters.AmazonElasticLoadBalancingWaiters.instanceInService",
	"Comment": "builds a instanceinservice waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstanceHealthRequest> instanceInService(){\r\n    return new WaiterBuilder<DescribeInstanceHealthRequest, DescribeInstanceHealthResult>().withSdkFunction(new DescribeInstanceHealthFunction(client)).withAcceptors(new InstanceInService.IsInServiceMatcher(), new InstanceInService.IsInvalidInstanceMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.exportTransitGatewayRoutes",
	"Comment": "exports routes from the specified transit gateway route table to the specified s3 bucket. by default, all routesare exported. alternatively, you can filter by cidr range.",
	"Method": "ExportTransitGatewayRoutesResult exportTransitGatewayRoutes(ExportTransitGatewayRoutesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeExportTransitGatewayRoutes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.buildForUpdate",
	"Comment": "returns an expression specification for use in an updateitemrequest to dynamodb.",
	"Method": "UpdateItemExpressionSpec buildForUpdate(){\r\n    return new UpdateItemExpressionSpec(this);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.setRulePriorities",
	"Comment": "sets the priorities of the specified rules.you can reorder the rules as long as there are no priority conflicts in the new order. any existing rules thatyou do not specify retain their current priority.",
	"Method": "SetRulePrioritiesResult setRulePriorities(SetRulePrioritiesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSetRulePriorities(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ApplyEnvironmentManagedActionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionId() != null)\r\n        sb.append(\"ActionId: \").append(getActionId()).append(\",\");\r\n    if (getActionDescription() != null)\r\n        sb.append(\"ActionDescription: \").append(getActionDescription()).append(\",\");\r\n    if (getActionType() != null)\r\n        sb.append(\"ActionType: \").append(getActionType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VgwTelemetry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceptedRouteCount() != null)\r\n        sb.append(\"AcceptedRouteCount: \").append(getAcceptedRouteCount()).append(\",\");\r\n    if (getLastStatusChange() != null)\r\n        sb.append(\"LastStatusChange: \").append(getLastStatusChange()).append(\",\");\r\n    if (getOutsideIpAddress() != null)\r\n        sb.append(\"OutsideIpAddress: \").append(getOutsideIpAddress()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateTransitGatewayRouteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociation() != null)\r\n        sb.append(\"Association: \").append(getAssociation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyFpgaImageAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageId() != null)\r\n        sb.append(\"FpgaImageId: \").append(getFpgaImageId()).append(\",\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getOperationType() != null)\r\n        sb.append(\"OperationType: \").append(getOperationType()).append(\",\");\r\n    if (getUserIds() != null)\r\n        sb.append(\"UserIds: \").append(getUserIds()).append(\",\");\r\n    if (getUserGroups() != null)\r\n        sb.append(\"UserGroups: \").append(getUserGroups()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes()).append(\",\");\r\n    if (getLoadPermission() != null)\r\n        sb.append(\"LoadPermission: \").append(getLoadPermission()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.ModifyTargetGroupAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroupArn() != null)\r\n        sb.append(\"TargetGroupArn: \").append(getTargetGroupArn()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ElasticGpus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticGpuId() != null)\r\n        sb.append(\"ElasticGpuId: \").append(getElasticGpuId()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getElasticGpuType() != null)\r\n        sb.append(\"ElasticGpuType: \").append(getElasticGpuType()).append(\",\");\r\n    if (getElasticGpuHealth() != null)\r\n        sb.append(\"ElasticGpuHealth: \").append(getElasticGpuHealth()).append(\",\");\r\n    if (getElasticGpuState() != null)\r\n        sb.append(\"ElasticGpuState: \").append(getElasticGpuState()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMountTargets() != null)\r\n        sb.append(\"MountTargets: \").append(getMountTargets()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeMovingAddressesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getPublicIps() != null)\r\n        sb.append(\"PublicIps: \").append(getPublicIps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Device.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostPath() != null)\r\n        sb.append(\"HostPath: \").append(getHostPath()).append(\",\");\r\n    if (getContainerPath() != null)\r\n        sb.append(\"ContainerPath: \").append(getContainerPath()).append(\",\");\r\n    if (getPermissions() != null)\r\n        sb.append(\"Permissions: \").append(getPermissions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.StatusCodes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus2xx() != null)\r\n        sb.append(\"Status2xx: \").append(getStatus2xx()).append(\",\");\r\n    if (getStatus3xx() != null)\r\n        sb.append(\"Status3xx: \").append(getStatus3xx()).append(\",\");\r\n    if (getStatus4xx() != null)\r\n        sb.append(\"Status4xx: \").append(getStatus4xx()).append(\",\");\r\n    if (getStatus5xx() != null)\r\n        sb.append(\"Status5xx: \").append(getStatus5xx());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VpnStaticRoute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DescribeLoadBalancerAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBReflector.getPrimaryRangeKeyName",
	"Comment": "returns the name of the primary range key, or null if the table does notone.",
	"Method": "String getPrimaryRangeKeyName(Class<?> clazz){\r\n    Method primaryRangeKeyGetter = getPrimaryHashKeyGetter(clazz);\r\n    return primaryRangeKeyGetter == null ? null : getAttributeName(getPrimaryRangeKeyGetter(clazz));\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeAvailabilityZonesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getZoneNames() != null)\r\n        sb.append(\"ZoneNames: \").append(getZoneNames()).append(\",\");\r\n    if (getZoneIds() != null)\r\n        sb.append(\"ZoneIds: \").append(getZoneIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CapacityReservationTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityReservationId() != null)\r\n        sb.append(\"CapacityReservationId: \").append(getCapacityReservationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withNumber",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withNumber(String attrName,BigDecimal val,Item withNumber,String attrName,Number val){\r\n    checkInvalidAttribute(attrName, val);\r\n    attributes.put(attrName, toBigDecimal(val));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DetachNetworkInterfaceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachmentId() != null)\r\n        sb.append(\"AttachmentId: \").append(getAttachmentId()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkInterfacePermissionState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.SolutionStackDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPermittedFileTypes() != null)\r\n        sb.append(\"PermittedFileTypes: \").append(getPermittedFileTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CpuOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCoreCount() != null)\r\n        sb.append(\"CoreCount: \").append(getCoreCount()).append(\",\");\r\n    if (getThreadsPerCore() != null)\r\n        sb.append(\"ThreadsPerCore: \").append(getThreadsPerCore());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.describeLoadBalancerPolicyTypes",
	"Comment": "describes the specified load balancer policy types or all load balancer policy types.the description of each type indicates how it can be used. for example, some policies can be used only with layer7 listeners, some policies can be used only with layer 4 listeners, and some policies can be used only with yourec2 instances.you can use createloadbalancerpolicy to create a policy configuration for any of these policy types. then,depending on the policy type, use either setloadbalancerpoliciesoflistener orsetloadbalancerpoliciesforbackendserver to set the policy.",
	"Method": "DescribeLoadBalancerPolicyTypesResult describeLoadBalancerPolicyTypes(DescribeLoadBalancerPolicyTypesRequest request,DescribeLoadBalancerPolicyTypesResult describeLoadBalancerPolicyTypes){\r\n    return describeLoadBalancerPolicyTypes(new DescribeLoadBalancerPolicyTypesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.DescribeVolumesFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeVolumesResult apply(DescribeVolumesRequest describeVolumesRequest){\r\n    return client.describeVolumes(describeVolumesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpnGatewaysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getVpnGatewayIds() != null)\r\n        sb.append(\"VpnGatewayIds: \").append(getVpnGatewayIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.modifyTargetGroupAttributes",
	"Comment": "modifies the specified attributes of the specified target group.",
	"Method": "ModifyTargetGroupAttributesResult modifyTargetGroupAttributes(ModifyTargetGroupAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyTargetGroupAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateInstanceNetworkInterfaceSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociatePublicIpAddress() != null)\r\n        sb.append(\"AssociatePublicIpAddress: \").append(getAssociatePublicIpAddress()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDeviceIndex() != null)\r\n        sb.append(\"DeviceIndex: \").append(getDeviceIndex()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getIpv6AddressCount() != null)\r\n        sb.append(\"Ipv6AddressCount: \").append(getIpv6AddressCount()).append(\",\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getPrivateIpAddresses() != null)\r\n        sb.append(\"PrivateIpAddresses: \").append(getPrivateIpAddresses()).append(\",\");\r\n    if (getSecondaryPrivateIpAddressCount() != null)\r\n        sb.append(\"SecondaryPrivateIpAddressCount: \").append(getSecondaryPrivateIpAddressCount()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeHostReservationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostReservationSet() != null)\r\n        sb.append(\"HostReservationSet: \").append(getHostReservationSet()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.PrimaryKey.addComponents",
	"Comment": "add one or multiple key components to this primary key.note adding a key component with the same name as that of an existingone would overwrite and become a single key component instead of two.",
	"Method": "PrimaryKey addComponents(KeyAttribute components){\r\n    if (components != null) {\r\n        for (KeyAttribute ka : components) {\r\n            InternalUtils.rejectNullInput(ka);\r\n            this.components.put(ka.getName(), ka);\r\n        }\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.CreateRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn()).append(\",\");\r\n    if (getConditions() != null)\r\n        sb.append(\"Conditions: \").append(getConditions()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpcPeeringConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPeerOwnerId() != null)\r\n        sb.append(\"PeerOwnerId: \").append(getPeerOwnerId()).append(\",\");\r\n    if (getPeerVpcId() != null)\r\n        sb.append(\"PeerVpcId: \").append(getPeerVpcId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getPeerRegion() != null)\r\n        sb.append(\"PeerRegion: \").append(getPeerRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DeleteCacheSecurityGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteSpotDatafeedSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.describeInstancesHealth",
	"Comment": "retrieves detailed information about the health of instances in your aws elastic beanstalk. this operationrequires enhanced healthreporting.",
	"Method": "DescribeInstancesHealthResult describeInstancesHealth(DescribeInstancesHealthRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeInstancesHealth(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.StandardModelFactories.rulesOf",
	"Comment": "creates a new set of conversion rules based on the configuration.",
	"Method": "RuleFactory<T> rulesOf(DynamoDBMapperConfig config,S3Link.Factory s3Links,DynamoDBMapperModelFactory models){\r\n    final boolean ver1 = (config.getConversionSchema() == ConversionSchemas.V1);\r\n    final boolean ver2 = (config.getConversionSchema() == ConversionSchemas.V2);\r\n    final boolean v2Compatible = (config.getConversionSchema() == ConversionSchemas.V2_COMPATIBLE);\r\n    final DynamoDBTypeConverterFactory.Builder scalars = config.getTypeConverterFactory().override();\r\n    scalars.with(String.class, S3Link.class, s3Links);\r\n    final Rules<T> factory = new Rules<T>(scalars.build());\r\n    factory.add(factory.new NativeType(!ver1));\r\n    factory.add(factory.new V2CompatibleBool(v2Compatible));\r\n    factory.add(factory.new NativeBool(ver2));\r\n    factory.add(factory.new StringScalar(true));\r\n    factory.add(factory.new DateToEpochRule(true));\r\n    factory.add(factory.new NumberScalar(true));\r\n    factory.add(factory.new BinaryScalar(true));\r\n    factory.add(factory.new NativeBoolSet(ver2));\r\n    factory.add(factory.new StringScalarSet(true));\r\n    factory.add(factory.new NumberScalarSet(true));\r\n    factory.add(factory.new BinaryScalarSet(true));\r\n    factory.add(factory.new ObjectSet(ver2));\r\n    factory.add(factory.new ObjectStringSet(!ver2));\r\n    factory.add(factory.new ObjectList(!ver1));\r\n    factory.add(factory.new ObjectMap(!ver1));\r\n    factory.add(factory.new ObjectDocumentMap(!ver1, models, config));\r\n    return factory;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describePlacementGroupsAsync",
	"Comment": "simplified method form for invoking the describeplacementgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribePlacementGroupsResult> describePlacementGroupsAsync(DescribePlacementGroupsRequest request,java.util.concurrent.Future<DescribePlacementGroupsResult> describePlacementGroupsAsync,DescribePlacementGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribePlacementGroupsRequest, DescribePlacementGroupsResult> asyncHandler,java.util.concurrent.Future<DescribePlacementGroupsResult> describePlacementGroupsAsync,java.util.concurrent.Future<DescribePlacementGroupsResult> describePlacementGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribePlacementGroupsRequest, DescribePlacementGroupsResult> asyncHandler){\r\n    return describePlacementGroupsAsync(new DescribePlacementGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.conversionTaskDeleted",
	"Comment": "builds a conversiontaskdeleted waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeConversionTasksRequest> conversionTaskDeleted(){\r\n    return new WaiterBuilder<DescribeConversionTasksRequest, DescribeConversionTasksResult>().withSdkFunction(new DescribeConversionTasksFunction(client)).withAcceptors(new ConversionTaskDeleted.IsDeletedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.StartLifecyclePolicyPreviewResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getLifecyclePolicyText() != null)\r\n        sb.append(\"LifecyclePolicyText: \").append(getLifecyclePolicyText()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceMonitoring.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getMonitoring() != null)\r\n        sb.append(\"Monitoring: \").append(getMonitoring());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNoReboot() != null)\r\n        sb.append(\"NoReboot: \").append(getNoReboot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SpotInstanceStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getUpdateTime() != null)\r\n        sb.append(\"UpdateTime: \").append(getUpdateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SnapshotDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getDiskImageSize() != null)\r\n        sb.append(\"DiskImageSize: \").append(getDiskImageSize()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getProgress() != null)\r\n        sb.append(\"Progress: \").append(getProgress()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getUserBucket() != null)\r\n        sb.append(\"UserBucket: \").append(getUserBucket());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.waiters.AmazonEKSWaiters.clusterDeleted",
	"Comment": "builds a clusterdeleted waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeClusterRequest> clusterDeleted(){\r\n    return new WaiterBuilder<DescribeClusterRequest, DescribeClusterResult>().withSdkFunction(new DescribeClusterFunction(client)).withAcceptors(new ClusterDeleted.IsACTIVEMatcher(), new ClusterDeleted.IsCREATINGMatcher(), new ClusterDeleted.IsResourceNotFoundExceptionMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeNetworkInterfacePermissionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfacePermissionIds() != null)\r\n        sb.append(\"NetworkInterfacePermissionIds: \").append(getNetworkInterfacePermissionIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.BatchDeleteImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageIds() != null)\r\n        sb.append(\"ImageIds: \").append(getImageIds()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.GetConsoleOutputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getLatest() != null)\r\n        sb.append(\"Latest: \").append(getLatest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.getItemAsync",
	"Comment": "simplified method form for invoking the getitem operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetItemResult> getItemAsync(GetItemRequest request,java.util.concurrent.Future<GetItemResult> getItemAsync,GetItemRequest request,com.amazonaws.handlers.AsyncHandler<GetItemRequest, GetItemResult> asyncHandler,java.util.concurrent.Future<GetItemResult> getItemAsync,String tableName,java.util.Map<String, AttributeValue> key,java.util.concurrent.Future<GetItemResult> getItemAsync,String tableName,java.util.Map<String, AttributeValue> key,com.amazonaws.handlers.AsyncHandler<GetItemRequest, GetItemResult> asyncHandler,java.util.concurrent.Future<GetItemResult> getItemAsync,String tableName,java.util.Map<String, AttributeValue> key,Boolean consistentRead,java.util.concurrent.Future<GetItemResult> getItemAsync,String tableName,java.util.Map<String, AttributeValue> key,Boolean consistentRead,com.amazonaws.handlers.AsyncHandler<GetItemRequest, GetItemResult> asyncHandler){\r\n    return getItemAsync(new GetItemRequest().withTableName(tableName).withKey(key).withConsistentRead(consistentRead), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.TableWriteItems.addItemToPut",
	"Comment": "adds an item to be put to the current table in a batch write operation.",
	"Method": "TableWriteItems addItemToPut(Item item){\r\n    if (item != null) {\r\n        if (itemsToPut == null)\r\n            itemsToPut = new ArrayList<Item>();\r\n        this.itemsToPut.add(item);\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ManagedActionHistoryItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionId() != null)\r\n        sb.append(\"ActionId: \").append(getActionId()).append(\",\");\r\n    if (getActionType() != null)\r\n        sb.append(\"ActionType: \").append(getActionType()).append(\",\");\r\n    if (getActionDescription() != null)\r\n        sb.append(\"ActionDescription: \").append(getActionDescription()).append(\",\");\r\n    if (getFailureType() != null)\r\n        sb.append(\"FailureType: \").append(getFailureType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFailureDescription() != null)\r\n        sb.append(\"FailureDescription: \").append(getFailureDescription()).append(\",\");\r\n    if (getExecutedTime() != null)\r\n        sb.append(\"ExecutedTime: \").append(getExecutedTime()).append(\",\");\r\n    if (getFinishedTime() != null)\r\n        sb.append(\"FinishedTime: \").append(getFinishedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.LoadBalancer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn()).append(\",\");\r\n    if (getDNSName() != null)\r\n        sb.append(\"DNSName: \").append(getDNSName()).append(\",\");\r\n    if (getCanonicalHostedZoneId() != null)\r\n        sb.append(\"CanonicalHostedZoneId: \").append(getCanonicalHostedZoneId()).append(\",\");\r\n    if (getCreatedTime() != null)\r\n        sb.append(\"CreatedTime: \").append(getCreatedTime()).append(\",\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getScheme() != null)\r\n        sb.append(\"Scheme: \").append(getScheme()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getIpAddressType() != null)\r\n        sb.append(\"IpAddressType: \").append(getIpAddressType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeImportSnapshotTasksAsync",
	"Comment": "simplified method form for invoking the describeimportsnapshottasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeImportSnapshotTasksResult> describeImportSnapshotTasksAsync(DescribeImportSnapshotTasksRequest request,java.util.concurrent.Future<DescribeImportSnapshotTasksResult> describeImportSnapshotTasksAsync,DescribeImportSnapshotTasksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeImportSnapshotTasksRequest, DescribeImportSnapshotTasksResult> asyncHandler,java.util.concurrent.Future<DescribeImportSnapshotTasksResult> describeImportSnapshotTasksAsync,java.util.concurrent.Future<DescribeImportSnapshotTasksResult> describeImportSnapshotTasksAsync,com.amazonaws.handlers.AsyncHandler<DescribeImportSnapshotTasksRequest, DescribeImportSnapshotTasksResult> asyncHandler){\r\n    return describeImportSnapshotTasksAsync(new DescribeImportSnapshotTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.Listener.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn()).append(\",\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates()).append(\",\");\r\n    if (getSslPolicy() != null)\r\n        sb.append(\"SslPolicy: \").append(getSslPolicy()).append(\",\");\r\n    if (getDefaultActions() != null)\r\n        sb.append(\"DefaultActions: \").append(getDefaultActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceCreditSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getCpuCredits() != null)\r\n        sb.append(\"CpuCredits: \").append(getCpuCredits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.StartReplicationTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationTaskArn() != null)\r\n        sb.append(\"ReplicationTaskArn: \").append(getReplicationTaskArn()).append(\",\");\r\n    if (getStartReplicationTaskType() != null)\r\n        sb.append(\"StartReplicationTaskType: \").append(getStartReplicationTaskType()).append(\",\");\r\n    if (getCdcStartTime() != null)\r\n        sb.append(\"CdcStartTime: \").append(getCdcStartTime()).append(\",\");\r\n    if (getCdcStartPosition() != null)\r\n        sb.append(\"CdcStartPosition: \").append(getCdcStartPosition()).append(\",\");\r\n    if (getCdcStopPosition() != null)\r\n        sb.append(\"CdcStopPosition: \").append(getCdcStopPosition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeByoipCidrsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getByoipCidrs() != null)\r\n        sb.append(\"ByoipCidrs: \").append(getByoipCidrs()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResetSnapshotAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeReplicationGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getReplicationGroups() != null)\r\n        sb.append(\"ReplicationGroups: \").append(getReplicationGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateRouteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRouteTable() != null)\r\n        sb.append(\"RouteTable: \").append(getRouteTable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.LBCookieStickinessPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getCookieExpirationPeriod() != null)\r\n        sb.append(\"CookieExpirationPeriod: \").append(getCookieExpirationPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstancesId() != null)\r\n        sb.append(\"ReservedInstancesId: \").append(getReservedInstancesId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PurchaseReservedInstancesOfferingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getReservedInstancesOfferingId() != null)\r\n        sb.append(\"ReservedInstancesOfferingId: \").append(getReservedInstancesOfferingId()).append(\",\");\r\n    if (getLimitPrice() != null)\r\n        sb.append(\"LimitPrice: \").append(getLimitPrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeInstancesHealthResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceHealthList() != null)\r\n        sb.append(\"InstanceHealthList: \").append(getInstanceHealthList()).append(\",\");\r\n    if (getRefreshedAt() != null)\r\n        sb.append(\"RefreshedAt: \").append(getRefreshedAt()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.getProjectionExpression",
	"Comment": "a string that identifies one or more attributes to retrieve from thetable. these attributes can include scalars, sets, or elements of ajson document. the attributes in the expression must be separated bycommas. if no attribute names are specified, then all attributeswill be returned. if any of the requested attributes are not found,they will not appear in the result. for more information, go to accessingitem attributes in the amazon dynamodb developer guide.",
	"Method": "String getProjectionExpression(){\r\n    return projectionExpression;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyImageAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getLaunchPermission() != null)\r\n        sb.append(\"LaunchPermission: \").append(getLaunchPermission()).append(\",\");\r\n    if (getOperationType() != null)\r\n        sb.append(\"OperationType: \").append(getOperationType()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes()).append(\",\");\r\n    if (getUserGroups() != null)\r\n        sb.append(\"UserGroups: \").append(getUserGroups()).append(\",\");\r\n    if (getUserIds() != null)\r\n        sb.append(\"UserIds: \").append(getUserIds()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ReplicaUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreate() != null)\r\n        sb.append(\"Create: \").append(getCreate()).append(\",\");\r\n    if (getDelete() != null)\r\n        sb.append(\"Delete: \").append(getDelete());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkAclAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkAclAssociationId() != null)\r\n        sb.append(\"NetworkAclAssociationId: \").append(getNetworkAclAssociationId()).append(\",\");\r\n    if (getNetworkAclId() != null)\r\n        sb.append(\"NetworkAclId: \").append(getNetworkAclId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.natGatewayAvailable",
	"Comment": "builds a natgatewayavailable waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeNatGatewaysRequest> natGatewayAvailable(){\r\n    return new WaiterBuilder<DescribeNatGatewaysRequest, DescribeNatGatewaysResult>().withSdkFunction(new DescribeNatGatewaysFunction(client)).withAcceptors(new NatGatewayAvailable.IsAvailableMatcher(), new NatGatewayAvailable.IsFailedMatcher(), new NatGatewayAvailable.IsDeletingMatcher(), new NatGatewayAvailable.IsDeletedMatcher(), new NatGatewayAvailable.IsNatGatewayNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.exportTaskCancelled",
	"Comment": "builds a exporttaskcancelled waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeExportTasksRequest> exportTaskCancelled(){\r\n    return new WaiterBuilder<DescribeExportTasksRequest, DescribeExportTasksResult>().withSdkFunction(new DescribeExportTasksFunction(client)).withAcceptors(new ExportTaskCancelled.IsCancelledMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.FluentHashSet.delete",
	"Comment": "fluent method to remove the specified element from this set.",
	"Method": "FluentHashSet<E> delete(Object o){\r\n    super.remove(o);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.DescribeEndpointsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeEndpointsResult apply(DescribeEndpointsRequest describeEndpointsRequest){\r\n    return client.describeEndpoints(describeEndpointsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CreateSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getCacheClusterId() != null)\r\n        sb.append(\"CacheClusterId: \").append(getCacheClusterId()).append(\",\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EnableVgwRoutePropagationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGatewayId() != null)\r\n        sb.append(\"GatewayId: \").append(getGatewayId()).append(\",\");\r\n    if (getRouteTableId() != null)\r\n        sb.append(\"RouteTableId: \").append(getRouteTableId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifySpotFleetRequestResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.LocalSecondaryIndexInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getProjection() != null)\r\n        sb.append(\"Projection: \").append(getProjection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TargetConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describePrefixLists",
	"Comment": "describes available aws services in a prefix list format, which includes the prefix list name and prefix list idof the service and the ip address range for the service. a prefix list id is required for creating an outboundsecurity group rule that allows traffic from a vpc to access an aws service through a gateway vpc endpoint.currently, the services that support this action are amazon s3 and amazon dynamodb.",
	"Method": "DescribePrefixListsResult describePrefixLists(DescribePrefixListsRequest request,DescribePrefixListsResult describePrefixLists){\r\n    return describePrefixLists(new DescribePrefixListsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AbstractAmazonECSAsync.listContainerInstancesAsync",
	"Comment": "simplified method form for invoking the listcontainerinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListContainerInstancesResult> listContainerInstancesAsync(ListContainerInstancesRequest request,java.util.concurrent.Future<ListContainerInstancesResult> listContainerInstancesAsync,ListContainerInstancesRequest request,com.amazonaws.handlers.AsyncHandler<ListContainerInstancesRequest, ListContainerInstancesResult> asyncHandler,java.util.concurrent.Future<ListContainerInstancesResult> listContainerInstancesAsync,java.util.concurrent.Future<ListContainerInstancesResult> listContainerInstancesAsync,com.amazonaws.handlers.AsyncHandler<ListContainerInstancesRequest, ListContainerInstancesResult> asyncHandler){\r\n    return listContainerInstancesAsync(new ListContainerInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeElasticGpusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticGpuSet() != null)\r\n        sb.append(\"ElasticGpuSet: \").append(getElasticGpuSet()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSpotFleetRequestsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSpotFleetRequestConfigs() != null)\r\n        sb.append(\"SpotFleetRequestConfigs: \").append(getSpotFleetRequestConfigs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateAddressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeConversionTasksAsync",
	"Comment": "simplified method form for invoking the describeconversiontasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeConversionTasksResult> describeConversionTasksAsync(DescribeConversionTasksRequest request,java.util.concurrent.Future<DescribeConversionTasksResult> describeConversionTasksAsync,DescribeConversionTasksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeConversionTasksRequest, DescribeConversionTasksResult> asyncHandler,java.util.concurrent.Future<DescribeConversionTasksResult> describeConversionTasksAsync,java.util.concurrent.Future<DescribeConversionTasksResult> describeConversionTasksAsync,com.amazonaws.handlers.AsyncHandler<DescribeConversionTasksRequest, DescribeConversionTasksResult> asyncHandler){\r\n    return describeConversionTasksAsync(new DescribeConversionTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRClient.batchGetImage",
	"Comment": "gets detailed information for specified images within a specified repository. images are specified with eitherimagetag or imagedigest.",
	"Method": "BatchGetImageResult batchGetImage(BatchGetImageRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeBatchGetImage(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.EnvironmentDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getTemplateName() != null)\r\n        sb.append(\"TemplateName: \").append(getTemplateName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEndpointURL() != null)\r\n        sb.append(\"EndpointURL: \").append(getEndpointURL()).append(\",\");\r\n    if (getCNAME() != null)\r\n        sb.append(\"CNAME: \").append(getCNAME()).append(\",\");\r\n    if (getDateCreated() != null)\r\n        sb.append(\"DateCreated: \").append(getDateCreated()).append(\",\");\r\n    if (getDateUpdated() != null)\r\n        sb.append(\"DateUpdated: \").append(getDateUpdated()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getAbortableOperationInProgress() != null)\r\n        sb.append(\"AbortableOperationInProgress: \").append(getAbortableOperationInProgress()).append(\",\");\r\n    if (getHealth() != null)\r\n        sb.append(\"Health: \").append(getHealth()).append(\",\");\r\n    if (getHealthStatus() != null)\r\n        sb.append(\"HealthStatus: \").append(getHealthStatus()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getTier() != null)\r\n        sb.append(\"Tier: \").append(getTier()).append(\",\");\r\n    if (getEnvironmentLinks() != null)\r\n        sb.append(\"EnvironmentLinks: \").append(getEnvironmentLinks()).append(\",\");\r\n    if (getEnvironmentArn() != null)\r\n        sb.append(\"EnvironmentArn: \").append(getEnvironmentArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.Condition.and",
	"Comment": "returns a new condition based on the conjunction of the current conditionand the given condition.",
	"Method": "AndCondition and(Condition that){\r\n    return new AndCondition(this, that.atomic() ? that : _(that));\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.getDouble",
	"Comment": "returns the value of the specified attribute in the current item as adouble.",
	"Method": "double getDouble(String attrName){\r\n    BigDecimal bd = getNumber(attrName);\r\n    if (bd == null)\r\n        throw new NumberFormatException(\"value of \" + attrName + \" is null\");\r\n    return bd.doubleValue();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SubnetCidrBlockState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.Cipher.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateCapacityReservationSpecificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityReservationPreference() != null)\r\n        sb.append(\"CapacityReservationPreference: \").append(getCapacityReservationPreference()).append(\",\");\r\n    if (getCapacityReservationTarget() != null)\r\n        sb.append(\"CapacityReservationTarget: \").append(getCapacityReservationTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.describeSpotInstanceRequests",
	"Comment": "describes the specified spot instance requests.you can use describespotinstancerequests to find a running spot instance by examining the response.if the status of the spot instance is fulfilled, the instance id appears in the response andcontains the identifier of the instance. alternatively, you can use describeinstances with a filter tolook for instances where the instance lifecycle is spot.spot instance requests are deleted four hours after they are canceled and their instances are terminated.",
	"Method": "DescribeSpotInstanceRequestsResult describeSpotInstanceRequests(DescribeSpotInstanceRequestsRequest request,DescribeSpotInstanceRequestsResult describeSpotInstanceRequests){\r\n    return describeSpotInstanceRequests(new DescribeSpotInstanceRequestsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateSpotMarketOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxPrice() != null)\r\n        sb.append(\"MaxPrice: \").append(getMaxPrice()).append(\",\");\r\n    if (getSpotInstanceType() != null)\r\n        sb.append(\"SpotInstanceType: \").append(getSpotInstanceType()).append(\",\");\r\n    if (getBlockDurationMinutes() != null)\r\n        sb.append(\"BlockDurationMinutes: \").append(getBlockDurationMinutes()).append(\",\");\r\n    if (getValidUntil() != null)\r\n        sb.append(\"ValidUntil: \").append(getValidUntil()).append(\",\");\r\n    if (getInstanceInterruptionBehavior() != null)\r\n        sb.append(\"InstanceInterruptionBehavior: \").append(getInstanceInterruptionBehavior());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.disassociateIamInstanceProfile",
	"Comment": "disassociates an iam instance profile from a running or stopped instance.use describeiaminstanceprofileassociations to get the association id.",
	"Method": "DisassociateIamInstanceProfileResult disassociateIamInstanceProfile(DisassociateIamInstanceProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateIamInstanceProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeTransitGatewayAttachmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayAttachments() != null)\r\n        sb.append(\"TransitGatewayAttachments: \").append(getTransitGatewayAttachments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.waiters.DescribeTasksFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeTasksResult apply(DescribeTasksRequest describeTasksRequest){\r\n    return client.describeTasks(describeTasksRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingAsyncClient.describeLoadBalancerPolicyTypesAsync",
	"Comment": "simplified method form for invoking the describeloadbalancerpolicytypes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeLoadBalancerPolicyTypesResult> describeLoadBalancerPolicyTypesAsync(DescribeLoadBalancerPolicyTypesRequest request,java.util.concurrent.Future<DescribeLoadBalancerPolicyTypesResult> describeLoadBalancerPolicyTypesAsync,DescribeLoadBalancerPolicyTypesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancerPolicyTypesRequest, DescribeLoadBalancerPolicyTypesResult> asyncHandler,java.util.concurrent.Future<DescribeLoadBalancerPolicyTypesResult> describeLoadBalancerPolicyTypesAsync,java.util.concurrent.Future<DescribeLoadBalancerPolicyTypesResult> describeLoadBalancerPolicyTypesAsync,com.amazonaws.handlers.AsyncHandler<DescribeLoadBalancerPolicyTypesRequest, DescribeLoadBalancerPolicyTypesResult> asyncHandler){\r\n    return describeLoadBalancerPolicyTypesAsync(new DescribeLoadBalancerPolicyTypesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.CreateTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.cancelImportTaskAsync",
	"Comment": "simplified method form for invoking the cancelimporttask operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CancelImportTaskResult> cancelImportTaskAsync(CancelImportTaskRequest request,java.util.concurrent.Future<CancelImportTaskResult> cancelImportTaskAsync,CancelImportTaskRequest request,com.amazonaws.handlers.AsyncHandler<CancelImportTaskRequest, CancelImportTaskResult> asyncHandler,java.util.concurrent.Future<CancelImportTaskResult> cancelImportTaskAsync,java.util.concurrent.Future<CancelImportTaskResult> cancelImportTaskAsync,com.amazonaws.handlers.AsyncHandler<CancelImportTaskRequest, CancelImportTaskResult> asyncHandler){\r\n    return cancelImportTaskAsync(new CancelImportTaskRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribePrefixListsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getPrefixListIds() != null)\r\n        sb.append(\"PrefixListIds: \").append(getPrefixListIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CapacityReservation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityReservationId() != null)\r\n        sb.append(\"CapacityReservationId: \").append(getCapacityReservationId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getInstancePlatform() != null)\r\n        sb.append(\"InstancePlatform: \").append(getInstancePlatform()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getTenancy() != null)\r\n        sb.append(\"Tenancy: \").append(getTenancy()).append(\",\");\r\n    if (getTotalInstanceCount() != null)\r\n        sb.append(\"TotalInstanceCount: \").append(getTotalInstanceCount()).append(\",\");\r\n    if (getAvailableInstanceCount() != null)\r\n        sb.append(\"AvailableInstanceCount: \").append(getAvailableInstanceCount()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getEphemeralStorage() != null)\r\n        sb.append(\"EphemeralStorage: \").append(getEphemeralStorage()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getEndDate() != null)\r\n        sb.append(\"EndDate: \").append(getEndDate()).append(\",\");\r\n    if (getEndDateType() != null)\r\n        sb.append(\"EndDateType: \").append(getEndDateType()).append(\",\");\r\n    if (getInstanceMatchCriteria() != null)\r\n        sb.append(\"InstanceMatchCriteria: \").append(getInstanceMatchCriteria()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AccountAttributeValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeValue() != null)\r\n        sb.append(\"AttributeValue: \").append(getAttributeValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeSpotInstanceRequestsAsync",
	"Comment": "simplified method form for invoking the describespotinstancerequests operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSpotInstanceRequestsResult> describeSpotInstanceRequestsAsync(DescribeSpotInstanceRequestsRequest request,java.util.concurrent.Future<DescribeSpotInstanceRequestsResult> describeSpotInstanceRequestsAsync,DescribeSpotInstanceRequestsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSpotInstanceRequestsRequest, DescribeSpotInstanceRequestsResult> asyncHandler,java.util.concurrent.Future<DescribeSpotInstanceRequestsResult> describeSpotInstanceRequestsAsync,java.util.concurrent.Future<DescribeSpotInstanceRequestsResult> describeSpotInstanceRequestsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSpotInstanceRequestsRequest, DescribeSpotInstanceRequestsResult> asyncHandler){\r\n    return describeSpotInstanceRequestsAsync(new DescribeSpotInstanceRequestsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchTemplateTagSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeleteAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeConfigurationOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSolutionStackName() != null)\r\n        sb.append(\"SolutionStackName: \").append(getSolutionStackName()).append(\",\");\r\n    if (getPlatformArn() != null)\r\n        sb.append(\"PlatformArn: \").append(getPlatformArn()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.describeReplicationGroupsAsync",
	"Comment": "simplified method form for invoking the describereplicationgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReplicationGroupsResult> describeReplicationGroupsAsync(DescribeReplicationGroupsRequest request,java.util.concurrent.Future<DescribeReplicationGroupsResult> describeReplicationGroupsAsync,DescribeReplicationGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReplicationGroupsRequest, DescribeReplicationGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeReplicationGroupsResult> describeReplicationGroupsAsync,java.util.concurrent.Future<DescribeReplicationGroupsResult> describeReplicationGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReplicationGroupsRequest, DescribeReplicationGroupsResult> asyncHandler){\r\n    return describeReplicationGroupsAsync(new DescribeReplicationGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.AuthenticateOidcActionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIssuer() != null)\r\n        sb.append(\"Issuer: \").append(getIssuer()).append(\",\");\r\n    if (getAuthorizationEndpoint() != null)\r\n        sb.append(\"AuthorizationEndpoint: \").append(getAuthorizationEndpoint()).append(\",\");\r\n    if (getTokenEndpoint() != null)\r\n        sb.append(\"TokenEndpoint: \").append(getTokenEndpoint()).append(\",\");\r\n    if (getUserInfoEndpoint() != null)\r\n        sb.append(\"UserInfoEndpoint: \").append(getUserInfoEndpoint()).append(\",\");\r\n    if (getClientId() != null)\r\n        sb.append(\"ClientId: \").append(getClientId()).append(\",\");\r\n    if (getClientSecret() != null)\r\n        sb.append(\"ClientSecret: \").append(getClientSecret()).append(\",\");\r\n    if (getSessionCookieName() != null)\r\n        sb.append(\"SessionCookieName: \").append(getSessionCookieName()).append(\",\");\r\n    if (getScope() != null)\r\n        sb.append(\"Scope: \").append(getScope()).append(\",\");\r\n    if (getSessionTimeout() != null)\r\n        sb.append(\"SessionTimeout: \").append(getSessionTimeout()).append(\",\");\r\n    if (getAuthenticationRequestExtraParams() != null)\r\n        sb.append(\"AuthenticationRequestExtraParams: \").append(getAuthenticationRequestExtraParams()).append(\",\");\r\n    if (getOnUnauthenticatedRequest() != null)\r\n        sb.append(\"OnUnauthenticatedRequest: \").append(getOnUnauthenticatedRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Table.describe",
	"Comment": "retrieves the table description from dynamodb. involves network calls.meant to be called as infrequently as possible to avoid throttlingexception from the server side.",
	"Method": "TableDescription describe(){\r\n    DescribeTableResult result = client.describeTable(InternalUtils.applyUserAgent(new DescribeTableRequest(tableName)));\r\n    return tableDescription = result.getTable();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.deleteApplicationVersion",
	"Comment": "deletes the specified version from the specified application.you cannot delete an application version that is associated with a running environment.",
	"Method": "DeleteApplicationVersionResult deleteApplicationVersion(DeleteApplicationVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteApplicationVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeNetworkInterfaceAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyImageAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyFleetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeDefinitions() != null)\r\n        sb.append(\"AttributeDefinitions: \").append(getAttributeDefinitions()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getBillingMode() != null)\r\n        sb.append(\"BillingMode: \").append(getBillingMode()).append(\",\");\r\n    if (getProvisionedThroughput() != null)\r\n        sb.append(\"ProvisionedThroughput: \").append(getProvisionedThroughput()).append(\",\");\r\n    if (getGlobalSecondaryIndexUpdates() != null)\r\n        sb.append(\"GlobalSecondaryIndexUpdates: \").append(getGlobalSecondaryIndexUpdates()).append(\",\");\r\n    if (getStreamSpecification() != null)\r\n        sb.append(\"StreamSpecification: \").append(getStreamSpecification()).append(\",\");\r\n    if (getSSESpecification() != null)\r\n        sb.append(\"SSESpecification: \").append(getSSESpecification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeNetworkAclsAsync",
	"Comment": "simplified method form for invoking the describenetworkacls operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeNetworkAclsResult> describeNetworkAclsAsync(DescribeNetworkAclsRequest request,java.util.concurrent.Future<DescribeNetworkAclsResult> describeNetworkAclsAsync,DescribeNetworkAclsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeNetworkAclsRequest, DescribeNetworkAclsResult> asyncHandler,java.util.concurrent.Future<DescribeNetworkAclsResult> describeNetworkAclsAsync,java.util.concurrent.Future<DescribeNetworkAclsResult> describeNetworkAclsAsync,com.amazonaws.handlers.AsyncHandler<DescribeNetworkAclsRequest, DescribeNetworkAclsResult> asyncHandler){\r\n    return describeNetworkAclsAsync(new DescribeNetworkAclsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AcceptVpcEndpointConnectionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnsuccessful() != null)\r\n        sb.append(\"Unsuccessful: \").append(getUnsuccessful());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.AddTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerNames() != null)\r\n        sb.append(\"LoadBalancerNames: \").append(getLoadBalancerNames()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.describeCacheSubnetGroups",
	"Comment": "returns a list of cache subnet group descriptions. if a subnet group name is specified, the list contains onlythe description of that group.",
	"Method": "DescribeCacheSubnetGroupsResult describeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request,DescribeCacheSubnetGroupsResult describeCacheSubnetGroups){\r\n    return describeCacheSubnetGroups(new DescribeCacheSubnetGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ReplicaDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.BOOL",
	"Comment": "creates a path operand that refers to a boolean attribute for the purpose of building expressions.",
	"Method": "BOOL BOOL(String path){\r\n    return new BOOL(path);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FleetLaunchTemplateConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateSpecification() != null)\r\n        sb.append(\"LaunchTemplateSpecification: \").append(getLaunchTemplateSpecification()).append(\",\");\r\n    if (getOverrides() != null)\r\n        sb.append(\"Overrides: \").append(getOverrides());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ModifyCacheParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheParameterGroupName() != null)\r\n        sb.append(\"CacheParameterGroupName: \").append(getCacheParameterGroupName()).append(\",\");\r\n    if (getParameterNameValues() != null)\r\n        sb.append(\"ParameterNameValues: \").append(getParameterNameValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DescribeContinuousBackupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContinuousBackupsDescription() != null)\r\n        sb.append(\"ContinuousBackupsDescription: \").append(getContinuousBackupsDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.describeSSLPolicies",
	"Comment": "describes the specified policies or all policies used for ssl negotiation.for more information, see security policies in the application load balancers guide.",
	"Method": "DescribeSSLPoliciesResult describeSSLPolicies(DescribeSSLPoliciesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSSLPolicies(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.RegisterContainerInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster()).append(\",\");\r\n    if (getInstanceIdentityDocument() != null)\r\n        sb.append(\"InstanceIdentityDocument: \").append(getInstanceIdentityDocument()).append(\",\");\r\n    if (getInstanceIdentityDocumentSignature() != null)\r\n        sb.append(\"InstanceIdentityDocumentSignature: \").append(getInstanceIdentityDocumentSignature()).append(\",\");\r\n    if (getTotalResources() != null)\r\n        sb.append(\"TotalResources: \").append(getTotalResources()).append(\",\");\r\n    if (getVersionInfo() != null)\r\n        sb.append(\"VersionInfo: \").append(getVersionInfo()).append(\",\");\r\n    if (getContainerInstanceArn() != null)\r\n        sb.append(\"ContainerInstanceArn: \").append(getContainerInstanceArn()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DeleteReplicaAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpcEndpointConnectionNotificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceId() != null)\r\n        sb.append(\"ServiceId: \").append(getServiceId()).append(\",\");\r\n    if (getVpcEndpointId() != null)\r\n        sb.append(\"VpcEndpointId: \").append(getVpcEndpointId()).append(\",\");\r\n    if (getConnectionNotificationArn() != null)\r\n        sb.append(\"ConnectionNotificationArn: \").append(getConnectionNotificationArn()).append(\",\");\r\n    if (getConnectionEvents() != null)\r\n        sb.append(\"ConnectionEvents: \").append(getConnectionEvents()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeEgressOnlyInternetGatewaysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEgressOnlyInternetGateways() != null)\r\n        sb.append(\"EgressOnlyInternetGateways: \").append(getEgressOnlyInternetGateways()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyReservedInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedInstancesModificationId() != null)\r\n        sb.append(\"ReservedInstancesModificationId: \").append(getReservedInstancesModificationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBStreamsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.AmazonEKSClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazoneks using the current builder configuration.",
	"Method": "AmazonEKS build(AwsSyncClientParams params){\r\n    return new AmazonEKSClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyIdFormatResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBReflector.getSetter",
	"Comment": "returns the setter corresponding to the getter given, or null if no suchsetter exists.",
	"Method": "Method getSetter(Method getter){\r\n    synchronized (setterCache) {\r\n        if (!setterCache.containsKey(getter)) {\r\n            String fieldName = ReflectionUtils.getFieldNameByGetter(getter, false);\r\n            String setterName = \"set\" + fieldName;\r\n            Method setter = null;\r\n            try {\r\n                setter = getter.getDeclaringClass().getMethod(setterName, getter.getReturnType());\r\n            } catch (NoSuchMethodException e) {\r\n                throw new DynamoDBMappingException(\"Expected a public, one-argument method called \" + setterName + \" on \" + getter.getDeclaringClass(), e);\r\n            } catch (SecurityException e) {\r\n                throw new DynamoDBMappingException(\"No access to public, one-argument method called \" + setterName + \" on \" + getter.getDeclaringClass(), e);\r\n            }\r\n            setterCache.put(getter, setter);\r\n        }\r\n        return setterCache.get(getter);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVolumeAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoEnableIO() != null)\r\n        sb.append(\"AutoEnableIO: \").append(getAutoEnableIO()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.TaskDefinitionPlacementConstraint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getExpression() != null)\r\n        sb.append(\"Expression: \").append(getExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcClassicLinkDnsSupportResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVpcs() != null)\r\n        sb.append(\"Vpcs: \").append(getVpcs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteKeyPairResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateDefaultSubnetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateFleetInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchTemplateAndOverrides() != null)\r\n        sb.append(\"LaunchTemplateAndOverrides: \").append(getLaunchTemplateAndOverrides()).append(\",\");\r\n    if (getLifecycle() != null)\r\n        sb.append(\"Lifecycle: \").append(getLifecycle()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DeleteBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupArn() != null)\r\n        sb.append(\"BackupArn: \").append(getBackupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyFleetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExcessCapacityTerminationPolicy() != null)\r\n        sb.append(\"ExcessCapacityTerminationPolicy: \").append(getExcessCapacityTerminationPolicy()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getTargetCapacitySpecification() != null)\r\n        sb.append(\"TargetCapacitySpecification: \").append(getTargetCapacitySpecification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.S3Location.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Key() != null)\r\n        sb.append(\"S3Key: \").append(getS3Key());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.convertListsToSets",
	"Comment": "utility method to converts the designated attributes fromlist into set, throwingillegalargumentexception should there be duplicate elements.",
	"Method": "Item convertListsToSets(String listAttrNames){\r\n    rejectNullInput(listAttrNames);\r\n    for (String attrName : listAttrNames) {\r\n        checkInvalidAttrName(attrName);\r\n        if (List.class.isAssignableFrom(getTypeOf(attrName))) {\r\n            List<?> list = getList(attrName);\r\n            if (list != null) {\r\n                for (Object e : list) {\r\n                    if (e instanceof String) {\r\n                        Set<String> ss = getStringSet(attrName);\r\n                        if (list.size() != ss.size())\r\n                            throw new IllegalArgumentException(\"List cannot be converted to Set due to duplicate elements\");\r\n                    } else if (e instanceof Number) {\r\n                        Set<BigDecimal> ss = getNumberSet(attrName);\r\n                        if (list.size() != ss.size())\r\n                            throw new IllegalArgumentException(\"List cannot be converted to Set due to duplicate elements\");\r\n                    } else if (e instanceof byte[]) {\r\n                        Set<byte[]> ss = getBinarySet(attrName);\r\n                        if (list.size() != ss.size())\r\n                            throw new IllegalArgumentException(\"List cannot be converted to Set due to duplicate elements\");\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            throw new IllegalArgumentException(\"Attribute \" + attrName + \" is not a list\");\r\n        }\r\n    }\r\n    for (String attrName : listAttrNames) {\r\n        checkInvalidAttrName(attrName);\r\n        List<?> list = getList(attrName);\r\n        if (list != null) {\r\n            boolean converted = false;\r\n            for (Object e : list) {\r\n                if (e instanceof String) {\r\n                    Set<String> set = getStringSet(attrName);\r\n                    withStringSet(attrName, set);\r\n                    converted = true;\r\n                    break;\r\n                } else if (e instanceof Number) {\r\n                    Set<BigDecimal> set = getNumberSet(attrName);\r\n                    withBigDecimalSet(attrName, set);\r\n                    converted = true;\r\n                    break;\r\n                } else if (e instanceof byte[]) {\r\n                    Set<byte[]> set = getBinarySet(attrName);\r\n                    withBinarySet(attrName, set);\r\n                    converted = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!converted) {\r\n                Set<String> set = getStringSet(attrName);\r\n                withStringSet(attrName, set);\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ListGlobalTablesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExclusiveStartGlobalTableName() != null)\r\n        sb.append(\"ExclusiveStartGlobalTableName: \").append(getExclusiveStartGlobalTableName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DhcpOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDhcpConfigurations() != null)\r\n        sb.append(\"DhcpConfigurations: \").append(getDhcpConfigurations()).append(\",\");\r\n    if (getDhcpOptionsId() != null)\r\n        sb.append(\"DhcpOptionsId: \").append(getDhcpOptionsId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.createTableAsync",
	"Comment": "simplified method form for invoking the createtable operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateTableResult> createTableAsync(CreateTableRequest request,java.util.concurrent.Future<CreateTableResult> createTableAsync,CreateTableRequest request,com.amazonaws.handlers.AsyncHandler<CreateTableRequest, CreateTableResult> asyncHandler,java.util.concurrent.Future<CreateTableResult> createTableAsync,java.util.List<AttributeDefinition> attributeDefinitions,String tableName,java.util.List<KeySchemaElement> keySchema,ProvisionedThroughput provisionedThroughput,java.util.concurrent.Future<CreateTableResult> createTableAsync,java.util.List<AttributeDefinition> attributeDefinitions,String tableName,java.util.List<KeySchemaElement> keySchema,ProvisionedThroughput provisionedThroughput,com.amazonaws.handlers.AsyncHandler<CreateTableRequest, CreateTableResult> asyncHandler){\r\n    return createTableAsync(new CreateTableRequest().withAttributeDefinitions(attributeDefinitions).withTableName(tableName).withKeySchema(keySchema).withProvisionedThroughput(provisionedThroughput), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateRouteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationCidrBlock() != null)\r\n        sb.append(\"DestinationCidrBlock: \").append(getDestinationCidrBlock()).append(\",\");\r\n    if (getDestinationIpv6CidrBlock() != null)\r\n        sb.append(\"DestinationIpv6CidrBlock: \").append(getDestinationIpv6CidrBlock()).append(\",\");\r\n    if (getEgressOnlyInternetGatewayId() != null)\r\n        sb.append(\"EgressOnlyInternetGatewayId: \").append(getEgressOnlyInternetGatewayId()).append(\",\");\r\n    if (getGatewayId() != null)\r\n        sb.append(\"GatewayId: \").append(getGatewayId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getNatGatewayId() != null)\r\n        sb.append(\"NatGatewayId: \").append(getNatGatewayId()).append(\",\");\r\n    if (getTransitGatewayId() != null)\r\n        sb.append(\"TransitGatewayId: \").append(getTransitGatewayId()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getRouteTableId() != null)\r\n        sb.append(\"RouteTableId: \").append(getRouteTableId()).append(\",\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpcsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcs() != null)\r\n        sb.append(\"Vpcs: \").append(getVpcs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SecurityGroupReference.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getReferencingVpcId() != null)\r\n        sb.append(\"ReferencingVpcId: \").append(getReferencingVpcId()).append(\",\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListTaskDefinitionFamiliesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFamilyPrefix() != null)\r\n        sb.append(\"FamilyPrefix: \").append(getFamilyPrefix()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMountTargetId() != null)\r\n        sb.append(\"MountTargetId: \").append(getMountTargetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.ScanRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getAttributesToGet() != null)\r\n        sb.append(\"AttributesToGet: \").append(getAttributesToGet()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getSelect() != null)\r\n        sb.append(\"Select: \").append(getSelect()).append(\",\");\r\n    if (getScanFilter() != null)\r\n        sb.append(\"ScanFilter: \").append(getScanFilter()).append(\",\");\r\n    if (getConditionalOperator() != null)\r\n        sb.append(\"ConditionalOperator: \").append(getConditionalOperator()).append(\",\");\r\n    if (getExclusiveStartKey() != null)\r\n        sb.append(\"ExclusiveStartKey: \").append(getExclusiveStartKey()).append(\",\");\r\n    if (getReturnConsumedCapacity() != null)\r\n        sb.append(\"ReturnConsumedCapacity: \").append(getReturnConsumedCapacity()).append(\",\");\r\n    if (getTotalSegments() != null)\r\n        sb.append(\"TotalSegments: \").append(getTotalSegments()).append(\",\");\r\n    if (getSegment() != null)\r\n        sb.append(\"Segment: \").append(getSegment()).append(\",\");\r\n    if (getProjectionExpression() != null)\r\n        sb.append(\"ProjectionExpression: \").append(getProjectionExpression()).append(\",\");\r\n    if (getFilterExpression() != null)\r\n        sb.append(\"FilterExpression: \").append(getFilterExpression()).append(\",\");\r\n    if (getExpressionAttributeNames() != null)\r\n        sb.append(\"ExpressionAttributeNames: \").append(getExpressionAttributeNames()).append(\",\");\r\n    if (getExpressionAttributeValues() != null)\r\n        sb.append(\"ExpressionAttributeValues: \").append(getExpressionAttributeValues()).append(\",\");\r\n    if (getConsistentRead() != null)\r\n        sb.append(\"ConsistentRead: \").append(getConsistentRead());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.describeLoadBalancerAttributes",
	"Comment": "describes the attributes for the specified application load balancer or network load balancer.for more information, see load balancer attributes in the application load balancers guide or load balancer attributes in the network load balancers guide.",
	"Method": "DescribeLoadBalancerAttributesResult describeLoadBalancerAttributes(DescribeLoadBalancerAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeLoadBalancerAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteVpnConnectionRoute",
	"Comment": "deletes the specified static route associated with a vpn connection between an existing virtual private gatewayand a vpn customer gateway. the static route allows traffic to be routed from the virtual private gateway to thevpn customer gateway.",
	"Method": "DeleteVpnConnectionRouteResult deleteVpnConnectionRoute(DeleteVpnConnectionRouteRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteVpnConnectionRoute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AbstractAWSElasticBeanstalkAsync.listAvailableSolutionStacksAsync",
	"Comment": "simplified method form for invoking the listavailablesolutionstacks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAvailableSolutionStacksResult> listAvailableSolutionStacksAsync(ListAvailableSolutionStacksRequest request,java.util.concurrent.Future<ListAvailableSolutionStacksResult> listAvailableSolutionStacksAsync,ListAvailableSolutionStacksRequest request,com.amazonaws.handlers.AsyncHandler<ListAvailableSolutionStacksRequest, ListAvailableSolutionStacksResult> asyncHandler,java.util.concurrent.Future<ListAvailableSolutionStacksResult> listAvailableSolutionStacksAsync,java.util.concurrent.Future<ListAvailableSolutionStacksResult> listAvailableSolutionStacksAsync,com.amazonaws.handlers.AsyncHandler<ListAvailableSolutionStacksRequest, ListAvailableSolutionStacksResult> asyncHandler){\r\n    return listAvailableSolutionStacksAsync(new ListAvailableSolutionStacksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.submitTaskStateChange",
	"Comment": "this action is only used by the amazon ecs agent, and it is not intended for use outside of the agent.sent to acknowledge that a task changed states.",
	"Method": "SubmitTaskStateChangeResult submitTaskStateChange(SubmitTaskStateChangeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSubmitTaskStateChange(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DescribeTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTasks() != null)\r\n        sb.append(\"Tasks: \").append(getTasks()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UpdateSecurityGroupRuleDescriptionsIngressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getIpPermissions() != null)\r\n        sb.append(\"IpPermissions: \").append(getIpPermissions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateVpnGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getAmazonSideAsn() != null)\r\n        sb.append(\"AmazonSideAsn: \").append(getAmazonSideAsn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.validateConfigurationSettings",
	"Comment": "takes a set of configuration settings and either a configuration template or environment, and determines whetherthose values are valid.this action returns a list of messages indicating any errors or warnings associated with the selection of optionvalues.",
	"Method": "ValidateConfigurationSettingsResult validateConfigurationSettings(ValidateConfigurationSettingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeValidateConfigurationSettings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVolumesModificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeIds() != null)\r\n        sb.append(\"VolumeIds: \").append(getVolumeIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper.containsThrottlingException",
	"Comment": "check whether there are throttling exception in the failed batches.",
	"Method": "boolean containsThrottlingException(List<FailedBatch> failedBatches){\r\n    for (FailedBatch failedBatch : failedBatches) {\r\n        if (failedBatch.isThrottling()) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservations() != null)\r\n        sb.append(\"Reservations: \").append(getReservations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.waiters.AWSDatabaseMigrationServiceWaiters.replicationTaskReady",
	"Comment": "builds a replicationtaskready waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeReplicationTasksRequest> replicationTaskReady(){\r\n    return new WaiterBuilder<DescribeReplicationTasksRequest, DescribeReplicationTasksResult>().withSdkFunction(new DescribeReplicationTasksFunction(client)).withAcceptors(new ReplicationTaskReady.IsReadyMatcher(), new ReplicationTaskReady.IsStartingMatcher(), new ReplicationTaskReady.IsRunningMatcher(), new ReplicationTaskReady.IsStoppingMatcher(), new ReplicationTaskReady.IsStoppedMatcher(), new ReplicationTaskReady.IsFailedMatcher(), new ReplicationTaskReady.IsModifyingMatcher(), new ReplicationTaskReady.IsTestingMatcher(), new ReplicationTaskReady.IsDeletingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.GetLifecyclePolicyPreviewRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getImageIds() != null)\r\n        sb.append(\"ImageIds: \").append(getImageIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceCapacity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailableCapacity() != null)\r\n        sb.append(\"AvailableCapacity: \").append(getAvailableCapacity()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getTotalCapacity() != null)\r\n        sb.append(\"TotalCapacity: \").append(getTotalCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.ScanResultPage.getResults",
	"Comment": "returns all matching items for this page of scan results, which may beempty.",
	"Method": "List<T> getResults(){\r\n    return results;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeAvailabilityZonesAsync",
	"Comment": "simplified method form for invoking the describeavailabilityzones operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAvailabilityZonesResult> describeAvailabilityZonesAsync(DescribeAvailabilityZonesRequest request,java.util.concurrent.Future<DescribeAvailabilityZonesResult> describeAvailabilityZonesAsync,DescribeAvailabilityZonesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAvailabilityZonesRequest, DescribeAvailabilityZonesResult> asyncHandler,java.util.concurrent.Future<DescribeAvailabilityZonesResult> describeAvailabilityZonesAsync,java.util.concurrent.Future<DescribeAvailabilityZonesResult> describeAvailabilityZonesAsync,com.amazonaws.handlers.AsyncHandler<DescribeAvailabilityZonesRequest, DescribeAvailabilityZonesResult> asyncHandler){\r\n    return describeAvailabilityZonesAsync(new DescribeAvailabilityZonesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateTimeToLiveRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getTimeToLiveSpecification() != null)\r\n        sb.append(\"TimeToLiveSpecification: \").append(getTimeToLiveSpecification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.AmazonECRAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.LocalSecondaryIndex.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getKeySchema() != null)\r\n        sb.append(\"KeySchema: \").append(getKeySchema()).append(\",\");\r\n    if (getProjection() != null)\r\n        sb.append(\"Projection: \").append(getProjection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonelasticloadbalancing using the current builder configuration.",
	"Method": "AmazonElasticLoadBalancing build(AwsSyncClientParams params){\r\n    return new AmazonElasticLoadBalancingClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeByoipCidrsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.Trigger.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.LoadBalancerAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCrossZoneLoadBalancing() != null)\r\n        sb.append(\"CrossZoneLoadBalancing: \").append(getCrossZoneLoadBalancing()).append(\",\");\r\n    if (getAccessLog() != null)\r\n        sb.append(\"AccessLog: \").append(getAccessLog()).append(\",\");\r\n    if (getConnectionDraining() != null)\r\n        sb.append(\"ConnectionDraining: \").append(getConnectionDraining()).append(\",\");\r\n    if (getConnectionSettings() != null)\r\n        sb.append(\"ConnectionSettings: \").append(getConnectionSettings()).append(\",\");\r\n    if (getAdditionalAttributes() != null)\r\n        sb.append(\"AdditionalAttributes: \").append(getAdditionalAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.AutoScalingSettingsDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinimumUnits() != null)\r\n        sb.append(\"MinimumUnits: \").append(getMinimumUnits()).append(\",\");\r\n    if (getMaximumUnits() != null)\r\n        sb.append(\"MaximumUnits: \").append(getMaximumUnits()).append(\",\");\r\n    if (getAutoScalingDisabled() != null)\r\n        sb.append(\"AutoScalingDisabled: \").append(getAutoScalingDisabled()).append(\",\");\r\n    if (getAutoScalingRoleArn() != null)\r\n        sb.append(\"AutoScalingRoleArn: \").append(getAutoScalingRoleArn()).append(\",\");\r\n    if (getScalingPolicies() != null)\r\n        sb.append(\"ScalingPolicies: \").append(getScalingPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeCustomerGatewaysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomerGatewayIds() != null)\r\n        sb.append(\"CustomerGatewayIds: \").append(getCustomerGatewayIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withList",
	"Comment": "sets the value of the specified attribute in the current item to thegiven values as a list.",
	"Method": "Item withList(String attrName,List<?> val,Item withList,String attrName,Object vals){\r\n    checkInvalidAttribute(attrName, vals);\r\n    List<Object> list_in = Arrays.asList(vals);\r\n    attributes.put(attrName, valueConformer.transform(list_in));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VolumeStatusAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEventId() != null)\r\n        sb.append(\"EventId: \").append(getEventId()).append(\",\");\r\n    if (getEventType() != null)\r\n        sb.append(\"EventType: \").append(getEventType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.RetrieveEnvironmentInfoRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getInfoType() != null)\r\n        sb.append(\"InfoType: \").append(getInfoType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.modifyListener",
	"Comment": "modifies the specified properties of the specified listener.any properties that you do not specify retain their current values. however, changing the protocol from https tohttp removes the security policy and ssl certificate properties. if you change the protocol from http to https,you must add the security policy and server certificate.",
	"Method": "ModifyListenerResult modifyListener(ModifyListenerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyListener(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazondynamodbasync using the current builder configuration.",
	"Method": "AmazonDynamoDBAsync build(AwsAsyncClientParams params){\r\n    return new AmazonDynamoDBAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyInstanceCreditSpecificationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccessfulInstanceCreditSpecifications() != null)\r\n        sb.append(\"SuccessfulInstanceCreditSpecifications: \").append(getSuccessfulInstanceCreditSpecifications()).append(\",\");\r\n    if (getUnsuccessfulInstanceCreditSpecifications() != null)\r\n        sb.append(\"UnsuccessfulInstanceCreditSpecifications: \").append(getUnsuccessfulInstanceCreditSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.SetRepositoryPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getPolicyText() != null)\r\n        sb.append(\"PolicyText: \").append(getPolicyText());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteVpcEndpointConnectionNotificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnsuccessful() != null)\r\n        sb.append(\"Unsuccessful: \").append(getUnsuccessful());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AbstractAmazonElastiCacheAsync.describeCacheSubnetGroupsAsync",
	"Comment": "simplified method form for invoking the describecachesubnetgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCacheSubnetGroupsResult> describeCacheSubnetGroupsAsync(DescribeCacheSubnetGroupsRequest request,java.util.concurrent.Future<DescribeCacheSubnetGroupsResult> describeCacheSubnetGroupsAsync,DescribeCacheSubnetGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCacheSubnetGroupsRequest, DescribeCacheSubnetGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeCacheSubnetGroupsResult> describeCacheSubnetGroupsAsync,java.util.concurrent.Future<DescribeCacheSubnetGroupsResult> describeCacheSubnetGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeCacheSubnetGroupsRequest, DescribeCacheSubnetGroupsResult> asyncHandler){\r\n    return describeCacheSubnetGroupsAsync(new DescribeCacheSubnetGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisableVpcClassicLinkDnsSupportResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkInterfaceAttachmentChanges.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachmentId() != null)\r\n        sb.append(\"AttachmentId: \").append(getAttachmentId()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CacheNode.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheNodeId() != null)\r\n        sb.append(\"CacheNodeId: \").append(getCacheNodeId()).append(\",\");\r\n    if (getCacheNodeStatus() != null)\r\n        sb.append(\"CacheNodeStatus: \").append(getCacheNodeStatus()).append(\",\");\r\n    if (getCacheNodeCreateTime() != null)\r\n        sb.append(\"CacheNodeCreateTime: \").append(getCacheNodeCreateTime()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getParameterGroupStatus() != null)\r\n        sb.append(\"ParameterGroupStatus: \").append(getParameterGroupStatus()).append(\",\");\r\n    if (getSourceCacheNodeId() != null)\r\n        sb.append(\"SourceCacheNodeId: \").append(getSourceCacheNodeId()).append(\",\");\r\n    if (getCustomerAvailabilityZone() != null)\r\n        sb.append(\"CustomerAvailabilityZone: \").append(getCustomerAvailabilityZone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVpcTenancyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturnValue() != null)\r\n        sb.append(\"ReturnValue: \").append(getReturnValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagDescriptions() != null)\r\n        sb.append(\"TagDescriptions: \").append(getTagDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ResetFpgaImageAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageId() != null)\r\n        sb.append(\"FpgaImageId: \").append(getFpgaImageId()).append(\",\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.IcmpTypeCode.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withJSON",
	"Comment": "sets the value of the specified attribute in the current item to thegiven json document in the form of a string.",
	"Method": "Item withJSON(String attrName,String json){\r\n    checkInvalidAttribute(attrName, json);\r\n    attributes.put(attrName, valueConformer.transform(Jackson.fromJsonString(json, Object.class)));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteEgressOnlyInternetGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEgressOnlyInternetGatewayId() != null)\r\n        sb.append(\"EgressOnlyInternetGatewayId: \").append(getEgressOnlyInternetGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.resetNetworkInterfaceAttribute",
	"Comment": "resets a network interface attribute. you can specify only one attribute at a time.",
	"Method": "ResetNetworkInterfaceAttributeResult resetNetworkInterfaceAttribute(ResetNetworkInterfaceAttributeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeResetNetworkInterfaceAttribute(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.restartAppServer",
	"Comment": "causes the environment to restart the application container server running on each amazon ec2 instance.",
	"Method": "RestartAppServerResult restartAppServer(RestartAppServerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRestartAppServer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReservedInstanceLimitPrice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmount() != null)\r\n        sb.append(\"Amount: \").append(getAmount()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.waiters.AmazonEKSWaiters.clusterActive",
	"Comment": "builds a clusteractive waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeClusterRequest> clusterActive(){\r\n    return new WaiterBuilder<DescribeClusterRequest, DescribeClusterResult>().withSdkFunction(new DescribeClusterFunction(client)).withAcceptors(new ClusterActive.IsDELETINGMatcher(), new ClusterActive.IsFAILEDMatcher(), new ClusterActive.IsACTIVEMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.ScanResultPage.getCount",
	"Comment": "the number of items in the response. if you set scanfilterin the request, then count is the number of items returnedafter the filter was applied, and scannedcount is the number ofmatching items before the filter was applied. if you did not use afilter in the request, then count is the same asscannedcount.",
	"Method": "Integer getCount(){\r\n    return count;\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.AmazonEKSAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazoneksasync using the current builder configuration.",
	"Method": "AmazonEKSAsync build(AwsAsyncClientParams params){\r\n    return new AmazonEKSAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.getExpressionAttributeNames",
	"Comment": "one or more substitution variables for simplifying complex expressions.",
	"Method": "java.util.Map<String, String> getExpressionAttributeNames(){\r\n    return expressionAttributeNames;\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Container.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerArn() != null)\r\n        sb.append(\"ContainerArn: \").append(getContainerArn()).append(\",\");\r\n    if (getTaskArn() != null)\r\n        sb.append(\"TaskArn: \").append(getTaskArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getLastStatus() != null)\r\n        sb.append(\"LastStatus: \").append(getLastStatus()).append(\",\");\r\n    if (getExitCode() != null)\r\n        sb.append(\"ExitCode: \").append(getExitCode()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getNetworkBindings() != null)\r\n        sb.append(\"NetworkBindings: \").append(getNetworkBindings()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces()).append(\",\");\r\n    if (getHealthStatus() != null)\r\n        sb.append(\"HealthStatus: \").append(getHealthStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RequestLaunchTemplateData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKernelId() != null)\r\n        sb.append(\"KernelId: \").append(getKernelId()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKeyName() != null)\r\n        sb.append(\"KeyName: \").append(getKeyName()).append(\",\");\r\n    if (getMonitoring() != null)\r\n        sb.append(\"Monitoring: \").append(getMonitoring()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement()).append(\",\");\r\n    if (getRamDiskId() != null)\r\n        sb.append(\"RamDiskId: \").append(getRamDiskId()).append(\",\");\r\n    if (getDisableApiTermination() != null)\r\n        sb.append(\"DisableApiTermination: \").append(getDisableApiTermination()).append(\",\");\r\n    if (getInstanceInitiatedShutdownBehavior() != null)\r\n        sb.append(\"InstanceInitiatedShutdownBehavior: \").append(getInstanceInitiatedShutdownBehavior()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications()).append(\",\");\r\n    if (getElasticGpuSpecifications() != null)\r\n        sb.append(\"ElasticGpuSpecifications: \").append(getElasticGpuSpecifications()).append(\",\");\r\n    if (getElasticInferenceAccelerators() != null)\r\n        sb.append(\"ElasticInferenceAccelerators: \").append(getElasticInferenceAccelerators()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getInstanceMarketOptions() != null)\r\n        sb.append(\"InstanceMarketOptions: \").append(getInstanceMarketOptions()).append(\",\");\r\n    if (getCreditSpecification() != null)\r\n        sb.append(\"CreditSpecification: \").append(getCreditSpecification()).append(\",\");\r\n    if (getCpuOptions() != null)\r\n        sb.append(\"CpuOptions: \").append(getCpuOptions()).append(\",\");\r\n    if (getCapacityReservationSpecification() != null)\r\n        sb.append(\"CapacityReservationSpecification: \").append(getCapacityReservationSpecification()).append(\",\");\r\n    if (getHibernationOptions() != null)\r\n        sb.append(\"HibernationOptions: \").append(getHibernationOptions()).append(\",\");\r\n    if (getLicenseSpecifications() != null)\r\n        sb.append(\"LicenseSpecifications: \").append(getLicenseSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.UpdateItemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getConsumedCapacity() != null)\r\n        sb.append(\"ConsumedCapacity: \").append(getConsumedCapacity()).append(\",\");\r\n    if (getItemCollectionMetrics() != null)\r\n        sb.append(\"ItemCollectionMetrics: \").append(getItemCollectionMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEnvironmentHealthRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getAttributeNames() != null)\r\n        sb.append(\"AttributeNames: \").append(getAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.vpnConnectionDeleted",
	"Comment": "builds a vpnconnectiondeleted waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVpnConnectionsRequest> vpnConnectionDeleted(){\r\n    return new WaiterBuilder<DescribeVpnConnectionsRequest, DescribeVpnConnectionsResult>().withSdkFunction(new DescribeVpnConnectionsFunction(client)).withAcceptors(new VpnConnectionDeleted.IsDeletedMatcher(), new VpnConnectionDeleted.IsPendingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBAsyncClient.updateTableAsync",
	"Comment": "simplified method form for invoking the updatetable operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<UpdateTableResult> updateTableAsync(UpdateTableRequest request,java.util.concurrent.Future<UpdateTableResult> updateTableAsync,UpdateTableRequest request,com.amazonaws.handlers.AsyncHandler<UpdateTableRequest, UpdateTableResult> asyncHandler,java.util.concurrent.Future<UpdateTableResult> updateTableAsync,String tableName,ProvisionedThroughput provisionedThroughput,java.util.concurrent.Future<UpdateTableResult> updateTableAsync,String tableName,ProvisionedThroughput provisionedThroughput,com.amazonaws.handlers.AsyncHandler<UpdateTableRequest, UpdateTableResult> asyncHandler){\r\n    return updateTableAsync(new UpdateTableRequest().withTableName(tableName).withProvisionedThroughput(provisionedThroughput), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.cancelImportTaskAsync",
	"Comment": "simplified method form for invoking the cancelimporttask operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CancelImportTaskResult> cancelImportTaskAsync(CancelImportTaskRequest request,java.util.concurrent.Future<CancelImportTaskResult> cancelImportTaskAsync,CancelImportTaskRequest request,com.amazonaws.handlers.AsyncHandler<CancelImportTaskRequest, CancelImportTaskResult> asyncHandler,java.util.concurrent.Future<CancelImportTaskResult> cancelImportTaskAsync,java.util.concurrent.Future<CancelImportTaskResult> cancelImportTaskAsync,com.amazonaws.handlers.AsyncHandler<CancelImportTaskRequest, CancelImportTaskResult> asyncHandler){\r\n    return cancelImportTaskAsync(new CancelImportTaskRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeFpgaImageAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFpgaImageId() != null)\r\n        sb.append(\"FpgaImageId: \").append(getFpgaImageId()).append(\",\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeInstancesHealthRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getAttributeNames() != null)\r\n        sb.append(\"AttributeNames: \").append(getAttributeNames()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteFleetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetIds() != null)\r\n        sb.append(\"FleetIds: \").append(getFleetIds()).append(\",\");\r\n    if (getTerminateInstances() != null)\r\n        sb.append(\"TerminateInstances: \").append(getTerminateInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DeleteApplicationVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getVersionLabel() != null)\r\n        sb.append(\"VersionLabel: \").append(getVersionLabel()).append(\",\");\r\n    if (getDeleteSourceBundle() != null)\r\n        sb.append(\"DeleteSourceBundle: \").append(getDeleteSourceBundle());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstancesMonitoring.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteNatGatewayResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNatGatewayId() != null)\r\n        sb.append(\"NatGatewayId: \").append(getNatGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.Item.withMap",
	"Comment": "sets the value of the specified attribute in the current item to thegiven value.",
	"Method": "Item withMap(String attrName,Map<String, ?> val){\r\n    checkInvalidAttribute(attrName, val);\r\n    attributes.put(attrName, valueConformer.transform(val));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEnvironmentManagedActionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentName() != null)\r\n        sb.append(\"EnvironmentName: \").append(getEnvironmentName()).append(\",\");\r\n    if (getEnvironmentId() != null)\r\n        sb.append(\"EnvironmentId: \").append(getEnvironmentId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBStreamsClient.getRecords",
	"Comment": "retrieves the stream records from a given shard.specify a shard iterator using the sharditerator parameter. the shard iterator specifies theposition in the shard from which you want to start reading stream records sequentially. if there are no streamrecords available in the portion of the shard that the iterator points to, getrecords returns anempty list. note that it might take multiple calls to get to a portion of the shard that contains stream records.getrecords can retrieve a maximum of 1 mb of data or 1000 stream records, whichever comes first.",
	"Method": "GetRecordsResult getRecords(GetRecordsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRecords(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeRegionsAsync",
	"Comment": "simplified method form for invoking the describeregions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeRegionsResult> describeRegionsAsync(DescribeRegionsRequest request,java.util.concurrent.Future<DescribeRegionsResult> describeRegionsAsync,DescribeRegionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeRegionsRequest, DescribeRegionsResult> asyncHandler,java.util.concurrent.Future<DescribeRegionsResult> describeRegionsAsync,java.util.concurrent.Future<DescribeRegionsResult> describeRegionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeRegionsRequest, DescribeRegionsResult> asyncHandler){\r\n    return describeRegionsAsync(new DescribeRegionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CreateTransitGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getTagSpecifications() != null)\r\n        sb.append(\"TagSpecifications: \").append(getTagSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PrefixListId.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getPrefixListId() != null)\r\n        sb.append(\"PrefixListId: \").append(getPrefixListId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.DeleteLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.LaunchPermission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AssociateIamInstanceProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.RunTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTasks() != null)\r\n        sb.append(\"Tasks: \").append(getTasks()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisableVpcClassicLinkResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.RemoveListenerCertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.AttachNetworkInterfaceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachmentId() != null)\r\n        sb.append(\"AttachmentId: \").append(getAttachmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.EnableAvailabilityZonesForLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheAsyncClient.describeCacheClustersAsync",
	"Comment": "simplified method form for invoking the describecacheclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCacheClustersResult> describeCacheClustersAsync(DescribeCacheClustersRequest request,java.util.concurrent.Future<DescribeCacheClustersResult> describeCacheClustersAsync,DescribeCacheClustersRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCacheClustersRequest, DescribeCacheClustersResult> asyncHandler,java.util.concurrent.Future<DescribeCacheClustersResult> describeCacheClustersAsync,java.util.concurrent.Future<DescribeCacheClustersResult> describeCacheClustersAsync,com.amazonaws.handlers.AsyncHandler<DescribeCacheClustersRequest, DescribeCacheClustersResult> asyncHandler){\r\n    return describeCacheClustersAsync(new DescribeCacheClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyTransitGatewayVpcAttachmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransitGatewayVpcAttachment() != null)\r\n        sb.append(\"TransitGatewayVpcAttachment: \").append(getTransitGatewayVpcAttachment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.describeLoadBalancers",
	"Comment": "describes the specified load balancers or all of your load balancers.to describe the listeners for a load balancer, use describelisteners. to describe the attributes for aload balancer, use describeloadbalancerattributes.",
	"Method": "DescribeLoadBalancersResult describeLoadBalancers(DescribeLoadBalancersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeLoadBalancers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeVpnConnectionsAsync",
	"Comment": "simplified method form for invoking the describevpnconnections operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeVpnConnectionsResult> describeVpnConnectionsAsync(DescribeVpnConnectionsRequest request,java.util.concurrent.Future<DescribeVpnConnectionsResult> describeVpnConnectionsAsync,DescribeVpnConnectionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeVpnConnectionsRequest, DescribeVpnConnectionsResult> asyncHandler,java.util.concurrent.Future<DescribeVpnConnectionsResult> describeVpnConnectionsAsync,java.util.concurrent.Future<DescribeVpnConnectionsResult> describeVpnConnectionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeVpnConnectionsRequest, DescribeVpnConnectionsResult> asyncHandler){\r\n    return describeVpnConnectionsAsync(new DescribeVpnConnectionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.TestFailoverRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationGroupId() != null)\r\n        sb.append(\"ReplicationGroupId: \").append(getReplicationGroupId()).append(\",\");\r\n    if (getNodeGroupId() != null)\r\n        sb.append(\"NodeGroupId: \").append(getNodeGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EgressOnlyInternetGateway.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachments() != null)\r\n        sb.append(\"Attachments: \").append(getAttachments()).append(\",\");\r\n    if (getEgressOnlyInternetGatewayId() != null)\r\n        sb.append(\"EgressOnlyInternetGatewayId: \").append(getEgressOnlyInternetGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ScheduledInstancesPrivateIpAddressConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrimary() != null)\r\n        sb.append(\"Primary: \").append(getPrimary()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.UnmonitorInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceMonitorings() != null)\r\n        sb.append(\"InstanceMonitorings: \").append(getInstanceMonitorings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DeregisterContainerInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerInstance() != null)\r\n        sb.append(\"ContainerInstance: \").append(getContainerInstance());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.RemoveTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.DescribeTargetHealthResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetHealthDescriptions() != null)\r\n        sb.append(\"TargetHealthDescriptions: \").append(getTargetHealthDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteTags",
	"Comment": "deletes the specified set of tags from the specified set of resources.to list the current tags, use describetags. for more information about tags, see tagging your resources in theamazon elastic compute cloud user guide.",
	"Method": "DeleteTagsResult deleteTags(DeleteTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClient.createStorageLocation",
	"Comment": "creates a bucket in amazon s3 to store application versions, logs, and other files used by elastic beanstalkenvironments. the elastic beanstalk console and eb cli call this api the first time you create an environment ina region. if the storage location already exists, createstoragelocation still returns the bucketname but does not create a new bucket.",
	"Method": "CreateStorageLocationResult createStorageLocation(CreateStorageLocationRequest request,CreateStorageLocationResult createStorageLocation){\r\n    return createStorageLocation(new CreateStorageLocationRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.PaginatedList.moveNextResults",
	"Comment": "moves the contents of the nextresults buffer into allresults and resetsthe buffer.",
	"Method": "void moveNextResults(boolean clearPreviousResults){\r\n    if (clearPreviousResults) {\r\n        allResults.clear();\r\n    }\r\n    allResults.addAll(nextResults);\r\n    nextResults.clear();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RouteTableAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMain() != null)\r\n        sb.append(\"Main: \").append(getMain()).append(\",\");\r\n    if (getRouteTableAssociationId() != null)\r\n        sb.append(\"RouteTableAssociationId: \").append(getRouteTableAssociationId()).append(\",\");\r\n    if (getRouteTableId() != null)\r\n        sb.append(\"RouteTableId: \").append(getRouteTableId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeCacheSubnetGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getCacheSubnetGroups() != null)\r\n        sb.append(\"CacheSubnetGroups: \").append(getCacheSubnetGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.setProjectionExpression",
	"Comment": "a string that identifies one or more attributes to retrieve from thetable. these attributes can include scalars, sets, or elements of ajson document. the attributes in the expression must be separated bycommas. if no attribute names are specified, then all attributeswill be returned. if any of the requested attributes are not found,they will not appear in the result. for more information, go to accessingitem attributes in the amazon dynamodb developer guide.",
	"Method": "void setProjectionExpression(String projectionExpression){\r\n    this.projectionExpression = projectionExpression;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.RouteTable.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociations() != null)\r\n        sb.append(\"Associations: \").append(getAssociations()).append(\",\");\r\n    if (getPropagatingVgws() != null)\r\n        sb.append(\"PropagatingVgws: \").append(getPropagatingVgws()).append(\",\");\r\n    if (getRouteTableId() != null)\r\n        sb.append(\"RouteTableId: \").append(getRouteTableId()).append(\",\");\r\n    if (getRoutes() != null)\r\n        sb.append(\"Routes: \").append(getRoutes()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeSubnetsAsync",
	"Comment": "simplified method form for invoking the describesubnets operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSubnetsResult> describeSubnetsAsync(DescribeSubnetsRequest request,java.util.concurrent.Future<DescribeSubnetsResult> describeSubnetsAsync,DescribeSubnetsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSubnetsRequest, DescribeSubnetsResult> asyncHandler,java.util.concurrent.Future<DescribeSubnetsResult> describeSubnetsAsync,java.util.concurrent.Future<DescribeSubnetsResult> describeSubnetsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSubnetsRequest, DescribeSubnetsResult> asyncHandler){\r\n    return describeSubnetsAsync(new DescribeSubnetsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteNatGateway",
	"Comment": "deletes the specified nat gateway. deleting a nat gateway disassociates its elastic ip address, but does notrelease the address from your account. deleting a nat gateway does not delete any nat gateway routes in yourroute tables.",
	"Method": "DeleteNatGatewayResult deleteNatGateway(DeleteNatGatewayRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteNatGateway(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.HostEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostname() != null)\r\n        sb.append(\"Hostname: \").append(getHostname()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.createLoadBalancerPolicy",
	"Comment": "creates a policy with the specified attributes for the specified load balancer.policies are settings that are saved for your load balancer and that can be applied to the listener or theapplication server, depending on the policy type.",
	"Method": "CreateLoadBalancerPolicyResult createLoadBalancerPolicy(CreateLoadBalancerPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateLoadBalancerPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmazonSideAsn() != null)\r\n        sb.append(\"AmazonSideAsn: \").append(getAmazonSideAsn()).append(\",\");\r\n    if (getAutoAcceptSharedAttachments() != null)\r\n        sb.append(\"AutoAcceptSharedAttachments: \").append(getAutoAcceptSharedAttachments()).append(\",\");\r\n    if (getDefaultRouteTableAssociation() != null)\r\n        sb.append(\"DefaultRouteTableAssociation: \").append(getDefaultRouteTableAssociation()).append(\",\");\r\n    if (getAssociationDefaultRouteTableId() != null)\r\n        sb.append(\"AssociationDefaultRouteTableId: \").append(getAssociationDefaultRouteTableId()).append(\",\");\r\n    if (getDefaultRouteTablePropagation() != null)\r\n        sb.append(\"DefaultRouteTablePropagation: \").append(getDefaultRouteTablePropagation()).append(\",\");\r\n    if (getPropagationDefaultRouteTableId() != null)\r\n        sb.append(\"PropagationDefaultRouteTableId: \").append(getPropagationDefaultRouteTableId()).append(\",\");\r\n    if (getVpnEcmpSupport() != null)\r\n        sb.append(\"VpnEcmpSupport: \").append(getVpnEcmpSupport()).append(\",\");\r\n    if (getDnsSupport() != null)\r\n        sb.append(\"DnsSupport: \").append(getDnsSupport());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.NetworkAclEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidrBlock() != null)\r\n        sb.append(\"CidrBlock: \").append(getCidrBlock()).append(\",\");\r\n    if (getEgress() != null)\r\n        sb.append(\"Egress: \").append(getEgress()).append(\",\");\r\n    if (getIcmpTypeCode() != null)\r\n        sb.append(\"IcmpTypeCode: \").append(getIcmpTypeCode()).append(\",\");\r\n    if (getIpv6CidrBlock() != null)\r\n        sb.append(\"Ipv6CidrBlock: \").append(getIpv6CidrBlock()).append(\",\");\r\n    if (getPortRange() != null)\r\n        sb.append(\"PortRange: \").append(getPortRange()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getRuleAction() != null)\r\n        sb.append(\"RuleAction: \").append(getRuleAction()).append(\",\");\r\n    if (getRuleNumber() != null)\r\n        sb.append(\"RuleNumber: \").append(getRuleNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.FlowLog.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getDeliverLogsErrorMessage() != null)\r\n        sb.append(\"DeliverLogsErrorMessage: \").append(getDeliverLogsErrorMessage()).append(\",\");\r\n    if (getDeliverLogsPermissionArn() != null)\r\n        sb.append(\"DeliverLogsPermissionArn: \").append(getDeliverLogsPermissionArn()).append(\",\");\r\n    if (getDeliverLogsStatus() != null)\r\n        sb.append(\"DeliverLogsStatus: \").append(getDeliverLogsStatus()).append(\",\");\r\n    if (getFlowLogId() != null)\r\n        sb.append(\"FlowLogId: \").append(getFlowLogId()).append(\",\");\r\n    if (getFlowLogStatus() != null)\r\n        sb.append(\"FlowLogStatus: \").append(getFlowLogStatus()).append(\",\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTrafficType() != null)\r\n        sb.append(\"TrafficType: \").append(getTrafficType()).append(\",\");\r\n    if (getLogDestinationType() != null)\r\n        sb.append(\"LogDestinationType: \").append(getLogDestinationType()).append(\",\");\r\n    if (getLogDestination() != null)\r\n        sb.append(\"LogDestination: \").append(getLogDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.CancelImportTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCancelReason() != null)\r\n        sb.append(\"CancelReason: \").append(getCancelReason()).append(\",\");\r\n    if (getImportTaskId() != null)\r\n        sb.append(\"ImportTaskId: \").append(getImportTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.ListImagesFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagStatus() != null)\r\n        sb.append(\"TagStatus: \").append(getTagStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSAsyncClient.listContainerInstancesAsync",
	"Comment": "simplified method form for invoking the listcontainerinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListContainerInstancesResult> listContainerInstancesAsync(ListContainerInstancesRequest request,java.util.concurrent.Future<ListContainerInstancesResult> listContainerInstancesAsync,ListContainerInstancesRequest request,com.amazonaws.handlers.AsyncHandler<ListContainerInstancesRequest, ListContainerInstancesResult> asyncHandler,java.util.concurrent.Future<ListContainerInstancesResult> listContainerInstancesAsync,java.util.concurrent.Future<ListContainerInstancesResult> listContainerInstancesAsync,com.amazonaws.handlers.AsyncHandler<ListContainerInstancesRequest, ListContainerInstancesResult> asyncHandler){\r\n    return listContainerInstancesAsync(new ListContainerInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.utils.ValueMap.withLong",
	"Comment": "sets the value of the specified key in the current valuemap to thegiven value.",
	"Method": "ValueMap withLong(String key,long val){\r\n    return withNumber(key, Long.valueOf(val));\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AbstractAmazonDynamoDBAsync.describeTableAsync",
	"Comment": "simplified method form for invoking the describetable operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTableResult> describeTableAsync(DescribeTableRequest request,java.util.concurrent.Future<DescribeTableResult> describeTableAsync,DescribeTableRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTableRequest, DescribeTableResult> asyncHandler,java.util.concurrent.Future<DescribeTableResult> describeTableAsync,String tableName,java.util.concurrent.Future<DescribeTableResult> describeTableAsync,String tableName,com.amazonaws.handlers.AsyncHandler<DescribeTableRequest, DescribeTableResult> asyncHandler){\r\n    return describeTableAsync(new DescribeTableRequest().withTableName(tableName), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.queryPage",
	"Comment": "queries an amazon dynamodb table and returns a single page of matchingresults.",
	"Method": "QueryResultPage<T> queryPage(DynamoDBQueryExpression<T> queryExpression){\r\n    return mapper.<T>queryPage(model.targetType(), queryExpression);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ModifyVolumeAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoEnableIO() != null)\r\n        sb.append(\"AutoEnableIO: \").append(getAutoEnableIO()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.DescribeReservedCacheNodesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getReservedCacheNodes() != null)\r\n        sb.append(\"ReservedCacheNodes: \").append(getReservedCacheNodes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceBlockDeviceMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getEbs() != null)\r\n        sb.append(\"Ebs: \").append(getEbs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.VolumeModification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getModificationState() != null)\r\n        sb.append(\"ModificationState: \").append(getModificationState()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getTargetSize() != null)\r\n        sb.append(\"TargetSize: \").append(getTargetSize()).append(\",\");\r\n    if (getTargetIops() != null)\r\n        sb.append(\"TargetIops: \").append(getTargetIops()).append(\",\");\r\n    if (getTargetVolumeType() != null)\r\n        sb.append(\"TargetVolumeType: \").append(getTargetVolumeType()).append(\",\");\r\n    if (getOriginalSize() != null)\r\n        sb.append(\"OriginalSize: \").append(getOriginalSize()).append(\",\");\r\n    if (getOriginalIops() != null)\r\n        sb.append(\"OriginalIops: \").append(getOriginalIops()).append(\",\");\r\n    if (getOriginalVolumeType() != null)\r\n        sb.append(\"OriginalVolumeType: \").append(getOriginalVolumeType()).append(\",\");\r\n    if (getProgress() != null)\r\n        sb.append(\"Progress: \").append(getProgress()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Secret.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValueFrom() != null)\r\n        sb.append(\"ValueFrom: \").append(getValueFrom());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkClientBuilder.build",
	"Comment": "construct a synchronous implementation of awselasticbeanstalk using the current builder configuration.",
	"Method": "AWSElasticBeanstalk build(AwsSyncClientParams params){\r\n    return new AWSElasticBeanstalkClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeHostReservationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getHostReservationIdSet() != null)\r\n        sb.append(\"HostReservationIdSet: \").append(getHostReservationIdSet()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.DiscoverPollEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerInstance() != null)\r\n        sb.append(\"ContainerInstance: \").append(getContainerInstance()).append(\",\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ProductCode.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProductCodeId() != null)\r\n        sb.append(\"ProductCodeId: \").append(getProductCodeId()).append(\",\");\r\n    if (getProductCodeType() != null)\r\n        sb.append(\"ProductCodeType: \").append(getProductCodeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.instanceStatusOk",
	"Comment": "builds a instancestatusok waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstanceStatusRequest> instanceStatusOk(){\r\n    return new WaiterBuilder<DescribeInstanceStatusRequest, DescribeInstanceStatusResult>().withSdkFunction(new DescribeInstanceStatusFunction(client)).withAcceptors(new InstanceStatusOk.IsOkMatcher(), new InstanceStatusOk.IsInvalidInstanceIDNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.detachInternetGateway",
	"Comment": "detaches an internet gateway from a vpc, disabling connectivity between the internet and the vpc. the vpc mustnot contain any running instances with elastic ip addresses or public ipv4 addresses.",
	"Method": "DetachInternetGatewayResult detachInternetGateway(DetachInternetGatewayRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDetachInternetGateway(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.TransitGatewayRequestOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmazonSideAsn() != null)\r\n        sb.append(\"AmazonSideAsn: \").append(getAmazonSideAsn()).append(\",\");\r\n    if (getAutoAcceptSharedAttachments() != null)\r\n        sb.append(\"AutoAcceptSharedAttachments: \").append(getAutoAcceptSharedAttachments()).append(\",\");\r\n    if (getDefaultRouteTableAssociation() != null)\r\n        sb.append(\"DefaultRouteTableAssociation: \").append(getDefaultRouteTableAssociation()).append(\",\");\r\n    if (getDefaultRouteTablePropagation() != null)\r\n        sb.append(\"DefaultRouteTablePropagation: \").append(getDefaultRouteTablePropagation()).append(\",\");\r\n    if (getVpnEcmpSupport() != null)\r\n        sb.append(\"VpnEcmpSupport: \").append(getVpnEcmpSupport()).append(\",\");\r\n    if (getDnsSupport() != null)\r\n        sb.append(\"DnsSupport: \").append(getDnsSupport());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.PriceSchedule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActive() != null)\r\n        sb.append(\"Active: \").append(getActive()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getPrice() != null)\r\n        sb.append(\"Price: \").append(getPrice()).append(\",\");\r\n    if (getTerm() != null)\r\n        sb.append(\"Term: \").append(getTerm());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.EbsInstanceBlockDeviceSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.CreateLBCookieStickinessPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getCookieExpirationPeriod() != null)\r\n        sb.append(\"CookieExpirationPeriod: \").append(getCookieExpirationPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.waiters.AmazonEC2Waiters.snapshotCompleted",
	"Comment": "builds a snapshotcompleted waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeSnapshotsRequest> snapshotCompleted(){\r\n    return new WaiterBuilder<DescribeSnapshotsRequest, DescribeSnapshotsResult>().withSdkFunction(new DescribeSnapshotsFunction(client)).withAcceptors(new SnapshotCompleted.IsCompletedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.SetRepositoryPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getPolicyText() != null)\r\n        sb.append(\"PolicyText: \").append(getPolicyText()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.GlobalTableGlobalSecondaryIndexSettingsUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getProvisionedWriteCapacityUnits() != null)\r\n        sb.append(\"ProvisionedWriteCapacityUnits: \").append(getProvisionedWriteCapacityUnits()).append(\",\");\r\n    if (getProvisionedWriteCapacityAutoScalingSettingsUpdate() != null)\r\n        sb.append(\"ProvisionedWriteCapacityAutoScalingSettingsUpdate: \").append(getProvisionedWriteCapacityAutoScalingSettingsUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.xspec.ExpressionSpecBuilder.buildForGetItem",
	"Comment": "returns an expression specification for use in a getitemrequest to dynamodb.",
	"Method": "GetItemExpressionSpec buildForGetItem(){\r\n    return new GetItemExpressionSpec(this);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ElasticGpuSpecificationResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.StandardAnnotationMaps.overrideOf",
	"Comment": "creates a new instance of the clazz with the target type and annotationas parameters if available.",
	"Method": "T overrideOf(Class<T> clazz,Class<?> targetType,Annotation annotation){\r\n    try {\r\n        if (annotation != null) {\r\n            try {\r\n                return clazz.getConstructor(Class.class, annotation.annotationType()).newInstance(targetType, annotation);\r\n            } catch (final NoSuchMethodException no) {\r\n            }\r\n        }\r\n        try {\r\n            return clazz.getConstructor(Class.class).newInstance(targetType);\r\n        } catch (final NoSuchMethodException no) {\r\n        }\r\n        return clazz.newInstance();\r\n    } catch (final Exception e) {\r\n        throw new DynamoDBMappingException(\"could not instantiate \" + clazz, e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.DescribeEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.listBackups",
	"Comment": "list backups associated with an aws account. to list backups for a given table, specify tablename.listbackups returns a paginated list of results with at most 1mb worth of items in a page. you canalso specify a limit for the maximum number of entries to be returned in a page.in the request, start time is inclusive but end time is exclusive. note that these limits are for the time atwhich the original backup was requested.you can call listbackups a maximum of 5 times per second.",
	"Method": "ListBackupsResult listBackups(ListBackupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListBackups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.ApplicationResourceLifecycleConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getVersionLifecycleConfig() != null)\r\n        sb.append(\"VersionLifecycleConfig: \").append(getVersionLifecycleConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.DeleteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.AmazonElastiCacheClient.modifyCacheCluster",
	"Comment": "modifies the settings for a cluster. you can use this operation to change one or more cluster configurationparameters by specifying the parameters and the new values.",
	"Method": "CacheCluster modifyCacheCluster(ModifyCacheClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyCacheCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTableMapper.scanPage",
	"Comment": "scans through an amazon dynamodb table and returns a single page ofmatching results.",
	"Method": "ScanResultPage<T> scanPage(DynamoDBScanExpression scanExpression){\r\n    return mapper.<T>scanPage(model.targetType(), scanExpression);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeSecurityGroupReferencesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AmazonECSClient.tagResource",
	"Comment": "associates the specified tags to a resource with the specified resourcearn. if existing tags on aresource are not specified in the request parameters, they are not changed. when a resource is deleted, the tagsassociated with that resource are deleted as well.",
	"Method": "TagResourceResult tagResource(TagResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTagResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.model.ListClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusters() != null)\r\n        sb.append(\"Clusters: \").append(getClusters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.PutAccountSettingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getPrincipalArn() != null)\r\n        sb.append(\"PrincipalArn: \").append(getPrincipalArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteTransitGatewayRouteTable",
	"Comment": "deletes the specified transit gateway route table. you must disassociate the route table from any transit gatewayroute tables before you can delete it.",
	"Method": "DeleteTransitGatewayRouteTableResult deleteTransitGatewayRouteTable(DeleteTransitGatewayRouteTableRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteTransitGatewayRouteTable(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.describeAccountLimits",
	"Comment": "describes the current elastic load balancing resource limits for your aws account.for more information, see limits for your classicload balancer in the classic load balancers guide.",
	"Method": "DescribeAccountLimitsResult describeAccountLimits(DescribeAccountLimitsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAccountLimits(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreateStorageLocationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.CreateApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteDhcpOptions",
	"Comment": "deletes the specified set of dhcp options. you must disassociate the set of dhcp options before you can deleteit. you can disassociate the set of dhcp options by associating either a new set of options or the default set ofoptions with the vpc.",
	"Method": "DeleteDhcpOptionsResult deleteDhcpOptions(DeleteDhcpOptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDhcpOptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Identity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipalId() != null)\r\n        sb.append(\"PrincipalId: \").append(getPrincipalId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Scale.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteInternetGatewayRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInternetGatewayId() != null)\r\n        sb.append(\"InternetGatewayId: \").append(getInternetGatewayId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeAddressesAsync",
	"Comment": "simplified method form for invoking the describeaddresses operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAddressesResult> describeAddressesAsync(DescribeAddressesRequest request,java.util.concurrent.Future<DescribeAddressesResult> describeAddressesAsync,DescribeAddressesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAddressesRequest, DescribeAddressesResult> asyncHandler,java.util.concurrent.Future<DescribeAddressesResult> describeAddressesAsync,java.util.concurrent.Future<DescribeAddressesResult> describeAddressesAsync,com.amazonaws.handlers.AsyncHandler<DescribeAddressesRequest, DescribeAddressesResult> asyncHandler){\r\n    return describeAddressesAsync(new DescribeAddressesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DeleteDhcpOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ClassicLinkDnsSupport.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClassicLinkDnsSupported() != null)\r\n        sb.append(\"ClassicLinkDnsSupported: \").append(getClassicLinkDnsSupported()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.eks.AmazonEKSClient.deleteCluster",
	"Comment": "deletes the amazon eks cluster control plane.if you have active services in your cluster that are associated with a load balancer, you must delete thoseservices before deleting the cluster so that the load balancers are deleted properly. otherwise, you can haveorphaned resources in your vpc that prevent you from being able to delete the vpc. for more information, see deleting a cluster in theamazon eks user guide.",
	"Method": "DeleteClusterResult deleteCluster(DeleteClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.Parameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterName() != null)\r\n        sb.append(\"ParameterName: \").append(getParameterName()).append(\",\");\r\n    if (getParameterValue() != null)\r\n        sb.append(\"ParameterValue: \").append(getParameterValue()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getDataType() != null)\r\n        sb.append(\"DataType: \").append(getDataType()).append(\",\");\r\n    if (getAllowedValues() != null)\r\n        sb.append(\"AllowedValues: \").append(getAllowedValues()).append(\",\");\r\n    if (getIsModifiable() != null)\r\n        sb.append(\"IsModifiable: \").append(getIsModifiable()).append(\",\");\r\n    if (getMinimumEngineVersion() != null)\r\n        sb.append(\"MinimumEngineVersion: \").append(getMinimumEngineVersion()).append(\",\");\r\n    if (getChangeType() != null)\r\n        sb.append(\"ChangeType: \").append(getChangeType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBQueryExpression.setRangeKeyConditions",
	"Comment": "sets the range key condition for this query. all range key attributes forthe table must be specified by attribute name in the map.",
	"Method": "void setRangeKeyConditions(Map<String, Condition> rangeKeyConditions){\r\n    this.rangeKeyConditions = rangeKeyConditions;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.SecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getIpPermissions() != null)\r\n        sb.append(\"IpPermissions: \").append(getIpPermissions()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getIpPermissionsEgress() != null)\r\n        sb.append(\"IpPermissionsEgress: \").append(getIpPermissionsEgress()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DisassociateSubnetCidrBlockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6CidrBlockAssociation() != null)\r\n        sb.append(\"Ipv6CidrBlockAssociation: \").append(getIpv6CidrBlockAssociation()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.AmazonElasticLoadBalancingClient.deleteLoadBalancerListeners",
	"Comment": "deletes the specified listeners from the specified load balancer.",
	"Method": "DeleteLoadBalancerListenersResult deleteLoadBalancerListeners(DeleteLoadBalancerListenersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLoadBalancerListeners(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticfilesystem.model.DescribeMountTargetSecurityGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.AWSElasticBeanstalkAsyncClient.listAvailableSolutionStacksAsync",
	"Comment": "simplified method form for invoking the listavailablesolutionstacks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAvailableSolutionStacksResult> listAvailableSolutionStacksAsync(ListAvailableSolutionStacksRequest request,java.util.concurrent.Future<ListAvailableSolutionStacksResult> listAvailableSolutionStacksAsync,ListAvailableSolutionStacksRequest request,com.amazonaws.handlers.AsyncHandler<ListAvailableSolutionStacksRequest, ListAvailableSolutionStacksResult> asyncHandler,java.util.concurrent.Future<ListAvailableSolutionStacksResult> listAvailableSolutionStacksAsync,java.util.concurrent.Future<ListAvailableSolutionStacksResult> listAvailableSolutionStacksAsync,com.amazonaws.handlers.AsyncHandler<ListAvailableSolutionStacksRequest, ListAvailableSolutionStacksResult> asyncHandler){\r\n    return listAvailableSolutionStacksAsync(new ListAvailableSolutionStacksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AbstractAmazonEC2Async.describeAddressesAsync",
	"Comment": "simplified method form for invoking the describeaddresses operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAddressesResult> describeAddressesAsync(DescribeAddressesRequest request,java.util.concurrent.Future<DescribeAddressesResult> describeAddressesAsync,DescribeAddressesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAddressesRequest, DescribeAddressesResult> asyncHandler,java.util.concurrent.Future<DescribeAddressesResult> describeAddressesAsync,java.util.concurrent.Future<DescribeAddressesResult> describeAddressesAsync,com.amazonaws.handlers.AsyncHandler<DescribeAddressesRequest, DescribeAddressesResult> asyncHandler){\r\n    return describeAddressesAsync(new DescribeAddressesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.deleteKeyPair",
	"Comment": "deletes the specified key pair, by removing the public key from amazon ec2.",
	"Method": "DeleteKeyPairResult deleteKeyPair(DeleteKeyPairRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteKeyPair(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticache.model.CacheNodeTypeSpecificValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCacheNodeType() != null)\r\n        sb.append(\"CacheNodeType: \").append(getCacheNodeType()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.ListAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.AmazonElasticLoadBalancingClient.describeTargetGroupAttributes",
	"Comment": "describes the attributes for the specified target group.for more information, see target group attributes in the application load balancers guide or target group attributes in the network load balancers guide.",
	"Method": "DescribeTargetGroupAttributesResult describeTargetGroupAttributes(DescribeTargetGroupAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeTargetGroupAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.RetrieveEnvironmentInfoResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnvironmentInfo() != null)\r\n        sb.append(\"EnvironmentInfo: \").append(getEnvironmentInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribeVpnConnectionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpnConnections() != null)\r\n        sb.append(\"VpnConnections: \").append(getVpnConnections());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.InstanceNetworkInterfaceSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociatePublicIpAddress() != null)\r\n        sb.append(\"AssociatePublicIpAddress: \").append(getAssociatePublicIpAddress()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDeviceIndex() != null)\r\n        sb.append(\"DeviceIndex: \").append(getDeviceIndex()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getIpv6AddressCount() != null)\r\n        sb.append(\"Ipv6AddressCount: \").append(getIpv6AddressCount()).append(\",\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getPrivateIpAddresses() != null)\r\n        sb.append(\"PrivateIpAddresses: \").append(getPrivateIpAddresses()).append(\",\");\r\n    if (getSecondaryPrivateIpAddressCount() != null)\r\n        sb.append(\"SecondaryPrivateIpAddressCount: \").append(getSecondaryPrivateIpAddressCount()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper.doBatchWriteItemWithRetry",
	"Comment": "continue trying to process the batch and retry on unproccesseditems asaccording to the specified batchwriteretrystrategy",
	"Method": "FailedBatch doBatchWriteItemWithRetry(Map<String, List<WriteRequest>> batch,BatchWriteRetryStrategy batchWriteRetryStrategy){\r\n    BatchWriteItemResult result = null;\r\n    int retries = 0;\r\n    int maxRetries = batchWriteRetryStrategy.getMaxRetryOnUnprocessedItems(Collections.unmodifiableMap(batch));\r\n    FailedBatch failedBatch = null;\r\n    Map<String, List<WriteRequest>> pendingItems = batch;\r\n    while (true) {\r\n        try {\r\n            result = db.batchWriteItem(applyBatchOperationUserAgent(new BatchWriteItemRequest().withRequestItems(pendingItems)));\r\n        } catch (Exception e) {\r\n            failedBatch = new FailedBatch();\r\n            failedBatch.setUnprocessedItems(pendingItems);\r\n            failedBatch.setException(e);\r\n            return failedBatch;\r\n        }\r\n        pendingItems = result.getUnprocessedItems();\r\n        if (pendingItems.size() > 0) {\r\n            if (maxRetries >= 0 && retries >= maxRetries) {\r\n                failedBatch = new FailedBatch();\r\n                failedBatch.setUnprocessedItems(pendingItems);\r\n                failedBatch.setException(null);\r\n                return failedBatch;\r\n            }\r\n            pause(batchWriteRetryStrategy.getDelayBeforeRetryUnprocessedItems(Collections.unmodifiableMap(pendingItems), retries));\r\n            retries++;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return failedBatch;\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ReplaceNetworkAclAssociationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationId() != null)\r\n        sb.append(\"AssociationId: \").append(getAssociationId()).append(\",\");\r\n    if (getNetworkAclId() != null)\r\n        sb.append(\"NetworkAclId: \").append(getNetworkAclId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.searchTransitGatewayRoutes",
	"Comment": "searches for routes in the specified transit gateway route table.",
	"Method": "SearchTransitGatewayRoutesResult searchTransitGatewayRoutes(SearchTransitGatewayRoutesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSearchTransitGatewayRoutes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBScanExpression.setTotalSegments",
	"Comment": "sets the total number of segments into which the scan will be divided.",
	"Method": "void setTotalSegments(Integer totalSegments){\r\n    this.totalSegments = totalSegments;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticbeanstalk.model.UpdateTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagsToAdd() != null)\r\n        sb.append(\"TagsToAdd: \").append(getTagsToAdd()).append(\",\");\r\n    if (getTagsToRemove() != null)\r\n        sb.append(\"TagsToRemove: \").append(getTagsToRemove());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DescribePrefixListsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getPrefixLists() != null)\r\n        sb.append(\"PrefixLists: \").append(getPrefixLists());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.databasemigrationservice.model.StartReplicationTaskAssessmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReplicationTask() != null)\r\n        sb.append(\"ReplicationTask: \").append(getReplicationTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.model.Endpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getCachePeriodInMinutes() != null)\r\n        sb.append(\"CachePeriodInMinutes: \").append(getCachePeriodInMinutes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.document.DynamoDB.getTable",
	"Comment": "returns the specified dynamodb table.no network call is involved.",
	"Method": "Table getTable(String tableName){\r\n    return new Table(client, tableName);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2AsyncClient.describeBundleTasksAsync",
	"Comment": "simplified method form for invoking the describebundletasks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeBundleTasksResult> describeBundleTasksAsync(DescribeBundleTasksRequest request,java.util.concurrent.Future<DescribeBundleTasksResult> describeBundleTasksAsync,DescribeBundleTasksRequest request,com.amazonaws.handlers.AsyncHandler<DescribeBundleTasksRequest, DescribeBundleTasksResult> asyncHandler,java.util.concurrent.Future<DescribeBundleTasksResult> describeBundleTasksAsync,java.util.concurrent.Future<DescribeBundleTasksResult> describeBundleTasksAsync,com.amazonaws.handlers.AsyncHandler<DescribeBundleTasksRequest, DescribeBundleTasksResult> asyncHandler){\r\n    return describeBundleTasksAsync(new DescribeBundleTasksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.DetachClassicLinkVpcResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturn() != null)\r\n        sb.append(\"Return: \").append(getReturn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.listGlobalTables",
	"Comment": "lists all global tables that have a replica in the specified region.",
	"Method": "ListGlobalTablesResult listGlobalTables(ListGlobalTablesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListGlobalTables(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.model.ServiceConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceType() != null)\r\n        sb.append(\"ServiceType: \").append(getServiceType()).append(\",\");\r\n    if (getServiceId() != null)\r\n        sb.append(\"ServiceId: \").append(getServiceId()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getServiceState() != null)\r\n        sb.append(\"ServiceState: \").append(getServiceState()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getAcceptanceRequired() != null)\r\n        sb.append(\"AcceptanceRequired: \").append(getAcceptanceRequired()).append(\",\");\r\n    if (getNetworkLoadBalancerArns() != null)\r\n        sb.append(\"NetworkLoadBalancerArns: \").append(getNetworkLoadBalancerArns()).append(\",\");\r\n    if (getBaseEndpointDnsNames() != null)\r\n        sb.append(\"BaseEndpointDnsNames: \").append(getBaseEndpointDnsNames()).append(\",\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecr.model.DeleteRepositoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistryId() != null)\r\n        sb.append(\"RegistryId: \").append(getRegistryId()).append(\",\");\r\n    if (getRepositoryName() != null)\r\n        sb.append(\"RepositoryName: \").append(getRepositoryName()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.model.Service.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceArn() != null)\r\n        sb.append(\"ServiceArn: \").append(getServiceArn()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getClusterArn() != null)\r\n        sb.append(\"ClusterArn: \").append(getClusterArn()).append(\",\");\r\n    if (getLoadBalancers() != null)\r\n        sb.append(\"LoadBalancers: \").append(getLoadBalancers()).append(\",\");\r\n    if (getServiceRegistries() != null)\r\n        sb.append(\"ServiceRegistries: \").append(getServiceRegistries()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getDesiredCount() != null)\r\n        sb.append(\"DesiredCount: \").append(getDesiredCount()).append(\",\");\r\n    if (getRunningCount() != null)\r\n        sb.append(\"RunningCount: \").append(getRunningCount()).append(\",\");\r\n    if (getPendingCount() != null)\r\n        sb.append(\"PendingCount: \").append(getPendingCount()).append(\",\");\r\n    if (getLaunchType() != null)\r\n        sb.append(\"LaunchType: \").append(getLaunchType()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getTaskDefinition() != null)\r\n        sb.append(\"TaskDefinition: \").append(getTaskDefinition()).append(\",\");\r\n    if (getDeploymentConfiguration() != null)\r\n        sb.append(\"DeploymentConfiguration: \").append(getDeploymentConfiguration()).append(\",\");\r\n    if (getTaskSets() != null)\r\n        sb.append(\"TaskSets: \").append(getTaskSets()).append(\",\");\r\n    if (getDeployments() != null)\r\n        sb.append(\"Deployments: \").append(getDeployments()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getPlacementConstraints() != null)\r\n        sb.append(\"PlacementConstraints: \").append(getPlacementConstraints()).append(\",\");\r\n    if (getPlacementStrategy() != null)\r\n        sb.append(\"PlacementStrategy: \").append(getPlacementStrategy()).append(\",\");\r\n    if (getNetworkConfiguration() != null)\r\n        sb.append(\"NetworkConfiguration: \").append(getNetworkConfiguration()).append(\",\");\r\n    if (getHealthCheckGracePeriodSeconds() != null)\r\n        sb.append(\"HealthCheckGracePeriodSeconds: \").append(getHealthCheckGracePeriodSeconds()).append(\",\");\r\n    if (getSchedulingStrategy() != null)\r\n        sb.append(\"SchedulingStrategy: \").append(getSchedulingStrategy()).append(\",\");\r\n    if (getDeploymentController() != null)\r\n        sb.append(\"DeploymentController: \").append(getDeploymentController()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getCreatedBy() != null)\r\n        sb.append(\"CreatedBy: \").append(getCreatedBy()).append(\",\");\r\n    if (getEnableECSManagedTags() != null)\r\n        sb.append(\"EnableECSManagedTags: \").append(getEnableECSManagedTags()).append(\",\");\r\n    if (getPropagateTags() != null)\r\n        sb.append(\"PropagateTags: \").append(getPropagateTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancing.model.RemoveTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ecs.AbstractAmazonECSAsync.listClustersAsync",
	"Comment": "simplified method form for invoking the listclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListClustersResult> listClustersAsync(ListClustersRequest request,java.util.concurrent.Future<ListClustersResult> listClustersAsync,ListClustersRequest request,com.amazonaws.handlers.AsyncHandler<ListClustersRequest, ListClustersResult> asyncHandler,java.util.concurrent.Future<ListClustersResult> listClustersAsync,java.util.concurrent.Future<ListClustersResult> listClustersAsync,com.amazonaws.handlers.AsyncHandler<ListClustersRequest, ListClustersResult> asyncHandler){\r\n    return listClustersAsync(new ListClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ec2.AmazonEC2Client.createFleet",
	"Comment": "launches an ec2 fleet.you can create a single ec2 fleet that includes multiple launch specifications that vary by instance type, ami,availability zone, or subnet.for more information, see launchingan ec2 fleet in the amazon elastic compute cloud user guide.",
	"Method": "CreateFleetResult createFleet(CreateFleetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateFleet(request);\r\n}"
}]