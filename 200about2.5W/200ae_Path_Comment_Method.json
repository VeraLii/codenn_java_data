[{
	"Path": "com.amazonaws.services.greengrass.model.GetLoggerDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggerDefinitionId() != null)\r\n        sb.append(\"LoggerDefinitionId: \").append(getLoggerDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.updateLoginProfile",
	"Comment": "changes the password for the specified iam user.iam users can change their own passwords by calling changepassword. for more information about modifyingpasswords, see managingpasswords in the iam user guide.",
	"Method": "UpdateLoginProfileResult updateLoginProfile(UpdateLoginProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateLoginProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listSigningCertificatesAsync",
	"Comment": "simplified method form for invoking the listsigningcertificates operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListSigningCertificatesResult> listSigningCertificatesAsync(ListSigningCertificatesRequest request,java.util.concurrent.Future<ListSigningCertificatesResult> listSigningCertificatesAsync,ListSigningCertificatesRequest request,com.amazonaws.handlers.AsyncHandler<ListSigningCertificatesRequest, ListSigningCertificatesResult> asyncHandler,java.util.concurrent.Future<ListSigningCertificatesResult> listSigningCertificatesAsync,java.util.concurrent.Future<ListSigningCertificatesResult> listSigningCertificatesAsync,com.amazonaws.handlers.AsyncHandler<ListSigningCertificatesRequest, ListSigningCertificatesResult> asyncHandler){\r\n    return listSigningCertificatesAsync(new ListSigningCertificatesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListFunctionDefinitionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.RemoveRoleFromInstanceProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceProfileName() != null)\r\n        sb.append(\"InstanceProfileName: \").append(getInstanceProfileName()).append(\",\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.User.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getPasswordLastUsed() != null)\r\n        sb.append(\"PasswordLastUsed: \").append(getPasswordLastUsed()).append(\",\");\r\n    if (getPermissionsBoundary() != null)\r\n        sb.append(\"PermissionsBoundary: \").append(getPermissionsBoundary()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeAssessmentRunsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunArns() != null)\r\n        sb.append(\"AssessmentRunArns: \").append(getAssessmentRunArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.InstanceCountLimits.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinimumInstanceCount() != null)\r\n        sb.append(\"MinimumInstanceCount: \").append(getMinimumInstanceCount()).append(\",\");\r\n    if (getMaximumInstanceCount() != null)\r\n        sb.append(\"MaximumInstanceCount: \").append(getMaximumInstanceCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.ListRulesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DescribeFileSystemsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystemIds() != null)\r\n        sb.append(\"FileSystemIds: \").append(getFileSystemIds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.waiters.DescribeStepFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeStepResult apply(DescribeStepRequest describeStepRequest){\r\n    return client.describeStep(describeStepRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateSAMLProviderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSAMLMetadataDocument() != null)\r\n        sb.append(\"SAMLMetadataDocument: \").append(getSAMLMetadataDocument()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListEntitiesForPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyGroups() != null)\r\n        sb.append(\"PolicyGroups: \").append(getPolicyGroups()).append(\",\");\r\n    if (getPolicyUsers() != null)\r\n        sb.append(\"PolicyUsers: \").append(getPolicyUsers()).append(\",\");\r\n    if (getPolicyRoles() != null)\r\n        sb.append(\"PolicyRoles: \").append(getPolicyRoles()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.TerminateJobFlowsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.EncryptionAtRest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogEncryptionMode() != null)\r\n        sb.append(\"CatalogEncryptionMode: \").append(getCatalogEncryptionMode()).append(\",\");\r\n    if (getSseAwsKmsKeyId() != null)\r\n        sb.append(\"SseAwsKmsKeyId: \").append(getSseAwsKmsKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListAssessmentRunAgentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunArn() != null)\r\n        sb.append(\"AssessmentRunArn: \").append(getAssessmentRunArn()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.VpcPeeringConnectionStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.LoginProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getPasswordResetRequired() != null)\r\n        sb.append(\"PasswordResetRequired: \").append(getPasswordResetRequired());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.RemovePermissionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeGameSessionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId()).append(\",\");\r\n    if (getAliasId() != null)\r\n        sb.append(\"AliasId: \").append(getAliasId()).append(\",\");\r\n    if (getStatusFilter() != null)\r\n        sb.append(\"StatusFilter: \").append(getStatusFilter()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DeleteElasticsearchServiceRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.TagUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GetVaultLockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getExpirationDate() != null)\r\n        sb.append(\"ExpirationDate: \").append(getExpirationDate()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.Policy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyUpdateToken() != null)\r\n        sb.append(\"PolicyUpdateToken: \").append(getPolicyUpdateToken()).append(\",\");\r\n    if (getSecurityServicePolicyData() != null)\r\n        sb.append(\"SecurityServicePolicyData: \").append(getSecurityServicePolicyData()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceTags() != null)\r\n        sb.append(\"ResourceTags: \").append(getResourceTags()).append(\",\");\r\n    if (getExcludeResourceTags() != null)\r\n        sb.append(\"ExcludeResourceTags: \").append(getExcludeResourceTags()).append(\",\");\r\n    if (getRemediationEnabled() != null)\r\n        sb.append(\"RemediationEnabled: \").append(getRemediationEnabled()).append(\",\");\r\n    if (getIncludeMap() != null)\r\n        sb.append(\"IncludeMap: \").append(getIncludeMap()).append(\",\");\r\n    if (getExcludeMap() != null)\r\n        sb.append(\"ExcludeMap: \").append(getExcludeMap());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.UpdatePipelineStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteVpcPeeringConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.batchDeleteConnection",
	"Comment": "deletes a list of connection definitions from the data catalog.",
	"Method": "BatchDeleteConnectionResult batchDeleteConnection(BatchDeleteConnectionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeBatchDeleteConnection(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetCatalogImportStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.CreateBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackup() != null)\r\n        sb.append(\"Backup: \").append(getBackup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.MatchmakingTicket.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTicketId() != null)\r\n        sb.append(\"TicketId: \").append(getTicketId()).append(\",\");\r\n    if (getConfigurationName() != null)\r\n        sb.append(\"ConfigurationName: \").append(getConfigurationName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getPlayers() != null)\r\n        sb.append(\"Players: \").append(getPlayers()).append(\",\");\r\n    if (getGameSessionConnectionInfo() != null)\r\n        sb.append(\"GameSessionConnectionInfo: \").append(getGameSessionConnectionInfo()).append(\",\");\r\n    if (getEstimatedWaitTime() != null)\r\n        sb.append(\"EstimatedWaitTime: \").append(getEstimatedWaitTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribePlayerSessionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlayerSessions() != null)\r\n        sb.append(\"PlayerSessions: \").append(getPlayerSessions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.RuntimeConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerProcesses() != null)\r\n        sb.append(\"ServerProcesses: \").append(getServerProcesses()).append(\",\");\r\n    if (getMaxConcurrentGameSessionActivations() != null)\r\n        sb.append(\"MaxConcurrentGameSessionActivations: \").append(getMaxConcurrentGameSessionActivations()).append(\",\");\r\n    if (getGameSessionActivationTimeoutSeconds() != null)\r\n        sb.append(\"GameSessionActivationTimeoutSeconds: \").append(getGameSessionActivationTimeoutSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.DescribeSecurityConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.BootstrapActionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getScriptBootstrapAction() != null)\r\n        sb.append(\"ScriptBootstrapAction: \").append(getScriptBootstrapAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceGroupDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceGroupId() != null)\r\n        sb.append(\"InstanceGroupId: \").append(getInstanceGroupId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMarket() != null)\r\n        sb.append(\"Market: \").append(getMarket()).append(\",\");\r\n    if (getInstanceRole() != null)\r\n        sb.append(\"InstanceRole: \").append(getInstanceRole()).append(\",\");\r\n    if (getBidPrice() != null)\r\n        sb.append(\"BidPrice: \").append(getBidPrice()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getInstanceRequestCount() != null)\r\n        sb.append(\"InstanceRequestCount: \").append(getInstanceRequestCount()).append(\",\");\r\n    if (getInstanceRunningCount() != null)\r\n        sb.append(\"InstanceRunningCount: \").append(getInstanceRunningCount()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getLastStateChangeReason() != null)\r\n        sb.append(\"LastStateChangeReason: \").append(getLastStateChangeReason()).append(\",\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime()).append(\",\");\r\n    if (getStartDateTime() != null)\r\n        sb.append(\"StartDateTime: \").append(getStartDateTime()).append(\",\");\r\n    if (getReadyDateTime() != null)\r\n        sb.append(\"ReadyDateTime: \").append(getReadyDateTime()).append(\",\");\r\n    if (getEndDateTime() != null)\r\n        sb.append(\"EndDateTime: \").append(getEndDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreatePolicyVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getSetAsDefault() != null)\r\n        sb.append(\"SetAsDefault: \").append(getSetAsDefault());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.createMembers",
	"Comment": "creates member accounts of the current aws account by specifying a list of aws account ids. the current awsaccount can then invite these members to manage guardduty in their accounts.",
	"Method": "CreateMembersResult createMembers(CreateMembersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateMembers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.SecretsManagerSecretResourceData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN()).append(\",\");\r\n    if (getAdditionalStagingLabelsToDownload() != null)\r\n        sb.append(\"AdditionalStagingLabelsToDownload: \").append(getAdditionalStagingLabelsToDownload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DisassociateMembersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedAccounts() != null)\r\n        sb.append(\"UnprocessedAccounts: \").append(getUnprocessedAccounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateOpenIDConnectProviderThumbprintResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.transfer.ArchiveTransferManager.downloadOneChunk",
	"Comment": "download one chunk from amazon glacier. it will do the retry if anyerrors are encountered while streaming the data from amazon glacier.",
	"Method": "void downloadOneChunk(String accountId,String vaultName,String jobId,RandomAccessFile output,long currentPosition,long endPosition,ProgressListener progressListener){\r\n    final long chunkSize = endPosition - currentPosition + 1;\r\n    TreeHashInputStream input = null;\r\n    int retries = 0;\r\n    while (true) {\r\n        try {\r\n            GetJobOutputRequest req = new GetJobOutputRequest().withAccountId(accountId).withVaultName(vaultName).withRange(\"bytes=\" + currentPosition + \"-\" + endPosition).withJobId(jobId).withGeneralProgressListener(progressListener);\r\n            GetJobOutputResult jobOutputResult = glacier.getJobOutput(req);\r\n            try {\r\n                input = new TreeHashInputStream(new BufferedInputStream(jobOutputResult.getBody()));\r\n                appendToFile(output, input);\r\n            } catch (NoSuchAlgorithmException e) {\r\n                throw failure(e, \"Unable to compute hash for data integrity\");\r\n            } finally {\r\n                closeQuietly(input, log);\r\n            }\r\n            if (null != jobOutputResult.getChecksum()) {\r\n                if (!input.getTreeHash().equalsIgnoreCase(jobOutputResult.getChecksum())) {\r\n                    publishResponseBytesDiscarded(progressListener, chunkSize);\r\n                    if (log.isDebugEnabled())\r\n                        log.debug(\"reverting \" + chunkSize);\r\n                    throw new IOException(\"Client side computed hash doesn't match server side hash; possible data corruption\");\r\n                }\r\n            } else {\r\n                log.warn(\"Cannot validate the downloaded output since no tree-hash checksum is returned from Glacier. \" + \"Make sure the InitiateJob and GetJobOutput requests use tree-hash-aligned ranges.\");\r\n            }\r\n            return;\r\n        } catch (IOException ioe) {\r\n            if (retries < DEFAULT_MAX_RETRIES) {\r\n                retries++;\r\n                if (log.isDebugEnabled()) {\r\n                    log.debug(retries + \" retry downloadOneChunk accountId=\" + accountId + \", vaultName=\" + vaultName + \", jobId=\" + jobId + \", currentPosition=\" + currentPosition + \" endPosition=\" + endPosition);\r\n                }\r\n                try {\r\n                    output.seek(currentPosition);\r\n                } catch (IOException e) {\r\n                    throw new AmazonClientException(\"Unable to download the archive: \" + ioe.getMessage(), e);\r\n                }\r\n            } else {\r\n                throw new AmazonClientException(\"Unable to download the archive: \" + ioe.getMessage(), ioe);\r\n            }\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListMultipartUploadsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getUploadIdMarker() != null)\r\n        sb.append(\"UploadIdMarker: \").append(getUploadIdMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.LastCrawlInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage()).append(\",\");\r\n    if (getLogGroup() != null)\r\n        sb.append(\"LogGroup: \").append(getLogGroup()).append(\",\");\r\n    if (getLogStream() != null)\r\n        sb.append(\"LogStream: \").append(getLogStream()).append(\",\");\r\n    if (getMessagePrefix() != null)\r\n        sb.append(\"MessagePrefix: \").append(getMessagePrefix()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.UpdateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getManifest() != null)\r\n        sb.append(\"Manifest: \").append(getManifest()).append(\",\");\r\n    if (getJobType() != null)\r\n        sb.append(\"JobType: \").append(getJobType()).append(\",\");\r\n    if (getValidateOnly() != null)\r\n        sb.append(\"ValidateOnly: \").append(getValidateOnly()).append(\",\");\r\n    if (getAPIVersion() != null)\r\n        sb.append(\"APIVersion: \").append(getAPIVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.StepStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateChangeReason() != null)\r\n        sb.append(\"StateChangeReason: \").append(getStateChangeReason()).append(\",\");\r\n    if (getFailureDetails() != null)\r\n        sb.append(\"FailureDetails: \").append(getFailureDetails()).append(\",\");\r\n    if (getTimeline() != null)\r\n        sb.append(\"Timeline: \").append(getTimeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateVpcPeeringConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getPeerVpcAwsAccountId() != null)\r\n        sb.append(\"PeerVpcAwsAccountId: \").append(getPeerVpcAwsAccountId()).append(\",\");\r\n    if (getPeerVpcId() != null)\r\n        sb.append(\"PeerVpcId: \").append(getPeerVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetMembersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMembers() != null)\r\n        sb.append(\"Members: \").append(getMembers()).append(\",\");\r\n    if (getUnprocessedAccounts() != null)\r\n        sb.append(\"UnprocessedAccounts: \").append(getUnprocessedAccounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AddRoleToInstanceProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceProfileName() != null)\r\n        sb.append(\"InstanceProfileName: \").append(getInstanceProfileName()).append(\",\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListServiceSpecificCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceSpecificCredentials() != null)\r\n        sb.append(\"ServiceSpecificCredentials: \").append(getServiceSpecificCredentials());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazoncloudwatcheventsasync using the current builder configuration.",
	"Method": "AmazonCloudWatchEventsAsync build(AwsAsyncClientParams params){\r\n    return new AmazonCloudWatchEventsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DescribeJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.CreateExclusionsPreviewRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTemplateArn() != null)\r\n        sb.append(\"AssessmentTemplateArn: \").append(getAssessmentTemplateArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTablesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableList() != null)\r\n        sb.append(\"TableList: \").append(getTableList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.VirtualMFADevice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSerialNumber() != null)\r\n        sb.append(\"SerialNumber: \").append(getSerialNumber()).append(\",\");\r\n    if (getBase32StringSeed() != null)\r\n        sb.append(\"Base32StringSeed: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getQRCodePNG() != null)\r\n        sb.append(\"QRCodePNG: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser()).append(\",\");\r\n    if (getEnableDate() != null)\r\n        sb.append(\"EnableDate: \").append(getEnableDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateVpcPeeringAuthorizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcPeeringAuthorization() != null)\r\n        sb.append(\"VpcPeeringAuthorization: \").append(getVpcPeeringAuthorization());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeScalingPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScalingPolicies() != null)\r\n        sb.append(\"ScalingPolicies: \").append(getScalingPolicies()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AssetAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaVersion() != null)\r\n        sb.append(\"SchemaVersion: \").append(getSchemaVersion()).append(\",\");\r\n    if (getAgentId() != null)\r\n        sb.append(\"AgentId: \").append(getAgentId()).append(\",\");\r\n    if (getAutoScalingGroup() != null)\r\n        sb.append(\"AutoScalingGroup: \").append(getAutoScalingGroup()).append(\",\");\r\n    if (getAmiId() != null)\r\n        sb.append(\"AmiId: \").append(getAmiId()).append(\",\");\r\n    if (getHostname() != null)\r\n        sb.append(\"Hostname: \").append(getHostname()).append(\",\");\r\n    if (getIpv4Addresses() != null)\r\n        sb.append(\"Ipv4Addresses: \").append(getIpv4Addresses()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.GetUpgradeStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUpgradeStep() != null)\r\n        sb.append(\"UpgradeStep: \").append(getUpgradeStep()).append(\",\");\r\n    if (getStepStatus() != null)\r\n        sb.append(\"StepStatus: \").append(getStepStatus()).append(\",\");\r\n    if (getUpgradeName() != null)\r\n        sb.append(\"UpgradeName: \").append(getUpgradeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.StepFactory.newRunPigScriptStep",
	"Comment": "step that runs a pig script on your job flow using the default pig version.",
	"Method": "HadoopJarStepConfig newRunPigScriptStep(String script,String pigVersion,String scriptArgs,HadoopJarStepConfig newRunPigScriptStep,String script,String scriptArgs){\r\n    return newRunPigScriptStep(script, \"latest\", scriptArgs);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchStopJobRunRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getJobRunIds() != null)\r\n        sb.append(\"JobRunIds: \").append(getJobRunIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetInstanceProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceProfileName() != null)\r\n        sb.append(\"InstanceProfileName: \").append(getInstanceProfileName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreateJobOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getThumbnailPattern() != null)\r\n        sb.append(\"ThumbnailPattern: \").append(getThumbnailPattern()).append(\",\");\r\n    if (getThumbnailEncryption() != null)\r\n        sb.append(\"ThumbnailEncryption: \").append(getThumbnailEncryption()).append(\",\");\r\n    if (getRotate() != null)\r\n        sb.append(\"Rotate: \").append(getRotate()).append(\",\");\r\n    if (getPresetId() != null)\r\n        sb.append(\"PresetId: \").append(getPresetId()).append(\",\");\r\n    if (getSegmentDuration() != null)\r\n        sb.append(\"SegmentDuration: \").append(getSegmentDuration()).append(\",\");\r\n    if (getWatermarks() != null)\r\n        sb.append(\"Watermarks: \").append(getWatermarks()).append(\",\");\r\n    if (getAlbumArt() != null)\r\n        sb.append(\"AlbumArt: \").append(getAlbumArt()).append(\",\");\r\n    if (getComposition() != null)\r\n        sb.append(\"Composition: \").append(getComposition()).append(\",\");\r\n    if (getCaptions() != null)\r\n        sb.append(\"Captions: \").append(getCaptions()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.FindingCriteria.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCriterion() != null)\r\n        sb.append(\"Criterion: \").append(getCriterion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.listEventSubscriptions",
	"Comment": "lists all the event subscriptions for the assessment template that is specified by the arn of the assessmenttemplate. for more information, see subscribetoevent and unsubscribefromevent.",
	"Method": "ListEventSubscriptionsResult listEventSubscriptions(ListEventSubscriptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListEventSubscriptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.deleteElasticsearchDomain",
	"Comment": "permanently deletes the specified elasticsearch domain and all of its data. once a domain is deleted, it cannotbe recovered.",
	"Method": "DeleteElasticsearchDomainResult deleteElasticsearchDomain(DeleteElasticsearchDomainRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteElasticsearchDomain(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CloudWatchEncryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudWatchEncryptionMode() != null)\r\n        sb.append(\"CloudWatchEncryptionMode: \").append(getCloudWatchEncryptionMode()).append(\",\");\r\n    if (getKmsKeyArn() != null)\r\n        sb.append(\"KmsKeyArn: \").append(getKmsKeyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeAssessmentTemplatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTemplates() != null)\r\n        sb.append(\"AssessmentTemplates: \").append(getAssessmentTemplates()).append(\",\");\r\n    if (getFailedItems() != null)\r\n        sb.append(\"FailedItems: \").append(getFailedItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.createThreatIntelSet",
	"Comment": "create a new threatintelset. threatintelsets consist of known malicious ip addresses. guardduty generatesfindings based on threatintelsets.",
	"Method": "CreateThreatIntelSetResult createThreatIntelSet(CreateThreatIntelSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateThreatIntelSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.GetShippingLabelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShippingLabelURL() != null)\r\n        sb.append(\"ShippingLabelURL: \").append(getShippingLabelURL()).append(\",\");\r\n    if (getWarning() != null)\r\n        sb.append(\"Warning: \").append(getWarning());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetServiceRoleForAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.describeSecurityConfiguration",
	"Comment": "provides the details of a security configuration by returning the configuration json.",
	"Method": "DescribeSecurityConfigurationResult describeSecurityConfiguration(DescribeSecurityConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSecurityConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateSubscriptionDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getSubscriptionDefinitionId() != null)\r\n        sb.append(\"SubscriptionDefinitionId: \").append(getSubscriptionDefinitionId()).append(\",\");\r\n    if (getSubscriptions() != null)\r\n        sb.append(\"Subscriptions: \").append(getSubscriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AssessmentRunNotification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDate() != null)\r\n        sb.append(\"Date: \").append(getDate()).append(\",\");\r\n    if (getEvent() != null)\r\n        sb.append(\"Event: \").append(getEvent()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(getError()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getSnsPublishStatusCode() != null)\r\n        sb.append(\"SnsPublishStatusCode: \").append(getSnsPublishStatusCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteVpcPeeringAuthorizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameLiftAwsAccountId() != null)\r\n        sb.append(\"GameLiftAwsAccountId: \").append(getGameLiftAwsAccountId()).append(\",\");\r\n    if (getPeerVpcId() != null)\r\n        sb.append(\"PeerVpcId: \").append(getPeerVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeScalingPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getStatusFilter() != null)\r\n        sb.append(\"StatusFilter: \").append(getStatusFilter()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listMFADevicesAsync",
	"Comment": "simplified method form for invoking the listmfadevices operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListMFADevicesResult> listMFADevicesAsync(ListMFADevicesRequest request,java.util.concurrent.Future<ListMFADevicesResult> listMFADevicesAsync,ListMFADevicesRequest request,com.amazonaws.handlers.AsyncHandler<ListMFADevicesRequest, ListMFADevicesResult> asyncHandler,java.util.concurrent.Future<ListMFADevicesResult> listMFADevicesAsync,java.util.concurrent.Future<ListMFADevicesResult> listMFADevicesAsync,com.amazonaws.handlers.AsyncHandler<ListMFADevicesRequest, ListMFADevicesResult> asyncHandler){\r\n    return listMFADevicesAsync(new ListMFADevicesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.BackupFailureDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.StartElasticsearchServiceSoftwareUpdateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.createConnectorDefinitionVersion",
	"Comment": "creates a version of a connector definition which has already been defined.",
	"Method": "CreateConnectorDefinitionVersionResult createConnectorDefinitionVersion(CreateConnectorDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateConnectorDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AgentFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAgentHealths() != null)\r\n        sb.append(\"AgentHealths: \").append(getAgentHealths()).append(\",\");\r\n    if (getAgentHealthCodes() != null)\r\n        sb.append(\"AgentHealthCodes: \").append(getAgentHealthCodes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.JobOutput.withComposition",
	"Comment": "you can create an output file that contains an excerpt from the input file. this excerpt, called a clip, can comefrom the beginning, middle, or end of the file. the composition object contains settings for the clips that makeup an output file. for the current release, you can only specify settings for a single clip per output file. thecomposition object cannot be null.",
	"Method": "JobOutput withComposition(Clip composition,JobOutput withComposition,java.util.Collection<Clip> composition){\r\n    setComposition(composition);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.getCredentialReportAsync",
	"Comment": "simplified method form for invoking the getcredentialreport operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetCredentialReportResult> getCredentialReportAsync(GetCredentialReportRequest request,java.util.concurrent.Future<GetCredentialReportResult> getCredentialReportAsync,GetCredentialReportRequest request,com.amazonaws.handlers.AsyncHandler<GetCredentialReportRequest, GetCredentialReportResult> asyncHandler,java.util.concurrent.Future<GetCredentialReportResult> getCredentialReportAsync,java.util.concurrent.Future<GetCredentialReportResult> getCredentialReportAsync,com.amazonaws.handlers.AsyncHandler<GetCredentialReportRequest, GetCredentialReportResult> asyncHandler){\r\n    return getCredentialReportAsync(new GetCredentialReportRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.InputSerialization.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCsv() != null)\r\n        sb.append(\"Csv: \").append(getCsv());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DeleteFileSystemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getWindowsConfiguration() != null)\r\n        sb.append(\"WindowsConfiguration: \").append(getWindowsConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GetVaultAccessPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateConnectorDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getInitialVersion() != null)\r\n        sb.append(\"InitialVersion: \").append(getInitialVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.setDataRetrievalPolicy",
	"Comment": "this operation sets and then enacts a data retrieval policy in the region specified in the put request. you canset one policy per region for an aws account. the policy is enacted within a few minutes of a successful putoperation.the set policy operation does not affect retrieval jobs that were in progress before the policy was enacted. formore information about data retrieval policies, see amazon glacier dataretrieval policies.",
	"Method": "SetDataRetrievalPolicyResult setDataRetrievalPolicy(SetDataRetrievalPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSetDataRetrievalPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.ListPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyList() != null)\r\n        sb.append(\"PolicyList: \").append(getPolicyList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UpdateFindingsFeedbackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComments() != null)\r\n        sb.append(\"Comments: \").append(getComments()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFeedback() != null)\r\n        sb.append(\"Feedback: \").append(getFeedback()).append(\",\");\r\n    if (getFindingIds() != null)\r\n        sb.append(\"FindingIds: \").append(getFindingIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.CreateEndpointGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointGroup() != null)\r\n        sb.append(\"EndpointGroup: \").append(getEndpointGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.GetPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DescribeAcceleratorAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceleratorArn() != null)\r\n        sb.append(\"AcceleratorArn: \").append(getAcceleratorArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListFindingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFindingArns() != null)\r\n        sb.append(\"FindingArns: \").append(getFindingArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DevEndpointCustomLibraries.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExtraPythonLibsS3Path() != null)\r\n        sb.append(\"ExtraPythonLibsS3Path: \").append(getExtraPythonLibsS3Path()).append(\",\");\r\n    if (getExtraJarsS3Path() != null)\r\n        sb.append(\"ExtraJarsS3Path: \").append(getExtraJarsS3Path());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTableVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GroupOwnerSetting.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoAddGroupOwner() != null)\r\n        sb.append(\"AutoAddGroupOwner: \").append(getAutoAddGroupOwner()).append(\",\");\r\n    if (getGroupOwner() != null)\r\n        sb.append(\"GroupOwner: \").append(getGroupOwner());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateAccessKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StopGameSessionPlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacementId() != null)\r\n        sb.append(\"PlacementId: \").append(getPlacementId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.FileSystemFailureDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.EndpointConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointId() != null)\r\n        sb.append(\"EndpointId: \").append(getEndpointId()).append(\",\");\r\n    if (getWeight() != null)\r\n        sb.append(\"Weight: \").append(getWeight());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.NotificationProperty.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotifyDelayAfter() != null)\r\n        sb.append(\"NotifyDelayAfter: \").append(getNotifyDelayAfter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.untagRole",
	"Comment": "removes the specified tags from the role. for more information about tagging, see tagging iam identities in the iam userguide.",
	"Method": "UntagRoleResult untagRole(UntagRoleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUntagRole(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.previewAgents",
	"Comment": "previews the agents installed on the ec2 instances that are part of the specified assessment target.",
	"Method": "PreviewAgentsResult previewAgents(PreviewAgentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePreviewAgents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AssessmentRunAgent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAgentId() != null)\r\n        sb.append(\"AgentId: \").append(getAgentId()).append(\",\");\r\n    if (getAssessmentRunArn() != null)\r\n        sb.append(\"AssessmentRunArn: \").append(getAssessmentRunArn()).append(\",\");\r\n    if (getAgentHealth() != null)\r\n        sb.append(\"AgentHealth: \").append(getAgentHealth()).append(\",\");\r\n    if (getAgentHealthCode() != null)\r\n        sb.append(\"AgentHealthCode: \").append(getAgentHealthCode()).append(\",\");\r\n    if (getAgentHealthDetails() != null)\r\n        sb.append(\"AgentHealthDetails: \").append(getAgentHealthDetails()).append(\",\");\r\n    if (getAutoScalingGroup() != null)\r\n        sb.append(\"AutoScalingGroup: \").append(getAutoScalingGroup()).append(\",\");\r\n    if (getTelemetryMetadata() != null)\r\n        sb.append(\"TelemetryMetadata: \").append(getTelemetryMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.spi.security.TLSArtifacts.getCertificateChain",
	"Comment": "gets the certificate chain for private key in the tlsartifacts object.",
	"Method": "List<Certificate> getCertificateChain(){\r\n    return certificateChain;\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTriggersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getDependentJobName() != null)\r\n        sb.append(\"DependentJobName: \").append(getDependentJobName()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeletePolicyVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GenerateCredentialReportResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.CSVOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuoteFields() != null)\r\n        sb.append(\"QuoteFields: \").append(getQuoteFields()).append(\",\");\r\n    if (getQuoteEscapeCharacter() != null)\r\n        sb.append(\"QuoteEscapeCharacter: \").append(getQuoteEscapeCharacter()).append(\",\");\r\n    if (getRecordDelimiter() != null)\r\n        sb.append(\"RecordDelimiter: \").append(getRecordDelimiter()).append(\",\");\r\n    if (getFieldDelimiter() != null)\r\n        sb.append(\"FieldDelimiter: \").append(getFieldDelimiter()).append(\",\");\r\n    if (getQuoteCharacter() != null)\r\n        sb.append(\"QuoteCharacter: \").append(getQuoteCharacter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListAccountAliasesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountAliases() != null)\r\n        sb.append(\"AccountAliases: \").append(getAccountAliases()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GameSessionQueue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getGameSessionQueueArn() != null)\r\n        sb.append(\"GameSessionQueueArn: \").append(getGameSessionQueueArn()).append(\",\");\r\n    if (getTimeoutInSeconds() != null)\r\n        sb.append(\"TimeoutInSeconds: \").append(getTimeoutInSeconds()).append(\",\");\r\n    if (getPlayerLatencyPolicies() != null)\r\n        sb.append(\"PlayerLatencyPolicies: \").append(getPlayerLatencyPolicies()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.SortCriteria.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getOrderBy() != null)\r\n        sb.append(\"OrderBy: \").append(getOrderBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Clip.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimeSpan() != null)\r\n        sb.append(\"TimeSpan: \").append(getTimeSpan());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.RunJobFlowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getLogUri() != null)\r\n        sb.append(\"LogUri: \").append(getLogUri()).append(\",\");\r\n    if (getAdditionalInfo() != null)\r\n        sb.append(\"AdditionalInfo: \").append(getAdditionalInfo()).append(\",\");\r\n    if (getAmiVersion() != null)\r\n        sb.append(\"AmiVersion: \").append(getAmiVersion()).append(\",\");\r\n    if (getReleaseLabel() != null)\r\n        sb.append(\"ReleaseLabel: \").append(getReleaseLabel()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getSteps() != null)\r\n        sb.append(\"Steps: \").append(getSteps()).append(\",\");\r\n    if (getBootstrapActions() != null)\r\n        sb.append(\"BootstrapActions: \").append(getBootstrapActions()).append(\",\");\r\n    if (getSupportedProducts() != null)\r\n        sb.append(\"SupportedProducts: \").append(getSupportedProducts()).append(\",\");\r\n    if (getNewSupportedProducts() != null)\r\n        sb.append(\"NewSupportedProducts: \").append(getNewSupportedProducts()).append(\",\");\r\n    if (getApplications() != null)\r\n        sb.append(\"Applications: \").append(getApplications()).append(\",\");\r\n    if (getConfigurations() != null)\r\n        sb.append(\"Configurations: \").append(getConfigurations()).append(\",\");\r\n    if (getVisibleToAllUsers() != null)\r\n        sb.append(\"VisibleToAllUsers: \").append(getVisibleToAllUsers()).append(\",\");\r\n    if (getJobFlowRole() != null)\r\n        sb.append(\"JobFlowRole: \").append(getJobFlowRole()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration()).append(\",\");\r\n    if (getAutoScalingRole() != null)\r\n        sb.append(\"AutoScalingRole: \").append(getAutoScalingRole()).append(\",\");\r\n    if (getScaleDownBehavior() != null)\r\n        sb.append(\"ScaleDownBehavior: \").append(getScaleDownBehavior()).append(\",\");\r\n    if (getCustomAmiId() != null)\r\n        sb.append(\"CustomAmiId: \").append(getCustomAmiId()).append(\",\");\r\n    if (getEbsRootVolumeSize() != null)\r\n        sb.append(\"EbsRootVolumeSize: \").append(getEbsRootVolumeSize()).append(\",\");\r\n    if (getRepoUpgradeOnBoot() != null)\r\n        sb.append(\"RepoUpgradeOnBoot: \").append(getRepoUpgradeOnBoot()).append(\",\");\r\n    if (getKerberosAttributes() != null)\r\n        sb.append(\"KerberosAttributes: \").append(getKerberosAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.UpdateAcceleratorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceleratorArn() != null)\r\n        sb.append(\"AcceleratorArn: \").append(getAcceleratorArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getIpAddressType() != null)\r\n        sb.append(\"IpAddressType: \").append(getIpAddressType()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeResourceGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceGroups() != null)\r\n        sb.append(\"ResourceGroups: \").append(getResourceGroups()).append(\",\");\r\n    if (getFailedItems() != null)\r\n        sb.append(\"FailedItems: \").append(getFailedItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AutoScalingPolicyStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateChangeReason() != null)\r\n        sb.append(\"StateChangeReason: \").append(getStateChangeReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateVpcPeeringConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UpdateFilterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.SetDefaultPolicyVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.AmazonGameLiftClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazongamelift using the current builder configuration.",
	"Method": "AmazonGameLift build(AwsSyncClientParams params){\r\n    return new AmazonGameLiftClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.getServerCertificate",
	"Comment": "retrieves information about the specified server certificate stored in iam.for more information about working with server certificates, see working with servercertificates in the iam user guide. this topic includes a list of aws services that can use the servercertificates that you manage with iam.",
	"Method": "GetServerCertificateResult getServerCertificate(GetServerCertificateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetServerCertificate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeExclusionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExclusions() != null)\r\n        sb.append(\"Exclusions: \").append(getExclusions()).append(\",\");\r\n    if (getFailedItems() != null)\r\n        sb.append(\"FailedItems: \").append(getFailedItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.InstanceDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getImageDescription() != null)\r\n        sb.append(\"ImageDescription: \").append(getImageDescription()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getInstanceState() != null)\r\n        sb.append(\"InstanceState: \").append(getInstanceState()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getLaunchTime() != null)\r\n        sb.append(\"LaunchTime: \").append(getLaunchTime()).append(\",\");\r\n    if (getNetworkInterfaces() != null)\r\n        sb.append(\"NetworkInterfaces: \").append(getNetworkInterfaces()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getProductCodes() != null)\r\n        sb.append(\"ProductCodes: \").append(getProductCodes()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetCoreDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ResourceAccessPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPermission() != null)\r\n        sb.append(\"Permission: \").append(getPermission()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.updateDetector",
	"Comment": "updates an amazon guardduty detector specified by the detectorid.",
	"Method": "UpdateDetectorResult updateDetector(UpdateDetectorRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateDetector(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ClusterStateChangeReason.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DisassociateServiceRoleFromAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDisassociatedAt() != null)\r\n        sb.append(\"DisassociatedAt: \").append(getDisassociatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListThreatIntelSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListUserPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyNames() != null)\r\n        sb.append(\"PolicyNames: \").append(getPolicyNames()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.upgradeElasticsearchDomain",
	"Comment": "allows you to either upgrade your domain or perform an upgrade eligibility check to a compatible elasticsearchversion.",
	"Method": "UpgradeElasticsearchDomainResult upgradeElasticsearchDomain(UpgradeElasticsearchDomainRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpgradeElasticsearchDomain(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.AssociateServiceRoleToAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteCoreDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DeleteAssessmentRunResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetBulkDeploymentStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBulkDeploymentId() != null)\r\n        sb.append(\"BulkDeploymentId: \").append(getBulkDeploymentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PutUserPermissionsBoundaryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetCrawlerMetricsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCrawlerMetricsList() != null)\r\n        sb.append(\"CrawlerMetricsList: \").append(getCrawlerMetricsList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetResourcePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyInJson() != null)\r\n        sb.append(\"PolicyInJson: \").append(getPolicyInJson()).append(\",\");\r\n    if (getPolicyHash() != null)\r\n        sb.append(\"PolicyHash: \").append(getPolicyHash()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getUpdateTime() != null)\r\n        sb.append(\"UpdateTime: \").append(getUpdateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListGroupsForUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetDeviceDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(getDefinition()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetThreatIntelSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.Exclusion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRecommendation() != null)\r\n        sb.append(\"Recommendation: \").append(getRecommendation()).append(\",\");\r\n    if (getScopes() != null)\r\n        sb.append(\"Scopes: \").append(getScopes()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.ListComplianceStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyComplianceStatusList() != null)\r\n        sb.append(\"PolicyComplianceStatusList: \").append(getPolicyComplianceStatusList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ScalingPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getScalingAdjustment() != null)\r\n        sb.append(\"ScalingAdjustment: \").append(getScalingAdjustment()).append(\",\");\r\n    if (getScalingAdjustmentType() != null)\r\n        sb.append(\"ScalingAdjustmentType: \").append(getScalingAdjustmentType()).append(\",\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getThreshold() != null)\r\n        sb.append(\"Threshold: \").append(getThreshold()).append(\",\");\r\n    if (getEvaluationPeriods() != null)\r\n        sb.append(\"EvaluationPeriods: \").append(getEvaluationPeriods()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getPolicyType() != null)\r\n        sb.append(\"PolicyType: \").append(getPolicyType()).append(\",\");\r\n    if (getTargetConfiguration() != null)\r\n        sb.append(\"TargetConfiguration: \").append(getTargetConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.ListMemberAccountsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.getDataRetrievalPolicy",
	"Comment": "this operation returns the current data retrieval policy for the account and region specified in the get request.for more information about data retrieval policies, see amazon glacier dataretrieval policies.",
	"Method": "GetDataRetrievalPolicyResult getDataRetrievalPolicy(GetDataRetrievalPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDataRetrievalPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.EbsConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEbsBlockDeviceConfigs() != null)\r\n        sb.append(\"EbsBlockDeviceConfigs: \").append(getEbsBlockDeviceConfigs()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.DescribeRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ValidateMatchmakingRuleSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValid() != null)\r\n        sb.append(\"Valid: \").append(getValid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceGroupConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMarket() != null)\r\n        sb.append(\"Market: \").append(getMarket()).append(\",\");\r\n    if (getInstanceRole() != null)\r\n        sb.append(\"InstanceRole: \").append(getInstanceRole()).append(\",\");\r\n    if (getBidPrice() != null)\r\n        sb.append(\"BidPrice: \").append(getBidPrice()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getConfigurations() != null)\r\n        sb.append(\"Configurations: \").append(getConfigurations()).append(\",\");\r\n    if (getEbsConfiguration() != null)\r\n        sb.append(\"EbsConfiguration: \").append(getEbsConfiguration()).append(\",\");\r\n    if (getAutoScalingPolicy() != null)\r\n        sb.append(\"AutoScalingPolicy: \").append(getAutoScalingPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListSSHPublicKeysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.FunctionRunAsConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGid() != null)\r\n        sb.append(\"Gid: \").append(getGid()).append(\",\");\r\n    if (getUid() != null)\r\n        sb.append(\"Uid: \").append(getUid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteConnectorDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectorDefinitionId() != null)\r\n        sb.append(\"ConnectorDefinitionId: \").append(getConnectorDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteSubscriptionDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionDefinitionId() != null)\r\n        sb.append(\"SubscriptionDefinitionId: \").append(getSubscriptionDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.AbortMultipartUploadResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.getConnectorDefinitionVersion",
	"Comment": "retrieves information about a connector definition version, including the connectors that the version contains.connectors are prebuilt modules that interact with local infrastructure, device protocols, aws, and other cloudservices.",
	"Method": "GetConnectorDefinitionVersionResult getConnectorDefinitionVersion(GetConnectorDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetConnectorDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.waiters.ReadJobFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "ReadJobResult apply(ReadJobRequest readJobRequest){\r\n    return client.readJob(readJobRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PolicyDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listVirtualMFADevices",
	"Comment": "lists the virtual mfa devices defined in the aws account by assignment status. if you do not specify anassignment status, the operation returns a list of all virtual mfa devices. assignment status can beassigned, unassigned, or any.you can paginate the results using the maxitems and marker parameters.",
	"Method": "ListVirtualMFADevicesResult listVirtualMFADevices(ListVirtualMFADevicesRequest request,ListVirtualMFADevicesResult listVirtualMFADevices){\r\n    return listVirtualMFADevices(new ListVirtualMFADevicesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.EventFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventArns() != null)\r\n        sb.append(\"EventArns: \").append(getEventArns()).append(\",\");\r\n    if (getEventTypeCodes() != null)\r\n        sb.append(\"EventTypeCodes: \").append(getEventTypeCodes()).append(\",\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices()).append(\",\");\r\n    if (getRegions() != null)\r\n        sb.append(\"Regions: \").append(getRegions()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getStartTimes() != null)\r\n        sb.append(\"StartTimes: \").append(getStartTimes()).append(\",\");\r\n    if (getEndTimes() != null)\r\n        sb.append(\"EndTimes: \").append(getEndTimes()).append(\",\");\r\n    if (getLastUpdatedTimes() != null)\r\n        sb.append(\"LastUpdatedTimes: \").append(getLastUpdatedTimes()).append(\",\");\r\n    if (getEntityArns() != null)\r\n        sb.append(\"EntityArns: \").append(getEntityArns()).append(\",\");\r\n    if (getEntityValues() != null)\r\n        sb.append(\"EntityValues: \").append(getEntityValues()).append(\",\");\r\n    if (getEventTypeCategories() != null)\r\n        sb.append(\"EventTypeCategories: \").append(getEventTypeCategories()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getEventStatusCodes() != null)\r\n        sb.append(\"EventStatusCodes: \").append(getEventStatusCodes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceResizePolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstancesToTerminate() != null)\r\n        sb.append(\"InstancesToTerminate: \").append(getInstancesToTerminate()).append(\",\");\r\n    if (getInstancesToProtect() != null)\r\n        sb.append(\"InstancesToProtect: \").append(getInstancesToProtect()).append(\",\");\r\n    if (getInstanceTerminationTimeout() != null)\r\n        sb.append(\"InstanceTerminationTimeout: \").append(getInstanceTerminationTimeout());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.ListRulesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamePrefix() != null)\r\n        sb.append(\"NamePrefix: \").append(getNamePrefix()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DeleteEndpointGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteLoggerDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggerDefinitionId() != null)\r\n        sb.append(\"LoggerDefinitionId: \").append(getLoggerDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetMasterAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaster() != null)\r\n        sb.append(\"Master: \").append(getMaster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateClassifierRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGrokClassifier() != null)\r\n        sb.append(\"GrokClassifier: \").append(getGrokClassifier()).append(\",\");\r\n    if (getXMLClassifier() != null)\r\n        sb.append(\"XMLClassifier: \").append(getXMLClassifier()).append(\",\");\r\n    if (getJsonClassifier() != null)\r\n        sb.append(\"JsonClassifier: \").append(getJsonClassifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateDevEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getPublicKey() != null)\r\n        sb.append(\"PublicKey: \").append(getPublicKey()).append(\",\");\r\n    if (getPublicKeys() != null)\r\n        sb.append(\"PublicKeys: \").append(getPublicKeys()).append(\",\");\r\n    if (getNumberOfNodes() != null)\r\n        sb.append(\"NumberOfNodes: \").append(getNumberOfNodes()).append(\",\");\r\n    if (getExtraPythonLibsS3Path() != null)\r\n        sb.append(\"ExtraPythonLibsS3Path: \").append(getExtraPythonLibsS3Path()).append(\",\");\r\n    if (getExtraJarsS3Path() != null)\r\n        sb.append(\"ExtraJarsS3Path: \").append(getExtraJarsS3Path()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.addRoleToInstanceProfile",
	"Comment": "adds the specified iam role to the specified instance profile. an instance profile can contain only one role, andthis limit cannot be increased. you can remove the existing role and then add a different role to an instanceprofile. you must then wait for the change to appear across all of aws because of eventual consistency. to force the change, you mustdisassociate the instance profile and then associate theinstance profile, or you can stop your instance and then restart it.the caller of this api must be granted the passrole permission on the iam role by a permissionspolicy.for more information about roles, go to working with roles. for moreinformation about instance profiles, go to about instance profiles.",
	"Method": "AddRoleToInstanceProfileResult addRoleToInstanceProfile(AddRoleToInstanceProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddRoleToInstanceProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.GetUpgradeHistoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUpgradeHistories() != null)\r\n        sb.append(\"UpgradeHistories: \").append(getUpgradeHistories()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.RecurringCharge.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecurringChargeAmount() != null)\r\n        sb.append(\"RecurringChargeAmount: \").append(getRecurringChargeAmount()).append(\",\");\r\n    if (getRecurringChargeFrequency() != null)\r\n        sb.append(\"RecurringChargeFrequency: \").append(getRecurringChargeFrequency());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.UpdateFileSystemWindowsConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWeeklyMaintenanceStartTime() != null)\r\n        sb.append(\"WeeklyMaintenanceStartTime: \").append(getWeeklyMaintenanceStartTime()).append(\",\");\r\n    if (getDailyAutomaticBackupStartTime() != null)\r\n        sb.append(\"DailyAutomaticBackupStartTime: \").append(getDailyAutomaticBackupStartTime()).append(\",\");\r\n    if (getAutomaticBackupRetentionDays() != null)\r\n        sb.append(\"AutomaticBackupRetentionDays: \").append(getAutomaticBackupRetentionDays());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ResetDeploymentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.createDetector",
	"Comment": "creates a single amazon guardduty detector. a detector is an object that represents the guardduty service. adetector must be created in order for guardduty to become operational.",
	"Method": "CreateDetectorResult createDetector(CreateDetectorRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDetector(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.SimulateCustomPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationResults() != null)\r\n        sb.append(\"EvaluationResults: \").append(getEvaluationResults()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.uploadSSHPublicKey",
	"Comment": "uploads an ssh public key and associates it with the specified iam user.the ssh public key uploaded by this operation can be used only for authenticating the associated iam user to anaws codecommit repository. for more information about using ssh keys to authenticate to an aws codecommitrepository, see set up awscodecommit for ssh connections in the aws codecommit user guide.",
	"Method": "UploadSSHPublicKeyResult uploadSSHPublicKey(UploadSSHPublicKeyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUploadSSHPublicKey(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeviceDefinitionVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevices() != null)\r\n        sb.append(\"Devices: \").append(getDevices());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.StartMonitoringMembersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedAccounts() != null)\r\n        sb.append(\"UnprocessedAccounts: \").append(getUnprocessedAccounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AddJobFlowStepsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStepIds() != null)\r\n        sb.append(\"StepIds: \").append(getStepIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDataCatalogEncryptionSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UntagRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DeleteAcceleratorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceleratorArn() != null)\r\n        sb.append(\"AcceleratorArn: \").append(getAcceleratorArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteFleetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteInstanceProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceProfileName() != null)\r\n        sb.append(\"InstanceProfileName: \").append(getInstanceProfileName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteGroupPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.VaultLockPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonelastictranscoderasync using the current builder configuration.",
	"Method": "AmazonElasticTranscoderAsync build(AwsAsyncClientParams params){\r\n    return new AmazonElasticTranscoderAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeFleetUtilizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetUtilization() != null)\r\n        sb.append(\"FleetUtilization: \").append(getFleetUtilization()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteFilterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFilterName() != null)\r\n        sb.append(\"FilterName: \").append(getFilterName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AutoScalingPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConstraints() != null)\r\n        sb.append(\"Constraints: \").append(getConstraints()).append(\",\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.LocalVolumeResourceData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationPath() != null)\r\n        sb.append(\"DestinationPath: \").append(getDestinationPath()).append(\",\");\r\n    if (getGroupOwnerSetting() != null)\r\n        sb.append(\"GroupOwnerSetting: \").append(getGroupOwnerSetting()).append(\",\");\r\n    if (getSourcePath() != null)\r\n        sb.append(\"SourcePath: \").append(getSourcePath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDatabaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatabase() != null)\r\n        sb.append(\"Database: \").append(getDatabase());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.DeletePresetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.RemoveTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreatePipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline()).append(\",\");\r\n    if (getWarnings() != null)\r\n        sb.append(\"Warnings: \").append(getWarnings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.Invitation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getInvitationId() != null)\r\n        sb.append(\"InvitationId: \").append(getInvitationId()).append(\",\");\r\n    if (getInvitedAt() != null)\r\n        sb.append(\"InvitedAt: \").append(getInvitedAt()).append(\",\");\r\n    if (getRelationshipStatus() != null)\r\n        sb.append(\"RelationshipStatus: \").append(getRelationshipStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ExclusionPreview.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRecommendation() != null)\r\n        sb.append(\"Recommendation: \").append(getRecommendation()).append(\",\");\r\n    if (getScopes() != null)\r\n        sb.append(\"Scopes: \").append(getScopes()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.DescribeEventBusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceAsyncClient.describeJobFlowsAsync",
	"Comment": "simplified method form for invoking the describejobflows operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeJobFlowsResult> describeJobFlowsAsync(DescribeJobFlowsRequest request,java.util.concurrent.Future<DescribeJobFlowsResult> describeJobFlowsAsync,DescribeJobFlowsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeJobFlowsRequest, DescribeJobFlowsResult> asyncHandler,java.util.concurrent.Future<DescribeJobFlowsResult> describeJobFlowsAsync,java.util.concurrent.Future<DescribeJobFlowsResult> describeJobFlowsAsync,com.amazonaws.handlers.AsyncHandler<DescribeJobFlowsRequest, DescribeJobFlowsResult> asyncHandler){\r\n    return describeJobFlowsAsync(new DescribeJobFlowsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeFleetEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.getUpgradeHistory",
	"Comment": "retrieves the complete history of the last 10 upgrades that were performed on the domain.",
	"Method": "GetUpgradeHistoryResult getUpgradeHistory(GetUpgradeHistoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetUpgradeHistory(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchStopJobRunError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getJobRunId() != null)\r\n        sb.append(\"JobRunId: \").append(getJobRunId()).append(\",\");\r\n    if (getErrorDetail() != null)\r\n        sb.append(\"ErrorDetail: \").append(getErrorDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetGroupVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(getDefinition()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.DeleteNotificationChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UpdateThreatIntelSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActivate() != null)\r\n        sb.append(\"Activate: \").append(getActivate()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getThreatIntelSetId() != null)\r\n        sb.append(\"ThreatIntelSetId: \").append(getThreatIntelSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeVpcPeeringAuthorizationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.Credentials.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId()).append(\",\");\r\n    if (getSecretAccessKey() != null)\r\n        sb.append(\"SecretAccessKey: \").append(getSecretAccessKey()).append(\",\");\r\n    if (getSessionToken() != null)\r\n        sb.append(\"SessionToken: \").append(getSessionToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DeleteElasticsearchDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.SAMLProviderListEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getValidUntil() != null)\r\n        sb.append(\"ValidUntil: \").append(getValidUntil()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListIPSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpSetIds() != null)\r\n        sb.append(\"IpSetIds: \").append(getIpSetIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AttachGroupPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListFindingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFindingCriteria() != null)\r\n        sb.append(\"FindingCriteria: \").append(getFindingCriteria()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSortCriteria() != null)\r\n        sb.append(\"SortCriteria: \").append(getSortCriteria());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listPoliciesAsync",
	"Comment": "simplified method form for invoking the listpolicies operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListPoliciesResult> listPoliciesAsync(ListPoliciesRequest request,java.util.concurrent.Future<ListPoliciesResult> listPoliciesAsync,ListPoliciesRequest request,com.amazonaws.handlers.AsyncHandler<ListPoliciesRequest, ListPoliciesResult> asyncHandler,java.util.concurrent.Future<ListPoliciesResult> listPoliciesAsync,java.util.concurrent.Future<ListPoliciesResult> listPoliciesAsync,com.amazonaws.handlers.AsyncHandler<ListPoliciesRequest, ListPoliciesResult> asyncHandler){\r\n    return listPoliciesAsync(new ListPoliciesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteServerCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DetachRolePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.EventType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getService() != null)\r\n        sb.append(\"Service: \").append(getService()).append(\",\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AgentPreview.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostname() != null)\r\n        sb.append(\"Hostname: \").append(getHostname()).append(\",\");\r\n    if (getAgentId() != null)\r\n        sb.append(\"AgentId: \").append(getAgentId()).append(\",\");\r\n    if (getAutoScalingGroup() != null)\r\n        sb.append(\"AutoScalingGroup: \").append(getAutoScalingGroup()).append(\",\");\r\n    if (getAgentHealth() != null)\r\n        sb.append(\"AgentHealth: \").append(getAgentHealth()).append(\",\");\r\n    if (getAgentVersion() != null)\r\n        sb.append(\"AgentVersion: \").append(getAgentVersion()).append(\",\");\r\n    if (getOperatingSystem() != null)\r\n        sb.append(\"OperatingSystem: \").append(getOperatingSystem()).append(\",\");\r\n    if (getKernelVersion() != null)\r\n        sb.append(\"KernelVersion: \").append(getKernelVersion()).append(\",\");\r\n    if (getIpv4Address() != null)\r\n        sb.append(\"Ipv4Address: \").append(getIpv4Address());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeFleetAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetIds() != null)\r\n        sb.append(\"FleetIds: \").append(getFleetIds()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetCrawlerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCrawler() != null)\r\n        sb.append(\"Crawler: \").append(getCrawler());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.getTable",
	"Comment": "retrieves the table definition in a data catalog for a specified table.",
	"Method": "GetTableResult getTable(GetTableRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTable(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateScriptResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPythonScript() != null)\r\n        sb.append(\"PythonScript: \").append(getPythonScript()).append(\",\");\r\n    if (getScalaCode() != null)\r\n        sb.append(\"ScalaCode: \").append(getScalaCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.RemoteIpDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCity() != null)\r\n        sb.append(\"City: \").append(getCity()).append(\",\");\r\n    if (getCountry() != null)\r\n        sb.append(\"Country: \").append(getCountry()).append(\",\");\r\n    if (getGeoLocation() != null)\r\n        sb.append(\"GeoLocation: \").append(getGeoLocation()).append(\",\");\r\n    if (getIpAddressV4() != null)\r\n        sb.append(\"IpAddressV4: \").append(getIpAddressV4()).append(\",\");\r\n    if (getOrganization() != null)\r\n        sb.append(\"Organization: \").append(getOrganization());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ScalingRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getTrigger() != null)\r\n        sb.append(\"Trigger: \").append(getTrigger());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.JobBookmarkEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getRun() != null)\r\n        sb.append(\"Run: \").append(getRun()).append(\",\");\r\n    if (getAttempt() != null)\r\n        sb.append(\"Attempt: \").append(getAttempt()).append(\",\");\r\n    if (getJobBookmark() != null)\r\n        sb.append(\"JobBookmark: \").append(getJobBookmark());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceFleet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getInstanceFleetType() != null)\r\n        sb.append(\"InstanceFleetType: \").append(getInstanceFleetType()).append(\",\");\r\n    if (getTargetOnDemandCapacity() != null)\r\n        sb.append(\"TargetOnDemandCapacity: \").append(getTargetOnDemandCapacity()).append(\",\");\r\n    if (getTargetSpotCapacity() != null)\r\n        sb.append(\"TargetSpotCapacity: \").append(getTargetSpotCapacity()).append(\",\");\r\n    if (getProvisionedOnDemandCapacity() != null)\r\n        sb.append(\"ProvisionedOnDemandCapacity: \").append(getProvisionedOnDemandCapacity()).append(\",\");\r\n    if (getProvisionedSpotCapacity() != null)\r\n        sb.append(\"ProvisionedSpotCapacity: \").append(getProvisionedSpotCapacity()).append(\",\");\r\n    if (getInstanceTypeSpecifications() != null)\r\n        sb.append(\"InstanceTypeSpecifications: \").append(getInstanceTypeSpecifications()).append(\",\");\r\n    if (getLaunchSpecifications() != null)\r\n        sb.append(\"LaunchSpecifications: \").append(getLaunchSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ReadPipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline()).append(\",\");\r\n    if (getWarnings() != null)\r\n        sb.append(\"Warnings: \").append(getWarnings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.RemoveTagsFromVaultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listOpenIDConnectProvidersAsync",
	"Comment": "simplified method form for invoking the listopenidconnectproviders operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListOpenIDConnectProvidersResult> listOpenIDConnectProvidersAsync(ListOpenIDConnectProvidersRequest request,java.util.concurrent.Future<ListOpenIDConnectProvidersResult> listOpenIDConnectProvidersAsync,ListOpenIDConnectProvidersRequest request,com.amazonaws.handlers.AsyncHandler<ListOpenIDConnectProvidersRequest, ListOpenIDConnectProvidersResult> asyncHandler,java.util.concurrent.Future<ListOpenIDConnectProvidersResult> listOpenIDConnectProvidersAsync,java.util.concurrent.Future<ListOpenIDConnectProvidersResult> listOpenIDConnectProvidersAsync,com.amazonaws.handlers.AsyncHandler<ListOpenIDConnectProvidersRequest, ListOpenIDConnectProvidersResult> asyncHandler){\r\n    return listOpenIDConnectProvidersAsync(new ListOpenIDConnectProvidersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonelasticmapreduce using the current builder configuration.",
	"Method": "AmazonElasticMapReduce build(AwsSyncClientParams params){\r\n    return new AmazonElasticMapReduceClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.DescribeClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutTargetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedEntryCount() != null)\r\n        sb.append(\"FailedEntryCount: \").append(getFailedEntryCount()).append(\",\");\r\n    if (getFailedEntries() != null)\r\n        sb.append(\"FailedEntries: \").append(getFailedEntries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateConnectorDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectorDefinitionId() != null)\r\n        sb.append(\"ConnectorDefinitionId: \").append(getConnectorDefinitionId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GameSessionQueueDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationArn() != null)\r\n        sb.append(\"DestinationArn: \").append(getDestinationArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoutingStrategy() != null)\r\n        sb.append(\"RoutingStrategy: \").append(getRoutingStrategy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AddUserToGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.Build.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuildId() != null)\r\n        sb.append(\"BuildId: \").append(getBuildId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSizeOnDisk() != null)\r\n        sb.append(\"SizeOnDisk: \").append(getSizeOnDisk()).append(\",\");\r\n    if (getOperatingSystem() != null)\r\n        sb.append(\"OperatingSystem: \").append(getOperatingSystem()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateFunctionDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionDefinitionId() != null)\r\n        sb.append(\"FunctionDefinitionId: \").append(getFunctionDefinitionId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UntagUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.TableVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTable() != null)\r\n        sb.append(\"Table: \").append(getTable()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DeleteBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId()).append(\",\");\r\n    if (getLifecycle() != null)\r\n        sb.append(\"Lifecycle: \").append(getLifecycle());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.getAssessmentReport",
	"Comment": "produces an assessment report that includes detailed and comprehensive results of a specified assessment run.",
	"Method": "GetAssessmentReportResult getAssessmentReport(GetAssessmentReportRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetAssessmentReport(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListVirtualMFADevicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVirtualMFADevices() != null)\r\n        sb.append(\"VirtualMFADevices: \").append(getVirtualMFADevices()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.SnapshotOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutomatedSnapshotStartHour() != null)\r\n        sb.append(\"AutomatedSnapshotStartHour: \").append(getAutomatedSnapshotStartHour());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.getInvitationsCount",
	"Comment": "returns the count of all guardduty membership invitations that were sent to the current member account except thecurrently accepted invitation.",
	"Method": "GetInvitationsCountResult getInvitationsCount(GetInvitationsCountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetInvitationsCount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.CognitoOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getUserPoolId() != null)\r\n        sb.append(\"UserPoolId: \").append(getUserPoolId()).append(\",\");\r\n    if (getIdentityPoolId() != null)\r\n        sb.append(\"IdentityPoolId: \").append(getIdentityPoolId()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.CreateListenerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceleratorArn() != null)\r\n        sb.append(\"AcceleratorArn: \").append(getAcceleratorArn()).append(\",\");\r\n    if (getPortRanges() != null)\r\n        sb.append(\"PortRanges: \").append(getPortRanges()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getClientAffinity() != null)\r\n        sb.append(\"ClientAffinity: \").append(getClientAffinity()).append(\",\");\r\n    if (getIdempotencyToken() != null)\r\n        sb.append(\"IdempotencyToken: \").append(getIdempotencyToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StartJobRunRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getJobRunId() != null)\r\n        sb.append(\"JobRunId: \").append(getJobRunId()).append(\",\");\r\n    if (getArguments() != null)\r\n        sb.append(\"Arguments: \").append(getArguments()).append(\",\");\r\n    if (getAllocatedCapacity() != null)\r\n        sb.append(\"AllocatedCapacity: \").append(getAllocatedCapacity()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getNotificationProperty() != null)\r\n        sb.append(\"NotificationProperty: \").append(getNotificationProperty()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListTagsForVaultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.JobCommand.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getScriptLocation() != null)\r\n        sb.append(\"ScriptLocation: \").append(getScriptLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.waiters.DescribeTargetHealthFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeTargetHealthResult apply(DescribeTargetHealthRequest describeTargetHealthRequest){\r\n    return client.describeTargetHealth(describeTargetHealthRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeGameSessionPlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacementId() != null)\r\n        sb.append(\"PlacementId: \").append(getPlacementId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.RemoveClientIDFromOpenIDConnectProviderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ModifyInstanceFleetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UpdateThreatIntelSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeEntityAggregatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventArns() != null)\r\n        sb.append(\"EventArns: \").append(getEventArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.Rule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getEventPattern() != null)\r\n        sb.append(\"EventPattern: \").append(getEventPattern()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getScheduleExpression() != null)\r\n        sb.append(\"ScheduleExpression: \").append(getScheduleExpression()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getManagedBy() != null)\r\n        sb.append(\"ManagedBy: \").append(getManagedBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetContextKeysForPrincipalPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContextKeyNames() != null)\r\n        sb.append(\"ContextKeyNames: \").append(getContextKeyNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.LogPublishingOptionsStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.AmazonGameLiftAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazongameliftasync using the current builder configuration.",
	"Method": "AmazonGameLiftAsync build(AwsAsyncClientParams params){\r\n    return new AmazonGameLiftAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeMatchmakingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTicketList() != null)\r\n        sb.append(\"TicketList: \").append(getTicketList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.waiters.AmazonIdentityManagementWaiters.instanceProfileExists",
	"Comment": "builds a instanceprofileexists waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<GetInstanceProfileRequest> instanceProfileExists(){\r\n    return new WaiterBuilder<GetInstanceProfileRequest, GetInstanceProfileResult>().withSdkFunction(new GetInstanceProfileFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor(WaiterState.SUCCESS), new HttpFailureStatusAcceptor(404, WaiterState.RETRY)).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(1))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listServerCertificatesAsync",
	"Comment": "simplified method form for invoking the listservercertificates operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListServerCertificatesResult> listServerCertificatesAsync(ListServerCertificatesRequest request,java.util.concurrent.Future<ListServerCertificatesResult> listServerCertificatesAsync,ListServerCertificatesRequest request,com.amazonaws.handlers.AsyncHandler<ListServerCertificatesRequest, ListServerCertificatesResult> asyncHandler,java.util.concurrent.Future<ListServerCertificatesResult> listServerCertificatesAsync,java.util.concurrent.Future<ListServerCertificatesResult> listServerCertificatesAsync,com.amazonaws.handlers.AsyncHandler<ListServerCertificatesRequest, ListServerCertificatesResult> asyncHandler){\r\n    return listServerCertificatesAsync(new ListServerCertificatesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreatePlayerSessionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlayerSessions() != null)\r\n        sb.append(\"PlayerSessions: \").append(getPlayerSessions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.createCrawler",
	"Comment": "creates a new crawler with specified targets, role, configuration, and optional schedule. at least one crawltarget must be specified, in the s3targets field, the jdbctargets field, or thedynamodbtargets field.",
	"Method": "CreateCrawlerResult createCrawler(CreateCrawlerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateCrawler(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateVpcPeeringAuthorizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameLiftAwsAccountId() != null)\r\n        sb.append(\"GameLiftAwsAccountId: \").append(getGameLiftAwsAccountId()).append(\",\");\r\n    if (getPeerVpcId() != null)\r\n        sb.append(\"PeerVpcId: \").append(getPeerVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListAttachedRolePoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedPolicies() != null)\r\n        sb.append(\"AttachedPolicies: \").append(getAttachedPolicies()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.getTelemetryMetadata",
	"Comment": "information about the data that is collected for the specified assessment run.",
	"Method": "GetTelemetryMetadataResult getTelemetryMetadata(GetTelemetryMetadataRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTelemetryMetadata(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.DeletePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.SetRulePrioritiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListInvitationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.waiters.AmazonElasticLoadBalancingWaiters.targetDeregistered",
	"Comment": "builds a targetderegistered waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeTargetHealthRequest> targetDeregistered(){\r\n    return new WaiterBuilder<DescribeTargetHealthRequest, DescribeTargetHealthResult>().withSdkFunction(new DescribeTargetHealthFunction(client)).withAcceptors(new TargetDeregistered.IsInvalidTargetMatcher(), new TargetDeregistered.IsUnusedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.AmazonGameLiftClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListDeviceDefinitionVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceDefinitionId() != null)\r\n        sb.append(\"DeviceDefinitionId: \").append(getDeviceDefinitionId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLogUri() != null)\r\n        sb.append(\"LogUri: \").append(getLogUri()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getExecutionProperty() != null)\r\n        sb.append(\"ExecutionProperty: \").append(getExecutionProperty()).append(\",\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getDefaultArguments() != null)\r\n        sb.append(\"DefaultArguments: \").append(getDefaultArguments()).append(\",\");\r\n    if (getConnections() != null)\r\n        sb.append(\"Connections: \").append(getConnections()).append(\",\");\r\n    if (getMaxRetries() != null)\r\n        sb.append(\"MaxRetries: \").append(getMaxRetries()).append(\",\");\r\n    if (getAllocatedCapacity() != null)\r\n        sb.append(\"AllocatedCapacity: \").append(getAllocatedCapacity()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getNotificationProperty() != null)\r\n        sb.append(\"NotificationProperty: \").append(getNotificationProperty()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetFindingsStatisticsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFindingCriteria() != null)\r\n        sb.append(\"FindingCriteria: \").append(getFindingCriteria()).append(\",\");\r\n    if (getFindingStatisticTypes() != null)\r\n        sb.append(\"FindingStatisticTypes: \").append(getFindingStatisticTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.AssociateAdminAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdminAccount() != null)\r\n        sb.append(\"AdminAccount: \").append(getAdminAccount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateCrawlerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getClassifiers() != null)\r\n        sb.append(\"Classifiers: \").append(getClassifiers()).append(\",\");\r\n    if (getTablePrefix() != null)\r\n        sb.append(\"TablePrefix: \").append(getTablePrefix()).append(\",\");\r\n    if (getSchemaChangePolicy() != null)\r\n        sb.append(\"SchemaChangePolicy: \").append(getSchemaChangePolicy()).append(\",\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration()).append(\",\");\r\n    if (getCrawlerSecurityConfiguration() != null)\r\n        sb.append(\"CrawlerSecurityConfiguration: \").append(getCrawlerSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DisassociateRoleFromGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDisassociatedAt() != null)\r\n        sb.append(\"DisassociatedAt: \").append(getDisassociatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.removeAutoScalingPolicy",
	"Comment": "removes an automatic scaling policy from a specified instance group within an emr cluster.",
	"Method": "RemoveAutoScalingPolicyResult removeAutoScalingPolicy(RemoveAutoScalingPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveAutoScalingPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteFunctionDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableInput() != null)\r\n        sb.append(\"TableInput: \").append(getTableInput()).append(\",\");\r\n    if (getSkipArchive() != null)\r\n        sb.append(\"SkipArchive: \").append(getSkipArchive());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.getUserDefinedFunction",
	"Comment": "retrieves a specified function definition from the data catalog.",
	"Method": "GetUserDefinedFunctionResult getUserDefinedFunction(GetUserDefinedFunctionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetUserDefinedFunction(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListFiltersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateSecurityConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.Master.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getInvitationId() != null)\r\n        sb.append(\"InvitationId: \").append(getInvitationId()).append(\",\");\r\n    if (getInvitedAt() != null)\r\n        sb.append(\"InvitedAt: \").append(getInvitedAt()).append(\",\");\r\n    if (getRelationshipStatus() != null)\r\n        sb.append(\"RelationshipStatus: \").append(getRelationshipStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateDeviceDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListPolicyVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DescribeBackupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackups() != null)\r\n        sb.append(\"Backups: \").append(getBackups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.getCrawlers",
	"Comment": "retrieves metadata for all crawlers defined in the customer account.",
	"Method": "GetCrawlersResult getCrawlers(GetCrawlersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetCrawlers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listSAMLProvidersAsync",
	"Comment": "simplified method form for invoking the listsamlproviders operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListSAMLProvidersResult> listSAMLProvidersAsync(ListSAMLProvidersRequest request,java.util.concurrent.Future<ListSAMLProvidersResult> listSAMLProvidersAsync,ListSAMLProvidersRequest request,com.amazonaws.handlers.AsyncHandler<ListSAMLProvidersRequest, ListSAMLProvidersResult> asyncHandler,java.util.concurrent.Future<ListSAMLProvidersResult> listSAMLProvidersAsync,java.util.concurrent.Future<ListSAMLProvidersResult> listSAMLProvidersAsync,com.amazonaws.handlers.AsyncHandler<ListSAMLProvidersRequest, ListSAMLProvidersResult> asyncHandler){\r\n    return listSAMLProvidersAsync(new ListSAMLProvidersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeFleetEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateSubscriptionDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetDeviceDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceDefinitionId() != null)\r\n        sb.append(\"DeviceDefinitionId: \").append(getDeviceDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.EnableMFADeviceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSerialNumber() != null)\r\n        sb.append(\"SerialNumber: \").append(getSerialNumber()).append(\",\");\r\n    if (getAuthenticationCode1() != null)\r\n        sb.append(\"AuthenticationCode1: \").append(getAuthenticationCode1()).append(\",\");\r\n    if (getAuthenticationCode2() != null)\r\n        sb.append(\"AuthenticationCode2: \").append(getAuthenticationCode2());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Job.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getPipelineId() != null)\r\n        sb.append(\"PipelineId: \").append(getPipelineId()).append(\",\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput()).append(\",\");\r\n    if (getInputs() != null)\r\n        sb.append(\"Inputs: \").append(getInputs()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(getOutput()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs()).append(\",\");\r\n    if (getOutputKeyPrefix() != null)\r\n        sb.append(\"OutputKeyPrefix: \").append(getOutputKeyPrefix()).append(\",\");\r\n    if (getPlaylists() != null)\r\n        sb.append(\"Playlists: \").append(getPlaylists()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getUserMetadata() != null)\r\n        sb.append(\"UserMetadata: \").append(getUserMetadata()).append(\",\");\r\n    if (getTiming() != null)\r\n        sb.append(\"Timing: \").append(getTiming());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.InitiateVaultLockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listGroupsAsync",
	"Comment": "simplified method form for invoking the listgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListGroupsResult> listGroupsAsync(ListGroupsRequest request,java.util.concurrent.Future<ListGroupsResult> listGroupsAsync,ListGroupsRequest request,com.amazonaws.handlers.AsyncHandler<ListGroupsRequest, ListGroupsResult> asyncHandler,java.util.concurrent.Future<ListGroupsResult> listGroupsAsync,java.util.concurrent.Future<ListGroupsResult> listGroupsAsync,com.amazonaws.handlers.AsyncHandler<ListGroupsRequest, ListGroupsResult> asyncHandler){\r\n    return listGroupsAsync(new ListGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetServiceLastAccessedDetailsWithEntitiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getServiceNamespace() != null)\r\n        sb.append(\"ServiceNamespace: \").append(getServiceNamespace()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetSubscriptionDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSubscriptionDefinitionId() != null)\r\n        sb.append(\"SubscriptionDefinitionId: \").append(getSubscriptionDefinitionId()).append(\",\");\r\n    if (getSubscriptionDefinitionVersionId() != null)\r\n        sb.append(\"SubscriptionDefinitionVersionId: \").append(getSubscriptionDefinitionVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateUserDefinedFunctionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AddInstanceFleetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getInstanceFleet() != null)\r\n        sb.append(\"InstanceFleet: \").append(getInstanceFleet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.Ec2InstanceAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEc2KeyName() != null)\r\n        sb.append(\"Ec2KeyName: \").append(getEc2KeyName()).append(\",\");\r\n    if (getEc2SubnetId() != null)\r\n        sb.append(\"Ec2SubnetId: \").append(getEc2SubnetId()).append(\",\");\r\n    if (getRequestedEc2SubnetIds() != null)\r\n        sb.append(\"RequestedEc2SubnetIds: \").append(getRequestedEc2SubnetIds()).append(\",\");\r\n    if (getEc2AvailabilityZone() != null)\r\n        sb.append(\"Ec2AvailabilityZone: \").append(getEc2AvailabilityZone()).append(\",\");\r\n    if (getRequestedEc2AvailabilityZones() != null)\r\n        sb.append(\"RequestedEc2AvailabilityZones: \").append(getRequestedEc2AvailabilityZones()).append(\",\");\r\n    if (getIamInstanceProfile() != null)\r\n        sb.append(\"IamInstanceProfile: \").append(getIamInstanceProfile()).append(\",\");\r\n    if (getEmrManagedMasterSecurityGroup() != null)\r\n        sb.append(\"EmrManagedMasterSecurityGroup: \").append(getEmrManagedMasterSecurityGroup()).append(\",\");\r\n    if (getEmrManagedSlaveSecurityGroup() != null)\r\n        sb.append(\"EmrManagedSlaveSecurityGroup: \").append(getEmrManagedSlaveSecurityGroup()).append(\",\");\r\n    if (getServiceAccessSecurityGroup() != null)\r\n        sb.append(\"ServiceAccessSecurityGroup: \").append(getServiceAccessSecurityGroup()).append(\",\");\r\n    if (getAdditionalMasterSecurityGroups() != null)\r\n        sb.append(\"AdditionalMasterSecurityGroups: \").append(getAdditionalMasterSecurityGroups()).append(\",\");\r\n    if (getAdditionalSlaveSecurityGroups() != null)\r\n        sb.append(\"AdditionalSlaveSecurityGroups: \").append(getAdditionalSlaveSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.LoggerDefinitionVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggers() != null)\r\n        sb.append(\"Loggers: \").append(getLoggers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceTypeSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getWeightedCapacity() != null)\r\n        sb.append(\"WeightedCapacity: \").append(getWeightedCapacity()).append(\",\");\r\n    if (getBidPrice() != null)\r\n        sb.append(\"BidPrice: \").append(getBidPrice()).append(\",\");\r\n    if (getBidPriceAsPercentageOfOnDemandPrice() != null)\r\n        sb.append(\"BidPriceAsPercentageOfOnDemandPrice: \").append(getBidPriceAsPercentageOfOnDemandPrice()).append(\",\");\r\n    if (getConfigurations() != null)\r\n        sb.append(\"Configurations: \").append(getConfigurations()).append(\",\");\r\n    if (getEbsBlockDevices() != null)\r\n        sb.append(\"EbsBlockDevices: \").append(getEbsBlockDevices()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetLoggerDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggerDefinitionId() != null)\r\n        sb.append(\"LoggerDefinitionId: \").append(getLoggerDefinitionId()).append(\",\");\r\n    if (getLoggerDefinitionVersionId() != null)\r\n        sb.append(\"LoggerDefinitionVersionId: \").append(getLoggerDefinitionVersionId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListResourceDefinitionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListUsersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeElasticsearchInstanceTypeLimitsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getElasticsearchVersion() != null)\r\n        sb.append(\"ElasticsearchVersion: \").append(getElasticsearchVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.waiters.DescribeVaultFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeVaultResult apply(DescribeVaultRequest describeVaultRequest){\r\n    return client.describeVault(describeVaultRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListInvitationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInvitations() != null)\r\n        sb.append(\"Invitations: \").append(getInvitations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deletePolicyVersion",
	"Comment": "deletes the specified version from the specified managed policy.you cannot delete the default version from a policy using this api. to delete the default version from a policy,use deletepolicy. to find out which version of a policy is marked as the default version, uselistpolicyversions.for information about versions for managed policies, see versioning for managedpolicies in the iam user guide.",
	"Method": "DeletePolicyVersionResult deletePolicyVersion(DeletePolicyVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeletePolicyVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.describeAssessmentRuns",
	"Comment": "describes the assessment runs that are specified by the arns of the assessment runs.",
	"Method": "DescribeAssessmentRunsResult describeAssessmentRuns(DescribeAssessmentRunsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAssessmentRuns(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.createDeviceDefinitionVersion",
	"Comment": "creates a version of a device definition that has already been defined.",
	"Method": "CreateDeviceDefinitionVersionResult createDeviceDefinitionVersion(CreateDeviceDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDeviceDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.StepFactory.newRunHiveScriptStepVersioned",
	"Comment": "step that runs a hive script on your job flow using the specified hive version.",
	"Method": "HadoopJarStepConfig newRunHiveScriptStepVersioned(String script,String hiveVersion,String scriptArgs){\r\n    List<String> hiveArgs = new ArrayList<String>();\r\n    hiveArgs.add(\"--hive-versions\");\r\n    hiveArgs.add(hiveVersion);\r\n    hiveArgs.add(\"--run-hive-script\");\r\n    hiveArgs.add(\"--args\");\r\n    hiveArgs.add(\"-f\");\r\n    hiveArgs.add(script);\r\n    hiveArgs.addAll(Arrays.asList(scriptArgs));\r\n    return newHivePigStep(\"hive\", hiveArgs.toArray(new String[0]));\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Predicate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogical() != null)\r\n        sb.append(\"Logical: \").append(getLogical()).append(\",\");\r\n    if (getConditions() != null)\r\n        sb.append(\"Conditions: \").append(getConditions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.PartListElement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRangeInBytes() != null)\r\n        sb.append(\"RangeInBytes: \").append(getRangeInBytes()).append(\",\");\r\n    if (getSHA256TreeHash() != null)\r\n        sb.append(\"SHA256TreeHash: \").append(getSHA256TreeHash());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetContextKeysForPrincipalPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicySourceArn() != null)\r\n        sb.append(\"PolicySourceArn: \").append(getPolicySourceArn()).append(\",\");\r\n    if (getPolicyInputList() != null)\r\n        sb.append(\"PolicyInputList: \").append(getPolicyInputList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.VPCDerivedInfoStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.createResourceDefinitionVersion",
	"Comment": "creates a version of a resource definition that has already been defined.",
	"Method": "CreateResourceDefinitionVersionResult createResourceDefinitionVersion(CreateResourceDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateResourceDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreatePartitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getPartitionInput() != null)\r\n        sb.append(\"PartitionInput: \").append(getPartitionInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getConnectionInput() != null)\r\n        sb.append(\"ConnectionInput: \").append(getConnectionInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Crawler.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getClassifiers() != null)\r\n        sb.append(\"Classifiers: \").append(getClassifiers()).append(\",\");\r\n    if (getSchemaChangePolicy() != null)\r\n        sb.append(\"SchemaChangePolicy: \").append(getSchemaChangePolicy()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getTablePrefix() != null)\r\n        sb.append(\"TablePrefix: \").append(getTablePrefix()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getCrawlElapsedTime() != null)\r\n        sb.append(\"CrawlElapsedTime: \").append(getCrawlElapsedTime()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdated() != null)\r\n        sb.append(\"LastUpdated: \").append(getLastUpdated()).append(\",\");\r\n    if (getLastCrawl() != null)\r\n        sb.append(\"LastCrawl: \").append(getLastCrawl()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration()).append(\",\");\r\n    if (getCrawlerSecurityConfiguration() != null)\r\n        sb.append(\"CrawlerSecurityConfiguration: \").append(getCrawlerSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListFunctionDefinitionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefinitions() != null)\r\n        sb.append(\"Definitions: \").append(getDefinitions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.Action.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionType() != null)\r\n        sb.append(\"ActionType: \").append(getActionType()).append(\",\");\r\n    if (getAwsApiCallAction() != null)\r\n        sb.append(\"AwsApiCallAction: \").append(getAwsApiCallAction()).append(\",\");\r\n    if (getDnsRequestAction() != null)\r\n        sb.append(\"DnsRequestAction: \").append(getDnsRequestAction()).append(\",\");\r\n    if (getNetworkConnectionAction() != null)\r\n        sb.append(\"NetworkConnectionAction: \").append(getNetworkConnectionAction()).append(\",\");\r\n    if (getPortProbeAction() != null)\r\n        sb.append(\"PortProbeAction: \").append(getPortProbeAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.getResourceDefinition",
	"Comment": "retrieves information about a resource definition, including its creation time and latest version.",
	"Method": "GetResourceDefinitionResult getResourceDefinition(GetResourceDefinitionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetResourceDefinition(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ListTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeFleetCapacityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetIds() != null)\r\n        sb.append(\"FleetIds: \").append(getFleetIds()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteDeviceDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceDefinitionId() != null)\r\n        sb.append(\"DeviceDefinitionId: \").append(getDeviceDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteLoggerDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetAccountSummaryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSummaryMap() != null)\r\n        sb.append(\"SummaryMap: \").append(getSummaryMap());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.AmazonGameLiftClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.Core.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getSyncShadow() != null)\r\n        sb.append(\"SyncShadow: \").append(getSyncShadow()).append(\",\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.SetVisibleToAllUsersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListUsersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPathPrefix() != null)\r\n        sb.append(\"PathPrefix: \").append(getPathPrefix()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.describeElasticsearchDomain",
	"Comment": "returns domain configuration information about the specified elasticsearch domain, including the domain id,domain endpoint, and domain arn.",
	"Method": "DescribeElasticsearchDomainResult describeElasticsearchDomain(DescribeElasticsearchDomainRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeElasticsearchDomain(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.StopBulkDeploymentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBulkDeploymentId() != null)\r\n        sb.append(\"BulkDeploymentId: \").append(getBulkDeploymentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.modifyInstanceGroups",
	"Comment": "modifyinstancegroups modifies the number of nodes and configuration settings of an instance group. the inputparameters include the new target instance count for the group and the instance group id. the call will eithersucceed or fail atomically.",
	"Method": "ModifyInstanceGroupsResult modifyInstanceGroups(ModifyInstanceGroupsRequest request,ModifyInstanceGroupsResult modifyInstanceGroups){\r\n    return modifyInstanceGroups(new ModifyInstanceGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateGroupCertificateConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateAuthorityExpiryInMilliseconds() != null)\r\n        sb.append(\"CertificateAuthorityExpiryInMilliseconds: \").append(getCertificateAuthorityExpiryInMilliseconds()).append(\",\");\r\n    if (getCertificateExpiryInMilliseconds() != null)\r\n        sb.append(\"CertificateExpiryInMilliseconds: \").append(getCertificateExpiryInMilliseconds()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DeleteArchiveResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListPoliciesGrantingServiceAccessEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceNamespace() != null)\r\n        sb.append(\"ServiceNamespace: \").append(getServiceNamespace()).append(\",\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonglacierasync using the current builder configuration.",
	"Method": "AmazonGlacierAsync build(AwsAsyncClientParams params){\r\n    return new AmazonGlacierAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listServerCertificates",
	"Comment": "lists the server certificates stored in iam that have the specified path prefix. if none exist, the operationreturns an empty list.you can paginate the results using the maxitems and marker parameters.for more information about working with server certificates, see working with servercertificates in the iam user guide. this topic also includes a list of aws services that can use theserver certificates that you manage with iam.",
	"Method": "ListServerCertificatesResult listServerCertificates(ListServerCertificatesRequest request,ListServerCertificatesResult listServerCertificates){\r\n    return listServerCertificates(new ListServerCertificatesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetMappingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getSinks() != null)\r\n        sb.append(\"Sinks: \").append(getSinks()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListUserPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.UpgradeElasticsearchDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getTargetVersion() != null)\r\n        sb.append(\"TargetVersion: \").append(getTargetVersion()).append(\",\");\r\n    if (getPerformCheckOnly() != null)\r\n        sb.append(\"PerformCheckOnly: \").append(getPerformCheckOnly());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListEventSubscriptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateSampleFindingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.updateFindingsFeedback",
	"Comment": "marks specified amazon guardduty findings as useful or not useful.",
	"Method": "UpdateFindingsFeedbackResult updateFindingsFeedback(UpdateFindingsFeedbackRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateFindingsFeedback(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.createFunctionDefinitionVersion",
	"Comment": "creates a version of a lambda function definition that has already been defined.",
	"Method": "CreateFunctionDefinitionVersionResult createFunctionDefinitionVersion(CreateFunctionDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateFunctionDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DeleteVaultAccessPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateServiceSpecificCredentialResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceSpecificCredential() != null)\r\n        sb.append(\"ServiceSpecificCredential: \").append(getServiceSpecificCredential());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetBulkDeploymentStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBulkDeploymentMetrics() != null)\r\n        sb.append(\"BulkDeploymentMetrics: \").append(getBulkDeploymentMetrics()).append(\",\");\r\n    if (getBulkDeploymentStatus() != null)\r\n        sb.append(\"BulkDeploymentStatus: \").append(getBulkDeploymentStatus()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getErrorDetails() != null)\r\n        sb.append(\"ErrorDetails: \").append(getErrorDetails()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.AddTagsToVaultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.startTrigger",
	"Comment": "starts an existing trigger. see triggeringjobs for information about how different types of trigger are started.",
	"Method": "StartTriggerResult startTrigger(StartTriggerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartTrigger(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.TestEventPatternRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventPattern() != null)\r\n        sb.append(\"EventPattern: \").append(getEventPattern()).append(\",\");\r\n    if (getEvent() != null)\r\n        sb.append(\"Event: \").append(getEvent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateMatchmakingRuleSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleSet() != null)\r\n        sb.append(\"RuleSet: \").append(getRuleSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetInstanceProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceProfile() != null)\r\n        sb.append(\"InstanceProfile: \").append(getInstanceProfile());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListInstanceGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AssessmentTemplateFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamePattern() != null)\r\n        sb.append(\"NamePattern: \").append(getNamePattern()).append(\",\");\r\n    if (getDurationRange() != null)\r\n        sb.append(\"DurationRange: \").append(getDurationRange()).append(\",\");\r\n    if (getRulesPackageArns() != null)\r\n        sb.append(\"RulesPackageArns: \").append(getRulesPackageArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.listPipelines",
	"Comment": "the listpipelines operation gets a list of the pipelines associated with the current aws account.",
	"Method": "ListPipelinesResult listPipelines(ListPipelinesRequest request,ListPipelinesResult listPipelines){\r\n    return listPipelines(new ListPipelinesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateLoggerDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getInitialVersion() != null)\r\n        sb.append(\"InitialVersion: \").append(getInitialVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.CreateAcceleratorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccelerator() != null)\r\n        sb.append(\"Accelerator: \").append(getAccelerator());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ElasticsearchDomainStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainId() != null)\r\n        sb.append(\"DomainId: \").append(getDomainId()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getDeleted() != null)\r\n        sb.append(\"Deleted: \").append(getDeleted()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getEndpoints() != null)\r\n        sb.append(\"Endpoints: \").append(getEndpoints()).append(\",\");\r\n    if (getProcessing() != null)\r\n        sb.append(\"Processing: \").append(getProcessing()).append(\",\");\r\n    if (getUpgradeProcessing() != null)\r\n        sb.append(\"UpgradeProcessing: \").append(getUpgradeProcessing()).append(\",\");\r\n    if (getElasticsearchVersion() != null)\r\n        sb.append(\"ElasticsearchVersion: \").append(getElasticsearchVersion()).append(\",\");\r\n    if (getElasticsearchClusterConfig() != null)\r\n        sb.append(\"ElasticsearchClusterConfig: \").append(getElasticsearchClusterConfig()).append(\",\");\r\n    if (getEBSOptions() != null)\r\n        sb.append(\"EBSOptions: \").append(getEBSOptions()).append(\",\");\r\n    if (getAccessPolicies() != null)\r\n        sb.append(\"AccessPolicies: \").append(getAccessPolicies()).append(\",\");\r\n    if (getSnapshotOptions() != null)\r\n        sb.append(\"SnapshotOptions: \").append(getSnapshotOptions()).append(\",\");\r\n    if (getVPCOptions() != null)\r\n        sb.append(\"VPCOptions: \").append(getVPCOptions()).append(\",\");\r\n    if (getCognitoOptions() != null)\r\n        sb.append(\"CognitoOptions: \").append(getCognitoOptions()).append(\",\");\r\n    if (getEncryptionAtRestOptions() != null)\r\n        sb.append(\"EncryptionAtRestOptions: \").append(getEncryptionAtRestOptions()).append(\",\");\r\n    if (getNodeToNodeEncryptionOptions() != null)\r\n        sb.append(\"NodeToNodeEncryptionOptions: \").append(getNodeToNodeEncryptionOptions()).append(\",\");\r\n    if (getAdvancedOptions() != null)\r\n        sb.append(\"AdvancedOptions: \").append(getAdvancedOptions()).append(\",\");\r\n    if (getLogPublishingOptions() != null)\r\n        sb.append(\"LogPublishingOptions: \").append(getLogPublishingOptions()).append(\",\");\r\n    if (getServiceSoftwareOptions() != null)\r\n        sb.append(\"ServiceSoftwareOptions: \").append(getServiceSoftwareOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.AmazonFSxClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.AssociateServiceRoleToAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociatedAt() != null)\r\n        sb.append(\"AssociatedAt: \").append(getAssociatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetAccountAuthorizationDetailsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserDetailList() != null)\r\n        sb.append(\"UserDetailList: \").append(getUserDetailList()).append(\",\");\r\n    if (getGroupDetailList() != null)\r\n        sb.append(\"GroupDetailList: \").append(getGroupDetailList()).append(\",\");\r\n    if (getRoleDetailList() != null)\r\n        sb.append(\"RoleDetailList: \").append(getRoleDetailList()).append(\",\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listInstanceProfilesForRole",
	"Comment": "lists the instance profiles that have the specified associated iam role. if there are none, the operation returnsan empty list. for more information about instance profiles, go to about instance profiles.you can paginate the results using the maxitems and marker parameters.",
	"Method": "ListInstanceProfilesForRoleResult listInstanceProfilesForRole(ListInstanceProfilesForRoleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListInstanceProfilesForRole(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeAssessmentRunsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRuns() != null)\r\n        sb.append(\"AssessmentRuns: \").append(getAssessmentRuns()).append(\",\");\r\n    if (getFailedItems() != null)\r\n        sb.append(\"FailedItems: \").append(getFailedItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteMatchmakingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UpdateIPSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActivate() != null)\r\n        sb.append(\"Activate: \").append(getActivate()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getIpSetId() != null)\r\n        sb.append(\"IpSetId: \").append(getIpSetId()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteInstanceProfile",
	"Comment": "deletes the specified instance profile. the instance profile must not have an associated role.make sure that you do not have any amazon ec2 instances running with the instance profile you are about todelete. deleting a role or instance profile that is associated with a running instance will break anyapplications running on the instance.for more information about instance profiles, go to about instance profiles.",
	"Method": "DeleteInstanceProfileResult deleteInstanceProfile(DeleteInstanceProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteInstanceProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.DescribeRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getEventPattern() != null)\r\n        sb.append(\"EventPattern: \").append(getEventPattern()).append(\",\");\r\n    if (getScheduleExpression() != null)\r\n        sb.append(\"ScheduleExpression: \").append(getScheduleExpression()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getManagedBy() != null)\r\n        sb.append(\"ManagedBy: \").append(getManagedBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPermissionsBoundary() != null)\r\n        sb.append(\"PermissionsBoundary: \").append(getPermissionsBoundary()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeVpcPeeringAuthorizationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcPeeringAuthorizations() != null)\r\n        sb.append(\"VpcPeeringAuthorizations: \").append(getVpcPeeringAuthorizations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.attachUserPolicy",
	"Comment": "attaches the specified managed policy to the specified user.you use this api to attach a managed policy to a user. to embed an inline policy in a user, useputuserpolicy.for more information about policies, see managed policies andinline policies in the iam user guide.",
	"Method": "AttachUserPolicyResult attachUserPolicy(AttachUserPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAttachUserPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.SetVaultNotificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getVaultNotificationConfig() != null)\r\n        sb.append(\"VaultNotificationConfig: \").append(getVaultNotificationConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeRuntimeConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuntimeConfiguration() != null)\r\n        sb.append(\"RuntimeConfiguration: \").append(getRuntimeConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.getCredentialReportAsync",
	"Comment": "simplified method form for invoking the getcredentialreport operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetCredentialReportResult> getCredentialReportAsync(GetCredentialReportRequest request,java.util.concurrent.Future<GetCredentialReportResult> getCredentialReportAsync,GetCredentialReportRequest request,com.amazonaws.handlers.AsyncHandler<GetCredentialReportRequest, GetCredentialReportResult> asyncHandler,java.util.concurrent.Future<GetCredentialReportResult> getCredentialReportAsync,java.util.concurrent.Future<GetCredentialReportResult> getCredentialReportAsync,com.amazonaws.handlers.AsyncHandler<GetCredentialReportRequest, GetCredentialReportResult> asyncHandler){\r\n    return getCredentialReportAsync(new GetCredentialReportRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.listJobsByStatus",
	"Comment": "the listjobsbystatus operation gets a list of jobs that have a specified status. the response body contains oneelement for each job that satisfies the search criteria.",
	"Method": "ListJobsByStatusResult listJobsByStatus(ListJobsByStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListJobsByStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GameProperty.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.RegisterCrossAccountAccessRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.CompleteVaultLockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetFunctionDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionDefinitionId() != null)\r\n        sb.append(\"FunctionDefinitionId: \").append(getFunctionDefinitionId()).append(\",\");\r\n    if (getFunctionDefinitionVersionId() != null)\r\n        sb.append(\"FunctionDefinitionVersionId: \").append(getFunctionDefinitionVersionId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClientBuilder.build",
	"Comment": "construct a synchronous implementation of awselasticsearch using the current builder configuration.",
	"Method": "AWSElasticsearch build(AwsSyncClientParams params){\r\n    return new AWSElasticsearchClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteScalingPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutEventsResultEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventId() != null)\r\n        sb.append(\"EventId: \").append(getEventId()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.AmazonImportExportClient.getStatus",
	"Comment": "this operation returns information about a job, including where the job is in the processing pipeline, the statusof the results, and the signature value associated with the job. you can only return information about jobs youown.",
	"Method": "GetStatusResult getStatus(GetStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.CreateAssessmentTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTargetArn() != null)\r\n        sb.append(\"AssessmentTargetArn: \").append(getAssessmentTargetArn()).append(\",\");\r\n    if (getAssessmentTemplateName() != null)\r\n        sb.append(\"AssessmentTemplateName: \").append(getAssessmentTemplateName()).append(\",\");\r\n    if (getDurationInSeconds() != null)\r\n        sb.append(\"DurationInSeconds: \").append(getDurationInSeconds()).append(\",\");\r\n    if (getRulesPackageArns() != null)\r\n        sb.append(\"RulesPackageArns: \").append(getRulesPackageArns()).append(\",\");\r\n    if (getUserAttributesForFindings() != null)\r\n        sb.append(\"UserAttributesForFindings: \").append(getUserAttributesForFindings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.describeElasticsearchDomains",
	"Comment": "returns domain configuration information about the specified elasticsearch domains, including the domain id,domain endpoint, and domain arn.",
	"Method": "DescribeElasticsearchDomainsResult describeElasticsearchDomains(DescribeElasticsearchDomainsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeElasticsearchDomains(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.AudioParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodec() != null)\r\n        sb.append(\"Codec: \").append(getCodec()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate()).append(\",\");\r\n    if (getBitRate() != null)\r\n        sb.append(\"BitRate: \").append(getBitRate()).append(\",\");\r\n    if (getChannels() != null)\r\n        sb.append(\"Channels: \").append(getChannels()).append(\",\");\r\n    if (getAudioPackingMode() != null)\r\n        sb.append(\"AudioPackingMode: \").append(getAudioPackingMode()).append(\",\");\r\n    if (getCodecOptions() != null)\r\n        sb.append(\"CodecOptions: \").append(getCodecOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetMembersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountIds() != null)\r\n        sb.append(\"AccountIds: \").append(getAccountIds()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetAccountAuthorizationDetailsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeExclusionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExclusionArns() != null)\r\n        sb.append(\"ExclusionArns: \").append(getExclusionArns()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetUserDefinedFunctionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserDefinedFunctions() != null)\r\n        sb.append(\"UserDefinedFunctions: \").append(getUserDefinedFunctions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.StepFactory.newInstallPigStep",
	"Comment": "step that installs the default version of pig on your job flow.",
	"Method": "HadoopJarStepConfig newInstallPigStep(HadoopJarStepConfig newInstallPigStep,String pigVersions){\r\n    if (pigVersions != null && pigVersions.length > 0) {\r\n        return newHivePigStep(\"pig\", \"--install-pig\", \"--pig-versions\", StringUtils.join(\",\", pigVersions));\r\n    }\r\n    return newHivePigStep(\"pig\", \"--install-pig\", \"--pig-versions\", \"latest\");\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorClient.updateAcceleratorAttributes",
	"Comment": "update the attributes for an accelerator. to see an aws cli example of updating an accelerator to enable flowlogs, scroll down to example.",
	"Method": "UpdateAcceleratorAttributesResult updateAcceleratorAttributes(UpdateAcceleratorAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateAcceleratorAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Column.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.Position.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLine() != null)\r\n        sb.append(\"Line: \").append(getLine()).append(\",\");\r\n    if (getColumn() != null)\r\n        sb.append(\"Column: \").append(getColumn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.PutScalingPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getScalingAdjustment() != null)\r\n        sb.append(\"ScalingAdjustment: \").append(getScalingAdjustment()).append(\",\");\r\n    if (getScalingAdjustmentType() != null)\r\n        sb.append(\"ScalingAdjustmentType: \").append(getScalingAdjustmentType()).append(\",\");\r\n    if (getThreshold() != null)\r\n        sb.append(\"Threshold: \").append(getThreshold()).append(\",\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getEvaluationPeriods() != null)\r\n        sb.append(\"EvaluationPeriods: \").append(getEvaluationPeriods()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getPolicyType() != null)\r\n        sb.append(\"PolicyType: \").append(getPolicyType()).append(\",\");\r\n    if (getTargetConfiguration() != null)\r\n        sb.append(\"TargetConfiguration: \").append(getTargetConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.describeElasticsearchInstanceTypeLimits",
	"Comment": "describe elasticsearch limits for a given instancetype and elasticsearchversion. when modifying existing domain,specify thedomainnameto know what limits are supported for modifying.",
	"Method": "DescribeElasticsearchInstanceTypeLimitsResult describeElasticsearchInstanceTypeLimits(DescribeElasticsearchInstanceTypeLimitsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeElasticsearchInstanceTypeLimits(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListAttachedRolePoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getPathPrefix() != null)\r\n        sb.append(\"PathPrefix: \").append(getPathPrefix()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PutUserPermissionsBoundaryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPermissionsBoundary() != null)\r\n        sb.append(\"PermissionsBoundary: \").append(getPermissionsBoundary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetGroupPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PolicyUser.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StartGameSessionPlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacementId() != null)\r\n        sb.append(\"PlacementId: \").append(getPlacementId()).append(\",\");\r\n    if (getGameSessionQueueName() != null)\r\n        sb.append(\"GameSessionQueueName: \").append(getGameSessionQueueName()).append(\",\");\r\n    if (getGameProperties() != null)\r\n        sb.append(\"GameProperties: \").append(getGameProperties()).append(\",\");\r\n    if (getMaximumPlayerSessionCount() != null)\r\n        sb.append(\"MaximumPlayerSessionCount: \").append(getMaximumPlayerSessionCount()).append(\",\");\r\n    if (getGameSessionName() != null)\r\n        sb.append(\"GameSessionName: \").append(getGameSessionName()).append(\",\");\r\n    if (getPlayerLatencies() != null)\r\n        sb.append(\"PlayerLatencies: \").append(getPlayerLatencies()).append(\",\");\r\n    if (getDesiredPlayerSessions() != null)\r\n        sb.append(\"DesiredPlayerSessions: \").append(getDesiredPlayerSessions()).append(\",\");\r\n    if (getGameSessionData() != null)\r\n        sb.append(\"GameSessionData: \").append(getGameSessionData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.CompatibleVersionsMap.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceVersion() != null)\r\n        sb.append(\"SourceVersion: \").append(getSourceVersion()).append(\",\");\r\n    if (getTargetVersions() != null)\r\n        sb.append(\"TargetVersions: \").append(getTargetVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.UpdateEndpointGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointGroupArn() != null)\r\n        sb.append(\"EndpointGroupArn: \").append(getEndpointGroupArn()).append(\",\");\r\n    if (getEndpointConfigurations() != null)\r\n        sb.append(\"EndpointConfigurations: \").append(getEndpointConfigurations()).append(\",\");\r\n    if (getTrafficDialPercentage() != null)\r\n        sb.append(\"TrafficDialPercentage: \").append(getTrafficDialPercentage()).append(\",\");\r\n    if (getHealthCheckPort() != null)\r\n        sb.append(\"HealthCheckPort: \").append(getHealthCheckPort()).append(\",\");\r\n    if (getHealthCheckProtocol() != null)\r\n        sb.append(\"HealthCheckProtocol: \").append(getHealthCheckProtocol()).append(\",\");\r\n    if (getHealthCheckPath() != null)\r\n        sb.append(\"HealthCheckPath: \").append(getHealthCheckPath()).append(\",\");\r\n    if (getHealthCheckIntervalSeconds() != null)\r\n        sb.append(\"HealthCheckIntervalSeconds: \").append(getHealthCheckIntervalSeconds()).append(\",\");\r\n    if (getThresholdCount() != null)\r\n        sb.append(\"ThresholdCount: \").append(getThresholdCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteUserPolicy",
	"Comment": "deletes the specified inline policy that is embedded in the specified iam user.a user can also have managed policies attached to it. to detach a managed policy from a user, usedetachuserpolicy. for more information about policies, refer to managed policies andinline policies in the iam user guide.",
	"Method": "DeleteUserPolicyResult deleteUserPolicy(DeleteUserPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteUserPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DisassociateFromMasterAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.EndpointDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointId() != null)\r\n        sb.append(\"EndpointId: \").append(getEndpointId()).append(\",\");\r\n    if (getWeight() != null)\r\n        sb.append(\"Weight: \").append(getWeight()).append(\",\");\r\n    if (getHealthState() != null)\r\n        sb.append(\"HealthState: \").append(getHealthState()).append(\",\");\r\n    if (getHealthReason() != null)\r\n        sb.append(\"HealthReason: \").append(getHealthReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.TagRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreateJobOutput.withComposition",
	"Comment": "you can create an output file that contains an excerpt from the input file. this excerpt, called a clip, can comefrom the beginning, middle, or end of the file. the composition object contains settings for the clips that makeup an output file. for the current release, you can only specify settings for a single clip per output file. thecomposition object cannot be null.",
	"Method": "CreateJobOutput withComposition(Clip composition,CreateJobOutput withComposition,java.util.Collection<Clip> composition){\r\n    setComposition(composition);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.BootstrapActionDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBootstrapActionConfig() != null)\r\n        sb.append(\"BootstrapActionConfig: \").append(getBootstrapActionConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.IamInstanceProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.AccountDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateFunctionDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getDefaultConfig() != null)\r\n        sb.append(\"DefaultConfig: \").append(getDefaultConfig()).append(\",\");\r\n    if (getFunctionDefinitionId() != null)\r\n        sb.append(\"FunctionDefinitionId: \").append(getFunctionDefinitionId()).append(\",\");\r\n    if (getFunctions() != null)\r\n        sb.append(\"Functions: \").append(getFunctions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListOpenIDConnectProvidersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.CreateElasticsearchDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getElasticsearchVersion() != null)\r\n        sb.append(\"ElasticsearchVersion: \").append(getElasticsearchVersion()).append(\",\");\r\n    if (getElasticsearchClusterConfig() != null)\r\n        sb.append(\"ElasticsearchClusterConfig: \").append(getElasticsearchClusterConfig()).append(\",\");\r\n    if (getEBSOptions() != null)\r\n        sb.append(\"EBSOptions: \").append(getEBSOptions()).append(\",\");\r\n    if (getAccessPolicies() != null)\r\n        sb.append(\"AccessPolicies: \").append(getAccessPolicies()).append(\",\");\r\n    if (getSnapshotOptions() != null)\r\n        sb.append(\"SnapshotOptions: \").append(getSnapshotOptions()).append(\",\");\r\n    if (getVPCOptions() != null)\r\n        sb.append(\"VPCOptions: \").append(getVPCOptions()).append(\",\");\r\n    if (getCognitoOptions() != null)\r\n        sb.append(\"CognitoOptions: \").append(getCognitoOptions()).append(\",\");\r\n    if (getEncryptionAtRestOptions() != null)\r\n        sb.append(\"EncryptionAtRestOptions: \").append(getEncryptionAtRestOptions()).append(\",\");\r\n    if (getNodeToNodeEncryptionOptions() != null)\r\n        sb.append(\"NodeToNodeEncryptionOptions: \").append(getNodeToNodeEncryptionOptions()).append(\",\");\r\n    if (getAdvancedOptions() != null)\r\n        sb.append(\"AdvancedOptions: \").append(getAdvancedOptions()).append(\",\");\r\n    if (getLogPublishingOptions() != null)\r\n        sb.append(\"LogPublishingOptions: \").append(getLogPublishingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.ResetJobBookmarkRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutPermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal()).append(\",\");\r\n    if (getStatementId() != null)\r\n        sb.append(\"StatementId: \").append(getStatementId()).append(\",\");\r\n    if (getCondition() != null)\r\n        sb.append(\"Condition: \").append(getCondition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AttachUserPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.removeRoleFromInstanceProfile",
	"Comment": "removes the specified iam role from the specified ec2 instance profile.make sure that you do not have any amazon ec2 instances running with the role you are about to remove from theinstance profile. removing a role from an instance profile that is associated with a running instance might breakany applications running on the instance.for more information about iam roles, go to working with roles. for moreinformation about instance profiles, go to about instance profiles.",
	"Method": "RemoveRoleFromInstanceProfileResult removeRoleFromInstanceProfile(RemoveRoleFromInstanceProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveRoleFromInstanceProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeMatchmakingConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getRuleSetName() != null)\r\n        sb.append(\"RuleSetName: \").append(getRuleSetName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.createGroup",
	"Comment": "creates a new group.for information about the number of groups you can create, see limitations on iam entitiesin the iam user guide.",
	"Method": "CreateGroupResult createGroup(CreateGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.describeElasticsearchDomainConfig",
	"Comment": "provides cluster configuration information about the specified elasticsearch domain, such as the state, creationdate, update version, and update date for cluster options.",
	"Method": "DescribeElasticsearchDomainConfigResult describeElasticsearchDomainConfig(DescribeElasticsearchDomainConfigRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeElasticsearchDomainConfig(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreateJobPlaylist.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getOutputKeys() != null)\r\n        sb.append(\"OutputKeys: \").append(getOutputKeys()).append(\",\");\r\n    if (getHlsContentProtection() != null)\r\n        sb.append(\"HlsContentProtection: \").append(getHlsContentProtection()).append(\",\");\r\n    if (getPlayReadyDrm() != null)\r\n        sb.append(\"PlayReadyDrm: \").append(getPlayReadyDrm());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ClusterSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getNormalizedInstanceHours() != null)\r\n        sb.append(\"NormalizedInstanceHours: \").append(getNormalizedInstanceHours());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListCoreDefinitionVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CodeGenEdge.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget()).append(\",\");\r\n    if (getTargetParameter() != null)\r\n        sb.append(\"TargetParameter: \").append(getTargetParameter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListFindingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFindingIds() != null)\r\n        sb.append(\"FindingIds: \").append(getFindingIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetDeviceDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.GetStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getAPIVersion() != null)\r\n        sb.append(\"APIVersion: \").append(getAPIVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ScalingConstraints.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinCapacity() != null)\r\n        sb.append(\"MinCapacity: \").append(getMinCapacity()).append(\",\");\r\n    if (getMaxCapacity() != null)\r\n        sb.append(\"MaxCapacity: \").append(getMaxCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateCrawlerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListMFADevicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.Condition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEq() != null)\r\n        sb.append(\"Eq: \").append(getEq()).append(\",\");\r\n    if (getGt() != null)\r\n        sb.append(\"Gt: \").append(getGt()).append(\",\");\r\n    if (getGte() != null)\r\n        sb.append(\"Gte: \").append(getGte()).append(\",\");\r\n    if (getLt() != null)\r\n        sb.append(\"Lt: \").append(getLt()).append(\",\");\r\n    if (getLte() != null)\r\n        sb.append(\"Lte: \").append(getLte()).append(\",\");\r\n    if (getNeq() != null)\r\n        sb.append(\"Neq: \").append(getNeq());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ListPresetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAscending() != null)\r\n        sb.append(\"Ascending: \").append(getAscending()).append(\",\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchDeleteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.deleteAssessmentRun",
	"Comment": "deletes the assessment run that is specified by the arn of the assessment run.",
	"Method": "DeleteAssessmentRunResult deleteAssessmentRun(DeleteAssessmentRunRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAssessmentRun(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DisassociateMembersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountIds() != null)\r\n        sb.append(\"AccountIds: \").append(getAccountIds()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.ComplianceViolator.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getViolationReason() != null)\r\n        sb.append(\"ViolationReason: \").append(getViolationReason()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DeleteVaultNotificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.describeResourceGroups",
	"Comment": "describes the resource groups that are specified by the arns of the resource groups.",
	"Method": "DescribeResourceGroupsResult describeResourceGroups(DescribeResourceGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeResourceGroups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.PreviewAgentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAgentPreviews() != null)\r\n        sb.append(\"AgentPreviews: \").append(getAgentPreviews()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateFunctionDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.CreateAssessmentTargetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTargetArn() != null)\r\n        sb.append(\"AssessmentTargetArn: \").append(getAssessmentTargetArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DetachGroupPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.StepFactory.newEnableDebuggingStep",
	"Comment": "when ran as the first step in your job flow, enables the hadoop debuggingui in the aws management console.",
	"Method": "HadoopJarStepConfig newEnableDebuggingStep(){\r\n    return newScriptRunnerStep(\"s3://\" + bucket + \"/libs/state-pusher/0.1/fetch\");\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.createGroupCertificateAuthority",
	"Comment": "creates a ca for the group. if a ca already exists, it will rotate the existing ca.",
	"Method": "CreateGroupCertificateAuthorityResult createGroupCertificateAuthority(CreateGroupCertificateAuthorityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateGroupCertificateAuthority(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Segment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSegmentNumber() != null)\r\n        sb.append(\"SegmentNumber: \").append(getSegmentNumber()).append(\",\");\r\n    if (getTotalSegments() != null)\r\n        sb.append(\"TotalSegments: \").append(getTotalSegments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.AddTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN()).append(\",\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DetachUserPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteGameSessionQueueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CodeGenNodeArg.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getParam() != null)\r\n        sb.append(\"Param: \").append(getParam());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.CreateFileSystemFromBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getWindowsConfiguration() != null)\r\n        sb.append(\"WindowsConfiguration: \").append(getWindowsConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Action.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getArguments() != null)\r\n        sb.append(\"Arguments: \").append(getArguments()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getNotificationProperty() != null)\r\n        sb.append(\"NotificationProperty: \").append(getNotificationProperty()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteUser",
	"Comment": "deletes the specified iam user. the user must not belong to any groups or have any access keys, signingcertificates, mfa devices enabled for aws, or attached policies.",
	"Method": "DeleteUserResult deleteUser(DeleteUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetAccountPasswordPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListLoggerDefinitionVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggerDefinitionId() != null)\r\n        sb.append(\"LoggerDefinitionId: \").append(getLoggerDefinitionId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AddInstanceFleetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getInstanceFleetId() != null)\r\n        sb.append(\"InstanceFleetId: \").append(getInstanceFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.StepSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getConfig() != null)\r\n        sb.append(\"Config: \").append(getConfig()).append(\",\");\r\n    if (getActionOnFailure() != null)\r\n        sb.append(\"ActionOnFailure: \").append(getActionOnFailure()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteDevEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.SetDefaultPolicyVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreatePipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getInputBucket() != null)\r\n        sb.append(\"InputBucket: \").append(getInputBucket()).append(\",\");\r\n    if (getOutputBucket() != null)\r\n        sb.append(\"OutputBucket: \").append(getOutputBucket()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getAwsKmsKeyArn() != null)\r\n        sb.append(\"AwsKmsKeyArn: \").append(getAwsKmsKeyArn()).append(\",\");\r\n    if (getNotifications() != null)\r\n        sb.append(\"Notifications: \").append(getNotifications()).append(\",\");\r\n    if (getContentConfig() != null)\r\n        sb.append(\"ContentConfig: \").append(getContentConfig()).append(\",\");\r\n    if (getThumbnailConfig() != null)\r\n        sb.append(\"ThumbnailConfig: \").append(getThumbnailConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutTargetsResultEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.PlayerLatencyPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaximumIndividualPlayerLatencyMilliseconds() != null)\r\n        sb.append(\"MaximumIndividualPlayerLatencyMilliseconds: \").append(getMaximumIndividualPlayerLatencyMilliseconds()).append(\",\");\r\n    if (getPolicyDurationSeconds() != null)\r\n        sb.append(\"PolicyDurationSeconds: \").append(getPolicyDurationSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListSubscriptionDefinitionVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.EncryptionAtRestOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.StepExecutionStatusDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime()).append(\",\");\r\n    if (getStartDateTime() != null)\r\n        sb.append(\"StartDateTime: \").append(getStartDateTime()).append(\",\");\r\n    if (getEndDateTime() != null)\r\n        sb.append(\"EndDateTime: \").append(getEndDateTime()).append(\",\");\r\n    if (getLastStateChangeReason() != null)\r\n        sb.append(\"LastStateChangeReason: \").append(getLastStateChangeReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListGroupsForUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListRulesPackagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeFleetCapacityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetCapacity() != null)\r\n        sb.append(\"FleetCapacity: \").append(getFleetCapacity()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListSigningCertificatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.XMLClassifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getClassification() != null)\r\n        sb.append(\"Classification: \").append(getClassification()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdated() != null)\r\n        sb.append(\"LastUpdated: \").append(getLastUpdated()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getRowTag() != null)\r\n        sb.append(\"RowTag: \").append(getRowTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StartCrawlerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.deleteThreatIntelSet",
	"Comment": "deletes threatintelset specified by the threatintelset id.",
	"Method": "DeleteThreatIntelSetResult deleteThreatIntelSet(DeleteThreatIntelSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteThreatIntelSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.generateCredentialReportAsync",
	"Comment": "simplified method form for invoking the generatecredentialreport operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GenerateCredentialReportResult> generateCredentialReportAsync(GenerateCredentialReportRequest request,java.util.concurrent.Future<GenerateCredentialReportResult> generateCredentialReportAsync,GenerateCredentialReportRequest request,com.amazonaws.handlers.AsyncHandler<GenerateCredentialReportRequest, GenerateCredentialReportResult> asyncHandler,java.util.concurrent.Future<GenerateCredentialReportResult> generateCredentialReportAsync,java.util.concurrent.Future<GenerateCredentialReportResult> generateCredentialReportAsync,com.amazonaws.handlers.AsyncHandler<GenerateCredentialReportRequest, GenerateCredentialReportResult> asyncHandler){\r\n    return generateCredentialReportAsync(new GenerateCredentialReportRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.putUserPolicy",
	"Comment": "adds or updates an inline policy document that is embedded in the specified iam user.an iam user can also have a managed policy attached to it. to attach a managed policy to a user, useattachuserpolicy. to create a new managed policy, use createpolicy. for information about policies,see managed policiesand inline policies in the iam user guide.for information about limits on the number of inline policies that you can embed in a user, see limitations on iam entitiesin the iam user guide.because policy documents can be large, you should use post rather than get when callingputuserpolicy. for general information about using the query api with iam, go to making query requests in theiam user guide.",
	"Method": "PutUserPolicyResult putUserPolicy(PutUserPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutUserPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.TreeHashGenerator.calculateTreeHash",
	"Comment": "returns the hex encoded binary tree hash for the individual checksums\tgiven. the sums are assumed to have been generated from sequential 1mb\tportions of a larger file, with the possible exception of the last part,\twhich may be less than a full mb.",
	"Method": "String calculateTreeHash(File file,String calculateTreeHash,InputStream input,String calculateTreeHash,List<byte[]> checksums){\r\n    List<byte[]> hashes = new ArrayList<byte[]>();\r\n    hashes.addAll(checksums);\r\n    while (hashes.size() > 1) {\r\n        List<byte[]> treeHashes = new ArrayList<byte[]>();\r\n        for (int i = 0; i < hashes.size() / 2; i++) {\r\n            byte[] firstPart = hashes.get(2 * i);\r\n            byte[] secondPart = hashes.get(2 * i + 1);\r\n            byte[] concatenation = new byte[firstPart.length + secondPart.length];\r\n            System.arraycopy(firstPart, 0, concatenation, 0, firstPart.length);\r\n            System.arraycopy(secondPart, 0, concatenation, firstPart.length, secondPart.length);\r\n            try {\r\n                treeHashes.add(computeSHA256Hash(concatenation));\r\n            } catch (Exception e) {\r\n                throw new AmazonClientException(\"Unable to compute hash\", e);\r\n            }\r\n        }\r\n        if (hashes.size() % 2 == 1) {\r\n            treeHashes.add(hashes.get(hashes.size() - 1));\r\n        }\r\n        hashes = treeHashes;\r\n    }\r\n    return BinaryUtils.toHex(hashes.get(0));\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.SubscriptionDefinitionVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptions() != null)\r\n        sb.append(\"Subscriptions: \").append(getSubscriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.DeletePipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsClient.listRules",
	"Comment": "lists your amazon cloudwatch events rules. you can either list all the rules or you can provide a prefix to matchto the rule names.listrules does not list the targets of a rule. to see the targets associated with a rule, uselisttargetsbyrule.",
	"Method": "ListRulesResult listRules(ListRulesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListRules(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListDeploymentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.SerDeInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSerializationLibrary() != null)\r\n        sb.append(\"SerializationLibrary: \").append(getSerializationLibrary()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.HlsContentProtection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMethod() != null)\r\n        sb.append(\"Method: \").append(getMethod()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getKeyMd5() != null)\r\n        sb.append(\"KeyMd5: \").append(getKeyMd5()).append(\",\");\r\n    if (getInitializationVector() != null)\r\n        sb.append(\"InitializationVector: \").append(getInitializationVector()).append(\",\");\r\n    if (getLicenseAcquisitionUrl() != null)\r\n        sb.append(\"LicenseAcquisitionUrl: \").append(getLicenseAcquisitionUrl()).append(\",\");\r\n    if (getKeyStoragePolicy() != null)\r\n        sb.append(\"KeyStoragePolicy: \").append(getKeyStoragePolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceTypeConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getWeightedCapacity() != null)\r\n        sb.append(\"WeightedCapacity: \").append(getWeightedCapacity()).append(\",\");\r\n    if (getBidPrice() != null)\r\n        sb.append(\"BidPrice: \").append(getBidPrice()).append(\",\");\r\n    if (getBidPriceAsPercentageOfOnDemandPrice() != null)\r\n        sb.append(\"BidPriceAsPercentageOfOnDemandPrice: \").append(getBidPriceAsPercentageOfOnDemandPrice()).append(\",\");\r\n    if (getEbsConfiguration() != null)\r\n        sb.append(\"EbsConfiguration: \").append(getEbsConfiguration()).append(\",\");\r\n    if (getConfigurations() != null)\r\n        sb.append(\"Configurations: \").append(getConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListSubscriptionDefinitionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.ListTargetsByRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.EbsBlockDeviceConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeSpecification() != null)\r\n        sb.append(\"VolumeSpecification: \").append(getVolumeSpecification()).append(\",\");\r\n    if (getVolumesPerInstance() != null)\r\n        sb.append(\"VolumesPerInstance: \").append(getVolumesPerInstance());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateDeploymentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentArn() != null)\r\n        sb.append(\"DeploymentArn: \").append(getDeploymentArn()).append(\",\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Database.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLocationUri() != null)\r\n        sb.append(\"LocationUri: \").append(getLocationUri()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteOpenIDConnectProviderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOpenIDConnectProviderArn() != null)\r\n        sb.append(\"OpenIDConnectProviderArn: \").append(getOpenIDConnectProviderArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.JobOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getThumbnailPattern() != null)\r\n        sb.append(\"ThumbnailPattern: \").append(getThumbnailPattern()).append(\",\");\r\n    if (getThumbnailEncryption() != null)\r\n        sb.append(\"ThumbnailEncryption: \").append(getThumbnailEncryption()).append(\",\");\r\n    if (getRotate() != null)\r\n        sb.append(\"Rotate: \").append(getRotate()).append(\",\");\r\n    if (getPresetId() != null)\r\n        sb.append(\"PresetId: \").append(getPresetId()).append(\",\");\r\n    if (getSegmentDuration() != null)\r\n        sb.append(\"SegmentDuration: \").append(getSegmentDuration()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusDetail() != null)\r\n        sb.append(\"StatusDetail: \").append(getStatusDetail()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getWidth() != null)\r\n        sb.append(\"Width: \").append(getWidth()).append(\",\");\r\n    if (getHeight() != null)\r\n        sb.append(\"Height: \").append(getHeight()).append(\",\");\r\n    if (getFrameRate() != null)\r\n        sb.append(\"FrameRate: \").append(getFrameRate()).append(\",\");\r\n    if (getFileSize() != null)\r\n        sb.append(\"FileSize: \").append(getFileSize()).append(\",\");\r\n    if (getDurationMillis() != null)\r\n        sb.append(\"DurationMillis: \").append(getDurationMillis()).append(\",\");\r\n    if (getWatermarks() != null)\r\n        sb.append(\"Watermarks: \").append(getWatermarks()).append(\",\");\r\n    if (getAlbumArt() != null)\r\n        sb.append(\"AlbumArt: \").append(getAlbumArt()).append(\",\");\r\n    if (getComposition() != null)\r\n        sb.append(\"Composition: \").append(getComposition()).append(\",\");\r\n    if (getCaptions() != null)\r\n        sb.append(\"Captions: \").append(getCaptions()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getAppliedColorSpaceConversion() != null)\r\n        sb.append(\"AppliedColorSpaceConversion: \").append(getAppliedColorSpaceConversion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineId() != null)\r\n        sb.append(\"PipelineId: \").append(getPipelineId()).append(\",\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput()).append(\",\");\r\n    if (getInputs() != null)\r\n        sb.append(\"Inputs: \").append(getInputs()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(getOutput()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs()).append(\",\");\r\n    if (getOutputKeyPrefix() != null)\r\n        sb.append(\"OutputKeyPrefix: \").append(getOutputKeyPrefix()).append(\",\");\r\n    if (getPlaylists() != null)\r\n        sb.append(\"Playlists: \").append(getPlaylists()).append(\",\");\r\n    if (getUserMetadata() != null)\r\n        sb.append(\"UserMetadata: \").append(getUserMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateGroupVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getConnectorDefinitionVersionArn() != null)\r\n        sb.append(\"ConnectorDefinitionVersionArn: \").append(getConnectorDefinitionVersionArn()).append(\",\");\r\n    if (getCoreDefinitionVersionArn() != null)\r\n        sb.append(\"CoreDefinitionVersionArn: \").append(getCoreDefinitionVersionArn()).append(\",\");\r\n    if (getDeviceDefinitionVersionArn() != null)\r\n        sb.append(\"DeviceDefinitionVersionArn: \").append(getDeviceDefinitionVersionArn()).append(\",\");\r\n    if (getFunctionDefinitionVersionArn() != null)\r\n        sb.append(\"FunctionDefinitionVersionArn: \").append(getFunctionDefinitionVersionArn()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getLoggerDefinitionVersionArn() != null)\r\n        sb.append(\"LoggerDefinitionVersionArn: \").append(getLoggerDefinitionVersionArn()).append(\",\");\r\n    if (getResourceDefinitionVersionArn() != null)\r\n        sb.append(\"ResourceDefinitionVersionArn: \").append(getResourceDefinitionVersionArn()).append(\",\");\r\n    if (getSubscriptionDefinitionVersionArn() != null)\r\n        sb.append(\"SubscriptionDefinitionVersionArn: \").append(getSubscriptionDefinitionVersionArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.CancelJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccess() != null)\r\n        sb.append(\"Success: \").append(getSuccess());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetRolePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.UpgradeElasticsearchDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getTargetVersion() != null)\r\n        sb.append(\"TargetVersion: \").append(getTargetVersion()).append(\",\");\r\n    if (getPerformCheckOnly() != null)\r\n        sb.append(\"PerformCheckOnly: \").append(getPerformCheckOnly());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetJobRunRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getRunId() != null)\r\n        sb.append(\"RunId: \").append(getRunId()).append(\",\");\r\n    if (getPredecessorsIncluded() != null)\r\n        sb.append(\"PredecessorsIncluded: \").append(getPredecessorsIncluded());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AttachedPermissionsBoundary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPermissionsBoundaryType() != null)\r\n        sb.append(\"PermissionsBoundaryType: \").append(getPermissionsBoundaryType()).append(\",\");\r\n    if (getPermissionsBoundaryArn() != null)\r\n        sb.append(\"PermissionsBoundaryArn: \").append(getPermissionsBoundaryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.UpdatePipelineStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.HadoopJarStepConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProperties() != null)\r\n        sb.append(\"Properties: \").append(getProperties()).append(\",\");\r\n    if (getJar() != null)\r\n        sb.append(\"Jar: \").append(getJar()).append(\",\");\r\n    if (getMainClass() != null)\r\n        sb.append(\"MainClass: \").append(getMainClass()).append(\",\");\r\n    if (getArgs() != null)\r\n        sb.append(\"Args: \").append(getArgs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonelastictranscoder using the current builder configuration.",
	"Method": "AmazonElasticTranscoder build(AwsSyncClientParams params){\r\n    return new AmazonElasticTranscoderClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ConnectorDefinitionVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectors() != null)\r\n        sb.append(\"Connectors: \").append(getConnectors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.getThreatIntelSet",
	"Comment": "retrieves the threatintelset that is specified by the threatintelset id.",
	"Method": "GetThreatIntelSetResult getThreatIntelSet(GetThreatIntelSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetThreatIntelSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ClusterTimeline.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime()).append(\",\");\r\n    if (getReadyDateTime() != null)\r\n        sb.append(\"ReadyDateTime: \").append(getReadyDateTime()).append(\",\");\r\n    if (getEndDateTime() != null)\r\n        sb.append(\"EndDateTime: \").append(getEndDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateFunctionDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteRolePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.PolicyComplianceDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyOwner() != null)\r\n        sb.append(\"PolicyOwner: \").append(getPolicyOwner()).append(\",\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getMemberAccount() != null)\r\n        sb.append(\"MemberAccount: \").append(getMemberAccount()).append(\",\");\r\n    if (getViolators() != null)\r\n        sb.append(\"Violators: \").append(getViolators()).append(\",\");\r\n    if (getEvaluationLimitExceeded() != null)\r\n        sb.append(\"EvaluationLimitExceeded: \").append(getEvaluationLimitExceeded()).append(\",\");\r\n    if (getExpiredAt() != null)\r\n        sb.append(\"ExpiredAt: \").append(getExpiredAt()).append(\",\");\r\n    if (getIssueInfoMap() != null)\r\n        sb.append(\"IssueInfoMap: \").append(getIssueInfoMap());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.S3Location.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.addTagsToVault",
	"Comment": "this operation adds the specified tags to a vault. each tag is composed of a key and a value. each vault can haveup to 10 tags. if your request would cause the tag limit for the vault to be exceeded, the operation throws thelimitexceededexception error. if a tag already exists on the vault under a specified key, theexisting key value will be overwritten. for more information about tags, see tagging amazon glacier resources.",
	"Method": "AddTagsToVaultResult addTagsToVault(AddTagsToVaultRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddTagsToVault(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.CreateAcceleratorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getIpAddressType() != null)\r\n        sb.append(\"IpAddressType: \").append(getIpAddressType()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getIdempotencyToken() != null)\r\n        sb.append(\"IdempotencyToken: \").append(getIdempotencyToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.listMembers",
	"Comment": "lists details about all member accounts for the current guardduty master account.",
	"Method": "ListMembersResult listMembers(ListMembersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListMembers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTableVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableVersion() != null)\r\n        sb.append(\"TableVersion: \").append(getTableVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.TestRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccess() != null)\r\n        sb.append(\"Success: \").append(getSuccess()).append(\",\");\r\n    if (getMessages() != null)\r\n        sb.append(\"Messages: \").append(getMessages());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListSAMLProvidersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.Backup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId()).append(\",\");\r\n    if (getLifecycle() != null)\r\n        sb.append(\"Lifecycle: \").append(getLifecycle()).append(\",\");\r\n    if (getFailureDetails() != null)\r\n        sb.append(\"FailureDetails: \").append(getFailureDetails()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getProgressPercent() != null)\r\n        sb.append(\"ProgressPercent: \").append(getProgressPercent()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getFileSystem() != null)\r\n        sb.append(\"FileSystem: \").append(getFileSystem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateInstanceProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceProfileName() != null)\r\n        sb.append(\"InstanceProfileName: \").append(getInstanceProfileName()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.AudioCodecOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProfile() != null)\r\n        sb.append(\"Profile: \").append(getProfile()).append(\",\");\r\n    if (getBitDepth() != null)\r\n        sb.append(\"BitDepth: \").append(getBitDepth()).append(\",\");\r\n    if (getBitOrder() != null)\r\n        sb.append(\"BitOrder: \").append(getBitOrder()).append(\",\");\r\n    if (getSigned() != null)\r\n        sb.append(\"Signed: \").append(getSigned());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchGetPartitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getPartitionsToGet() != null)\r\n        sb.append(\"PartitionsToGet: \").append(getPartitionsToGet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnection() != null)\r\n        sb.append(\"Connection: \").append(getConnection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetFunctionDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(getDefinition()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateServiceLinkedRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.CreateVaultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.createUser",
	"Comment": "creates a new iam user for your aws account.for information about limitations on the number of iam users you can create, see limitations on iam entitiesin the iam user guide.",
	"Method": "CreateUserResult createUser(CreateUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeEventAggregatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventAggregates() != null)\r\n        sb.append(\"EventAggregates: \").append(getEventAggregates()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DeleteAcceleratorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getConnectionName() != null)\r\n        sb.append(\"ConnectionName: \").append(getConnectionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.startAssessmentRun",
	"Comment": "starts the assessment run specified by the arn of the assessment template. for this api to function properly, youmust not exceed the limit of running up to 500 concurrent agents per aws account.",
	"Method": "StartAssessmentRunResult startAssessmentRun(StartAssessmentRunRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartAssessmentRun(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.OptionStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getUpdateDate() != null)\r\n        sb.append(\"UpdateDate: \").append(getUpdateDate()).append(\",\");\r\n    if (getUpdateVersion() != null)\r\n        sb.append(\"UpdateVersion: \").append(getUpdateVersion()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getPendingDeletion() != null)\r\n        sb.append(\"PendingDeletion: \").append(getPendingDeletion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getAssumeRolePolicyDocument() != null)\r\n        sb.append(\"AssumeRolePolicyDocument: \").append(getAssumeRolePolicyDocument()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getMaxSessionDuration() != null)\r\n        sb.append(\"MaxSessionDuration: \").append(getMaxSessionDuration()).append(\",\");\r\n    if (getPermissionsBoundary() != null)\r\n        sb.append(\"PermissionsBoundary: \").append(getPermissionsBoundary()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListSecurityConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PolicyGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreatePlayerSessionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlayerSession() != null)\r\n        sb.append(\"PlayerSession: \").append(getPlayerSession());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateLoggerDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.RemoveTagsFromVaultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDataCatalogEncryptionSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataCatalogEncryptionSettings() != null)\r\n        sb.append(\"DataCatalogEncryptionSettings: \").append(getDataCatalogEncryptionSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleArn() != null)\r\n        sb.append(\"RuleArn: \").append(getRuleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteClassifierResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.Logger.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComponent() != null)\r\n        sb.append(\"Component: \").append(getComponent()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLevel() != null)\r\n        sb.append(\"Level: \").append(getLevel()).append(\",\");\r\n    if (getSpace() != null)\r\n        sb.append(\"Space: \").append(getSpace()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetCrawlerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.Device.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getSyncShadow() != null)\r\n        sb.append(\"SyncShadow: \").append(getSyncShadow()).append(\",\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.RequestUploadCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuildId() != null)\r\n        sb.append(\"BuildId: \").append(getBuildId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.RemoveTargetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRule() != null)\r\n        sb.append(\"Rule: \").append(getRule()).append(\",\");\r\n    if (getIds() != null)\r\n        sb.append(\"Ids: \").append(getIds()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.waiters.AmazonElasticMapReduceWaiters.clusterTerminated",
	"Comment": "builds a clusterterminated waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeClusterRequest> clusterTerminated(){\r\n    return new WaiterBuilder<DescribeClusterRequest, DescribeClusterResult>().withSdkFunction(new DescribeClusterFunction(client)).withAcceptors(new ClusterTerminated.IsTERMINATEDMatcher(), new ClusterTerminated.IsTERMINATED_WITH_ERRORSMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.ImportCatalogToGlueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listOpenIDConnectProvidersAsync",
	"Comment": "simplified method form for invoking the listopenidconnectproviders operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListOpenIDConnectProvidersResult> listOpenIDConnectProvidersAsync(ListOpenIDConnectProvidersRequest request,java.util.concurrent.Future<ListOpenIDConnectProvidersResult> listOpenIDConnectProvidersAsync,ListOpenIDConnectProvidersRequest request,com.amazonaws.handlers.AsyncHandler<ListOpenIDConnectProvidersRequest, ListOpenIDConnectProvidersResult> asyncHandler,java.util.concurrent.Future<ListOpenIDConnectProvidersResult> listOpenIDConnectProvidersAsync,java.util.concurrent.Future<ListOpenIDConnectProvidersResult> listOpenIDConnectProvidersAsync,com.amazonaws.handlers.AsyncHandler<ListOpenIDConnectProvidersRequest, ListOpenIDConnectProvidersResult> asyncHandler){\r\n    return listOpenIDConnectProvidersAsync(new ListOpenIDConnectProvidersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UntagRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.TimeSpan.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListDeviceDefinitionVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceFleetModifyConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceFleetId() != null)\r\n        sb.append(\"InstanceFleetId: \").append(getInstanceFleetId()).append(\",\");\r\n    if (getTargetOnDemandCapacity() != null)\r\n        sb.append(\"TargetOnDemandCapacity: \").append(getTargetOnDemandCapacity()).append(\",\");\r\n    if (getTargetSpotCapacity() != null)\r\n        sb.append(\"TargetSpotCapacity: \").append(getTargetSpotCapacity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Predecessor.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getRunId() != null)\r\n        sb.append(\"RunId: \").append(getRunId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.KinesisParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPartitionKeyPath() != null)\r\n        sb.append(\"PartitionKeyPath: \").append(getPartitionKeyPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.EventSubscription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvent() != null)\r\n        sb.append(\"Event: \").append(getEvent()).append(\",\");\r\n    if (getSubscribedAt() != null)\r\n        sb.append(\"SubscribedAt: \").append(getSubscribedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StartCrawlerScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StartMatchBackfillResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMatchmakingTicket() != null)\r\n        sb.append(\"MatchmakingTicket: \").append(getMatchmakingTicket());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJob() != null)\r\n        sb.append(\"Job: \").append(getJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.SearchGameSessionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessions() != null)\r\n        sb.append(\"GameSessions: \").append(getGameSessions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.waiters.AmazonGlacierWaiters.vaultNotExists",
	"Comment": "builds a vaultnotexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVaultRequest> vaultNotExists(){\r\n    return new WaiterBuilder<DescribeVaultRequest, DescribeVaultResult>().withSdkFunction(new DescribeVaultFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor(WaiterState.RETRY), new VaultNotExists.IsResourceNotFoundExceptionMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(15), new FixedDelayStrategy(3))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateBuildRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getStorageLocation() != null)\r\n        sb.append(\"StorageLocation: \").append(getStorageLocation()).append(\",\");\r\n    if (getOperatingSystem() != null)\r\n        sb.append(\"OperatingSystem: \").append(getOperatingSystem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listSAMLProvidersAsync",
	"Comment": "simplified method form for invoking the listsamlproviders operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListSAMLProvidersResult> listSAMLProvidersAsync(ListSAMLProvidersRequest request,java.util.concurrent.Future<ListSAMLProvidersResult> listSAMLProvidersAsync,ListSAMLProvidersRequest request,com.amazonaws.handlers.AsyncHandler<ListSAMLProvidersRequest, ListSAMLProvidersResult> asyncHandler,java.util.concurrent.Future<ListSAMLProvidersResult> listSAMLProvidersAsync,java.util.concurrent.Future<ListSAMLProvidersResult> listSAMLProvidersAsync,com.amazonaws.handlers.AsyncHandler<ListSAMLProvidersRequest, ListSAMLProvidersResult> asyncHandler){\r\n    return listSAMLProvidersAsync(new ListSAMLProvidersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteDevEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListOpenIDConnectProvidersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOpenIDConnectProviderList() != null)\r\n        sb.append(\"OpenIDConnectProviderList: \").append(getOpenIDConnectProviderList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.UploadMultipartPartRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getUploadId() != null)\r\n        sb.append(\"UploadId: \").append(getUploadId()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getRange() != null)\r\n        sb.append(\"Range: \").append(getRange()).append(\",\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteMatchmakingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listSigningCertificates",
	"Comment": "returns information about the signing certificates associated with the specified iam user. if there none exists,the operation returns an empty list.although each user is limited to a small number of signing certificates, you can still paginate the results usingthe maxitems and marker parameters.if the username field is not specified, the user name is determined implicitly based on the awsaccess key id used to sign the request for this api. this operation works for access keys under the aws account.consequently, you can use this operation to manage aws account root user credentials even if the aws account hasno associated users.",
	"Method": "ListSigningCertificatesResult listSigningCertificates(ListSigningCertificatesRequest request,ListSigningCertificatesResult listSigningCertificates){\r\n    return listSigningCertificates(new ListSigningCertificatesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetServiceRoleForAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociatedAt() != null)\r\n        sb.append(\"AssociatedAt: \").append(getAssociatedAt()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateFleetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetAttributes() != null)\r\n        sb.append(\"FleetAttributes: \").append(getFleetAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetFunctionDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionDefinitionId() != null)\r\n        sb.append(\"FunctionDefinitionId: \").append(getFunctionDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ResolveAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListFunctionDefinitionVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.RemoveRoleFromInstanceProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.untagUser",
	"Comment": "removes the specified tags from the user. for more information about tagging, see tagging iam identities in the iam userguide.",
	"Method": "UntagUserResult untagUser(UntagUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUntagUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.AmazonImportExportAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListStepsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getStepStates() != null)\r\n        sb.append(\"StepStates: \").append(getStepStates()).append(\",\");\r\n    if (getStepIds() != null)\r\n        sb.append(\"StepIds: \").append(getStepIds()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DesiredPlayerSession.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlayerId() != null)\r\n        sb.append(\"PlayerId: \").append(getPlayerId()).append(\",\");\r\n    if (getPlayerData() != null)\r\n        sb.append(\"PlayerData: \").append(getPlayerData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ListAliasesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliases() != null)\r\n        sb.append(\"Aliases: \").append(getAliases()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateConnectivityInfoRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectivityInfo() != null)\r\n        sb.append(\"ConnectivityInfo: \").append(getConnectivityInfo()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateGroupCertificateAuthorityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DeleteFileSystemWindowsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFinalBackupId() != null)\r\n        sb.append(\"FinalBackupId: \").append(getFinalBackupId()).append(\",\");\r\n    if (getFinalBackupTags() != null)\r\n        sb.append(\"FinalBackupTags: \").append(getFinalBackupTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ListJobsByStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getAscending() != null)\r\n        sb.append(\"Ascending: \").append(getAscending()).append(\",\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.StepFactory.newRunHiveScriptStep",
	"Comment": "step that runs a hive script on your job flow using the default hive version.",
	"Method": "HadoopJarStepConfig newRunHiveScriptStep(String script,String args){\r\n    return newRunHiveScriptStepVersioned(script, \"latest\", args);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listInstanceProfilesAsync",
	"Comment": "simplified method form for invoking the listinstanceprofiles operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListInstanceProfilesResult> listInstanceProfilesAsync(ListInstanceProfilesRequest request,java.util.concurrent.Future<ListInstanceProfilesResult> listInstanceProfilesAsync,ListInstanceProfilesRequest request,com.amazonaws.handlers.AsyncHandler<ListInstanceProfilesRequest, ListInstanceProfilesResult> asyncHandler,java.util.concurrent.Future<ListInstanceProfilesResult> listInstanceProfilesAsync,java.util.concurrent.Future<ListInstanceProfilesResult> listInstanceProfilesAsync,com.amazonaws.handlers.AsyncHandler<ListInstanceProfilesRequest, ListInstanceProfilesResult> asyncHandler){\r\n    return listInstanceProfilesAsync(new ListInstanceProfilesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.GetComplianceDetailRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getMemberAccount() != null)\r\n        sb.append(\"MemberAccount: \").append(getMemberAccount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListVaultsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVaultList() != null)\r\n        sb.append(\"VaultList: \").append(getVaultList()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listPoliciesAsync",
	"Comment": "simplified method form for invoking the listpolicies operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListPoliciesResult> listPoliciesAsync(ListPoliciesRequest request,java.util.concurrent.Future<ListPoliciesResult> listPoliciesAsync,ListPoliciesRequest request,com.amazonaws.handlers.AsyncHandler<ListPoliciesRequest, ListPoliciesResult> asyncHandler,java.util.concurrent.Future<ListPoliciesResult> listPoliciesAsync,java.util.concurrent.Future<ListPoliciesResult> listPoliciesAsync,com.amazonaws.handlers.AsyncHandler<ListPoliciesRequest, ListPoliciesResult> asyncHandler){\r\n    return listPoliciesAsync(new ListPoliciesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Thumbnails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getInterval() != null)\r\n        sb.append(\"Interval: \").append(getInterval()).append(\",\");\r\n    if (getResolution() != null)\r\n        sb.append(\"Resolution: \").append(getResolution()).append(\",\");\r\n    if (getAspectRatio() != null)\r\n        sb.append(\"AspectRatio: \").append(getAspectRatio()).append(\",\");\r\n    if (getMaxWidth() != null)\r\n        sb.append(\"MaxWidth: \").append(getMaxWidth()).append(\",\");\r\n    if (getMaxHeight() != null)\r\n        sb.append(\"MaxHeight: \").append(getMaxHeight()).append(\",\");\r\n    if (getSizingPolicy() != null)\r\n        sb.append(\"SizingPolicy: \").append(getSizingPolicy()).append(\",\");\r\n    if (getPaddingPolicy() != null)\r\n        sb.append(\"PaddingPolicy: \").append(getPaddingPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.PutResourcePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyHash() != null)\r\n        sb.append(\"PolicyHash: \").append(getPolicyHash());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CancelJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceFleetTimeline.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime()).append(\",\");\r\n    if (getReadyDateTime() != null)\r\n        sb.append(\"ReadyDateTime: \").append(getReadyDateTime()).append(\",\");\r\n    if (getEndDateTime() != null)\r\n        sb.append(\"EndDateTime: \").append(getEndDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.SetTerminationProtectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobFlowIds() != null)\r\n        sb.append(\"JobFlowIds: \").append(getJobFlowIds()).append(\",\");\r\n    if (getTerminationProtected() != null)\r\n        sb.append(\"TerminationProtected: \").append(getTerminationProtected());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.Cluster.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEc2InstanceAttributes() != null)\r\n        sb.append(\"Ec2InstanceAttributes: \").append(getEc2InstanceAttributes()).append(\",\");\r\n    if (getInstanceCollectionType() != null)\r\n        sb.append(\"InstanceCollectionType: \").append(getInstanceCollectionType()).append(\",\");\r\n    if (getLogUri() != null)\r\n        sb.append(\"LogUri: \").append(getLogUri()).append(\",\");\r\n    if (getRequestedAmiVersion() != null)\r\n        sb.append(\"RequestedAmiVersion: \").append(getRequestedAmiVersion()).append(\",\");\r\n    if (getRunningAmiVersion() != null)\r\n        sb.append(\"RunningAmiVersion: \").append(getRunningAmiVersion()).append(\",\");\r\n    if (getReleaseLabel() != null)\r\n        sb.append(\"ReleaseLabel: \").append(getReleaseLabel()).append(\",\");\r\n    if (getAutoTerminate() != null)\r\n        sb.append(\"AutoTerminate: \").append(getAutoTerminate()).append(\",\");\r\n    if (getTerminationProtected() != null)\r\n        sb.append(\"TerminationProtected: \").append(getTerminationProtected()).append(\",\");\r\n    if (getVisibleToAllUsers() != null)\r\n        sb.append(\"VisibleToAllUsers: \").append(getVisibleToAllUsers()).append(\",\");\r\n    if (getApplications() != null)\r\n        sb.append(\"Applications: \").append(getApplications()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getNormalizedInstanceHours() != null)\r\n        sb.append(\"NormalizedInstanceHours: \").append(getNormalizedInstanceHours()).append(\",\");\r\n    if (getMasterPublicDnsName() != null)\r\n        sb.append(\"MasterPublicDnsName: \").append(getMasterPublicDnsName()).append(\",\");\r\n    if (getConfigurations() != null)\r\n        sb.append(\"Configurations: \").append(getConfigurations()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration()).append(\",\");\r\n    if (getAutoScalingRole() != null)\r\n        sb.append(\"AutoScalingRole: \").append(getAutoScalingRole()).append(\",\");\r\n    if (getScaleDownBehavior() != null)\r\n        sb.append(\"ScaleDownBehavior: \").append(getScaleDownBehavior()).append(\",\");\r\n    if (getCustomAmiId() != null)\r\n        sb.append(\"CustomAmiId: \").append(getCustomAmiId()).append(\",\");\r\n    if (getEbsRootVolumeSize() != null)\r\n        sb.append(\"EbsRootVolumeSize: \").append(getEbsRootVolumeSize()).append(\",\");\r\n    if (getRepoUpgradeOnBoot() != null)\r\n        sb.append(\"RepoUpgradeOnBoot: \").append(getRepoUpgradeOnBoot()).append(\",\");\r\n    if (getKerberosAttributes() != null)\r\n        sb.append(\"KerberosAttributes: \").append(getKerberosAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.transfer.ArchiveTransferManagerBuilder.withGlacierClient",
	"Comment": "set the client for uploading and downloading data to and from amazon glacier.",
	"Method": "ArchiveTransferManagerBuilder withGlacierClient(AmazonGlacier glacierClient){\r\n    setGlacierClient(glacierClient);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.UpdatePipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getInputBucket() != null)\r\n        sb.append(\"InputBucket: \").append(getInputBucket()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getAwsKmsKeyArn() != null)\r\n        sb.append(\"AwsKmsKeyArn: \").append(getAwsKmsKeyArn()).append(\",\");\r\n    if (getNotifications() != null)\r\n        sb.append(\"Notifications: \").append(getNotifications()).append(\",\");\r\n    if (getContentConfig() != null)\r\n        sb.append(\"ContentConfig: \").append(getContentConfig()).append(\",\");\r\n    if (getThumbnailConfig() != null)\r\n        sb.append(\"ThumbnailConfig: \").append(getThumbnailConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.SqsParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageGroupId() != null)\r\n        sb.append(\"MessageGroupId: \").append(getMessageGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateGameSessionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId()).append(\",\");\r\n    if (getMaximumPlayerSessionCount() != null)\r\n        sb.append(\"MaximumPlayerSessionCount: \").append(getMaximumPlayerSessionCount()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPlayerSessionCreationPolicy() != null)\r\n        sb.append(\"PlayerSessionCreationPolicy: \").append(getPlayerSessionCreationPolicy()).append(\",\");\r\n    if (getProtectionPolicy() != null)\r\n        sb.append(\"ProtectionPolicy: \").append(getProtectionPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.DetectedProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWidth() != null)\r\n        sb.append(\"Width: \").append(getWidth()).append(\",\");\r\n    if (getHeight() != null)\r\n        sb.append(\"Height: \").append(getHeight()).append(\",\");\r\n    if (getFrameRate() != null)\r\n        sb.append(\"FrameRate: \").append(getFrameRate()).append(\",\");\r\n    if (getFileSize() != null)\r\n        sb.append(\"FileSize: \").append(getFileSize()).append(\",\");\r\n    if (getDurationMillis() != null)\r\n        sb.append(\"DurationMillis: \").append(getDurationMillis());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetConnectorDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(getDefinition()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetConnectionsFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMatchCriteria() != null)\r\n        sb.append(\"MatchCriteria: \").append(getMatchCriteria()).append(\",\");\r\n    if (getConnectionType() != null)\r\n        sb.append(\"ConnectionType: \").append(getConnectionType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteBuildResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetLoggerDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDevEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevEndpoints() != null)\r\n        sb.append(\"DevEndpoints: \").append(getDevEndpoints()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.spi.security.TLSArtifacts.getTrustedCertificates",
	"Comment": "gets the trusted ca certificates in the tlsartifacts object.",
	"Method": "List<Certificate> getTrustedCertificates(){\r\n    return trustedCertificates;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.RemoveTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListGroupVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.listBulkDeploymentDetailedReports",
	"Comment": "gets a paginated list of the deployments that have been started in a bulk deployment operation, and their currentdeployment status.",
	"Method": "ListBulkDeploymentDetailedReportsResult listBulkDeploymentDetailedReports(ListBulkDeploymentDetailedReportsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListBulkDeploymentDetailedReports(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteAccountAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountAlias() != null)\r\n        sb.append(\"AccountAlias: \").append(getAccountAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.AWSHealthClient.describeAffectedEntities",
	"Comment": "returns a list of entities that have been affected by the specified events, based on the specified filtercriteria. entities can refer to individual customer resources, groups of customer resources, or any otherconstruct, depending on the aws service. events that have impact beyond that of the affected entities, or wherethe extent of impact is unknown, include at least one entity indicating this.at least one event arn is required. results are sorted by the lastupdatedtime of the entity,starting with the most recent.",
	"Method": "DescribeAffectedEntitiesResult describeAffectedEntities(DescribeAffectedEntitiesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAffectedEntities(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Schedule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduleExpression() != null)\r\n        sb.append(\"ScheduleExpression: \").append(getScheduleExpression()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GetVaultLockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListAssessmentRunsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunArns() != null)\r\n        sb.append(\"AssessmentRunArns: \").append(getAssessmentRunArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.NodeToNodeEncryptionOptionsStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListDeviceDefinitionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listGroupPolicies",
	"Comment": "lists the names of the inline policies that are embedded in the specified iam group.an iam group can also have managed policies attached to it. to list the managed policies that are attached to agroup, use listattachedgrouppolicies. for more information about policies, see managed policies andinline policies in the iam user guide.you can paginate the results using the maxitems and marker parameters. if there are noinline policies embedded with the specified group, the operation returns an empty list.",
	"Method": "ListGroupPoliciesResult listGroupPolicies(ListGroupPoliciesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListGroupPolicies(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.resyncMFADevice",
	"Comment": "synchronizes the specified mfa device with its iam resource object on the aws servers.for more information about creating and working with virtual mfa devices, go to using a virtual mfa device inthe iam user guide.",
	"Method": "ResyncMFADeviceResult resyncMFADevice(ResyncMFADeviceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeResyncMFADevice(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.CreateBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateGroupVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.InputTransformer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputPathsMap() != null)\r\n        sb.append(\"InputPathsMap: \").append(getInputPathsMap()).append(\",\");\r\n    if (getInputTemplate() != null)\r\n        sb.append(\"InputTemplate: \").append(getInputTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteResourcePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.FunctionDefaultExecutionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIsolationMode() != null)\r\n        sb.append(\"IsolationMode: \").append(getIsolationMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetJobRunResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobRun() != null)\r\n        sb.append(\"JobRun: \").append(getJobRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.PrivateIpAddressDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.ListRuleNamesByTargetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetArn() != null)\r\n        sb.append(\"TargetArn: \").append(getTargetArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateDetectorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getEnable() != null)\r\n        sb.append(\"Enable: \").append(getEnable()).append(\",\");\r\n    if (getFindingPublishingFrequency() != null)\r\n        sb.append(\"FindingPublishingFrequency: \").append(getFindingPublishingFrequency());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.Service.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getArchived() != null)\r\n        sb.append(\"Archived: \").append(getArchived()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getEventFirstSeen() != null)\r\n        sb.append(\"EventFirstSeen: \").append(getEventFirstSeen()).append(\",\");\r\n    if (getEventLastSeen() != null)\r\n        sb.append(\"EventLastSeen: \").append(getEventLastSeen()).append(\",\");\r\n    if (getResourceRole() != null)\r\n        sb.append(\"ResourceRole: \").append(getResourceRole()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getUserFeedback() != null)\r\n        sb.append(\"UserFeedback: \").append(getUserFeedback());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.listSecurityConfigurations",
	"Comment": "lists all the security configurations visible to this account, providing their creation dates and times, andtheir names. this call returns a maximum of 50 clusters per call, but returns a marker to track the paging of thecluster list across multiple listsecurityconfigurations calls.",
	"Method": "ListSecurityConfigurationsResult listSecurityConfigurations(ListSecurityConfigurationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListSecurityConfigurations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMarket() != null)\r\n        sb.append(\"Market: \").append(getMarket()).append(\",\");\r\n    if (getInstanceGroupType() != null)\r\n        sb.append(\"InstanceGroupType: \").append(getInstanceGroupType()).append(\",\");\r\n    if (getBidPrice() != null)\r\n        sb.append(\"BidPrice: \").append(getBidPrice()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getRequestedInstanceCount() != null)\r\n        sb.append(\"RequestedInstanceCount: \").append(getRequestedInstanceCount()).append(\",\");\r\n    if (getRunningInstanceCount() != null)\r\n        sb.append(\"RunningInstanceCount: \").append(getRunningInstanceCount()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getConfigurations() != null)\r\n        sb.append(\"Configurations: \").append(getConfigurations()).append(\",\");\r\n    if (getEbsBlockDevices() != null)\r\n        sb.append(\"EbsBlockDevices: \").append(getEbsBlockDevices()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getShrinkPolicy() != null)\r\n        sb.append(\"ShrinkPolicy: \").append(getShrinkPolicy()).append(\",\");\r\n    if (getAutoScalingPolicy() != null)\r\n        sb.append(\"AutoScalingPolicy: \").append(getAutoScalingPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.CSVInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileHeaderInfo() != null)\r\n        sb.append(\"FileHeaderInfo: \").append(getFileHeaderInfo()).append(\",\");\r\n    if (getComments() != null)\r\n        sb.append(\"Comments: \").append(getComments()).append(\",\");\r\n    if (getQuoteEscapeCharacter() != null)\r\n        sb.append(\"QuoteEscapeCharacter: \").append(getQuoteEscapeCharacter()).append(\",\");\r\n    if (getRecordDelimiter() != null)\r\n        sb.append(\"RecordDelimiter: \").append(getRecordDelimiter()).append(\",\");\r\n    if (getFieldDelimiter() != null)\r\n        sb.append(\"FieldDelimiter: \").append(getFieldDelimiter()).append(\",\");\r\n    if (getQuoteCharacter() != null)\r\n        sb.append(\"QuoteCharacter: \").append(getQuoteCharacter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListAttachedGroupPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getPathPrefix() != null)\r\n        sb.append(\"PathPrefix: \").append(getPathPrefix()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteResourceDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceDefinitionId() != null)\r\n        sb.append(\"ResourceDefinitionId: \").append(getResourceDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetPartitionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getExpression() != null)\r\n        sb.append(\"Expression: \").append(getExpression()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSegment() != null)\r\n        sb.append(\"Segment: \").append(getSegment()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.detachUserPolicy",
	"Comment": "removes the specified managed policy from the specified user.a user can also have inline policies embedded with it. to delete an inline policy, use thedeleteuserpolicy api. for information about policies, see managed policies andinline policies in the iam user guide.",
	"Method": "DetachUserPolicyResult detachUserPolicy(DetachUserPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDetachUserPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ResyncMFADeviceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.DeleteNotificationChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.ListTargetsByRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRule() != null)\r\n        sb.append(\"Rule: \").append(getRule()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteBuildRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuildId() != null)\r\n        sb.append(\"BuildId: \").append(getBuildId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.createVirtualMFADevice",
	"Comment": "creates a new virtual mfa device for the aws account. after creating the virtual mfa, use enablemfadeviceto attach the mfa device to an iam user. for more information about creating and working with virtual mfadevices, go to using a virtualmfa device in the iam user guide.for information about limits on the number of mfa devices you can create, see limitations on entities inthe iam user guide.the seed information contained in the qr code and the base32 string should be treated like any other secretaccess information, such as your aws access keys or your passwords. after you provision your virtual device, youshould ensure that the information is destroyed following secure procedures.",
	"Method": "CreateVirtualMFADeviceResult createVirtualMFADevice(CreateVirtualMFADeviceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateVirtualMFADevice(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateRuntimeConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getRuntimeConfiguration() != null)\r\n        sb.append(\"RuntimeConfiguration: \").append(getRuntimeConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.S3Location.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getCannedACL() != null)\r\n        sb.append(\"CannedACL: \").append(getCannedACL()).append(\",\");\r\n    if (getAccessControlList() != null)\r\n        sb.append(\"AccessControlList: \").append(getAccessControlList()).append(\",\");\r\n    if (getTagging() != null)\r\n        sb.append(\"Tagging: \").append(getTagging()).append(\",\");\r\n    if (getUserMetadata() != null)\r\n        sb.append(\"UserMetadata: \").append(getUserMetadata()).append(\",\");\r\n    if (getStorageClass() != null)\r\n        sb.append(\"StorageClass: \").append(getStorageClass());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.DeleteRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DescribeVaultOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVaultARN() != null)\r\n        sb.append(\"VaultARN: \").append(getVaultARN()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastInventoryDate() != null)\r\n        sb.append(\"LastInventoryDate: \").append(getLastInventoryDate()).append(\",\");\r\n    if (getNumberOfArchives() != null)\r\n        sb.append(\"NumberOfArchives: \").append(getNumberOfArchives()).append(\",\");\r\n    if (getSizeInBytes() != null)\r\n        sb.append(\"SizeInBytes: \").append(getSizeInBytes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.describeReservedElasticsearchInstanceOfferings",
	"Comment": "lists available reserved elasticsearch instance offerings.",
	"Method": "DescribeReservedElasticsearchInstanceOfferingsResult describeReservedElasticsearchInstanceOfferings(DescribeReservedElasticsearchInstanceOfferingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeReservedElasticsearchInstanceOfferings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.deleteAssessmentTarget",
	"Comment": "deletes the assessment target that is specified by the arn of the assessment target.",
	"Method": "DeleteAssessmentTargetResult deleteAssessmentTarget(DeleteAssessmentTargetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAssessmentTarget(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.putAutoScalingPolicy",
	"Comment": "creates or updates an automatic scaling policy for a core instance group or task instance group in an amazon emrcluster. the automatic scaling policy defines how an instance group dynamically adds and terminates ec2 instancesin response to the value of a cloudwatch metric.",
	"Method": "PutAutoScalingPolicyResult putAutoScalingPolicy(PutAutoScalingPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutAutoScalingPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.addInstanceFleet",
	"Comment": "adds an instance fleet to a running cluster.the instance fleet configuration is available only in amazon emr versions 4.8.0 and later, excluding 5.0.x.",
	"Method": "AddInstanceFleetResult addInstanceFleet(AddInstanceFleetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddInstanceFleet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListBootstrapActionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListFiltersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilterNames() != null)\r\n        sb.append(\"FilterNames: \").append(getFilterNames()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.createAccountAlias",
	"Comment": "creates an alias for your aws account. for information about using an aws account alias, see using an alias for your aws accountid in the iam user guide.",
	"Method": "CreateAccountAliasResult createAccountAlias(CreateAccountAliasRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateAccountAlias(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.TargetHealthDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget()).append(\",\");\r\n    if (getHealthCheckPort() != null)\r\n        sb.append(\"HealthCheckPort: \").append(getHealthCheckPort()).append(\",\");\r\n    if (getTargetHealth() != null)\r\n        sb.append(\"TargetHealth: \").append(getTargetHealth());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.changePassword",
	"Comment": "changes the password of the iam user who is calling this operation. the aws account root user password is notaffected by this operation.to change the password for a different user, see updateloginprofile. for more information about modifyingpasswords, see managingpasswords in the iam user guide.",
	"Method": "ChangePasswordResult changePassword(ChangePasswordRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeChangePassword(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listAccountAliasesAsync",
	"Comment": "simplified method form for invoking the listaccountaliases operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAccountAliasesResult> listAccountAliasesAsync(ListAccountAliasesRequest request,java.util.concurrent.Future<ListAccountAliasesResult> listAccountAliasesAsync,ListAccountAliasesRequest request,com.amazonaws.handlers.AsyncHandler<ListAccountAliasesRequest, ListAccountAliasesResult> asyncHandler,java.util.concurrent.Future<ListAccountAliasesResult> listAccountAliasesAsync,java.util.concurrent.Future<ListAccountAliasesResult> listAccountAliasesAsync,com.amazonaws.handlers.AsyncHandler<ListAccountAliasesRequest, ListAccountAliasesResult> asyncHandler){\r\n    return listAccountAliasesAsync(new ListAccountAliasesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.TargetHealth.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AttachRolePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.removeTagsFromVault",
	"Comment": "this operation removes one or more tags from the set of tags attached to a vault. for more information abouttags, see tagging amazon glacierresources. this operation is idempotent. the operation will be successful, even if there are no tags attachedto the vault.",
	"Method": "RemoveTagsFromVaultResult removeTagsFromVault(RemoveTagsFromVaultRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveTagsFromVault(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GroupVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectorDefinitionVersionArn() != null)\r\n        sb.append(\"ConnectorDefinitionVersionArn: \").append(getConnectorDefinitionVersionArn()).append(\",\");\r\n    if (getCoreDefinitionVersionArn() != null)\r\n        sb.append(\"CoreDefinitionVersionArn: \").append(getCoreDefinitionVersionArn()).append(\",\");\r\n    if (getDeviceDefinitionVersionArn() != null)\r\n        sb.append(\"DeviceDefinitionVersionArn: \").append(getDeviceDefinitionVersionArn()).append(\",\");\r\n    if (getFunctionDefinitionVersionArn() != null)\r\n        sb.append(\"FunctionDefinitionVersionArn: \").append(getFunctionDefinitionVersionArn()).append(\",\");\r\n    if (getLoggerDefinitionVersionArn() != null)\r\n        sb.append(\"LoggerDefinitionVersionArn: \").append(getLoggerDefinitionVersionArn()).append(\",\");\r\n    if (getResourceDefinitionVersionArn() != null)\r\n        sb.append(\"ResourceDefinitionVersionArn: \").append(getResourceDefinitionVersionArn()).append(\",\");\r\n    if (getSubscriptionDefinitionVersionArn() != null)\r\n        sb.append(\"SubscriptionDefinitionVersionArn: \").append(getSubscriptionDefinitionVersionArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchDeleteConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSucceeded() != null)\r\n        sb.append(\"Succeeded: \").append(getSucceeded()).append(\",\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetInvitationsCountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.TagRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.TestRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getInputBucket() != null)\r\n        sb.append(\"InputBucket: \").append(getInputBucket()).append(\",\");\r\n    if (getOutputBucket() != null)\r\n        sb.append(\"OutputBucket: \").append(getOutputBucket()).append(\",\");\r\n    if (getTopics() != null)\r\n        sb.append(\"Topics: \").append(getTopics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.AmazonImportExportClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonimportexport using the current builder configuration.",
	"Method": "AmazonImportExport build(AwsSyncClientParams params){\r\n    return new AmazonImportExportClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.PlayerLatency.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlayerId() != null)\r\n        sb.append(\"PlayerId: \").append(getPlayerId()).append(\",\");\r\n    if (getRegionIdentifier() != null)\r\n        sb.append(\"RegionIdentifier: \").append(getRegionIdentifier()).append(\",\");\r\n    if (getLatencyInMilliseconds() != null)\r\n        sb.append(\"LatencyInMilliseconds: \").append(getLatencyInMilliseconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateLoggerDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getLoggerDefinitionId() != null)\r\n        sb.append(\"LoggerDefinitionId: \").append(getLoggerDefinitionId()).append(\",\");\r\n    if (getLoggers() != null)\r\n        sb.append(\"Loggers: \").append(getLoggers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetAssociatedRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociatedAt() != null)\r\n        sb.append(\"AssociatedAt: \").append(getAssociatedAt()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.listFindings",
	"Comment": "lists amazon guardduty findings for the specified detector id.",
	"Method": "ListFindingsResult listFindings(ListFindingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListFindings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.SkewedInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSkewedColumnNames() != null)\r\n        sb.append(\"SkewedColumnNames: \").append(getSkewedColumnNames()).append(\",\");\r\n    if (getSkewedColumnValues() != null)\r\n        sb.append(\"SkewedColumnValues: \").append(getSkewedColumnValues()).append(\",\");\r\n    if (getSkewedColumnValueLocationMaps() != null)\r\n        sb.append(\"SkewedColumnValueLocationMaps: \").append(getSkewedColumnValueLocationMaps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.SslPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSslProtocols() != null)\r\n        sb.append(\"SslProtocols: \").append(getSslProtocols()).append(\",\");\r\n    if (getCiphers() != null)\r\n        sb.append(\"Ciphers: \").append(getCiphers()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.UpdatePipelineNotificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getNotifications() != null)\r\n        sb.append(\"Notifications: \").append(getNotifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.acceptInvitation",
	"Comment": "accepts the invitation to be monitored by a master guardduty account.",
	"Method": "AcceptInvitationResult acceptInvitation(AcceptInvitationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAcceptInvitation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.AcceptInvitationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.getCompatibleElasticsearchVersions",
	"Comment": "returns a list of upgrade compatible elastisearch versions. you can optionally pass a domainnameto get all upgrade compatible elasticsearch versions for that specific domain.",
	"Method": "GetCompatibleElasticsearchVersionsResult getCompatibleElasticsearchVersions(GetCompatibleElasticsearchVersionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetCompatibleElasticsearchVersions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.AmazonFSxAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonfsxasync using the current builder configuration.",
	"Method": "AmazonFSxAsync build(AwsAsyncClientParams params){\r\n    return new AmazonFSxAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DeleteVaultAccessPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.DisassociateAdminAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AbstractAmazonElasticTranscoderAsync.listPipelinesAsync",
	"Comment": "simplified method form for invoking the listpipelines operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListPipelinesResult> listPipelinesAsync(ListPipelinesRequest request,java.util.concurrent.Future<ListPipelinesResult> listPipelinesAsync,ListPipelinesRequest request,com.amazonaws.handlers.AsyncHandler<ListPipelinesRequest, ListPipelinesResult> asyncHandler,java.util.concurrent.Future<ListPipelinesResult> listPipelinesAsync,java.util.concurrent.Future<ListPipelinesResult> listPipelinesAsync,com.amazonaws.handlers.AsyncHandler<ListPipelinesRequest, ListPipelinesResult> asyncHandler){\r\n    return listPipelinesAsync(new ListPipelinesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListRulesPackagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRulesPackageArns() != null)\r\n        sb.append(\"RulesPackageArns: \").append(getRulesPackageArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.AmazonFSxClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonfsx using the current builder configuration.",
	"Method": "AmazonFSx build(AwsSyncClientParams params){\r\n    return new AmazonFSxClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listUsersAsync",
	"Comment": "simplified method form for invoking the listusers operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListUsersResult> listUsersAsync(ListUsersRequest request,java.util.concurrent.Future<ListUsersResult> listUsersAsync,ListUsersRequest request,com.amazonaws.handlers.AsyncHandler<ListUsersRequest, ListUsersResult> asyncHandler,java.util.concurrent.Future<ListUsersResult> listUsersAsync,java.util.concurrent.Future<ListUsersResult> listUsersAsync,com.amazonaws.handlers.AsyncHandler<ListUsersRequest, ListUsersResult> asyncHandler){\r\n    return listUsersAsync(new ListUsersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ReservedElasticsearchInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservationName() != null)\r\n        sb.append(\"ReservationName: \").append(getReservationName()).append(\",\");\r\n    if (getReservedElasticsearchInstanceId() != null)\r\n        sb.append(\"ReservedElasticsearchInstanceId: \").append(getReservedElasticsearchInstanceId()).append(\",\");\r\n    if (getReservedElasticsearchInstanceOfferingId() != null)\r\n        sb.append(\"ReservedElasticsearchInstanceOfferingId: \").append(getReservedElasticsearchInstanceOfferingId()).append(\",\");\r\n    if (getElasticsearchInstanceType() != null)\r\n        sb.append(\"ElasticsearchInstanceType: \").append(getElasticsearchInstanceType()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getElasticsearchInstanceCount() != null)\r\n        sb.append(\"ElasticsearchInstanceCount: \").append(getElasticsearchInstanceCount()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getPaymentOption() != null)\r\n        sb.append(\"PaymentOption: \").append(getPaymentOption()).append(\",\");\r\n    if (getRecurringCharges() != null)\r\n        sb.append(\"RecurringCharges: \").append(getRecurringCharges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateDevEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName()).append(\",\");\r\n    if (getPublicKey() != null)\r\n        sb.append(\"PublicKey: \").append(getPublicKey()).append(\",\");\r\n    if (getAddPublicKeys() != null)\r\n        sb.append(\"AddPublicKeys: \").append(getAddPublicKeys()).append(\",\");\r\n    if (getDeletePublicKeys() != null)\r\n        sb.append(\"DeletePublicKeys: \").append(getDeletePublicKeys()).append(\",\");\r\n    if (getCustomLibraries() != null)\r\n        sb.append(\"CustomLibraries: \").append(getCustomLibraries()).append(\",\");\r\n    if (getUpdateEtlLibraries() != null)\r\n        sb.append(\"UpdateEtlLibraries: \").append(getUpdateEtlLibraries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.VideoParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodec() != null)\r\n        sb.append(\"Codec: \").append(getCodec()).append(\",\");\r\n    if (getCodecOptions() != null)\r\n        sb.append(\"CodecOptions: \").append(getCodecOptions()).append(\",\");\r\n    if (getKeyframesMaxDist() != null)\r\n        sb.append(\"KeyframesMaxDist: \").append(getKeyframesMaxDist()).append(\",\");\r\n    if (getFixedGOP() != null)\r\n        sb.append(\"FixedGOP: \").append(getFixedGOP()).append(\",\");\r\n    if (getBitRate() != null)\r\n        sb.append(\"BitRate: \").append(getBitRate()).append(\",\");\r\n    if (getFrameRate() != null)\r\n        sb.append(\"FrameRate: \").append(getFrameRate()).append(\",\");\r\n    if (getMaxFrameRate() != null)\r\n        sb.append(\"MaxFrameRate: \").append(getMaxFrameRate()).append(\",\");\r\n    if (getResolution() != null)\r\n        sb.append(\"Resolution: \").append(getResolution()).append(\",\");\r\n    if (getAspectRatio() != null)\r\n        sb.append(\"AspectRatio: \").append(getAspectRatio()).append(\",\");\r\n    if (getMaxWidth() != null)\r\n        sb.append(\"MaxWidth: \").append(getMaxWidth()).append(\",\");\r\n    if (getMaxHeight() != null)\r\n        sb.append(\"MaxHeight: \").append(getMaxHeight()).append(\",\");\r\n    if (getDisplayAspectRatio() != null)\r\n        sb.append(\"DisplayAspectRatio: \").append(getDisplayAspectRatio()).append(\",\");\r\n    if (getSizingPolicy() != null)\r\n        sb.append(\"SizingPolicy: \").append(getSizingPolicy()).append(\",\");\r\n    if (getPaddingPolicy() != null)\r\n        sb.append(\"PaddingPolicy: \").append(getPaddingPolicy()).append(\",\");\r\n    if (getWatermarks() != null)\r\n        sb.append(\"Watermarks: \").append(getWatermarks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.StartElasticsearchServiceSoftwareUpdateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceSoftwareOptions() != null)\r\n        sb.append(\"ServiceSoftwareOptions: \").append(getServiceSoftwareOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.updateCrawler",
	"Comment": "updates a crawler. if a crawler is running, you must stop it using stopcrawler before updating it.",
	"Method": "UpdateCrawlerResult updateCrawler(UpdateCrawlerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateCrawler(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.createElasticsearchDomain",
	"Comment": "creates a new elasticsearch domain. for more information, see creating elasticsearch domains in the amazon elasticsearch service developer guide.",
	"Method": "CreateElasticsearchDomainResult createElasticsearchDomain(CreateElasticsearchDomainRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateElasticsearchDomain(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ServiceSoftwareOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrentVersion() != null)\r\n        sb.append(\"CurrentVersion: \").append(getCurrentVersion()).append(\",\");\r\n    if (getNewVersion() != null)\r\n        sb.append(\"NewVersion: \").append(getNewVersion()).append(\",\");\r\n    if (getUpdateAvailable() != null)\r\n        sb.append(\"UpdateAvailable: \").append(getUpdateAvailable()).append(\",\");\r\n    if (getCancellable() != null)\r\n        sb.append(\"Cancellable: \").append(getCancellable()).append(\",\");\r\n    if (getUpdateStatus() != null)\r\n        sb.append(\"UpdateStatus: \").append(getUpdateStatus()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getAutomatedUpdateDate() != null)\r\n        sb.append(\"AutomatedUpdateDate: \").append(getAutomatedUpdateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.UpdateElasticsearchDomainConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainConfig() != null)\r\n        sb.append(\"DomainConfig: \").append(getDomainConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.JobFlowDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobFlowId() != null)\r\n        sb.append(\"JobFlowId: \").append(getJobFlowId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getLogUri() != null)\r\n        sb.append(\"LogUri: \").append(getLogUri()).append(\",\");\r\n    if (getAmiVersion() != null)\r\n        sb.append(\"AmiVersion: \").append(getAmiVersion()).append(\",\");\r\n    if (getExecutionStatusDetail() != null)\r\n        sb.append(\"ExecutionStatusDetail: \").append(getExecutionStatusDetail()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getSteps() != null)\r\n        sb.append(\"Steps: \").append(getSteps()).append(\",\");\r\n    if (getBootstrapActions() != null)\r\n        sb.append(\"BootstrapActions: \").append(getBootstrapActions()).append(\",\");\r\n    if (getSupportedProducts() != null)\r\n        sb.append(\"SupportedProducts: \").append(getSupportedProducts()).append(\",\");\r\n    if (getVisibleToAllUsers() != null)\r\n        sb.append(\"VisibleToAllUsers: \").append(getVisibleToAllUsers()).append(\",\");\r\n    if (getJobFlowRole() != null)\r\n        sb.append(\"JobFlowRole: \").append(getJobFlowRole()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getAutoScalingRole() != null)\r\n        sb.append(\"AutoScalingRole: \").append(getAutoScalingRole()).append(\",\");\r\n    if (getScaleDownBehavior() != null)\r\n        sb.append(\"ScaleDownBehavior: \").append(getScaleDownBehavior());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateResourceDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getResourceDefinitionId() != null)\r\n        sb.append(\"ResourceDefinitionId: \").append(getResourceDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.StepFactory.newInstallHiveStep",
	"Comment": "step that installs the default version of hive on your job flow.this is0.4 for hadoop 0.18 and 0.5 for hadoop 0.20.",
	"Method": "HadoopJarStepConfig newInstallHiveStep(HiveVersion hiveVersions,HadoopJarStepConfig newInstallHiveStep,String hiveVersions,HadoopJarStepConfig newInstallHiveStep){\r\n    return newInstallHiveStep(new HiveVersion[0]);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteSSHPublicKey",
	"Comment": "deletes the specified ssh public key.the ssh public key deleted by this operation is used only for authenticating the associated iam user to an awscodecommit repository. for more information about using ssh keys to authenticate to an aws codecommit repository,see set up awscodecommit for ssh connections in the aws codecommit user guide.",
	"Method": "DeleteSSHPublicKeyResult deleteSSHPublicKey(DeleteSSHPublicKeyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteSSHPublicKey(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.EventTypeFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventTypeCodes() != null)\r\n        sb.append(\"EventTypeCodes: \").append(getEventTypeCodes()).append(\",\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices()).append(\",\");\r\n    if (getEventTypeCategories() != null)\r\n        sb.append(\"EventTypeCategories: \").append(getEventTypeCategories());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DisassociateServiceRoleFromAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateDeviceDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeFleetPortSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.getConnections",
	"Comment": "retrieves a list of connection definitions from the data catalog.",
	"Method": "GetConnectionsResult getConnections(GetConnectionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetConnections(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetAssociatedRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AccessKeyMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeAssessmentTargetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTargets() != null)\r\n        sb.append(\"AssessmentTargets: \").append(getAssessmentTargets()).append(\",\");\r\n    if (getFailedItems() != null)\r\n        sb.append(\"FailedItems: \").append(getFailedItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AssessmentRunFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamePattern() != null)\r\n        sb.append(\"NamePattern: \").append(getNamePattern()).append(\",\");\r\n    if (getStates() != null)\r\n        sb.append(\"States: \").append(getStates()).append(\",\");\r\n    if (getDurationRange() != null)\r\n        sb.append(\"DurationRange: \").append(getDurationRange()).append(\",\");\r\n    if (getRulesPackageArns() != null)\r\n        sb.append(\"RulesPackageArns: \").append(getRulesPackageArns()).append(\",\");\r\n    if (getStartTimeRange() != null)\r\n        sb.append(\"StartTimeRange: \").append(getStartTimeRange()).append(\",\");\r\n    if (getCompletionTimeRange() != null)\r\n        sb.append(\"CompletionTimeRange: \").append(getCompletionTimeRange()).append(\",\");\r\n    if (getStateChangeTimeRange() != null)\r\n        sb.append(\"StateChangeTimeRange: \").append(getStateChangeTimeRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.PortProbeAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlocked() != null)\r\n        sb.append(\"Blocked: \").append(getBlocked()).append(\",\");\r\n    if (getPortProbeDetails() != null)\r\n        sb.append(\"PortProbeDetails: \").append(getPortProbeDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDataflowGraphResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDagNodes() != null)\r\n        sb.append(\"DagNodes: \").append(getDagNodes()).append(\",\");\r\n    if (getDagEdges() != null)\r\n        sb.append(\"DagEdges: \").append(getDagEdges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.Filter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ListTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetAccountPasswordPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPasswordPolicy() != null)\r\n        sb.append(\"PasswordPolicy: \").append(getPasswordPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.RemoveAttributesFromFindingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedItems() != null)\r\n        sb.append(\"FailedItems: \").append(getFailedItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateBuildResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuild() != null)\r\n        sb.append(\"Build: \").append(getBuild()).append(\",\");\r\n    if (getUploadCredentials() != null)\r\n        sb.append(\"UploadCredentials: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getStorageLocation() != null)\r\n        sb.append(\"StorageLocation: \").append(getStorageLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GenerateCredentialReportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ModifyInstanceFleetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getInstanceFleet() != null)\r\n        sb.append(\"InstanceFleet: \").append(getInstanceFleet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteInvitationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountIds() != null)\r\n        sb.append(\"AccountIds: \").append(getAccountIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteGroupPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorClient.createEndpointGroup",
	"Comment": "create an endpoint group for the specified accelerator. an endpoint group is a collection of endpoints in one awsregion. to see an aws cli example of creating an endpoint group, scroll down to example.",
	"Method": "CreateEndpointGroupResult createEndpointGroup(CreateEndpointGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateEndpointGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StartMatchmakingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTicketId() != null)\r\n        sb.append(\"TicketId: \").append(getTicketId()).append(\",\");\r\n    if (getConfigurationName() != null)\r\n        sb.append(\"ConfigurationName: \").append(getConfigurationName()).append(\",\");\r\n    if (getPlayers() != null)\r\n        sb.append(\"Players: \").append(getPlayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.EcsParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskDefinitionArn() != null)\r\n        sb.append(\"TaskDefinitionArn: \").append(getTaskDefinitionArn()).append(\",\");\r\n    if (getTaskCount() != null)\r\n        sb.append(\"TaskCount: \").append(getTaskCount()).append(\",\");\r\n    if (getLaunchType() != null)\r\n        sb.append(\"LaunchType: \").append(getLaunchType()).append(\",\");\r\n    if (getNetworkConfiguration() != null)\r\n        sb.append(\"NetworkConfiguration: \").append(getNetworkConfiguration()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateCoreDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.AWSFMSClient.listComplianceStatus",
	"Comment": "returns an array of policycompliancestatus objects in the response. usepolicycompliancestatus to get a summary of which member accounts are protected by the specifiedpolicy.",
	"Method": "ListComplianceStatusResult listComplianceStatus(ListComplianceStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListComplianceStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.ListJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxJobs() != null)\r\n        sb.append(\"MaxJobs: \").append(getMaxJobs()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getAPIVersion() != null)\r\n        sb.append(\"APIVersion: \").append(getAPIVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DeleteFileSystemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getLifecycle() != null)\r\n        sb.append(\"Lifecycle: \").append(getLifecycle()).append(\",\");\r\n    if (getWindowsResponse() != null)\r\n        sb.append(\"WindowsResponse: \").append(getWindowsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.PutDataCatalogEncryptionSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDataCatalogEncryptionSettings() != null)\r\n        sb.append(\"DataCatalogEncryptionSettings: \").append(getDataCatalogEncryptionSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceAsyncClient.modifyInstanceGroupsAsync",
	"Comment": "simplified method form for invoking the modifyinstancegroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ModifyInstanceGroupsResult> modifyInstanceGroupsAsync(ModifyInstanceGroupsRequest request,java.util.concurrent.Future<ModifyInstanceGroupsResult> modifyInstanceGroupsAsync,ModifyInstanceGroupsRequest request,com.amazonaws.handlers.AsyncHandler<ModifyInstanceGroupsRequest, ModifyInstanceGroupsResult> asyncHandler,java.util.concurrent.Future<ModifyInstanceGroupsResult> modifyInstanceGroupsAsync,java.util.concurrent.Future<ModifyInstanceGroupsResult> modifyInstanceGroupsAsync,com.amazonaws.handlers.AsyncHandler<ModifyInstanceGroupsRequest, ModifyInstanceGroupsResult> asyncHandler){\r\n    return modifyInstanceGroupsAsync(new ModifyInstanceGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeGameSessionPlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionPlacement() != null)\r\n        sb.append(\"GameSessionPlacement: \").append(getGameSessionPlacement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeAffectedEntitiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntities() != null)\r\n        sb.append(\"Entities: \").append(getEntities()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListAssessmentTargetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Partition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastAccessTime() != null)\r\n        sb.append(\"LastAccessTime: \").append(getLastAccessTime()).append(\",\");\r\n    if (getStorageDescriptor() != null)\r\n        sb.append(\"StorageDescriptor: \").append(getStorageDescriptor()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getLastAnalyzedTime() != null)\r\n        sb.append(\"LastAnalyzedTime: \").append(getLastAnalyzedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.PutDataCatalogEncryptionSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteRolePolicy",
	"Comment": "deletes the specified inline policy that is embedded in the specified iam role.a role can also have managed policies attached to it. to detach a managed policy from a role, usedetachrolepolicy. for more information about policies, refer to managed policies andinline policies in the iam user guide.",
	"Method": "DeleteRolePolicyResult deleteRolePolicy(DeleteRolePolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteRolePolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PutRolePermissionsBoundaryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getPermissionsBoundary() != null)\r\n        sb.append(\"PermissionsBoundary: \").append(getPermissionsBoundary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetMappingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMapping() != null)\r\n        sb.append(\"Mapping: \").append(getMapping());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.Job.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getIsCanceled() != null)\r\n        sb.append(\"IsCanceled: \").append(getIsCanceled()).append(\",\");\r\n    if (getJobType() != null)\r\n        sb.append(\"JobType: \").append(getJobType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListDetectorsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorIds() != null)\r\n        sb.append(\"DetectorIds: \").append(getDetectorIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.VpcPeeringConnection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getIpV4CidrBlock() != null)\r\n        sb.append(\"IpV4CidrBlock: \").append(getIpV4CidrBlock()).append(\",\");\r\n    if (getVpcPeeringConnectionId() != null)\r\n        sb.append(\"VpcPeeringConnectionId: \").append(getVpcPeeringConnectionId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPeerVpcId() != null)\r\n        sb.append(\"PeerVpcId: \").append(getPeerVpcId()).append(\",\");\r\n    if (getGameLiftVpcId() != null)\r\n        sb.append(\"GameLiftVpcId: \").append(getGameLiftVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.ListPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GameSessionPlacement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacementId() != null)\r\n        sb.append(\"PlacementId: \").append(getPlacementId()).append(\",\");\r\n    if (getGameSessionQueueName() != null)\r\n        sb.append(\"GameSessionQueueName: \").append(getGameSessionQueueName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getGameProperties() != null)\r\n        sb.append(\"GameProperties: \").append(getGameProperties()).append(\",\");\r\n    if (getMaximumPlayerSessionCount() != null)\r\n        sb.append(\"MaximumPlayerSessionCount: \").append(getMaximumPlayerSessionCount()).append(\",\");\r\n    if (getGameSessionName() != null)\r\n        sb.append(\"GameSessionName: \").append(getGameSessionName()).append(\",\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId()).append(\",\");\r\n    if (getGameSessionArn() != null)\r\n        sb.append(\"GameSessionArn: \").append(getGameSessionArn()).append(\",\");\r\n    if (getGameSessionRegion() != null)\r\n        sb.append(\"GameSessionRegion: \").append(getGameSessionRegion()).append(\",\");\r\n    if (getPlayerLatencies() != null)\r\n        sb.append(\"PlayerLatencies: \").append(getPlayerLatencies()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getPlacedPlayerSessions() != null)\r\n        sb.append(\"PlacedPlayerSessions: \").append(getPlacedPlayerSessions()).append(\",\");\r\n    if (getGameSessionData() != null)\r\n        sb.append(\"GameSessionData: \").append(getGameSessionData()).append(\",\");\r\n    if (getMatchmakerData() != null)\r\n        sb.append(\"MatchmakerData: \").append(getMatchmakerData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GenerateServiceLastAccessedDetailsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetConnectorDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectorDefinitionId() != null)\r\n        sb.append(\"ConnectorDefinitionId: \").append(getConnectorDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.deleteAssessmentTemplate",
	"Comment": "deletes the assessment template that is specified by the arn of the assessment template.",
	"Method": "DeleteAssessmentTemplateResult deleteAssessmentTemplate(DeleteAssessmentTemplateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAssessmentTemplate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DeleteVaultNotificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceStateChangeReason.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateOpenIDConnectProviderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOpenIDConnectProviderArn() != null)\r\n        sb.append(\"OpenIDConnectProviderArn: \").append(getOpenIDConnectProviderArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.AWSFMSClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.FleetUtilization.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getActiveServerProcessCount() != null)\r\n        sb.append(\"ActiveServerProcessCount: \").append(getActiveServerProcessCount()).append(\",\");\r\n    if (getActiveGameSessionCount() != null)\r\n        sb.append(\"ActiveGameSessionCount: \").append(getActiveGameSessionCount()).append(\",\");\r\n    if (getCurrentPlayerSessionCount() != null)\r\n        sb.append(\"CurrentPlayerSessionCount: \").append(getCurrentPlayerSessionCount()).append(\",\");\r\n    if (getMaximumPlayerSessionCount() != null)\r\n        sb.append(\"MaximumPlayerSessionCount: \").append(getMaximumPlayerSessionCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ErrorDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.SimulateCustomPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyInputList() != null)\r\n        sb.append(\"PolicyInputList: \").append(getPolicyInputList()).append(\",\");\r\n    if (getActionNames() != null)\r\n        sb.append(\"ActionNames: \").append(getActionNames()).append(\",\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns()).append(\",\");\r\n    if (getResourcePolicy() != null)\r\n        sb.append(\"ResourcePolicy: \").append(getResourcePolicy()).append(\",\");\r\n    if (getResourceOwner() != null)\r\n        sb.append(\"ResourceOwner: \").append(getResourceOwner()).append(\",\");\r\n    if (getCallerArn() != null)\r\n        sb.append(\"CallerArn: \").append(getCallerArn()).append(\",\");\r\n    if (getContextEntries() != null)\r\n        sb.append(\"ContextEntries: \").append(getContextEntries()).append(\",\");\r\n    if (getResourceHandlingOption() != null)\r\n        sb.append(\"ResourceHandlingOption: \").append(getResourceHandlingOption()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AddInstanceGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceGroups() != null)\r\n        sb.append(\"InstanceGroups: \").append(getInstanceGroups()).append(\",\");\r\n    if (getJobFlowId() != null)\r\n        sb.append(\"JobFlowId: \").append(getJobFlowId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.Application.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getArgs() != null)\r\n        sb.append(\"Args: \").append(getArgs()).append(\",\");\r\n    if (getAdditionalInfo() != null)\r\n        sb.append(\"AdditionalInfo: \").append(getAdditionalInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetLoginProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoginProfile() != null)\r\n        sb.append(\"LoginProfile: \").append(getLoginProfile());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.AWSFMSClient.getPolicy",
	"Comment": "returns information about the specified aws firewall manager policy.",
	"Method": "GetPolicyResult getPolicy(GetPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteUserPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.TargetGroupAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateServiceSpecificCredentialRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeactivateMFADeviceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSerialNumber() != null)\r\n        sb.append(\"SerialNumber: \").append(getSerialNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateFleetAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteResourcePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyHashCondition() != null)\r\n        sb.append(\"PolicyHashCondition: \").append(getPolicyHashCondition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.EndpointGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointGroupArn() != null)\r\n        sb.append(\"EndpointGroupArn: \").append(getEndpointGroupArn()).append(\",\");\r\n    if (getEndpointGroupRegion() != null)\r\n        sb.append(\"EndpointGroupRegion: \").append(getEndpointGroupRegion()).append(\",\");\r\n    if (getEndpointDescriptions() != null)\r\n        sb.append(\"EndpointDescriptions: \").append(getEndpointDescriptions()).append(\",\");\r\n    if (getTrafficDialPercentage() != null)\r\n        sb.append(\"TrafficDialPercentage: \").append(getTrafficDialPercentage()).append(\",\");\r\n    if (getHealthCheckPort() != null)\r\n        sb.append(\"HealthCheckPort: \").append(getHealthCheckPort()).append(\",\");\r\n    if (getHealthCheckProtocol() != null)\r\n        sb.append(\"HealthCheckProtocol: \").append(getHealthCheckProtocol()).append(\",\");\r\n    if (getHealthCheckPath() != null)\r\n        sb.append(\"HealthCheckPath: \").append(getHealthCheckPath()).append(\",\");\r\n    if (getHealthCheckIntervalSeconds() != null)\r\n        sb.append(\"HealthCheckIntervalSeconds: \").append(getHealthCheckIntervalSeconds()).append(\",\");\r\n    if (getThresholdCount() != null)\r\n        sb.append(\"ThresholdCount: \").append(getThresholdCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.createInstanceProfile",
	"Comment": "creates a new instance profile. for information about instance profiles, go to about instance profiles.for information about the number of instance profiles you can create, see limitations on iam entitiesin the iam user guide.",
	"Method": "CreateInstanceProfileResult createInstanceProfile(CreateInstanceProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateInstanceProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsClient.describeRule",
	"Comment": "describes the specified rule.describerule does not list the targets of a rule. to see the targets associated with a rule, uselisttargetsbyrule.",
	"Method": "DescribeRuleResult describeRule(DescribeRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.RunCommandParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRunCommandTargets() != null)\r\n        sb.append(\"RunCommandTargets: \").append(getRunCommandTargets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listAccessKeysAsync",
	"Comment": "simplified method form for invoking the listaccesskeys operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAccessKeysResult> listAccessKeysAsync(ListAccessKeysRequest request,java.util.concurrent.Future<ListAccessKeysResult> listAccessKeysAsync,ListAccessKeysRequest request,com.amazonaws.handlers.AsyncHandler<ListAccessKeysRequest, ListAccessKeysResult> asyncHandler,java.util.concurrent.Future<ListAccessKeysResult> listAccessKeysAsync,java.util.concurrent.Future<ListAccessKeysResult> listAccessKeysAsync,com.amazonaws.handlers.AsyncHandler<ListAccessKeysRequest, ListAccessKeysResult> asyncHandler){\r\n    return listAccessKeysAsync(new ListAccessKeysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.SubnetMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getAllocationId() != null)\r\n        sb.append(\"AllocationId: \").append(getAllocationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AbstractAmazonElasticMapReduceAsync.modifyInstanceGroupsAsync",
	"Comment": "simplified method form for invoking the modifyinstancegroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ModifyInstanceGroupsResult> modifyInstanceGroupsAsync(ModifyInstanceGroupsRequest request,java.util.concurrent.Future<ModifyInstanceGroupsResult> modifyInstanceGroupsAsync,ModifyInstanceGroupsRequest request,com.amazonaws.handlers.AsyncHandler<ModifyInstanceGroupsRequest, ModifyInstanceGroupsResult> asyncHandler,java.util.concurrent.Future<ModifyInstanceGroupsResult> modifyInstanceGroupsAsync,java.util.concurrent.Future<ModifyInstanceGroupsResult> modifyInstanceGroupsAsync,com.amazonaws.handlers.AsyncHandler<ModifyInstanceGroupsRequest, ModifyInstanceGroupsResult> asyncHandler){\r\n    return modifyInstanceGroupsAsync(new ModifyInstanceGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.CreateAssessmentTargetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTargetName() != null)\r\n        sb.append(\"AssessmentTargetName: \").append(getAssessmentTargetName()).append(\",\");\r\n    if (getResourceGroupArn() != null)\r\n        sb.append(\"ResourceGroupArn: \").append(getResourceGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.NetworkInterface.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getPrivateIpAddresses() != null)\r\n        sb.append(\"PrivateIpAddresses: \").append(getPrivateIpAddresses()).append(\",\");\r\n    if (getPublicDnsName() != null)\r\n        sb.append(\"PublicDnsName: \").append(getPublicDnsName()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp()).append(\",\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteConnectorDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeGameSessionDetailsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId()).append(\",\");\r\n    if (getAliasId() != null)\r\n        sb.append(\"AliasId: \").append(getAliasId()).append(\",\");\r\n    if (getStatusFilter() != null)\r\n        sb.append(\"StatusFilter: \").append(getStatusFilter()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateLoggerDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteServiceLinkedRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GeoLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLat() != null)\r\n        sb.append(\"Lat: \").append(getLat()).append(\",\");\r\n    if (getLon() != null)\r\n        sb.append(\"Lon: \").append(getLon());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListResourceDefinitionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefinitions() != null)\r\n        sb.append(\"Definitions: \").append(getDefinitions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeBuildResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuild() != null)\r\n        sb.append(\"Build: \").append(getBuild());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DeleteAssessmentTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTemplateArn() != null)\r\n        sb.append(\"AssessmentTemplateArn: \").append(getAssessmentTemplateArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.AWSFMSClient.disassociateAdminAccount",
	"Comment": "disassociates the account that has been set as the aws firewall manager administrator account. you will need tosubmit an associateadminaccount request to set a new account as the aws firewall administrator.",
	"Method": "DisassociateAdminAccountResult disassociateAdminAccount(DisassociateAdminAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateAdminAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.createLoggerDefinitionVersion",
	"Comment": "creates a version of a logger definition that has already been defined.",
	"Method": "CreateLoggerDefinitionVersionResult createLoggerDefinitionVersion(CreateLoggerDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateLoggerDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.RegisterCrossAccountAccessRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteAccountAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateUserDefinedFunctionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AttachRolePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteSAMLProviderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSAMLProviderArn() != null)\r\n        sb.append(\"SAMLProviderArn: \").append(getSAMLProviderArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteMembersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountIds() != null)\r\n        sb.append(\"AccountIds: \").append(getAccountIds()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listAccountAliasesAsync",
	"Comment": "simplified method form for invoking the listaccountaliases operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAccountAliasesResult> listAccountAliasesAsync(ListAccountAliasesRequest request,java.util.concurrent.Future<ListAccountAliasesResult> listAccountAliasesAsync,ListAccountAliasesRequest request,com.amazonaws.handlers.AsyncHandler<ListAccountAliasesRequest, ListAccountAliasesResult> asyncHandler,java.util.concurrent.Future<ListAccountAliasesResult> listAccountAliasesAsync,java.util.concurrent.Future<ListAccountAliasesResult> listAccountAliasesAsync,com.amazonaws.handlers.AsyncHandler<ListAccountAliasesRequest, ListAccountAliasesResult> asyncHandler){\r\n    return listAccountAliasesAsync(new ListAccountAliasesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListAttachedUserPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPathPrefix() != null)\r\n        sb.append(\"PathPrefix: \").append(getPathPrefix()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.CreateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobType() != null)\r\n        sb.append(\"JobType: \").append(getJobType()).append(\",\");\r\n    if (getManifest() != null)\r\n        sb.append(\"Manifest: \").append(getManifest()).append(\",\");\r\n    if (getManifestAddendum() != null)\r\n        sb.append(\"ManifestAddendum: \").append(getManifestAddendum()).append(\",\");\r\n    if (getValidateOnly() != null)\r\n        sb.append(\"ValidateOnly: \").append(getValidateOnly()).append(\",\");\r\n    if (getAPIVersion() != null)\r\n        sb.append(\"APIVersion: \").append(getAPIVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.FunctionExecutionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIsolationMode() != null)\r\n        sb.append(\"IsolationMode: \").append(getIsolationMode()).append(\",\");\r\n    if (getRunAs() != null)\r\n        sb.append(\"RunAs: \").append(getRunAs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StopMatchmakingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.StepStateChangeReason.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreatePlayerSessionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId()).append(\",\");\r\n    if (getPlayerIds() != null)\r\n        sb.append(\"PlayerIds: \").append(getPlayerIds()).append(\",\");\r\n    if (getPlayerDataMap() != null)\r\n        sb.append(\"PlayerDataMap: \").append(getPlayerDataMap());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreatePartitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.PortProbeDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocalPortDetails() != null)\r\n        sb.append(\"LocalPortDetails: \").append(getLocalPortDetails()).append(\",\");\r\n    if (getRemoteIpDetails() != null)\r\n        sb.append(\"RemoteIpDetails: \").append(getRemoteIpDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ArchiveFindingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFindingIds() != null)\r\n        sb.append(\"FindingIds: \").append(getFindingIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetLoginProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreatedAfter() != null)\r\n        sb.append(\"CreatedAfter: \").append(getCreatedAfter()).append(\",\");\r\n    if (getCreatedBefore() != null)\r\n        sb.append(\"CreatedBefore: \").append(getCreatedBefore()).append(\",\");\r\n    if (getClusterStates() != null)\r\n        sb.append(\"ClusterStates: \").append(getClusterStates()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListAssessmentTargetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTargetArns() != null)\r\n        sb.append(\"AssessmentTargetArns: \").append(getAssessmentTargetArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.TableInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getOwner() != null)\r\n        sb.append(\"Owner: \").append(getOwner()).append(\",\");\r\n    if (getLastAccessTime() != null)\r\n        sb.append(\"LastAccessTime: \").append(getLastAccessTime()).append(\",\");\r\n    if (getLastAnalyzedTime() != null)\r\n        sb.append(\"LastAnalyzedTime: \").append(getLastAnalyzedTime()).append(\",\");\r\n    if (getRetention() != null)\r\n        sb.append(\"Retention: \").append(getRetention()).append(\",\");\r\n    if (getStorageDescriptor() != null)\r\n        sb.append(\"StorageDescriptor: \").append(getStorageDescriptor()).append(\",\");\r\n    if (getPartitionKeys() != null)\r\n        sb.append(\"PartitionKeys: \").append(getPartitionKeys()).append(\",\");\r\n    if (getViewOriginalText() != null)\r\n        sb.append(\"ViewOriginalText: \").append(getViewOriginalText()).append(\",\");\r\n    if (getViewExpandedText() != null)\r\n        sb.append(\"ViewExpandedText: \").append(getViewExpandedText()).append(\",\");\r\n    if (getTableType() != null)\r\n        sb.append(\"TableType: \").append(getTableType()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteAccessKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListBulkDeploymentDetailedReportsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBulkDeploymentId() != null)\r\n        sb.append(\"BulkDeploymentId: \").append(getBulkDeploymentId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.FailedItemDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getRetryable() != null)\r\n        sb.append(\"Retryable: \").append(getRetryable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListDetectorsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteClassifierRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateAssumeRolePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListServiceSpecificCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetThreatIntelSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getThreatIntelSetId() != null)\r\n        sb.append(\"ThreatIntelSetId: \").append(getThreatIntelSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ProductCode.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getProductType() != null)\r\n        sb.append(\"ProductType: \").append(getProductType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeResourceGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceGroupArns() != null)\r\n        sb.append(\"ResourceGroupArns: \").append(getResourceGroupArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetGroupCertificateAuthorityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateAuthorityId() != null)\r\n        sb.append(\"CertificateAuthorityId: \").append(getCertificateAuthorityId()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listUsersAsync",
	"Comment": "simplified method form for invoking the listusers operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListUsersResult> listUsersAsync(ListUsersRequest request,java.util.concurrent.Future<ListUsersResult> listUsersAsync,ListUsersRequest request,com.amazonaws.handlers.AsyncHandler<ListUsersRequest, ListUsersResult> asyncHandler,java.util.concurrent.Future<ListUsersResult> listUsersAsync,java.util.concurrent.Future<ListUsersResult> listUsersAsync,com.amazonaws.handlers.AsyncHandler<ListUsersRequest, ListUsersResult> asyncHandler){\r\n    return listUsersAsync(new ListUsersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.uploadSigningCertificate",
	"Comment": "uploads an x.509 signing certificate and associates it with the specified iam user. some aws services use x.509signing certificates to validate requests that are signed with a corresponding private key. when you upload thecertificate, its default status is active.if the username field is not specified, the iam user name is determined implicitly based on the awsaccess key id used to sign the request. this operation works for access keys under the aws account. consequently,you can use this operation to manage aws account root user credentials even if the aws account has no associatedusers.because the body of an x.509 certificate can be large, you should use post rather than get when callinguploadsigningcertificate. for information about setting up signatures and authorization through theapi, go to signing aws apirequests in the aws general reference. for general information about using the query api with iam, goto making query requests inthe iam user guide.",
	"Method": "UploadSigningCertificateResult uploadSigningCertificate(UploadSigningCertificateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUploadSigningCertificate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ListJobsByPipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.CreateSecurityConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetFindingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFindings() != null)\r\n        sb.append(\"Findings: \").append(getFindings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.ErrorDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getScheduleExpression() != null)\r\n        sb.append(\"ScheduleExpression: \").append(getScheduleExpression()).append(\",\");\r\n    if (getEventPattern() != null)\r\n        sb.append(\"EventPattern: \").append(getEventPattern()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.StepTimeline.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime()).append(\",\");\r\n    if (getStartDateTime() != null)\r\n        sb.append(\"StartDateTime: \").append(getStartDateTime()).append(\",\");\r\n    if (getEndDateTime() != null)\r\n        sb.append(\"EndDateTime: \").append(getEndDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.FunctionDefaultConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecution() != null)\r\n        sb.append(\"Execution: \").append(getExecution());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteServiceSpecificCredentialResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.describeAssessmentTargets",
	"Comment": "describes the assessment targets that are specified by the arns of the assessment targets.",
	"Method": "DescribeAssessmentTargetsResult describeAssessmentTargets(DescribeAssessmentTargetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAssessmentTargets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ServiceSpecificCredentialMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getServiceUserName() != null)\r\n        sb.append(\"ServiceUserName: \").append(getServiceUserName()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getServiceSpecificCredentialId() != null)\r\n        sb.append(\"ServiceSpecificCredentialId: \").append(getServiceSpecificCredentialId()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeEC2InstanceLimitsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEC2InstanceLimits() != null)\r\n        sb.append(\"EC2InstanceLimits: \").append(getEC2InstanceLimits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteAccessKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateDatabaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDatabaseInput() != null)\r\n        sb.append(\"DatabaseInput: \").append(getDatabaseInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.SageMakerMachineLearningModelResourceData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationPath() != null)\r\n        sb.append(\"DestinationPath: \").append(getDestinationPath()).append(\",\");\r\n    if (getSageMakerJobArn() != null)\r\n        sb.append(\"SageMakerJobArn: \").append(getSageMakerJobArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeElasticsearchDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainStatus() != null)\r\n        sb.append(\"DomainStatus: \").append(getDomainStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StartFleetActionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.WindowsFileSystemConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActiveDirectoryId() != null)\r\n        sb.append(\"ActiveDirectoryId: \").append(getActiveDirectoryId()).append(\",\");\r\n    if (getThroughputCapacity() != null)\r\n        sb.append(\"ThroughputCapacity: \").append(getThroughputCapacity()).append(\",\");\r\n    if (getMaintenanceOperationsInProgress() != null)\r\n        sb.append(\"MaintenanceOperationsInProgress: \").append(getMaintenanceOperationsInProgress()).append(\",\");\r\n    if (getWeeklyMaintenanceStartTime() != null)\r\n        sb.append(\"WeeklyMaintenanceStartTime: \").append(getWeeklyMaintenanceStartTime()).append(\",\");\r\n    if (getDailyAutomaticBackupStartTime() != null)\r\n        sb.append(\"DailyAutomaticBackupStartTime: \").append(getDailyAutomaticBackupStartTime()).append(\",\");\r\n    if (getAutomaticBackupRetentionDays() != null)\r\n        sb.append(\"AutomaticBackupRetentionDays: \").append(getAutomaticBackupRetentionDays()).append(\",\");\r\n    if (getCopyTagsToBackups() != null)\r\n        sb.append(\"CopyTagsToBackups: \").append(getCopyTagsToBackups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DeleteAssessmentTargetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTargetArn() != null)\r\n        sb.append(\"AssessmentTargetArn: \").append(getAssessmentTargetArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListDeviceDefinitionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefinitions() != null)\r\n        sb.append(\"Definitions: \").append(getDefinitions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ListDomainNamesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.SimpleScalingPolicyConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdjustmentType() != null)\r\n        sb.append(\"AdjustmentType: \").append(getAdjustmentType()).append(\",\");\r\n    if (getScalingAdjustment() != null)\r\n        sb.append(\"ScalingAdjustment: \").append(getScalingAdjustment()).append(\",\");\r\n    if (getCoolDown() != null)\r\n        sb.append(\"CoolDown: \").append(getCoolDown());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateCrawlerScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchDeletePartitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StorageDescriptor.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getColumns() != null)\r\n        sb.append(\"Columns: \").append(getColumns()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getInputFormat() != null)\r\n        sb.append(\"InputFormat: \").append(getInputFormat()).append(\",\");\r\n    if (getOutputFormat() != null)\r\n        sb.append(\"OutputFormat: \").append(getOutputFormat()).append(\",\");\r\n    if (getCompressed() != null)\r\n        sb.append(\"Compressed: \").append(getCompressed()).append(\",\");\r\n    if (getNumberOfBuckets() != null)\r\n        sb.append(\"NumberOfBuckets: \").append(getNumberOfBuckets()).append(\",\");\r\n    if (getSerdeInfo() != null)\r\n        sb.append(\"SerdeInfo: \").append(getSerdeInfo()).append(\",\");\r\n    if (getBucketColumns() != null)\r\n        sb.append(\"BucketColumns: \").append(getBucketColumns()).append(\",\");\r\n    if (getSortColumns() != null)\r\n        sb.append(\"SortColumns: \").append(getSortColumns()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getSkewedInfo() != null)\r\n        sb.append(\"SkewedInfo: \").append(getSkewedInfo()).append(\",\");\r\n    if (getStoredAsSubDirectories() != null)\r\n        sb.append(\"StoredAsSubDirectories: \").append(getStoredAsSubDirectories());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CatalogImportStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportCompleted() != null)\r\n        sb.append(\"ImportCompleted: \").append(getImportCompleted()).append(\",\");\r\n    if (getImportTime() != null)\r\n        sb.append(\"ImportTime: \").append(getImportTime()).append(\",\");\r\n    if (getImportedBy() != null)\r\n        sb.append(\"ImportedBy: \").append(getImportedBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreateJobOutput.setComposition",
	"Comment": "you can create an output file that contains an excerpt from the input file. this excerpt, called a clip, can comefrom the beginning, middle, or end of the file. the composition object contains settings for the clips that makeup an output file. for the current release, you can only specify settings for a single clip per output file. thecomposition object cannot be null.",
	"Method": "void setComposition(java.util.Collection<Clip> composition){\r\n    if (composition == null) {\r\n        this.composition = null;\r\n        return;\r\n    }\r\n    this.composition = new com.amazonaws.internal.SdkInternalList<Clip>(composition);\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.ListEndpointGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListFindingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunArns() != null)\r\n        sb.append(\"AssessmentRunArns: \").append(getAssessmentRunArns()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.IpSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpFamily() != null)\r\n        sb.append(\"IpFamily: \").append(getIpFamily()).append(\",\");\r\n    if (getIpAddresses() != null)\r\n        sb.append(\"IpAddresses: \").append(getIpAddresses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AccessKey.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSecretAccessKey() != null)\r\n        sb.append(\"SecretAccessKey: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awselasticsearchasync using the current builder configuration.",
	"Method": "AWSElasticsearchAsync build(AwsAsyncClientParams params){\r\n    return new AWSElasticsearchAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDevEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevEndpoint() != null)\r\n        sb.append(\"DevEndpoint: \").append(getDevEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.StartBulkDeploymentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBulkDeploymentArn() != null)\r\n        sb.append(\"BulkDeploymentArn: \").append(getBulkDeploymentArn()).append(\",\");\r\n    if (getBulkDeploymentId() != null)\r\n        sb.append(\"BulkDeploymentId: \").append(getBulkDeploymentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.ExecutionProperty.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxConcurrentRuns() != null)\r\n        sb.append(\"MaxConcurrentRuns: \").append(getMaxConcurrentRuns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.getFilter",
	"Comment": "returns the details of the filter specified by the filter name.",
	"Method": "GetFilterResult getFilter(GetFilterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetFilter(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetCoreDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCoreDefinitionId() != null)\r\n        sb.append(\"CoreDefinitionId: \").append(getCoreDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.declineInvitations",
	"Comment": "declines invitations sent to the current member account by aws account specified by their account ids.",
	"Method": "DeclineInvitationsResult declineInvitations(DeclineInvitationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeclineInvitations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeRulesPackagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRulesPackages() != null)\r\n        sb.append(\"RulesPackages: \").append(getRulesPackages()).append(\",\");\r\n    if (getFailedItems() != null)\r\n        sb.append(\"FailedItems: \").append(getFailedItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.getAccountAuthorizationDetailsAsync",
	"Comment": "simplified method form for invoking the getaccountauthorizationdetails operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetAccountAuthorizationDetailsResult> getAccountAuthorizationDetailsAsync(GetAccountAuthorizationDetailsRequest request,java.util.concurrent.Future<GetAccountAuthorizationDetailsResult> getAccountAuthorizationDetailsAsync,GetAccountAuthorizationDetailsRequest request,com.amazonaws.handlers.AsyncHandler<GetAccountAuthorizationDetailsRequest, GetAccountAuthorizationDetailsResult> asyncHandler,java.util.concurrent.Future<GetAccountAuthorizationDetailsResult> getAccountAuthorizationDetailsAsync,java.util.concurrent.Future<GetAccountAuthorizationDetailsResult> getAccountAuthorizationDetailsAsync,com.amazonaws.handlers.AsyncHandler<GetAccountAuthorizationDetailsRequest, GetAccountAuthorizationDetailsResult> asyncHandler){\r\n    return getAccountAuthorizationDetailsAsync(new GetAccountAuthorizationDetailsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.getMasterAccount",
	"Comment": "provides the details for the guardduty master account to the current guardduty member account.",
	"Method": "GetMasterAccountResult getMasterAccount(GetMasterAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetMasterAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ListPipelinesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelines() != null)\r\n        sb.append(\"Pipelines: \").append(getPipelines()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.putGroupPolicy",
	"Comment": "adds or updates an inline policy document that is embedded in the specified iam group.a user can also have managed policies attached to it. to attach a managed policy to a group, useattachgrouppolicy. to create a new managed policy, use createpolicy. for information aboutpolicies, see managedpolicies and inline policies in the iam user guide.for information about limits on the number of inline policies that you can embed in a group, see limitations on iam entitiesin the iam user guide.because policy documents can be large, you should use post rather than get when callingputgrouppolicy. for general information about using the query api with iam, go to making query requests in theiam user guide.",
	"Method": "PutGroupPolicyResult putGroupPolicy(PutGroupPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutGroupPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.SetSubnetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PutRolePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.listSteps",
	"Comment": "provides a list of steps for the cluster in reverse order unless you specify stepids with the request.",
	"Method": "ListStepsResult listSteps(ListStepsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListSteps(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StopCrawlerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DisassociateFromMasterAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.getAccountPasswordPolicy",
	"Comment": "retrieves the password policy for the aws account. for more information about using a password policy, go to managing an iampassword policy.",
	"Method": "GetAccountPasswordPolicyResult getAccountPasswordPolicy(GetAccountPasswordPolicyRequest request,GetAccountPasswordPolicyResult getAccountPasswordPolicy){\r\n    return getAccountPasswordPolicy(new GetAccountPasswordPolicyRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasId() != null)\r\n        sb.append(\"AliasId: \").append(getAliasId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteIPSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Notifications.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressing() != null)\r\n        sb.append(\"Progressing: \").append(getProgressing()).append(\",\");\r\n    if (getCompleted() != null)\r\n        sb.append(\"Completed: \").append(getCompleted()).append(\",\");\r\n    if (getWarning() != null)\r\n        sb.append(\"Warning: \").append(getWarning()).append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(getError());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteRolePermissionsBoundary",
	"Comment": "deletes the permissions boundary for the specified iam role.deleting the permissions boundary for a role might increase its permissions by allowing anyone who assumes therole to perform all the actions granted in its permissions policies.",
	"Method": "DeleteRolePermissionsBoundaryResult deleteRolePermissionsBoundary(DeleteRolePermissionsBoundaryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteRolePermissionsBoundary(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetPlanResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPythonScript() != null)\r\n        sb.append(\"PythonScript: \").append(getPythonScript()).append(\",\");\r\n    if (getScalaCode() != null)\r\n        sb.append(\"ScalaCode: \").append(getScalaCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.deleteInvitations",
	"Comment": "deletes invitations sent to the current member account by aws accounts specified by their account ids.",
	"Method": "DeleteInvitationsResult deleteInvitations(DeleteInvitationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteInvitations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.Event.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventId() != null)\r\n        sb.append(\"EventId: \").append(getEventId()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getEventCode() != null)\r\n        sb.append(\"EventCode: \").append(getEventCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getEventTime() != null)\r\n        sb.append(\"EventTime: \").append(getEventTime()).append(\",\");\r\n    if (getPreSignedLogUrl() != null)\r\n        sb.append(\"PreSignedLogUrl: \").append(getPreSignedLogUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GetVaultNotificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetServerCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerCertificate() != null)\r\n        sb.append(\"ServerCertificate: \").append(getServerCertificate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteRole",
	"Comment": "deletes the specified role. the role must not have any policies attached. for more information about roles, go toworking with roles.make sure that you do not have any amazon ec2 instances running with the role you are about to delete. deleting arole or instance profile that is associated with a running instance will break any applications running on theinstance.",
	"Method": "DeleteRoleResult deleteRole(DeleteRoleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteRole(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.RoleDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getRoleId() != null)\r\n        sb.append(\"RoleId: \").append(getRoleId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getAssumeRolePolicyDocument() != null)\r\n        sb.append(\"AssumeRolePolicyDocument: \").append(getAssumeRolePolicyDocument()).append(\",\");\r\n    if (getInstanceProfileList() != null)\r\n        sb.append(\"InstanceProfileList: \").append(getInstanceProfileList()).append(\",\");\r\n    if (getRolePolicyList() != null)\r\n        sb.append(\"RolePolicyList: \").append(getRolePolicyList()).append(\",\");\r\n    if (getAttachedManagedPolicies() != null)\r\n        sb.append(\"AttachedManagedPolicies: \").append(getAttachedManagedPolicies()).append(\",\");\r\n    if (getPermissionsBoundary() != null)\r\n        sb.append(\"PermissionsBoundary: \").append(getPermissionsBoundary()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StopTriggerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UpdateFilterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFilterName() != null)\r\n        sb.append(\"FilterName: \").append(getFilterName()).append(\",\");\r\n    if (getFindingCriteria() != null)\r\n        sb.append(\"FindingCriteria: \").append(getFindingCriteria()).append(\",\");\r\n    if (getRank() != null)\r\n        sb.append(\"Rank: \").append(getRank());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Permission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGranteeType() != null)\r\n        sb.append(\"GranteeType: \").append(getGranteeType()).append(\",\");\r\n    if (getGrantee() != null)\r\n        sb.append(\"Grantee: \").append(getGrantee()).append(\",\");\r\n    if (getAccess() != null)\r\n        sb.append(\"Access: \").append(getAccess());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.UpdateFileSystemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystemId() != null)\r\n        sb.append(\"FileSystemId: \").append(getFileSystemId()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getWindowsConfiguration() != null)\r\n        sb.append(\"WindowsConfiguration: \").append(getWindowsConfiguration()).append(\",\");\r\n    if (getLustreConfiguration() != null)\r\n        sb.append(\"LustreConfiguration: \").append(getLustreConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateConnectorDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListResourceDefinitionVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.SnapshotOptionsStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.detachRolePolicy",
	"Comment": "removes the specified managed policy from the specified role.a role can also have inline policies embedded with it. to delete an inline policy, use thedeleterolepolicy api. for information about policies, see managed policies andinline policies in the iam user guide.",
	"Method": "DetachRolePolicyResult detachRolePolicy(DetachRolePolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDetachRolePolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StartMatchBackfillRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTicketId() != null)\r\n        sb.append(\"TicketId: \").append(getTicketId()).append(\",\");\r\n    if (getConfigurationName() != null)\r\n        sb.append(\"ConfigurationName: \").append(getConfigurationName()).append(\",\");\r\n    if (getGameSessionArn() != null)\r\n        sb.append(\"GameSessionArn: \").append(getGameSessionArn()).append(\",\");\r\n    if (getPlayers() != null)\r\n        sb.append(\"Players: \").append(getPlayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PolicyVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDocument() != null)\r\n        sb.append(\"Document: \").append(getDocument()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getIsDefaultVersion() != null)\r\n        sb.append(\"IsDefaultVersion: \").append(getIsDefaultVersion()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.StepDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStepConfig() != null)\r\n        sb.append(\"StepConfig: \").append(getStepConfig()).append(\",\");\r\n    if (getExecutionStatusDetail() != null)\r\n        sb.append(\"ExecutionStatusDetail: \").append(getExecutionStatusDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StartJobRunResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobRunId() != null)\r\n        sb.append(\"JobRunId: \").append(getJobRunId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.updateConnectivityInfo",
	"Comment": "updates the connectivity information for the core. any devices that belong to the group which has this core willreceive this information in order to find the location of the core and connect to it.",
	"Method": "UpdateConnectivityInfoResult updateConnectivityInfo(UpdateConnectivityInfoRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateConnectivityInfo(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.health.AWSHealthAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awshealthasync using the current builder configuration.",
	"Method": "AWSHealthAsync build(AwsAsyncClientParams params){\r\n    return new AWSHealthAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.health.AWSHealthClient.describeEvents",
	"Comment": "returns information about events that meet the specified filter criteria. events are returned in a summary formand do not include the detailed description, any additional metadata that depends on the event type, or anyaffected resources. to retrieve that information, use the describeeventdetails anddescribeaffectedentities operations.if no filter criteria are specified, all events are returned. results are sorted by lastmodifiedtime, starting with the most recent.",
	"Method": "DescribeEventsResult describeEvents(DescribeEventsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEvents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetDetectorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getFindingPublishingFrequency() != null)\r\n        sb.append(\"FindingPublishingFrequency: \").append(getFindingPublishingFrequency()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getUpdatedAt() != null)\r\n        sb.append(\"UpdatedAt: \").append(getUpdatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListMembersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOnlyAssociated() != null)\r\n        sb.append(\"OnlyAssociated: \").append(getOnlyAssociated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.listAssessmentTargets",
	"Comment": "lists the arns of the assessment targets within this aws account. for more information about assessment targets,see amazon inspectorassessment targets.",
	"Method": "ListAssessmentTargetsResult listAssessmentTargets(ListAssessmentTargetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListAssessmentTargets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listVirtualMFADevicesAsync",
	"Comment": "simplified method form for invoking the listvirtualmfadevices operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListVirtualMFADevicesResult> listVirtualMFADevicesAsync(ListVirtualMFADevicesRequest request,java.util.concurrent.Future<ListVirtualMFADevicesResult> listVirtualMFADevicesAsync,ListVirtualMFADevicesRequest request,com.amazonaws.handlers.AsyncHandler<ListVirtualMFADevicesRequest, ListVirtualMFADevicesResult> asyncHandler,java.util.concurrent.Future<ListVirtualMFADevicesResult> listVirtualMFADevicesAsync,java.util.concurrent.Future<ListVirtualMFADevicesResult> listVirtualMFADevicesAsync,com.amazonaws.handlers.AsyncHandler<ListVirtualMFADevicesRequest, ListVirtualMFADevicesResult> asyncHandler){\r\n    return listVirtualMFADevicesAsync(new ListVirtualMFADevicesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.AwsVpcConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getAssignPublicIp() != null)\r\n        sb.append(\"AssignPublicIp: \").append(getAssignPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.Deployment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getDeploymentArn() != null)\r\n        sb.append(\"DeploymentArn: \").append(getDeploymentArn()).append(\",\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getDeploymentType() != null)\r\n        sb.append(\"DeploymentType: \").append(getDeploymentType()).append(\",\");\r\n    if (getGroupArn() != null)\r\n        sb.append(\"GroupArn: \").append(getGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateThreatIntelSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActivate() != null)\r\n        sb.append(\"Activate: \").append(getActivate()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.EntityDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntityInfo() != null)\r\n        sb.append(\"EntityInfo: \").append(getEntityInfo()).append(\",\");\r\n    if (getLastAuthenticated() != null)\r\n        sb.append(\"LastAuthenticated: \").append(getLastAuthenticated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DataRepositoryConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportPath() != null)\r\n        sb.append(\"ImportPath: \").append(getImportPath()).append(\",\");\r\n    if (getExportPath() != null)\r\n        sb.append(\"ExportPath: \").append(getExportPath()).append(\",\");\r\n    if (getImportedFileChunkSize() != null)\r\n        sb.append(\"ImportedFileChunkSize: \").append(getImportedFileChunkSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ReadJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJob() != null)\r\n        sb.append(\"Job: \").append(getJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListEntitiesForPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getEntityFilter() != null)\r\n        sb.append(\"EntityFilter: \").append(getEntityFilter()).append(\",\");\r\n    if (getPathPrefix() != null)\r\n        sb.append(\"PathPrefix: \").append(getPathPrefix()).append(\",\");\r\n    if (getPolicyUsageFilter() != null)\r\n        sb.append(\"PolicyUsageFilter: \").append(getPolicyUsageFilter()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateTriggerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrigger() != null)\r\n        sb.append(\"Trigger: \").append(getTrigger());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.getFunctionDefinitionVersion",
	"Comment": "retrieves information about a lambda function definition version, including which lambda functions are includedin the version and their configurations.",
	"Method": "GetFunctionDefinitionVersionResult getFunctionDefinitionVersion(GetFunctionDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetFunctionDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AddClientIDToOpenIDConnectProviderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderAsyncClient.listPipelinesAsync",
	"Comment": "simplified method form for invoking the listpipelines operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListPipelinesResult> listPipelinesAsync(ListPipelinesRequest request,java.util.concurrent.Future<ListPipelinesResult> listPipelinesAsync,ListPipelinesRequest request,com.amazonaws.handlers.AsyncHandler<ListPipelinesRequest, ListPipelinesResult> asyncHandler,java.util.concurrent.Future<ListPipelinesResult> listPipelinesAsync,java.util.concurrent.Future<ListPipelinesResult> listPipelinesAsync,com.amazonaws.handlers.AsyncHandler<ListPipelinesRequest, ListPipelinesResult> asyncHandler){\r\n    return listPipelinesAsync(new ListPipelinesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ListBuildsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PutGroupPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeEventDetailsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventArns() != null)\r\n        sb.append(\"EventArns: \").append(getEventArns()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.EntityFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventArns() != null)\r\n        sb.append(\"EventArns: \").append(getEventArns()).append(\",\");\r\n    if (getEntityArns() != null)\r\n        sb.append(\"EntityArns: \").append(getEntityArns()).append(\",\");\r\n    if (getEntityValues() != null)\r\n        sb.append(\"EntityValues: \").append(getEntityValues()).append(\",\");\r\n    if (getLastUpdatedTimes() != null)\r\n        sb.append(\"LastUpdatedTimes: \").append(getLastUpdatedTimes()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getStatusCodes() != null)\r\n        sb.append(\"StatusCodes: \").append(getStatusCodes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Artwork.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputKey() != null)\r\n        sb.append(\"InputKey: \").append(getInputKey()).append(\",\");\r\n    if (getMaxWidth() != null)\r\n        sb.append(\"MaxWidth: \").append(getMaxWidth()).append(\",\");\r\n    if (getMaxHeight() != null)\r\n        sb.append(\"MaxHeight: \").append(getMaxHeight()).append(\",\");\r\n    if (getSizingPolicy() != null)\r\n        sb.append(\"SizingPolicy: \").append(getSizingPolicy()).append(\",\");\r\n    if (getPaddingPolicy() != null)\r\n        sb.append(\"PaddingPolicy: \").append(getPaddingPolicy()).append(\",\");\r\n    if (getAlbumArtFormat() != null)\r\n        sb.append(\"AlbumArtFormat: \").append(getAlbumArtFormat()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListGroupVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListAssessmentRunsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTemplateArns() != null)\r\n        sb.append(\"AssessmentTemplateArns: \").append(getAssessmentTemplateArns()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ResourceCreationLimitPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNewGameSessionsPerCreator() != null)\r\n        sb.append(\"NewGameSessionsPerCreator: \").append(getNewGameSessionsPerCreator()).append(\",\");\r\n    if (getPolicyPeriodInMinutes() != null)\r\n        sb.append(\"PolicyPeriodInMinutes: \").append(getPolicyPeriodInMinutes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.InstanceAccess.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getOperatingSystem() != null)\r\n        sb.append(\"OperatingSystem: \").append(getOperatingSystem()).append(\",\");\r\n    if (getCredentials() != null)\r\n        sb.append(\"Credentials: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDatabasesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listRolesAsync",
	"Comment": "simplified method form for invoking the listroles operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListRolesResult> listRolesAsync(ListRolesRequest request,java.util.concurrent.Future<ListRolesResult> listRolesAsync,ListRolesRequest request,com.amazonaws.handlers.AsyncHandler<ListRolesRequest, ListRolesResult> asyncHandler,java.util.concurrent.Future<ListRolesResult> listRolesAsync,java.util.concurrent.Future<ListRolesResult> listRolesAsync,com.amazonaws.handlers.AsyncHandler<ListRolesRequest, ListRolesResult> asyncHandler){\r\n    return listRolesAsync(new ListRolesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ProvisionedCapacityDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityId() != null)\r\n        sb.append(\"CapacityId: \").append(getCapacityId()).append(\",\");\r\n    if (getStartDate() != null)\r\n        sb.append(\"StartDate: \").append(getStartDate()).append(\",\");\r\n    if (getExpirationDate() != null)\r\n        sb.append(\"ExpirationDate: \").append(getExpirationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listServerCertificatesAsync",
	"Comment": "simplified method form for invoking the listservercertificates operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListServerCertificatesResult> listServerCertificatesAsync(ListServerCertificatesRequest request,java.util.concurrent.Future<ListServerCertificatesResult> listServerCertificatesAsync,ListServerCertificatesRequest request,com.amazonaws.handlers.AsyncHandler<ListServerCertificatesRequest, ListServerCertificatesResult> asyncHandler,java.util.concurrent.Future<ListServerCertificatesResult> listServerCertificatesAsync,java.util.concurrent.Future<ListServerCertificatesResult> listServerCertificatesAsync,com.amazonaws.handlers.AsyncHandler<ListServerCertificatesRequest, ListServerCertificatesResult> asyncHandler){\r\n    return listServerCertificatesAsync(new ListServerCertificatesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.updateRoleDescription",
	"Comment": "use updaterole instead.modifies only the description of a role. this operation performs the same function as thedescription parameter in the updaterole operation.",
	"Method": "UpdateRoleDescriptionResult updateRoleDescription(UpdateRoleDescriptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateRoleDescription(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.UpdateAcceleratorAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceleratorArn() != null)\r\n        sb.append(\"AcceleratorArn: \").append(getAcceleratorArn()).append(\",\");\r\n    if (getFlowLogsEnabled() != null)\r\n        sb.append(\"FlowLogsEnabled: \").append(getFlowLogsEnabled()).append(\",\");\r\n    if (getFlowLogsS3Bucket() != null)\r\n        sb.append(\"FlowLogsS3Bucket: \").append(getFlowLogsS3Bucket()).append(\",\");\r\n    if (getFlowLogsS3Prefix() != null)\r\n        sb.append(\"FlowLogsS3Prefix: \").append(getFlowLogsS3Prefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.PutAutoScalingPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getInstanceGroupId() != null)\r\n        sb.append(\"InstanceGroupId: \").append(getInstanceGroupId()).append(\",\");\r\n    if (getAutoScalingPolicy() != null)\r\n        sb.append(\"AutoScalingPolicy: \").append(getAutoScalingPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.PutPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StopFleetActionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetFilterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getFindingCriteria() != null)\r\n        sb.append(\"FindingCriteria: \").append(getFindingCriteria()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRank() != null)\r\n        sb.append(\"Rank: \").append(getRank());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetServerCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerCertificateName() != null)\r\n        sb.append(\"ServerCertificateName: \").append(getServerCertificateName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchDeleteConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getConnectionNameList() != null)\r\n        sb.append(\"ConnectionNameList: \").append(getConnectionNameList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteSecurityConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetFindingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFindingIds() != null)\r\n        sb.append(\"FindingIds: \").append(getFindingIds()).append(\",\");\r\n    if (getSortCriteria() != null)\r\n        sb.append(\"SortCriteria: \").append(getSortCriteria());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetSAMLProviderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSAMLMetadataDocument() != null)\r\n        sb.append(\"SAMLMetadataDocument: \").append(getSAMLMetadataDocument()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getValidUntil() != null)\r\n        sb.append(\"ValidUntil: \").append(getValidUntil());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateMatchmakingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.listAssessmentRunAgents",
	"Comment": "lists the agents of the assessment runs that are specified by the arns of the assessment runs.",
	"Method": "ListAssessmentRunAgentsResult listAssessmentRunAgents(ListAssessmentRunAgentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListAssessmentRunAgents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeFleetUtilizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetIds() != null)\r\n        sb.append(\"FleetIds: \").append(getFleetIds()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.UpdatePipelineNotificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateDeploymentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getDeploymentType() != null)\r\n        sb.append(\"DeploymentType: \").append(getDeploymentType()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupVersionId() != null)\r\n        sb.append(\"GroupVersionId: \").append(getGroupVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetUserPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonguardduty using the current builder configuration.",
	"Method": "AmazonGuardDuty build(AwsSyncClientParams params){\r\n    return new AmazonGuardDutyClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GroupDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getGroupPolicyList() != null)\r\n        sb.append(\"GroupPolicyList: \").append(getGroupPolicyList()).append(\",\");\r\n    if (getAttachedManagedPolicies() != null)\r\n        sb.append(\"AttachedManagedPolicies: \").append(getAttachedManagedPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.PrivateIp.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DeleteArchiveRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getArchiveId() != null)\r\n        sb.append(\"ArchiveId: \").append(getArchiveId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DefinitionInformation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.AWSHealthClient.describeEventTypes",
	"Comment": "returns the event types that meet the specified filter criteria. if no filter criteria are specified, all eventtypes are returned, in no particular order.",
	"Method": "DescribeEventTypesResult describeEventTypes(DescribeEventTypesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEventTypes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.GetAssessmentReportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunArn() != null)\r\n        sb.append(\"AssessmentRunArn: \").append(getAssessmentRunArn()).append(\",\");\r\n    if (getReportFileFormat() != null)\r\n        sb.append(\"ReportFileFormat: \").append(getReportFileFormat()).append(\",\");\r\n    if (getReportType() != null)\r\n        sb.append(\"ReportType: \").append(getReportType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.Subscription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getSubject() != null)\r\n        sb.append(\"Subject: \").append(getSubject()).append(\",\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DeleteVaultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchStopJobRunResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccessfulSubmissions() != null)\r\n        sb.append(\"SuccessfulSubmissions: \").append(getSuccessfulSubmissions()).append(\",\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetGroupCertificateConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListProvisionedCapacityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProvisionedCapacityList() != null)\r\n        sb.append(\"ProvisionedCapacityList: \").append(getProvisionedCapacityList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.PlayReadyDrm.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getKeyMd5() != null)\r\n        sb.append(\"KeyMd5: \").append(getKeyMd5()).append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getInitializationVector() != null)\r\n        sb.append(\"InitializationVector: \").append(getInitializationVector()).append(\",\");\r\n    if (getLicenseAcquisitionUrl() != null)\r\n        sb.append(\"LicenseAcquisitionUrl: \").append(getLicenseAcquisitionUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.CancelStepsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCancelStepsInfoList() != null)\r\n        sb.append(\"CancelStepsInfoList: \").append(getCancelStepsInfoList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.TriggerUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions()).append(\",\");\r\n    if (getPredicate() != null)\r\n        sb.append(\"Predicate: \").append(getPredicate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StartTriggerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ScalingAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarket() != null)\r\n        sb.append(\"Market: \").append(getMarket()).append(\",\");\r\n    if (getSimpleScalingPolicyConfiguration() != null)\r\n        sb.append(\"SimpleScalingPolicyConfiguration: \").append(getSimpleScalingPolicyConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PutUserPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ListPresetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPresets() != null)\r\n        sb.append(\"Presets: \").append(getPresets()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteOpenIDConnectProviderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.generateCredentialReportAsync",
	"Comment": "simplified method form for invoking the generatecredentialreport operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GenerateCredentialReportResult> generateCredentialReportAsync(GenerateCredentialReportRequest request,java.util.concurrent.Future<GenerateCredentialReportResult> generateCredentialReportAsync,GenerateCredentialReportRequest request,com.amazonaws.handlers.AsyncHandler<GenerateCredentialReportRequest, GenerateCredentialReportResult> asyncHandler,java.util.concurrent.Future<GenerateCredentialReportResult> generateCredentialReportAsync,java.util.concurrent.Future<GenerateCredentialReportResult> generateCredentialReportAsync,com.amazonaws.handlers.AsyncHandler<GenerateCredentialReportRequest, GenerateCredentialReportResult> asyncHandler){\r\n    return generateCredentialReportAsync(new GenerateCredentialReportRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.AWSFMSAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListInstanceProfilesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPathPrefix() != null)\r\n        sb.append(\"PathPrefix: \").append(getPathPrefix()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.CognitoOptionsStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.CloudWatchAlarmDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getEvaluationPeriods() != null)\r\n        sb.append(\"EvaluationPeriods: \").append(getEvaluationPeriods()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getPeriod() != null)\r\n        sb.append(\"Period: \").append(getPeriod()).append(\",\");\r\n    if (getStatistic() != null)\r\n        sb.append(\"Statistic: \").append(getStatistic()).append(\",\");\r\n    if (getThreshold() != null)\r\n        sb.append(\"Threshold: \").append(getThreshold()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GetInstanceAccessRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsClient.listRuleNamesByTarget",
	"Comment": "lists the rules for the specified target. you can see which of the rules in amazon cloudwatch events can invoke aspecific target in your account.",
	"Method": "ListRuleNamesByTargetResult listRuleNamesByTarget(ListRuleNamesByTargetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListRuleNamesByTarget(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateAccessKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AgentAlreadyRunningAssessment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAgentId() != null)\r\n        sb.append(\"AgentId: \").append(getAgentId()).append(\",\");\r\n    if (getAssessmentRunArn() != null)\r\n        sb.append(\"AssessmentRunArn: \").append(getAssessmentRunArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PolicyRole.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getRoleId() != null)\r\n        sb.append(\"RoleId: \").append(getRoleId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getNewPath() != null)\r\n        sb.append(\"NewPath: \").append(getNewPath()).append(\",\");\r\n    if (getNewUserName() != null)\r\n        sb.append(\"NewUserName: \").append(getNewUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateCoreDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getCoreDefinitionId() != null)\r\n        sb.append(\"CoreDefinitionId: \").append(getCoreDefinitionId()).append(\",\");\r\n    if (getCores() != null)\r\n        sb.append(\"Cores: \").append(getCores());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DomainInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DescribeListenerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListener() != null)\r\n        sb.append(\"Listener: \").append(getListener());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListRolePoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetPlanRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMapping() != null)\r\n        sb.append(\"Mapping: \").append(getMapping()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getSinks() != null)\r\n        sb.append(\"Sinks: \").append(getSinks()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listUserTags",
	"Comment": "lists the tags that are attached to the specified user. the returned list of tags is sorted by tag key. for moreinformation about tagging, see tagging iamidentities in the iam user guide.",
	"Method": "ListUserTagsResult listUserTags(ListUserTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListUserTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.RemoveAttributesFromFindingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFindingArns() != null)\r\n        sb.append(\"FindingArns: \").append(getFindingArns()).append(\",\");\r\n    if (getAttributeKeys() != null)\r\n        sb.append(\"AttributeKeys: \").append(getAttributeKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.getAccountAuthorizationDetailsAsync",
	"Comment": "simplified method form for invoking the getaccountauthorizationdetails operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetAccountAuthorizationDetailsResult> getAccountAuthorizationDetailsAsync(GetAccountAuthorizationDetailsRequest request,java.util.concurrent.Future<GetAccountAuthorizationDetailsResult> getAccountAuthorizationDetailsAsync,GetAccountAuthorizationDetailsRequest request,com.amazonaws.handlers.AsyncHandler<GetAccountAuthorizationDetailsRequest, GetAccountAuthorizationDetailsResult> asyncHandler,java.util.concurrent.Future<GetAccountAuthorizationDetailsResult> getAccountAuthorizationDetailsAsync,java.util.concurrent.Future<GetAccountAuthorizationDetailsResult> getAccountAuthorizationDetailsAsync,com.amazonaws.handlers.AsyncHandler<GetAccountAuthorizationDetailsRequest, GetAccountAuthorizationDetailsResult> asyncHandler){\r\n    return getAccountAuthorizationDetailsAsync(new GetAccountAuthorizationDetailsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.UpdateAcceleratorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccelerator() != null)\r\n        sb.append(\"Accelerator: \").append(getAccelerator());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AttachedPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.updatePipeline",
	"Comment": "use the updatepipeline operation to update settings for a pipeline.when you change pipeline settings, your changes take effect immediately. jobs that you have already submitted andthat elastic transcoder has not started to process are affected in addition to jobs that you submit after youchange settings.",
	"Method": "UpdatePipelineResult updatePipeline(UpdatePipelineRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdatePipeline(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlias() != null)\r\n        sb.append(\"Alias: \").append(getAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListPoliciesGrantingServiceAccessResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPoliciesGrantingServiceAccess() != null)\r\n        sb.append(\"PoliciesGrantingServiceAccess: \").append(getPoliciesGrantingServiceAccess()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListPartsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMultipartUploadId() != null)\r\n        sb.append(\"MultipartUploadId: \").append(getMultipartUploadId()).append(\",\");\r\n    if (getVaultARN() != null)\r\n        sb.append(\"VaultARN: \").append(getVaultARN()).append(\",\");\r\n    if (getArchiveDescription() != null)\r\n        sb.append(\"ArchiveDescription: \").append(getArchiveDescription()).append(\",\");\r\n    if (getPartSizeInBytes() != null)\r\n        sb.append(\"PartSizeInBytes: \").append(getPartSizeInBytes()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getParts() != null)\r\n        sb.append(\"Parts: \").append(getParts()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Classifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGrokClassifier() != null)\r\n        sb.append(\"GrokClassifier: \").append(getGrokClassifier()).append(\",\");\r\n    if (getXMLClassifier() != null)\r\n        sb.append(\"XMLClassifier: \").append(getXMLClassifier()).append(\",\");\r\n    if (getJsonClassifier() != null)\r\n        sb.append(\"JsonClassifier: \").append(getJsonClassifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateAccessKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateSubscriptionDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSubscriptionDefinitionId() != null)\r\n        sb.append(\"SubscriptionDefinitionId: \").append(getSubscriptionDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.getDetector",
	"Comment": "retrieves an amazon guardduty detector specified by the detectorid.",
	"Method": "GetDetectorResult getDetector(GetDetectorRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDetector(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateConnectorDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.AssociateAdminAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.registerCrossAccountAccessRole",
	"Comment": "registers the iam role that grants amazon inspector access to aws services needed to perform securityassessments.",
	"Method": "RegisterCrossAccountAccessRoleResult registerCrossAccountAccessRole(RegisterCrossAccountAccessRoleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRegisterCrossAccountAccessRole(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.InitiateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getJobParameters() != null)\r\n        sb.append(\"JobParameters: \").append(getJobParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.AssociateRoleToGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.StartMonitoringMembersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountIds() != null)\r\n        sb.append(\"AccountIds: \").append(getAccountIds()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.getCredentialReport",
	"Comment": "retrieves a credential report for the aws account. for more information about the credential report, see getting credential reports inthe iam user guide.",
	"Method": "GetCredentialReportResult getCredentialReport(GetCredentialReportRequest request,GetCredentialReportResult getCredentialReport){\r\n    return getCredentialReport(new GetCredentialReportRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.BatchRetryStrategy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttempts() != null)\r\n        sb.append(\"Attempts: \").append(getAttempts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.SelectParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputSerialization() != null)\r\n        sb.append(\"InputSerialization: \").append(getInputSerialization()).append(\",\");\r\n    if (getExpressionType() != null)\r\n        sb.append(\"ExpressionType: \").append(getExpressionType()).append(\",\");\r\n    if (getExpression() != null)\r\n        sb.append(\"Expression: \").append(getExpression()).append(\",\");\r\n    if (getOutputSerialization() != null)\r\n        sb.append(\"OutputSerialization: \").append(getOutputSerialization());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteIPSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getIpSetId() != null)\r\n        sb.append(\"IpSetId: \").append(getIpSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.DisassociateAdminAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateMatchmakingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.ResizeJobFlowStep.withOnFailure",
	"Comment": "what action this step should take if the modification fails. this can happen whenyou request to perform an invalid action, such as shrink a core instance group.",
	"Method": "ResizeJobFlowStep withOnFailure(OnFailure onFailure){\r\n    this.onFailure = onFailure;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GlacierJobDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getJobDescription() != null)\r\n        sb.append(\"JobDescription: \").append(getJobDescription()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getArchiveId() != null)\r\n        sb.append(\"ArchiveId: \").append(getArchiveId()).append(\",\");\r\n    if (getVaultARN() != null)\r\n        sb.append(\"VaultARN: \").append(getVaultARN()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getCompleted() != null)\r\n        sb.append(\"Completed: \").append(getCompleted()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getArchiveSizeInBytes() != null)\r\n        sb.append(\"ArchiveSizeInBytes: \").append(getArchiveSizeInBytes()).append(\",\");\r\n    if (getInventorySizeInBytes() != null)\r\n        sb.append(\"InventorySizeInBytes: \").append(getInventorySizeInBytes()).append(\",\");\r\n    if (getSNSTopic() != null)\r\n        sb.append(\"SNSTopic: \").append(getSNSTopic()).append(\",\");\r\n    if (getCompletionDate() != null)\r\n        sb.append(\"CompletionDate: \").append(getCompletionDate()).append(\",\");\r\n    if (getSHA256TreeHash() != null)\r\n        sb.append(\"SHA256TreeHash: \").append(getSHA256TreeHash()).append(\",\");\r\n    if (getArchiveSHA256TreeHash() != null)\r\n        sb.append(\"ArchiveSHA256TreeHash: \").append(getArchiveSHA256TreeHash()).append(\",\");\r\n    if (getRetrievalByteRange() != null)\r\n        sb.append(\"RetrievalByteRange: \").append(getRetrievalByteRange()).append(\",\");\r\n    if (getTier() != null)\r\n        sb.append(\"Tier: \").append(getTier()).append(\",\");\r\n    if (getInventoryRetrievalParameters() != null)\r\n        sb.append(\"InventoryRetrievalParameters: \").append(getInventoryRetrievalParameters()).append(\",\");\r\n    if (getJobOutputPath() != null)\r\n        sb.append(\"JobOutputPath: \").append(getJobOutputPath()).append(\",\");\r\n    if (getSelectParameters() != null)\r\n        sb.append(\"SelectParameters: \").append(getSelectParameters()).append(\",\");\r\n    if (getOutputLocation() != null)\r\n        sb.append(\"OutputLocation: \").append(getOutputLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.waiters.AmazonElasticLoadBalancingWaiters.loadBalancerExists",
	"Comment": "builds a loadbalancerexists waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeLoadBalancersRequest> loadBalancerExists(){\r\n    return new WaiterBuilder<DescribeLoadBalancersRequest, DescribeLoadBalancersResult>().withSdkFunction(new DescribeLoadBalancersFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor(WaiterState.SUCCESS), new LoadBalancerExists.IsLoadBalancerNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.deleteAccountPasswordPolicyAsync",
	"Comment": "simplified method form for invoking the deleteaccountpasswordpolicy operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DeleteAccountPasswordPolicyResult> deleteAccountPasswordPolicyAsync(DeleteAccountPasswordPolicyRequest request,java.util.concurrent.Future<DeleteAccountPasswordPolicyResult> deleteAccountPasswordPolicyAsync,DeleteAccountPasswordPolicyRequest request,com.amazonaws.handlers.AsyncHandler<DeleteAccountPasswordPolicyRequest, DeleteAccountPasswordPolicyResult> asyncHandler,java.util.concurrent.Future<DeleteAccountPasswordPolicyResult> deleteAccountPasswordPolicyAsync,java.util.concurrent.Future<DeleteAccountPasswordPolicyResult> deleteAccountPasswordPolicyAsync,com.amazonaws.handlers.AsyncHandler<DeleteAccountPasswordPolicyRequest, DeleteAccountPasswordPolicyResult> asyncHandler){\r\n    return deleteAccountPasswordPolicyAsync(new DeleteAccountPasswordPolicyRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.getAccountSummaryAsync",
	"Comment": "simplified method form for invoking the getaccountsummary operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetAccountSummaryResult> getAccountSummaryAsync(GetAccountSummaryRequest request,java.util.concurrent.Future<GetAccountSummaryResult> getAccountSummaryAsync,GetAccountSummaryRequest request,com.amazonaws.handlers.AsyncHandler<GetAccountSummaryRequest, GetAccountSummaryResult> asyncHandler,java.util.concurrent.Future<GetAccountSummaryResult> getAccountSummaryAsync,java.util.concurrent.Future<GetAccountSummaryResult> getAccountSummaryAsync,com.amazonaws.handlers.AsyncHandler<GetAccountSummaryRequest, GetAccountSummaryResult> asyncHandler){\r\n    return getAccountSummaryAsync(new GetAccountSummaryRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteSSHPublicKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSSHPublicKeyId() != null)\r\n        sb.append(\"SSHPublicKeyId: \").append(getSSHPublicKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Order.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getColumn() != null)\r\n        sb.append(\"Column: \").append(getColumn()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.generateCredentialReport",
	"Comment": "generates a credential report for the aws account. for more information about the credential report, see getting credential reports inthe iam user guide.",
	"Method": "GenerateCredentialReportResult generateCredentialReport(GenerateCredentialReportRequest request,GenerateCredentialReportResult generateCredentialReport){\r\n    return generateCredentialReport(new GenerateCredentialReportRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AddTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetGroupCertificateAuthorityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupCertificateAuthorityArn() != null)\r\n        sb.append(\"GroupCertificateAuthorityArn: \").append(getGroupCertificateAuthorityArn()).append(\",\");\r\n    if (getGroupCertificateAuthorityId() != null)\r\n        sb.append(\"GroupCertificateAuthorityId: \").append(getGroupCertificateAuthorityId()).append(\",\");\r\n    if (getPemEncodedCertificate() != null)\r\n        sb.append(\"PemEncodedCertificate: \").append(getPemEncodedCertificate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ShrinkPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDecommissionTimeout() != null)\r\n        sb.append(\"DecommissionTimeout: \").append(getDecommissionTimeout()).append(\",\");\r\n    if (getInstanceResizePolicy() != null)\r\n        sb.append(\"InstanceResizePolicy: \").append(getInstanceResizePolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.getSSHPublicKey",
	"Comment": "retrieves the specified ssh public key, including metadata about the key.the ssh public key retrieved by this operation is used only for authenticating the associated iam user to an awscodecommit repository. for more information about using ssh keys to authenticate to an aws codecommit repository,see set up awscodecommit for ssh connections in the aws codecommit user guide.",
	"Method": "GetSSHPublicKeyResult getSSHPublicKey(GetSSHPublicKeyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSSHPublicKey(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListAttachedGroupPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedPolicies() != null)\r\n        sb.append(\"AttachedPolicies: \").append(getAttachedPolicies()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListBootstrapActionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBootstrapActions() != null)\r\n        sb.append(\"BootstrapActions: \").append(getBootstrapActions()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.JobFlowExecutionStatusDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime()).append(\",\");\r\n    if (getStartDateTime() != null)\r\n        sb.append(\"StartDateTime: \").append(getStartDateTime()).append(\",\");\r\n    if (getReadyDateTime() != null)\r\n        sb.append(\"ReadyDateTime: \").append(getReadyDateTime()).append(\",\");\r\n    if (getEndDateTime() != null)\r\n        sb.append(\"EndDateTime: \").append(getEndDateTime()).append(\",\");\r\n    if (getLastStateChangeReason() != null)\r\n        sb.append(\"LastStateChangeReason: \").append(getLastStateChangeReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazoncloudwatchevents using the current builder configuration.",
	"Method": "AmazonCloudWatchEvents build(AwsSyncClientParams params){\r\n    return new AmazonCloudWatchEventsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsgreengrassasync using the current builder configuration.",
	"Method": "AWSGreengrassAsync build(AwsAsyncClientParams params){\r\n    return new AWSGreengrassAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.RulePriorityPair.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleArn() != null)\r\n        sb.append(\"RuleArn: \").append(getRuleArn()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.getUpgradeStatus",
	"Comment": "retrieves the latest status of the last upgrade or upgrade eligibility check that was performed on the domain.",
	"Method": "GetUpgradeStatusResult getUpgradeStatus(GetUpgradeStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetUpgradeStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.FunctionConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncodingType() != null)\r\n        sb.append(\"EncodingType: \").append(getEncodingType()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getExecArgs() != null)\r\n        sb.append(\"ExecArgs: \").append(getExecArgs()).append(\",\");\r\n    if (getExecutable() != null)\r\n        sb.append(\"Executable: \").append(getExecutable()).append(\",\");\r\n    if (getMemorySize() != null)\r\n        sb.append(\"MemorySize: \").append(getMemorySize()).append(\",\");\r\n    if (getPinned() != null)\r\n        sb.append(\"Pinned: \").append(getPinned()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.Condition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StopFleetActionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.AWSFMSAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsfmsasync using the current builder configuration.",
	"Method": "AWSFMSAsync build(AwsAsyncClientParams params){\r\n    return new AWSFMSAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListTagsForVaultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteRolePermissionsBoundaryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ServerCertificateMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getServerCertificateName() != null)\r\n        sb.append(\"ServerCertificateName: \").append(getServerCertificateName()).append(\",\");\r\n    if (getServerCertificateId() != null)\r\n        sb.append(\"ServerCertificateId: \").append(getServerCertificateId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getUploadDate() != null)\r\n        sb.append(\"UploadDate: \").append(getUploadDate()).append(\",\");\r\n    if (getExpiration() != null)\r\n        sb.append(\"Expiration: \").append(getExpiration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateFleetPortSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.PolicySummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getSecurityServiceType() != null)\r\n        sb.append(\"SecurityServiceType: \").append(getSecurityServiceType()).append(\",\");\r\n    if (getRemediationEnabled() != null)\r\n        sb.append(\"RemediationEnabled: \").append(getRemediationEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UnarchiveFindingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AddJobFlowStepsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobFlowId() != null)\r\n        sb.append(\"JobFlowId: \").append(getJobFlowId()).append(\",\");\r\n    if (getSteps() != null)\r\n        sb.append(\"Steps: \").append(getSteps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateDevEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListStepsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSteps() != null)\r\n        sb.append(\"Steps: \").append(getSteps()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazoninspectorasync using the current builder configuration.",
	"Method": "AmazonInspectorAsync build(AwsAsyncClientParams params){\r\n    return new AmazonInspectorAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDatabaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetAccessKeyLastUsedRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.JobOutput.getComposition",
	"Comment": "you can create an output file that contains an excerpt from the input file. this excerpt, called a clip, can comefrom the beginning, middle, or end of the file. the composition object contains settings for the clips that makeup an output file. for the current release, you can only specify settings for a single clip per output file. thecomposition object cannot be null.",
	"Method": "java.util.List<Clip> getComposition(){\r\n    if (composition == null) {\r\n        composition = new com.amazonaws.internal.SdkInternalList<Clip>();\r\n    }\r\n    return composition;\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.PlacementType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTableVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableVersions() != null)\r\n        sb.append(\"TableVersions: \").append(getTableVersions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GrokClassifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getClassification() != null)\r\n        sb.append(\"Classification: \").append(getClassification()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdated() != null)\r\n        sb.append(\"LastUpdated: \").append(getLastUpdated()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getGrokPattern() != null)\r\n        sb.append(\"GrokPattern: \").append(getGrokPattern()).append(\",\");\r\n    if (getCustomPatterns() != null)\r\n        sb.append(\"CustomPatterns: \").append(getCustomPatterns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.CompleteVaultLockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getLockId() != null)\r\n        sb.append(\"LockId: \").append(getLockId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ListElasticsearchInstanceTypesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticsearchVersion() != null)\r\n        sb.append(\"ElasticsearchVersion: \").append(getElasticsearchVersion()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceGroupStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateChangeReason() != null)\r\n        sb.append(\"StateChangeReason: \").append(getStateChangeReason()).append(\",\");\r\n    if (getTimeline() != null)\r\n        sb.append(\"Timeline: \").append(getTimeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetDeploymentStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetClassifierRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateLoginProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getPasswordResetRequired() != null)\r\n        sb.append(\"PasswordResetRequired: \").append(getPasswordResetRequired());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.startElasticsearchServiceSoftwareUpdate",
	"Comment": "schedules a service software update for an amazon es domain.",
	"Method": "StartElasticsearchServiceSoftwareUpdateResult startElasticsearchServiceSoftwareUpdate(StartElasticsearchServiceSoftwareUpdateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartElasticsearchServiceSoftwareUpdate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListThreatIntelSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getThreatIntelSetIds() != null)\r\n        sb.append(\"ThreatIntelSetIds: \").append(getThreatIntelSetIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteFleetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.Step.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getConfig() != null)\r\n        sb.append(\"Config: \").append(getConfig()).append(\",\");\r\n    if (getActionOnFailure() != null)\r\n        sb.append(\"ActionOnFailure: \").append(getActionOnFailure()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.JdbcTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionName() != null)\r\n        sb.append(\"ConnectionName: \").append(getConnectionName()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getExclusions() != null)\r\n        sb.append(\"Exclusions: \").append(getExclusions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListAssessmentRunAgentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunAgents() != null)\r\n        sb.append(\"AssessmentRunAgents: \").append(getAssessmentRunAgents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listSAMLProviders",
	"Comment": "lists the saml provider resource objects defined in iam in the account.this operation requires signatureversion 4.",
	"Method": "ListSAMLProvidersResult listSAMLProviders(ListSAMLProvidersRequest request,ListSAMLProvidersResult listSAMLProviders){\r\n    return listSAMLProviders(new ListSAMLProvidersRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DeleteVaultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonidentitymanagementasync using the current builderconfiguration.",
	"Method": "AmazonIdentityManagementAsync build(AwsAsyncClientParams params){\r\n    return new AmazonIdentityManagementAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.getSAMLProvider",
	"Comment": "returns the saml provider metadocument that was uploaded when the iam saml provider resource object was createdor updated.this operation requires signatureversion 4.",
	"Method": "GetSAMLProviderResult getSAMLProvider(GetSAMLProviderRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSAMLProvider(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.LustreFileSystemConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWeeklyMaintenanceStartTime() != null)\r\n        sb.append(\"WeeklyMaintenanceStartTime: \").append(getWeeklyMaintenanceStartTime()).append(\",\");\r\n    if (getDataRepositoryConfiguration() != null)\r\n        sb.append(\"DataRepositoryConfiguration: \").append(getDataRepositoryConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.waiters.AmazonElasticLoadBalancingWaiters.loadBalancerAvailable",
	"Comment": "builds a loadbalanceravailable waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeLoadBalancersRequest> loadBalancerAvailable(){\r\n    return new WaiterBuilder<DescribeLoadBalancersRequest, DescribeLoadBalancersResult>().withSdkFunction(new DescribeLoadBalancersFunction(client)).withAcceptors(new LoadBalancerAvailable.IsActiveMatcher(), new LoadBalancerAvailable.IsProvisioningMatcher(), new LoadBalancerAvailable.IsLoadBalancerNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.CancelStepsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getStepIds() != null)\r\n        sb.append(\"StepIds: \").append(getStepIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.getContextKeysForCustomPolicy",
	"Comment": "gets a list of all of the context keys referenced in the input policies. the policies are supplied as a list ofone or more strings. to get the context keys from policies associated with an iam user, group, or role, usegetcontextkeysforprincipalpolicy.context keys are variables maintained by aws and its services that provide details about the context of an apiquery request. context keys can be evaluated by testing against a value specified in an iam policy. usegetcontextkeysforcustompolicy to understand what key names and values you must supply when you callsimulatecustompolicy. note that all parameters are shown in unencoded form here for clarity but must beurl encoded to be included as a part of a real html request.",
	"Method": "GetContextKeysForCustomPolicyResult getContextKeysForCustomPolicy(GetContextKeysForCustomPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetContextKeysForCustomPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.PutNotificationChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ListFleetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetIds() != null)\r\n        sb.append(\"FleetIds: \").append(getFleetIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTriggerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DynamoDBTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.AcceptMatchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.completeVaultLock",
	"Comment": "this operation completes the vault locking process by transitioning the vault lock from theinprogress state to the locked state, which causes the vault lock policy to becomeunchangeable. a vault lock is put into the inprogress state by calling initiatevaultlock. youcan obtain the state of the vault lock by calling getvaultlock. for more information about the vaultlocking process, amazon glaciervault lock.this operation is idempotent. this request is always successful if the vault lock is in the lockedstate and the provided lock id matches the lock id originally used to lock the vault.if an invalid lock id is passed in the request when the vault lock is in the locked state, theoperation returns an accessdeniedexception error. if an invalid lock id is passed in the requestwhen the vault lock is in the inprogress state, the operation throws aninvalidparameter error.",
	"Method": "CompleteVaultLockResult completeVaultLock(CompleteVaultLockRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCompleteVaultLock(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.createAccessKeyAsync",
	"Comment": "simplified method form for invoking the createaccesskey operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateAccessKeyResult> createAccessKeyAsync(CreateAccessKeyRequest request,java.util.concurrent.Future<CreateAccessKeyResult> createAccessKeyAsync,CreateAccessKeyRequest request,com.amazonaws.handlers.AsyncHandler<CreateAccessKeyRequest, CreateAccessKeyResult> asyncHandler,java.util.concurrent.Future<CreateAccessKeyResult> createAccessKeyAsync,java.util.concurrent.Future<CreateAccessKeyResult> createAccessKeyAsync,com.amazonaws.handlers.AsyncHandler<CreateAccessKeyRequest, CreateAccessKeyResult> asyncHandler){\r\n    return createAccessKeyAsync(new CreateAccessKeyRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateVirtualMFADeviceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVirtualMFADevice() != null)\r\n        sb.append(\"VirtualMFADevice: \").append(getVirtualMFADevice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.NetworkConnectionAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlocked() != null)\r\n        sb.append(\"Blocked: \").append(getBlocked()).append(\",\");\r\n    if (getConnectionDirection() != null)\r\n        sb.append(\"ConnectionDirection: \").append(getConnectionDirection()).append(\",\");\r\n    if (getLocalPortDetails() != null)\r\n        sb.append(\"LocalPortDetails: \").append(getLocalPortDetails()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getRemoteIpDetails() != null)\r\n        sb.append(\"RemoteIpDetails: \").append(getRemoteIpDetails()).append(\",\");\r\n    if (getRemotePortDetails() != null)\r\n        sb.append(\"RemotePortDetails: \").append(getRemotePortDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeGameSessionQueuesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionQueues() != null)\r\n        sb.append(\"GameSessionQueues: \").append(getGameSessionQueues()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteVirtualMFADeviceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSerialNumber() != null)\r\n        sb.append(\"SerialNumber: \").append(getSerialNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ReadPipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ArchiveFindingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DeleteAssessmentTargetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.JobOutput.setComposition",
	"Comment": "you can create an output file that contains an excerpt from the input file. this excerpt, called a clip, can comefrom the beginning, middle, or end of the file. the composition object contains settings for the clips that makeup an output file. for the current release, you can only specify settings for a single clip per output file. thecomposition object cannot be null.",
	"Method": "void setComposition(java.util.Collection<Clip> composition){\r\n    if (composition == null) {\r\n        this.composition = null;\r\n        return;\r\n    }\r\n    this.composition = new com.amazonaws.internal.SdkInternalList<Clip>(composition);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateRoleDescriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateGameSessionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSession() != null)\r\n        sb.append(\"GameSession: \").append(getGameSession());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ServerProcess.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLaunchPath() != null)\r\n        sb.append(\"LaunchPath: \").append(getLaunchPath()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getConcurrentExecutions() != null)\r\n        sb.append(\"ConcurrentExecutions: \").append(getConcurrentExecutions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateAccountPasswordPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinimumPasswordLength() != null)\r\n        sb.append(\"MinimumPasswordLength: \").append(getMinimumPasswordLength()).append(\",\");\r\n    if (getRequireSymbols() != null)\r\n        sb.append(\"RequireSymbols: \").append(getRequireSymbols()).append(\",\");\r\n    if (getRequireNumbers() != null)\r\n        sb.append(\"RequireNumbers: \").append(getRequireNumbers()).append(\",\");\r\n    if (getRequireUppercaseCharacters() != null)\r\n        sb.append(\"RequireUppercaseCharacters: \").append(getRequireUppercaseCharacters()).append(\",\");\r\n    if (getRequireLowercaseCharacters() != null)\r\n        sb.append(\"RequireLowercaseCharacters: \").append(getRequireLowercaseCharacters()).append(\",\");\r\n    if (getAllowUsersToChangePassword() != null)\r\n        sb.append(\"AllowUsersToChangePassword: \").append(getAllowUsersToChangePassword()).append(\",\");\r\n    if (getMaxPasswordAge() != null)\r\n        sb.append(\"MaxPasswordAge: \").append(getMaxPasswordAge()).append(\",\");\r\n    if (getPasswordReusePrevention() != null)\r\n        sb.append(\"PasswordReusePrevention: \").append(getPasswordReusePrevention()).append(\",\");\r\n    if (getHardExpiry() != null)\r\n        sb.append(\"HardExpiry: \").append(getHardExpiry());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.deleteDetector",
	"Comment": "deletes a amazon guardduty detector specified by the detector id.",
	"Method": "DeleteDetectorResult deleteDetector(DeleteDetectorRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDetector(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteUserPermissionsBoundaryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteTriggerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StartGameSessionPlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionPlacement() != null)\r\n        sb.append(\"GameSessionPlacement: \").append(getGameSessionPlacement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.PortRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobList() != null)\r\n        sb.append(\"JobList: \").append(getJobList()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListSecurityConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityConfigurations() != null)\r\n        sb.append(\"SecurityConfigurations: \").append(getSecurityConfigurations()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetSecurityConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteMembersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedAccounts() != null)\r\n        sb.append(\"UnprocessedAccounts: \").append(getUnprocessedAccounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.TagUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.ListMemberAccountsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberAccounts() != null)\r\n        sb.append(\"MemberAccounts: \").append(getMemberAccounts()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.AddTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateGameSessionQueueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTimeoutInSeconds() != null)\r\n        sb.append(\"TimeoutInSeconds: \").append(getTimeoutInSeconds()).append(\",\");\r\n    if (getPlayerLatencyPolicies() != null)\r\n        sb.append(\"PlayerLatencyPolicies: \").append(getPlayerLatencyPolicies()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ValidateMatchmakingRuleSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleSetBody() != null)\r\n        sb.append(\"RuleSetBody: \").append(getRuleSetBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.waiters.GetUserFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "GetUserResult apply(GetUserRequest getUserRequest){\r\n    return client.getUser(getUserRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.ResizeJobFlowStep.withWait",
	"Comment": "specifies whether the step should wait for the modification to completeor if it should just continue onto the next step once the modificationrequest is received. defaults to true.",
	"Method": "ResizeJobFlowStep withWait(boolean wait){\r\n    this.wait = wait;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listMFADevices",
	"Comment": "lists the mfa devices for an iam user. if the request includes a iam user name, then this operation lists all themfa devices associated with the specified user. if you do not specify a user name, iam determines the user nameimplicitly based on the aws access key id signing the request for this api.you can paginate the results using the maxitems and marker parameters.",
	"Method": "ListMFADevicesResult listMFADevices(ListMFADevicesRequest request,ListMFADevicesResult listMFADevices){\r\n    return listMFADevices(new ListMFADevicesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.readPipeline",
	"Comment": "the readpipeline operation gets detailed information about a pipeline.",
	"Method": "ReadPipelineResult readPipeline(ReadPipelineRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeReadPipeline(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.TagDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.enableMFADevice",
	"Comment": "enables the specified mfa device and associates it with the specified iam user. when enabled, the mfa device isrequired for every subsequent login by the iam user associated with the device.",
	"Method": "EnableMFADeviceResult enableMFADevice(EnableMFADeviceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeEnableMFADevice(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.SupportedProductConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArgs() != null)\r\n        sb.append(\"Args: \").append(getArgs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteServiceSpecificCredentialRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getServiceSpecificCredentialId() != null)\r\n        sb.append(\"ServiceSpecificCredentialId: \").append(getServiceSpecificCredentialId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.JsonClassifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdated() != null)\r\n        sb.append(\"LastUpdated: \").append(getLastUpdated()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getJsonPath() != null)\r\n        sb.append(\"JsonPath: \").append(getJsonPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GroupCertificateAuthorityProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupCertificateAuthorityArn() != null)\r\n        sb.append(\"GroupCertificateAuthorityArn: \").append(getGroupCertificateAuthorityArn()).append(\",\");\r\n    if (getGroupCertificateAuthorityId() != null)\r\n        sb.append(\"GroupCertificateAuthorityId: \").append(getGroupCertificateAuthorityId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateServiceLinkedRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAWSServiceName() != null)\r\n        sb.append(\"AWSServiceName: \").append(getAWSServiceName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCustomSuffix() != null)\r\n        sb.append(\"CustomSuffix: \").append(getCustomSuffix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsClient.removePermission",
	"Comment": "revokes the permission of another aws account to be able to put events to your default event bus. specify theaccount to revoke by the statementid value that you associated with the account when you granted itpermission with putpermission. you can find the statementid by usingdescribeeventbus.",
	"Method": "RemovePermissionResult removePermission(RemovePermissionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemovePermission(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.DescribeJobFlowsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobFlows() != null)\r\n        sb.append(\"JobFlows: \").append(getJobFlows());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetContextKeysForCustomPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContextKeyNames() != null)\r\n        sb.append(\"ContextKeyNames: \").append(getContextKeyNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.MappingEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceTable() != null)\r\n        sb.append(\"SourceTable: \").append(getSourceTable()).append(\",\");\r\n    if (getSourcePath() != null)\r\n        sb.append(\"SourcePath: \").append(getSourcePath()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getTargetTable() != null)\r\n        sb.append(\"TargetTable: \").append(getTargetTable()).append(\",\");\r\n    if (getTargetPath() != null)\r\n        sb.append(\"TargetPath: \").append(getTargetPath()).append(\",\");\r\n    if (getTargetType() != null)\r\n        sb.append(\"TargetType: \").append(getTargetType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateGroupCertificateAuthorityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupCertificateAuthorityArn() != null)\r\n        sb.append(\"GroupCertificateAuthorityArn: \").append(getGroupCertificateAuthorityArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.Player.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlayerId() != null)\r\n        sb.append(\"PlayerId: \").append(getPlayerId()).append(\",\");\r\n    if (getPlayerAttributes() != null)\r\n        sb.append(\"PlayerAttributes: \").append(getPlayerAttributes()).append(\",\");\r\n    if (getTeam() != null)\r\n        sb.append(\"Team: \").append(getTeam()).append(\",\");\r\n    if (getLatencyInMs() != null)\r\n        sb.append(\"LatencyInMs: \").append(getLatencyInMs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteGameSessionQueueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListSubscriptionDefinitionVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSubscriptionDefinitionId() != null)\r\n        sb.append(\"SubscriptionDefinitionId: \").append(getSubscriptionDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.SearchGameSessionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getAliasId() != null)\r\n        sb.append(\"AliasId: \").append(getAliasId()).append(\",\");\r\n    if (getFilterExpression() != null)\r\n        sb.append(\"FilterExpression: \").append(getFilterExpression()).append(\",\");\r\n    if (getSortExpression() != null)\r\n        sb.append(\"SortExpression: \").append(getSortExpression()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteLoginProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.SecurityServicePolicyData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getManagedServiceData() != null)\r\n        sb.append(\"ManagedServiceData: \").append(getManagedServiceData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchDeleteTableVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getVersionIds() != null)\r\n        sb.append(\"VersionIds: \").append(getVersionIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.EBSOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEBSEnabled() != null)\r\n        sb.append(\"EBSEnabled: \").append(getEBSEnabled()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getVolumeSize() != null)\r\n        sb.append(\"VolumeSize: \").append(getVolumeSize()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.MFADevice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSerialNumber() != null)\r\n        sb.append(\"SerialNumber: \").append(getSerialNumber()).append(\",\");\r\n    if (getEnableDate() != null)\r\n        sb.append(\"EnableDate: \").append(getEnableDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Playlist.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getOutputKeys() != null)\r\n        sb.append(\"OutputKeys: \").append(getOutputKeys()).append(\",\");\r\n    if (getHlsContentProtection() != null)\r\n        sb.append(\"HlsContentProtection: \").append(getHlsContentProtection()).append(\",\");\r\n    if (getPlayReadyDrm() != null)\r\n        sb.append(\"PlayReadyDrm: \").append(getPlayReadyDrm()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusDetail() != null)\r\n        sb.append(\"StatusDetail: \").append(getStatusDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.SSHPublicKey.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSSHPublicKeyId() != null)\r\n        sb.append(\"SSHPublicKeyId: \").append(getSSHPublicKeyId()).append(\",\");\r\n    if (getFingerprint() != null)\r\n        sb.append(\"Fingerprint: \").append(getFingerprint()).append(\",\");\r\n    if (getSSHPublicKeyBody() != null)\r\n        sb.append(\"SSHPublicKeyBody: \").append(getSSHPublicKeyBody()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getUploadDate() != null)\r\n        sb.append(\"UploadDate: \").append(getUploadDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.GetAdminAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdminAccount() != null)\r\n        sb.append(\"AdminAccount: \").append(getAdminAccount()).append(\",\");\r\n    if (getRoleStatus() != null)\r\n        sb.append(\"RoleStatus: \").append(getRoleStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Captions.setCaptionSources",
	"Comment": "source files for the input sidecar captions used during the transcoding process. to omit all sidecar captions,leave captionsources blank.",
	"Method": "void setCaptionSources(java.util.Collection<CaptionSource> captionSources){\r\n    if (captionSources == null) {\r\n        this.captionSources = null;\r\n        return;\r\n    }\r\n    this.captionSources = new com.amazonaws.internal.SdkInternalList<CaptionSource>(captionSources);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateFleetAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getNewGameSessionProtectionPolicy() != null)\r\n        sb.append(\"NewGameSessionProtectionPolicy: \").append(getNewGameSessionProtectionPolicy()).append(\",\");\r\n    if (getResourceCreationLimitPolicy() != null)\r\n        sb.append(\"ResourceCreationLimitPolicy: \").append(getResourceCreationLimitPolicy()).append(\",\");\r\n    if (getMetricGroups() != null)\r\n        sb.append(\"MetricGroups: \").append(getMetricGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.AcceptMatchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTicketId() != null)\r\n        sb.append(\"TicketId: \").append(getTicketId()).append(\",\");\r\n    if (getPlayerIds() != null)\r\n        sb.append(\"PlayerIds: \").append(getPlayerIds()).append(\",\");\r\n    if (getAcceptanceType() != null)\r\n        sb.append(\"AcceptanceType: \").append(getAcceptanceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.AmazonFSxAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.UpdateListenerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListener() != null)\r\n        sb.append(\"Listener: \").append(getListener());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listRoleTags",
	"Comment": "lists the tags that are attached to the specified role. the returned list of tags is sorted by tag key. for moreinformation about tagging, see tagging iamidentities in the iam user guide.",
	"Method": "ListRoleTagsResult listRoleTags(ListRoleTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListRoleTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeactivateMFADeviceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetServiceLastAccessedDetailsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.OpenIDConnectProviderListEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.IpPermission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort()).append(\",\");\r\n    if (getIpRange() != null)\r\n        sb.append(\"IpRange: \").append(getIpRange()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateAccountAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeclineInvitationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedAccounts() != null)\r\n        sb.append(\"UnprocessedAccounts: \").append(getUnprocessedAccounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PasswordPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinimumPasswordLength() != null)\r\n        sb.append(\"MinimumPasswordLength: \").append(getMinimumPasswordLength()).append(\",\");\r\n    if (getRequireSymbols() != null)\r\n        sb.append(\"RequireSymbols: \").append(getRequireSymbols()).append(\",\");\r\n    if (getRequireNumbers() != null)\r\n        sb.append(\"RequireNumbers: \").append(getRequireNumbers()).append(\",\");\r\n    if (getRequireUppercaseCharacters() != null)\r\n        sb.append(\"RequireUppercaseCharacters: \").append(getRequireUppercaseCharacters()).append(\",\");\r\n    if (getRequireLowercaseCharacters() != null)\r\n        sb.append(\"RequireLowercaseCharacters: \").append(getRequireLowercaseCharacters()).append(\",\");\r\n    if (getAllowUsersToChangePassword() != null)\r\n        sb.append(\"AllowUsersToChangePassword: \").append(getAllowUsersToChangePassword()).append(\",\");\r\n    if (getExpirePasswords() != null)\r\n        sb.append(\"ExpirePasswords: \").append(getExpirePasswords()).append(\",\");\r\n    if (getMaxPasswordAge() != null)\r\n        sb.append(\"MaxPasswordAge: \").append(getMaxPasswordAge()).append(\",\");\r\n    if (getPasswordReusePrevention() != null)\r\n        sb.append(\"PasswordReusePrevention: \").append(getPasswordReusePrevention()).append(\",\");\r\n    if (getHardExpiry() != null)\r\n        sb.append(\"HardExpiry: \").append(getHardExpiry());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.waiters.GetInstanceProfileFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "GetInstanceProfileResult apply(GetInstanceProfileRequest getInstanceProfileRequest){\r\n    return client.getInstanceProfile(getInstanceProfileRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CodeGenNode.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getArgs() != null)\r\n        sb.append(\"Args: \").append(getArgs()).append(\",\");\r\n    if (getLineNumber() != null)\r\n        sb.append(\"LineNumber: \").append(getLineNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.AmazonImportExportClient.cancelJob",
	"Comment": "this operation cancels a specified job. only the job owner can cancel it. the operation fails if the job hasalready started or is complete.",
	"Method": "CancelJobResult cancelJob(CancelJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCancelJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.AttributeValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS() != null)\r\n        sb.append(\"S: \").append(getS()).append(\",\");\r\n    if (getN() != null)\r\n        sb.append(\"N: \").append(getN()).append(\",\");\r\n    if (getSL() != null)\r\n        sb.append(\"SL: \").append(getSL()).append(\",\");\r\n    if (getSDM() != null)\r\n        sb.append(\"SDM: \").append(getSDM());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.EvaluationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComplianceStatus() != null)\r\n        sb.append(\"ComplianceStatus: \").append(getComplianceStatus()).append(\",\");\r\n    if (getViolatorCount() != null)\r\n        sb.append(\"ViolatorCount: \").append(getViolatorCount()).append(\",\");\r\n    if (getEvaluationLimitExceeded() != null)\r\n        sb.append(\"EvaluationLimitExceeded: \").append(getEvaluationLimitExceeded());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.CreateVaultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateIPSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpSetId() != null)\r\n        sb.append(\"IpSetId: \").append(getIpSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeclineInvitationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountIds() != null)\r\n        sb.append(\"AccountIds: \").append(getAccountIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GetVaultAccessPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.getUserDefinedFunctions",
	"Comment": "retrieves a multiple function definitions from the data catalog.",
	"Method": "GetUserDefinedFunctionsResult getUserDefinedFunctions(GetUserDefinedFunctionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetUserDefinedFunctions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.AmazonImportExportClient.createJob",
	"Comment": "this operation initiates the process of scheduling an upload or download of your data. you include in the requesta manifest that describes the data transfer specifics. the response to the request includes a job id, which youcan use in other operations, a signature that you use to identify your storage device, and the address where youshould ship your storage device.",
	"Method": "CreateJobResult createJob(CreateJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListGroupPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyNames() != null)\r\n        sb.append(\"PolicyNames: \").append(getPolicyNames()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.UploadListElement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMultipartUploadId() != null)\r\n        sb.append(\"MultipartUploadId: \").append(getMultipartUploadId()).append(\",\");\r\n    if (getVaultARN() != null)\r\n        sb.append(\"VaultARN: \").append(getVaultARN()).append(\",\");\r\n    if (getArchiveDescription() != null)\r\n        sb.append(\"ArchiveDescription: \").append(getArchiveDescription()).append(\",\");\r\n    if (getPartSizeInBytes() != null)\r\n        sb.append(\"PartSizeInBytes: \").append(getPartSizeInBytes()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateFunctionDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.AWSHealthClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.disassociateServiceRoleFromAccount",
	"Comment": "disassociates the service role from your account. without a service role, deployments will not work.",
	"Method": "DisassociateServiceRoleFromAccountResult disassociateServiceRoleFromAccount(DisassociateServiceRoleFromAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateServiceRoleFromAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListDeploymentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeployments() != null)\r\n        sb.append(\"Deployments: \").append(getDeployments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.InviteMembersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountIds() != null)\r\n        sb.append(\"AccountIds: \").append(getAccountIds()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getDisableEmailNotification() != null)\r\n        sb.append(\"DisableEmailNotification: \").append(getDisableEmailNotification()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateResourceDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getResourceDefinitionId() != null)\r\n        sb.append(\"ResourceDefinitionId: \").append(getResourceDefinitionId()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateAssumeRolePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateSSHPublicKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreatePresetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPreset() != null)\r\n        sb.append(\"Preset: \").append(getPreset()).append(\",\");\r\n    if (getWarning() != null)\r\n        sb.append(\"Warning: \").append(getWarning());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteDatabaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteAccountPasswordPolicy",
	"Comment": "deletes the password policy for the aws account. there are no parameters.",
	"Method": "DeleteAccountPasswordPolicyResult deleteAccountPasswordPolicy(DeleteAccountPasswordPolicyRequest request,DeleteAccountPasswordPolicyResult deleteAccountPasswordPolicy){\r\n    return deleteAccountPasswordPolicy(new DeleteAccountPasswordPolicyRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.EventDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvent() != null)\r\n        sb.append(\"Event: \").append(getEvent()).append(\",\");\r\n    if (getEventDescription() != null)\r\n        sb.append(\"EventDescription: \").append(getEventDescription()).append(\",\");\r\n    if (getEventMetadata() != null)\r\n        sb.append(\"EventMetadata: \").append(getEventMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.PresetWatermark.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getMaxWidth() != null)\r\n        sb.append(\"MaxWidth: \").append(getMaxWidth()).append(\",\");\r\n    if (getMaxHeight() != null)\r\n        sb.append(\"MaxHeight: \").append(getMaxHeight()).append(\",\");\r\n    if (getSizingPolicy() != null)\r\n        sb.append(\"SizingPolicy: \").append(getSizingPolicy()).append(\",\");\r\n    if (getHorizontalAlign() != null)\r\n        sb.append(\"HorizontalAlign: \").append(getHorizontalAlign()).append(\",\");\r\n    if (getHorizontalOffset() != null)\r\n        sb.append(\"HorizontalOffset: \").append(getHorizontalOffset()).append(\",\");\r\n    if (getVerticalAlign() != null)\r\n        sb.append(\"VerticalAlign: \").append(getVerticalAlign()).append(\",\");\r\n    if (getVerticalOffset() != null)\r\n        sb.append(\"VerticalOffset: \").append(getVerticalOffset()).append(\",\");\r\n    if (getOpacity() != null)\r\n        sb.append(\"Opacity: \").append(getOpacity()).append(\",\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.SetVaultNotificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.ListEndpointGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointGroups() != null)\r\n        sb.append(\"EndpointGroups: \").append(getEndpointGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsglobalaccelerator using the current builder configuration.",
	"Method": "AWSGlobalAccelerator build(AwsSyncClientParams params){\r\n    return new AWSGlobalAcceleratorClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CatalogEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DomainDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AddRoleToInstanceProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateGameSessionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getAliasId() != null)\r\n        sb.append(\"AliasId: \").append(getAliasId()).append(\",\");\r\n    if (getMaximumPlayerSessionCount() != null)\r\n        sb.append(\"MaximumPlayerSessionCount: \").append(getMaximumPlayerSessionCount()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getGameProperties() != null)\r\n        sb.append(\"GameProperties: \").append(getGameProperties()).append(\",\");\r\n    if (getCreatorId() != null)\r\n        sb.append(\"CreatorId: \").append(getCreatorId()).append(\",\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId()).append(\",\");\r\n    if (getIdempotencyToken() != null)\r\n        sb.append(\"IdempotencyToken: \").append(getIdempotencyToken()).append(\",\");\r\n    if (getGameSessionData() != null)\r\n        sb.append(\"GameSessionData: \").append(getGameSessionData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetUserDefinedFunctionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PolicyGrantingServiceAccess.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyType() != null)\r\n        sb.append(\"PolicyType: \").append(getPolicyType()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getEntityType() != null)\r\n        sb.append(\"EntityType: \").append(getEntityType()).append(\",\");\r\n    if (getEntityName() != null)\r\n        sb.append(\"EntityName: \").append(getEntityName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Captions.getCaptionSources",
	"Comment": "source files for the input sidecar captions used during the transcoding process. to omit all sidecar captions,leave captionsources blank.",
	"Method": "java.util.List<CaptionSource> getCaptionSources(){\r\n    if (captionSources == null) {\r\n        captionSources = new com.amazonaws.internal.SdkInternalList<CaptionSource>();\r\n    }\r\n    return captionSources;\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeGameSessionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessions() != null)\r\n        sb.append(\"GameSessions: \").append(getGameSessions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DataCatalogEncryptionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncryptionAtRest() != null)\r\n        sb.append(\"EncryptionAtRest: \").append(getEncryptionAtRest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateJsonClassifierRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getJsonPath() != null)\r\n        sb.append(\"JsonPath: \").append(getJsonPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceFleetStateChangeReason.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonguarddutyasync using the current builder configuration.",
	"Method": "AmazonGuardDutyAsync build(AwsAsyncClientParams params){\r\n    return new AmazonGuardDutyAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.AWSFMSClient.getAdminAccount",
	"Comment": "returns the aws organizations master account that is associated with aws firewall manager as the aws firewallmanager administrator.",
	"Method": "GetAdminAccountResult getAdminAccount(GetAdminAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetAdminAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceGroupModifyConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceGroupId() != null)\r\n        sb.append(\"InstanceGroupId: \").append(getInstanceGroupId()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getEC2InstanceIdsToTerminate() != null)\r\n        sb.append(\"EC2InstanceIdsToTerminate: \").append(getEC2InstanceIdsToTerminate()).append(\",\");\r\n    if (getShrinkPolicy() != null)\r\n        sb.append(\"ShrinkPolicy: \").append(getShrinkPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetInvitationsCountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInvitationsCount() != null)\r\n        sb.append(\"InvitationsCount: \").append(getInvitationsCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeFindingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFindings() != null)\r\n        sb.append(\"Findings: \").append(getFindings()).append(\",\");\r\n    if (getFailedItems() != null)\r\n        sb.append(\"FailedItems: \").append(getFailedItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.PutAutoScalingPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getInstanceGroupId() != null)\r\n        sb.append(\"InstanceGroupId: \").append(getInstanceGroupId()).append(\",\");\r\n    if (getAutoScalingPolicy() != null)\r\n        sb.append(\"AutoScalingPolicy: \").append(getAutoScalingPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.getDataCatalogEncryptionSettings",
	"Comment": "retrieves the security configuration for a specified catalog.",
	"Method": "GetDataCatalogEncryptionSettingsResult getDataCatalogEncryptionSettings(GetDataCatalogEncryptionSettingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDataCatalogEncryptionSettings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.SetDataRetrievalPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PutGroupPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteSAMLProviderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ResolveAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasId() != null)\r\n        sb.append(\"AliasId: \").append(getAliasId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetJobRunsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobRuns() != null)\r\n        sb.append(\"JobRuns: \").append(getJobRuns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.Group.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DescribeEndpointGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointGroupArn() != null)\r\n        sb.append(\"EndpointGroupArn: \").append(getEndpointGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.EBSOptionsStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AssessmentTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getResourceGroupArn() != null)\r\n        sb.append(\"ResourceGroupArn: \").append(getResourceGroupArn()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getUpdatedAt() != null)\r\n        sb.append(\"UpdatedAt: \").append(getUpdatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.EventDetailsErrorItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventArn() != null)\r\n        sb.append(\"EventArn: \").append(getEventArn()).append(\",\");\r\n    if (getErrorName() != null)\r\n        sb.append(\"ErrorName: \").append(getErrorName()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.updateSAMLProvider",
	"Comment": "updates the metadata document for an existing saml provider resource object.this operation requires signatureversion 4.",
	"Method": "UpdateSAMLProviderResult updateSAMLProvider(UpdateSAMLProviderRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateSAMLProvider(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ListDomainNamesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainNames() != null)\r\n        sb.append(\"DomainNames: \").append(getDomainNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteUserPermissionsBoundary",
	"Comment": "deletes the permissions boundary for the specified iam user.deleting the permissions boundary for a user might increase its permissions by allowing the user to perform allthe actions granted in its permissions policies.",
	"Method": "DeleteUserPermissionsBoundaryResult deleteUserPermissionsBoundary(DeleteUserPermissionsBoundaryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteUserPermissionsBoundary(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceAsyncClient.listClustersAsync",
	"Comment": "simplified method form for invoking the listclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListClustersResult> listClustersAsync(ListClustersRequest request,java.util.concurrent.Future<ListClustersResult> listClustersAsync,ListClustersRequest request,com.amazonaws.handlers.AsyncHandler<ListClustersRequest, ListClustersResult> asyncHandler,java.util.concurrent.Future<ListClustersResult> listClustersAsync,java.util.concurrent.Future<ListClustersResult> listClustersAsync,com.amazonaws.handlers.AsyncHandler<ListClustersRequest, ListClustersResult> asyncHandler){\r\n    return listClustersAsync(new ListClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetFindingsStatisticsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFindingStatistics() != null)\r\n        sb.append(\"FindingStatistics: \").append(getFindingStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Condition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogicalOperator() != null)\r\n        sb.append(\"LogicalOperator: \").append(getLogicalOperator()).append(\",\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.listFindings",
	"Comment": "lists findings that are generated by the assessment runs that are specified by the arns of the assessment runs.",
	"Method": "ListFindingsResult listFindings(ListFindingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListFindings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.waiters.AmazonElasticMapReduceWaiters.clusterRunning",
	"Comment": "builds a clusterrunning waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeClusterRequest> clusterRunning(){\r\n    return new WaiterBuilder<DescribeClusterRequest, DescribeClusterResult>().withSdkFunction(new DescribeClusterFunction(client)).withAcceptors(new ClusterRunning.IsRUNNINGMatcher(), new ClusterRunning.IsWAITINGMatcher(), new ClusterRunning.IsTERMINATINGMatcher(), new ClusterRunning.IsTERMINATEDMatcher(), new ClusterRunning.IsTERMINATED_WITH_ERRORSMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.AmazonImportExportAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonimportexportasync using the current builder configuration.",
	"Method": "AmazonImportExportAsync build(AwsAsyncClientParams params){\r\n    return new AmazonImportExportAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateLoggerDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceGroupStateChangeReason.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Warning.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ScriptBootstrapActionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getArgs() != null)\r\n        sb.append(\"Args: \").append(getArgs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTriggerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrigger() != null)\r\n        sb.append(\"Trigger: \").append(getTrigger());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.getTables",
	"Comment": "retrieves the definitions of some or all of the tables in a given database.",
	"Method": "GetTablesResult getTables(GetTablesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTables(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteLoginProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeReservedElasticsearchInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getReservedElasticsearchInstances() != null)\r\n        sb.append(\"ReservedElasticsearchInstances: \").append(getReservedElasticsearchInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.JobWatermark.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPresetWatermarkId() != null)\r\n        sb.append(\"PresetWatermarkId: \").append(getPresetWatermarkId()).append(\",\");\r\n    if (getInputKey() != null)\r\n        sb.append(\"InputKey: \").append(getInputKey()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.AbortVaultLockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListGroupPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ResyncMFADeviceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSerialNumber() != null)\r\n        sb.append(\"SerialNumber: \").append(getSerialNumber()).append(\",\");\r\n    if (getAuthenticationCode1() != null)\r\n        sb.append(\"AuthenticationCode1: \").append(getAuthenticationCode1()).append(\",\");\r\n    if (getAuthenticationCode2() != null)\r\n        sb.append(\"AuthenticationCode2: \").append(getAuthenticationCode2());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.listJobsByPipeline",
	"Comment": "the listjobsbypipeline operation gets a list of the jobs currently in a pipeline.elastic transcoder returns all of the jobs currently in the specified pipeline. the response body contains oneelement for each job that satisfies the search criteria.",
	"Method": "ListJobsByPipelineResult listJobsByPipeline(ListJobsByPipelineRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListJobsByPipeline(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.DeleteRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateBuildResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuild() != null)\r\n        sb.append(\"Build: \").append(getBuild());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.S3Target.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getExclusions() != null)\r\n        sb.append(\"Exclusions: \").append(getExclusions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetSubscriptionDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.UploadMultipartPartResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.PutPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.JobAlbumArt.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMergePolicy() != null)\r\n        sb.append(\"MergePolicy: \").append(getMergePolicy()).append(\",\");\r\n    if (getArtwork() != null)\r\n        sb.append(\"Artwork: \").append(getArtwork());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.RoleUsageType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateMembersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountDetails() != null)\r\n        sb.append(\"AccountDetails: \").append(getAccountDetails()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ResourceSpecificResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvalResourceName() != null)\r\n        sb.append(\"EvalResourceName: \").append(getEvalResourceName()).append(\",\");\r\n    if (getEvalResourceDecision() != null)\r\n        sb.append(\"EvalResourceDecision: \").append(getEvalResourceDecision()).append(\",\");\r\n    if (getMatchedStatements() != null)\r\n        sb.append(\"MatchedStatements: \").append(getMatchedStatements()).append(\",\");\r\n    if (getMissingContextValues() != null)\r\n        sb.append(\"MissingContextValues: \").append(getMissingContextValues()).append(\",\");\r\n    if (getEvalDecisionDetails() != null)\r\n        sb.append(\"EvalDecisionDetails: \").append(getEvalDecisionDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AddInstanceGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobFlowId() != null)\r\n        sb.append(\"JobFlowId: \").append(getJobFlowId()).append(\",\");\r\n    if (getInstanceGroupIds() != null)\r\n        sb.append(\"InstanceGroupIds: \").append(getInstanceGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeGameSessionQueuesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.EventDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLatestDescription() != null)\r\n        sb.append(\"LatestDescription: \").append(getLatestDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateAccountPasswordPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListProvisionedCapacityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeAssessmentTargetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTargetArns() != null)\r\n        sb.append(\"AssessmentTargetArns: \").append(getAssessmentTargetArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DeleteFileSystemWindowsConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSkipFinalBackup() != null)\r\n        sb.append(\"SkipFinalBackup: \").append(getSkipFinalBackup()).append(\",\");\r\n    if (getFinalBackupTags() != null)\r\n        sb.append(\"FinalBackupTags: \").append(getFinalBackupTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateMatchmakingRuleSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRuleSetBody() != null)\r\n        sb.append(\"RuleSetBody: \").append(getRuleSetBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.StopBulkDeploymentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PutRolePermissionsBoundaryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.deleteAccountPasswordPolicyAsync",
	"Comment": "simplified method form for invoking the deleteaccountpasswordpolicy operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DeleteAccountPasswordPolicyResult> deleteAccountPasswordPolicyAsync(DeleteAccountPasswordPolicyRequest request,java.util.concurrent.Future<DeleteAccountPasswordPolicyResult> deleteAccountPasswordPolicyAsync,DeleteAccountPasswordPolicyRequest request,com.amazonaws.handlers.AsyncHandler<DeleteAccountPasswordPolicyRequest, DeleteAccountPasswordPolicyResult> asyncHandler,java.util.concurrent.Future<DeleteAccountPasswordPolicyResult> deleteAccountPasswordPolicyAsync,java.util.concurrent.Future<DeleteAccountPasswordPolicyResult> deleteAccountPasswordPolicyAsync,com.amazonaws.handlers.AsyncHandler<DeleteAccountPasswordPolicyRequest, DeleteAccountPasswordPolicyResult> asyncHandler){\r\n    return deleteAccountPasswordPolicyAsync(new DeleteAccountPasswordPolicyRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.OutputLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3() != null)\r\n        sb.append(\"S3: \").append(getS3());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.AWSFMSClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsfms using the current builder configuration.",
	"Method": "AWSFMS build(AwsSyncClientParams params){\r\n    return new AWSFMSClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.InstanceProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getInstanceProfileName() != null)\r\n        sb.append(\"InstanceProfileName: \").append(getInstanceProfileName()).append(\",\");\r\n    if (getInstanceProfileId() != null)\r\n        sb.append(\"InstanceProfileId: \").append(getInstanceProfileId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getRoles() != null)\r\n        sb.append(\"Roles: \").append(getRoles());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.UpdateEndpointGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointGroup() != null)\r\n        sb.append(\"EndpointGroup: \").append(getEndpointGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PutUserPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StopCrawlerScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.FleetAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getFleetArn() != null)\r\n        sb.append(\"FleetArn: \").append(getFleetArn()).append(\",\");\r\n    if (getFleetType() != null)\r\n        sb.append(\"FleetType: \").append(getFleetType()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTerminationTime() != null)\r\n        sb.append(\"TerminationTime: \").append(getTerminationTime()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getBuildId() != null)\r\n        sb.append(\"BuildId: \").append(getBuildId()).append(\",\");\r\n    if (getServerLaunchPath() != null)\r\n        sb.append(\"ServerLaunchPath: \").append(getServerLaunchPath()).append(\",\");\r\n    if (getServerLaunchParameters() != null)\r\n        sb.append(\"ServerLaunchParameters: \").append(getServerLaunchParameters()).append(\",\");\r\n    if (getLogPaths() != null)\r\n        sb.append(\"LogPaths: \").append(getLogPaths()).append(\",\");\r\n    if (getNewGameSessionProtectionPolicy() != null)\r\n        sb.append(\"NewGameSessionProtectionPolicy: \").append(getNewGameSessionProtectionPolicy()).append(\",\");\r\n    if (getOperatingSystem() != null)\r\n        sb.append(\"OperatingSystem: \").append(getOperatingSystem()).append(\",\");\r\n    if (getResourceCreationLimitPolicy() != null)\r\n        sb.append(\"ResourceCreationLimitPolicy: \").append(getResourceCreationLimitPolicy()).append(\",\");\r\n    if (getMetricGroups() != null)\r\n        sb.append(\"MetricGroups: \").append(getMetricGroups()).append(\",\");\r\n    if (getStoppedActions() != null)\r\n        sb.append(\"StoppedActions: \").append(getStoppedActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DescribeVaultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DescribeListenerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.archiveFindings",
	"Comment": "archives amazon guardduty findings specified by the list of finding ids.",
	"Method": "ArchiveFindingsResult archiveFindings(ArchiveFindingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeArchiveFindings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableInput() != null)\r\n        sb.append(\"TableInput: \").append(getTableInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreateJobOutput.getComposition",
	"Comment": "you can create an output file that contains an excerpt from the input file. this excerpt, called a clip, can comefrom the beginning, middle, or end of the file. the composition object contains settings for the clips that makeup an output file. for the current release, you can only specify settings for a single clip per output file. thecomposition object cannot be null.",
	"Method": "java.util.List<Clip> getComposition(){\r\n    if (composition == null) {\r\n        composition = new com.amazonaws.internal.SdkInternalList<Clip>();\r\n    }\r\n    return composition;\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Table.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getOwner() != null)\r\n        sb.append(\"Owner: \").append(getOwner()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getUpdateTime() != null)\r\n        sb.append(\"UpdateTime: \").append(getUpdateTime()).append(\",\");\r\n    if (getLastAccessTime() != null)\r\n        sb.append(\"LastAccessTime: \").append(getLastAccessTime()).append(\",\");\r\n    if (getLastAnalyzedTime() != null)\r\n        sb.append(\"LastAnalyzedTime: \").append(getLastAnalyzedTime()).append(\",\");\r\n    if (getRetention() != null)\r\n        sb.append(\"Retention: \").append(getRetention()).append(\",\");\r\n    if (getStorageDescriptor() != null)\r\n        sb.append(\"StorageDescriptor: \").append(getStorageDescriptor()).append(\",\");\r\n    if (getPartitionKeys() != null)\r\n        sb.append(\"PartitionKeys: \").append(getPartitionKeys()).append(\",\");\r\n    if (getViewOriginalText() != null)\r\n        sb.append(\"ViewOriginalText: \").append(getViewOriginalText()).append(\",\");\r\n    if (getViewExpandedText() != null)\r\n        sb.append(\"ViewExpandedText: \").append(getViewExpandedText()).append(\",\");\r\n    if (getTableType() != null)\r\n        sb.append(\"TableType: \").append(getTableType()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getCreatedBy() != null)\r\n        sb.append(\"CreatedBy: \").append(getCreatedBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.getAccountSummaryAsync",
	"Comment": "simplified method form for invoking the getaccountsummary operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetAccountSummaryResult> getAccountSummaryAsync(GetAccountSummaryRequest request,java.util.concurrent.Future<GetAccountSummaryResult> getAccountSummaryAsync,GetAccountSummaryRequest request,com.amazonaws.handlers.AsyncHandler<GetAccountSummaryRequest, GetAccountSummaryResult> asyncHandler,java.util.concurrent.Future<GetAccountSummaryResult> getAccountSummaryAsync,java.util.concurrent.Future<GetAccountSummaryResult> getAccountSummaryAsync,com.amazonaws.handlers.AsyncHandler<GetAccountSummaryRequest, GetAccountSummaryResult> asyncHandler){\r\n    return getAccountSummaryAsync(new GetAccountSummaryRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.DescribeClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCluster() != null)\r\n        sb.append(\"Cluster: \").append(getCluster());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.StreamingStep.toHadoopJarStepConfig",
	"Comment": "creates the final hadoopjarstepconfig once you are done configuring the step. you can usethis as you would any other hadoopjarstepconfig.",
	"Method": "HadoopJarStepConfig toHadoopJarStepConfig(){\r\n    List<String> args = new ArrayList<String>();\r\n    if (reducer == null) {\r\n        hadoopConfig.put(\"mapred.reduce.tasks\", \"0\");\r\n    }\r\n    for (Map.Entry<String, String> entry : hadoopConfig.entrySet()) {\r\n        args.add(\"-D\");\r\n        args.add(entry.getKey() + \"=\" + entry.getValue());\r\n    }\r\n    for (String input : inputs) {\r\n        args.add(\"-input\");\r\n        args.add(input);\r\n    }\r\n    if (output != null) {\r\n        args.add(\"-output\");\r\n        args.add(output);\r\n    }\r\n    if (mapper != null) {\r\n        args.add(\"-mapper\");\r\n        args.add(mapper);\r\n    }\r\n    if (reducer != null) {\r\n        args.add(\"-reducer\");\r\n        args.add(reducer);\r\n    }\r\n    return new HadoopJarStepConfig().withJar(\"/home/hadoop/contrib/streaming/hadoop-streaming.jar\").withArgs(args);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GetGameSessionLogUrlResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPreSignedUrl() != null)\r\n        sb.append(\"PreSignedUrl: \").append(getPreSignedUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listUsers",
	"Comment": "lists the iam users that have the specified path prefix. if no path prefix is specified, the operation returnsall users in the aws account. if there are none, the operation returns an empty list.you can paginate the results using the maxitems and marker parameters.",
	"Method": "ListUsersResult listUsers(ListUsersRequest request,ListUsersResult listUsers){\r\n    return listUsers(new ListUsersRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteTableVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.AWSHealthClient.describeEntityAggregates",
	"Comment": "returns the number of entities that are affected by each of the specified events. if no events are specified, thecounts of all affected entities are returned.",
	"Method": "DescribeEntityAggregatesResult describeEntityAggregates(DescribeEntityAggregatesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEntityAggregates(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.Event.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getService() != null)\r\n        sb.append(\"Service: \").append(getService()).append(\",\");\r\n    if (getEventTypeCode() != null)\r\n        sb.append(\"EventTypeCode: \").append(getEventTypeCode()).append(\",\");\r\n    if (getEventTypeCategory() != null)\r\n        sb.append(\"EventTypeCategory: \").append(getEventTypeCategory()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.GetAdminAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.RunCommandTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateCrawlerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getClassifiers() != null)\r\n        sb.append(\"Classifiers: \").append(getClassifiers()).append(\",\");\r\n    if (getTablePrefix() != null)\r\n        sb.append(\"TablePrefix: \").append(getTablePrefix()).append(\",\");\r\n    if (getSchemaChangePolicy() != null)\r\n        sb.append(\"SchemaChangePolicy: \").append(getSchemaChangePolicy()).append(\",\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration()).append(\",\");\r\n    if (getCrawlerSecurityConfiguration() != null)\r\n        sb.append(\"CrawlerSecurityConfiguration: \").append(getCrawlerSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.getGroupCertificateConfiguration",
	"Comment": "retrieves the current configuration for the ca used by the group.",
	"Method": "GetGroupCertificateConfigurationResult getGroupCertificateConfiguration(GetGroupCertificateConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetGroupCertificateConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeRulesPackagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRulesPackageArns() != null)\r\n        sb.append(\"RulesPackageArns: \").append(getRulesPackageArns()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateAccountAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountAlias() != null)\r\n        sb.append(\"AccountAlias: \").append(getAccountAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DescribeEndpointGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointGroup() != null)\r\n        sb.append(\"EndpointGroup: \").append(getEndpointGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateTriggerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getPredicate() != null)\r\n        sb.append(\"Predicate: \").append(getPredicate()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getStartOnCreation() != null)\r\n        sb.append(\"StartOnCreation: \").append(getStartOnCreation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AddTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StopMatchmakingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTicketId() != null)\r\n        sb.append(\"TicketId: \").append(getTicketId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.SetRulePrioritiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRulePriorities() != null)\r\n        sb.append(\"RulePriorities: \").append(getRulePriorities());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.Alias.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasId() != null)\r\n        sb.append(\"AliasId: \").append(getAliasId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAliasArn() != null)\r\n        sb.append(\"AliasArn: \").append(getAliasArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoutingStrategy() != null)\r\n        sb.append(\"RoutingStrategy: \").append(getRoutingStrategy()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.DeletePipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteAccessKey",
	"Comment": "deletes the access key pair associated with the specified iam user.if you do not specify a user name, iam determines the user name implicitly based on the aws access key id signingthe request. this operation works for access keys under the aws account. consequently, you can use this operationto manage aws account root user credentials even if the aws account has no associated users.",
	"Method": "DeleteAccessKeyResult deleteAccessKey(DeleteAccessKeyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAccessKey(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteAccountPasswordPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ListAliasesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoutingStrategyType() != null)\r\n        sb.append(\"RoutingStrategyType: \").append(getRoutingStrategyType()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DescribeAcceleratorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccelerator() != null)\r\n        sb.append(\"Accelerator: \").append(getAccelerator());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.CreateFileSystemWindowsConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActiveDirectoryId() != null)\r\n        sb.append(\"ActiveDirectoryId: \").append(getActiveDirectoryId()).append(\",\");\r\n    if (getThroughputCapacity() != null)\r\n        sb.append(\"ThroughputCapacity: \").append(getThroughputCapacity()).append(\",\");\r\n    if (getWeeklyMaintenanceStartTime() != null)\r\n        sb.append(\"WeeklyMaintenanceStartTime: \").append(getWeeklyMaintenanceStartTime()).append(\",\");\r\n    if (getDailyAutomaticBackupStartTime() != null)\r\n        sb.append(\"DailyAutomaticBackupStartTime: \").append(getDailyAutomaticBackupStartTime()).append(\",\");\r\n    if (getAutomaticBackupRetentionDays() != null)\r\n        sb.append(\"AutomaticBackupRetentionDays: \").append(getAutomaticBackupRetentionDays()).append(\",\");\r\n    if (getCopyTagsToBackups() != null)\r\n        sb.append(\"CopyTagsToBackups: \").append(getCopyTagsToBackups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.AcceleratorAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowLogsEnabled() != null)\r\n        sb.append(\"FlowLogsEnabled: \").append(getFlowLogsEnabled()).append(\",\");\r\n    if (getFlowLogsS3Bucket() != null)\r\n        sb.append(\"FlowLogsS3Bucket: \").append(getFlowLogsS3Bucket()).append(\",\");\r\n    if (getFlowLogsS3Prefix() != null)\r\n        sb.append(\"FlowLogsS3Prefix: \").append(getFlowLogsS3Prefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.ListComplianceStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.listInstanceGroups",
	"Comment": "provides all available details about the instance groups in a cluster.",
	"Method": "ListInstanceGroupsResult listInstanceGroups(ListInstanceGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListInstanceGroups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetServiceLinkedRoleDeletionStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeletionTaskId() != null)\r\n        sb.append(\"DeletionTaskId: \").append(getDeletionTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.ListJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.EntityAggregate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventArn() != null)\r\n        sb.append(\"EventArn: \").append(getEventArn()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateRuntimeConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuntimeConfiguration() != null)\r\n        sb.append(\"RuntimeConfiguration: \").append(getRuntimeConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.listAssessmentRuns",
	"Comment": "lists the assessment runs that correspond to the assessment templates that are specified by the arns of theassessment templates.",
	"Method": "ListAssessmentRunsResult listAssessmentRuns(ListAssessmentRunsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListAssessmentRuns(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateFleetCapacityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getDesiredInstances() != null)\r\n        sb.append(\"DesiredInstances: \").append(getDesiredInstances()).append(\",\");\r\n    if (getMinSize() != null)\r\n        sb.append(\"MinSize: \").append(getMinSize()).append(\",\");\r\n    if (getMaxSize() != null)\r\n        sb.append(\"MaxSize: \").append(getMaxSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.deleteTrigger",
	"Comment": "deletes a specified trigger. if the trigger is not found, no exception is thrown.",
	"Method": "DeleteTriggerResult deleteTrigger(DeleteTriggerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteTrigger(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.CreateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getJobType() != null)\r\n        sb.append(\"JobType: \").append(getJobType()).append(\",\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature()).append(\",\");\r\n    if (getSignatureFileContents() != null)\r\n        sb.append(\"SignatureFileContents: \").append(getSignatureFileContents()).append(\",\");\r\n    if (getWarningMessage() != null)\r\n        sb.append(\"WarningMessage: \").append(getWarningMessage()).append(\",\");\r\n    if (getArtifactList() != null)\r\n        sb.append(\"ArtifactList: \").append(getArtifactList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateBuildRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuildId() != null)\r\n        sb.append(\"BuildId: \").append(getBuildId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.CancelJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getAPIVersion() != null)\r\n        sb.append(\"APIVersion: \").append(getAPIVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DescribeAcceleratorAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceleratorAttributes() != null)\r\n        sb.append(\"AcceleratorAttributes: \").append(getAcceleratorAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateFleetPortSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getInboundPermissionAuthorizations() != null)\r\n        sb.append(\"InboundPermissionAuthorizations: \").append(getInboundPermissionAuthorizations()).append(\",\");\r\n    if (getInboundPermissionRevocations() != null)\r\n        sb.append(\"InboundPermissionRevocations: \").append(getInboundPermissionRevocations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Pipeline.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getInputBucket() != null)\r\n        sb.append(\"InputBucket: \").append(getInputBucket()).append(\",\");\r\n    if (getOutputBucket() != null)\r\n        sb.append(\"OutputBucket: \").append(getOutputBucket()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getAwsKmsKeyArn() != null)\r\n        sb.append(\"AwsKmsKeyArn: \").append(getAwsKmsKeyArn()).append(\",\");\r\n    if (getNotifications() != null)\r\n        sb.append(\"Notifications: \").append(getNotifications()).append(\",\");\r\n    if (getContentConfig() != null)\r\n        sb.append(\"ContentConfig: \").append(getContentConfig()).append(\",\");\r\n    if (getThumbnailConfig() != null)\r\n        sb.append(\"ThumbnailConfig: \").append(getThumbnailConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreatePolicyVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyVersion() != null)\r\n        sb.append(\"PolicyVersion: \").append(getPolicyVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.InitiateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getJobOutputPath() != null)\r\n        sb.append(\"JobOutputPath: \").append(getJobOutputPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.City.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCityName() != null)\r\n        sb.append(\"CityName: \").append(getCityName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.AmazonGameLiftAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeletePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.DeletePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScope() != null)\r\n        sb.append(\"Scope: \").append(getScope()).append(\",\");\r\n    if (getOnlyAttached() != null)\r\n        sb.append(\"OnlyAttached: \").append(getOnlyAttached()).append(\",\");\r\n    if (getPathPrefix() != null)\r\n        sb.append(\"PathPrefix: \").append(getPathPrefix()).append(\",\");\r\n    if (getPolicyUsageFilter() != null)\r\n        sb.append(\"PolicyUsageFilter: \").append(getPolicyUsageFilter()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeElasticsearchInstanceTypeLimitsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimitsByRole() != null)\r\n        sb.append(\"LimitsByRole: \").append(getLimitsByRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorClient.createAccelerator",
	"Comment": "create an accelerator. an accelerator includes one or more listeners that process inbound connections and directtraffic to one or more endpoint groups, each of which includes endpoints, such as network load balancers. to seean aws cli example of creating an accelerator, scroll down to example.",
	"Method": "CreateAcceleratorResult createAccelerator(CreateAcceleratorRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateAccelerator(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDevEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListCoreDefinitionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.UpdateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccess() != null)\r\n        sb.append(\"Success: \").append(getSuccess()).append(\",\");\r\n    if (getWarningMessage() != null)\r\n        sb.append(\"WarningMessage: \").append(getWarningMessage()).append(\",\");\r\n    if (getArtifactList() != null)\r\n        sb.append(\"ArtifactList: \").append(getArtifactList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ElasticsearchClusterConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getDedicatedMasterEnabled() != null)\r\n        sb.append(\"DedicatedMasterEnabled: \").append(getDedicatedMasterEnabled()).append(\",\");\r\n    if (getZoneAwarenessEnabled() != null)\r\n        sb.append(\"ZoneAwarenessEnabled: \").append(getZoneAwarenessEnabled()).append(\",\");\r\n    if (getDedicatedMasterType() != null)\r\n        sb.append(\"DedicatedMasterType: \").append(getDedicatedMasterType()).append(\",\");\r\n    if (getDedicatedMasterCount() != null)\r\n        sb.append(\"DedicatedMasterCount: \").append(getDedicatedMasterCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateConnectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getConnectionInput() != null)\r\n        sb.append(\"ConnectionInput: \").append(getConnectionInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.waiters.AmazonIdentityManagementWaiters.userExists",
	"Comment": "builds a userexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<GetUserRequest> userExists(){\r\n    return new WaiterBuilder<GetUserRequest, GetUserResult>().withSdkFunction(new GetUserFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor(WaiterState.SUCCESS), new UserExists.IsNoSuchEntityMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(20), new FixedDelayStrategy(1))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetCredentialReportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.DeletePresetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.JobUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLogUri() != null)\r\n        sb.append(\"LogUri: \").append(getLogUri()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getExecutionProperty() != null)\r\n        sb.append(\"ExecutionProperty: \").append(getExecutionProperty()).append(\",\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getDefaultArguments() != null)\r\n        sb.append(\"DefaultArguments: \").append(getDefaultArguments()).append(\",\");\r\n    if (getConnections() != null)\r\n        sb.append(\"Connections: \").append(getConnections()).append(\",\");\r\n    if (getMaxRetries() != null)\r\n        sb.append(\"MaxRetries: \").append(getMaxRetries()).append(\",\");\r\n    if (getAllocatedCapacity() != null)\r\n        sb.append(\"AllocatedCapacity: \").append(getAllocatedCapacity()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getNotificationProperty() != null)\r\n        sb.append(\"NotificationProperty: \").append(getNotificationProperty()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.removeTags",
	"Comment": "removes the specified set of tags from the specified elasticsearch domain.",
	"Method": "RemoveTagsResult removeTags(RemoveTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.LogPublishingOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudWatchLogsLogGroupArn() != null)\r\n        sb.append(\"CloudWatchLogsLogGroupArn: \").append(getCloudWatchLogsLogGroupArn()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.describeReservedElasticsearchInstances",
	"Comment": "returns information about reserved elasticsearch instances for this account.",
	"Method": "DescribeReservedElasticsearchInstancesResult describeReservedElasticsearchInstances(DescribeReservedElasticsearchInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeReservedElasticsearchInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.health.AWSHealthClientBuilder.build",
	"Comment": "construct a synchronous implementation of awshealth using the current builder configuration.",
	"Method": "AWSHealth build(AwsSyncClientParams params){\r\n    return new AWSHealthClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.VPCDerivedInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVPCId() != null)\r\n        sb.append(\"VPCId: \").append(getVPCId()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GetVaultNotificationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVaultNotificationConfig() != null)\r\n        sb.append(\"VaultNotificationConfig: \").append(getVaultNotificationConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.EC2InstanceLimit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEC2InstanceType() != null)\r\n        sb.append(\"EC2InstanceType: \").append(getEC2InstanceType()).append(\",\");\r\n    if (getCurrentInstances() != null)\r\n        sb.append(\"CurrentInstances: \").append(getCurrentInstances()).append(\",\");\r\n    if (getInstanceLimit() != null)\r\n        sb.append(\"InstanceLimit: \").append(getInstanceLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.CompleteMultipartUploadRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getUploadId() != null)\r\n        sb.append(\"UploadId: \").append(getUploadId()).append(\",\");\r\n    if (getArchiveSize() != null)\r\n        sb.append(\"ArchiveSize: \").append(getArchiveSize()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.GetPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateXMLClassifierRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getClassification() != null)\r\n        sb.append(\"Classification: \").append(getClassification()).append(\",\");\r\n    if (getRowTag() != null)\r\n        sb.append(\"RowTag: \").append(getRowTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedEntryCount() != null)\r\n        sb.append(\"FailedEntryCount: \").append(getFailedEntryCount()).append(\",\");\r\n    if (getEntries() != null)\r\n        sb.append(\"Entries: \").append(getEntries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateClassifierResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Job.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLogUri() != null)\r\n        sb.append(\"LogUri: \").append(getLogUri()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getCreatedOn() != null)\r\n        sb.append(\"CreatedOn: \").append(getCreatedOn()).append(\",\");\r\n    if (getLastModifiedOn() != null)\r\n        sb.append(\"LastModifiedOn: \").append(getLastModifiedOn()).append(\",\");\r\n    if (getExecutionProperty() != null)\r\n        sb.append(\"ExecutionProperty: \").append(getExecutionProperty()).append(\",\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getDefaultArguments() != null)\r\n        sb.append(\"DefaultArguments: \").append(getDefaultArguments()).append(\",\");\r\n    if (getConnections() != null)\r\n        sb.append(\"Connections: \").append(getConnections()).append(\",\");\r\n    if (getMaxRetries() != null)\r\n        sb.append(\"MaxRetries: \").append(getMaxRetries()).append(\",\");\r\n    if (getAllocatedCapacity() != null)\r\n        sb.append(\"AllocatedCapacity: \").append(getAllocatedCapacity()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getNotificationProperty() != null)\r\n        sb.append(\"NotificationProperty: \").append(getNotificationProperty()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AbstractAmazonElasticTranscoderAsync.listPresetsAsync",
	"Comment": "simplified method form for invoking the listpresets operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListPresetsResult> listPresetsAsync(ListPresetsRequest request,java.util.concurrent.Future<ListPresetsResult> listPresetsAsync,ListPresetsRequest request,com.amazonaws.handlers.AsyncHandler<ListPresetsRequest, ListPresetsResult> asyncHandler,java.util.concurrent.Future<ListPresetsResult> listPresetsAsync,java.util.concurrent.Future<ListPresetsResult> listPresetsAsync,com.amazonaws.handlers.AsyncHandler<ListPresetsRequest, ListPresetsResult> asyncHandler){\r\n    return listPresetsAsync(new ListPresetsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.waiters.AmazonElasticLoadBalancingWaiters.loadBalancersDeleted",
	"Comment": "builds a loadbalancersdeleted waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeLoadBalancersRequest> loadBalancersDeleted(){\r\n    return new WaiterBuilder<DescribeLoadBalancersRequest, DescribeLoadBalancersResult>().withSdkFunction(new DescribeLoadBalancersFunction(client)).withAcceptors(new LoadBalancersDeleted.IsActiveMatcher(), new LoadBalancersDeleted.IsLoadBalancerNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeElasticsearchDomainConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainConfig() != null)\r\n        sb.append(\"DomainConfig: \").append(getDomainConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.FindingStatistics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCountBySeverity() != null)\r\n        sb.append(\"CountBySeverity: \").append(getCountBySeverity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listGroupsForUser",
	"Comment": "lists the iam groups that the specified iam user belongs to.you can paginate the results using the maxitems and marker parameters.",
	"Method": "ListGroupsForUserResult listGroupsForUser(ListGroupsForUserRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListGroupsForUser(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DevEndpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getYarnEndpointAddress() != null)\r\n        sb.append(\"YarnEndpointAddress: \").append(getYarnEndpointAddress()).append(\",\");\r\n    if (getPrivateAddress() != null)\r\n        sb.append(\"PrivateAddress: \").append(getPrivateAddress()).append(\",\");\r\n    if (getZeppelinRemoteSparkInterpreterPort() != null)\r\n        sb.append(\"ZeppelinRemoteSparkInterpreterPort: \").append(getZeppelinRemoteSparkInterpreterPort()).append(\",\");\r\n    if (getPublicAddress() != null)\r\n        sb.append(\"PublicAddress: \").append(getPublicAddress()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getNumberOfNodes() != null)\r\n        sb.append(\"NumberOfNodes: \").append(getNumberOfNodes()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getExtraPythonLibsS3Path() != null)\r\n        sb.append(\"ExtraPythonLibsS3Path: \").append(getExtraPythonLibsS3Path()).append(\",\");\r\n    if (getExtraJarsS3Path() != null)\r\n        sb.append(\"ExtraJarsS3Path: \").append(getExtraJarsS3Path()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getLastUpdateStatus() != null)\r\n        sb.append(\"LastUpdateStatus: \").append(getLastUpdateStatus()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp()).append(\",\");\r\n    if (getLastModifiedTimestamp() != null)\r\n        sb.append(\"LastModifiedTimestamp: \").append(getLastModifiedTimestamp()).append(\",\");\r\n    if (getPublicKey() != null)\r\n        sb.append(\"PublicKey: \").append(getPublicKey()).append(\",\");\r\n    if (getPublicKeys() != null)\r\n        sb.append(\"PublicKeys: \").append(getPublicKeys()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ReservedElasticsearchInstanceOffering.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedElasticsearchInstanceOfferingId() != null)\r\n        sb.append(\"ReservedElasticsearchInstanceOfferingId: \").append(getReservedElasticsearchInstanceOfferingId()).append(\",\");\r\n    if (getElasticsearchInstanceType() != null)\r\n        sb.append(\"ElasticsearchInstanceType: \").append(getElasticsearchInstanceType()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getPaymentOption() != null)\r\n        sb.append(\"PaymentOption: \").append(getPaymentOption()).append(\",\");\r\n    if (getRecurringCharges() != null)\r\n        sb.append(\"RecurringCharges: \").append(getRecurringCharges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DataRetrievalPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.SetVaultAccessPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeAffectedEntitiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.GetTelemetryMetadataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunArn() != null)\r\n        sb.append(\"AssessmentRunArn: \").append(getAssessmentRunArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.EnableRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetPartitionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPartitions() != null)\r\n        sb.append(\"Partitions: \").append(getPartitions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ClusterStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateChangeReason() != null)\r\n        sb.append(\"StateChangeReason: \").append(getStateChangeReason()).append(\",\");\r\n    if (getTimeline() != null)\r\n        sb.append(\"Timeline: \").append(getTimeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeElasticsearchDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListInstanceProfilesForRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteTriggerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.Instance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getEc2InstanceId() != null)\r\n        sb.append(\"Ec2InstanceId: \").append(getEc2InstanceId()).append(\",\");\r\n    if (getPublicDnsName() != null)\r\n        sb.append(\"PublicDnsName: \").append(getPublicDnsName()).append(\",\");\r\n    if (getPublicIpAddress() != null)\r\n        sb.append(\"PublicIpAddress: \").append(getPublicIpAddress()).append(\",\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getInstanceGroupId() != null)\r\n        sb.append(\"InstanceGroupId: \").append(getInstanceGroupId()).append(\",\");\r\n    if (getInstanceFleetId() != null)\r\n        sb.append(\"InstanceFleetId: \").append(getInstanceFleetId()).append(\",\");\r\n    if (getMarket() != null)\r\n        sb.append(\"Market: \").append(getMarket()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getEbsVolumes() != null)\r\n        sb.append(\"EbsVolumes: \").append(getEbsVolumes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.PutResourcePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyInJson() != null)\r\n        sb.append(\"PolicyInJson: \").append(getPolicyInJson()).append(\",\");\r\n    if (getPolicyHashCondition() != null)\r\n        sb.append(\"PolicyHashCondition: \").append(getPolicyHashCondition()).append(\",\");\r\n    if (getPolicyExistsCondition() != null)\r\n        sb.append(\"PolicyExistsCondition: \").append(getPolicyExistsCondition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.Attribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.VPCOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListInstanceFleetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateServiceSpecificCredentialRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getServiceSpecificCredentialId() != null)\r\n        sb.append(\"ServiceSpecificCredentialId: \").append(getServiceSpecificCredentialId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AddUserToGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.CreateAssessmentTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTemplateArn() != null)\r\n        sb.append(\"AssessmentTemplateArn: \").append(getAssessmentTemplateArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.SetSubnetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getSubnetMappings() != null)\r\n        sb.append(\"SubnetMappings: \").append(getSubnetMappings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListLoggerDefinitionVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.Resource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getResourceDataContainer() != null)\r\n        sb.append(\"ResourceDataContainer: \").append(getResourceDataContainer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.PutRolePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.DisableRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetSSHPublicKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSSHPublicKeyId() != null)\r\n        sb.append(\"SSHPublicKeyId: \").append(getSSHPublicKeyId()).append(\",\");\r\n    if (getEncoding() != null)\r\n        sb.append(\"Encoding: \").append(getEncoding());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsClient.deleteRule",
	"Comment": "deletes the specified rule.before you can delete the rule, you must remove all targets, using removetargets.when you delete a rule, incoming events might continue to match to the deleted rule. allow a short period of timefor changes to take effect.managed rules are rules created and managed by another aws service on your behalf. these rules are created bythose other aws services to support functionality in those services. you can delete these rules using theforce option, but you should do so only if you are sure the other service is not still using thatrule.",
	"Method": "DeleteRuleResult deleteRule(DeleteRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsglue using the current builder configuration.",
	"Method": "AWSGlue build(AwsSyncClientParams params){\r\n    return new AWSGlueClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListConnectorDefinitionVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectorDefinitionId() != null)\r\n        sb.append(\"ConnectorDefinitionId: \").append(getConnectorDefinitionId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.Statement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourcePolicyId() != null)\r\n        sb.append(\"SourcePolicyId: \").append(getSourcePolicyId()).append(\",\");\r\n    if (getSourcePolicyType() != null)\r\n        sb.append(\"SourcePolicyType: \").append(getSourcePolicyType()).append(\",\");\r\n    if (getStartPosition() != null)\r\n        sb.append(\"StartPosition: \").append(getStartPosition()).append(\",\");\r\n    if (getEndPosition() != null)\r\n        sb.append(\"EndPosition: \").append(getEndPosition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderAsyncClient.listPresetsAsync",
	"Comment": "simplified method form for invoking the listpresets operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListPresetsResult> listPresetsAsync(ListPresetsRequest request,java.util.concurrent.Future<ListPresetsResult> listPresetsAsync,ListPresetsRequest request,com.amazonaws.handlers.AsyncHandler<ListPresetsRequest, ListPresetsResult> asyncHandler,java.util.concurrent.Future<ListPresetsResult> listPresetsAsync,java.util.concurrent.Future<ListPresetsResult> listPresetsAsync,com.amazonaws.handlers.AsyncHandler<ListPresetsRequest, ListPresetsResult> asyncHandler){\r\n    return listPresetsAsync(new ListPresetsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateSAMLProviderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSAMLProviderArn() != null)\r\n        sb.append(\"SAMLProviderArn: \").append(getSAMLProviderArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.ResizeJobFlowStep.toHadoopJarStepConfig",
	"Comment": "creates the final hadoopjarstepconfig once you are done configuring the step. you can usethis as you would any other hadoopjarstepconfig.",
	"Method": "HadoopJarStepConfig toHadoopJarStepConfig(){\r\n    if (args.size() == 0) {\r\n        throw new AmazonServiceException(\"Cannot create a ResizeJobFlowStep with no resize actions.\");\r\n    }\r\n    if (wait == false) {\r\n        args.add(\"--no-wait\");\r\n    }\r\n    if (onArrested != null) {\r\n        args.add(\"--on-arrested\");\r\n        args.add(onArrested.toString());\r\n    }\r\n    if (onFailure != null) {\r\n        args.add(\"--on-failure\");\r\n        args.add(onFailure.toString());\r\n    }\r\n    return new HadoopJarStepConfig().withJar(\"s3://\" + bucket + \"/libs/resize-job-flow/0.1/resize-job-flow.jar\").withArgs(args);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ListPipelinesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAscending() != null)\r\n        sb.append(\"Ascending: \").append(getAscending()).append(\",\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazoninspector using the current builder configuration.",
	"Method": "AmazonInspector build(AwsSyncClientParams params){\r\n    return new AmazonInspectorClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.PartitionValueList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeFleetPortSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInboundPermissions() != null)\r\n        sb.append(\"InboundPermissions: \").append(getInboundPermissions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.EncryptionConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Encryption() != null)\r\n        sb.append(\"S3Encryption: \").append(getS3Encryption()).append(\",\");\r\n    if (getCloudWatchEncryption() != null)\r\n        sb.append(\"CloudWatchEncryption: \").append(getCloudWatchEncryption()).append(\",\");\r\n    if (getJobBookmarksEncryption() != null)\r\n        sb.append(\"JobBookmarksEncryption: \").append(getJobBookmarksEncryption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateDeviceDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UpdateIPSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GetDataRetrievalPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateScriptRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDagNodes() != null)\r\n        sb.append(\"DagNodes: \").append(getDagNodes()).append(\",\");\r\n    if (getDagEdges() != null)\r\n        sb.append(\"DagEdges: \").append(getDagEdges()).append(\",\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ServiceSpecificCredential.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getServiceUserName() != null)\r\n        sb.append(\"ServiceUserName: \").append(getServiceUserName()).append(\",\");\r\n    if (getServicePassword() != null)\r\n        sb.append(\"ServicePassword: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getServiceSpecificCredentialId() != null)\r\n        sb.append(\"ServiceSpecificCredentialId: \").append(getServiceSpecificCredentialId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.PartitionInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues()).append(\",\");\r\n    if (getLastAccessTime() != null)\r\n        sb.append(\"LastAccessTime: \").append(getLastAccessTime()).append(\",\");\r\n    if (getStorageDescriptor() != null)\r\n        sb.append(\"StorageDescriptor: \").append(getStorageDescriptor()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getLastAnalyzedTime() != null)\r\n        sb.append(\"LastAnalyzedTime: \").append(getLastAnalyzedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListIPSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listRolesAsync",
	"Comment": "simplified method form for invoking the listroles operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListRolesResult> listRolesAsync(ListRolesRequest request,java.util.concurrent.Future<ListRolesResult> listRolesAsync,ListRolesRequest request,com.amazonaws.handlers.AsyncHandler<ListRolesRequest, ListRolesResult> asyncHandler,java.util.concurrent.Future<ListRolesResult> listRolesAsync,java.util.concurrent.Future<ListRolesResult> listRolesAsync,com.amazonaws.handlers.AsyncHandler<ListRolesRequest, ListRolesResult> asyncHandler){\r\n    return listRolesAsync(new ListRolesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DescribeFileSystemsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystems() != null)\r\n        sb.append(\"FileSystems: \").append(getFileSystems()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.InspectorServiceAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaVersion() != null)\r\n        sb.append(\"SchemaVersion: \").append(getSchemaVersion()).append(\",\");\r\n    if (getAssessmentRunArn() != null)\r\n        sb.append(\"AssessmentRunArn: \").append(getAssessmentRunArn()).append(\",\");\r\n    if (getRulesPackageArn() != null)\r\n        sb.append(\"RulesPackageArn: \").append(getRulesPackageArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ElasticsearchClusterConfigStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateOpenIDConnectProviderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getClientIDList() != null)\r\n        sb.append(\"ClientIDList: \").append(getClientIDList()).append(\",\");\r\n    if (getThumbprintList() != null)\r\n        sb.append(\"ThumbprintList: \").append(getThumbprintList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StartCrawlerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.ResizeJobFlowStep.withOnArrested",
	"Comment": "what action this step should take if any of the instance group modifications resultin the instance group entering arrested state. this can happen when the bootstrapactions on the newly launched instances are continuously failing.",
	"Method": "ResizeJobFlowStep withOnArrested(OnArrested onArrested){\r\n    this.onArrested = onArrested;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.MatchmakingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGameSessionQueueArns() != null)\r\n        sb.append(\"GameSessionQueueArns: \").append(getGameSessionQueueArns()).append(\",\");\r\n    if (getRequestTimeoutSeconds() != null)\r\n        sb.append(\"RequestTimeoutSeconds: \").append(getRequestTimeoutSeconds()).append(\",\");\r\n    if (getAcceptanceTimeoutSeconds() != null)\r\n        sb.append(\"AcceptanceTimeoutSeconds: \").append(getAcceptanceTimeoutSeconds()).append(\",\");\r\n    if (getAcceptanceRequired() != null)\r\n        sb.append(\"AcceptanceRequired: \").append(getAcceptanceRequired()).append(\",\");\r\n    if (getRuleSetName() != null)\r\n        sb.append(\"RuleSetName: \").append(getRuleSetName()).append(\",\");\r\n    if (getNotificationTarget() != null)\r\n        sb.append(\"NotificationTarget: \").append(getNotificationTarget()).append(\",\");\r\n    if (getAdditionalPlayerCount() != null)\r\n        sb.append(\"AdditionalPlayerCount: \").append(getAdditionalPlayerCount()).append(\",\");\r\n    if (getCustomEventData() != null)\r\n        sb.append(\"CustomEventData: \").append(getCustomEventData()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getGameProperties() != null)\r\n        sb.append(\"GameProperties: \").append(getGameProperties()).append(\",\");\r\n    if (getGameSessionData() != null)\r\n        sb.append(\"GameSessionData: \").append(getGameSessionData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchGetPartitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPartitions() != null)\r\n        sb.append(\"Partitions: \").append(getPartitions()).append(\",\");\r\n    if (getUnprocessedKeys() != null)\r\n        sb.append(\"UnprocessedKeys: \").append(getUnprocessedKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeEventDetailsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccessfulSet() != null)\r\n        sb.append(\"SuccessfulSet: \").append(getSuccessfulSet()).append(\",\");\r\n    if (getFailedSet() != null)\r\n        sb.append(\"FailedSet: \").append(getFailedSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteServiceLinkedRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeletionTaskId() != null)\r\n        sb.append(\"DeletionTaskId: \").append(getDeletionTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.testRole",
	"Comment": "the testrole operation tests the iam role used to create the pipeline.the testrole action lets you determine whether the iam role you are using has sufficient permissionsto let elastic transcoder perform tasks associated with the transcoding process. the action attempts to assumethe specified iam role, checks read access to the input and output buckets, and tries to send a test notificationto amazon sns topics that you specify.",
	"Method": "TestRoleResult testRole(TestRoleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTestRole(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetDetectorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getStatuscode() != null)\r\n        sb.append(\"Statuscode: \").append(getStatuscode()).append(\",\");\r\n    if (getCompleted() != null)\r\n        sb.append(\"Completed: \").append(getCompleted());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateConnectorDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.UpdateFileSystemLustreConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWeeklyMaintenanceStartTime() != null)\r\n        sb.append(\"WeeklyMaintenanceStartTime: \").append(getWeeklyMaintenanceStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteFunctionDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionDefinitionId() != null)\r\n        sb.append(\"FunctionDefinitionId: \").append(getFunctionDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.AccessPoliciesStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.GetStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getJobType() != null)\r\n        sb.append(\"JobType: \").append(getJobType()).append(\",\");\r\n    if (getLocationCode() != null)\r\n        sb.append(\"LocationCode: \").append(getLocationCode()).append(\",\");\r\n    if (getLocationMessage() != null)\r\n        sb.append(\"LocationMessage: \").append(getLocationMessage()).append(\",\");\r\n    if (getProgressCode() != null)\r\n        sb.append(\"ProgressCode: \").append(getProgressCode()).append(\",\");\r\n    if (getProgressMessage() != null)\r\n        sb.append(\"ProgressMessage: \").append(getProgressMessage()).append(\",\");\r\n    if (getCarrier() != null)\r\n        sb.append(\"Carrier: \").append(getCarrier()).append(\",\");\r\n    if (getTrackingNumber() != null)\r\n        sb.append(\"TrackingNumber: \").append(getTrackingNumber()).append(\",\");\r\n    if (getLogBucket() != null)\r\n        sb.append(\"LogBucket: \").append(getLogBucket()).append(\",\");\r\n    if (getLogKey() != null)\r\n        sb.append(\"LogKey: \").append(getLogKey()).append(\",\");\r\n    if (getErrorCount() != null)\r\n        sb.append(\"ErrorCount: \").append(getErrorCount()).append(\",\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature()).append(\",\");\r\n    if (getSignatureFileContents() != null)\r\n        sb.append(\"SignatureFileContents: \").append(getSignatureFileContents()).append(\",\");\r\n    if (getCurrentManifest() != null)\r\n        sb.append(\"CurrentManifest: \").append(getCurrentManifest()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getArtifactList() != null)\r\n        sb.append(\"ArtifactList: \").append(getArtifactList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.CreateElasticsearchDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainStatus() != null)\r\n        sb.append(\"DomainStatus: \").append(getDomainStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsgreengrass using the current builder configuration.",
	"Method": "AWSGreengrass build(AwsSyncClientParams params){\r\n    return new AWSGreengrassClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJob() != null)\r\n        sb.append(\"Job: \").append(getJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.EvaluationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvalActionName() != null)\r\n        sb.append(\"EvalActionName: \").append(getEvalActionName()).append(\",\");\r\n    if (getEvalResourceName() != null)\r\n        sb.append(\"EvalResourceName: \").append(getEvalResourceName()).append(\",\");\r\n    if (getEvalDecision() != null)\r\n        sb.append(\"EvalDecision: \").append(getEvalDecision()).append(\",\");\r\n    if (getMatchedStatements() != null)\r\n        sb.append(\"MatchedStatements: \").append(getMatchedStatements()).append(\",\");\r\n    if (getMissingContextValues() != null)\r\n        sb.append(\"MissingContextValues: \").append(getMissingContextValues()).append(\",\");\r\n    if (getOrganizationsDecisionDetail() != null)\r\n        sb.append(\"OrganizationsDecisionDetail: \").append(getOrganizationsDecisionDetail()).append(\",\");\r\n    if (getEvalDecisionDetails() != null)\r\n        sb.append(\"EvalDecisionDetails: \").append(getEvalDecisionDetails()).append(\",\");\r\n    if (getResourceSpecificResults() != null)\r\n        sb.append(\"ResourceSpecificResults: \").append(getResourceSpecificResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.CancelElasticsearchServiceSoftwareUpdateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceSoftwareOptions() != null)\r\n        sb.append(\"ServiceSoftwareOptions: \").append(getServiceSoftwareOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DeleteEndpointGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointGroupArn() != null)\r\n        sb.append(\"EndpointGroupArn: \").append(getEndpointGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateIPSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActivate() != null)\r\n        sb.append(\"Activate: \").append(getActivate()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateLoggerDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggerDefinitionId() != null)\r\n        sb.append(\"LoggerDefinitionId: \").append(getLoggerDefinitionId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DisassociateRoleFromGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.FailureDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getLogFile() != null)\r\n        sb.append(\"LogFile: \").append(getLogFile());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.updateUserDefinedFunction",
	"Comment": "updates an existing function definition in the data catalog.",
	"Method": "UpdateUserDefinedFunctionResult updateUserDefinedFunction(UpdateUserDefinedFunctionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateUserDefinedFunction(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateCoreDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteAccountPasswordPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorClient.describeAccelerator",
	"Comment": "describe an accelerator. to see an aws cli example of describing an accelerator, scroll down to example.",
	"Method": "DescribeAcceleratorResult describeAccelerator(DescribeAcceleratorRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAccelerator(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPathPrefix() != null)\r\n        sb.append(\"PathPrefix: \").append(getPathPrefix()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMasterInstanceType() != null)\r\n        sb.append(\"MasterInstanceType: \").append(getMasterInstanceType()).append(\",\");\r\n    if (getSlaveInstanceType() != null)\r\n        sb.append(\"SlaveInstanceType: \").append(getSlaveInstanceType()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getInstanceGroups() != null)\r\n        sb.append(\"InstanceGroups: \").append(getInstanceGroups()).append(\",\");\r\n    if (getInstanceFleets() != null)\r\n        sb.append(\"InstanceFleets: \").append(getInstanceFleets()).append(\",\");\r\n    if (getEc2KeyName() != null)\r\n        sb.append(\"Ec2KeyName: \").append(getEc2KeyName()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement()).append(\",\");\r\n    if (getKeepJobFlowAliveWhenNoSteps() != null)\r\n        sb.append(\"KeepJobFlowAliveWhenNoSteps: \").append(getKeepJobFlowAliveWhenNoSteps()).append(\",\");\r\n    if (getTerminationProtected() != null)\r\n        sb.append(\"TerminationProtected: \").append(getTerminationProtected()).append(\",\");\r\n    if (getHadoopVersion() != null)\r\n        sb.append(\"HadoopVersion: \").append(getHadoopVersion()).append(\",\");\r\n    if (getEc2SubnetId() != null)\r\n        sb.append(\"Ec2SubnetId: \").append(getEc2SubnetId()).append(\",\");\r\n    if (getEc2SubnetIds() != null)\r\n        sb.append(\"Ec2SubnetIds: \").append(getEc2SubnetIds()).append(\",\");\r\n    if (getEmrManagedMasterSecurityGroup() != null)\r\n        sb.append(\"EmrManagedMasterSecurityGroup: \").append(getEmrManagedMasterSecurityGroup()).append(\",\");\r\n    if (getEmrManagedSlaveSecurityGroup() != null)\r\n        sb.append(\"EmrManagedSlaveSecurityGroup: \").append(getEmrManagedSlaveSecurityGroup()).append(\",\");\r\n    if (getServiceAccessSecurityGroup() != null)\r\n        sb.append(\"ServiceAccessSecurityGroup: \").append(getServiceAccessSecurityGroup()).append(\",\");\r\n    if (getAdditionalMasterSecurityGroups() != null)\r\n        sb.append(\"AdditionalMasterSecurityGroups: \").append(getAdditionalMasterSecurityGroups()).append(\",\");\r\n    if (getAdditionalSlaveSecurityGroups() != null)\r\n        sb.append(\"AdditionalSlaveSecurityGroups: \").append(getAdditionalSlaveSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CancelJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateSigningCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Captions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMergePolicy() != null)\r\n        sb.append(\"MergePolicy: \").append(getMergePolicy()).append(\",\");\r\n    if (getCaptionSources() != null)\r\n        sb.append(\"CaptionSources: \").append(getCaptionSources()).append(\",\");\r\n    if (getCaptionFormats() != null)\r\n        sb.append(\"CaptionFormats: \").append(getCaptionFormats());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteRolePermissionsBoundaryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateCoreDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getInitialVersion() != null)\r\n        sb.append(\"InitialVersion: \").append(getInitialVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.CreateResourceGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceGroupArn() != null)\r\n        sb.append(\"ResourceGroupArn: \").append(getResourceGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteDetectorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listSSHPublicKeysAsync",
	"Comment": "simplified method form for invoking the listsshpublickeys operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListSSHPublicKeysResult> listSSHPublicKeysAsync(ListSSHPublicKeysRequest request,java.util.concurrent.Future<ListSSHPublicKeysResult> listSSHPublicKeysAsync,ListSSHPublicKeysRequest request,com.amazonaws.handlers.AsyncHandler<ListSSHPublicKeysRequest, ListSSHPublicKeysResult> asyncHandler,java.util.concurrent.Future<ListSSHPublicKeysResult> listSSHPublicKeysAsync,java.util.concurrent.Future<ListSSHPublicKeysResult> listSSHPublicKeysAsync,com.amazonaws.handlers.AsyncHandler<ListSSHPublicKeysRequest, ListSSHPublicKeysResult> asyncHandler){\r\n    return listSSHPublicKeysAsync(new ListSSHPublicKeysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorClient.updateEndpointGroup",
	"Comment": "update an endpoint group. to see an aws cli example of updating an endpoint group, scroll down to example.",
	"Method": "UpdateEndpointGroupResult updateEndpointGroup(UpdateEndpointGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateEndpointGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.VaultAccessPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.Policy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getDefaultVersionId() != null)\r\n        sb.append(\"DefaultVersionId: \").append(getDefaultVersionId()).append(\",\");\r\n    if (getAttachmentCount() != null)\r\n        sb.append(\"AttachmentCount: \").append(getAttachmentCount()).append(\",\");\r\n    if (getPermissionsBoundaryUsageCount() != null)\r\n        sb.append(\"PermissionsBoundaryUsageCount: \").append(getPermissionsBoundaryUsageCount()).append(\",\");\r\n    if (getIsAttachable() != null)\r\n        sb.append(\"IsAttachable: \").append(getIsAttachable()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getUpdateDate() != null)\r\n        sb.append(\"UpdateDate: \").append(getUpdateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateLoginProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getPasswordResetRequired() != null)\r\n        sb.append(\"PasswordResetRequired: \").append(getPasswordResetRequired());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.AbstractAmazonImportExportAsync.listJobsAsync",
	"Comment": "simplified method form for invoking the listjobs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListJobsResult> listJobsAsync(ListJobsRequest request,java.util.concurrent.Future<ListJobsResult> listJobsAsync,ListJobsRequest request,com.amazonaws.handlers.AsyncHandler<ListJobsRequest, ListJobsResult> asyncHandler,java.util.concurrent.Future<ListJobsResult> listJobsAsync,java.util.concurrent.Future<ListJobsResult> listJobsAsync,com.amazonaws.handlers.AsyncHandler<ListJobsRequest, ListJobsResult> asyncHandler){\r\n    return listJobsAsync(new ListJobsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateDevEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getYarnEndpointAddress() != null)\r\n        sb.append(\"YarnEndpointAddress: \").append(getYarnEndpointAddress()).append(\",\");\r\n    if (getZeppelinRemoteSparkInterpreterPort() != null)\r\n        sb.append(\"ZeppelinRemoteSparkInterpreterPort: \").append(getZeppelinRemoteSparkInterpreterPort()).append(\",\");\r\n    if (getNumberOfNodes() != null)\r\n        sb.append(\"NumberOfNodes: \").append(getNumberOfNodes()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getExtraPythonLibsS3Path() != null)\r\n        sb.append(\"ExtraPythonLibsS3Path: \").append(getExtraPythonLibsS3Path()).append(\",\");\r\n    if (getExtraJarsS3Path() != null)\r\n        sb.append(\"ExtraJarsS3Path: \").append(getExtraJarsS3Path()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration()).append(\",\");\r\n    if (getCreatedTimestamp() != null)\r\n        sb.append(\"CreatedTimestamp: \").append(getCreatedTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.CreateFileSystemRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getFileSystemType() != null)\r\n        sb.append(\"FileSystemType: \").append(getFileSystemType()).append(\",\");\r\n    if (getStorageCapacity() != null)\r\n        sb.append(\"StorageCapacity: \").append(getStorageCapacity()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getWindowsConfiguration() != null)\r\n        sb.append(\"WindowsConfiguration: \").append(getWindowsConfiguration()).append(\",\");\r\n    if (getLustreConfiguration() != null)\r\n        sb.append(\"LustreConfiguration: \").append(getLustreConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreatePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UploadSSHPublicKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSSHPublicKeyBody() != null)\r\n        sb.append(\"SSHPublicKeyBody: \").append(getSSHPublicKeyBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeMatchmakingRuleSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNames() != null)\r\n        sb.append(\"Names: \").append(getNames()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.transfer.ArchiveTransferManagerBuilder.setSqsClient",
	"Comment": "set the client for working with amazon sqs when polling for the archive retrieval job status.",
	"Method": "void setSqsClient(AmazonSQS sqsClient){\r\n    this.sqsClient = sqsClient;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetOpenIDConnectProviderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOpenIDConnectProviderArn() != null)\r\n        sb.append(\"OpenIDConnectProviderArn: \").append(getOpenIDConnectProviderArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlias() != null)\r\n        sb.append(\"Alias: \").append(getAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.PhysicalConnectionRequirements.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getSecurityGroupIdList() != null)\r\n        sb.append(\"SecurityGroupIdList: \").append(getSecurityGroupIdList()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.waiters.DescribeClusterFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeClusterResult apply(DescribeClusterRequest describeClusterRequest){\r\n    return client.describeCluster(describeClusterRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StopCrawlerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.transfer.ArchiveTransferManagerBuilder.setGlacierClient",
	"Comment": "set the client for uploading and downloading data to and from amazon glacier.",
	"Method": "void setGlacierClient(AmazonGlacier glacierClient){\r\n    this.glacierClient = glacierClient;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteRolePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StartMatchmakingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMatchmakingTicket() != null)\r\n        sb.append(\"MatchmakingTicket: \").append(getMatchmakingTicket());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteSSHPublicKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.AdditionalLimit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimitName() != null)\r\n        sb.append(\"LimitName: \").append(getLimitName()).append(\",\");\r\n    if (getLimitValues() != null)\r\n        sb.append(\"LimitValues: \").append(getLimitValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StopGameSessionPlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionPlacement() != null)\r\n        sb.append(\"GameSessionPlacement: \").append(getGameSessionPlacement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.AffectedEntity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntityArn() != null)\r\n        sb.append(\"EntityArn: \").append(getEntityArn()).append(\",\");\r\n    if (getEventArn() != null)\r\n        sb.append(\"EventArn: \").append(getEventArn()).append(\",\");\r\n    if (getEntityValue() != null)\r\n        sb.append(\"EntityValue: \").append(getEntityValue()).append(\",\");\r\n    if (getEntityUrl() != null)\r\n        sb.append(\"EntityUrl: \").append(getEntityUrl()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.detachGroupPolicy",
	"Comment": "removes the specified managed policy from the specified iam group.a group can also have inline policies embedded with it. to delete an inline policy, use thedeletegrouppolicy api. for information about policies, see managed policies andinline policies in the iam user guide.",
	"Method": "DetachGroupPolicyResult detachGroupPolicy(DetachGroupPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDetachGroupPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateOpenIDConnectProviderThumbprintRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOpenIDConnectProviderArn() != null)\r\n        sb.append(\"OpenIDConnectProviderArn: \").append(getOpenIDConnectProviderArn()).append(\",\");\r\n    if (getThumbprintList() != null)\r\n        sb.append(\"ThumbprintList: \").append(getThumbprintList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DetachRolePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateSAMLProviderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSAMLMetadataDocument() != null)\r\n        sb.append(\"SAMLMetadataDocument: \").append(getSAMLMetadataDocument()).append(\",\");\r\n    if (getSAMLProviderArn() != null)\r\n        sb.append(\"SAMLProviderArn: \").append(getSAMLProviderArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ResetDeploymentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentArn() != null)\r\n        sb.append(\"DeploymentArn: \").append(getDeploymentArn()).append(\",\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetMasterAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.AmazonImportExportClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.NodeToNodeEncryptionOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listGroupsAsync",
	"Comment": "simplified method form for invoking the listgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListGroupsResult> listGroupsAsync(ListGroupsRequest request,java.util.concurrent.Future<ListGroupsResult> listGroupsAsync,ListGroupsRequest request,com.amazonaws.handlers.AsyncHandler<ListGroupsRequest, ListGroupsResult> asyncHandler,java.util.concurrent.Future<ListGroupsResult> listGroupsAsync,java.util.concurrent.Future<ListGroupsResult> listGroupsAsync,com.amazonaws.handlers.AsyncHandler<ListGroupsRequest, ListGroupsResult> asyncHandler){\r\n    return listGroupsAsync(new ListGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteInstanceProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.GetCompatibleElasticsearchVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DescribeVaultResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVaultARN() != null)\r\n        sb.append(\"VaultARN: \").append(getVaultARN()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastInventoryDate() != null)\r\n        sb.append(\"LastInventoryDate: \").append(getLastInventoryDate()).append(\",\");\r\n    if (getNumberOfArchives() != null)\r\n        sb.append(\"NumberOfArchives: \").append(getNumberOfArchives()).append(\",\");\r\n    if (getSizeInBytes() != null)\r\n        sb.append(\"SizeInBytes: \").append(getSizeInBytes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeMatchmakingConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurations() != null)\r\n        sb.append(\"Configurations: \").append(getConfigurations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeFleetAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetAttributes() != null)\r\n        sb.append(\"FleetAttributes: \").append(getFleetAttributes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateLoginProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoginProfile() != null)\r\n        sb.append(\"LoginProfile: \").append(getLoginProfile());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.getAccountSummary",
	"Comment": "retrieves information about iam entity usage and iam quotas in the aws account.for information about limitations on iam entities, see limitations on iam entitiesin the iam user guide.",
	"Method": "GetAccountSummaryResult getAccountSummary(GetAccountSummaryRequest request,GetAccountSummaryResult getAccountSummary){\r\n    return getAccountSummary(new GetAccountSummaryRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.EnableMFADeviceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.RemoveTargetsResultEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DeleteAssessmentTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchDeleteTableVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.CreateFileSystemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystem() != null)\r\n        sb.append(\"FileSystem: \").append(getFileSystem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.CompleteMultipartUploadResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getArchiveId() != null)\r\n        sb.append(\"ArchiveId: \").append(getArchiveId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateConnectorDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getConnectorDefinitionId() != null)\r\n        sb.append(\"ConnectorDefinitionId: \").append(getConnectorDefinitionId()).append(\",\");\r\n    if (getConnectors() != null)\r\n        sb.append(\"Connectors: \").append(getConnectors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteUserDefinedFunctionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonglacier using the current builder configuration.",
	"Method": "AmazonGlacier build(AwsSyncClientParams params){\r\n    return new AmazonGlacierClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListAttachedUserPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedPolicies() != null)\r\n        sb.append(\"AttachedPolicies: \").append(getAttachedPolicies()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.waiters.DescribeLoadBalancersFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeLoadBalancersResult apply(DescribeLoadBalancersRequest describeLoadBalancersRequest){\r\n    return client.describeLoadBalancers(describeLoadBalancersRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetFilterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFilterName() != null)\r\n        sb.append(\"FilterName: \").append(getFilterName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeletePartitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getPartitionValues() != null)\r\n        sb.append(\"PartitionValues: \").append(getPartitionValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.SetSecurityGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.updateAssessmentTarget",
	"Comment": "updates the assessment target that is specified by the arn of the assessment target.if resourcegrouparn is not specified, all ec2 instances in the current aws account and region are included in theassessment target.",
	"Method": "UpdateAssessmentTargetResult updateAssessmentTarget(UpdateAssessmentTargetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateAssessmentTarget(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetServiceLastAccessedDetailsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getJobCreationDate() != null)\r\n        sb.append(\"JobCreationDate: \").append(getJobCreationDate()).append(\",\");\r\n    if (getServicesLastAccessed() != null)\r\n        sb.append(\"ServicesLastAccessed: \").append(getServicesLastAccessed()).append(\",\");\r\n    if (getJobCompletionDate() != null)\r\n        sb.append(\"JobCompletionDate: \").append(getJobCompletionDate()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(getError());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetPolicyVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyVersion() != null)\r\n        sb.append(\"PolicyVersion: \").append(getPolicyVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchDeleteTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTablesToDelete() != null)\r\n        sb.append(\"TablesToDelete: \").append(getTablesToDelete());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.DisableRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListAssessmentTemplatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTemplateArns() != null)\r\n        sb.append(\"AssessmentTemplateArns: \").append(getAssessmentTemplateArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.PartitionError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPartitionValues() != null)\r\n        sb.append(\"PartitionValues: \").append(getPartitionValues()).append(\",\");\r\n    if (getErrorDetail() != null)\r\n        sb.append(\"ErrorDetail: \").append(getErrorDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchStopJobRunSuccessfulSubmission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getJobRunId() != null)\r\n        sb.append(\"JobRunId: \").append(getJobRunId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.Finding.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getPartition() != null)\r\n        sb.append(\"Partition: \").append(getPartition()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getSchemaVersion() != null)\r\n        sb.append(\"SchemaVersion: \").append(getSchemaVersion()).append(\",\");\r\n    if (getService() != null)\r\n        sb.append(\"Service: \").append(getService()).append(\",\");\r\n    if (getSeverity() != null)\r\n        sb.append(\"Severity: \").append(getSeverity()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getUpdatedAt() != null)\r\n        sb.append(\"UpdatedAt: \").append(getUpdatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ContextEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContextKeyName() != null)\r\n        sb.append(\"ContextKeyName: \").append(getContextKeyName()).append(\",\");\r\n    if (getContextKeyValues() != null)\r\n        sb.append(\"ContextKeyValues: \").append(getContextKeyValues()).append(\",\");\r\n    if (getContextKeyType() != null)\r\n        sb.append(\"ContextKeyType: \").append(getContextKeyType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.UpgradeStepItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUpgradeStep() != null)\r\n        sb.append(\"UpgradeStep: \").append(getUpgradeStep()).append(\",\");\r\n    if (getUpgradeStepStatus() != null)\r\n        sb.append(\"UpgradeStepStatus: \").append(getUpgradeStepStatus()).append(\",\");\r\n    if (getIssues() != null)\r\n        sb.append(\"Issues: \").append(getIssues()).append(\",\");\r\n    if (getProgressPercent() != null)\r\n        sb.append(\"ProgressPercent: \").append(getProgressPercent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UnprocessedAccount.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getResult() != null)\r\n        sb.append(\"Result: \").append(getResult());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CaptionSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getLanguage() != null)\r\n        sb.append(\"Language: \").append(getLanguage()).append(\",\");\r\n    if (getTimeOffset() != null)\r\n        sb.append(\"TimeOffset: \").append(getTimeOffset()).append(\",\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.EbsBlockDevice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeSpecification() != null)\r\n        sb.append(\"VolumeSpecification: \").append(getVolumeSpecification()).append(\",\");\r\n    if (getDevice() != null)\r\n        sb.append(\"Device: \").append(getDevice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.TestEventPatternResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResult() != null)\r\n        sb.append(\"Result: \").append(getResult());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.GetUpgradeHistoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateCrawlerScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCrawlerName() != null)\r\n        sb.append(\"CrawlerName: \").append(getCrawlerName()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.abortVaultLock",
	"Comment": "this operation aborts the vault locking process if the vault lock is not in the locked state. if thevault lock is in the locked state when this operation is requested, the operation returns anaccessdeniedexception error. aborting the vault locking process removes the vault lock policy fromthe specified vault.a vault lock is put into the inprogress state by calling initiatevaultlock. a vault lock isput into the locked state by calling completevaultlock. you can get the state of a vault lockby calling getvaultlock. for more information about the vault locking process, see amazon glacier vault lock. formore information about vault lock policies, see amazon glacier access controlwith vault lock policies.this operation is idempotent. you can successfully invoke this operation multiple times, if the vault lock is inthe inprogress state or if there is no policy associated with the vault.",
	"Method": "AbortVaultLockResult abortVaultLock(AbortVaultLockRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAbortVaultLock(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateChangeReason() != null)\r\n        sb.append(\"StateChangeReason: \").append(getStateChangeReason()).append(\",\");\r\n    if (getTimeline() != null)\r\n        sb.append(\"Timeline: \").append(getTimeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.InitiateVaultLockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLockId() != null)\r\n        sb.append(\"LockId: \").append(getLockId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DetachGroupPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.getAccountPasswordPolicyAsync",
	"Comment": "simplified method form for invoking the getaccountpasswordpolicy operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetAccountPasswordPolicyResult> getAccountPasswordPolicyAsync(GetAccountPasswordPolicyRequest request,java.util.concurrent.Future<GetAccountPasswordPolicyResult> getAccountPasswordPolicyAsync,GetAccountPasswordPolicyRequest request,com.amazonaws.handlers.AsyncHandler<GetAccountPasswordPolicyRequest, GetAccountPasswordPolicyResult> asyncHandler,java.util.concurrent.Future<GetAccountPasswordPolicyResult> getAccountPasswordPolicyAsync,java.util.concurrent.Future<GetAccountPasswordPolicyResult> getAccountPasswordPolicyAsync,com.amazonaws.handlers.AsyncHandler<GetAccountPasswordPolicyRequest, GetAccountPasswordPolicyResult> asyncHandler){\r\n    return getAccountPasswordPolicyAsync(new GetAccountPasswordPolicyRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.describeRulesPackages",
	"Comment": "describes the rules packages that are specified by the arns of the rules packages.",
	"Method": "DescribeRulesPackagesResult describeRulesPackages(DescribeRulesPackagesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeRulesPackages(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListVirtualMFADevicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssignmentStatus() != null)\r\n        sb.append(\"AssignmentStatus: \").append(getAssignmentStatus()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AssessmentTemplate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAssessmentTargetArn() != null)\r\n        sb.append(\"AssessmentTargetArn: \").append(getAssessmentTargetArn()).append(\",\");\r\n    if (getDurationInSeconds() != null)\r\n        sb.append(\"DurationInSeconds: \").append(getDurationInSeconds()).append(\",\");\r\n    if (getRulesPackageArns() != null)\r\n        sb.append(\"RulesPackageArns: \").append(getRulesPackageArns()).append(\",\");\r\n    if (getUserAttributesForFindings() != null)\r\n        sb.append(\"UserAttributesForFindings: \").append(getUserAttributesForFindings()).append(\",\");\r\n    if (getLastAssessmentRunArn() != null)\r\n        sb.append(\"LastAssessmentRunArn: \").append(getLastAssessmentRunArn()).append(\",\");\r\n    if (getAssessmentRunCount() != null)\r\n        sb.append(\"AssessmentRunCount: \").append(getAssessmentRunCount()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.spi.security.EncryptionMaterials.getSymmetricKey",
	"Comment": "returns the symmetric key stored in this encryptionmaterials object.",
	"Method": "SecretKey getSymmetricKey(){\r\n    return this.symmetricKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteSigningCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.updateElasticsearchDomainConfig",
	"Comment": "modifies the cluster configuration of the specified elasticsearch domain, setting as setting the instance typeand the number of instances.",
	"Method": "UpdateElasticsearchDomainConfigResult updateElasticsearchDomainConfig(UpdateElasticsearchDomainConfigRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateElasticsearchDomainConfig(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.getSubscriptionDefinitionVersion",
	"Comment": "retrieves information about a subscription definition version.",
	"Method": "GetSubscriptionDefinitionVersionResult getSubscriptionDefinitionVersion(GetSubscriptionDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSubscriptionDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AttachUserPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.disassociateFromMasterAccount",
	"Comment": "disassociates the current guardduty member account from its master account.",
	"Method": "DisassociateFromMasterAccountResult disassociateFromMasterAccount(DisassociateFromMasterAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateFromMasterAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.TargetGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetGroupArn() != null)\r\n        sb.append(\"TargetGroupArn: \").append(getTargetGroupArn()).append(\",\");\r\n    if (getTargetGroupName() != null)\r\n        sb.append(\"TargetGroupName: \").append(getTargetGroupName()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getHealthCheckProtocol() != null)\r\n        sb.append(\"HealthCheckProtocol: \").append(getHealthCheckProtocol()).append(\",\");\r\n    if (getHealthCheckPort() != null)\r\n        sb.append(\"HealthCheckPort: \").append(getHealthCheckPort()).append(\",\");\r\n    if (getHealthCheckEnabled() != null)\r\n        sb.append(\"HealthCheckEnabled: \").append(getHealthCheckEnabled()).append(\",\");\r\n    if (getHealthCheckIntervalSeconds() != null)\r\n        sb.append(\"HealthCheckIntervalSeconds: \").append(getHealthCheckIntervalSeconds()).append(\",\");\r\n    if (getHealthCheckTimeoutSeconds() != null)\r\n        sb.append(\"HealthCheckTimeoutSeconds: \").append(getHealthCheckTimeoutSeconds()).append(\",\");\r\n    if (getHealthyThresholdCount() != null)\r\n        sb.append(\"HealthyThresholdCount: \").append(getHealthyThresholdCount()).append(\",\");\r\n    if (getUnhealthyThresholdCount() != null)\r\n        sb.append(\"UnhealthyThresholdCount: \").append(getUnhealthyThresholdCount()).append(\",\");\r\n    if (getHealthCheckPath() != null)\r\n        sb.append(\"HealthCheckPath: \").append(getHealthCheckPath()).append(\",\");\r\n    if (getMatcher() != null)\r\n        sb.append(\"Matcher: \").append(getMatcher()).append(\",\");\r\n    if (getLoadBalancerArns() != null)\r\n        sb.append(\"LoadBalancerArns: \").append(getLoadBalancerArns()).append(\",\");\r\n    if (getTargetType() != null)\r\n        sb.append(\"TargetType: \").append(getTargetType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.CreateSecurityConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetUserPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.DescribeStepResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStep() != null)\r\n        sb.append(\"Step: \").append(getStep());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.PurchaseReservedElasticsearchInstanceOfferingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedElasticsearchInstanceOfferingId() != null)\r\n        sb.append(\"ReservedElasticsearchInstanceOfferingId: \").append(getReservedElasticsearchInstanceOfferingId()).append(\",\");\r\n    if (getReservationName() != null)\r\n        sb.append(\"ReservationName: \").append(getReservationName()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.deleteCrawler",
	"Comment": "removes a specified crawler from the data catalog, unless the crawler state is running.",
	"Method": "DeleteCrawlerResult deleteCrawler(DeleteCrawlerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteCrawler(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreatePlayerSessionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId()).append(\",\");\r\n    if (getPlayerId() != null)\r\n        sb.append(\"PlayerId: \").append(getPlayerId()).append(\",\");\r\n    if (getPlayerData() != null)\r\n        sb.append(\"PlayerData: \").append(getPlayerData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListRoleTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AssessmentRun.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAssessmentTemplateArn() != null)\r\n        sb.append(\"AssessmentTemplateArn: \").append(getAssessmentTemplateArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getDurationInSeconds() != null)\r\n        sb.append(\"DurationInSeconds: \").append(getDurationInSeconds()).append(\",\");\r\n    if (getRulesPackageArns() != null)\r\n        sb.append(\"RulesPackageArns: \").append(getRulesPackageArns()).append(\",\");\r\n    if (getUserAttributesForFindings() != null)\r\n        sb.append(\"UserAttributesForFindings: \").append(getUserAttributesForFindings()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getCompletedAt() != null)\r\n        sb.append(\"CompletedAt: \").append(getCompletedAt()).append(\",\");\r\n    if (getStateChangedAt() != null)\r\n        sb.append(\"StateChangedAt: \").append(getStateChangedAt()).append(\",\");\r\n    if (getDataCollected() != null)\r\n        sb.append(\"DataCollected: \").append(getDataCollected()).append(\",\");\r\n    if (getStateChanges() != null)\r\n        sb.append(\"StateChanges: \").append(getStateChanges()).append(\",\");\r\n    if (getNotifications() != null)\r\n        sb.append(\"Notifications: \").append(getNotifications()).append(\",\");\r\n    if (getFindingCounts() != null)\r\n        sb.append(\"FindingCounts: \").append(getFindingCounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteTableVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateSoftwareUpdateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIotJobArn() != null)\r\n        sb.append(\"IotJobArn: \").append(getIotJobArn()).append(\",\");\r\n    if (getIotJobId() != null)\r\n        sb.append(\"IotJobId: \").append(getIotJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.listBootstrapActions",
	"Comment": "provides information about the bootstrap actions associated with a cluster.",
	"Method": "ListBootstrapActionsResult listBootstrapActions(ListBootstrapActionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListBootstrapActions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeMatchmakingRuleSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleSets() != null)\r\n        sb.append(\"RuleSets: \").append(getRuleSets()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.Grant.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGrantee() != null)\r\n        sb.append(\"Grantee: \").append(getGrantee()).append(\",\");\r\n    if (getPermission() != null)\r\n        sb.append(\"Permission: \").append(getPermission());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.EncryptionAtRestOptionsStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.Encryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncryptionType() != null)\r\n        sb.append(\"EncryptionType: \").append(getEncryptionType()).append(\",\");\r\n    if (getKMSKeyId() != null)\r\n        sb.append(\"KMSKeyId: \").append(getKMSKeyId()).append(\",\");\r\n    if (getKMSContext() != null)\r\n        sb.append(\"KMSContext: \").append(getKMSContext());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.listElasticsearchInstanceTypes",
	"Comment": "list all elasticsearch instance types that are supported for given elasticsearchversion",
	"Method": "ListElasticsearchInstanceTypesResult listElasticsearchInstanceTypes(ListElasticsearchInstanceTypesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListElasticsearchInstanceTypes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateClassifierRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGrokClassifier() != null)\r\n        sb.append(\"GrokClassifier: \").append(getGrokClassifier()).append(\",\");\r\n    if (getXMLClassifier() != null)\r\n        sb.append(\"XMLClassifier: \").append(getXMLClassifier()).append(\",\");\r\n    if (getJsonClassifier() != null)\r\n        sb.append(\"JsonClassifier: \").append(getJsonClassifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StartCrawlerScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCrawlerName() != null)\r\n        sb.append(\"CrawlerName: \").append(getCrawlerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateFilterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.VersionInformation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetServiceLinkedRoleDeletionStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.AccessKeyDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessKeyId() != null)\r\n        sb.append(\"AccessKeyId: \").append(getAccessKeyId()).append(\",\");\r\n    if (getPrincipalId() != null)\r\n        sb.append(\"PrincipalId: \").append(getPrincipalId()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getUserType() != null)\r\n        sb.append(\"UserType: \").append(getUserType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.StartFleetActionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.listIPSets",
	"Comment": "lists the ipsets of the guardduty service specified by the detector id.",
	"Method": "ListIPSetsResult listIPSets(ListIPSetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListIPSets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Trigger.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions()).append(\",\");\r\n    if (getPredicate() != null)\r\n        sb.append(\"Predicate: \").append(getPredicate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusters() != null)\r\n        sb.append(\"Clusters: \").append(getClusters()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listAccessKeysAsync",
	"Comment": "simplified method form for invoking the listaccesskeys operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAccessKeysResult> listAccessKeysAsync(ListAccessKeysRequest request,java.util.concurrent.Future<ListAccessKeysResult> listAccessKeysAsync,ListAccessKeysRequest request,com.amazonaws.handlers.AsyncHandler<ListAccessKeysRequest, ListAccessKeysResult> asyncHandler,java.util.concurrent.Future<ListAccessKeysResult> listAccessKeysAsync,java.util.concurrent.Future<ListAccessKeysResult> listAccessKeysAsync,com.amazonaws.handlers.AsyncHandler<ListAccessKeysRequest, ListAccessKeysResult> asyncHandler){\r\n    return listAccessKeysAsync(new ListAccessKeysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.UpdatePipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline()).append(\",\");\r\n    if (getWarnings() != null)\r\n        sb.append(\"Warnings: \").append(getWarnings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.FunctionDefinitionVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultConfig() != null)\r\n        sb.append(\"DefaultConfig: \").append(getDefaultConfig()).append(\",\");\r\n    if (getFunctions() != null)\r\n        sb.append(\"Functions: \").append(getFunctions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UnarchiveFindingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFindingIds() != null)\r\n        sb.append(\"FindingIds: \").append(getFindingIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.AddTagsToVaultRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetConnectivityInfoRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.transfer.ArchiveTransferManager.appendToFile",
	"Comment": "writes the data from the given input stream to the given output stream.",
	"Method": "void appendToFile(RandomAccessFile output,InputStream input){\r\n    byte[] buffer = new byte[1024 * 1024];\r\n    int bytesRead = 0;\r\n    do {\r\n        bytesRead = input.read(buffer);\r\n        if (bytesRead < 0)\r\n            break;\r\n        output.write(buffer, 0, bytesRead);\r\n    } while (bytesRead > 0);\r\n    return;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listGroups",
	"Comment": "lists the iam groups that have the specified path prefix.you can paginate the results using the maxitems and marker parameters.",
	"Method": "ListGroupsResult listGroups(ListGroupsRequest request,ListGroupsResult listGroups){\r\n    return listGroups(new ListGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.describeAssessmentTemplates",
	"Comment": "describes the assessment templates that are specified by the arns of the assessment templates.",
	"Method": "DescribeAssessmentTemplatesResult describeAssessmentTemplates(DescribeAssessmentTemplatesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAssessmentTemplates(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdatePartitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getPartitionValueList() != null)\r\n        sb.append(\"PartitionValueList: \").append(getPartitionValueList()).append(\",\");\r\n    if (getPartitionInput() != null)\r\n        sb.append(\"PartitionInput: \").append(getPartitionInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.SSHPublicKeyMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSSHPublicKeyId() != null)\r\n        sb.append(\"SSHPublicKeyId: \").append(getSSHPublicKeyId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getUploadDate() != null)\r\n        sb.append(\"UploadDate: \").append(getUploadDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteUserPermissionsBoundaryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.FindingFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAgentIds() != null)\r\n        sb.append(\"AgentIds: \").append(getAgentIds()).append(\",\");\r\n    if (getAutoScalingGroups() != null)\r\n        sb.append(\"AutoScalingGroups: \").append(getAutoScalingGroups()).append(\",\");\r\n    if (getRuleNames() != null)\r\n        sb.append(\"RuleNames: \").append(getRuleNames()).append(\",\");\r\n    if (getSeverities() != null)\r\n        sb.append(\"Severities: \").append(getSeverities()).append(\",\");\r\n    if (getRulesPackageArns() != null)\r\n        sb.append(\"RulesPackageArns: \").append(getRulesPackageArns()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getUserAttributes() != null)\r\n        sb.append(\"UserAttributes: \").append(getUserAttributes()).append(\",\");\r\n    if (getCreationTimeRange() != null)\r\n        sb.append(\"CreationTimeRange: \").append(getCreationTimeRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.AWSHealthClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeReservedElasticsearchInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedElasticsearchInstanceId() != null)\r\n        sb.append(\"ReservedElasticsearchInstanceId: \").append(getReservedElasticsearchInstanceId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetResourcePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeVpcPeeringConnectionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DescribeAcceleratorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceleratorArn() != null)\r\n        sb.append(\"AcceleratorArn: \").append(getAcceleratorArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetConnectivityInfoResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectivityInfo() != null)\r\n        sb.append(\"ConnectivityInfo: \").append(getConnectivityInfo()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetSAMLProviderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSAMLProviderArn() != null)\r\n        sb.append(\"SAMLProviderArn: \").append(getSAMLProviderArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorClient.listEndpointGroups",
	"Comment": "list the endpoint groups that are associated with a listener.",
	"Method": "ListEndpointGroupsResult listEndpointGroups(ListEndpointGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListEndpointGroups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.createRole",
	"Comment": "creates a new role for your aws account. for more information about roles, go to iam roles. for information aboutlimitations on role names and the number of roles you can create, go to limitations on iam entitiesin the iam user guide.",
	"Method": "CreateRoleResult createRole(CreateRoleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateRole(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.OrganizationsDecisionDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowedByOrganizations() != null)\r\n        sb.append(\"AllowedByOrganizations: \").append(getAllowedByOrganizations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateUserDefinedFunctionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getFunctionInput() != null)\r\n        sb.append(\"FunctionInput: \").append(getFunctionInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListRolesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoles() != null)\r\n        sb.append(\"Roles: \").append(getRoles()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.listThreatIntelSets",
	"Comment": "lists the threatintelsets of the guardduty service specified by the detector id.",
	"Method": "ListThreatIntelSetsResult listThreatIntelSets(ListThreatIntelSetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListThreatIntelSets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.listProvisionedCapacity",
	"Comment": "this operation lists the provisioned capacity units for the specified aws account.",
	"Method": "ListProvisionedCapacityResult listProvisionedCapacity(ListProvisionedCapacityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListProvisionedCapacity(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.describeFindings",
	"Comment": "describes the findings that are specified by the arns of the findings.",
	"Method": "DescribeFindingsResult describeFindings(DescribeFindingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeFindings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.GetComplianceDetailResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyComplianceDetail() != null)\r\n        sb.append(\"PolicyComplianceDetail: \").append(getPolicyComplianceDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DeleteAssessmentRunRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunArn() != null)\r\n        sb.append(\"AssessmentRunArn: \").append(getAssessmentRunArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.FleetCapacity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getInstanceCounts() != null)\r\n        sb.append(\"InstanceCounts: \").append(getInstanceCounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetConnectorDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectorDefinitionId() != null)\r\n        sb.append(\"ConnectorDefinitionId: \").append(getConnectorDefinitionId()).append(\",\");\r\n    if (getConnectorDefinitionVersionId() != null)\r\n        sb.append(\"ConnectorDefinitionVersionId: \").append(getConnectorDefinitionVersionId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.StorageTypeLimit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimitName() != null)\r\n        sb.append(\"LimitName: \").append(getLimitName()).append(\",\");\r\n    if (getLimitValues() != null)\r\n        sb.append(\"LimitValues: \").append(getLimitValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.waiters.AmazonElasticLoadBalancingWaiters.targetInService",
	"Comment": "builds a targetinservice waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeTargetHealthRequest> targetInService(){\r\n    return new WaiterBuilder<DescribeTargetHealthRequest, DescribeTargetHealthResult>().withSdkFunction(new DescribeTargetHealthFunction(client)).withAcceptors(new TargetInService.IsHealthyMatcher(), new TargetInService.IsInvalidInstanceMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.SchemaChangePolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUpdateBehavior() != null)\r\n        sb.append(\"UpdateBehavior: \").append(getUpdateBehavior()).append(\",\");\r\n    if (getDeleteBehavior() != null)\r\n        sb.append(\"DeleteBehavior: \").append(getDeleteBehavior());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListBulkDeploymentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBulkDeployments() != null)\r\n        sb.append(\"BulkDeployments: \").append(getBulkDeployments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeElasticsearchDomainsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainStatusList() != null)\r\n        sb.append(\"DomainStatusList: \").append(getDomainStatusList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DeleteBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetConnectionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.KeyValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeReservedElasticsearchInstanceOfferingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedElasticsearchInstanceOfferingId() != null)\r\n        sb.append(\"ReservedElasticsearchInstanceOfferingId: \").append(getReservedElasticsearchInstanceOfferingId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateSubscriptionDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ErrorDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetailedErrorCode() != null)\r\n        sb.append(\"DetailedErrorCode: \").append(getDetailedErrorCode()).append(\",\");\r\n    if (getDetailedErrorMessage() != null)\r\n        sb.append(\"DetailedErrorMessage: \").append(getDetailedErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetSubscriptionDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionDefinitionId() != null)\r\n        sb.append(\"SubscriptionDefinitionId: \").append(getSubscriptionDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getInitialVersion() != null)\r\n        sb.append(\"InitialVersion: \").append(getInitialVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateInstanceProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceProfile() != null)\r\n        sb.append(\"InstanceProfile: \").append(getInstanceProfile());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateSoftwareUpdateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getS3UrlSignerRole() != null)\r\n        sb.append(\"S3UrlSignerRole: \").append(getS3UrlSignerRole()).append(\",\");\r\n    if (getSoftwareToUpdate() != null)\r\n        sb.append(\"SoftwareToUpdate: \").append(getSoftwareToUpdate()).append(\",\");\r\n    if (getUpdateAgentLogLevel() != null)\r\n        sb.append(\"UpdateAgentLogLevel: \").append(getUpdateAgentLogLevel()).append(\",\");\r\n    if (getUpdateTargets() != null)\r\n        sb.append(\"UpdateTargets: \").append(getUpdateTargets()).append(\",\");\r\n    if (getUpdateTargetsArchitecture() != null)\r\n        sb.append(\"UpdateTargetsArchitecture: \").append(getUpdateTargetsArchitecture()).append(\",\");\r\n    if (getUpdateTargetsOperatingSystem() != null)\r\n        sb.append(\"UpdateTargetsOperatingSystem: \").append(getUpdateTargetsOperatingSystem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateResourceDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getInitialVersion() != null)\r\n        sb.append(\"InitialVersion: \").append(getInitialVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateDeviceDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getDeviceDefinitionId() != null)\r\n        sb.append(\"DeviceDefinitionId: \").append(getDeviceDefinitionId()).append(\",\");\r\n    if (getDevices() != null)\r\n        sb.append(\"Devices: \").append(getDevices());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listSSHPublicKeysAsync",
	"Comment": "simplified method form for invoking the listsshpublickeys operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListSSHPublicKeysResult> listSSHPublicKeysAsync(ListSSHPublicKeysRequest request,java.util.concurrent.Future<ListSSHPublicKeysResult> listSSHPublicKeysAsync,ListSSHPublicKeysRequest request,com.amazonaws.handlers.AsyncHandler<ListSSHPublicKeysRequest, ListSSHPublicKeysResult> asyncHandler,java.util.concurrent.Future<ListSSHPublicKeysResult> listSSHPublicKeysAsync,java.util.concurrent.Future<ListSSHPublicKeysResult> listSSHPublicKeysAsync,com.amazonaws.handlers.AsyncHandler<ListSSHPublicKeysRequest, ListSSHPublicKeysResult> asyncHandler){\r\n    return listSSHPublicKeysAsync(new ListSSHPublicKeysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateGrokClassifierRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getClassification() != null)\r\n        sb.append(\"Classification: \").append(getClassification()).append(\",\");\r\n    if (getGrokPattern() != null)\r\n        sb.append(\"GrokPattern: \").append(getGrokPattern()).append(\",\");\r\n    if (getCustomPatterns() != null)\r\n        sb.append(\"CustomPatterns: \").append(getCustomPatterns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.Configuration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClassification() != null)\r\n        sb.append(\"Classification: \").append(getClassification()).append(\",\");\r\n    if (getConfigurations() != null)\r\n        sb.append(\"Configurations: \").append(getConfigurations()).append(\",\");\r\n    if (getProperties() != null)\r\n        sb.append(\"Properties: \").append(getProperties());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteCoreDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCoreDefinitionId() != null)\r\n        sb.append(\"CoreDefinitionId: \").append(getCoreDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.PlacedPlayerSession.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlayerId() != null)\r\n        sb.append(\"PlayerId: \").append(getPlayerId()).append(\",\");\r\n    if (getPlayerSessionId() != null)\r\n        sb.append(\"PlayerSessionId: \").append(getPlayerSessionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateMembersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedAccounts() != null)\r\n        sb.append(\"UnprocessedAccounts: \").append(getUnprocessedAccounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeEC2InstanceLimitsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEC2InstanceType() != null)\r\n        sb.append(\"EC2InstanceType: \").append(getEC2InstanceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.EbsVolume.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevice() != null)\r\n        sb.append(\"Device: \").append(getDevice()).append(\",\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateMatchmakingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGameSessionQueueArns() != null)\r\n        sb.append(\"GameSessionQueueArns: \").append(getGameSessionQueueArns()).append(\",\");\r\n    if (getRequestTimeoutSeconds() != null)\r\n        sb.append(\"RequestTimeoutSeconds: \").append(getRequestTimeoutSeconds()).append(\",\");\r\n    if (getAcceptanceTimeoutSeconds() != null)\r\n        sb.append(\"AcceptanceTimeoutSeconds: \").append(getAcceptanceTimeoutSeconds()).append(\",\");\r\n    if (getAcceptanceRequired() != null)\r\n        sb.append(\"AcceptanceRequired: \").append(getAcceptanceRequired()).append(\",\");\r\n    if (getRuleSetName() != null)\r\n        sb.append(\"RuleSetName: \").append(getRuleSetName()).append(\",\");\r\n    if (getNotificationTarget() != null)\r\n        sb.append(\"NotificationTarget: \").append(getNotificationTarget()).append(\",\");\r\n    if (getAdditionalPlayerCount() != null)\r\n        sb.append(\"AdditionalPlayerCount: \").append(getAdditionalPlayerCount()).append(\",\");\r\n    if (getCustomEventData() != null)\r\n        sb.append(\"CustomEventData: \").append(getCustomEventData()).append(\",\");\r\n    if (getGameProperties() != null)\r\n        sb.append(\"GameProperties: \").append(getGameProperties()).append(\",\");\r\n    if (getGameSessionData() != null)\r\n        sb.append(\"GameSessionData: \").append(getGameSessionData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasId() != null)\r\n        sb.append(\"AliasId: \").append(getAliasId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoutingStrategy() != null)\r\n        sb.append(\"RoutingStrategy: \").append(getRoutingStrategy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.CancelElasticsearchServiceSoftwareUpdateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateSSHPublicKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSSHPublicKeyId() != null)\r\n        sb.append(\"SSHPublicKeyId: \").append(getSSHPublicKeyId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.Instance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getOperatingSystem() != null)\r\n        sb.append(\"OperatingSystem: \").append(getOperatingSystem()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CrawlerMetrics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCrawlerName() != null)\r\n        sb.append(\"CrawlerName: \").append(getCrawlerName()).append(\",\");\r\n    if (getTimeLeftSeconds() != null)\r\n        sb.append(\"TimeLeftSeconds: \").append(getTimeLeftSeconds()).append(\",\");\r\n    if (getStillEstimating() != null)\r\n        sb.append(\"StillEstimating: \").append(getStillEstimating()).append(\",\");\r\n    if (getLastRuntimeSeconds() != null)\r\n        sb.append(\"LastRuntimeSeconds: \").append(getLastRuntimeSeconds()).append(\",\");\r\n    if (getMedianRuntimeSeconds() != null)\r\n        sb.append(\"MedianRuntimeSeconds: \").append(getMedianRuntimeSeconds()).append(\",\");\r\n    if (getTablesCreated() != null)\r\n        sb.append(\"TablesCreated: \").append(getTablesCreated()).append(\",\");\r\n    if (getTablesUpdated() != null)\r\n        sb.append(\"TablesUpdated: \").append(getTablesUpdated()).append(\",\");\r\n    if (getTablesDeleted() != null)\r\n        sb.append(\"TablesDeleted: \").append(getTablesDeleted());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetResourceDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceDefinitionId() != null)\r\n        sb.append(\"ResourceDefinitionId: \").append(getResourceDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListRoleTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteUserPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DatabaseInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLocationUri() != null)\r\n        sb.append(\"LocationUri: \").append(getLocationUri()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListServerCertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerCertificateMetadataList() != null)\r\n        sb.append(\"ServerCertificateMetadataList: \").append(getServerCertificateMetadataList()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.Organization.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAsn() != null)\r\n        sb.append(\"Asn: \").append(getAsn()).append(\",\");\r\n    if (getAsnOrg() != null)\r\n        sb.append(\"AsnOrg: \").append(getAsnOrg()).append(\",\");\r\n    if (getIsp() != null)\r\n        sb.append(\"Isp: \").append(getIsp()).append(\",\");\r\n    if (getOrg() != null)\r\n        sb.append(\"Org: \").append(getOrg());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.InstanceCredentials.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getSecret() != null)\r\n        sb.append(\"Secret: \").append(getSecret());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.TargetConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetValue() != null)\r\n        sb.append(\"TargetValue: \").append(getTargetValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.RemoveUserFromGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.startCrawlerSchedule",
	"Comment": "changes the schedule state of the specified crawler to scheduled, unless the crawler is alreadyrunning or the schedule state is already scheduled.",
	"Method": "StartCrawlerScheduleResult startCrawlerSchedule(StartCrawlerScheduleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartCrawlerSchedule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.updateThreatIntelSet",
	"Comment": "updates the threatintelset specified by threatintelset id.",
	"Method": "UpdateThreatIntelSetResult updateThreatIntelSet(UpdateThreatIntelSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateThreatIntelSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListExclusionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExclusionArns() != null)\r\n        sb.append(\"ExclusionArns: \").append(getExclusionArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListConnectorDefinitionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefinitions() != null)\r\n        sb.append(\"Definitions: \").append(getDefinitions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UntagUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.getAccessKeyLastUsed",
	"Comment": "retrieves information about when the specified access key was last used. the information includes the date andtime of last use, along with the aws service and region that were specified in the last request made with thatkey.",
	"Method": "GetAccessKeyLastUsedResult getAccessKeyLastUsed(GetAccessKeyLastUsedRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetAccessKeyLastUsed(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.JobFlowInstancesDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMasterInstanceType() != null)\r\n        sb.append(\"MasterInstanceType: \").append(getMasterInstanceType()).append(\",\");\r\n    if (getMasterPublicDnsName() != null)\r\n        sb.append(\"MasterPublicDnsName: \").append(getMasterPublicDnsName()).append(\",\");\r\n    if (getMasterInstanceId() != null)\r\n        sb.append(\"MasterInstanceId: \").append(getMasterInstanceId()).append(\",\");\r\n    if (getSlaveInstanceType() != null)\r\n        sb.append(\"SlaveInstanceType: \").append(getSlaveInstanceType()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getInstanceGroups() != null)\r\n        sb.append(\"InstanceGroups: \").append(getInstanceGroups()).append(\",\");\r\n    if (getNormalizedInstanceHours() != null)\r\n        sb.append(\"NormalizedInstanceHours: \").append(getNormalizedInstanceHours()).append(\",\");\r\n    if (getEc2KeyName() != null)\r\n        sb.append(\"Ec2KeyName: \").append(getEc2KeyName()).append(\",\");\r\n    if (getEc2SubnetId() != null)\r\n        sb.append(\"Ec2SubnetId: \").append(getEc2SubnetId()).append(\",\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement()).append(\",\");\r\n    if (getKeepJobFlowAliveWhenNoSteps() != null)\r\n        sb.append(\"KeepJobFlowAliveWhenNoSteps: \").append(getKeepJobFlowAliveWhenNoSteps()).append(\",\");\r\n    if (getTerminationProtected() != null)\r\n        sb.append(\"TerminationProtected: \").append(getTerminationProtected()).append(\",\");\r\n    if (getHadoopVersion() != null)\r\n        sb.append(\"HadoopVersion: \").append(getHadoopVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.Command.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getScriptPath() != null)\r\n        sb.append(\"ScriptPath: \").append(getScriptPath()).append(\",\");\r\n    if (getArgs() != null)\r\n        sb.append(\"Args: \").append(getArgs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateResourceDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListAssessmentTemplatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTargetArns() != null)\r\n        sb.append(\"AssessmentTargetArns: \").append(getAssessmentTargetArns()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateTriggerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.LocalDeviceResourceData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupOwnerSetting() != null)\r\n        sb.append(\"GroupOwnerSetting: \").append(getGroupOwnerSetting()).append(\",\");\r\n    if (getSourcePath() != null)\r\n        sb.append(\"SourcePath: \").append(getSourcePath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateCoreDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCoreDefinitionId() != null)\r\n        sb.append(\"CoreDefinitionId: \").append(getCoreDefinitionId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.Listener.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn()).append(\",\");\r\n    if (getPortRanges() != null)\r\n        sb.append(\"PortRanges: \").append(getPortRanges()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getClientAffinity() != null)\r\n        sb.append(\"ClientAffinity: \").append(getClientAffinity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.S3MachineLearningModelResourceData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationPath() != null)\r\n        sb.append(\"DestinationPath: \").append(getDestinationPath()).append(\",\");\r\n    if (getS3Uri() != null)\r\n        sb.append(\"S3Uri: \").append(getS3Uri());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.listMFADevicesAsync",
	"Comment": "simplified method form for invoking the listmfadevices operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListMFADevicesResult> listMFADevicesAsync(ListMFADevicesRequest request,java.util.concurrent.Future<ListMFADevicesResult> listMFADevicesAsync,ListMFADevicesRequest request,com.amazonaws.handlers.AsyncHandler<ListMFADevicesRequest, ListMFADevicesResult> asyncHandler,java.util.concurrent.Future<ListMFADevicesResult> listMFADevicesAsync,java.util.concurrent.Future<ListMFADevicesResult> listMFADevicesAsync,com.amazonaws.handlers.AsyncHandler<ListMFADevicesRequest, ListMFADevicesResult> asyncHandler){\r\n    return listMFADevicesAsync(new ListMFADevicesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.ListAcceleratorsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UpdateDetectorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getEnable() != null)\r\n        sb.append(\"Enable: \").append(getEnable()).append(\",\");\r\n    if (getFindingPublishingFrequency() != null)\r\n        sb.append(\"FindingPublishingFrequency: \").append(getFindingPublishingFrequency());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CoreDefinitionVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCores() != null)\r\n        sb.append(\"Cores: \").append(getCores());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteGroupPolicy",
	"Comment": "deletes the specified inline policy that is embedded in the specified iam group.a group can also have managed policies attached to it. to detach a managed policy from a group, usedetachgrouppolicy. for more information about policies, refer to managed policies andinline policies in the iam user guide.",
	"Method": "DeleteGroupPolicyResult deleteGroupPolicy(DeleteGroupPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteGroupPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeCrossAccountAccessRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getValid() != null)\r\n        sb.append(\"Valid: \").append(getValid()).append(\",\");\r\n    if (getRegisteredAt() != null)\r\n        sb.append(\"RegisteredAt: \").append(getRegisteredAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListSigningCertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateGrokClassifierRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClassification() != null)\r\n        sb.append(\"Classification: \").append(getClassification()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getGrokPattern() != null)\r\n        sb.append(\"GrokPattern: \").append(getGrokPattern()).append(\",\");\r\n    if (getCustomPatterns() != null)\r\n        sb.append(\"CustomPatterns: \").append(getCustomPatterns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.CancelStepsInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStepId() != null)\r\n        sb.append(\"StepId: \").append(getStepId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.JobParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getArchiveId() != null)\r\n        sb.append(\"ArchiveId: \").append(getArchiveId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSNSTopic() != null)\r\n        sb.append(\"SNSTopic: \").append(getSNSTopic()).append(\",\");\r\n    if (getRetrievalByteRange() != null)\r\n        sb.append(\"RetrievalByteRange: \").append(getRetrievalByteRange()).append(\",\");\r\n    if (getTier() != null)\r\n        sb.append(\"Tier: \").append(getTier()).append(\",\");\r\n    if (getInventoryRetrievalParameters() != null)\r\n        sb.append(\"InventoryRetrievalParameters: \").append(getInventoryRetrievalParameters()).append(\",\");\r\n    if (getSelectParameters() != null)\r\n        sb.append(\"SelectParameters: \").append(getSelectParameters()).append(\",\");\r\n    if (getOutputLocation() != null)\r\n        sb.append(\"OutputLocation: \").append(getOutputLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutEventsRequestEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTime() != null)\r\n        sb.append(\"Time: \").append(getTime()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getDetailType() != null)\r\n        sb.append(\"DetailType: \").append(getDetailType()).append(\",\");\r\n    if (getDetail() != null)\r\n        sb.append(\"Detail: \").append(getDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.InitiateMultipartUploadRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getArchiveDescription() != null)\r\n        sb.append(\"ArchiveDescription: \").append(getArchiveDescription()).append(\",\");\r\n    if (getPartSize() != null)\r\n        sb.append(\"PartSize: \").append(getPartSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.transfer.ArchiveTransferManagerBuilder.withSnsClient",
	"Comment": "set the client for working with amazon sns when polling for the archive retrieval job status.",
	"Method": "ArchiveTransferManagerBuilder withSnsClient(AmazonSNS snsClient){\r\n    setSnsClient(snsClient);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AttachGroupPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetGroupVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupVersionId() != null)\r\n        sb.append(\"GroupVersionId: \").append(getGroupVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.CreateResourceGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceGroupTags() != null)\r\n        sb.append(\"ResourceGroupTags: \").append(getResourceGroupTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.ResetJobBookmarkResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobBookmarkEntry() != null)\r\n        sb.append(\"JobBookmarkEntry: \").append(getJobBookmarkEntry());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutPermissionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.StartBulkDeploymentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getExecutionRoleArn() != null)\r\n        sb.append(\"ExecutionRoleArn: \").append(getExecutionRoleArn()).append(\",\");\r\n    if (getInputFileUri() != null)\r\n        sb.append(\"InputFileUri: \").append(getInputFileUri());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UserDefinedFunctionInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getClassName() != null)\r\n        sb.append(\"ClassName: \").append(getClassName()).append(\",\");\r\n    if (getOwnerName() != null)\r\n        sb.append(\"OwnerName: \").append(getOwnerName()).append(\",\");\r\n    if (getOwnerType() != null)\r\n        sb.append(\"OwnerType: \").append(getOwnerType()).append(\",\");\r\n    if (getResourceUris() != null)\r\n        sb.append(\"ResourceUris: \").append(getResourceUris());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateSubscriptionDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getInitialVersion() != null)\r\n        sb.append(\"InitialVersion: \").append(getInitialVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetFunctionDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.SetDataRetrievalPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.RemoveAutoScalingPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getInstanceGroupId() != null)\r\n        sb.append(\"InstanceGroupId: \").append(getInstanceGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListRolePoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyNames() != null)\r\n        sb.append(\"PolicyNames: \").append(getPolicyNames()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteVpcPeeringAuthorizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.SetVisibleToAllUsersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobFlowIds() != null)\r\n        sb.append(\"JobFlowIds: \").append(getJobFlowIds()).append(\",\");\r\n    if (getVisibleToAllUsers() != null)\r\n        sb.append(\"VisibleToAllUsers: \").append(getVisibleToAllUsers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getJobUpdate() != null)\r\n        sb.append(\"JobUpdate: \").append(getJobUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeAssessmentTemplatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTemplateArns() != null)\r\n        sb.append(\"AssessmentTemplateArns: \").append(getAssessmentTemplateArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.DescribeJobFlowsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreatedAfter() != null)\r\n        sb.append(\"CreatedAfter: \").append(getCreatedAfter()).append(\",\");\r\n    if (getCreatedBefore() != null)\r\n        sb.append(\"CreatedBefore: \").append(getCreatedBefore()).append(\",\");\r\n    if (getJobFlowIds() != null)\r\n        sb.append(\"JobFlowIds: \").append(getJobFlowIds()).append(\",\");\r\n    if (getJobFlowStates() != null)\r\n        sb.append(\"JobFlowStates: \").append(getJobFlowStates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.SigningCertificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getCertificateBody() != null)\r\n        sb.append(\"CertificateBody: \").append(getCertificateBody()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getUploadDate() != null)\r\n        sb.append(\"UploadDate: \").append(getUploadDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AutoScalingPolicyDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getConstraints() != null)\r\n        sb.append(\"Constraints: \").append(getConstraints()).append(\",\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetClassifiersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClassifiers() != null)\r\n        sb.append(\"Classifiers: \").append(getClassifiers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateFilterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFindingCriteria() != null)\r\n        sb.append(\"FindingCriteria: \").append(getFindingCriteria()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRank() != null)\r\n        sb.append(\"Rank: \").append(getRank());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteFilterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonidentitymanagement using the current builder configuration.",
	"Method": "AmazonIdentityManagement build(AwsSyncClientParams params){\r\n    return new AmazonIdentityManagementClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Preset.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getContainer() != null)\r\n        sb.append(\"Container: \").append(getContainer()).append(\",\");\r\n    if (getAudio() != null)\r\n        sb.append(\"Audio: \").append(getAudio()).append(\",\");\r\n    if (getVideo() != null)\r\n        sb.append(\"Video: \").append(getVideo()).append(\",\");\r\n    if (getThumbnails() != null)\r\n        sb.append(\"Thumbnails: \").append(getThumbnails()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ModifyInstanceGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchCreatePartitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.stopAssessmentRun",
	"Comment": "stops the assessment run that is specified by the arn of the assessment run.",
	"Method": "StopAssessmentRunResult stopAssessmentRun(StopAssessmentRunRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStopAssessmentRun(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Connection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getConnectionType() != null)\r\n        sb.append(\"ConnectionType: \").append(getConnectionType()).append(\",\");\r\n    if (getMatchCriteria() != null)\r\n        sb.append(\"MatchCriteria: \").append(getMatchCriteria()).append(\",\");\r\n    if (getConnectionProperties() != null)\r\n        sb.append(\"ConnectionProperties: \").append(getConnectionProperties()).append(\",\");\r\n    if (getPhysicalConnectionRequirements() != null)\r\n        sb.append(\"PhysicalConnectionRequirements: \").append(getPhysicalConnectionRequirements()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime()).append(\",\");\r\n    if (getLastUpdatedBy() != null)\r\n        sb.append(\"LastUpdatedBy: \").append(getLastUpdatedBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.EventAggregate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAggregateValue() != null)\r\n        sb.append(\"AggregateValue: \").append(getAggregateValue()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListUserTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.RemoveClientIDFromOpenIDConnectProviderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOpenIDConnectProviderArn() != null)\r\n        sb.append(\"OpenIDConnectProviderArn: \").append(getOpenIDConnectProviderArn()).append(\",\");\r\n    if (getClientID() != null)\r\n        sb.append(\"ClientID: \").append(getClientID());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteVirtualMFADeviceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.HadoopStepConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJar() != null)\r\n        sb.append(\"Jar: \").append(getJar()).append(\",\");\r\n    if (getProperties() != null)\r\n        sb.append(\"Properties: \").append(getProperties()).append(\",\");\r\n    if (getMainClass() != null)\r\n        sb.append(\"MainClass: \").append(getMainClass()).append(\",\");\r\n    if (getArgs() != null)\r\n        sb.append(\"Args: \").append(getArgs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDevEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.UploadArchiveRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getArchiveDescription() != null)\r\n        sb.append(\"ArchiveDescription: \").append(getArchiveDescription()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getContentLength() != null)\r\n        sb.append(\"ContentLength: \").append(getContentLength());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.JobInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getFrameRate() != null)\r\n        sb.append(\"FrameRate: \").append(getFrameRate()).append(\",\");\r\n    if (getResolution() != null)\r\n        sb.append(\"Resolution: \").append(getResolution()).append(\",\");\r\n    if (getAspectRatio() != null)\r\n        sb.append(\"AspectRatio: \").append(getAspectRatio()).append(\",\");\r\n    if (getInterlaced() != null)\r\n        sb.append(\"Interlaced: \").append(getInterlaced()).append(\",\");\r\n    if (getContainer() != null)\r\n        sb.append(\"Container: \").append(getContainer()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getTimeSpan() != null)\r\n        sb.append(\"TimeSpan: \").append(getTimeSpan()).append(\",\");\r\n    if (getInputCaptions() != null)\r\n        sb.append(\"InputCaptions: \").append(getInputCaptions()).append(\",\");\r\n    if (getDetectedProperties() != null)\r\n        sb.append(\"DetectedProperties: \").append(getDetectedProperties());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.createPipeline",
	"Comment": "the createpipeline operation creates a pipeline with settings that you specify.",
	"Method": "CreatePipelineResult createPipeline(CreatePipelineRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreatePipeline(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GetGameSessionLogUrlRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListMultipartUploadsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUploadsList() != null)\r\n        sb.append(\"UploadsList: \").append(getUploadsList()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.InviteMembersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedAccounts() != null)\r\n        sb.append(\"UnprocessedAccounts: \").append(getUnprocessedAccounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CreatePresetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getContainer() != null)\r\n        sb.append(\"Container: \").append(getContainer()).append(\",\");\r\n    if (getVideo() != null)\r\n        sb.append(\"Video: \").append(getVideo()).append(\",\");\r\n    if (getAudio() != null)\r\n        sb.append(\"Audio: \").append(getAudio()).append(\",\");\r\n    if (getThumbnails() != null)\r\n        sb.append(\"Thumbnails: \").append(getThumbnails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListCoreDefinitionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefinitions() != null)\r\n        sb.append(\"Definitions: \").append(getDefinitions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listRolePolicies",
	"Comment": "lists the names of the inline policies that are embedded in the specified iam role.an iam role can also have managed policies attached to it. to list the managed policies that are attached to arole, use listattachedrolepolicies. for more information about policies, see managed policies andinline policies in the iam user guide.you can paginate the results using the maxitems and marker parameters. if there are noinline policies embedded with the specified role, the operation returns an empty list.",
	"Method": "ListRolePoliciesResult listRolePolicies(ListRolePoliciesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListRolePolicies(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreatePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsglobalacceleratorasync using the current builder configuration.",
	"Method": "AWSGlobalAcceleratorAsync build(AwsAsyncClientParams params){\r\n    return new AWSGlobalAcceleratorAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.Grantee.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(getDisplayName()).append(\",\");\r\n    if (getURI() != null)\r\n        sb.append(\"URI: \").append(getURI()).append(\",\");\r\n    if (getID() != null)\r\n        sb.append(\"ID: \").append(getID()).append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(getEmailAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListLoggerDefinitionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefinitions() != null)\r\n        sb.append(\"Definitions: \").append(getDefinitions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateGameSessionQueueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionQueue() != null)\r\n        sb.append(\"GameSessionQueue: \").append(getGameSessionQueue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.internal.TreeHashInputStream.digestPart",
	"Comment": "digests the current part of the message, if necessary, and resets digeststate.",
	"Method": "void digestPart(){\r\n    if (byteOffset >= MB) {\r\n        byteOffset = 0;\r\n        checksums.add(digestInputStream.getMessageDigest().digest());\r\n        digestInputStream.getMessageDigest().reset();\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ServiceLastAccessed.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getLastAuthenticated() != null)\r\n        sb.append(\"LastAuthenticated: \").append(getLastAuthenticated()).append(\",\");\r\n    if (getServiceNamespace() != null)\r\n        sb.append(\"ServiceNamespace: \").append(getServiceNamespace()).append(\",\");\r\n    if (getLastAuthenticatedEntity() != null)\r\n        sb.append(\"LastAuthenticatedEntity: \").append(getLastAuthenticatedEntity()).append(\",\");\r\n    if (getTotalAuthenticatedEntities() != null)\r\n        sb.append(\"TotalAuthenticatedEntities: \").append(getTotalAuthenticatedEntities());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetDeviceDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceDefinitionId() != null)\r\n        sb.append(\"DeviceDefinitionId: \").append(getDeviceDefinitionId()).append(\",\");\r\n    if (getDeviceDefinitionVersionId() != null)\r\n        sb.append(\"DeviceDefinitionVersionId: \").append(getDeviceDefinitionVersionId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetConnectorDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.RemoveTargetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedEntryCount() != null)\r\n        sb.append(\"FailedEntryCount: \").append(getFailedEntryCount()).append(\",\");\r\n    if (getFailedEntries() != null)\r\n        sb.append(\"FailedEntries: \").append(getFailedEntries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UpdateDetectorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.RemoveTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.listInvitations",
	"Comment": "lists all guardduty membership invitations that were sent to the current aws account.",
	"Method": "ListInvitationsResult listInvitations(ListInvitationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListInvitations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDataflowGraphRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPythonScript() != null)\r\n        sb.append(\"PythonScript: \").append(getPythonScript());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateUserDefinedFunctionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getFunctionInput() != null)\r\n        sb.append(\"FunctionInput: \").append(getFunctionInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UploadServerCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getServerCertificateName() != null)\r\n        sb.append(\"ServerCertificateName: \").append(getServerCertificateName()).append(\",\");\r\n    if (getCertificateBody() != null)\r\n        sb.append(\"CertificateBody: \").append(getCertificateBody()).append(\",\");\r\n    if (getPrivateKey() != null)\r\n        sb.append(\"PrivateKey: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getCertificateChain() != null)\r\n        sb.append(\"CertificateChain: \").append(getCertificateChain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.CreateListenerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListener() != null)\r\n        sb.append(\"Listener: \").append(getListener());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetUserDefinedFunctionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getPattern() != null)\r\n        sb.append(\"Pattern: \").append(getPattern()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Captions.withCaptionSources",
	"Comment": "source files for the input sidecar captions used during the transcoding process. to omit all sidecar captions,leave captionsources blank.",
	"Method": "Captions withCaptionSources(CaptionSource captionSources,Captions withCaptionSources,java.util.Collection<CaptionSource> captionSources){\r\n    setCaptionSources(captionSources);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceGroupTimeline.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime()).append(\",\");\r\n    if (getReadyDateTime() != null)\r\n        sb.append(\"ReadyDateTime: \").append(getReadyDateTime()).append(\",\");\r\n    if (getEndDateTime() != null)\r\n        sb.append(\"EndDateTime: \").append(getEndDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.CreateExclusionsPreviewResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPreviewToken() != null)\r\n        sb.append(\"PreviewToken: \").append(getPreviewToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetCatalogImportStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportStatus() != null)\r\n        sb.append(\"ImportStatus: \").append(getImportStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListResourceDefinitionVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getResourceDefinitionId() != null)\r\n        sb.append(\"ResourceDefinitionId: \").append(getResourceDefinitionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GenerateServiceLastAccessedDetailsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.InputCaptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMergePolicy() != null)\r\n        sb.append(\"MergePolicy: \").append(getMergePolicy()).append(\",\");\r\n    if (getCaptionSources() != null)\r\n        sb.append(\"CaptionSources: \").append(getCaptionSources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteInvitationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedAccounts() != null)\r\n        sb.append(\"UnprocessedAccounts: \").append(getUnprocessedAccounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.ConnectionInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getConnectionType() != null)\r\n        sb.append(\"ConnectionType: \").append(getConnectionType()).append(\",\");\r\n    if (getMatchCriteria() != null)\r\n        sb.append(\"MatchCriteria: \").append(getMatchCriteria()).append(\",\");\r\n    if (getConnectionProperties() != null)\r\n        sb.append(\"ConnectionProperties: \").append(getConnectionProperties()).append(\",\");\r\n    if (getPhysicalConnectionRequirements() != null)\r\n        sb.append(\"PhysicalConnectionRequirements: \").append(getPhysicalConnectionRequirements());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateConnectivityInfoResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateMatchmakingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getGameSessionQueueArns() != null)\r\n        sb.append(\"GameSessionQueueArns: \").append(getGameSessionQueueArns()).append(\",\");\r\n    if (getRequestTimeoutSeconds() != null)\r\n        sb.append(\"RequestTimeoutSeconds: \").append(getRequestTimeoutSeconds()).append(\",\");\r\n    if (getAcceptanceTimeoutSeconds() != null)\r\n        sb.append(\"AcceptanceTimeoutSeconds: \").append(getAcceptanceTimeoutSeconds()).append(\",\");\r\n    if (getAcceptanceRequired() != null)\r\n        sb.append(\"AcceptanceRequired: \").append(getAcceptanceRequired()).append(\",\");\r\n    if (getRuleSetName() != null)\r\n        sb.append(\"RuleSetName: \").append(getRuleSetName()).append(\",\");\r\n    if (getNotificationTarget() != null)\r\n        sb.append(\"NotificationTarget: \").append(getNotificationTarget()).append(\",\");\r\n    if (getAdditionalPlayerCount() != null)\r\n        sb.append(\"AdditionalPlayerCount: \").append(getAdditionalPlayerCount()).append(\",\");\r\n    if (getCustomEventData() != null)\r\n        sb.append(\"CustomEventData: \").append(getCustomEventData()).append(\",\");\r\n    if (getGameProperties() != null)\r\n        sb.append(\"GameProperties: \").append(getGameProperties()).append(\",\");\r\n    if (getGameSessionData() != null)\r\n        sb.append(\"GameSessionData: \").append(getGameSessionData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.AwsApiCallAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApi() != null)\r\n        sb.append(\"Api: \").append(getApi()).append(\",\");\r\n    if (getCallerType() != null)\r\n        sb.append(\"CallerType: \").append(getCallerType()).append(\",\");\r\n    if (getDomainDetails() != null)\r\n        sb.append(\"DomainDetails: \").append(getDomainDetails()).append(\",\");\r\n    if (getRemoteIpDetails() != null)\r\n        sb.append(\"RemoteIpDetails: \").append(getRemoteIpDetails()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.SecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.GetExclusionsPreviewResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPreviewStatus() != null)\r\n        sb.append(\"PreviewStatus: \").append(getPreviewStatus()).append(\",\");\r\n    if (getExclusionPreviews() != null)\r\n        sb.append(\"ExclusionPreviews: \").append(getExclusionPreviews()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.NetworkInterface.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpv6Addresses() != null)\r\n        sb.append(\"Ipv6Addresses: \").append(getIpv6Addresses()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getPrivateDnsName() != null)\r\n        sb.append(\"PrivateDnsName: \").append(getPrivateDnsName()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getPrivateIpAddresses() != null)\r\n        sb.append(\"PrivateIpAddresses: \").append(getPrivateIpAddresses()).append(\",\");\r\n    if (getPublicDnsName() != null)\r\n        sb.append(\"PublicDnsName: \").append(getPublicDnsName()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.SimulatePrincipalPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicySourceArn() != null)\r\n        sb.append(\"PolicySourceArn: \").append(getPolicySourceArn()).append(\",\");\r\n    if (getPolicyInputList() != null)\r\n        sb.append(\"PolicyInputList: \").append(getPolicyInputList()).append(\",\");\r\n    if (getActionNames() != null)\r\n        sb.append(\"ActionNames: \").append(getActionNames()).append(\",\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns()).append(\",\");\r\n    if (getResourcePolicy() != null)\r\n        sb.append(\"ResourcePolicy: \").append(getResourcePolicy()).append(\",\");\r\n    if (getResourceOwner() != null)\r\n        sb.append(\"ResourceOwner: \").append(getResourceOwner()).append(\",\");\r\n    if (getCallerArn() != null)\r\n        sb.append(\"CallerArn: \").append(getCallerArn()).append(\",\");\r\n    if (getContextEntries() != null)\r\n        sb.append(\"ContextEntries: \").append(getContextEntries()).append(\",\");\r\n    if (getResourceHandlingOption() != null)\r\n        sb.append(\"ResourceHandlingOption: \").append(getResourceHandlingOption()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.CreateFileSystemLustreConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWeeklyMaintenanceStartTime() != null)\r\n        sb.append(\"WeeklyMaintenanceStartTime: \").append(getWeeklyMaintenanceStartTime()).append(\",\");\r\n    if (getImportPath() != null)\r\n        sb.append(\"ImportPath: \").append(getImportPath()).append(\",\");\r\n    if (getImportedFileChunkSize() != null)\r\n        sb.append(\"ImportedFileChunkSize: \").append(getImportedFileChunkSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateServerCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerCertificateName() != null)\r\n        sb.append(\"ServerCertificateName: \").append(getServerCertificateName()).append(\",\");\r\n    if (getNewPath() != null)\r\n        sb.append(\"NewPath: \").append(getNewPath()).append(\",\");\r\n    if (getNewServerCertificateName() != null)\r\n        sb.append(\"NewServerCertificateName: \").append(getNewServerCertificateName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.createLoginProfile",
	"Comment": "creates a password for the specified user, giving the user the ability to access aws services through the awsmanagement console. for more information about managing passwords, see managing passwords in theiam user guide.",
	"Method": "CreateLoginProfileResult createLoginProfile(CreateLoginProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateLoginProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.deleteUserDefinedFunction",
	"Comment": "deletes an existing function definition from the data catalog.",
	"Method": "DeleteUserDefinedFunctionResult deleteUserDefinedFunction(DeleteUserDefinedFunctionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteUserDefinedFunction(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StopTriggerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListLoggerDefinitionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteUserDefinedFunctionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DescribeFindingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFindingArns() != null)\r\n        sb.append(\"FindingArns: \").append(getFindingArns()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteAccountAlias",
	"Comment": "deletes the specified aws account alias. for information about using an aws account alias, see using an alias for your aws accountid in the iam user guide.",
	"Method": "DeleteAccountAliasResult deleteAccountAlias(DeleteAccountAliasRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAccountAlias(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetSecurityConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityConfigurations() != null)\r\n        sb.append(\"SecurityConfigurations: \").append(getSecurityConfigurations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.updateRole",
	"Comment": "updates the description or maximum session duration setting of a role.",
	"Method": "UpdateRoleResult updateRole(UpdateRoleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateRole(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListMFADevicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMFADevices() != null)\r\n        sb.append(\"MFADevices: \").append(getMFADevices()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ResetServiceSpecificCredentialResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceSpecificCredential() != null)\r\n        sb.append(\"ServiceSpecificCredential: \").append(getServiceSpecificCredential());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetAccountSummaryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteSubscriptionDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateServerCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateFleetCapacityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetContextKeysForCustomPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyInputList() != null)\r\n        sb.append(\"PolicyInputList: \").append(getPolicyInputList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.ListAcceleratorsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccelerators() != null)\r\n        sb.append(\"Accelerators: \").append(getAccelerators()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateGroupCertificateConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateExpiryInMilliseconds() != null)\r\n        sb.append(\"CertificateExpiryInMilliseconds: \").append(getCertificateExpiryInMilliseconds()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.EntityInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeElasticsearchDomainConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GroupInformation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.PipelineOutputConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getStorageClass() != null)\r\n        sb.append(\"StorageClass: \").append(getStorageClass()).append(\",\");\r\n    if (getPermissions() != null)\r\n        sb.append(\"Permissions: \").append(getPermissions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeBuildRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuildId() != null)\r\n        sb.append(\"BuildId: \").append(getBuildId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GameSessionConnectionInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionArn() != null)\r\n        sb.append(\"GameSessionArn: \").append(getGameSessionArn()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMatchedPlayerSessions() != null)\r\n        sb.append(\"MatchedPlayerSessions: \").append(getMatchedPlayerSessions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetGroupCertificateConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateAuthorityExpiryInMilliseconds() != null)\r\n        sb.append(\"CertificateAuthorityExpiryInMilliseconds: \").append(getCertificateAuthorityExpiryInMilliseconds()).append(\",\");\r\n    if (getCertificateExpiryInMilliseconds() != null)\r\n        sb.append(\"CertificateExpiryInMilliseconds: \").append(getCertificateExpiryInMilliseconds()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.JobBookmarksEncryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobBookmarksEncryptionMode() != null)\r\n        sb.append(\"JobBookmarksEncryptionMode: \").append(getJobBookmarksEncryptionMode()).append(\",\");\r\n    if (getKmsKeyArn() != null)\r\n        sb.append(\"KmsKeyArn: \").append(getKmsKeyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceFleetProvisioningSpecifications.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpotSpecification() != null)\r\n        sb.append(\"SpotSpecification: \").append(getSpotSpecification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntries() != null)\r\n        sb.append(\"Entries: \").append(getEntries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeGameSessionDetailsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionDetails() != null)\r\n        sb.append(\"GameSessionDetails: \").append(getGameSessionDetails()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetSecurityConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.AdvancedOptionsStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetPartitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getPartitionValues() != null)\r\n        sb.append(\"PartitionValues: \").append(getPartitionValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.DescribeEventBusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsglueasync using the current builder configuration.",
	"Method": "AWSGlueAsync build(AwsAsyncClientParams params){\r\n    return new AWSGlueAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListEventSubscriptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptions() != null)\r\n        sb.append(\"Subscriptions: \").append(getSubscriptions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DeleteElasticsearchServiceRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetGroupPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.StopMonitoringMembersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountIds() != null)\r\n        sb.append(\"AccountIds: \").append(getAccountIds()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteDatabaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetCoreDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCoreDefinitionId() != null)\r\n        sb.append(\"CoreDefinitionId: \").append(getCoreDefinitionId()).append(\",\");\r\n    if (getCoreDefinitionVersionId() != null)\r\n        sb.append(\"CoreDefinitionVersionId: \").append(getCoreDefinitionVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.transfer.ArchiveTransferManagerBuilder.setSnsClient",
	"Comment": "set the client for working with amazon sns when polling for the archive retrieval job status.",
	"Method": "void setSnsClient(AmazonSNS snsClient){\r\n    this.snsClient = snsClient;\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.Accelerator.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceleratorArn() != null)\r\n        sb.append(\"AcceleratorArn: \").append(getAcceleratorArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getIpAddressType() != null)\r\n        sb.append(\"IpAddressType: \").append(getIpAddressType()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getIpSets() != null)\r\n        sb.append(\"IpSets: \").append(getIpSets()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreatedTime() != null)\r\n        sb.append(\"CreatedTime: \").append(getCreatedTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.getTableVersions",
	"Comment": "retrieves a list of strings that identify available versions of a specified table.",
	"Method": "GetTableVersionsResult getTableVersions(GetTableVersionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTableVersions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ConnectivityInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostAddress() != null)\r\n        sb.append(\"HostAddress: \").append(getHostAddress()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getMetadata() != null)\r\n        sb.append(\"Metadata: \").append(getMetadata()).append(\",\");\r\n    if (getPortNumber() != null)\r\n        sb.append(\"PortNumber: \").append(getPortNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.Role.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getRoleId() != null)\r\n        sb.append(\"RoleId: \").append(getRoleId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getAssumeRolePolicyDocument() != null)\r\n        sb.append(\"AssumeRolePolicyDocument: \").append(getAssumeRolePolicyDocument()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getMaxSessionDuration() != null)\r\n        sb.append(\"MaxSessionDuration: \").append(getMaxSessionDuration()).append(\",\");\r\n    if (getPermissionsBoundary() != null)\r\n        sb.append(\"PermissionsBoundary: \").append(getPermissionsBoundary()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.ListListenersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListeners() != null)\r\n        sb.append(\"Listeners: \").append(getListeners()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.UpdateAcceleratorAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceleratorAttributes() != null)\r\n        sb.append(\"AcceleratorAttributes: \").append(getAcceleratorAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UserDefinedFunction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getClassName() != null)\r\n        sb.append(\"ClassName: \").append(getClassName()).append(\",\");\r\n    if (getOwnerName() != null)\r\n        sb.append(\"OwnerName: \").append(getOwnerName()).append(\",\");\r\n    if (getOwnerType() != null)\r\n        sb.append(\"OwnerType: \").append(getOwnerType()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getResourceUris() != null)\r\n        sb.append(\"ResourceUris: \").append(getResourceUris());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listUserPolicies",
	"Comment": "lists the names of the inline policies embedded in the specified iam user.an iam user can also have managed policies attached to it. to list the managed policies that are attached to auser, use listattacheduserpolicies. for more information about policies, see managed policies andinline policies in the iam user guide.you can paginate the results using the maxitems and marker parameters. if there are noinline policies embedded with the specified user, the operation returns an empty list.",
	"Method": "ListUserPoliciesResult listUserPolicies(ListUserPoliciesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListUserPolicies(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.PurchaseReservedElasticsearchInstanceOfferingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedElasticsearchInstanceId() != null)\r\n        sb.append(\"ReservedElasticsearchInstanceId: \").append(getReservedElasticsearchInstanceId()).append(\",\");\r\n    if (getReservationName() != null)\r\n        sb.append(\"ReservationName: \").append(getReservationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AccessKeyLastUsed.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLastUsedDate() != null)\r\n        sb.append(\"LastUsedDate: \").append(getLastUsedDate()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetRolePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.AutoScalingPolicyStateChangeReason.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateSubscriptionDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.waiters.AmazonElasticTranscoderWaiters.jobComplete",
	"Comment": "builds a jobcomplete waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<ReadJobRequest> jobComplete(){\r\n    return new WaiterBuilder<ReadJobRequest, ReadJobResult>().withSdkFunction(new ReadJobFunction(client)).withAcceptors(new JobComplete.IsCompleteMatcher(), new JobComplete.IsCanceledMatcher(), new JobComplete.IsErrorMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(120), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListRolesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPathPrefix() != null)\r\n        sb.append(\"PathPrefix: \").append(getPathPrefix()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.DeleteSecurityConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.GetCompatibleElasticsearchVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompatibleElasticsearchVersions() != null)\r\n        sb.append(\"CompatibleElasticsearchVersions: \").append(getCompatibleElasticsearchVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.VolumeSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getSizeInGB() != null)\r\n        sb.append(\"SizeInGB: \").append(getSizeInGB());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetServiceLastAccessedDetailsWithEntitiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getJobCreationDate() != null)\r\n        sb.append(\"JobCreationDate: \").append(getJobCreationDate()).append(\",\");\r\n    if (getJobCompletionDate() != null)\r\n        sb.append(\"JobCompletionDate: \").append(getJobCompletionDate()).append(\",\");\r\n    if (getEntityDetailsList() != null)\r\n        sb.append(\"EntityDetailsList: \").append(getEntityDetailsList()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(getError());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.RunJobFlowResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobFlowId() != null)\r\n        sb.append(\"JobFlowId: \").append(getJobFlowId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.SetVaultAccessPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListCoreDefinitionVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCoreDefinitionId() != null)\r\n        sb.append(\"CoreDefinitionId: \").append(getCoreDefinitionId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetResourceDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(getDefinition()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteThreatIntelSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.GetNotificationChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getSnsRoleName() != null)\r\n        sb.append(\"SnsRoleName: \").append(getSnsRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateResourceDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListUserTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ChangePasswordResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.AWSElasticsearchClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.InitiateMultipartUploadResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getUploadId() != null)\r\n        sb.append(\"UploadId: \").append(getUploadId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.RemovePermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatementId() != null)\r\n        sb.append(\"StatementId: \").append(getStatementId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateCrawlerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateSigningCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UploadServerCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerCertificateMetadata() != null)\r\n        sb.append(\"ServerCertificateMetadata: \").append(getServerCertificateMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.TargetDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListConnectorDefinitionVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchDeletePartitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getPartitionsToDelete() != null)\r\n        sb.append(\"PartitionsToDelete: \").append(getPartitionsToDelete());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteDeviceDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.BulkDeploymentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getDeploymentArn() != null)\r\n        sb.append(\"DeploymentArn: \").append(getDeploymentArn()).append(\",\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getDeploymentStatus() != null)\r\n        sb.append(\"DeploymentStatus: \").append(getDeploymentStatus()).append(\",\");\r\n    if (getDeploymentType() != null)\r\n        sb.append(\"DeploymentType: \").append(getDeploymentType()).append(\",\");\r\n    if (getErrorDetails() != null)\r\n        sb.append(\"ErrorDetails: \").append(getErrorDetails()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage()).append(\",\");\r\n    if (getGroupArn() != null)\r\n        sb.append(\"GroupArn: \").append(getGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceFleetStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateChangeReason() != null)\r\n        sb.append(\"StateChangeReason: \").append(getStateChangeReason()).append(\",\");\r\n    if (getTimeline() != null)\r\n        sb.append(\"Timeline: \").append(getTimeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListBulkDeploymentDetailedReportsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeployments() != null)\r\n        sb.append(\"Deployments: \").append(getDeployments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.VaultNotificationConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSNSTopic() != null)\r\n        sb.append(\"SNSTopic: \").append(getSNSTopic()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.SecurityConfigurationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetClassifiersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.PutTargetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRule() != null)\r\n        sb.append(\"Rule: \").append(getRule()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.initiateJob",
	"Comment": "this operation initiates a job of the specified type, which can be a select, an archival retrieval, or a vaultretrieval. for more information about using this operation, see the documentation for the underlying rest api initiate a job.",
	"Method": "InitiateJobResult initiateJob(InitiateJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeInitiateJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.describeCrossAccountAccessRole",
	"Comment": "describes the iam role that enables amazon inspector to access your aws account.",
	"Method": "DescribeCrossAccountAccessRoleResult describeCrossAccountAccessRole(DescribeCrossAccountAccessRoleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeCrossAccountAccessRole(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateThreatIntelSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThreatIntelSetId() != null)\r\n        sb.append(\"ThreatIntelSetId: \").append(getThreatIntelSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listAccessKeys",
	"Comment": "returns information about the access key ids associated with the specified iam user. if there is none, theoperation returns an empty list.although each user is limited to a small number of keys, you can still paginate the results using themaxitems and marker parameters.if the username field is not specified, the user name is determined implicitly based on the awsaccess key id used to sign the request. this operation works for access keys under the aws account. consequently,you can use this operation to manage aws account root user credentials even if the aws account has no associatedusers.to ensure the security of your aws account, the secret access key is accessible only during key and usercreation.",
	"Method": "ListAccessKeysResult listAccessKeys(ListAccessKeysRequest request,ListAccessKeysResult listAccessKeys){\r\n    return listAccessKeys(new ListAccessKeysRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UserDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getUserPolicyList() != null)\r\n        sb.append(\"UserPolicyList: \").append(getUserPolicyList()).append(\",\");\r\n    if (getGroupList() != null)\r\n        sb.append(\"GroupList: \").append(getGroupList()).append(\",\");\r\n    if (getAttachedManagedPolicies() != null)\r\n        sb.append(\"AttachedManagedPolicies: \").append(getAttachedManagedPolicies()).append(\",\");\r\n    if (getPermissionsBoundary() != null)\r\n        sb.append(\"PermissionsBoundary: \").append(getPermissionsBoundary()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.getGroup",
	"Comment": "returns a list of iam users that are in the specified iam group. you can paginate the results using themaxitems and marker parameters.",
	"Method": "GetGroupResult getGroup(GetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.KerberosAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRealm() != null)\r\n        sb.append(\"Realm: \").append(getRealm()).append(\",\");\r\n    if (getKdcAdminPassword() != null)\r\n        sb.append(\"KdcAdminPassword: \").append(getKdcAdminPassword()).append(\",\");\r\n    if (getCrossRealmTrustPrincipalPassword() != null)\r\n        sb.append(\"CrossRealmTrustPrincipalPassword: \").append(getCrossRealmTrustPrincipalPassword()).append(\",\");\r\n    if (getADDomainJoinUser() != null)\r\n        sb.append(\"ADDomainJoinUser: \").append(getADDomainJoinUser()).append(\",\");\r\n    if (getADDomainJoinPassword() != null)\r\n        sb.append(\"ADDomainJoinPassword: \").append(getADDomainJoinPassword());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ReadJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.getFunctionDefinition",
	"Comment": "retrieves information about a lambda function definition, including its creation time and latest version.",
	"Method": "GetFunctionDefinitionResult getFunctionDefinition(GetFunctionDefinitionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetFunctionDefinition(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.ResourceUri.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getUri() != null)\r\n        sb.append(\"Uri: \").append(getUri());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.BulkDeploymentMetrics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInvalidInputRecords() != null)\r\n        sb.append(\"InvalidInputRecords: \").append(getInvalidInputRecords()).append(\",\");\r\n    if (getRecordsProcessed() != null)\r\n        sb.append(\"RecordsProcessed: \").append(getRecordsProcessed()).append(\",\");\r\n    if (getRetryAttempts() != null)\r\n        sb.append(\"RetryAttempts: \").append(getRetryAttempts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateDatabaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetClassifierResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClassifier() != null)\r\n        sb.append(\"Classifier: \").append(getClassifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.ListMembersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMembers() != null)\r\n        sb.append(\"Members: \").append(getMembers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeElasticsearchDomainsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainNames() != null)\r\n        sb.append(\"DomainNames: \").append(getDomainNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ListElasticsearchVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.SetTerminationProtectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.UpdateFileSystemResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystem() != null)\r\n        sb.append(\"FileSystem: \").append(getFileSystem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.CreateEndpointGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn()).append(\",\");\r\n    if (getEndpointGroupRegion() != null)\r\n        sb.append(\"EndpointGroupRegion: \").append(getEndpointGroupRegion()).append(\",\");\r\n    if (getEndpointConfigurations() != null)\r\n        sb.append(\"EndpointConfigurations: \").append(getEndpointConfigurations()).append(\",\");\r\n    if (getTrafficDialPercentage() != null)\r\n        sb.append(\"TrafficDialPercentage: \").append(getTrafficDialPercentage()).append(\",\");\r\n    if (getHealthCheckPort() != null)\r\n        sb.append(\"HealthCheckPort: \").append(getHealthCheckPort()).append(\",\");\r\n    if (getHealthCheckProtocol() != null)\r\n        sb.append(\"HealthCheckProtocol: \").append(getHealthCheckProtocol()).append(\",\");\r\n    if (getHealthCheckPath() != null)\r\n        sb.append(\"HealthCheckPath: \").append(getHealthCheckPath()).append(\",\");\r\n    if (getHealthCheckIntervalSeconds() != null)\r\n        sb.append(\"HealthCheckIntervalSeconds: \").append(getHealthCheckIntervalSeconds()).append(\",\");\r\n    if (getThresholdCount() != null)\r\n        sb.append(\"ThresholdCount: \").append(getThresholdCount()).append(\",\");\r\n    if (getIdempotencyToken() != null)\r\n        sb.append(\"IdempotencyToken: \").append(getIdempotencyToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeletePartitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.EnableRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GameSessionDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSession() != null)\r\n        sb.append(\"GameSession: \").append(getGameSession()).append(\",\");\r\n    if (getProtectionPolicy() != null)\r\n        sb.append(\"ProtectionPolicy: \").append(getProtectionPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateRoleDescriptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getNewPath() != null)\r\n        sb.append(\"NewPath: \").append(getNewPath()).append(\",\");\r\n    if (getNewGroupName() != null)\r\n        sb.append(\"NewGroupName: \").append(getNewGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteSecurityConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.UpgradeHistory.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUpgradeName() != null)\r\n        sb.append(\"UpgradeName: \").append(getUpgradeName()).append(\",\");\r\n    if (getStartTimestamp() != null)\r\n        sb.append(\"StartTimestamp: \").append(getStartTimestamp()).append(\",\");\r\n    if (getUpgradeStatus() != null)\r\n        sb.append(\"UpgradeStatus: \").append(getUpgradeStatus()).append(\",\");\r\n    if (getStepsList() != null)\r\n        sb.append(\"StepsList: \").append(getStepsList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateSecurityConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getEncryptionConfiguration() != null)\r\n        sb.append(\"EncryptionConfiguration: \").append(getEncryptionConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listRoles",
	"Comment": "lists the iam roles that have the specified path prefix. if there are none, the operation returns an empty list.for more information about roles, go to working with roles.you can paginate the results using the maxitems and marker parameters.",
	"Method": "ListRolesResult listRoles(ListRolesRequest request,ListRolesResult listRoles){\r\n    return listRoles(new ListRolesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.DescribeBackupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupIds() != null)\r\n        sb.append(\"BackupIds: \").append(getBackupIds()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetPartitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPartition() != null)\r\n        sb.append(\"Partition: \").append(getPartition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListFunctionDefinitionVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionDefinitionId() != null)\r\n        sb.append(\"FunctionDefinitionId: \").append(getFunctionDefinitionId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.AmazonGlacierClient.purchaseProvisionedCapacity",
	"Comment": "this operation purchases a provisioned capacity unit for an aws account.",
	"Method": "PurchaseProvisionedCapacityResult purchaseProvisionedCapacity(PurchaseProvisionedCapacityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePurchaseProvisionedCapacity(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListGroupCertificateAuthoritiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateSAMLProviderResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSAMLProviderArn() != null)\r\n        sb.append(\"SAMLProviderArn: \").append(getSAMLProviderArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ReadPresetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPreset() != null)\r\n        sb.append(\"Preset: \").append(getPreset());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.waiters.AmazonElasticMapReduceWaiters.stepComplete",
	"Comment": "builds a stepcomplete waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeStepRequest> stepComplete(){\r\n    return new WaiterBuilder<DescribeStepRequest, DescribeStepResult>().withSdkFunction(new DescribeStepFunction(client)).withAcceptors(new StepComplete.IsCOMPLETEDMatcher(), new StepComplete.IsFAILEDMatcher(), new StepComplete.IsCANCELLEDMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteScalingPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ScalingTrigger.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudWatchAlarmDefinition() != null)\r\n        sb.append(\"CloudWatchAlarmDefinition: \").append(getCloudWatchAlarmDefinition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.getResourceDefinitionVersion",
	"Comment": "retrieves information about a resource definition version, including which resources are included in the version.",
	"Method": "GetResourceDefinitionVersionResult getResourceDefinitionVersion(GetResourceDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetResourceDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.ListVaultsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateServiceSpecificCredentialResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeRuntimeConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.BatchCreatePartitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getPartitionInputList() != null)\r\n        sb.append(\"PartitionInputList: \").append(getPartitionInputList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.attachGroupPolicy",
	"Comment": "attaches the specified managed policy to the specified iam group.you use this api to attach a managed policy to a group. to embed an inline policy in a group, useputgrouppolicy.for more information about policies, see managed policies andinline policies in the iam user guide.",
	"Method": "AttachGroupPolicyResult attachGroupPolicy(AttachGroupPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAttachGroupPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsClient.putEvents",
	"Comment": "sends custom events to amazon cloudwatch events so that they can be matched to rules.",
	"Method": "PutEventsResult putEvents(PutEventsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutEvents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.SetIpAddressTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpAddressType() != null)\r\n        sb.append(\"IpAddressType: \").append(getIpAddressType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StopCrawlerScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCrawlerName() != null)\r\n        sb.append(\"CrawlerName: \").append(getCrawlerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.JobRun.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getAttempt() != null)\r\n        sb.append(\"Attempt: \").append(getAttempt()).append(\",\");\r\n    if (getPreviousRunId() != null)\r\n        sb.append(\"PreviousRunId: \").append(getPreviousRunId()).append(\",\");\r\n    if (getTriggerName() != null)\r\n        sb.append(\"TriggerName: \").append(getTriggerName()).append(\",\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getStartedOn() != null)\r\n        sb.append(\"StartedOn: \").append(getStartedOn()).append(\",\");\r\n    if (getLastModifiedOn() != null)\r\n        sb.append(\"LastModifiedOn: \").append(getLastModifiedOn()).append(\",\");\r\n    if (getCompletedOn() != null)\r\n        sb.append(\"CompletedOn: \").append(getCompletedOn()).append(\",\");\r\n    if (getJobRunState() != null)\r\n        sb.append(\"JobRunState: \").append(getJobRunState()).append(\",\");\r\n    if (getArguments() != null)\r\n        sb.append(\"Arguments: \").append(getArguments()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage()).append(\",\");\r\n    if (getPredecessorRuns() != null)\r\n        sb.append(\"PredecessorRuns: \").append(getPredecessorRuns()).append(\",\");\r\n    if (getAllocatedCapacity() != null)\r\n        sb.append(\"AllocatedCapacity: \").append(getAllocatedCapacity()).append(\",\");\r\n    if (getExecutionTime() != null)\r\n        sb.append(\"ExecutionTime: \").append(getExecutionTime()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getNotificationProperty() != null)\r\n        sb.append(\"NotificationProperty: \").append(getNotificationProperty()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration()).append(\",\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UploadSigningCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.addTags",
	"Comment": "adds tags to an amazon emr resource. tags make it easier to associate clusters in various ways, such as groupingclusters to track your amazon emr resource allocation costs. for more information, see tag clusters.",
	"Method": "AddTagsResult addTags(AddTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateTriggerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTriggerUpdate() != null)\r\n        sb.append(\"TriggerUpdate: \").append(getTriggerUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.ResourceTag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.Limits.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStorageTypes() != null)\r\n        sb.append(\"StorageTypes: \").append(getStorageTypes()).append(\",\");\r\n    if (getInstanceLimits() != null)\r\n        sb.append(\"InstanceLimits: \").append(getInstanceLimits()).append(\",\");\r\n    if (getAdditionalLimits() != null)\r\n        sb.append(\"AdditionalLimits: \").append(getAdditionalLimits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.AmazonCloudWatchEventsClient.enableRule",
	"Comment": "enables the specified rule. if the rule does not exist, the operation fails.when you enable a rule, incoming events might not immediately start matching to a newly enabled rule. allow ashort period of time for changes to take effect.",
	"Method": "EnableRuleResult enableRule(EnableRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeEnableRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.StorageType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStorageTypeName() != null)\r\n        sb.append(\"StorageTypeName: \").append(getStorageTypeName()).append(\",\");\r\n    if (getStorageSubTypeName() != null)\r\n        sb.append(\"StorageSubTypeName: \").append(getStorageSubTypeName()).append(\",\");\r\n    if (getStorageTypeLimits() != null)\r\n        sb.append(\"StorageTypeLimits: \").append(getStorageTypeLimits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.AmazonFSxClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.Resource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessKeyDetails() != null)\r\n        sb.append(\"AccessKeyDetails: \").append(getAccessKeyDetails()).append(\",\");\r\n    if (getInstanceDetails() != null)\r\n        sb.append(\"InstanceDetails: \").append(getInstanceDetails()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DeleteListenerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.deleteJob",
	"Comment": "deletes a specified job definition. if the job definition is not found, no exception is thrown.",
	"Method": "DeleteJobResult deleteJob(DeleteJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetDeploymentStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentStatus() != null)\r\n        sb.append(\"DeploymentStatus: \").append(getDeploymentStatus()).append(\",\");\r\n    if (getDeploymentType() != null)\r\n        sb.append(\"DeploymentType: \").append(getDeploymentType()).append(\",\");\r\n    if (getErrorDetails() != null)\r\n        sb.append(\"ErrorDetails: \").append(getErrorDetails()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage()).append(\",\");\r\n    if (getUpdatedAt() != null)\r\n        sb.append(\"UpdatedAt: \").append(getUpdatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.getUserAsync",
	"Comment": "simplified method form for invoking the getuser operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetUserResult> getUserAsync(GetUserRequest request,java.util.concurrent.Future<GetUserResult> getUserAsync,GetUserRequest request,com.amazonaws.handlers.AsyncHandler<GetUserRequest, GetUserResult> asyncHandler,java.util.concurrent.Future<GetUserResult> getUserAsync,java.util.concurrent.Future<GetUserResult> getUserAsync,com.amazonaws.handlers.AsyncHandler<GetUserRequest, GetUserResult> asyncHandler){\r\n    return getUserAsync(new GetUserRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteSigningCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AssessmentRunStateChange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStateChangedAt() != null)\r\n        sb.append(\"StateChangedAt: \").append(getStateChangedAt()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.AWSFMSClient.associateAdminAccount",
	"Comment": "sets the aws firewall manager administrator account. aws firewall manager must be associated with the masteraccount your aws organization or associated with a member account that has the appropriate permissions. if theaccount id that you submit is not an aws organizations master account, aws firewall manager will set theappropriate permissions for the given member account.the account that you associate with aws firewall manager is called the aws firewall manager administratoraccount.",
	"Method": "AssociateAdminAccountResult associateAdminAccount(AssociateAdminAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAssociateAdminAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetSubscriptionDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(getDefinition()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ManagedPolicyDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getDefaultVersionId() != null)\r\n        sb.append(\"DefaultVersionId: \").append(getDefaultVersionId()).append(\",\");\r\n    if (getAttachmentCount() != null)\r\n        sb.append(\"AttachmentCount: \").append(getAttachmentCount()).append(\",\");\r\n    if (getPermissionsBoundaryUsageCount() != null)\r\n        sb.append(\"PermissionsBoundaryUsageCount: \").append(getPermissionsBoundaryUsageCount()).append(\",\");\r\n    if (getIsAttachable() != null)\r\n        sb.append(\"IsAttachable: \").append(getIsAttachable()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate()).append(\",\");\r\n    if (getUpdateDate() != null)\r\n        sb.append(\"UpdateDate: \").append(getUpdateDate()).append(\",\");\r\n    if (getPolicyVersionList() != null)\r\n        sb.append(\"PolicyVersionList: \").append(getPolicyVersionList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.MatchmakingRuleSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleSetName() != null)\r\n        sb.append(\"RuleSetName: \").append(getRuleSetName()).append(\",\");\r\n    if (getRuleSetBody() != null)\r\n        sb.append(\"RuleSetBody: \").append(getRuleSetBody()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetLoggerDefinitionVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(getDefinition()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetCrawlersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeletePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateVirtualMFADeviceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getVirtualMFADeviceName() != null)\r\n        sb.append(\"VirtualMFADeviceName: \").append(getVirtualMFADeviceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.readJob",
	"Comment": "the readjob operation returns detailed information about a job.",
	"Method": "ReadJobResult readJob(ReadJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeReadJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ModifyInstanceGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getInstanceGroups() != null)\r\n        sb.append(\"InstanceGroups: \").append(getInstanceGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.ListRuleNamesByTargetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleNames() != null)\r\n        sb.append(\"RuleNames: \").append(getRuleNames()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdateClassifierResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.RequestUploadCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUploadCredentials() != null)\r\n        sb.append(\"UploadCredentials: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getStorageLocation() != null)\r\n        sb.append(\"StorageLocation: \").append(getStorageLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.MatchedPlayerSession.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlayerId() != null)\r\n        sb.append(\"PlayerId: \").append(getPlayerId()).append(\",\");\r\n    if (getPlayerSessionId() != null)\r\n        sb.append(\"PlayerSessionId: \").append(getPlayerSessionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.GetShippingLabelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobIds() != null)\r\n        sb.append(\"JobIds: \").append(getJobIds()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCompany() != null)\r\n        sb.append(\"Company: \").append(getCompany()).append(\",\");\r\n    if (getPhoneNumber() != null)\r\n        sb.append(\"PhoneNumber: \").append(getPhoneNumber()).append(\",\");\r\n    if (getCountry() != null)\r\n        sb.append(\"Country: \").append(getCountry()).append(\",\");\r\n    if (getStateOrProvince() != null)\r\n        sb.append(\"StateOrProvince: \").append(getStateOrProvince()).append(\",\");\r\n    if (getCity() != null)\r\n        sb.append(\"City: \").append(getCity()).append(\",\");\r\n    if (getPostalCode() != null)\r\n        sb.append(\"PostalCode: \").append(getPostalCode()).append(\",\");\r\n    if (getStreet1() != null)\r\n        sb.append(\"Street1: \").append(getStreet1()).append(\",\");\r\n    if (getStreet2() != null)\r\n        sb.append(\"Street2: \").append(getStreet2()).append(\",\");\r\n    if (getStreet3() != null)\r\n        sb.append(\"Street3: \").append(getStreet3()).append(\",\");\r\n    if (getAPIVersion() != null)\r\n        sb.append(\"APIVersion: \").append(getAPIVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.AssociateRoleToGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociatedAt() != null)\r\n        sb.append(\"AssociatedAt: \").append(getAssociatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeVpcPeeringConnectionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcPeeringConnections() != null)\r\n        sb.append(\"VpcPeeringConnections: \").append(getVpcPeeringConnections());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.getServiceRoleForAccount",
	"Comment": "retrieves the service role that is attached to your account.",
	"Method": "GetServiceRoleForAccountResult getServiceRoleForAccount(GetServiceRoleForAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetServiceRoleForAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListAccessKeysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetConnectionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionList() != null)\r\n        sb.append(\"ConnectionList: \").append(getConnectionList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DeleteVpcPeeringConnectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ElasticsearchDomainConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticsearchVersion() != null)\r\n        sb.append(\"ElasticsearchVersion: \").append(getElasticsearchVersion()).append(\",\");\r\n    if (getElasticsearchClusterConfig() != null)\r\n        sb.append(\"ElasticsearchClusterConfig: \").append(getElasticsearchClusterConfig()).append(\",\");\r\n    if (getEBSOptions() != null)\r\n        sb.append(\"EBSOptions: \").append(getEBSOptions()).append(\",\");\r\n    if (getAccessPolicies() != null)\r\n        sb.append(\"AccessPolicies: \").append(getAccessPolicies()).append(\",\");\r\n    if (getSnapshotOptions() != null)\r\n        sb.append(\"SnapshotOptions: \").append(getSnapshotOptions()).append(\",\");\r\n    if (getVPCOptions() != null)\r\n        sb.append(\"VPCOptions: \").append(getVPCOptions()).append(\",\");\r\n    if (getCognitoOptions() != null)\r\n        sb.append(\"CognitoOptions: \").append(getCognitoOptions()).append(\",\");\r\n    if (getEncryptionAtRestOptions() != null)\r\n        sb.append(\"EncryptionAtRestOptions: \").append(getEncryptionAtRestOptions()).append(\",\");\r\n    if (getNodeToNodeEncryptionOptions() != null)\r\n        sb.append(\"NodeToNodeEncryptionOptions: \").append(getNodeToNodeEncryptionOptions()).append(\",\");\r\n    if (getAdvancedOptions() != null)\r\n        sb.append(\"AdvancedOptions: \").append(getAdvancedOptions()).append(\",\");\r\n    if (getLogPublishingOptions() != null)\r\n        sb.append(\"LogPublishingOptions: \").append(getLogPublishingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.PurchaseProvisionedCapacityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCapacityId() != null)\r\n        sb.append(\"CapacityId: \").append(getCapacityId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fms.model.PolicyComplianceStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyOwner() != null)\r\n        sb.append(\"PolicyOwner: \").append(getPolicyOwner()).append(\",\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getMemberAccount() != null)\r\n        sb.append(\"MemberAccount: \").append(getMemberAccount()).append(\",\");\r\n    if (getEvaluationResults() != null)\r\n        sb.append(\"EvaluationResults: \").append(getEvaluationResults()).append(\",\");\r\n    if (getLastUpdated() != null)\r\n        sb.append(\"LastUpdated: \").append(getLastUpdated()).append(\",\");\r\n    if (getIssueInfoMap() != null)\r\n        sb.append(\"IssueInfoMap: \").append(getIssueInfoMap());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.RemoveUserFromGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.listInstanceFleets",
	"Comment": "lists all available details about the instance fleets in a cluster.the instance fleet configuration is available only in amazon emr versions 4.8.0 and later, excluding 5.0.xversions.",
	"Method": "ListInstanceFleetsResult listInstanceFleets(ListInstanceFleetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListInstanceFleets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getInstanceGroupId() != null)\r\n        sb.append(\"InstanceGroupId: \").append(getInstanceGroupId()).append(\",\");\r\n    if (getInstanceGroupTypes() != null)\r\n        sb.append(\"InstanceGroupTypes: \").append(getInstanceGroupTypes()).append(\",\");\r\n    if (getInstanceFleetId() != null)\r\n        sb.append(\"InstanceFleetId: \").append(getInstanceFleetId()).append(\",\");\r\n    if (getInstanceFleetType() != null)\r\n        sb.append(\"InstanceFleetType: \").append(getInstanceFleetType()).append(\",\");\r\n    if (getInstanceStates() != null)\r\n        sb.append(\"InstanceStates: \").append(getInstanceStates()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListAccessKeysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessKeyMetadata() != null)\r\n        sb.append(\"AccessKeyMetadata: \").append(getAccessKeyMetadata()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ListJobsByStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ListExclusionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunArn() != null)\r\n        sb.append(\"AssessmentRunArn: \").append(getAssessmentRunArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.TableError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getErrorDetail() != null)\r\n        sb.append(\"ErrorDetail: \").append(getErrorDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.Function.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getFunctionConfiguration() != null)\r\n        sb.append(\"FunctionConfiguration: \").append(getFunctionConfiguration()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AbstractAmazonElasticMapReduceAsync.describeJobFlowsAsync",
	"Comment": "simplified method form for invoking the describejobflows operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeJobFlowsResult> describeJobFlowsAsync(DescribeJobFlowsRequest request,java.util.concurrent.Future<DescribeJobFlowsResult> describeJobFlowsAsync,DescribeJobFlowsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeJobFlowsRequest, DescribeJobFlowsResult> asyncHandler,java.util.concurrent.Future<DescribeJobFlowsResult> describeJobFlowsAsync,java.util.concurrent.Future<DescribeJobFlowsResult> describeJobFlowsAsync,com.amazonaws.handlers.AsyncHandler<DescribeJobFlowsRequest, DescribeJobFlowsResult> asyncHandler){\r\n    return describeJobFlowsAsync(new DescribeJobFlowsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.SimulatePrincipalPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationResults() != null)\r\n        sb.append(\"EvaluationResults: \").append(getEvaluationResults()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.S3Encryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3EncryptionMode() != null)\r\n        sb.append(\"S3EncryptionMode: \").append(getS3EncryptionMode()).append(\",\");\r\n    if (getKmsKeyArn() != null)\r\n        sb.append(\"KmsKeyArn: \").append(getKmsKeyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.AmazonInspectorClient.listAssessmentTemplates",
	"Comment": "lists the assessment templates that correspond to the assessment targets that are specified by the arns of theassessment targets.",
	"Method": "ListAssessmentTemplatesResult listAssessmentTemplates(ListAssessmentTemplatesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListAssessmentTemplates(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTableVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.SpotProvisioningSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimeoutDurationMinutes() != null)\r\n        sb.append(\"TimeoutDurationMinutes: \").append(getTimeoutDurationMinutes()).append(\",\");\r\n    if (getTimeoutAction() != null)\r\n        sb.append(\"TimeoutAction: \").append(getTimeoutAction()).append(\",\");\r\n    if (getBlockDurationMinutes() != null)\r\n        sb.append(\"BlockDurationMinutes: \").append(getBlockDurationMinutes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.startCrawler",
	"Comment": "starts a crawl using the specified crawler, regardless of what is scheduled. if the crawler is already running,returns a crawlerrunningexception.",
	"Method": "StartCrawlerResult startCrawler(StartCrawlerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartCrawler(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.UploadArchiveResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getArchiveId() != null)\r\n        sb.append(\"ArchiveId: \").append(getArchiveId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonelasticmapreduceasync using the current builder configuration.",
	"Method": "AmazonElasticMapReduceAsync build(AwsAsyncClientParams params){\r\n    return new AmazonElasticMapReduceAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UploadSigningCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getCertificateBody() != null)\r\n        sb.append(\"CertificateBody: \").append(getCertificateBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.InventoryRetrievalJobDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getStartDate() != null)\r\n        sb.append(\"StartDate: \").append(getStartDate()).append(\",\");\r\n    if (getEndDate() != null)\r\n        sb.append(\"EndDate: \").append(getEndDate()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DetachUserPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.getUserAsync",
	"Comment": "simplified method form for invoking the getuser operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetUserResult> getUserAsync(GetUserRequest request,java.util.concurrent.Future<GetUserResult> getUserAsync,GetUserRequest request,com.amazonaws.handlers.AsyncHandler<GetUserRequest, GetUserResult> asyncHandler,java.util.concurrent.Future<GetUserResult> getUserAsync,java.util.concurrent.Future<GetUserResult> getUserAsync,com.amazonaws.handlers.AsyncHandler<GetUserRequest, GetUserResult> asyncHandler){\r\n    return getUserAsync(new GetUserRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ListElasticsearchVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticsearchVersions() != null)\r\n        sb.append(\"ElasticsearchVersions: \").append(getElasticsearchVersions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.unarchiveFindings",
	"Comment": "unarchives amazon guardduty findings specified by the list of finding ids.",
	"Method": "UnarchiveFindingsResult unarchiveFindings(UnarchiveFindingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUnarchiveFindings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.CaptionFormat.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getPattern() != null)\r\n        sb.append(\"Pattern: \").append(getPattern()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTableResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTable() != null)\r\n        sb.append(\"Table: \").append(getTable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetIPSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeEventAggregatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getAggregateField() != null)\r\n        sb.append(\"AggregateField: \").append(getAggregateField()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AddAttributesToFindingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFindingArns() != null)\r\n        sb.append(\"FindingArns: \").append(getFindingArns()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.AbortVaultLockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listInstanceProfiles",
	"Comment": "lists the instance profiles that have the specified path prefix. if there are none, the operation returns anempty list. for more information about instance profiles, go to about instance profiles.you can paginate the results using the maxitems and marker parameters.",
	"Method": "ListInstanceProfilesResult listInstanceProfiles(ListInstanceProfilesRequest request,ListInstanceProfilesResult listInstanceProfiles){\r\n    return listInstanceProfiles(new ListInstanceProfilesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTablesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getExpression() != null)\r\n        sb.append(\"Expression: \").append(getExpression()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.Target.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput()).append(\",\");\r\n    if (getInputPath() != null)\r\n        sb.append(\"InputPath: \").append(getInputPath()).append(\",\");\r\n    if (getInputTransformer() != null)\r\n        sb.append(\"InputTransformer: \").append(getInputTransformer()).append(\",\");\r\n    if (getKinesisParameters() != null)\r\n        sb.append(\"KinesisParameters: \").append(getKinesisParameters()).append(\",\");\r\n    if (getRunCommandParameters() != null)\r\n        sb.append(\"RunCommandParameters: \").append(getRunCommandParameters()).append(\",\");\r\n    if (getEcsParameters() != null)\r\n        sb.append(\"EcsParameters: \").append(getEcsParameters()).append(\",\");\r\n    if (getBatchParameters() != null)\r\n        sb.append(\"BatchParameters: \").append(getBatchParameters()).append(\",\");\r\n    if (getSqsParameters() != null)\r\n        sb.append(\"SqsParameters: \").append(getSqsParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.listSSHPublicKeys",
	"Comment": "returns information about the ssh public keys associated with the specified iam user. if there none exists, theoperation returns an empty list.the ssh public keys returned by this operation are used only for authenticating the iam user to an aws codecommitrepository. for more information about using ssh keys to authenticate to an aws codecommit repository, see set up awscodecommit for ssh connections in the aws codecommit user guide.although each user is limited to a small number of keys, you can still paginate the results using themaxitems and marker parameters.",
	"Method": "ListSSHPublicKeysResult listSSHPublicKeys(ListSSHPublicKeysRequest request,ListSSHPublicKeysResult listSSHPublicKeys){\r\n    return listSSHPublicKeys(new ListSSHPublicKeysRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateSampleFindingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getFindingTypes() != null)\r\n        sb.append(\"FindingTypes: \").append(getFindingTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.DeleteListenerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.CreateFileSystemFromBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileSystem() != null)\r\n        sb.append(\"FileSystem: \").append(getFileSystem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.createCoreDefinitionVersion",
	"Comment": "creates a version of a core definition that has already been defined. greengrass groups must each contain exactlyone greengrass core.",
	"Method": "CreateCoreDefinitionVersionResult createCoreDefinitionVersion(CreateCoreDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateCoreDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ResetServiceSpecificCredentialRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getServiceSpecificCredentialId() != null)\r\n        sb.append(\"ServiceSpecificCredentialId: \").append(getServiceSpecificCredentialId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.AmazonImportExportAsyncClient.listJobsAsync",
	"Comment": "simplified method form for invoking the listjobs operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListJobsResult> listJobsAsync(ListJobsRequest request,java.util.concurrent.Future<ListJobsResult> listJobsAsync,ListJobsRequest request,com.amazonaws.handlers.AsyncHandler<ListJobsRequest, ListJobsResult> asyncHandler,java.util.concurrent.Future<ListJobsResult> listJobsAsync,java.util.concurrent.Future<ListJobsResult> listJobsAsync,com.amazonaws.handlers.AsyncHandler<ListJobsRequest, ListJobsResult> asyncHandler){\r\n    return listJobsAsync(new ListJobsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.DeleteResourceDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.AbortMultipartUploadRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getUploadId() != null)\r\n        sb.append(\"UploadId: \").append(getUploadId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.SetSecurityGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.EC2InstanceCounts.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDESIRED() != null)\r\n        sb.append(\"DESIRED: \").append(getDESIRED()).append(\",\");\r\n    if (getMINIMUM() != null)\r\n        sb.append(\"MINIMUM: \").append(getMINIMUM()).append(\",\");\r\n    if (getMAXIMUM() != null)\r\n        sb.append(\"MAXIMUM: \").append(getMAXIMUM()).append(\",\");\r\n    if (getPENDING() != null)\r\n        sb.append(\"PENDING: \").append(getPENDING()).append(\",\");\r\n    if (getACTIVE() != null)\r\n        sb.append(\"ACTIVE: \").append(getACTIVE()).append(\",\");\r\n    if (getIDLE() != null)\r\n        sb.append(\"IDLE: \").append(getIDLE()).append(\",\");\r\n    if (getTERMINATING() != null)\r\n        sb.append(\"TERMINATING: \").append(getTERMINATING());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.UpdatePartitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.BatchParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobDefinition() != null)\r\n        sb.append(\"JobDefinition: \").append(getJobDefinition()).append(\",\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getArrayProperties() != null)\r\n        sb.append(\"ArrayProperties: \").append(getArrayProperties()).append(\",\");\r\n    if (getRetryStrategy() != null)\r\n        sb.append(\"RetryStrategy: \").append(getRetryStrategy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.NetworkConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAwsvpcConfiguration() != null)\r\n        sb.append(\"AwsvpcConfiguration: \").append(getAwsvpcConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateCoreDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLastUpdatedTimestamp() != null)\r\n        sb.append(\"LastUpdatedTimestamp: \").append(getLastUpdatedTimestamp()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getLatestVersionArn() != null)\r\n        sb.append(\"LatestVersionArn: \").append(getLatestVersionArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListInstanceProfilesForRoleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceProfiles() != null)\r\n        sb.append(\"InstanceProfiles: \").append(getInstanceProfiles()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.CreateDetectorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.MetricDimension.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateDatabaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseInput() != null)\r\n        sb.append(\"DatabaseInput: \").append(getDatabaseInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateRoleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getMaxSessionDuration() != null)\r\n        sb.append(\"MaxSessionDuration: \").append(getMaxSessionDuration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listSigningCertificatesAsync",
	"Comment": "simplified method form for invoking the listsigningcertificates operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListSigningCertificatesResult> listSigningCertificatesAsync(ListSigningCertificatesRequest request,java.util.concurrent.Future<ListSigningCertificatesResult> listSigningCertificatesAsync,ListSigningCertificatesRequest request,com.amazonaws.handlers.AsyncHandler<ListSigningCertificatesRequest, ListSigningCertificatesResult> asyncHandler,java.util.concurrent.Future<ListSigningCertificatesResult> listSigningCertificatesAsync,java.util.concurrent.Future<ListSigningCertificatesResult> listSigningCertificatesAsync,com.amazonaws.handlers.AsyncHandler<ListSigningCertificatesRequest, ListSigningCertificatesResult> asyncHandler){\r\n    return listSigningCertificatesAsync(new ListSigningCertificatesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.AcceptInvitationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getInvitationId() != null)\r\n        sb.append(\"InvitationId: \").append(getInvitationId()).append(\",\");\r\n    if (getMasterId() != null)\r\n        sb.append(\"MasterId: \").append(getMasterId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.OutputSerialization.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCsv() != null)\r\n        sb.append(\"Csv: \").append(getCsv());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.GetTelemetryMetadataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTelemetryMetadata() != null)\r\n        sb.append(\"TelemetryMetadata: \").append(getTelemetryMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetCredentialReportResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getReportFormat() != null)\r\n        sb.append(\"ReportFormat: \").append(getReportFormat()).append(\",\");\r\n    if (getGeneratedTime() != null)\r\n        sb.append(\"GeneratedTime: \").append(getGeneratedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTriggersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTriggers() != null)\r\n        sb.append(\"Triggers: \").append(getTriggers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.VpcPeeringAuthorization.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameLiftAwsAccountId() != null)\r\n        sb.append(\"GameLiftAwsAccountId: \").append(getGameLiftAwsAccountId()).append(\",\");\r\n    if (getPeerVpcAwsAccountId() != null)\r\n        sb.append(\"PeerVpcAwsAccountId: \").append(getPeerVpcAwsAccountId()).append(\",\");\r\n    if (getPeerVpcId() != null)\r\n        sb.append(\"PeerVpcId: \").append(getPeerVpcId()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getExpirationTime() != null)\r\n        sb.append(\"ExpirationTime: \").append(getExpirationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.ImportCatalogToGlueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListBulkDeploymentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.FunctionConfigurationEnvironment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessSysfs() != null)\r\n        sb.append(\"AccessSysfs: \").append(getAccessSysfs()).append(\",\");\r\n    if (getExecution() != null)\r\n        sb.append(\"Execution: \").append(getExecution()).append(\",\");\r\n    if (getResourceAccessPolicies() != null)\r\n        sb.append(\"ResourceAccessPolicies: \").append(getResourceAccessPolicies()).append(\",\");\r\n    if (getVariables() != null)\r\n        sb.append(\"Variables: \").append(getVariables());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.LocalPortDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getPortName() != null)\r\n        sb.append(\"PortName: \").append(getPortName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.ListElasticsearchInstanceTypesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticsearchInstanceTypes() != null)\r\n        sb.append(\"ElasticsearchInstanceTypes: \").append(getElasticsearchInstanceTypes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.DescribeSecurityConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSecurityConfiguration() != null)\r\n        sb.append(\"SecurityConfiguration: \").append(getSecurityConfiguration()).append(\",\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeletionTaskFailureReasonType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getRoleUsageList() != null)\r\n        sb.append(\"RoleUsageList: \").append(getRoleUsageList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateResourceDefinitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListInstanceProfilesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceProfiles() != null)\r\n        sb.append(\"InstanceProfiles: \").append(getInstanceProfiles()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteSigningCertificate",
	"Comment": "deletes a signing certificate associated with the specified iam user.if you do not specify a user name, iam determines the user name implicitly based on the aws access key id signingthe request. this operation works for access keys under the aws account. consequently, you can use this operationto manage aws account root user credentials even if the aws account has no associated iam users.",
	"Method": "DeleteSigningCertificateResult deleteSigningCertificate(DeleteSigningCertificateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteSigningCertificate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListSAMLProvidersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSAMLProviderList() != null)\r\n        sb.append(\"SAMLProviderList: \").append(getSAMLProviderList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateLoginProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetDatabasesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatabaseList() != null)\r\n        sb.append(\"DatabaseList: \").append(getDatabaseList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.GetResourceDefinitionVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceDefinitionId() != null)\r\n        sb.append(\"ResourceDefinitionId: \").append(getResourceDefinitionId()).append(\",\");\r\n    if (getResourceDefinitionVersionId() != null)\r\n        sb.append(\"ResourceDefinitionVersionId: \").append(getResourceDefinitionVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.ListListenersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcceleratorArn() != null)\r\n        sb.append(\"AcceleratorArn: \").append(getAcceleratorArn()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteCrawlerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.CreateAccessKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessKey() != null)\r\n        sb.append(\"AccessKey: \").append(getAccessKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.InstanceTimeline.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationDateTime() != null)\r\n        sb.append(\"CreationDateTime: \").append(getCreationDateTime()).append(\",\");\r\n    if (getReadyDateTime() != null)\r\n        sb.append(\"ReadyDateTime: \").append(getReadyDateTime()).append(\",\");\r\n    if (getEndDateTime() != null)\r\n        sb.append(\"EndDateTime: \").append(getEndDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CrawlerTargets.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Targets() != null)\r\n        sb.append(\"S3Targets: \").append(getS3Targets()).append(\",\");\r\n    if (getJdbcTargets() != null)\r\n        sb.append(\"JdbcTargets: \").append(getJdbcTargets()).append(\",\");\r\n    if (getDynamoDBTargets() != null)\r\n        sb.append(\"DynamoDBTargets: \").append(getDynamoDBTargets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.AddClientIDToOpenIDConnectProviderRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOpenIDConnectProviderArn() != null)\r\n        sb.append(\"OpenIDConnectProviderArn: \").append(getOpenIDConnectProviderArn()).append(\",\");\r\n    if (getClientID() != null)\r\n        sb.append(\"ClientID: \").append(getClientID());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.DeleteSecurityConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.RoutingStrategy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateFleetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getBuildId() != null)\r\n        sb.append(\"BuildId: \").append(getBuildId()).append(\",\");\r\n    if (getServerLaunchPath() != null)\r\n        sb.append(\"ServerLaunchPath: \").append(getServerLaunchPath()).append(\",\");\r\n    if (getServerLaunchParameters() != null)\r\n        sb.append(\"ServerLaunchParameters: \").append(getServerLaunchParameters()).append(\",\");\r\n    if (getLogPaths() != null)\r\n        sb.append(\"LogPaths: \").append(getLogPaths()).append(\",\");\r\n    if (getEC2InstanceType() != null)\r\n        sb.append(\"EC2InstanceType: \").append(getEC2InstanceType()).append(\",\");\r\n    if (getEC2InboundPermissions() != null)\r\n        sb.append(\"EC2InboundPermissions: \").append(getEC2InboundPermissions()).append(\",\");\r\n    if (getNewGameSessionProtectionPolicy() != null)\r\n        sb.append(\"NewGameSessionProtectionPolicy: \").append(getNewGameSessionProtectionPolicy()).append(\",\");\r\n    if (getRuntimeConfiguration() != null)\r\n        sb.append(\"RuntimeConfiguration: \").append(getRuntimeConfiguration()).append(\",\");\r\n    if (getResourceCreationLimitPolicy() != null)\r\n        sb.append(\"ResourceCreationLimitPolicy: \").append(getResourceCreationLimitPolicy()).append(\",\");\r\n    if (getMetricGroups() != null)\r\n        sb.append(\"MetricGroups: \").append(getMetricGroups()).append(\",\");\r\n    if (getPeerVpcAwsAccountId() != null)\r\n        sb.append(\"PeerVpcAwsAccountId: \").append(getPeerVpcAwsAccountId()).append(\",\");\r\n    if (getPeerVpcId() != null)\r\n        sb.append(\"PeerVpcId: \").append(getPeerVpcId()).append(\",\");\r\n    if (getFleetType() != null)\r\n        sb.append(\"FleetType: \").append(getFleetType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeMatchmakingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTicketIds() != null)\r\n        sb.append(\"TicketIds: \").append(getTicketIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ListJobsByPipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineId() != null)\r\n        sb.append(\"PipelineId: \").append(getPipelineId()).append(\",\");\r\n    if (getAscending() != null)\r\n        sb.append(\"Ascending: \").append(getAscending()).append(\",\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AssessmentTargetFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTargetNamePattern() != null)\r\n        sb.append(\"AssessmentTargetNamePattern: \").append(getAssessmentTargetNamePattern());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListInstanceFleetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceFleets() != null)\r\n        sb.append(\"InstanceFleets: \").append(getInstanceFleets()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListPoliciesGrantingServiceAccessRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getServiceNamespaces() != null)\r\n        sb.append(\"ServiceNamespaces: \").append(getServiceNamespaces());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListSubscriptionDefinitionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefinitions() != null)\r\n        sb.append(\"Definitions: \").append(getDefinitions()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ServerCertificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerCertificateMetadata() != null)\r\n        sb.append(\"ServerCertificateMetadata: \").append(getServerCertificateMetadata()).append(\",\");\r\n    if (getCertificateBody() != null)\r\n        sb.append(\"CertificateBody: \").append(getCertificateBody()).append(\",\");\r\n    if (getCertificateChain() != null)\r\n        sb.append(\"CertificateChain: \").append(getCertificateChain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DescribeReservedElasticsearchInstanceOfferingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getReservedElasticsearchInstanceOfferings() != null)\r\n        sb.append(\"ReservedElasticsearchInstanceOfferings: \").append(getReservedElasticsearchInstanceOfferings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.GetIPSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getIpSetId() != null)\r\n        sb.append(\"IpSetId: \").append(getIpSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetCrawlerMetricsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCrawlerNameList() != null)\r\n        sb.append(\"CrawlerNameList: \").append(getCrawlerNameList()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.waiters.AmazonGlacierWaiters.vaultExists",
	"Comment": "builds a vaultexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeVaultRequest> vaultExists(){\r\n    return new WaiterBuilder<DescribeVaultRequest, DescribeVaultResult>().withSdkFunction(new DescribeVaultFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor(WaiterState.SUCCESS), new VaultExists.IsResourceNotFoundExceptionMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(15), new FixedDelayStrategy(3))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.InstanceLimits.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceCountLimits() != null)\r\n        sb.append(\"InstanceCountLimits: \").append(getInstanceCountLimits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlias() != null)\r\n        sb.append(\"Alias: \").append(getAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ListFleetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuildId() != null)\r\n        sb.append(\"BuildId: \").append(getBuildId()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetCrawlersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCrawlers() != null)\r\n        sb.append(\"Crawlers: \").append(getCrawlers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetUserDefinedFunctionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserDefinedFunction() != null)\r\n        sb.append(\"UserDefinedFunction: \").append(getUserDefinedFunction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateDeviceDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getInitialVersion() != null)\r\n        sb.append(\"InitialVersion: \").append(getInitialVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.CreateFunctionDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmznClientToken() != null)\r\n        sb.append(\"AmznClientToken: \").append(getAmznClientToken()).append(\",\");\r\n    if (getInitialVersion() != null)\r\n        sb.append(\"InitialVersion: \").append(getInitialVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ChangePasswordRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOldPassword() != null)\r\n        sb.append(\"OldPassword: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getNewPassword() != null)\r\n        sb.append(\"NewPassword: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListGroupCertificateAuthoritiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupCertificateAuthorities() != null)\r\n        sb.append(\"GroupCertificateAuthorities: \").append(getGroupCertificateAuthorities());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.AddAttributesToFindingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedItems() != null)\r\n        sb.append(\"FailedItems: \").append(getFailedItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateGameSessionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSession() != null)\r\n        sb.append(\"GameSession: \").append(getGameSession());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.AWSGreengrassClient.createSubscriptionDefinitionVersion",
	"Comment": "creates a version of a subscription definition which has already been defined.",
	"Method": "CreateSubscriptionDefinitionVersionResult createSubscriptionDefinitionVersion(CreateSubscriptionDefinitionVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateSubscriptionDefinitionVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.Connector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectorArn() != null)\r\n        sb.append(\"ConnectorArn: \").append(getConnectorArn()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementAsyncClient.listVirtualMFADevicesAsync",
	"Comment": "simplified method form for invoking the listvirtualmfadevices operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListVirtualMFADevicesResult> listVirtualMFADevicesAsync(ListVirtualMFADevicesRequest request,java.util.concurrent.Future<ListVirtualMFADevicesResult> listVirtualMFADevicesAsync,ListVirtualMFADevicesRequest request,com.amazonaws.handlers.AsyncHandler<ListVirtualMFADevicesRequest, ListVirtualMFADevicesResult> asyncHandler,java.util.concurrent.Future<ListVirtualMFADevicesResult> listVirtualMFADevicesAsync,java.util.concurrent.Future<ListVirtualMFADevicesResult> listVirtualMFADevicesAsync,com.amazonaws.handlers.AsyncHandler<ListVirtualMFADevicesRequest, ListVirtualMFADevicesResult> asyncHandler){\r\n    return listVirtualMFADevicesAsync(new ListVirtualMFADevicesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.GetUpgradeStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GetJobOutputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getContentRange() != null)\r\n        sb.append(\"ContentRange: \").append(getContentRange()).append(\",\");\r\n    if (getAcceptRanges() != null)\r\n        sb.append(\"AcceptRanges: \").append(getAcceptRanges()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getArchiveDescription() != null)\r\n        sb.append(\"ArchiveDescription: \").append(getArchiveDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.UpdateFindingsFeedbackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.model.UpdateListenerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListenerArn() != null)\r\n        sb.append(\"ListenerArn: \").append(getListenerArn()).append(\",\");\r\n    if (getPortRanges() != null)\r\n        sb.append(\"PortRanges: \").append(getPortRanges()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getClientAffinity() != null)\r\n        sb.append(\"ClientAffinity: \").append(getClientAffinity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GetDataRetrievalPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.RemoveAutoScalingPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.transfer.ArchiveTransferManagerBuilder.withSqsClient",
	"Comment": "set the sqs client for working with amazon sqs when polling for the archive retrieval jobstatus.",
	"Method": "ArchiveTransferManagerBuilder withSqsClient(AmazonSQS sqsClient){\r\n    setSqsClient(sqsClient);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetAccessKeyLastUsedResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getAccessKeyLastUsed() != null)\r\n        sb.append(\"AccessKeyLastUsed: \").append(getAccessKeyLastUsed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetTableRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.AmazonElasticTranscoderClient.readPreset",
	"Comment": "the readpreset operation gets detailed information about a preset.",
	"Method": "ReadPresetResult readPreset(ReadPresetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeReadPreset(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.Encryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMode() != null)\r\n        sb.append(\"Mode: \").append(getMode()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getKeyMd5() != null)\r\n        sb.append(\"KeyMd5: \").append(getKeyMd5()).append(\",\");\r\n    if (getInitializationVector() != null)\r\n        sb.append(\"InitializationVector: \").append(getInitializationVector());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.RemoveTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasId() != null)\r\n        sb.append(\"AliasId: \").append(getAliasId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeEntityAggregatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntityAggregates() != null)\r\n        sb.append(\"EntityAggregates: \").append(getEntityAggregates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UploadSSHPublicKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSSHPublicKey() != null)\r\n        sb.append(\"SSHPublicKey: \").append(getSSHPublicKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.listDetectors",
	"Comment": "lists detectorids of all the existing amazon guardduty detector resources.",
	"Method": "ListDetectorsResult listDetectors(ListDetectorsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDetectors(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.BulkDeployment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBulkDeploymentArn() != null)\r\n        sb.append(\"BulkDeploymentArn: \").append(getBulkDeploymentArn()).append(\",\");\r\n    if (getBulkDeploymentId() != null)\r\n        sb.append(\"BulkDeploymentId: \").append(getBulkDeploymentId()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ResourceDataContainer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocalDeviceResourceData() != null)\r\n        sb.append(\"LocalDeviceResourceData: \").append(getLocalDeviceResourceData()).append(\",\");\r\n    if (getLocalVolumeResourceData() != null)\r\n        sb.append(\"LocalVolumeResourceData: \").append(getLocalVolumeResourceData()).append(\",\");\r\n    if (getS3MachineLearningModelResourceData() != null)\r\n        sb.append(\"S3MachineLearningModelResourceData: \").append(getS3MachineLearningModelResourceData()).append(\",\");\r\n    if (getSageMakerMachineLearningModelResourceData() != null)\r\n        sb.append(\"SageMakerMachineLearningModelResourceData: \").append(getSageMakerMachineLearningModelResourceData()).append(\",\");\r\n    if (getSecretsManagerSecretResourceData() != null)\r\n        sb.append(\"SecretsManagerSecretResourceData: \").append(getSecretsManagerSecretResourceData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListAccountAliasesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeEventTypesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.PreviewAgentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPreviewAgentsArn() != null)\r\n        sb.append(\"PreviewAgentsArn: \").append(getPreviewAgentsArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribePlayerSessionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId()).append(\",\");\r\n    if (getPlayerId() != null)\r\n        sb.append(\"PlayerId: \").append(getPlayerId()).append(\",\");\r\n    if (getPlayerSessionId() != null)\r\n        sb.append(\"PlayerSessionId: \").append(getPlayerSessionId()).append(\",\");\r\n    if (getPlayerSessionStatusFilter() != null)\r\n        sb.append(\"PlayerSessionStatusFilter: \").append(getPlayerSessionStatusFilter()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.PlayerSession.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlayerSessionId() != null)\r\n        sb.append(\"PlayerSessionId: \").append(getPlayerSessionId()).append(\",\");\r\n    if (getPlayerId() != null)\r\n        sb.append(\"PlayerId: \").append(getPlayerId()).append(\",\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTerminationTime() != null)\r\n        sb.append(\"TerminationTime: \").append(getTerminationTime()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getPlayerData() != null)\r\n        sb.append(\"PlayerData: \").append(getPlayerData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticsearch.model.DeleteElasticsearchDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainStatus() != null)\r\n        sb.append(\"DomainStatus: \").append(getDomainStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elastictranscoder.model.ReadPresetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DataRetrievalRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStrategy() != null)\r\n        sb.append(\"Strategy: \").append(getStrategy()).append(\",\");\r\n    if (getBytesPerHour() != null)\r\n        sb.append(\"BytesPerHour: \").append(getBytesPerHour());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeletePolicyVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AmazonElasticMapReduceClient.createSecurityConfiguration",
	"Comment": "creates a security configuration, which is stored in the service and can be specified when a cluster is created.",
	"Method": "CreateSecurityConfigurationResult createSecurityConfiguration(CreateSecurityConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateSecurityConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.DeleteDetectorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.ListBuildsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBuilds() != null)\r\n        sb.append(\"Builds: \").append(getBuilds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateXMLClassifierRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClassification() != null)\r\n        sb.append(\"Classification: \").append(getClassification()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRowTag() != null)\r\n        sb.append(\"RowTag: \").append(getRowTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GetInstanceAccessResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceAccess() != null)\r\n        sb.append(\"InstanceAccess: \").append(getInstanceAccess());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.Location.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJdbc() != null)\r\n        sb.append(\"Jdbc: \").append(getJdbc()).append(\",\");\r\n    if (getS3() != null)\r\n        sb.append(\"S3: \").append(getS3()).append(\",\");\r\n    if (getDynamoDB() != null)\r\n        sb.append(\"DynamoDB: \").append(getDynamoDB());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.StartTriggerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.DurationRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinSeconds() != null)\r\n        sb.append(\"MinSeconds: \").append(getMinSeconds()).append(\",\");\r\n    if (getMaxSeconds() != null)\r\n        sb.append(\"MaxSeconds: \").append(getMaxSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.ConnectionsList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnections() != null)\r\n        sb.append(\"Connections: \").append(getConnections());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.InventoryRetrievalJobInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartDate() != null)\r\n        sb.append(\"StartDate: \").append(getStartDate()).append(\",\");\r\n    if (getEndDate() != null)\r\n        sb.append(\"EndDate: \").append(getEndDate()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.DescribeStepRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterId() != null)\r\n        sb.append(\"ClusterId: \").append(getClusterId()).append(\",\");\r\n    if (getStepId() != null)\r\n        sb.append(\"StepId: \").append(getStepId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DateTimeRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrom() != null)\r\n        sb.append(\"From: \").append(getFrom()).append(\",\");\r\n    if (getTo() != null)\r\n        sb.append(\"To: \").append(getTo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AmazonIdentityManagementClient.deleteGroup",
	"Comment": "deletes the specified iam group. the group must not contain any users or have any attached policies.",
	"Method": "DeleteGroupResult deleteGroup(DeleteGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.DescribeJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getJobDescription() != null)\r\n        sb.append(\"JobDescription: \").append(getJobDescription()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getArchiveId() != null)\r\n        sb.append(\"ArchiveId: \").append(getArchiveId()).append(\",\");\r\n    if (getVaultARN() != null)\r\n        sb.append(\"VaultARN: \").append(getVaultARN()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getCompleted() != null)\r\n        sb.append(\"Completed: \").append(getCompleted()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getArchiveSizeInBytes() != null)\r\n        sb.append(\"ArchiveSizeInBytes: \").append(getArchiveSizeInBytes()).append(\",\");\r\n    if (getInventorySizeInBytes() != null)\r\n        sb.append(\"InventorySizeInBytes: \").append(getInventorySizeInBytes()).append(\",\");\r\n    if (getSNSTopic() != null)\r\n        sb.append(\"SNSTopic: \").append(getSNSTopic()).append(\",\");\r\n    if (getCompletionDate() != null)\r\n        sb.append(\"CompletionDate: \").append(getCompletionDate()).append(\",\");\r\n    if (getSHA256TreeHash() != null)\r\n        sb.append(\"SHA256TreeHash: \").append(getSHA256TreeHash()).append(\",\");\r\n    if (getArchiveSHA256TreeHash() != null)\r\n        sb.append(\"ArchiveSHA256TreeHash: \").append(getArchiveSHA256TreeHash()).append(\",\");\r\n    if (getRetrievalByteRange() != null)\r\n        sb.append(\"RetrievalByteRange: \").append(getRetrievalByteRange()).append(\",\");\r\n    if (getTier() != null)\r\n        sb.append(\"Tier: \").append(getTier()).append(\",\");\r\n    if (getInventoryRetrievalParameters() != null)\r\n        sb.append(\"InventoryRetrievalParameters: \").append(getInventoryRetrievalParameters()).append(\",\");\r\n    if (getJobOutputPath() != null)\r\n        sb.append(\"JobOutputPath: \").append(getJobOutputPath()).append(\",\");\r\n    if (getSelectParameters() != null)\r\n        sb.append(\"SelectParameters: \").append(getSelectParameters()).append(\",\");\r\n    if (getOutputLocation() != null)\r\n        sb.append(\"OutputLocation: \").append(getOutputLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.SecurityConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreatedTimeStamp() != null)\r\n        sb.append(\"CreatedTimeStamp: \").append(getCreatedTimeStamp()).append(\",\");\r\n    if (getEncryptionConfiguration() != null)\r\n        sb.append(\"EncryptionConfiguration: \").append(getEncryptionConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticloadbalancingv2.model.SetIpAddressTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerArn() != null)\r\n        sb.append(\"LoadBalancerArn: \").append(getLoadBalancerArn()).append(\",\");\r\n    if (getIpAddressType() != null)\r\n        sb.append(\"IpAddressType: \").append(getIpAddressType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.AWSGlueClient.putDataCatalogEncryptionSettings",
	"Comment": "sets the security configuration for a specified catalog. once the configuration has been set, the specifiedencryption is applied to every catalog write thereafter.",
	"Method": "PutDataCatalogEncryptionSettingsResult putDataCatalogEncryptionSettings(PutDataCatalogEncryptionSettingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutDataCatalogEncryptionSettings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.DeleteCrawlerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.cloudwatchevents.model.BatchArrayProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.util.ResizeJobFlowStep.withResizeAction",
	"Comment": "add a new action for this step to perform. these actions can be to modifyor add instance groups. this step supports multiple actions, but requiresat least one be specified.",
	"Method": "ResizeJobFlowStep withResizeAction(ResizeAction resizeAction){\r\n    this.args.addAll(resizeAction.getArgs());\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.glacier.model.GetJobOutputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getVaultName() != null)\r\n        sb.append(\"VaultName: \").append(getVaultName()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getRange() != null)\r\n        sb.append(\"Range: \").append(getRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.PutScalingPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ResourceDefinitionVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.DescribeInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.ListConnectorDefinitionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.GameSession.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionId() != null)\r\n        sb.append(\"GameSessionId: \").append(getGameSessionId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFleetId() != null)\r\n        sb.append(\"FleetId: \").append(getFleetId()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTerminationTime() != null)\r\n        sb.append(\"TerminationTime: \").append(getTerminationTime()).append(\",\");\r\n    if (getCurrentPlayerSessionCount() != null)\r\n        sb.append(\"CurrentPlayerSessionCount: \").append(getCurrentPlayerSessionCount()).append(\",\");\r\n    if (getMaximumPlayerSessionCount() != null)\r\n        sb.append(\"MaximumPlayerSessionCount: \").append(getMaximumPlayerSessionCount()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason()).append(\",\");\r\n    if (getGameProperties() != null)\r\n        sb.append(\"GameProperties: \").append(getGameProperties()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getPlayerSessionCreationPolicy() != null)\r\n        sb.append(\"PlayerSessionCreationPolicy: \").append(getPlayerSessionCreationPolicy()).append(\",\");\r\n    if (getCreatorId() != null)\r\n        sb.append(\"CreatorId: \").append(getCreatorId()).append(\",\");\r\n    if (getGameSessionData() != null)\r\n        sb.append(\"GameSessionData: \").append(getGameSessionData()).append(\",\");\r\n    if (getMatchmakerData() != null)\r\n        sb.append(\"MatchmakerData: \").append(getMatchmakerData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.greengrass.model.UpdateDeviceDefinitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceDefinitionId() != null)\r\n        sb.append(\"DeviceDefinitionId: \").append(getDeviceDefinitionId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.ListInstanceGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceGroups() != null)\r\n        sb.append(\"InstanceGroups: \").append(getInstanceGroups()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.model.TerminateJobFlowsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobFlowIds() != null)\r\n        sb.append(\"JobFlowIds: \").append(getJobFlowIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.elasticmapreduce.AbstractAmazonElasticMapReduceAsync.listClustersAsync",
	"Comment": "simplified method form for invoking the listclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListClustersResult> listClustersAsync(ListClustersRequest request,java.util.concurrent.Future<ListClustersResult> listClustersAsync,ListClustersRequest request,com.amazonaws.handlers.AsyncHandler<ListClustersRequest, ListClustersResult> asyncHandler,java.util.concurrent.Future<ListClustersResult> listClustersAsync,java.util.concurrent.Future<ListClustersResult> listClustersAsync,com.amazonaws.handlers.AsyncHandler<ListClustersRequest, ListClustersResult> asyncHandler){\r\n    return listClustersAsync(new ListClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetSSHPublicKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSSHPublicKey() != null)\r\n        sb.append(\"SSHPublicKey: \").append(getSSHPublicKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.globalaccelerator.AWSGlobalAcceleratorClient.createListener",
	"Comment": "create a listener to process inbound connections from clients to an accelerator. connections arrive to assignedstatic ip addresses on a port, port range, or list of port ranges that you specify. to see an aws cli example ofcreating a listener, scroll down to example.",
	"Method": "CreateListenerResult createListener(CreateListenerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateListener(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateJsonClassifierRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getJsonPath() != null)\r\n        sb.append(\"JsonPath: \").append(getJsonPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.AWSHealthAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.Member.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getDetectorId() != null)\r\n        sb.append(\"DetectorId: \").append(getDetectorId()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getInvitedAt() != null)\r\n        sb.append(\"InvitedAt: \").append(getInvitedAt()).append(\",\");\r\n    if (getMasterId() != null)\r\n        sb.append(\"MasterId: \").append(getMasterId()).append(\",\");\r\n    if (getRelationshipStatus() != null)\r\n        sb.append(\"RelationshipStatus: \").append(getRelationshipStatus()).append(\",\");\r\n    if (getUpdatedAt() != null)\r\n        sb.append(\"UpdatedAt: \").append(getUpdatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.DeleteGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.AmazonGuardDutyClient.getFindings",
	"Comment": "describes amazon guardduty findings specified by finding ids.",
	"Method": "GetFindingsResult getFindings(GetFindingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetFindings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.fsx.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.CreateGameSessionQueueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTimeoutInSeconds() != null)\r\n        sb.append(\"TimeoutInSeconds: \").append(getTimeoutInSeconds()).append(\",\");\r\n    if (getPlayerLatencyPolicies() != null)\r\n        sb.append(\"PlayerLatencyPolicies: \").append(getPlayerLatencyPolicies()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.gamelift.model.UpdateGameSessionQueueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGameSessionQueue() != null)\r\n        sb.append(\"GameSessionQueue: \").append(getGameSessionQueue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.CreateDatabaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.guardduty.model.StopMonitoringMembersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnprocessedAccounts() != null)\r\n        sb.append(\"UnprocessedAccounts: \").append(getUnprocessedAccounts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.ListServerCertificatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPathPrefix() != null)\r\n        sb.append(\"PathPrefix: \").append(getPathPrefix()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.AbstractAmazonIdentityManagementAsync.createAccessKeyAsync",
	"Comment": "simplified method form for invoking the createaccesskey operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateAccessKeyResult> createAccessKeyAsync(CreateAccessKeyRequest request,java.util.concurrent.Future<CreateAccessKeyResult> createAccessKeyAsync,CreateAccessKeyRequest request,com.amazonaws.handlers.AsyncHandler<CreateAccessKeyRequest, CreateAccessKeyResult> asyncHandler,java.util.concurrent.Future<CreateAccessKeyResult> createAccessKeyAsync,java.util.concurrent.Future<CreateAccessKeyResult> createAccessKeyAsync,com.amazonaws.handlers.AsyncHandler<CreateAccessKeyRequest, CreateAccessKeyResult> asyncHandler){\r\n    return createAccessKeyAsync(new CreateAccessKeyRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.GetPolicyVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.importexport.model.Artifact.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getURL() != null)\r\n        sb.append(\"URL: \").append(getURL());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.health.model.DescribeEventTypesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventTypes() != null)\r\n        sb.append(\"EventTypes: \").append(getEventTypes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.glue.model.GetJobRunsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobName() != null)\r\n        sb.append(\"JobName: \").append(getJobName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.identitymanagement.model.UpdateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}]