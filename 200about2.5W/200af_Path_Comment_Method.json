[{
	"Path": "com.amazonaws.services.kinesisanalytics.AmazonKinesisAnalyticsClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getSecurityProfileDescription() != null)\r\n        sb.append(\"SecurityProfileDescription: \").append(getSecurityProfileDescription()).append(\",\");\r\n    if (getBehaviors() != null)\r\n        sb.append(\"Behaviors: \").append(getBehaviors()).append(\",\");\r\n    if (getAlertTargets() != null)\r\n        sb.append(\"AlertTargets: \").append(getAlertTargets()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateDiskFromSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSClient.generateRandom",
	"Comment": "returns a random byte string that is cryptographically secure.by default, the random byte string is generated in aws kms. to generate the byte string in the aws cloudhsmcluster that is associated with a custom key store, specifythe custom key store id.for more information about entropy and random number generation, see the aws key management servicecryptographic details whitepaper.",
	"Method": "GenerateRandomResult generateRandom(GenerateRandomRequest request,GenerateRandomResult generateRandom){\r\n    return generateRandom(new GenerateRandomRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListAssociationsForLicenseConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationAssociations() != null)\r\n        sb.append(\"LicenseConfigurationAssociations: \").append(getLicenseConfigurationAssociations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateDomainEntryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CreateApplicationSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.UpdateEventSourceMappingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUUID() != null)\r\n        sb.append(\"UUID: \").append(getUUID()).append(\",\");\r\n    if (getBatchSize() != null)\r\n        sb.append(\"BatchSize: \").append(getBatchSize()).append(\",\");\r\n    if (getEventSourceArn() != null)\r\n        sb.append(\"EventSourceArn: \").append(getEventSourceArn()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getLastProcessingResult() != null)\r\n        sb.append(\"LastProcessingResult: \").append(getLastProcessingResult()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateTransitionReason() != null)\r\n        sb.append(\"StateTransitionReason: \").append(getStateTransitionReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.AddTagsToStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteTopicRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeviceShadowEnrichActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getNext() != null)\r\n        sb.append(\"Next: \").append(getNext());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId()).append(\",\");\r\n    if (getNamePrefix() != null)\r\n        sb.append(\"NamePrefix: \").append(getNamePrefix()).append(\",\");\r\n    if (getInAppStreamNames() != null)\r\n        sb.append(\"InAppStreamNames: \").append(getInAppStreamNames()).append(\",\");\r\n    if (getInputProcessingConfigurationDescription() != null)\r\n        sb.append(\"InputProcessingConfigurationDescription: \").append(getInputProcessingConfigurationDescription()).append(\",\");\r\n    if (getKinesisStreamsInputDescription() != null)\r\n        sb.append(\"KinesisStreamsInputDescription: \").append(getKinesisStreamsInputDescription()).append(\",\");\r\n    if (getKinesisFirehoseInputDescription() != null)\r\n        sb.append(\"KinesisFirehoseInputDescription: \").append(getKinesisFirehoseInputDescription()).append(\",\");\r\n    if (getInputSchema() != null)\r\n        sb.append(\"InputSchema: \").append(getInputSchema()).append(\",\");\r\n    if (getInputParallelism() != null)\r\n        sb.append(\"InputParallelism: \").append(getInputParallelism()).append(\",\");\r\n    if (getInputStartingPositionConfiguration() != null)\r\n        sb.append(\"InputStartingPositionConfiguration: \").append(getInputStartingPositionConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.Subscription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTopicArn() != null)\r\n        sb.append(\"TopicArn: \").append(getTopicArn()).append(\",\");\r\n    if (getEventSubscriptions() != null)\r\n        sb.append(\"EventSubscriptions: \").append(getEventSubscriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.ExportSnapshotRecordSourceInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getFromResourceName() != null)\r\n        sb.append(\"FromResourceName: \").append(getFromResourceName()).append(\",\");\r\n    if (getFromResourceArn() != null)\r\n        sb.append(\"FromResourceArn: \").append(getFromResourceArn()).append(\",\");\r\n    if (getInstanceSnapshotInfo() != null)\r\n        sb.append(\"InstanceSnapshotInfo: \").append(getInstanceSnapshotInfo()).append(\",\");\r\n    if (getDiskSnapshotInfo() != null)\r\n        sb.append(\"DiskSnapshotInfo: \").append(getDiskSnapshotInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisAsyncClient.describeStreamAsync",
	"Comment": "simplified method form for invoking the describestream operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync(DescribeStreamRequest request,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,DescribeStreamRequest request,com.amazonaws.handlers.AsyncHandler<DescribeStreamRequest, DescribeStreamResult> asyncHandler,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,com.amazonaws.handlers.AsyncHandler<DescribeStreamRequest, DescribeStreamResult> asyncHandler,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,String exclusiveStartShardId,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,String exclusiveStartShardId,com.amazonaws.handlers.AsyncHandler<DescribeStreamRequest, DescribeStreamResult> asyncHandler,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,Integer limit,String exclusiveStartShardId,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,Integer limit,String exclusiveStartShardId,com.amazonaws.handlers.AsyncHandler<DescribeStreamRequest, DescribeStreamResult> asyncHandler){\r\n    return describeStreamAsync(new DescribeStreamRequest().withStreamName(streamName).withLimit(limit).withExclusiveStartShardId(exclusiveStartShardId), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.AddTagsToStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.UpdatePipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerClient.updateLicenseSpecificationsForResource",
	"Comment": "adds or removes license configurations for a specified aws resource. this operation currently supports updatingthe license specifications of amis, instances, and hosts. launch templates and aws cloudformation templates arenot managed from this operation as those resources send the license configurations directly to a resourcecreation operation, such as runinstances.",
	"Method": "UpdateLicenseSpecificationsForResourceResult updateLicenseSpecificationsForResource(UpdateLicenseSpecificationsForResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateLicenseSpecificationsForResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CancelJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobArn() != null)\r\n        sb.append(\"JobArn: \").append(getJobArn()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteBotVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.CopyCommand.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataTableName() != null)\r\n        sb.append(\"DataTableName: \").append(getDataTableName()).append(\",\");\r\n    if (getDataTableColumns() != null)\r\n        sb.append(\"DataTableColumns: \").append(getDataTableColumns()).append(\",\");\r\n    if (getCopyOptions() != null)\r\n        sb.append(\"CopyOptions: \").append(getCopyOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetEffectivePoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal()).append(\",\");\r\n    if (getCognitoIdentityPoolId() != null)\r\n        sb.append(\"CognitoIdentityPoolId: \").append(getCognitoIdentityPoolId()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListLayerVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLayerVersions() != null)\r\n        sb.append(\"LayerVersions: \").append(getLayerVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateThingTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName()).append(\",\");\r\n    if (getThingTypeArn() != null)\r\n        sb.append(\"ThingTypeArn: \").append(getThingTypeArn()).append(\",\");\r\n    if (getThingTypeId() != null)\r\n        sb.append(\"ThingTypeId: \").append(getThingTypeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DeleteApplicationOutputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getOutputId() != null)\r\n        sb.append(\"OutputId: \").append(getOutputId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.deletePolicyVersion",
	"Comment": "deletes the specified version of the specified policy. you cannot delete the default version of a policy usingthis api. to delete the default version of a policy, use deletepolicy. to find out which version of apolicy is marked as the default version, use listpolicyversions.",
	"Method": "DeletePolicyVersionResult deletePolicyVersion(DeletePolicyVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeletePolicyVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.UpdateDestinationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName()).append(\",\");\r\n    if (getCurrentDeliveryStreamVersionId() != null)\r\n        sb.append(\"CurrentDeliveryStreamVersionId: \").append(getCurrentDeliveryStreamVersionId()).append(\",\");\r\n    if (getDestinationId() != null)\r\n        sb.append(\"DestinationId: \").append(getDestinationId()).append(\",\");\r\n    if (getS3DestinationUpdate() != null)\r\n        sb.append(\"S3DestinationUpdate: \").append(getS3DestinationUpdate()).append(\",\");\r\n    if (getExtendedS3DestinationUpdate() != null)\r\n        sb.append(\"ExtendedS3DestinationUpdate: \").append(getExtendedS3DestinationUpdate()).append(\",\");\r\n    if (getRedshiftDestinationUpdate() != null)\r\n        sb.append(\"RedshiftDestinationUpdate: \").append(getRedshiftDestinationUpdate()).append(\",\");\r\n    if (getElasticsearchDestinationUpdate() != null)\r\n        sb.append(\"ElasticsearchDestinationUpdate: \").append(getElasticsearchDestinationUpdate()).append(\",\");\r\n    if (getSplunkDestinationUpdate() != null)\r\n        sb.append(\"SplunkDestinationUpdate: \").append(getSplunkDestinationUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeEventConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventConfigurations() != null)\r\n        sb.append(\"EventConfigurations: \").append(getEventConfigurations()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.BrokerNodeInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedENIId() != null)\r\n        sb.append(\"AttachedENIId: \").append(getAttachedENIId()).append(\",\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getClientSubnet() != null)\r\n        sb.append(\"ClientSubnet: \").append(getClientSubnet()).append(\",\");\r\n    if (getClientVpcIpAddress() != null)\r\n        sb.append(\"ClientVpcIpAddress: \").append(getClientVpcIpAddress()).append(\",\");\r\n    if (getCurrentBrokerSoftwareInfo() != null)\r\n        sb.append(\"CurrentBrokerSoftwareInfo: \").append(getCurrentBrokerSoftwareInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AbstractAWSLambdaAsync.listFunctionsAsync",
	"Comment": "simplified method form for invoking the listfunctions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListFunctionsResult> listFunctionsAsync(ListFunctionsRequest request,java.util.concurrent.Future<ListFunctionsResult> listFunctionsAsync,ListFunctionsRequest request,com.amazonaws.handlers.AsyncHandler<ListFunctionsRequest, ListFunctionsResult> asyncHandler,java.util.concurrent.Future<ListFunctionsResult> listFunctionsAsync,java.util.concurrent.Future<ListFunctionsResult> listFunctionsAsync,com.amazonaws.handlers.AsyncHandler<ListFunctionsRequest, ListFunctionsResult> asyncHandler){\r\n    return listFunctionsAsync(new ListFunctionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateDescription() != null)\r\n        sb.append(\"CertificateDescription: \").append(getCertificateDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.RemoveLayerVersionPermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerName() != null)\r\n        sb.append(\"LayerName: \").append(getLayerName()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber()).append(\",\");\r\n    if (getStatementId() != null)\r\n        sb.append(\"StatementId: \").append(getStatementId()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TransferCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransferredCertificateArn() != null)\r\n        sb.append(\"TransferredCertificateArn: \").append(getTransferredCertificateArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DeleteApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListJobExecutionsForThingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.AmazonKinesisFirehoseAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.LambdaOutputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegisterCertificateRequest.setSetAsActive",
	"Comment": "a boolean value that specifies if the ca certificate is set to active.",
	"Method": "void setSetAsActive(Boolean setAsActive){\r\n    this.setAsActive = setAsActive;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.RetireGrantResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CreateApplicationSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.Dataset.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions()).append(\",\");\r\n    if (getTriggers() != null)\r\n        sb.append(\"Triggers: \").append(getTriggers()).append(\",\");\r\n    if (getContentDeliveryRules() != null)\r\n        sb.append(\"ContentDeliveryRules: \").append(getContentDeliveryRules()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdateTime() != null)\r\n        sb.append(\"LastUpdateTime: \").append(getLastUpdateTime()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.UpdateStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getCurrentVersion() != null)\r\n        sb.append(\"CurrentVersion: \").append(getCurrentVersion()).append(\",\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getMediaType() != null)\r\n        sb.append(\"MediaType: \").append(getMediaType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeThingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.UpdateApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getApplicationUpdate() != null)\r\n        sb.append(\"ApplicationUpdate: \").append(getApplicationUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.FollowUpPrompt.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrompt() != null)\r\n        sb.append(\"Prompt: \").append(getPrompt()).append(\",\");\r\n    if (getRejectionStatement() != null)\r\n        sb.append(\"RejectionStatement: \").append(getRejectionStatement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoPutMediaClientBuilder.determineRegionFromRegionProvider",
	"Comment": "attempt to determine the region from the configured region provider. this will return null in the event that theregion provider could not determine the region automatically.",
	"Method": "String determineRegionFromRegionProvider(){\r\n    try {\r\n        return DEFAULT_REGION_PROVIDER.getRegion();\r\n    } catch (SdkClientException e) {\r\n        return null;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisFirehoseInputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate()).append(\",\");\r\n    if (getRoleARNUpdate() != null)\r\n        sb.append(\"RoleARNUpdate: \").append(getRoleARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.UpdatePlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacementName() != null)\r\n        sb.append(\"PlacementName: \").append(getPlacementName()).append(\",\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseSnapshotName() != null)\r\n        sb.append(\"RelationalDatabaseSnapshotName: \").append(getRelationalDatabaseSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.Channel.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdateTime() != null)\r\n        sb.append(\"LastUpdateTime: \").append(getLastUpdateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CloseInstancePublicPortsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListStreamConsumersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConsumers() != null)\r\n        sb.append(\"Consumers: \").append(getConsumers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Job.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobArn() != null)\r\n        sb.append(\"JobArn: \").append(getJobArn()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getTargetSelection() != null)\r\n        sb.append(\"TargetSelection: \").append(getTargetSelection()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getForceCanceled() != null)\r\n        sb.append(\"ForceCanceled: \").append(getForceCanceled()).append(\",\");\r\n    if (getReasonCode() != null)\r\n        sb.append(\"ReasonCode: \").append(getReasonCode()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getPresignedUrlConfig() != null)\r\n        sb.append(\"PresignedUrlConfig: \").append(getPresignedUrlConfig()).append(\",\");\r\n    if (getJobExecutionsRolloutConfig() != null)\r\n        sb.append(\"JobExecutionsRolloutConfig: \").append(getJobExecutionsRolloutConfig()).append(\",\");\r\n    if (getAbortConfig() != null)\r\n        sb.append(\"AbortConfig: \").append(getAbortConfig()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getCompletedAt() != null)\r\n        sb.append(\"CompletedAt: \").append(getCompletedAt()).append(\",\");\r\n    if (getJobProcessDetails() != null)\r\n        sb.append(\"JobProcessDetails: \").append(getJobProcessDetails()).append(\",\");\r\n    if (getTimeoutConfig() != null)\r\n        sb.append(\"TimeoutConfig: \").append(getTimeoutConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DescribeDatastoreRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatastoreName() != null)\r\n        sb.append(\"DatastoreName: \").append(getDatastoreName()).append(\",\");\r\n    if (getIncludeStatistics() != null)\r\n        sb.append(\"IncludeStatistics: \").append(getIncludeStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.publishLayerVersion",
	"Comment": "creates a function layer from a zip archive. each time you call publishlayerversion with the sameversion name, a new version is created.add layers to your function with createfunction or updatefunctionconfiguration.",
	"Method": "PublishLayerVersionResult publishLayerVersion(PublishLayerVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePublishLayerVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.UpdateAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasArn() != null)\r\n        sb.append(\"AliasArn: \").append(getAliasArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFunctionVersion() != null)\r\n        sb.append(\"FunctionVersion: \").append(getFunctionVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoutingConfig() != null)\r\n        sb.append(\"RoutingConfig: \").append(getRoutingConfig()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ListTagsForDeliveryStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName()).append(\",\");\r\n    if (getExclusiveStartTagKey() != null)\r\n        sb.append(\"ExclusiveStartTagKey: \").append(getExclusiveStartTagKey()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingRegistrationTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.AddApplicationInputProcessingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId()).append(\",\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId()).append(\",\");\r\n    if (getInputProcessingConfigurationDescription() != null)\r\n        sb.append(\"InputProcessingConfigurationDescription: \").append(getInputProcessingConfigurationDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListTagsForStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AttachInstancesToLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getInstanceNames() != null)\r\n        sb.append(\"InstanceNames: \").append(getInstanceNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateRandomRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumberOfBytes() != null)\r\n        sb.append(\"NumberOfBytes: \").append(getNumberOfBytes()).append(\",\");\r\n    if (getCustomKeyStoreId() != null)\r\n        sb.append(\"CustomKeyStoreId: \").append(getCustomKeyStoreId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.S3ContentLocationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketARNUpdate() != null)\r\n        sb.append(\"BucketARNUpdate: \").append(getBucketARNUpdate()).append(\",\");\r\n    if (getFileKeyUpdate() != null)\r\n        sb.append(\"FileKeyUpdate: \").append(getFileKeyUpdate()).append(\",\");\r\n    if (getObjectVersionUpdate() != null)\r\n        sb.append(\"ObjectVersionUpdate: \").append(getObjectVersionUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateSecurityProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getSecurityProfileArn() != null)\r\n        sb.append(\"SecurityProfileArn: \").append(getSecurityProfileArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.UpdateChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.Disk.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getSizeInGb() != null)\r\n        sb.append(\"SizeInGb: \").append(getSizeInGb()).append(\",\");\r\n    if (getIsSystemDisk() != null)\r\n        sb.append(\"IsSystemDisk: \").append(getIsSystemDisk()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getAttachedTo() != null)\r\n        sb.append(\"AttachedTo: \").append(getAttachedTo()).append(\",\");\r\n    if (getIsAttached() != null)\r\n        sb.append(\"IsAttached: \").append(getIsAttached()).append(\",\");\r\n    if (getAttachmentState() != null)\r\n        sb.append(\"AttachmentState: \").append(getAttachmentState()).append(\",\");\r\n    if (getGbInUse() != null)\r\n        sb.append(\"GbInUse: \").append(getGbInUse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.AddApplicationReferenceDataSourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId()).append(\",\");\r\n    if (getReferenceDataSourceDescriptions() != null)\r\n        sb.append(\"ReferenceDataSourceDescriptions: \").append(getReferenceDataSourceDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.AddApplicationInputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.EffectivePolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListDatasetContentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAuthorizerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerName() != null)\r\n        sb.append(\"AuthorizerName: \").append(getAuthorizerName()).append(\",\");\r\n    if (getAuthorizerArn() != null)\r\n        sb.append(\"AuthorizerArn: \").append(getAuthorizerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getAscendingOrder() != null)\r\n        sb.append(\"AscendingOrder: \").append(getAscendingOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListSecurityProfilesForTargetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileTargetMappings() != null)\r\n        sb.append(\"SecurityProfileTargetMappings: \").append(getSecurityProfileTargetMappings()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.UpdateAssessmentTargetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeAsyncRequest.withInvokeArgs",
	"Comment": "json that you want to provide to your lambda function as input.",
	"Method": "InvokeAsyncRequest withInvokeArgs(java.io.InputStream invokeArgs,InvokeAsyncRequest withInvokeArgs,String invokeArgs){\r\n    setInvokeArgs(new com.amazonaws.adapters.types.StringToInputStreamAdapter().adapt(invokeArgs));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListLayersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.InstanceSnapshot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getProgress() != null)\r\n        sb.append(\"Progress: \").append(getProgress()).append(\",\");\r\n    if (getFromAttachedDisks() != null)\r\n        sb.append(\"FromAttachedDisks: \").append(getFromAttachedDisks()).append(\",\");\r\n    if (getFromInstanceName() != null)\r\n        sb.append(\"FromInstanceName: \").append(getFromInstanceName()).append(\",\");\r\n    if (getFromInstanceArn() != null)\r\n        sb.append(\"FromInstanceArn: \").append(getFromInstanceArn()).append(\",\");\r\n    if (getFromBlueprintId() != null)\r\n        sb.append(\"FromBlueprintId: \").append(getFromBlueprintId()).append(\",\");\r\n    if (getFromBundleId() != null)\r\n        sb.append(\"FromBundleId: \").append(getFromBundleId()).append(\",\");\r\n    if (getSizeInGb() != null)\r\n        sb.append(\"SizeInGb: \").append(getSizeInGb());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TestInvokeAuthorizerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerName() != null)\r\n        sb.append(\"AuthorizerName: \").append(getAuthorizerName()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken()).append(\",\");\r\n    if (getTokenSignature() != null)\r\n        sb.append(\"TokenSignature: \").append(getTokenSignature());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.RunConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationRestoreConfiguration() != null)\r\n        sb.append(\"ApplicationRestoreConfiguration: \").append(getApplicationRestoreConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoClient.listStreams",
	"Comment": "returns an array of streaminfo objects. each object describes a stream. to retrieve only streamsthat satisfy a specific condition, you can specify a streamnamecondition.",
	"Method": "ListStreamsResult listStreams(ListStreamsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListStreams(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SalesforceAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteRegistrationCodeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.FragmentSelector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFragmentSelectorType() != null)\r\n        sb.append(\"FragmentSelectorType: \").append(getFragmentSelectorType()).append(\",\");\r\n    if (getTimestampRange() != null)\r\n        sb.append(\"TimestampRange: \").append(getTimestampRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.deleteFunctionConcurrency",
	"Comment": "removes concurrent execution limits from this function. for more information, see managing concurrency.",
	"Method": "DeleteFunctionConcurrencyResult deleteFunctionConcurrency(DeleteFunctionConcurrencyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteFunctionConcurrency(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetImportResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getMergeStrategy() != null)\r\n        sb.append(\"MergeStrategy: \").append(getMergeStrategy()).append(\",\");\r\n    if (getImportId() != null)\r\n        sb.append(\"ImportId: \").append(getImportId()).append(\",\");\r\n    if (getImportStatus() != null)\r\n        sb.append(\"ImportStatus: \").append(getImportStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SigningProfileParameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getCertificatePathOnDevice() != null)\r\n        sb.append(\"CertificatePathOnDevice: \").append(getCertificatePathOnDevice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CancelPipelineReprocessingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getReprocessingId() != null)\r\n        sb.append(\"ReprocessingId: \").append(getReprocessingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.AmazonKinesisFirehoseClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DecryptRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCiphertextBlob() != null)\r\n        sb.append(\"CiphertextBlob: \").append(getCiphertextBlob()).append(\",\");\r\n    if (getEncryptionContext() != null)\r\n        sb.append(\"EncryptionContext: \").append(getEncryptionContext()).append(\",\");\r\n    if (getGrantTokens() != null)\r\n        sb.append(\"GrantTokens: \").append(getGrantTokens());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.S3Configuration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getFileKey() != null)\r\n        sb.append(\"FileKey: \").append(getFileKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ElasticsearchAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getIndex() != null)\r\n        sb.append(\"Index: \").append(getIndex()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StepFunctionsAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecutionNamePrefix() != null)\r\n        sb.append(\"ExecutionNamePrefix: \").append(getExecutionNamePrefix()).append(\",\");\r\n    if (getStateMachineName() != null)\r\n        sb.append(\"StateMachineName: \").append(getStateMachineName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.UnclaimDeviceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoArchivedMediaAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonkinesisvideoarchivedmediaasync using the current builderconfiguration.",
	"Method": "AmazonKinesisVideoArchivedMediaAsync build(AwsAsyncClientParams params){\r\n    return new AmazonKinesisVideoArchivedMediaAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.InstanceHardware.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCpuCount() != null)\r\n        sb.append(\"CpuCount: \").append(getCpuCount()).append(\",\");\r\n    if (getDisks() != null)\r\n        sb.append(\"Disks: \").append(getDisks()).append(\",\");\r\n    if (getRamSizeInGb() != null)\r\n        sb.append(\"RamSizeInGb: \").append(getRamSizeInGb());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.StartApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getRunConfiguration() != null)\r\n        sb.append(\"RunConfiguration: \").append(getRunConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeleteLayerVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateDiskFromSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskName() != null)\r\n        sb.append(\"DiskName: \").append(getDiskName()).append(\",\");\r\n    if (getDiskSnapshotName() != null)\r\n        sb.append(\"DiskSnapshotName: \").append(getDiskSnapshotName()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getSizeInGb() != null)\r\n        sb.append(\"SizeInGb: \").append(getSizeInGb()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Record.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSequenceNumber() != null)\r\n        sb.append(\"SequenceNumber: \").append(getSequenceNumber()).append(\",\");\r\n    if (getApproximateArrivalTimestamp() != null)\r\n        sb.append(\"ApproximateArrivalTimestamp: \").append(getApproximateArrivalTimestamp()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getPartitionKey() != null)\r\n        sb.append(\"PartitionKey: \").append(getPartitionKey()).append(\",\");\r\n    if (getEncryptionType() != null)\r\n        sb.append(\"EncryptionType: \").append(getEncryptionType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getCloudFormationStackRecords",
	"Comment": "returns the cloudformation stack record created as a result of the create cloud formation stackoperation.an aws cloudformation stack is used to create a new amazon ec2 instance from an exported lightsail snapshot.",
	"Method": "GetCloudFormationStackRecordsResult getCloudFormationStackRecords(GetCloudFormationStackRecordsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetCloudFormationStackRecords(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DescribePlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacement() != null)\r\n        sb.append(\"Placement: \").append(getPlacement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.Pipeline.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getActivities() != null)\r\n        sb.append(\"Activities: \").append(getActivities()).append(\",\");\r\n    if (getReprocessingSummaries() != null)\r\n        sb.append(\"ReprocessingSummaries: \").append(getReprocessingSummaries()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdateTime() != null)\r\n        sb.append(\"LastUpdateTime: \").append(getLastUpdateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.ReferenceDataSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getS3ReferenceDataSource() != null)\r\n        sb.append(\"S3ReferenceDataSource: \").append(getS3ReferenceDataSource()).append(\",\");\r\n    if (getReferenceSchema() != null)\r\n        sb.append(\"ReferenceSchema: \").append(getReferenceSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AuditNotificationTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetArn() != null)\r\n        sb.append(\"TargetArn: \").append(getTargetArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetKeyPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsRequestEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getExplicitHashKey() != null)\r\n        sb.append(\"ExplicitHashKey: \").append(getExplicitHashKey()).append(\",\");\r\n    if (getPartitionKey() != null)\r\n        sb.append(\"PartitionKey: \").append(getPartitionKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AttachDiskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteRelationalDatabaseSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseSnapshotName() != null)\r\n        sb.append(\"RelationalDatabaseSnapshotName: \").append(getRelationalDatabaseSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetOperationsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations()).append(\",\");\r\n    if (getNextPageCount() != null)\r\n        sb.append(\"NextPageCount: \").append(getNextPageCount()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetKeyPairResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyPair() != null)\r\n        sb.append(\"KeyPair: \").append(getKeyPair());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RelationalDatabaseEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.model.GenericAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getSubTitle() != null)\r\n        sb.append(\"SubTitle: \").append(getSubTitle()).append(\",\");\r\n    if (getAttachmentLinkUrl() != null)\r\n        sb.append(\"AttachmentLinkUrl: \").append(getAttachmentLinkUrl()).append(\",\");\r\n    if (getImageUrl() != null)\r\n        sb.append(\"ImageUrl: \").append(getImageUrl()).append(\",\");\r\n    if (getButtons() != null)\r\n        sb.append(\"Buttons: \").append(getButtons());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.addTagsToStream",
	"Comment": "adds or updates tags for the specified kinesis data stream. each time you invoke this operation, you can specifyup to 10 tags. if you want to add more than 10 tags to your stream, you can invoke this operation multiple times.in total, each stream can have up to 50 tags.if tags have already been assigned to the stream, addtagstostream overwrites any existing tags thatcorrespond to the specified tag keys.addtagstostream has a limit of five transactions per second per account.",
	"Method": "AddTagsToStreamResult addTagsToStream(AddTagsToStreamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddTagsToStream(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Policy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getInstances",
	"Comment": "returns information about all amazon lightsail virtual private servers, or instances.",
	"Method": "GetInstancesResult getInstances(GetInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseSnapshot() != null)\r\n        sb.append(\"RelationalDatabaseSnapshot: \").append(getRelationalDatabaseSnapshot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DeleteApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCreateTimestamp() != null)\r\n        sb.append(\"CreateTimestamp: \").append(getCreateTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.VpcConfigResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.OrganizationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnableIntegration() != null)\r\n        sb.append(\"EnableIntegration: \").append(getEnableIntegration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.deleteThingType",
	"Comment": "deletes the specified thing type. you cannot delete a thing type if it has things associated with it. to delete athing type, first mark it as deprecated by calling deprecatethingtype, then remove any associated thingsby calling updatething to change the thing type on any associated thing, and finally usedeletethingtype to delete the thing type.",
	"Method": "DeleteThingTypeResult deleteThingType(DeleteThingTypeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteThingType(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.UntagDeliveryStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputStartingPositionConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputStartingPosition() != null)\r\n        sb.append(\"InputStartingPosition: \").append(getInputStartingPosition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StopStreamEncryptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CloudWatchLoggingOptionDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudWatchLoggingOptionId() != null)\r\n        sb.append(\"CloudWatchLoggingOptionId: \").append(getCloudWatchLoggingOptionId()).append(\",\");\r\n    if (getLogStreamARN() != null)\r\n        sb.append(\"LogStreamARN: \").append(getLogStreamARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationInputProcessingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListEventSourceMappingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getEventSourceMappings() != null)\r\n        sb.append(\"EventSourceMappings: \").append(getEventSourceMappings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DescribeLoggingOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggingOptions() != null)\r\n        sb.append(\"LoggingOptions: \").append(getLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Consumer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConsumerName() != null)\r\n        sb.append(\"ConsumerName: \").append(getConsumerName()).append(\",\");\r\n    if (getConsumerARN() != null)\r\n        sb.append(\"ConsumerARN: \").append(getConsumerARN()).append(\",\");\r\n    if (getConsumerStatus() != null)\r\n        sb.append(\"ConsumerStatus: \").append(getConsumerStatus()).append(\",\");\r\n    if (getConsumerCreationTimestamp() != null)\r\n        sb.append(\"ConsumerCreationTimestamp: \").append(getConsumerCreationTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetExportResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getExportType() != null)\r\n        sb.append(\"ExportType: \").append(getExportType()).append(\",\");\r\n    if (getExportStatus() != null)\r\n        sb.append(\"ExportStatus: \").append(getExportStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getNewStatus() != null)\r\n        sb.append(\"NewStatus: \").append(getNewStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.Blueprint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlueprintId() != null)\r\n        sb.append(\"BlueprintId: \").append(getBlueprintId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getIsActive() != null)\r\n        sb.append(\"IsActive: \").append(getIsActive()).append(\",\");\r\n    if (getMinPower() != null)\r\n        sb.append(\"MinPower: \").append(getMinPower()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getVersionCode() != null)\r\n        sb.append(\"VersionCode: \").append(getVersionCode()).append(\",\");\r\n    if (getProductUrl() != null)\r\n        sb.append(\"ProductUrl: \").append(getProductUrl()).append(\",\");\r\n    if (getLicenseUrl() != null)\r\n        sb.append(\"LicenseUrl: \").append(getLicenseUrl()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.CreateFunctionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getRuntime() != null)\r\n        sb.append(\"Runtime: \").append(getRuntime()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getHandler() != null)\r\n        sb.append(\"Handler: \").append(getHandler()).append(\",\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getMemorySize() != null)\r\n        sb.append(\"MemorySize: \").append(getMemorySize()).append(\",\");\r\n    if (getPublish() != null)\r\n        sb.append(\"Publish: \").append(getPublish()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getDeadLetterConfig() != null)\r\n        sb.append(\"DeadLetterConfig: \").append(getDeadLetterConfig()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getKMSKeyArn() != null)\r\n        sb.append(\"KMSKeyArn: \").append(getKMSKeyArn()).append(\",\");\r\n    if (getTracingConfig() != null)\r\n        sb.append(\"TracingConfig: \").append(getTracingConfig()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteBotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateScheduledAuditRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrequency() != null)\r\n        sb.append(\"Frequency: \").append(getFrequency()).append(\",\");\r\n    if (getDayOfMonth() != null)\r\n        sb.append(\"DayOfMonth: \").append(getDayOfMonth()).append(\",\");\r\n    if (getDayOfWeek() != null)\r\n        sb.append(\"DayOfWeek: \").append(getDayOfWeek()).append(\",\");\r\n    if (getTargetCheckNames() != null)\r\n        sb.append(\"TargetCheckNames: \").append(getTargetCheckNames()).append(\",\");\r\n    if (getScheduledAuditName() != null)\r\n        sb.append(\"ScheduledAuditName: \").append(getScheduledAuditName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CodeContentUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTextContentUpdate() != null)\r\n        sb.append(\"TextContentUpdate: \").append(getTextContentUpdate()).append(\",\");\r\n    if (getZipFileContentUpdate() != null)\r\n        sb.append(\"ZipFileContentUpdate: \").append(getZipFileContentUpdate()).append(\",\");\r\n    if (getS3ContentLocationUpdate() != null)\r\n        sb.append(\"S3ContentLocationUpdate: \").append(getS3ContentLocationUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.BrokerSoftwareInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationArn() != null)\r\n        sb.append(\"ConfigurationArn: \").append(getConfigurationArn()).append(\",\");\r\n    if (getConfigurationRevision() != null)\r\n        sb.append(\"ConfigurationRevision: \").append(getConfigurationRevision()).append(\",\");\r\n    if (getKafkaVersion() != null)\r\n        sb.append(\"KafkaVersion: \").append(getKafkaVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetOperationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.ReferenceDataSourceUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReferenceId() != null)\r\n        sb.append(\"ReferenceId: \").append(getReferenceId()).append(\",\");\r\n    if (getTableNameUpdate() != null)\r\n        sb.append(\"TableNameUpdate: \").append(getTableNameUpdate()).append(\",\");\r\n    if (getS3ReferenceDataSourceUpdate() != null)\r\n        sb.append(\"S3ReferenceDataSourceUpdate: \").append(getS3ReferenceDataSourceUpdate()).append(\",\");\r\n    if (getReferenceSchemaUpdate() != null)\r\n        sb.append(\"ReferenceSchemaUpdate: \").append(getReferenceSchemaUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListLicenseConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArns() != null)\r\n        sb.append(\"LicenseConfigurationArns: \").append(getLicenseConfigurationArns()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesClient.finalizeDeviceClaim",
	"Comment": "given a device id, finalizes the claim request for the associated device.claiming a device consists of initiating a claim, then publishing a device event, and finalizing the claim. for adevice of type button, a device event can be published by simply clicking the device.",
	"Method": "FinalizeDeviceClaimResult finalizeDeviceClaim(FinalizeDeviceClaimRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeFinalizeDeviceClaim(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDisksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListOutgoingCertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutgoingCertificates() != null)\r\n        sb.append(\"OutgoingCertificates: \").append(getOutgoingCertificates()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingConnectivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnected() != null)\r\n        sb.append(\"Connected: \").append(getConnected()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.SplitShardResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.EncryptResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCiphertextBlob() != null)\r\n        sb.append(\"CiphertextBlob: \").append(getCiphertextBlob()).append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamInfo() != null)\r\n        sb.append(\"StreamInfo: \").append(getStreamInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.GetDevicesInPlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevices() != null)\r\n        sb.append(\"Devices: \").append(getDevices());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseEvents() != null)\r\n        sb.append(\"RelationalDatabaseEvents: \").append(getRelationalDatabaseEvents()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.RecordColumn.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMapping() != null)\r\n        sb.append(\"Mapping: \").append(getMapping()).append(\",\");\r\n    if (getSqlType() != null)\r\n        sb.append(\"SqlType: \").append(getSqlType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputLambdaProcessorUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetActiveNamesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActiveNames() != null)\r\n        sb.append(\"ActiveNames: \").append(getActiveNames()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.UpdateProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.BotChannelAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getBotAlias() != null)\r\n        sb.append(\"BotAlias: \").append(getBotAlias()).append(\",\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getBotConfiguration() != null)\r\n        sb.append(\"BotConfiguration: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.FunctionCode.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getZipFile() != null)\r\n        sb.append(\"ZipFile: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Key() != null)\r\n        sb.append(\"S3Key: \").append(getS3Key()).append(\",\");\r\n    if (getS3ObjectVersion() != null)\r\n        sb.append(\"S3ObjectVersion: \").append(getS3ObjectVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DestinationSchema.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordFormatType() != null)\r\n        sb.append(\"RecordFormatType: \").append(getRecordFormatType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DescribeDatasetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataset() != null)\r\n        sb.append(\"Dataset: \").append(getDataset());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.DescribeStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.HLSTimestampRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartTimestamp() != null)\r\n        sb.append(\"StartTimestamp: \").append(getStartTimestamp()).append(\",\");\r\n    if (getEndTimestamp() != null)\r\n        sb.append(\"EndTimestamp: \").append(getEndTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateRelationalDatabaseFromSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getRelationalDatabaseSnapshotName() != null)\r\n        sb.append(\"RelationalDatabaseSnapshotName: \").append(getRelationalDatabaseSnapshotName()).append(\",\");\r\n    if (getRelationalDatabaseBundleId() != null)\r\n        sb.append(\"RelationalDatabaseBundleId: \").append(getRelationalDatabaseBundleId()).append(\",\");\r\n    if (getSourceRelationalDatabaseName() != null)\r\n        sb.append(\"SourceRelationalDatabaseName: \").append(getSourceRelationalDatabaseName()).append(\",\");\r\n    if (getRestoreTime() != null)\r\n        sb.append(\"RestoreTime: \").append(getRestoreTime()).append(\",\");\r\n    if (getUseLatestRestorableTime() != null)\r\n        sb.append(\"UseLatestRestorableTime: \").append(getUseLatestRestorableTime()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DescribePipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipeline() != null)\r\n        sb.append(\"Pipeline: \").append(getPipeline());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeyPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyNames() != null)\r\n        sb.append(\"PolicyNames: \").append(getPolicyNames()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getTruncated() != null)\r\n        sb.append(\"Truncated: \").append(getTruncated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ExtendedS3DestinationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getBufferingHints() != null)\r\n        sb.append(\"BufferingHints: \").append(getBufferingHints()).append(\",\");\r\n    if (getCompressionFormat() != null)\r\n        sb.append(\"CompressionFormat: \").append(getCompressionFormat()).append(\",\");\r\n    if (getEncryptionConfiguration() != null)\r\n        sb.append(\"EncryptionConfiguration: \").append(getEncryptionConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3BackupConfiguration() != null)\r\n        sb.append(\"S3BackupConfiguration: \").append(getS3BackupConfiguration()).append(\",\");\r\n    if (getDataFormatConversionConfiguration() != null)\r\n        sb.append(\"DataFormatConversionConfiguration: \").append(getDataFormatConversionConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DetachSecurityProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerClient.listLicenseConfigurations",
	"Comment": "lists license configuration objects for an account, each containing the name, description, license type, andother license terms modeled from a license agreement.",
	"Method": "ListLicenseConfigurationsResult listLicenseConfigurations(ListLicenseConfigurationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListLicenseConfigurations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.AddAttributesActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getNext() != null)\r\n        sb.append(\"Next: \").append(getNext());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.GetDatasetContentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntries() != null)\r\n        sb.append(\"Entries: \").append(getEntries()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetAccountSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonkinesisvideo using the current builder configuration.",
	"Method": "AmazonKinesisVideo build(AwsSyncClientParams params){\r\n    return new AmazonKinesisVideoClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeCACertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.CreateIntentVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputLambdaProcessor.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.PutMediaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getFragmentTimecodeType() != null)\r\n        sb.append(\"FragmentTimecodeType: \").append(getFragmentTimecodeType()).append(\",\");\r\n    if (getProducerStartTimestamp() != null)\r\n        sb.append(\"ProducerStartTimestamp: \").append(getProducerStartTimestamp()).append(\",\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(getPayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.DeleteThingShadowResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(getPayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstance() != null)\r\n        sb.append(\"Instance: \").append(getInstance());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.GetRecordsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShardIterator() != null)\r\n        sb.append(\"ShardIterator: \").append(getShardIterator()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputProcessingConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputLambdaProcessorUpdate() != null)\r\n        sb.append(\"InputLambdaProcessorUpdate: \").append(getInputLambdaProcessorUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.OrcSerDe.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStripeSizeBytes() != null)\r\n        sb.append(\"StripeSizeBytes: \").append(getStripeSizeBytes()).append(\",\");\r\n    if (getBlockSizeBytes() != null)\r\n        sb.append(\"BlockSizeBytes: \").append(getBlockSizeBytes()).append(\",\");\r\n    if (getRowIndexStride() != null)\r\n        sb.append(\"RowIndexStride: \").append(getRowIndexStride()).append(\",\");\r\n    if (getEnablePadding() != null)\r\n        sb.append(\"EnablePadding: \").append(getEnablePadding()).append(\",\");\r\n    if (getPaddingTolerance() != null)\r\n        sb.append(\"PaddingTolerance: \").append(getPaddingTolerance()).append(\",\");\r\n    if (getCompression() != null)\r\n        sb.append(\"Compression: \").append(getCompression()).append(\",\");\r\n    if (getBloomFilterColumns() != null)\r\n        sb.append(\"BloomFilterColumns: \").append(getBloomFilterColumns()).append(\",\");\r\n    if (getBloomFilterFalsePositiveProbability() != null)\r\n        sb.append(\"BloomFilterFalsePositiveProbability: \").append(getBloomFilterFalsePositiveProbability()).append(\",\");\r\n    if (getDictionaryKeyThreshold() != null)\r\n        sb.append(\"DictionaryKeyThreshold: \").append(getDictionaryKeyThreshold()).append(\",\");\r\n    if (getFormatVersion() != null)\r\n        sb.append(\"FormatVersion: \").append(getFormatVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteIntentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationDescription() != null)\r\n        sb.append(\"ApplicationDescription: \").append(getApplicationDescription()).append(\",\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getRuntimeEnvironment() != null)\r\n        sb.append(\"RuntimeEnvironment: \").append(getRuntimeEnvironment()).append(\",\");\r\n    if (getServiceExecutionRole() != null)\r\n        sb.append(\"ServiceExecutionRole: \").append(getServiceExecutionRole()).append(\",\");\r\n    if (getApplicationStatus() != null)\r\n        sb.append(\"ApplicationStatus: \").append(getApplicationStatus()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId()).append(\",\");\r\n    if (getCreateTimestamp() != null)\r\n        sb.append(\"CreateTimestamp: \").append(getCreateTimestamp()).append(\",\");\r\n    if (getLastUpdateTimestamp() != null)\r\n        sb.append(\"LastUpdateTimestamp: \").append(getLastUpdateTimestamp()).append(\",\");\r\n    if (getApplicationConfigurationDescription() != null)\r\n        sb.append(\"ApplicationConfigurationDescription: \").append(getApplicationConfigurationDescription()).append(\",\");\r\n    if (getCloudWatchLoggingOptionDescriptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptionDescriptions: \").append(getCloudWatchLoggingOptionDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonkinesis using the current builder configuration.",
	"Method": "AmazonKinesis build(AwsSyncClientParams params){\r\n    return new AmazonKinesisClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Shard.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShardId() != null)\r\n        sb.append(\"ShardId: \").append(getShardId()).append(\",\");\r\n    if (getParentShardId() != null)\r\n        sb.append(\"ParentShardId: \").append(getParentShardId()).append(\",\");\r\n    if (getAdjacentParentShardId() != null)\r\n        sb.append(\"AdjacentParentShardId: \").append(getAdjacentParentShardId()).append(\",\");\r\n    if (getHashKeyRange() != null)\r\n        sb.append(\"HashKeyRange: \").append(getHashKeyRange()).append(\",\");\r\n    if (getSequenceNumberRange() != null)\r\n        sb.append(\"SequenceNumberRange: \").append(getSequenceNumberRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getInstance",
	"Comment": "returns information about a specific amazon lightsail instance, which is a virtual private server.",
	"Method": "GetInstanceResult getInstance(GetInstanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetInstance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordId() != null)\r\n        sb.append(\"RecordId: \").append(getRecordId()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.createThing",
	"Comment": "creates a thing record in the registry.this is a control plane operation. see authorization for informationabout authorizing control plane actions.",
	"Method": "CreateThingResult createThing(CreateThingRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateThing(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SetDefaultPolicyVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyVersionId() != null)\r\n        sb.append(\"PolicyVersionId: \").append(getPolicyVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DeleteApplicationOutputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.model.PostContentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getBotAlias() != null)\r\n        sb.append(\"BotAlias: \").append(getBotAlias()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getSessionAttributes() != null)\r\n        sb.append(\"SessionAttributes: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRequestAttributes() != null)\r\n        sb.append(\"RequestAttributes: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getAccept() != null)\r\n        sb.append(\"Accept: \").append(getAccept()).append(\",\");\r\n    if (getInputStream() != null)\r\n        sb.append(\"InputStream: \").append(getInputStream());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.registerStreamConsumer",
	"Comment": "registers a consumer with a kinesis data stream. when you use this operation, the consumer you register can readdata from the stream at a rate of up to 2 mib per second. this rate is unaffected by the total number ofconsumers that read from the same stream.you can register up to 5 consumers per stream. a given consumer can only be registered with one stream.this operation has a limit of five transactions per second per account.",
	"Method": "RegisterStreamConsumerResult registerStreamConsumer(RegisterStreamConsumerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRegisterStreamConsumer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetJobDocumentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListRoleAliasesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleAliases() != null)\r\n        sb.append(\"RoleAliases: \").append(getRoleAliases()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CSVMappingParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordRowDelimiter() != null)\r\n        sb.append(\"RecordRowDelimiter: \").append(getRecordRowDelimiter()).append(\",\");\r\n    if (getRecordColumnDelimiter() != null)\r\n        sb.append(\"RecordColumnDelimiter: \").append(getRecordColumnDelimiter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DiscoverInputSchemaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getServiceExecutionRole() != null)\r\n        sb.append(\"ServiceExecutionRole: \").append(getServiceExecutionRole()).append(\",\");\r\n    if (getInputStartingPositionConfiguration() != null)\r\n        sb.append(\"InputStartingPositionConfiguration: \").append(getInputStartingPositionConfiguration()).append(\",\");\r\n    if (getS3Configuration() != null)\r\n        sb.append(\"S3Configuration: \").append(getS3Configuration()).append(\",\");\r\n    if (getInputProcessingConfiguration() != null)\r\n        sb.append(\"InputProcessingConfiguration: \").append(getInputProcessingConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListAssociationsForLicenseConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.CreateLicenseConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLicenseCountingType() != null)\r\n        sb.append(\"LicenseCountingType: \").append(getLicenseCountingType()).append(\",\");\r\n    if (getLicenseCount() != null)\r\n        sb.append(\"LicenseCount: \").append(getLicenseCount()).append(\",\");\r\n    if (getLicenseCountHardLimit() != null)\r\n        sb.append(\"LicenseCountHardLimit: \").append(getLicenseCountHardLimit()).append(\",\");\r\n    if (getLicenseRules() != null)\r\n        sb.append(\"LicenseRules: \").append(getLicenseRules()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.UpdatePlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegisterCertificateRequest.withSetAsActive",
	"Comment": "a boolean value that specifies if the ca certificate is set to active.",
	"Method": "RegisterCertificateRequest withSetAsActive(Boolean setAsActive){\r\n    setSetAsActive(setAsActive);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClient.deleteDataset",
	"Comment": "deletes the specified data set.you do not have to delete the content of the data set before you perform this operation.",
	"Method": "DeleteDatasetResult deleteDataset(DeleteDatasetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDataset(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationOutputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.EnableTopicRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CreateDatasetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName()).append(\",\");\r\n    if (getDatasetArn() != null)\r\n        sb.append(\"DatasetArn: \").append(getDatasetArn()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.UtteranceList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBotVersion() != null)\r\n        sb.append(\"BotVersion: \").append(getBotVersion()).append(\",\");\r\n    if (getUtterances() != null)\r\n        sb.append(\"Utterances: \").append(getUtterances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteAccountAuditConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CloudWatchLoggingOptionUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudWatchLoggingOptionId() != null)\r\n        sb.append(\"CloudWatchLoggingOptionId: \").append(getCloudWatchLoggingOptionId()).append(\",\");\r\n    if (getLogStreamARNUpdate() != null)\r\n        sb.append(\"LogStreamARNUpdate: \").append(getLogStreamARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DeleteCustomKeyStoreRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomKeyStoreId() != null)\r\n        sb.append(\"CustomKeyStoreId: \").append(getCustomKeyStoreId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListPrincipalPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RemoveThingFromThingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListFragmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFragments() != null)\r\n        sb.append(\"Fragments: \").append(getFragments()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListStreamsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamNames() != null)\r\n        sb.append(\"StreamNames: \").append(getStreamNames()).append(\",\");\r\n    if (getHasMoreStreams() != null)\r\n        sb.append(\"HasMoreStreams: \").append(getHasMoreStreams());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DescribeApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DeviceTemplate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceType() != null)\r\n        sb.append(\"DeviceType: \").append(getDeviceType()).append(\",\");\r\n    if (getCallbackOverrides() != null)\r\n        sb.append(\"CallbackOverrides: \").append(getCallbackOverrides());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DeleteImportedKeyMaterialRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getBlueprints",
	"Comment": "returns the list of available instance images, or blueprints. you can use a blueprint to create a newvirtual private server already running a specific operating system, as well as a preinstalled app or developmentstack. the software each instance is running depends on the blueprint image you choose.",
	"Method": "GetBlueprintsResult getBlueprints(GetBlueprintsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetBlueprints(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TopicRulePayload.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSql() != null)\r\n        sb.append(\"Sql: \").append(getSql()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions()).append(\",\");\r\n    if (getRuleDisabled() != null)\r\n        sb.append(\"RuleDisabled: \").append(getRuleDisabled()).append(\",\");\r\n    if (getAwsIotSqlVersion() != null)\r\n        sb.append(\"AwsIotSqlVersion: \").append(getAwsIotSqlVersion()).append(\",\");\r\n    if (getErrorAction() != null)\r\n        sb.append(\"ErrorAction: \").append(getErrorAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.VpcConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListAuditFindingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId()).append(\",\");\r\n    if (getCheckName() != null)\r\n        sb.append(\"CheckName: \").append(getCheckName()).append(\",\");\r\n    if (getResourceIdentifier() != null)\r\n        sb.append(\"ResourceIdentifier: \").append(getResourceIdentifier()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AuditCheckConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputProcessingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputLambdaProcessor() != null)\r\n        sb.append(\"InputLambdaProcessor: \").append(getInputLambdaProcessor());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.AssociateDeviceWithPlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getPlacementName() != null)\r\n        sb.append(\"PlacementName: \").append(getPlacementName()).append(\",\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId()).append(\",\");\r\n    if (getDeviceTemplateName() != null)\r\n        sb.append(\"DeviceTemplateName: \").append(getDeviceTemplateName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.CreateClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterArn() != null)\r\n        sb.append(\"ClusterArn: \").append(getClusterArn()).append(\",\");\r\n    if (getClusterName() != null)\r\n        sb.append(\"ClusterName: \").append(getClusterName()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListStreamsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreams() != null)\r\n        sb.append(\"Streams: \").append(getStreams()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ContainerDatasetAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getExecutionRoleArn() != null)\r\n        sb.append(\"ExecutionRoleArn: \").append(getExecutionRoleArn()).append(\",\");\r\n    if (getResourceConfiguration() != null)\r\n        sb.append(\"ResourceConfiguration: \").append(getResourceConfiguration()).append(\",\");\r\n    if (getVariables() != null)\r\n        sb.append(\"Variables: \").append(getVariables());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisStreamsInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName()).append(\",\");\r\n    if (getSnapshotCreationTimestamp() != null)\r\n        sb.append(\"SnapshotCreationTimestamp: \").append(getSnapshotCreationTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsiotasync using the current builder configuration.",
	"Method": "AWSIotAsync build(AwsAsyncClientParams params){\r\n    return new AWSIotAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoArchivedMediaClient.listFragments",
	"Comment": "returns a list of fragment objects from the specified stream and start location within the archived data.",
	"Method": "ListFragmentsResult listFragments(ListFragmentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListFragments(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeleteEventSourceMappingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUUID() != null)\r\n        sb.append(\"UUID: \").append(getUUID()).append(\",\");\r\n    if (getBatchSize() != null)\r\n        sb.append(\"BatchSize: \").append(getBatchSize()).append(\",\");\r\n    if (getEventSourceArn() != null)\r\n        sb.append(\"EventSourceArn: \").append(getEventSourceArn()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getLastProcessingResult() != null)\r\n        sb.append(\"LastProcessingResult: \").append(getLastProcessingResult()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateTransitionReason() != null)\r\n        sb.append(\"StateTransitionReason: \").append(getStateTransitionReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListV2LoggingLevelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogTargetConfigurations() != null)\r\n        sb.append(\"LogTargetConfigurations: \").append(getLogTargetConfigurations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceAccessDetailsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccessDetails() != null)\r\n        sb.append(\"AccessDetails: \").append(getAccessDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.LogEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputSchemaUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordFormatUpdate() != null)\r\n        sb.append(\"RecordFormatUpdate: \").append(getRecordFormatUpdate()).append(\",\");\r\n    if (getRecordEncodingUpdate() != null)\r\n        sb.append(\"RecordEncodingUpdate: \").append(getRecordEncodingUpdate()).append(\",\");\r\n    if (getRecordColumnUpdates() != null)\r\n        sb.append(\"RecordColumnUpdates: \").append(getRecordColumnUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListRetirableGrantsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getRetiringPrincipal() != null)\r\n        sb.append(\"RetiringPrincipal: \").append(getRetiringPrincipal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.GetLicenseConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.StopAssessmentRunRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunArn() != null)\r\n        sb.append(\"AssessmentRunArn: \").append(getAssessmentRunArn()).append(\",\");\r\n    if (getStopAction() != null)\r\n        sb.append(\"StopAction: \").append(getStopAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SearchIndexRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getQueryString() != null)\r\n        sb.append(\"QueryString: \").append(getQueryString()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getQueryVersion() != null)\r\n        sb.append(\"QueryVersion: \").append(getQueryVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeprecateThingTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DetachPrincipalPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.LogTargetConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogTarget() != null)\r\n        sb.append(\"LogTarget: \").append(getLogTarget()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.SecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupId() != null)\r\n        sb.append(\"GroupId: \").append(getGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabaseEvents",
	"Comment": "returns a list of events for a specific database in amazon lightsail.",
	"Method": "GetRelationalDatabaseEventsResult getRelationalDatabaseEvents(GetRelationalDatabaseEventsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabaseEvents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteIntentVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AbortConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCriteriaList() != null)\r\n        sb.append(\"CriteriaList: \").append(getCriteriaList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.CloudWatchLoggingOptionUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudWatchLoggingOptionId() != null)\r\n        sb.append(\"CloudWatchLoggingOptionId: \").append(getCloudWatchLoggingOptionId()).append(\",\");\r\n    if (getLogStreamARNUpdate() != null)\r\n        sb.append(\"LogStreamARNUpdate: \").append(getLogStreamARNUpdate()).append(\",\");\r\n    if (getRoleARNUpdate() != null)\r\n        sb.append(\"RoleARNUpdate: \").append(getRoleARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.DestinationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationId() != null)\r\n        sb.append(\"DestinationId: \").append(getDestinationId()).append(\",\");\r\n    if (getS3DestinationDescription() != null)\r\n        sb.append(\"S3DestinationDescription: \").append(getS3DestinationDescription()).append(\",\");\r\n    if (getExtendedS3DestinationDescription() != null)\r\n        sb.append(\"ExtendedS3DestinationDescription: \").append(getExtendedS3DestinationDescription()).append(\",\");\r\n    if (getRedshiftDestinationDescription() != null)\r\n        sb.append(\"RedshiftDestinationDescription: \").append(getRedshiftDestinationDescription()).append(\",\");\r\n    if (getElasticsearchDestinationDescription() != null)\r\n        sb.append(\"ElasticsearchDestinationDescription: \").append(getElasticsearchDestinationDescription()).append(\",\");\r\n    if (getSplunkDestinationDescription() != null)\r\n        sb.append(\"SplunkDestinationDescription: \").append(getSplunkDestinationDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RelationalDatabaseEndpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DiscoverInputSchemaResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputSchema() != null)\r\n        sb.append(\"InputSchema: \").append(getInputSchema()).append(\",\");\r\n    if (getParsedInputRecords() != null)\r\n        sb.append(\"ParsedInputRecords: \").append(getParsedInputRecords()).append(\",\");\r\n    if (getProcessedInputRecords() != null)\r\n        sb.append(\"ProcessedInputRecords: \").append(getProcessedInputRecords()).append(\",\");\r\n    if (getRawInputRecords() != null)\r\n        sb.append(\"RawInputRecords: \").append(getRawInputRecords());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.listCertificatesByCA",
	"Comment": "list the device certificates signed by the specified ca certificate.",
	"Method": "ListCertificatesByCAResult listCertificatesByCA(ListCertificatesByCARequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListCertificatesByCA(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AttachPrincipalPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetMediaForFragmentListRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getFragments() != null)\r\n        sb.append(\"Fragments: \").append(getFragments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListJobExecutionsForJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.OTAUpdateInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOtaUpdateId() != null)\r\n        sb.append(\"OtaUpdateId: \").append(getOtaUpdateId()).append(\",\");\r\n    if (getOtaUpdateArn() != null)\r\n        sb.append(\"OtaUpdateArn: \").append(getOtaUpdateArn()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getAwsJobExecutionsRolloutConfig() != null)\r\n        sb.append(\"AwsJobExecutionsRolloutConfig: \").append(getAwsJobExecutionsRolloutConfig()).append(\",\");\r\n    if (getTargetSelection() != null)\r\n        sb.append(\"TargetSelection: \").append(getTargetSelection()).append(\",\");\r\n    if (getOtaUpdateFiles() != null)\r\n        sb.append(\"OtaUpdateFiles: \").append(getOtaUpdateFiles()).append(\",\");\r\n    if (getOtaUpdateStatus() != null)\r\n        sb.append(\"OtaUpdateStatus: \").append(getOtaUpdateStatus()).append(\",\");\r\n    if (getAwsIotJobId() != null)\r\n        sb.append(\"AwsIotJobId: \").append(getAwsIotJobId()).append(\",\");\r\n    if (getAwsIotJobArn() != null)\r\n        sb.append(\"AwsIotJobArn: \").append(getAwsIotJobArn()).append(\",\");\r\n    if (getErrorInfo() != null)\r\n        sb.append(\"ErrorInfo: \").append(getErrorInfo()).append(\",\");\r\n    if (getAdditionalParameters() != null)\r\n        sb.append(\"AdditionalParameters: \").append(getAdditionalParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListJobExecutionsForJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecutionSummaries() != null)\r\n        sb.append(\"ExecutionSummaries: \").append(getExecutionSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getKeyUsage() != null)\r\n        sb.append(\"KeyUsage: \").append(getKeyUsage()).append(\",\");\r\n    if (getOrigin() != null)\r\n        sb.append(\"Origin: \").append(getOrigin()).append(\",\");\r\n    if (getCustomKeyStoreId() != null)\r\n        sb.append(\"CustomKeyStoreId: \").append(getCustomKeyStoreId()).append(\",\");\r\n    if (getBypassPolicyLockoutSafetyCheck() != null)\r\n        sb.append(\"BypassPolicyLockoutSafetyCheck: \").append(getBypassPolicyLockoutSafetyCheck()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClient.describeLoggingOptions",
	"Comment": "retrieves the current settings of the aws iot analytics logging options.",
	"Method": "DescribeLoggingOptionsResult describeLoggingOptions(DescribeLoggingOptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeLoggingOptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabases",
	"Comment": "returns information about all of your databases in amazon lightsail.",
	"Method": "GetRelationalDatabasesResult getRelationalDatabases(GetRelationalDatabasesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabases(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListCACertificatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getAscendingOrder() != null)\r\n        sb.append(\"AscendingOrder: \").append(getAscendingOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListUsageForLicenseConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.LicenseConfigurationUsage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceStatus() != null)\r\n        sb.append(\"ResourceStatus: \").append(getResourceStatus()).append(\",\");\r\n    if (getResourceOwnerId() != null)\r\n        sb.append(\"ResourceOwnerId: \").append(getResourceOwnerId()).append(\",\");\r\n    if (getAssociationTime() != null)\r\n        sb.append(\"AssociationTime: \").append(getAssociationTime()).append(\",\");\r\n    if (getConsumedLicenses() != null)\r\n        sb.append(\"ConsumedLicenses: \").append(getConsumedLicenses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetOTAUpdateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOtaUpdateInfo() != null)\r\n        sb.append(\"OtaUpdateInfo: \").append(getOtaUpdateInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.MathActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getMath() != null)\r\n        sb.append(\"Math: \").append(getMath()).append(\",\");\r\n    if (getNext() != null)\r\n        sb.append(\"Next: \").append(getNext());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClient.startPipelineReprocessing",
	"Comment": "starts the reprocessing of raw message data through the pipeline.",
	"Method": "StartPipelineReprocessingResult startPipelineReprocessing(StartPipelineReprocessingRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartPipelineReprocessing(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.ReleaseStaticIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateDynamicThingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getThingGroupProperties() != null)\r\n        sb.append(\"ThingGroupProperties: \").append(getThingGroupProperties()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion()).append(\",\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getQueryString() != null)\r\n        sb.append(\"QueryString: \").append(getQueryString()).append(\",\");\r\n    if (getQueryVersion() != null)\r\n        sb.append(\"QueryVersion: \").append(getQueryVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getLoadBalancers",
	"Comment": "returns information about all load balancers in an account.if you are describing a long list of load balancers, you can paginate the output to make the list moremanageable. you can use the pagetoken and nextpagetoken values to retrieve the next items in the list.",
	"Method": "GetLoadBalancersResult getLoadBalancers(GetLoadBalancersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLoadBalancers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeletePipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AttachPrincipalPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.ListClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterNameFilter() != null)\r\n        sb.append(\"ClusterNameFilter: \").append(getClusterNameFilter()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisStreamsOutputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate()).append(\",\");\r\n    if (getRoleARNUpdate() != null)\r\n        sb.append(\"RoleARNUpdate: \").append(getRoleARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getForceDelete() != null)\r\n        sb.append(\"ForceDelete: \").append(getForceDelete());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.AddApplicationOutputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.RedshiftDestinationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getClusterJDBCURL() != null)\r\n        sb.append(\"ClusterJDBCURL: \").append(getClusterJDBCURL()).append(\",\");\r\n    if (getCopyCommand() != null)\r\n        sb.append(\"CopyCommand: \").append(getCopyCommand()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRetryOptions() != null)\r\n        sb.append(\"RetryOptions: \").append(getRetryOptions()).append(\",\");\r\n    if (getS3DestinationDescription() != null)\r\n        sb.append(\"S3DestinationDescription: \").append(getS3DestinationDescription()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3BackupDescription() != null)\r\n        sb.append(\"S3BackupDescription: \").append(getS3BackupDescription()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SnsAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetArn() != null)\r\n        sb.append(\"TargetArn: \").append(getTargetArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getMessageFormat() != null)\r\n        sb.append(\"MessageFormat: \").append(getMessageFormat());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.AmazonLexModelBuildingAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.AmazonLexModelBuildingAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonlexmodelbuildingasync using the current builder configuration.",
	"Method": "AmazonLexModelBuildingAsync build(AwsAsyncClientParams params){\r\n    return new AmazonLexModelBuildingAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.registerCertificate",
	"Comment": "registers a device certificate with aws iot. if you have more than one ca certificate that has the same subjectfield, you must specify the ca certificate that was used to sign the device certificate being registered.",
	"Method": "RegisterCertificateResult registerCertificate(RegisterCertificateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRegisterCertificate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationSnapshotConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotsEnabled() != null)\r\n        sb.append(\"SnapshotsEnabled: \").append(getSnapshotsEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.StartInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDiskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskName() != null)\r\n        sb.append(\"DiskName: \").append(getDiskName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingTypeDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName()).append(\",\");\r\n    if (getThingTypeArn() != null)\r\n        sb.append(\"ThingTypeArn: \").append(getThingTypeArn()).append(\",\");\r\n    if (getThingTypeProperties() != null)\r\n        sb.append(\"ThingTypeProperties: \").append(getThingTypeProperties()).append(\",\");\r\n    if (getThingTypeMetadata() != null)\r\n        sb.append(\"ThingTypeMetadata: \").append(getThingTypeMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteSlotTypeVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.LoadBalancerTlsCertificateSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getIsAttached() != null)\r\n        sb.append(\"IsAttached: \").append(getIsAttached());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeletePolicyVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetOTAUpdateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOtaUpdateId() != null)\r\n        sb.append(\"OtaUpdateId: \").append(getOtaUpdateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteThingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisStreamsOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ResourceIdentifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceCertificateId() != null)\r\n        sb.append(\"DeviceCertificateId: \").append(getDeviceCertificateId()).append(\",\");\r\n    if (getCaCertificateId() != null)\r\n        sb.append(\"CaCertificateId: \").append(getCaCertificateId()).append(\",\");\r\n    if (getCognitoIdentityPoolId() != null)\r\n        sb.append(\"CognitoIdentityPoolId: \").append(getCognitoIdentityPoolId()).append(\",\");\r\n    if (getClientId() != null)\r\n        sb.append(\"ClientId: \").append(getClientId()).append(\",\");\r\n    if (getPolicyVersionIdentifier() != null)\r\n        sb.append(\"PolicyVersionIdentifier: \").append(getPolicyVersionIdentifier()).append(\",\");\r\n    if (getAccount() != null)\r\n        sb.append(\"Account: \").append(getAccount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.AWSIoTJobsDataPlaneClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.TagDeliveryStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UpdateAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasName() != null)\r\n        sb.append(\"AliasName: \").append(getAliasName()).append(\",\");\r\n    if (getTargetKeyId() != null)\r\n        sb.append(\"TargetKeyId: \").append(getTargetKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteV2LoggingLevelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.CreateStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DiscoverInputSchemaResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputSchema() != null)\r\n        sb.append(\"InputSchema: \").append(getInputSchema()).append(\",\");\r\n    if (getParsedInputRecords() != null)\r\n        sb.append(\"ParsedInputRecords: \").append(getParsedInputRecords()).append(\",\");\r\n    if (getProcessedInputRecords() != null)\r\n        sb.append(\"ProcessedInputRecords: \").append(getProcessedInputRecords()).append(\",\");\r\n    if (getRawInputRecords() != null)\r\n        sb.append(\"RawInputRecords: \").append(getRawInputRecords());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListPipelinesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Destination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Destination() != null)\r\n        sb.append(\"S3Destination: \").append(getS3Destination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClient.createPipeline",
	"Comment": "creates a pipeline. a pipeline consumes messages from one or more channels and allows you to process the messagesbefore storing them in a data store.",
	"Method": "CreatePipelineResult createPipeline(CreatePipelineRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreatePipeline(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatasetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdateTime() != null)\r\n        sb.append(\"LastUpdateTime: \").append(getLastUpdateTime()).append(\",\");\r\n    if (getTriggers() != null)\r\n        sb.append(\"Triggers: \").append(getTriggers()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.FilterActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNext() != null)\r\n        sb.append(\"Next: \").append(getNext());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotChannelAssociationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getBotAlias() != null)\r\n        sb.append(\"BotAlias: \").append(getBotAlias()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CancelPipelineReprocessingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeAsyncResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DetachDiskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetCloudFormationStackRecordsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getExclusiveStartShardId() != null)\r\n        sb.append(\"ExclusiveStartShardId: \").append(getExclusiveStartShardId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.AddApplicationCloudWatchLoggingOptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getCloudWatchLoggingOption() != null)\r\n        sb.append(\"CloudWatchLoggingOption: \").append(getCloudWatchLoggingOption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.DescribeStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamInfo() != null)\r\n        sb.append(\"StreamInfo: \").append(getStreamInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.listOutgoingCertificates",
	"Comment": "lists certificates that are being transferred but not yet accepted.",
	"Method": "ListOutgoingCertificatesResult listOutgoingCertificates(ListOutgoingCertificatesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListOutgoingCertificates(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ActiveViolation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getViolationId() != null)\r\n        sb.append(\"ViolationId: \").append(getViolationId()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getBehavior() != null)\r\n        sb.append(\"Behavior: \").append(getBehavior()).append(\",\");\r\n    if (getLastViolationValue() != null)\r\n        sb.append(\"LastViolationValue: \").append(getLastViolationValue()).append(\",\");\r\n    if (getLastViolationTime() != null)\r\n        sb.append(\"LastViolationTime: \").append(getLastViolationTime()).append(\",\");\r\n    if (getViolationStartTime() != null)\r\n        sb.append(\"ViolationStartTime: \").append(getViolationStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateSecurityProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getSecurityProfileArn() != null)\r\n        sb.append(\"SecurityProfileArn: \").append(getSecurityProfileArn()).append(\",\");\r\n    if (getSecurityProfileDescription() != null)\r\n        sb.append(\"SecurityProfileDescription: \").append(getSecurityProfileDescription()).append(\",\");\r\n    if (getBehaviors() != null)\r\n        sb.append(\"Behaviors: \").append(getBehaviors()).append(\",\");\r\n    if (getAlertTargets() != null)\r\n        sb.append(\"AlertTargets: \").append(getAlertTargets()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputParallelismUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCountUpdate() != null)\r\n        sb.append(\"CountUpdate: \").append(getCountUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.ListDevicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceType() != null)\r\n        sb.append(\"DeviceType: \").append(getDeviceType()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getLoadBalancerMetricData",
	"Comment": "returns information about health metrics for your lightsail load balancer.",
	"Method": "GetLoadBalancerMetricDataResult getLoadBalancerMetricData(GetLoadBalancerMetricDataRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLoadBalancerMetricData(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DetachPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetSlotTypeVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSlotTypes() != null)\r\n        sb.append(\"SlotTypes: \").append(getSlotTypes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetSlotTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoPutMediaClientBuilder.withNumberOfThreads",
	"Comment": "sets the number of threads to use in the async event loop. higher values allow for highernumbers of concurrent requests.",
	"Method": "AmazonKinesisVideoPutMediaClientBuilder withNumberOfThreads(Integer numberOfThreads){\r\n    setNumberOfThreads(numberOfThreads);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetAccountSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountLimit() != null)\r\n        sb.append(\"AccountLimit: \").append(getAccountLimit()).append(\",\");\r\n    if (getAccountUsage() != null)\r\n        sb.append(\"AccountUsage: \").append(getAccountUsage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegisterCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificatePem() != null)\r\n        sb.append(\"CertificatePem: \").append(getCertificatePem()).append(\",\");\r\n    if (getCaCertificatePem() != null)\r\n        sb.append(\"CaCertificatePem: \").append(getCaCertificatePem()).append(\",\");\r\n    if (getSetAsActive() != null)\r\n        sb.append(\"SetAsActive: \").append(getSetAsActive()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.Message.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getGroupNumber() != null)\r\n        sb.append(\"GroupNumber: \").append(getGroupNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.SplunkRetryOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDurationInSeconds() != null)\r\n        sb.append(\"DurationInSeconds: \").append(getDurationInSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ChannelSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdateTime() != null)\r\n        sb.append(\"LastUpdateTime: \").append(getLastUpdateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.UpdateLicenseSpecificationsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getAddLicenseSpecifications() != null)\r\n        sb.append(\"AddLicenseSpecifications: \").append(getAddLicenseSpecifications()).append(\",\");\r\n    if (getRemoveLicenseSpecifications() != null)\r\n        sb.append(\"RemoveLicenseSpecifications: \").append(getRemoveLicenseSpecifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.KinesisStreamSourceConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKinesisStreamARN() != null)\r\n        sb.append(\"KinesisStreamARN: \").append(getKinesisStreamARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.Input.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamePrefix() != null)\r\n        sb.append(\"NamePrefix: \").append(getNamePrefix()).append(\",\");\r\n    if (getInputProcessingConfiguration() != null)\r\n        sb.append(\"InputProcessingConfiguration: \").append(getInputProcessingConfiguration()).append(\",\");\r\n    if (getKinesisStreamsInput() != null)\r\n        sb.append(\"KinesisStreamsInput: \").append(getKinesisStreamsInput()).append(\",\");\r\n    if (getKinesisFirehoseInput() != null)\r\n        sb.append(\"KinesisFirehoseInput: \").append(getKinesisFirehoseInput()).append(\",\");\r\n    if (getInputParallelism() != null)\r\n        sb.append(\"InputParallelism: \").append(getInputParallelism()).append(\",\");\r\n    if (getInputSchema() != null)\r\n        sb.append(\"InputSchema: \").append(getInputSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.SqlRunConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId()).append(\",\");\r\n    if (getInputStartingPositionConfiguration() != null)\r\n        sb.append(\"InputStartingPositionConfiguration: \").append(getInputStartingPositionConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId()).append(\",\");\r\n    if (getStreamArn() != null)\r\n        sb.append(\"StreamArn: \").append(getStreamArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getStreamVersion() != null)\r\n        sb.append(\"StreamVersion: \").append(getStreamVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.createThingGroup",
	"Comment": "create a thing group.this is a control plane operation. see authorization for informationabout authorizing control plane actions.",
	"Method": "CreateThingGroupResult createThingGroup(CreateThingGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateThingGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Allowed.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetImportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportId() != null)\r\n        sb.append(\"ImportId: \").append(getImportId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DescribeChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName()).append(\",\");\r\n    if (getIncludeStatistics() != null)\r\n        sb.append(\"IncludeStatistics: \").append(getIncludeStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.InstanceState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.S3ReferenceDataSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getFileKey() != null)\r\n        sb.append(\"FileKey: \").append(getFileKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ListApplicationSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotSummaries() != null)\r\n        sb.append(\"SnapshotSummaries: \").append(getSnapshotSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.KeyPair.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getFingerprint() != null)\r\n        sb.append(\"Fingerprint: \").append(getFingerprint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.AWSIoTJobsDataPlaneClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsiotjobsdataplane using the current builder configuration.",
	"Method": "AWSIoTJobsDataPlane build(AwsSyncClientParams params){\r\n    return new AWSIoTJobsDataPlaneClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreatePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getPolicyVersionId() != null)\r\n        sb.append(\"PolicyVersionId: \").append(getPolicyVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CloudFormationStackRecordSourceInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceSnapshot() != null)\r\n        sb.append(\"InstanceSnapshot: \").append(getInstanceSnapshot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.ClaimDevicesByClaimCodeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClaimCode() != null)\r\n        sb.append(\"ClaimCode: \").append(getClaimCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateDomainEntryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getDomainEntry() != null)\r\n        sb.append(\"DomainEntry: \").append(getDomainEntry());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateRoleAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleAlias() != null)\r\n        sb.append(\"RoleAlias: \").append(getRoleAlias()).append(\",\");\r\n    if (getRoleAliasArn() != null)\r\n        sb.append(\"RoleAliasArn: \").append(getRoleAliasArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeAccountAuditConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getAuditNotificationTargetConfigurations() != null)\r\n        sb.append(\"AuditNotificationTargetConfigurations: \").append(getAuditNotificationTargetConfigurations()).append(\",\");\r\n    if (getAuditCheckConfigurations() != null)\r\n        sb.append(\"AuditCheckConfigurations: \").append(getAuditCheckConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListAuditFindingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFindings() != null)\r\n        sb.append(\"Findings: \").append(getFindings()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeStreamSummaryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CloudwatchAlarmAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getAlarmName() != null)\r\n        sb.append(\"AlarmName: \").append(getAlarmName()).append(\",\");\r\n    if (getStateReason() != null)\r\n        sb.append(\"StateReason: \").append(getStateReason()).append(\",\");\r\n    if (getStateValue() != null)\r\n        sb.append(\"StateValue: \").append(getStateValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AwsJobExecutionsRolloutConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaximumPerMinute() != null)\r\n        sb.append(\"MaximumPerMinute: \").append(getMaximumPerMinute());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.ProjectSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getUpdatedDate() != null)\r\n        sb.append(\"UpdatedDate: \").append(getUpdatedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.UpdateJobExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecutionState() != null)\r\n        sb.append(\"ExecutionState: \").append(getExecutionState()).append(\",\");\r\n    if (getJobDocument() != null)\r\n        sb.append(\"JobDocument: \").append(getJobDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingGroupMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParentGroupName() != null)\r\n        sb.append(\"ParentGroupName: \").append(getParentGroupName()).append(\",\");\r\n    if (getRootToParentThingGroups() != null)\r\n        sb.append(\"RootToParentThingGroups: \").append(getRootToParentThingGroups()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.UpdateDataRetentionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.UpdateThingShadowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(getPayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsiotanalyticsasync using the current builder configuration.",
	"Method": "AWSIoTAnalyticsAsync build(AwsAsyncClientParams params){\r\n    return new AWSIoTAnalyticsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.Prompt.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessages() != null)\r\n        sb.append(\"Messages: \").append(getMessages()).append(\",\");\r\n    if (getMaxAttempts() != null)\r\n        sb.append(\"MaxAttempts: \").append(getMaxAttempts()).append(\",\");\r\n    if (getResponseCard() != null)\r\n        sb.append(\"ResponseCard: \").append(getResponseCard());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.SetTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseBlueprintsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlueprints() != null)\r\n        sb.append(\"Blueprints: \").append(getBlueprints()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.UnsubscribeFromEventResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeThingRegistrationTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DeleteCustomKeyStoreResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.createCloudFormationStack",
	"Comment": "creates an aws cloudformation stack, which creates a new amazon ec2 instance from an exported amazon lightsailsnapshot. this operation results in a cloudformation stack record that can be used to track the awscloudformation stack created. use the get cloud formation stack records operation to get a list ofthe cloudformation stacks created.wait until after your new amazon ec2 instance is created before running thecreate cloud formation stack operation again with the same export snapshot record.",
	"Method": "CreateCloudFormationStackResult createCloudFormationStack(CreateCloudFormationStackRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateCloudFormationStack(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.SqlApplicationConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputDescriptions() != null)\r\n        sb.append(\"InputDescriptions: \").append(getInputDescriptions()).append(\",\");\r\n    if (getOutputDescriptions() != null)\r\n        sb.append(\"OutputDescriptions: \").append(getOutputDescriptions()).append(\",\");\r\n    if (getReferenceDataSourceDescriptions() != null)\r\n        sb.append(\"ReferenceDataSourceDescriptions: \").append(getReferenceDataSourceDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ErrorInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.JSONMappingParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordRowPath() != null)\r\n        sb.append(\"RecordRowPath: \").append(getRecordRowPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.PublishLayerVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getLayerArn() != null)\r\n        sb.append(\"LayerArn: \").append(getLayerArn()).append(\",\");\r\n    if (getLayerVersionArn() != null)\r\n        sb.append(\"LayerVersionArn: \").append(getLayerVersionArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getCompatibleRuntimes() != null)\r\n        sb.append(\"CompatibleRuntimes: \").append(getCompatibleRuntimes()).append(\",\");\r\n    if (getLicenseInfo() != null)\r\n        sb.append(\"LicenseInfo: \").append(getLicenseInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AssociateTargetsWithJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobArn() != null)\r\n        sb.append(\"JobArn: \").append(getJobArn()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.UpdateDeviceStateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisFirehoseOutputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate()).append(\",\");\r\n    if (getRoleARNUpdate() != null)\r\n        sb.append(\"RoleARNUpdate: \").append(getRoleARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AttachPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ViolationEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getViolationId() != null)\r\n        sb.append(\"ViolationId: \").append(getViolationId()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getBehavior() != null)\r\n        sb.append(\"Behavior: \").append(getBehavior()).append(\",\");\r\n    if (getMetricValue() != null)\r\n        sb.append(\"MetricValue: \").append(getMetricValue()).append(\",\");\r\n    if (getViolationEventType() != null)\r\n        sb.append(\"ViolationEventType: \").append(getViolationEventType()).append(\",\");\r\n    if (getViolationEventTime() != null)\r\n        sb.append(\"ViolationEventTime: \").append(getViolationEventTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseMasterUserPasswordRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getPasswordVersion() != null)\r\n        sb.append(\"PasswordVersion: \").append(getPasswordVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeThingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getThingGroupId() != null)\r\n        sb.append(\"ThingGroupId: \").append(getThingGroupId()).append(\",\");\r\n    if (getThingGroupArn() != null)\r\n        sb.append(\"ThingGroupArn: \").append(getThingGroupArn()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getThingGroupProperties() != null)\r\n        sb.append(\"ThingGroupProperties: \").append(getThingGroupProperties()).append(\",\");\r\n    if (getThingGroupMetadata() != null)\r\n        sb.append(\"ThingGroupMetadata: \").append(getThingGroupMetadata()).append(\",\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getQueryString() != null)\r\n        sb.append(\"QueryString: \").append(getQueryString()).append(\",\");\r\n    if (getQueryVersion() != null)\r\n        sb.append(\"QueryVersion: \").append(getQueryVersion()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CancelJobExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion()).append(\",\");\r\n    if (getStatusDetails() != null)\r\n        sb.append(\"StatusDetails: \").append(getStatusDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.GetShardIteratorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShardIterator() != null)\r\n        sb.append(\"ShardIterator: \").append(getShardIterator());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingGroupIndexingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupIndexingMode() != null)\r\n        sb.append(\"ThingGroupIndexingMode: \").append(getThingGroupIndexingMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancer() != null)\r\n        sb.append(\"LoadBalancer: \").append(getLoadBalancer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.S3ContentLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getFileKey() != null)\r\n        sb.append(\"FileKey: \").append(getFileKey()).append(\",\");\r\n    if (getObjectVersion() != null)\r\n        sb.append(\"ObjectVersion: \").append(getObjectVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.PutBotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getIntents() != null)\r\n        sb.append(\"Intents: \").append(getIntents()).append(\",\");\r\n    if (getClarificationPrompt() != null)\r\n        sb.append(\"ClarificationPrompt: \").append(getClarificationPrompt()).append(\",\");\r\n    if (getAbortStatement() != null)\r\n        sb.append(\"AbortStatement: \").append(getAbortStatement()).append(\",\");\r\n    if (getIdleSessionTTLInSeconds() != null)\r\n        sb.append(\"IdleSessionTTLInSeconds: \").append(getIdleSessionTTLInSeconds()).append(\",\");\r\n    if (getVoiceId() != null)\r\n        sb.append(\"VoiceId: \").append(getVoiceId()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getProcessBehavior() != null)\r\n        sb.append(\"ProcessBehavior: \").append(getProcessBehavior()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getChildDirected() != null)\r\n        sb.append(\"ChildDirected: \").append(getChildDirected()).append(\",\");\r\n    if (getCreateVersion() != null)\r\n        sb.append(\"CreateVersion: \").append(getCreateVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateThingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName()).append(\",\");\r\n    if (getAttributePayload() != null)\r\n        sb.append(\"AttributePayload: \").append(getAttributePayload()).append(\",\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.AddPermissionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatement() != null)\r\n        sb.append(\"Statement: \").append(getStatement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.StartRelationalDatabaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.HashKeyRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartingHashKey() != null)\r\n        sb.append(\"StartingHashKey: \").append(getStartingHashKey()).append(\",\");\r\n    if (getEndingHashKey() != null)\r\n        sb.append(\"EndingHashKey: \").append(getEndingHashKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListDatasetContentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetContentSummaries() != null)\r\n        sb.append(\"DatasetContentSummaries: \").append(getDatasetContentSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.LambdaActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getLambdaName() != null)\r\n        sb.append(\"LambdaName: \").append(getLambdaName()).append(\",\");\r\n    if (getBatchSize() != null)\r\n        sb.append(\"BatchSize: \").append(getBatchSize()).append(\",\");\r\n    if (getNext() != null)\r\n        sb.append(\"Next: \").append(getNext());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AbstractAmazonKinesisAsync.splitShardAsync",
	"Comment": "simplified method form for invoking the splitshard operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<SplitShardResult> splitShardAsync(SplitShardRequest request,java.util.concurrent.Future<SplitShardResult> splitShardAsync,SplitShardRequest request,com.amazonaws.handlers.AsyncHandler<SplitShardRequest, SplitShardResult> asyncHandler,java.util.concurrent.Future<SplitShardResult> splitShardAsync,String streamName,String shardToSplit,String newStartingHashKey,java.util.concurrent.Future<SplitShardResult> splitShardAsync,String streamName,String shardToSplit,String newStartingHashKey,com.amazonaws.handlers.AsyncHandler<SplitShardRequest, SplitShardResult> asyncHandler){\r\n    return splitShardAsync(new SplitShardRequest().withStreamName(streamName).withShardToSplit(shardToSplit).withNewStartingHashKey(newStartingHashKey), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListAuthorizersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getAscendingOrder() != null)\r\n        sb.append(\"AscendingOrder: \").append(getAscendingOrder()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.BehaviorCriteria.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getDurationSeconds() != null)\r\n        sb.append(\"DurationSeconds: \").append(getDurationSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSAsyncClient.retireGrantAsync",
	"Comment": "simplified method form for invoking the retiregrant operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<RetireGrantResult> retireGrantAsync(RetireGrantRequest request,java.util.concurrent.Future<RetireGrantResult> retireGrantAsync,RetireGrantRequest request,com.amazonaws.handlers.AsyncHandler<RetireGrantRequest, RetireGrantResult> asyncHandler,java.util.concurrent.Future<RetireGrantResult> retireGrantAsync,java.util.concurrent.Future<RetireGrantResult> retireGrantAsync,com.amazonaws.handlers.AsyncHandler<RetireGrantRequest, RetireGrantResult> asyncHandler){\r\n    return retireGrantAsync(new RetireGrantRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DescribeApplicationSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotDetails() != null)\r\n        sb.append(\"SnapshotDetails: \").append(getSnapshotDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteDomainEntryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getDomainEntry() != null)\r\n        sb.append(\"DomainEntry: \").append(getDomainEntry());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.JobExecutionSummaryForThing.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getJobExecutionSummary() != null)\r\n        sb.append(\"JobExecutionSummary: \").append(getJobExecutionSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationSnapshotConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotsEnabledUpdate() != null)\r\n        sb.append(\"SnapshotsEnabledUpdate: \").append(getSnapshotsEnabledUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoPutMediaClientBuilder.setNumberOfThreads",
	"Comment": "sets the number of threads to use in the async event loop. higher values allow for highernumbers of concurrent requests.",
	"Method": "void setNumberOfThreads(Integer numberOfThreads){\r\n    this.numberOfThreads = numberOfThreads;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.FulfillmentActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getCodeHook() != null)\r\n        sb.append(\"CodeHook: \").append(getCodeHook());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.LambdaOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.PlacementTemplate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultAttributes() != null)\r\n        sb.append(\"DefaultAttributes: \").append(getDefaultAttributes()).append(\",\");\r\n    if (getDeviceTemplates() != null)\r\n        sb.append(\"DeviceTemplates: \").append(getDeviceTemplates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceStateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeRoleAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleAliasDescription() != null)\r\n        sb.append(\"RoleAliasDescription: \").append(getRoleAliasDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.CloudWatchLoggingOptionDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudWatchLoggingOptionId() != null)\r\n        sb.append(\"CloudWatchLoggingOptionId: \").append(getCloudWatchLoggingOptionId()).append(\",\");\r\n    if (getLogStreamARN() != null)\r\n        sb.append(\"LogStreamARN: \").append(getLogStreamARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.IotAnalyticsAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelArn() != null)\r\n        sb.append(\"ChannelArn: \").append(getChannelArn()).append(\",\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesClient.unclaimDevice",
	"Comment": "disassociates a device from your aws account using its device id.",
	"Method": "UnclaimDeviceResult unclaimDevice(UnclaimDeviceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUnclaimDevice(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetBlueprintsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIncludeInactive() != null)\r\n        sb.append(\"IncludeInactive: \").append(getIncludeInactive()).append(\",\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.FirehoseAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName()).append(\",\");\r\n    if (getSeparator() != null)\r\n        sb.append(\"Separator: \").append(getSeparator());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.PutItemInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.TelemetryMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageType() != null)\r\n        sb.append(\"MessageType: \").append(getMessageType()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getDataSize() != null)\r\n        sb.append(\"DataSize: \").append(getDataSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputProcessingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputLambdaProcessor() != null)\r\n        sb.append(\"InputLambdaProcessor: \").append(getInputLambdaProcessor());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputProcessingConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputLambdaProcessorUpdate() != null)\r\n        sb.append(\"InputLambdaProcessorUpdate: \").append(getInputLambdaProcessorUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetIntentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSlots() != null)\r\n        sb.append(\"Slots: \").append(getSlots()).append(\",\");\r\n    if (getSampleUtterances() != null)\r\n        sb.append(\"SampleUtterances: \").append(getSampleUtterances()).append(\",\");\r\n    if (getConfirmationPrompt() != null)\r\n        sb.append(\"ConfirmationPrompt: \").append(getConfirmationPrompt()).append(\",\");\r\n    if (getRejectionStatement() != null)\r\n        sb.append(\"RejectionStatement: \").append(getRejectionStatement()).append(\",\");\r\n    if (getFollowUpPrompt() != null)\r\n        sb.append(\"FollowUpPrompt: \").append(getFollowUpPrompt()).append(\",\");\r\n    if (getConclusionStatement() != null)\r\n        sb.append(\"ConclusionStatement: \").append(getConclusionStatement()).append(\",\");\r\n    if (getDialogCodeHook() != null)\r\n        sb.append(\"DialogCodeHook: \").append(getDialogCodeHook()).append(\",\");\r\n    if (getFulfillmentActivity() != null)\r\n        sb.append(\"FulfillmentActivity: \").append(getFulfillmentActivity()).append(\",\");\r\n    if (getParentIntentSignature() != null)\r\n        sb.append(\"ParentIntentSignature: \").append(getParentIntentSignature()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoClient.describeStream",
	"Comment": "returns the most current information about the specified stream. you must specify either thestreamname or the streamarn.",
	"Method": "DescribeStreamResult describeStream(DescribeStreamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeStream(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListStreamsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamInfoList() != null)\r\n        sb.append(\"StreamInfoList: \").append(getStreamInfoList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.EnhancedMetrics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShardLevelMetrics() != null)\r\n        sb.append(\"ShardLevelMetrics: \").append(getShardLevelMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationRestoreConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationRestoreType() != null)\r\n        sb.append(\"ApplicationRestoreType: \").append(getApplicationRestoreType()).append(\",\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.copySnapshot",
	"Comment": "copies an instance or disk snapshot from one aws region to another in amazon lightsail.",
	"Method": "CopySnapshotResult copySnapshot(CopySnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCopySnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.ClaimDevicesByClaimCodeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClaimCode() != null)\r\n        sb.append(\"ClaimCode: \").append(getClaimCode()).append(\",\");\r\n    if (getTotal() != null)\r\n        sb.append(\"Total: \").append(getTotal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListActiveViolationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.CreateStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getShardCount() != null)\r\n        sb.append(\"ShardCount: \").append(getShardCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getDiskSnapshot",
	"Comment": "returns information about a specific block storage disk snapshot.",
	"Method": "GetDiskSnapshotResult getDiskSnapshot(GetDiskSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDiskSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.tagResource",
	"Comment": "adds to or modifies the tags of the given resource. tags are metadata which can be used to manage a resource.",
	"Method": "TagResourceResult tagResource(TagResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTagResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.model.PostTextRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getBotAlias() != null)\r\n        sb.append(\"BotAlias: \").append(getBotAlias()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId()).append(\",\");\r\n    if (getSessionAttributes() != null)\r\n        sb.append(\"SessionAttributes: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRequestAttributes() != null)\r\n        sb.append(\"RequestAttributes: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getInputText() != null)\r\n        sb.append(\"InputText: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateBillingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName()).append(\",\");\r\n    if (getBillingGroupProperties() != null)\r\n        sb.append(\"BillingGroupProperties: \").append(getBillingGroupProperties()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListLicenseConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurations() != null)\r\n        sb.append(\"LicenseConfigurations: \").append(getLicenseConfigurations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.PolicyVersionIdentifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyVersionId() != null)\r\n        sb.append(\"PolicyVersionId: \").append(getPolicyVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteKeyPairRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyPairName() != null)\r\n        sb.append(\"KeyPairName: \").append(getKeyPairName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.CreateAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasArn() != null)\r\n        sb.append(\"AliasArn: \").append(getAliasArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFunctionVersion() != null)\r\n        sb.append(\"FunctionVersion: \").append(getFunctionVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoutingConfig() != null)\r\n        sb.append(\"RoutingConfig: \").append(getRoutingConfig()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.PutIntentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSlots() != null)\r\n        sb.append(\"Slots: \").append(getSlots()).append(\",\");\r\n    if (getSampleUtterances() != null)\r\n        sb.append(\"SampleUtterances: \").append(getSampleUtterances()).append(\",\");\r\n    if (getConfirmationPrompt() != null)\r\n        sb.append(\"ConfirmationPrompt: \").append(getConfirmationPrompt()).append(\",\");\r\n    if (getRejectionStatement() != null)\r\n        sb.append(\"RejectionStatement: \").append(getRejectionStatement()).append(\",\");\r\n    if (getFollowUpPrompt() != null)\r\n        sb.append(\"FollowUpPrompt: \").append(getFollowUpPrompt()).append(\",\");\r\n    if (getConclusionStatement() != null)\r\n        sb.append(\"ConclusionStatement: \").append(getConclusionStatement()).append(\",\");\r\n    if (getDialogCodeHook() != null)\r\n        sb.append(\"DialogCodeHook: \").append(getDialogCodeHook()).append(\",\");\r\n    if (getFulfillmentActivity() != null)\r\n        sb.append(\"FulfillmentActivity: \").append(getFulfillmentActivity()).append(\",\");\r\n    if (getParentIntentSignature() != null)\r\n        sb.append(\"ParentIntentSignature: \").append(getParentIntentSignature()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getCreateVersion() != null)\r\n        sb.append(\"CreateVersion: \").append(getCreateVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.EnvironmentProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropertyGroups() != null)\r\n        sb.append(\"PropertyGroups: \").append(getPropertyGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AuthorizerDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerName() != null)\r\n        sb.append(\"AuthorizerName: \").append(getAuthorizerName()).append(\",\");\r\n    if (getAuthorizerArn() != null)\r\n        sb.append(\"AuthorizerArn: \").append(getAuthorizerArn()).append(\",\");\r\n    if (getAuthorizerFunctionArn() != null)\r\n        sb.append(\"AuthorizerFunctionArn: \").append(getAuthorizerFunctionArn()).append(\",\");\r\n    if (getTokenKeyName() != null)\r\n        sb.append(\"TokenKeyName: \").append(getTokenKeyName()).append(\",\");\r\n    if (getTokenSigningPublicKeys() != null)\r\n        sb.append(\"TokenSigningPublicKeys: \").append(getTokenSigningPublicKeys()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SetV2LoggingLevelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogTarget() != null)\r\n        sb.append(\"LogTarget: \").append(getLogTarget()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClient.deleteThingShadow",
	"Comment": "deletes the thing shadow for the specified thing.for more information, see deletethingshadow inthe aws iot developer guide.",
	"Method": "DeleteThingShadowResult deleteThingShadow(DeleteThingShadowRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteThingShadow(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetEffectivePoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEffectivePolicies() != null)\r\n        sb.append(\"EffectivePolicies: \").append(getEffectivePolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.EnvironmentResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVariables() != null)\r\n        sb.append(\"Variables: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getError() != null)\r\n        sb.append(\"Error: \").append(getError());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.ReleaseStaticIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticIpName() != null)\r\n        sb.append(\"StaticIpName: \").append(getStaticIpName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetSlotTypesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSlotTypes() != null)\r\n        sb.append(\"SlotTypes: \").append(getSlotTypes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.OutputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutputId() != null)\r\n        sb.append(\"OutputId: \").append(getOutputId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getKinesisStreamsOutputDescription() != null)\r\n        sb.append(\"KinesisStreamsOutputDescription: \").append(getKinesisStreamsOutputDescription()).append(\",\");\r\n    if (getKinesisFirehoseOutputDescription() != null)\r\n        sb.append(\"KinesisFirehoseOutputDescription: \").append(getKinesisFirehoseOutputDescription()).append(\",\");\r\n    if (getLambdaOutputDescription() != null)\r\n        sb.append(\"LambdaOutputDescription: \").append(getLambdaOutputDescription()).append(\",\");\r\n    if (getDestinationSchema() != null)\r\n        sb.append(\"DestinationSchema: \").append(getDestinationSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.PublishResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDisksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDisks() != null)\r\n        sb.append(\"Disks: \").append(getDisks()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaAsyncClient.listFunctionsAsync",
	"Comment": "simplified method form for invoking the listfunctions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListFunctionsResult> listFunctionsAsync(ListFunctionsRequest request,java.util.concurrent.Future<ListFunctionsResult> listFunctionsAsync,ListFunctionsRequest request,com.amazonaws.handlers.AsyncHandler<ListFunctionsRequest, ListFunctionsResult> asyncHandler,java.util.concurrent.Future<ListFunctionsResult> listFunctionsAsync,java.util.concurrent.Future<ListFunctionsResult> listFunctionsAsync,com.amazonaws.handlers.AsyncHandler<ListFunctionsRequest, ListFunctionsResult> asyncHandler){\r\n    return listFunctionsAsync(new ListFunctionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.StartAssessmentRunResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentRunArn() != null)\r\n        sb.append(\"AssessmentRunArn: \").append(getAssessmentRunArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.RemoveTagsFromStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.createOTAUpdate",
	"Comment": "creates an aws iot otaupdate on a target group of things or groups.",
	"Method": "CreateOTAUpdateResult createOTAUpdate(CreateOTAUpdateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateOTAUpdate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CheckpointConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationTypeUpdate() != null)\r\n        sb.append(\"ConfigurationTypeUpdate: \").append(getConfigurationTypeUpdate()).append(\",\");\r\n    if (getCheckpointingEnabledUpdate() != null)\r\n        sb.append(\"CheckpointingEnabledUpdate: \").append(getCheckpointingEnabledUpdate()).append(\",\");\r\n    if (getCheckpointIntervalUpdate() != null)\r\n        sb.append(\"CheckpointIntervalUpdate: \").append(getCheckpointIntervalUpdate()).append(\",\");\r\n    if (getMinPauseBetweenCheckpointsUpdate() != null)\r\n        sb.append(\"MinPauseBetweenCheckpointsUpdate: \").append(getMinPauseBetweenCheckpointsUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeleteAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsiotdataasync using the current builder configuration.",
	"Method": "AWSIotDataAsync build(AwsAsyncClientParams params){\r\n    return new AWSIotDataAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StopStreamEncryptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getEncryptionType() != null)\r\n        sb.append(\"EncryptionType: \").append(getEncryptionType()).append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisFirehoseInputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.AliasConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasArn() != null)\r\n        sb.append(\"AliasArn: \").append(getAliasArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFunctionVersion() != null)\r\n        sb.append(\"FunctionVersion: \").append(getFunctionVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoutingConfig() != null)\r\n        sb.append(\"RoutingConfig: \").append(getRoutingConfig()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TimeoutConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInProgressTimeoutInMinutes() != null)\r\n        sb.append(\"InProgressTimeoutInMinutes: \").append(getInProgressTimeoutInMinutes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getShardLevelMetrics() != null)\r\n        sb.append(\"ShardLevelMetrics: \").append(getShardLevelMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.DeliveryStreamDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName()).append(\",\");\r\n    if (getDeliveryStreamARN() != null)\r\n        sb.append(\"DeliveryStreamARN: \").append(getDeliveryStreamARN()).append(\",\");\r\n    if (getDeliveryStreamStatus() != null)\r\n        sb.append(\"DeliveryStreamStatus: \").append(getDeliveryStreamStatus()).append(\",\");\r\n    if (getDeliveryStreamEncryptionConfiguration() != null)\r\n        sb.append(\"DeliveryStreamEncryptionConfiguration: \").append(getDeliveryStreamEncryptionConfiguration()).append(\",\");\r\n    if (getDeliveryStreamType() != null)\r\n        sb.append(\"DeliveryStreamType: \").append(getDeliveryStreamType()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getCreateTimestamp() != null)\r\n        sb.append(\"CreateTimestamp: \").append(getCreateTimestamp()).append(\",\");\r\n    if (getLastUpdateTimestamp() != null)\r\n        sb.append(\"LastUpdateTimestamp: \").append(getLastUpdateTimestamp()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getHasMoreDestinations() != null)\r\n        sb.append(\"HasMoreDestinations: \").append(getHasMoreDestinations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.CodeHook.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUri() != null)\r\n        sb.append(\"Uri: \").append(getUri()).append(\",\");\r\n    if (getMessageVersion() != null)\r\n        sb.append(\"MessageVersion: \").append(getMessageVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.AccountUsage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTotalCodeSize() != null)\r\n        sb.append(\"TotalCodeSize: \").append(getTotalCodeSize()).append(\",\");\r\n    if (getFunctionCount() != null)\r\n        sb.append(\"FunctionCount: \").append(getFunctionCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CloudFormationStackRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getSourceInfo() != null)\r\n        sb.append(\"SourceInfo: \").append(getSourceInfo()).append(\",\");\r\n    if (getDestinationInfo() != null)\r\n        sb.append(\"DestinationInfo: \").append(getDestinationInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeThingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefaultClientId() != null)\r\n        sb.append(\"DefaultClientId: \").append(getDefaultClientId()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingId() != null)\r\n        sb.append(\"ThingId: \").append(getThingId()).append(\",\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn()).append(\",\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListRoleAliasesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getAscendingOrder() != null)\r\n        sb.append(\"AscendingOrder: \").append(getAscendingOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.JobExecutionSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getQueuedAt() != null)\r\n        sb.append(\"QueuedAt: \").append(getQueuedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getExecutionNumber() != null)\r\n        sb.append(\"ExecutionNumber: \").append(getExecutionNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.KeyListEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getKeyArn() != null)\r\n        sb.append(\"KeyArn: \").append(getKeyArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.AWSIoT1ClickProjectsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListTopicRulesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTopic() != null)\r\n        sb.append(\"Topic: \").append(getTopic()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getRuleDisabled() != null)\r\n        sb.append(\"RuleDisabled: \").append(getRuleDisabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ConsumerDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConsumerName() != null)\r\n        sb.append(\"ConsumerName: \").append(getConsumerName()).append(\",\");\r\n    if (getConsumerARN() != null)\r\n        sb.append(\"ConsumerARN: \").append(getConsumerARN()).append(\",\");\r\n    if (getConsumerStatus() != null)\r\n        sb.append(\"ConsumerStatus: \").append(getConsumerStatus()).append(\",\");\r\n    if (getConsumerCreationTimestamp() != null)\r\n        sb.append(\"ConsumerCreationTimestamp: \").append(getConsumerCreationTimestamp()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.OutputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutputId() != null)\r\n        sb.append(\"OutputId: \").append(getOutputId()).append(\",\");\r\n    if (getNameUpdate() != null)\r\n        sb.append(\"NameUpdate: \").append(getNameUpdate()).append(\",\");\r\n    if (getKinesisStreamsOutputUpdate() != null)\r\n        sb.append(\"KinesisStreamsOutputUpdate: \").append(getKinesisStreamsOutputUpdate()).append(\",\");\r\n    if (getKinesisFirehoseOutputUpdate() != null)\r\n        sb.append(\"KinesisFirehoseOutputUpdate: \").append(getKinesisFirehoseOutputUpdate()).append(\",\");\r\n    if (getLambdaOutputUpdate() != null)\r\n        sb.append(\"LambdaOutputUpdate: \").append(getLambdaOutputUpdate()).append(\",\");\r\n    if (getDestinationSchemaUpdate() != null)\r\n        sb.append(\"DestinationSchemaUpdate: \").append(getDestinationSchemaUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateCloudFormationStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DownloadDefaultKeyPairRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.AddApplicationCloudWatchLoggingOptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getCloudWatchLoggingOption() != null)\r\n        sb.append(\"CloudWatchLoggingOption: \").append(getCloudWatchLoggingOption());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.BotMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CodeContent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTextContent() != null)\r\n        sb.append(\"TextContent: \").append(getTextContent()).append(\",\");\r\n    if (getZipFileContent() != null)\r\n        sb.append(\"ZipFileContent: \").append(getZipFileContent()).append(\",\");\r\n    if (getS3ContentLocation() != null)\r\n        sb.append(\"S3ContentLocation: \").append(getS3ContentLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteJobExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateRelationalDatabaseFromSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteBotAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.StopRelationalDatabaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteThingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetV2LoggingOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AuditFinding.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId()).append(\",\");\r\n    if (getCheckName() != null)\r\n        sb.append(\"CheckName: \").append(getCheckName()).append(\",\");\r\n    if (getTaskStartTime() != null)\r\n        sb.append(\"TaskStartTime: \").append(getTaskStartTime()).append(\",\");\r\n    if (getFindingTime() != null)\r\n        sb.append(\"FindingTime: \").append(getFindingTime()).append(\",\");\r\n    if (getSeverity() != null)\r\n        sb.append(\"Severity: \").append(getSeverity()).append(\",\");\r\n    if (getNonCompliantResource() != null)\r\n        sb.append(\"NonCompliantResource: \").append(getNonCompliantResource()).append(\",\");\r\n    if (getRelatedResources() != null)\r\n        sb.append(\"RelatedResources: \").append(getRelatedResources()).append(\",\");\r\n    if (getReasonForNonCompliance() != null)\r\n        sb.append(\"ReasonForNonCompliance: \").append(getReasonForNonCompliance()).append(\",\");\r\n    if (getReasonForNonComplianceCode() != null)\r\n        sb.append(\"ReasonForNonComplianceCode: \").append(getReasonForNonComplianceCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.waiters.DescribeStreamFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeStreamResult apply(DescribeStreamRequest describeStreamRequest){\r\n    return client.describeStream(describeStreamRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateCACertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getNewStatus() != null)\r\n        sb.append(\"NewStatus: \").append(getNewStatus()).append(\",\");\r\n    if (getNewAutoRegistrationStatus() != null)\r\n        sb.append(\"NewAutoRegistrationStatus: \").append(getNewAutoRegistrationStatus()).append(\",\");\r\n    if (getRegistrationConfig() != null)\r\n        sb.append(\"RegistrationConfig: \").append(getRegistrationConfig()).append(\",\");\r\n    if (getRemoveAutoRegistration() != null)\r\n        sb.append(\"RemoveAutoRegistration: \").append(getRemoveAutoRegistration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AbstractAmazonKinesisAsync.mergeShardsAsync",
	"Comment": "simplified method form for invoking the mergeshards operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<MergeShardsResult> mergeShardsAsync(MergeShardsRequest request,java.util.concurrent.Future<MergeShardsResult> mergeShardsAsync,MergeShardsRequest request,com.amazonaws.handlers.AsyncHandler<MergeShardsRequest, MergeShardsResult> asyncHandler,java.util.concurrent.Future<MergeShardsResult> mergeShardsAsync,String streamName,String shardToMerge,String adjacentShardToMerge,java.util.concurrent.Future<MergeShardsResult> mergeShardsAsync,String streamName,String shardToMerge,String adjacentShardToMerge,com.amazonaws.handlers.AsyncHandler<MergeShardsRequest, MergeShardsResult> asyncHandler){\r\n    return mergeShardsAsync(new MergeShardsRequest().withStreamName(streamName).withShardToMerge(shardToMerge).withAdjacentShardToMerge(adjacentShardToMerge), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ChannelStatistics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getDocumentSource() != null)\r\n        sb.append(\"DocumentSource: \").append(getDocumentSource()).append(\",\");\r\n    if (getDocument() != null)\r\n        sb.append(\"Document: \").append(getDocument()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getPresignedUrlConfig() != null)\r\n        sb.append(\"PresignedUrlConfig: \").append(getPresignedUrlConfig()).append(\",\");\r\n    if (getTargetSelection() != null)\r\n        sb.append(\"TargetSelection: \").append(getTargetSelection()).append(\",\");\r\n    if (getJobExecutionsRolloutConfig() != null)\r\n        sb.append(\"JobExecutionsRolloutConfig: \").append(getJobExecutionsRolloutConfig()).append(\",\");\r\n    if (getAbortConfig() != null)\r\n        sb.append(\"AbortConfig: \").append(getAbortConfig()).append(\",\");\r\n    if (getTimeoutConfig() != null)\r\n        sb.append(\"TimeoutConfig: \").append(getTimeoutConfig()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.DeviceEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevice() != null)\r\n        sb.append(\"Device: \").append(getDevice()).append(\",\");\r\n    if (getStdEvent() != null)\r\n        sb.append(\"StdEvent: \").append(getStdEvent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ResourceConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComputeType() != null)\r\n        sb.append(\"ComputeType: \").append(getComputeType()).append(\",\");\r\n    if (getVolumeSizeInGB() != null)\r\n        sb.append(\"VolumeSizeInGB: \").append(getVolumeSizeInGB());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstancePortStatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegisterCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.InputFormatConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeserializer() != null)\r\n        sb.append(\"Deserializer: \").append(getDeserializer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.StopDeliveryStreamEncryptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateGrantResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGrantToken() != null)\r\n        sb.append(\"GrantToken: \").append(getGrantToken()).append(\",\");\r\n    if (getGrantId() != null)\r\n        sb.append(\"GrantId: \").append(getGrantId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.NodeInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddedToClusterTime() != null)\r\n        sb.append(\"AddedToClusterTime: \").append(getAddedToClusterTime()).append(\",\");\r\n    if (getBrokerNodeInfo() != null)\r\n        sb.append(\"BrokerNodeInfo: \").append(getBrokerNodeInfo()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getNodeARN() != null)\r\n        sb.append(\"NodeARN: \").append(getNodeARN()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getZookeeperNodeInfo() != null)\r\n        sb.append(\"ZookeeperNodeInfo: \").append(getZookeeperNodeInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreatePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteBotVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListLayersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompatibleRuntime() != null)\r\n        sb.append(\"CompatibleRuntime: \").append(getCompatibleRuntime()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RemoveThingFromThingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getThingGroupArn() != null)\r\n        sb.append(\"ThingGroupArn: \").append(getThingGroupArn()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.BatchPutMessageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName()).append(\",\");\r\n    if (getMessages() != null)\r\n        sb.append(\"Messages: \").append(getMessages());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.LambdaOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedRecordCount() != null)\r\n        sb.append(\"FailedRecordCount: \").append(getFailedRecordCount()).append(\",\");\r\n    if (getRecords() != null)\r\n        sb.append(\"Records: \").append(getRecords()).append(\",\");\r\n    if (getEncryptionType() != null)\r\n        sb.append(\"EncryptionType: \").append(getEncryptionType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.PutFunctionConcurrencyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getReservedConcurrentExecutions() != null)\r\n        sb.append(\"ReservedConcurrentExecutions: \").append(getReservedConcurrentExecutions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AttributePayload.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getMerge() != null)\r\n        sb.append(\"Merge: \").append(getMerge());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.RemoveTagsFromStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteSlotTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputProcessingConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputLambdaProcessorDescription() != null)\r\n        sb.append(\"InputLambdaProcessorDescription: \").append(getInputLambdaProcessorDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.PutBotAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getBotVersion() != null)\r\n        sb.append(\"BotVersion: \").append(getBotVersion()).append(\",\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListStreamsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getExclusiveStartStreamName() != null)\r\n        sb.append(\"ExclusiveStartStreamName: \").append(getExclusiveStartStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ListDeliveryStreamsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getDeliveryStreamType() != null)\r\n        sb.append(\"DeliveryStreamType: \").append(getDeliveryStreamType()).append(\",\");\r\n    if (getExclusiveStartDeliveryStreamName() != null)\r\n        sb.append(\"ExclusiveStartDeliveryStreamName: \").append(getExclusiveStartDeliveryStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.S3Action.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getCannedAcl() != null)\r\n        sb.append(\"CannedAcl: \").append(getCannedAcl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListTargetsForSecurityProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.DescribeDeviceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceDescription() != null)\r\n        sb.append(\"DeviceDescription: \").append(getDeviceDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetIntentVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIntents() != null)\r\n        sb.append(\"Intents: \").append(getIntents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteLoadBalancerTlsCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getInstanceMetricData",
	"Comment": "returns the data points for the specified amazon lightsail instance metric, given an instance name.",
	"Method": "GetInstanceMetricDataResult getInstanceMetricData(GetInstanceMetricDataRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetInstanceMetricData(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.StaticIp.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getAttachedTo() != null)\r\n        sb.append(\"AttachedTo: \").append(getAttachedTo()).append(\",\");\r\n    if (getIsAttached() != null)\r\n        sb.append(\"IsAttached: \").append(getIsAttached());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CodeSigningSignature.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInlineDocument() != null)\r\n        sb.append(\"InlineDocument: \").append(getInlineDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.JobExecutionSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getQueuedAt() != null)\r\n        sb.append(\"QueuedAt: \").append(getQueuedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber()).append(\",\");\r\n    if (getExecutionNumber() != null)\r\n        sb.append(\"ExecutionNumber: \").append(getExecutionNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getBotVersion() != null)\r\n        sb.append(\"BotVersion: \").append(getBotVersion()).append(\",\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateDiskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.listAuditTasks",
	"Comment": "lists the device defender audits that have been performed during a given time period.",
	"Method": "ListAuditTasksResult listAuditTasks(ListAuditTasksRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListAuditTasks(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.UpdateThingShadowResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(getPayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getQualifier() != null)\r\n        sb.append(\"Qualifier: \").append(getQualifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetOperationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.GetBootstrapBrokersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterArn() != null)\r\n        sb.append(\"ClusterArn: \").append(getClusterArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RelationalDatabaseBlueprint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlueprintId() != null)\r\n        sb.append(\"BlueprintId: \").append(getBlueprintId()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getEngineDescription() != null)\r\n        sb.append(\"EngineDescription: \").append(getEngineDescription()).append(\",\");\r\n    if (getEngineVersionDescription() != null)\r\n        sb.append(\"EngineVersionDescription: \").append(getEngineVersionDescription()).append(\",\");\r\n    if (getIsEngineDefault() != null)\r\n        sb.append(\"IsEngineDefault: \").append(getIsEngineDefault());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetEventSourceMappingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUUID() != null)\r\n        sb.append(\"UUID: \").append(getUUID());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateIndexingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingIndexingConfiguration() != null)\r\n        sb.append(\"ThingIndexingConfiguration: \").append(getThingIndexingConfiguration()).append(\",\");\r\n    if (getThingGroupIndexingConfiguration() != null)\r\n        sb.append(\"ThingGroupIndexingConfiguration: \").append(getThingGroupIndexingConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetFunctionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration()).append(\",\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getConcurrency() != null)\r\n        sb.append(\"Concurrency: \").append(getConcurrency());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.removeTagsFromStream",
	"Comment": "removes tags from the specified kinesis data stream. removed tags are deleted and cannot be recovered after thisoperation successfully completes.if you specify a tag that does not exist, it is ignored.removetagsfromstream has a limit of five transactions per second per account.",
	"Method": "RemoveTagsFromStreamResult removeTagsFromStream(RemoveTagsFromStreamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveTagsFromStream(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateCustomKeyStoreRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomKeyStoreName() != null)\r\n        sb.append(\"CustomKeyStoreName: \").append(getCustomKeyStoreName()).append(\",\");\r\n    if (getCloudHsmClusterId() != null)\r\n        sb.append(\"CloudHsmClusterId: \").append(getCloudHsmClusterId()).append(\",\");\r\n    if (getTrustAnchorCertificate() != null)\r\n        sb.append(\"TrustAnchorCertificate: \").append(getTrustAnchorCertificate()).append(\",\");\r\n    if (getKeyStorePassword() != null)\r\n        sb.append(\"KeyStorePassword: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.Intent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIntentName() != null)\r\n        sb.append(\"IntentName: \").append(getIntentName()).append(\",\");\r\n    if (getIntentVersion() != null)\r\n        sb.append(\"IntentVersion: \").append(getIntentVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerClient.listUsageForLicenseConfiguration",
	"Comment": "lists all license usage records for a license configuration, displaying license consumption details by resourceat a selected point in time. use this action to audit the current license consumption for any license inventoryand configuration.",
	"Method": "ListUsageForLicenseConfigurationResult listUsageForLicenseConfiguration(ListUsageForLicenseConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListUsageForLicenseConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ResourceInventory.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getResourceOwningAccountId() != null)\r\n        sb.append(\"ResourceOwningAccountId: \").append(getResourceOwningAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteScheduledAuditResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisFirehoseInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.StartApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.S3DestinationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getBufferingHints() != null)\r\n        sb.append(\"BufferingHints: \").append(getBufferingHints()).append(\",\");\r\n    if (getCompressionFormat() != null)\r\n        sb.append(\"CompressionFormat: \").append(getCompressionFormat()).append(\",\");\r\n    if (getEncryptionConfiguration() != null)\r\n        sb.append(\"EncryptionConfiguration: \").append(getEncryptionConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.LayerVersionContentOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getCodeSha256() != null)\r\n        sb.append(\"CodeSha256: \").append(getCodeSha256()).append(\",\");\r\n    if (getCodeSize() != null)\r\n        sb.append(\"CodeSize: \").append(getCodeSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetExportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getExportType() != null)\r\n        sb.append(\"ExportType: \").append(getExportType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.IntentMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.GetThingShadowResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(getPayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClient.publish",
	"Comment": "publishes state information.for more information, see httpprotocol in the aws iot developer guide.",
	"Method": "PublishResult publish(PublishRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePublish(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.updateEventSourceMapping",
	"Comment": "updates an event source mapping. you can change the function that aws lambda invokes, or pause invocation andresume later from the same location.",
	"Method": "UpdateEventSourceMappingResult updateEventSourceMapping(UpdateEventSourceMappingRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateEventSourceMapping(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.EncryptRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getPlaintext() != null)\r\n        sb.append(\"Plaintext: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getEncryptionContext() != null)\r\n        sb.append(\"EncryptionContext: \").append(getEncryptionContext()).append(\",\");\r\n    if (getGrantTokens() != null)\r\n        sb.append(\"GrantTokens: \").append(getGrantTokens());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeAsyncRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getInvokeArgs() != null)\r\n        sb.append(\"InvokeArgs: \").append(getInvokeArgs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DiskSnapshotInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSizeInGb() != null)\r\n        sb.append(\"SizeInGb: \").append(getSizeInGb());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ConnectCustomKeyStoreRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomKeyStoreId() != null)\r\n        sb.append(\"CustomKeyStoreId: \").append(getCustomKeyStoreId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeSecurityProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getSecurityProfileArn() != null)\r\n        sb.append(\"SecurityProfileArn: \").append(getSecurityProfileArn()).append(\",\");\r\n    if (getSecurityProfileDescription() != null)\r\n        sb.append(\"SecurityProfileDescription: \").append(getSecurityProfileDescription()).append(\",\");\r\n    if (getBehaviors() != null)\r\n        sb.append(\"Behaviors: \").append(getBehaviors()).append(\",\");\r\n    if (getAlertTargets() != null)\r\n        sb.append(\"AlertTargets: \").append(getAlertTargets()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.Domain.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getDomainEntries() != null)\r\n        sb.append(\"DomainEntries: \").append(getDomainEntries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.PublishLayerVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerName() != null)\r\n        sb.append(\"LayerName: \").append(getLayerName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getCompatibleRuntimes() != null)\r\n        sb.append(\"CompatibleRuntimes: \").append(getCompatibleRuntimes()).append(\",\");\r\n    if (getLicenseInfo() != null)\r\n        sb.append(\"LicenseInfo: \").append(getLicenseInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListTagsForStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getHasMoreTags() != null)\r\n        sb.append(\"HasMoreTags: \").append(getHasMoreTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ListApplicationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationSummaries() != null)\r\n        sb.append(\"ApplicationSummaries: \").append(getApplicationSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.PendingModifiedRelationalDatabaseValues.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getBackupRetentionEnabled() != null)\r\n        sb.append(\"BackupRetentionEnabled: \").append(getBackupRetentionEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DeletePlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisAsyncClient.mergeShardsAsync",
	"Comment": "simplified method form for invoking the mergeshards operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<MergeShardsResult> mergeShardsAsync(MergeShardsRequest request,java.util.concurrent.Future<MergeShardsResult> mergeShardsAsync,MergeShardsRequest request,com.amazonaws.handlers.AsyncHandler<MergeShardsRequest, MergeShardsResult> asyncHandler,java.util.concurrent.Future<MergeShardsResult> mergeShardsAsync,String streamName,String shardToMerge,String adjacentShardToMerge,java.util.concurrent.Future<MergeShardsResult> mergeShardsAsync,String streamName,String shardToMerge,String adjacentShardToMerge,com.amazonaws.handlers.AsyncHandler<MergeShardsRequest, MergeShardsResult> asyncHandler){\r\n    return mergeShardsAsync(new MergeShardsRequest().withStreamName(streamName).withShardToMerge(shardToMerge).withAdjacentShardToMerge(adjacentShardToMerge), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisFirehoseInputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DeleteAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasName() != null)\r\n        sb.append(\"AliasName: \").append(getAliasName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.attachStaticIp",
	"Comment": "attaches a static ip address to a specific amazon lightsail instance.",
	"Method": "AttachStaticIpResult attachStaticIp(AttachStaticIpRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAttachStaticIp(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteOTAUpdateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOtaUpdateId() != null)\r\n        sb.append(\"OtaUpdateId: \").append(getOtaUpdateId()).append(\",\");\r\n    if (getDeleteStream() != null)\r\n        sb.append(\"DeleteStream: \").append(getDeleteStream()).append(\",\");\r\n    if (getForceDeleteAWSJob() != null)\r\n        sb.append(\"ForceDeleteAWSJob: \").append(getForceDeleteAWSJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetLayerVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerName() != null)\r\n        sb.append(\"LayerName: \").append(getLayerName()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetKeyPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AttachLoadBalancerTlsCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateCertificateFromCsrResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getCertificatePem() != null)\r\n        sb.append(\"CertificatePem: \").append(getCertificatePem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDiskSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskSnapshots() != null)\r\n        sb.append(\"DiskSnapshots: \").append(getDiskSnapshots()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getFunctionError() != null)\r\n        sb.append(\"FunctionError: \").append(getFunctionError()).append(\",\");\r\n    if (getLogResult() != null)\r\n        sb.append(\"LogResult: \").append(getLogResult()).append(\",\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getExecutedVersion() != null)\r\n        sb.append(\"ExecutedVersion: \").append(getExecutedVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StartStreamEncryptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getEncryptionType() != null)\r\n        sb.append(\"EncryptionType: \").append(getEncryptionType()).append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.Operation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getIsTerminal() != null)\r\n        sb.append(\"IsTerminal: \").append(getIsTerminal()).append(\",\");\r\n    if (getOperationDetails() != null)\r\n        sb.append(\"OperationDetails: \").append(getOperationDetails()).append(\",\");\r\n    if (getOperationType() != null)\r\n        sb.append(\"OperationType: \").append(getOperationType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusChangedAt() != null)\r\n        sb.append(\"StatusChangedAt: \").append(getStatusChangedAt()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorDetails() != null)\r\n        sb.append(\"ErrorDetails: \").append(getErrorDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasName() != null)\r\n        sb.append(\"AliasName: \").append(getAliasName()).append(\",\");\r\n    if (getTargetKeyId() != null)\r\n        sb.append(\"TargetKeyId: \").append(getTargetKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DeleteStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getEnforceConsumerDeletion() != null)\r\n        sb.append(\"EnforceConsumerDeletion: \").append(getEnforceConsumerDeletion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseLogEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getStartFromHead() != null)\r\n        sb.append(\"StartFromHead: \").append(getStartFromHead()).append(\",\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreatePolicyVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getPolicyVersionId() != null)\r\n        sb.append(\"PolicyVersionId: \").append(getPolicyVersionId()).append(\",\");\r\n    if (getIsDefaultVersion() != null)\r\n        sb.append(\"IsDefaultVersion: \").append(getIsDefaultVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.ZookeeperNodeInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttachedENIId() != null)\r\n        sb.append(\"AttachedENIId: \").append(getAttachedENIId()).append(\",\");\r\n    if (getClientVpcIpAddress() != null)\r\n        sb.append(\"ClientVpcIpAddress: \").append(getClientVpcIpAddress()).append(\",\");\r\n    if (getZookeeperId() != null)\r\n        sb.append(\"ZookeeperId: \").append(getZookeeperId()).append(\",\");\r\n    if (getZookeeperVersion() != null)\r\n        sb.append(\"ZookeeperVersion: \").append(getZookeeperVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.RemovePermissionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.listCACertificates",
	"Comment": "lists the ca certificates registered for your aws account.the results are paginated with a default page size of 25. you can use the returned marker to retrieve additionalresults.",
	"Method": "ListCACertificatesResult listCACertificates(ListCACertificatesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListCACertificates(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.StartNextPendingJobExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecution() != null)\r\n        sb.append(\"Execution: \").append(getExecution());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingsInBillingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThings() != null)\r\n        sb.append(\"Things: \").append(getThings()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetPolicyVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getPolicyVersionId() != null)\r\n        sb.append(\"PolicyVersionId: \").append(getPolicyVersionId()).append(\",\");\r\n    if (getIsDefaultVersion() != null)\r\n        sb.append(\"IsDefaultVersion: \").append(getIsDefaultVersion()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getGenerationId() != null)\r\n        sb.append(\"GenerationId: \").append(getGenerationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.TagDeliveryStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSClientBuilder.build",
	"Comment": "construct a synchronous implementation of awskms using the current builder configuration.",
	"Method": "AWSKMS build(AwsSyncClientParams params){\r\n    return new AWSKMSClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteBillingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.CreateDeliveryStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName()).append(\",\");\r\n    if (getDeliveryStreamType() != null)\r\n        sb.append(\"DeliveryStreamType: \").append(getDeliveryStreamType()).append(\",\");\r\n    if (getKinesisStreamSourceConfiguration() != null)\r\n        sb.append(\"KinesisStreamSourceConfiguration: \").append(getKinesisStreamSourceConfiguration()).append(\",\");\r\n    if (getS3DestinationConfiguration() != null)\r\n        sb.append(\"S3DestinationConfiguration: \").append(getS3DestinationConfiguration()).append(\",\");\r\n    if (getExtendedS3DestinationConfiguration() != null)\r\n        sb.append(\"ExtendedS3DestinationConfiguration: \").append(getExtendedS3DestinationConfiguration()).append(\",\");\r\n    if (getRedshiftDestinationConfiguration() != null)\r\n        sb.append(\"RedshiftDestinationConfiguration: \").append(getRedshiftDestinationConfiguration()).append(\",\");\r\n    if (getElasticsearchDestinationConfiguration() != null)\r\n        sb.append(\"ElasticsearchDestinationConfiguration: \").append(getElasticsearchDestinationConfiguration()).append(\",\");\r\n    if (getSplunkDestinationConfiguration() != null)\r\n        sb.append(\"SplunkDestinationConfiguration: \").append(getSplunkDestinationConfiguration()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.AmazonLexRuntimeClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonlexruntime using the current builder configuration.",
	"Method": "AmazonLexRuntime build(AwsSyncClientParams params){\r\n    return new AmazonLexRuntimeClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeScheduledAuditRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduledAuditName() != null)\r\n        sb.append(\"ScheduledAuditName: \").append(getScheduledAuditName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeleteAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBuiltinSlotTypesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSlotTypes() != null)\r\n        sb.append(\"SlotTypes: \").append(getSlotTypes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DetachStaticIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticIpName() != null)\r\n        sb.append(\"StaticIpName: \").append(getStaticIpName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDiskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDisk() != null)\r\n        sb.append(\"Disk: \").append(getDisk());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeSecurityProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateScheduledAuditResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduledAuditArn() != null)\r\n        sb.append(\"ScheduledAuditArn: \").append(getScheduledAuditArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.createEventSourceMapping",
	"Comment": "creates a mapping between an event source and an aws lambda function. lambda reads items from the event sourceand triggers the function.for details about each event source type, see the following topics.using aws lambda with amazon kinesisusing aws lambda with amazon sqsusing aws lambda with amazon dynamodb",
	"Method": "CreateEventSourceMappingResult createEventSourceMapping(CreateEventSourceMappingRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateEventSourceMapping(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.EncryptionAtRest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataVolumeKMSKeyId() != null)\r\n        sb.append(\"DataVolumeKMSKeyId: \").append(getDataVolumeKMSKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.createStream",
	"Comment": "creates a stream for delivering one or more large files in chunks over mqtt. a stream transports data bytes inchunks or blocks packaged as mqtt messages from a source like s3. you can have one or more files associated witha stream. the total size of a file associated with the stream cannot exceed more than 2 mb. the stream will becreated with version 0. if a stream is created with the same streamid as a stream that existed and was deletedwithin last 90 days, we will resurrect that old stream by incrementing the version by 1.",
	"Method": "CreateStreamResult createStream(CreateStreamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateStream(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceMetricDataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getPeriod() != null)\r\n        sb.append(\"Period: \").append(getPeriod()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit()).append(\",\");\r\n    if (getStatistics() != null)\r\n        sb.append(\"Statistics: \").append(getStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateCloudFormationStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListBillingGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroups() != null)\r\n        sb.append(\"BillingGroups: \").append(getBillingGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.PlacementDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getPlacementName() != null)\r\n        sb.append(\"PlacementName: \").append(getPlacementName()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getUpdatedDate() != null)\r\n        sb.append(\"UpdatedDate: \").append(getUpdatedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.MonitoringConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationType() != null)\r\n        sb.append(\"ConfigurationType: \").append(getConfigurationType()).append(\",\");\r\n    if (getMetricsLevel() != null)\r\n        sb.append(\"MetricsLevel: \").append(getMetricsLevel()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisAsyncClient.putRecordAsync",
	"Comment": "simplified method form for invoking the putrecord operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<PutRecordResult> putRecordAsync(PutRecordRequest request,java.util.concurrent.Future<PutRecordResult> putRecordAsync,PutRecordRequest request,com.amazonaws.handlers.AsyncHandler<PutRecordRequest, PutRecordResult> asyncHandler,java.util.concurrent.Future<PutRecordResult> putRecordAsync,String streamName,java.nio.ByteBuffer data,String partitionKey,java.util.concurrent.Future<PutRecordResult> putRecordAsync,String streamName,java.nio.ByteBuffer data,String partitionKey,com.amazonaws.handlers.AsyncHandler<PutRecordRequest, PutRecordResult> asyncHandler,java.util.concurrent.Future<PutRecordResult> putRecordAsync,String streamName,java.nio.ByteBuffer data,String partitionKey,String sequenceNumberForOrdering,java.util.concurrent.Future<PutRecordResult> putRecordAsync,String streamName,java.nio.ByteBuffer data,String partitionKey,String sequenceNumberForOrdering,com.amazonaws.handlers.AsyncHandler<PutRecordRequest, PutRecordResult> asyncHandler){\r\n    return putRecordAsync(new PutRecordRequest().withStreamName(streamName).withData(data).withPartitionKey(partitionKey).withSequenceNumberForOrdering(sequenceNumberForOrdering), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.S3Configuration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getFileKey() != null)\r\n        sb.append(\"FileKey: \").append(getFileKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.AddApplicationReferenceDataSourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetFunctionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getQualifier() != null)\r\n        sb.append(\"Qualifier: \").append(getQualifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.RunPipelineActivityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineActivity() != null)\r\n        sb.append(\"PipelineActivity: \").append(getPipelineActivity()).append(\",\");\r\n    if (getPayloads() != null)\r\n        sb.append(\"Payloads: \").append(getPayloads());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputParallelism.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegisterThingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2Client.describeApplication",
	"Comment": "returns information about a specific amazon kinesis data analytics application.if you want to retrieve a list of all applications in your account, use the listapplications operation.",
	"Method": "DescribeApplicationResult describeApplication(DescribeApplicationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeApplication(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteUtterancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.waiters.AmazonKinesisWaiters.streamNotExists",
	"Comment": "builds a streamnotexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeStreamRequest> streamNotExists(){\r\n    return new WaiterBuilder<DescribeStreamRequest, DescribeStreamResult>().withSdkFunction(new DescribeStreamFunction(client)).withAcceptors(new StreamNotExists.IsResourceNotFoundExceptionMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(18), new FixedDelayStrategy(10))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DynamoDBAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation()).append(\",\");\r\n    if (getHashKeyField() != null)\r\n        sb.append(\"HashKeyField: \").append(getHashKeyField()).append(\",\");\r\n    if (getHashKeyValue() != null)\r\n        sb.append(\"HashKeyValue: \").append(getHashKeyValue()).append(\",\");\r\n    if (getHashKeyType() != null)\r\n        sb.append(\"HashKeyType: \").append(getHashKeyType()).append(\",\");\r\n    if (getRangeKeyField() != null)\r\n        sb.append(\"RangeKeyField: \").append(getRangeKeyField()).append(\",\");\r\n    if (getRangeKeyValue() != null)\r\n        sb.append(\"RangeKeyValue: \").append(getRangeKeyValue()).append(\",\");\r\n    if (getRangeKeyType() != null)\r\n        sb.append(\"RangeKeyType: \").append(getRangeKeyType()).append(\",\");\r\n    if (getPayloadField() != null)\r\n        sb.append(\"PayloadField: \").append(getPayloadField());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSAsyncClient.listKeysAsync",
	"Comment": "simplified method form for invoking the listkeys operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListKeysResult> listKeysAsync(ListKeysRequest request,java.util.concurrent.Future<ListKeysResult> listKeysAsync,ListKeysRequest request,com.amazonaws.handlers.AsyncHandler<ListKeysRequest, ListKeysResult> asyncHandler,java.util.concurrent.Future<ListKeysResult> listKeysAsync,java.util.concurrent.Future<ListKeysResult> listKeysAsync,com.amazonaws.handlers.AsyncHandler<ListKeysRequest, ListKeysResult> asyncHandler){\r\n    return listKeysAsync(new ListKeysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteDiskSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.SourceSchema.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordFormat() != null)\r\n        sb.append(\"RecordFormat: \").append(getRecordFormat()).append(\",\");\r\n    if (getRecordEncoding() != null)\r\n        sb.append(\"RecordEncoding: \").append(getRecordEncoding()).append(\",\");\r\n    if (getRecordColumns() != null)\r\n        sb.append(\"RecordColumns: \").append(getRecordColumns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.IotEventsAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputName() != null)\r\n        sb.append(\"InputName: \").append(getInputName()).append(\",\");\r\n    if (getMessageId() != null)\r\n        sb.append(\"MessageId: \").append(getMessageId()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.Schedule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExpression() != null)\r\n        sb.append(\"Expression: \").append(getExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.AssociateDeviceWithPlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.PasswordData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCiphertext() != null)\r\n        sb.append(\"Ciphertext: \").append(getCiphertext()).append(\",\");\r\n    if (getKeyPairName() != null)\r\n        sb.append(\"KeyPairName: \").append(getKeyPairName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisFirehoseOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateRelationalDatabaseSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getRelationalDatabaseSnapshotName() != null)\r\n        sb.append(\"RelationalDatabaseSnapshotName: \").append(getRelationalDatabaseSnapshotName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDomainsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ScheduleKeyDeletionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getPendingWindowInDays() != null)\r\n        sb.append(\"PendingWindowInDays: \").append(getPendingWindowInDays());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetTopicRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleArn() != null)\r\n        sb.append(\"RuleArn: \").append(getRuleArn()).append(\",\");\r\n    if (getRule() != null)\r\n        sb.append(\"Rule: \").append(getRule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DeleteApplicationInputProcessingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateCustomKeyStoreResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomKeyStoreId() != null)\r\n        sb.append(\"CustomKeyStoreId: \").append(getCustomKeyStoreId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputLambdaProcessorDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DecryptResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getPlaintext() != null)\r\n        sb.append(\"Plaintext: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DiskSnapshot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getSizeInGb() != null)\r\n        sb.append(\"SizeInGb: \").append(getSizeInGb()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getProgress() != null)\r\n        sb.append(\"Progress: \").append(getProgress()).append(\",\");\r\n    if (getFromDiskName() != null)\r\n        sb.append(\"FromDiskName: \").append(getFromDiskName()).append(\",\");\r\n    if (getFromDiskArn() != null)\r\n        sb.append(\"FromDiskArn: \").append(getFromDiskArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getThingGroupProperties() != null)\r\n        sb.append(\"ThingGroupProperties: \").append(getThingGroupProperties()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DecreaseStreamRetentionPeriodResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListFragmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFragmentSelector() != null)\r\n        sb.append(\"FragmentSelector: \").append(getFragmentSelector());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.RevokeGrantResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getEncryptionContext() != null)\r\n        sb.append(\"EncryptionContext: \").append(getEncryptionContext()).append(\",\");\r\n    if (getNumberOfBytes() != null)\r\n        sb.append(\"NumberOfBytes: \").append(getNumberOfBytes()).append(\",\");\r\n    if (getKeySpec() != null)\r\n        sb.append(\"KeySpec: \").append(getKeySpec()).append(\",\");\r\n    if (getGrantTokens() != null)\r\n        sb.append(\"GrantTokens: \").append(getGrantTokens());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteIntentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2Client.listApplicationSnapshots",
	"Comment": "lists information about the current application snapshots.",
	"Method": "ListApplicationSnapshotsResult listApplicationSnapshots(ListApplicationSnapshotsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListApplicationSnapshots(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CodeSigning.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAwsSignerJobId() != null)\r\n        sb.append(\"AwsSignerJobId: \").append(getAwsSignerJobId()).append(\",\");\r\n    if (getStartSigningJobParameter() != null)\r\n        sb.append(\"StartSigningJobParameter: \").append(getStartSigningJobParameter()).append(\",\");\r\n    if (getCustomCodeSigning() != null)\r\n        sb.append(\"CustomCodeSigning: \").append(getCustomCodeSigning());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.AWSIoT1ClickProjectsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AttachPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.UtteranceData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUtteranceString() != null)\r\n        sb.append(\"UtteranceString: \").append(getUtteranceString()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getDistinctUsers() != null)\r\n        sb.append(\"DistinctUsers: \").append(getDistinctUsers()).append(\",\");\r\n    if (getFirstUtteredDate() != null)\r\n        sb.append(\"FirstUtteredDate: \").append(getFirstUtteredDate()).append(\",\");\r\n    if (getLastUtteredDate() != null)\r\n        sb.append(\"LastUtteredDate: \").append(getLastUtteredDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.GetPendingJobExecutionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInProgressJobs() != null)\r\n        sb.append(\"InProgressJobs: \").append(getInProgressJobs()).append(\",\");\r\n    if (getQueuedJobs() != null)\r\n        sb.append(\"QueuedJobs: \").append(getQueuedJobs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AllocateStaticIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CreateChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DiscoverInputSchemaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getInputStartingPositionConfiguration() != null)\r\n        sb.append(\"InputStartingPositionConfiguration: \").append(getInputStartingPositionConfiguration()).append(\",\");\r\n    if (getS3Configuration() != null)\r\n        sb.append(\"S3Configuration: \").append(getS3Configuration()).append(\",\");\r\n    if (getInputProcessingConfiguration() != null)\r\n        sb.append(\"InputProcessingConfiguration: \").append(getInputProcessingConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteOTAUpdateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.IncreaseStreamRetentionPeriodRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getRetentionPeriodHours() != null)\r\n        sb.append(\"RetentionPeriodHours: \").append(getRetentionPeriodHours());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetIntentVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateRoleAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleAlias() != null)\r\n        sb.append(\"RoleAlias: \").append(getRoleAlias()).append(\",\");\r\n    if (getRoleAliasArn() != null)\r\n        sb.append(\"RoleAliasArn: \").append(getRoleAliasArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeleteChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.AWSKafkaClientBuilder.build",
	"Comment": "construct a synchronous implementation of awskafka using the current builder configuration.",
	"Method": "AWSKafka build(AwsSyncClientParams params){\r\n    return new AWSKafkaClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListLicenseSpecificationsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseSpecifications() != null)\r\n        sb.append(\"LicenseSpecifications: \").append(getLicenseSpecifications()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CreateDatastoreResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatastoreName() != null)\r\n        sb.append(\"DatastoreName: \").append(getDatastoreName()).append(\",\");\r\n    if (getDatastoreArn() != null)\r\n        sb.append(\"DatastoreArn: \").append(getDatastoreArn()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesClient.describeDevice",
	"Comment": "given a device id, returns a describedeviceresponse object describing the details of the device.",
	"Method": "DescribeDeviceResult describeDevice(DescribeDeviceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDevice(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DisableTopicRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.AWSIoTJobsDataPlaneAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsiotjobsdataplaneasync using the current builder configuration.",
	"Method": "AWSIoTJobsDataPlaneAsync build(AwsAsyncClientParams params){\r\n    return new AWSIoTJobsDataPlaneAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.StopApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationOutputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getOutputId() != null)\r\n        sb.append(\"OutputId: \").append(getOutputId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ImportKeyMaterialResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteThingTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.ExportSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSAsyncClient.createKeyAsync",
	"Comment": "simplified method form for invoking the createkey operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateKeyResult> createKeyAsync(CreateKeyRequest request,java.util.concurrent.Future<CreateKeyResult> createKeyAsync,CreateKeyRequest request,com.amazonaws.handlers.AsyncHandler<CreateKeyRequest, CreateKeyResult> asyncHandler,java.util.concurrent.Future<CreateKeyResult> createKeyAsync,java.util.concurrent.Future<CreateKeyResult> createKeyAsync,com.amazonaws.handlers.AsyncHandler<CreateKeyRequest, CreateKeyResult> asyncHandler){\r\n    return createKeyAsync(new CreateKeyRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsResultEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSequenceNumber() != null)\r\n        sb.append(\"SequenceNumber: \").append(getSequenceNumber()).append(\",\");\r\n    if (getShardId() != null)\r\n        sb.append(\"ShardId: \").append(getShardId()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerClient.getLicenseConfiguration",
	"Comment": "returns a detailed description of a license configuration.",
	"Method": "GetLicenseConfigurationResult getLicenseConfiguration(GetLicenseConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLicenseConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Action.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDynamoDB() != null)\r\n        sb.append(\"DynamoDB: \").append(getDynamoDB()).append(\",\");\r\n    if (getDynamoDBv2() != null)\r\n        sb.append(\"DynamoDBv2: \").append(getDynamoDBv2()).append(\",\");\r\n    if (getLambda() != null)\r\n        sb.append(\"Lambda: \").append(getLambda()).append(\",\");\r\n    if (getSns() != null)\r\n        sb.append(\"Sns: \").append(getSns()).append(\",\");\r\n    if (getSqs() != null)\r\n        sb.append(\"Sqs: \").append(getSqs()).append(\",\");\r\n    if (getKinesis() != null)\r\n        sb.append(\"Kinesis: \").append(getKinesis()).append(\",\");\r\n    if (getRepublish() != null)\r\n        sb.append(\"Republish: \").append(getRepublish()).append(\",\");\r\n    if (getS3() != null)\r\n        sb.append(\"S3: \").append(getS3()).append(\",\");\r\n    if (getFirehose() != null)\r\n        sb.append(\"Firehose: \").append(getFirehose()).append(\",\");\r\n    if (getCloudwatchMetric() != null)\r\n        sb.append(\"CloudwatchMetric: \").append(getCloudwatchMetric()).append(\",\");\r\n    if (getCloudwatchAlarm() != null)\r\n        sb.append(\"CloudwatchAlarm: \").append(getCloudwatchAlarm()).append(\",\");\r\n    if (getElasticsearch() != null)\r\n        sb.append(\"Elasticsearch: \").append(getElasticsearch()).append(\",\");\r\n    if (getSalesforce() != null)\r\n        sb.append(\"Salesforce: \").append(getSalesforce()).append(\",\");\r\n    if (getIotAnalytics() != null)\r\n        sb.append(\"IotAnalytics: \").append(getIotAnalytics()).append(\",\");\r\n    if (getIotEvents() != null)\r\n        sb.append(\"IotEvents: \").append(getIotEvents()).append(\",\");\r\n    if (getStepFunctions() != null)\r\n        sb.append(\"StepFunctions: \").append(getStepFunctions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseMasterUserPasswordResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DescribeChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannel() != null)\r\n        sb.append(\"Channel: \").append(getChannel()).append(\",\");\r\n    if (getStatistics() != null)\r\n        sb.append(\"Statistics: \").append(getStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateBillingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.AmazonLexModelBuildingClient.getImport",
	"Comment": "gets information about an import job started with the startimport operation.",
	"Method": "GetImportResult getImport(GetImportRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetImport(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AddThingToBillingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName()).append(\",\");\r\n    if (getBillingGroupArn() != null)\r\n        sb.append(\"BillingGroupArn: \").append(getBillingGroupArn()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeprecateThingTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName()).append(\",\");\r\n    if (getUndoDeprecate() != null)\r\n        sb.append(\"UndoDeprecate: \").append(getUndoDeprecate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotAliasesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBotAliases() != null)\r\n        sb.append(\"BotAliases: \").append(getBotAliases()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateInstanceSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingIndexingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingIndexingMode() != null)\r\n        sb.append(\"ThingIndexingMode: \").append(getThingIndexingMode()).append(\",\");\r\n    if (getThingConnectivityIndexingMode() != null)\r\n        sb.append(\"ThingConnectivityIndexingMode: \").append(getThingConnectivityIndexingMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.UpdateServiceSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3BucketArn() != null)\r\n        sb.append(\"S3BucketArn: \").append(getS3BucketArn()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getOrganizationConfiguration() != null)\r\n        sb.append(\"OrganizationConfiguration: \").append(getOrganizationConfiguration()).append(\",\");\r\n    if (getEnableCrossAccountsDiscovery() != null)\r\n        sb.append(\"EnableCrossAccountsDiscovery: \").append(getEnableCrossAccountsDiscovery());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetSlotTypeVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.S3ReferenceDataSourceDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getFileKey() != null)\r\n        sb.append(\"FileKey: \").append(getFileKey()).append(\",\");\r\n    if (getReferenceRoleARN() != null)\r\n        sb.append(\"ReferenceRoleARN: \").append(getReferenceRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.PutKeyPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getBypassPolicyLockoutSafetyCheck() != null)\r\n        sb.append(\"BypassPolicyLockoutSafetyCheck: \").append(getBypassPolicyLockoutSafetyCheck());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeEventConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Configuration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescriptionSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getStreamStatus() != null)\r\n        sb.append(\"StreamStatus: \").append(getStreamStatus()).append(\",\");\r\n    if (getRetentionPeriodHours() != null)\r\n        sb.append(\"RetentionPeriodHours: \").append(getRetentionPeriodHours()).append(\",\");\r\n    if (getStreamCreationTimestamp() != null)\r\n        sb.append(\"StreamCreationTimestamp: \").append(getStreamCreationTimestamp()).append(\",\");\r\n    if (getEnhancedMonitoring() != null)\r\n        sb.append(\"EnhancedMonitoring: \").append(getEnhancedMonitoring()).append(\",\");\r\n    if (getEncryptionType() != null)\r\n        sb.append(\"EncryptionType: \").append(getEncryptionType()).append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getOpenShardCount() != null)\r\n        sb.append(\"OpenShardCount: \").append(getOpenShardCount()).append(\",\");\r\n    if (getConsumerCount() != null)\r\n        sb.append(\"ConsumerCount: \").append(getConsumerCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputParallelism.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SetV2LoggingLevelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetOperationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupsForThingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.ListApplicationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getExclusiveStartApplicationName() != null)\r\n        sb.append(\"ExclusiveStartApplicationName: \").append(getExclusiveStartApplicationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ParallelismConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationType() != null)\r\n        sb.append(\"ConfigurationType: \").append(getConfigurationType()).append(\",\");\r\n    if (getParallelism() != null)\r\n        sb.append(\"Parallelism: \").append(getParallelism()).append(\",\");\r\n    if (getParallelismPerKPU() != null)\r\n        sb.append(\"ParallelismPerKPU: \").append(getParallelismPerKPU()).append(\",\");\r\n    if (getAutoScalingEnabled() != null)\r\n        sb.append(\"AutoScalingEnabled: \").append(getAutoScalingEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.RevokeGrantRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getGrantId() != null)\r\n        sb.append(\"GrantId: \").append(getGrantId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.LoadBalancerTlsCertificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getIsAttached() != null)\r\n        sb.append(\"IsAttached: \").append(getIsAttached()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getDomainValidationRecords() != null)\r\n        sb.append(\"DomainValidationRecords: \").append(getDomainValidationRecords()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getIssuedAt() != null)\r\n        sb.append(\"IssuedAt: \").append(getIssuedAt()).append(\",\");\r\n    if (getIssuer() != null)\r\n        sb.append(\"Issuer: \").append(getIssuer()).append(\",\");\r\n    if (getKeyAlgorithm() != null)\r\n        sb.append(\"KeyAlgorithm: \").append(getKeyAlgorithm()).append(\",\");\r\n    if (getNotAfter() != null)\r\n        sb.append(\"NotAfter: \").append(getNotAfter()).append(\",\");\r\n    if (getNotBefore() != null)\r\n        sb.append(\"NotBefore: \").append(getNotBefore()).append(\",\");\r\n    if (getRenewalSummary() != null)\r\n        sb.append(\"RenewalSummary: \").append(getRenewalSummary()).append(\",\");\r\n    if (getRevocationReason() != null)\r\n        sb.append(\"RevocationReason: \").append(getRevocationReason()).append(\",\");\r\n    if (getRevokedAt() != null)\r\n        sb.append(\"RevokedAt: \").append(getRevokedAt()).append(\",\");\r\n    if (getSerial() != null)\r\n        sb.append(\"Serial: \").append(getSerial()).append(\",\");\r\n    if (getSignatureAlgorithm() != null)\r\n        sb.append(\"SignatureAlgorithm: \").append(getSignatureAlgorithm()).append(\",\");\r\n    if (getSubject() != null)\r\n        sb.append(\"Subject: \").append(getSubject()).append(\",\");\r\n    if (getSubjectAlternativeNames() != null)\r\n        sb.append(\"SubjectAlternativeNames: \").append(getSubjectAlternativeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.LambdaOutputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.PutSlotTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEnumerationValues() != null)\r\n        sb.append(\"EnumerationValues: \").append(getEnumerationValues()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getValueSelectionStrategy() != null)\r\n        sb.append(\"ValueSelectionStrategy: \").append(getValueSelectionStrategy()).append(\",\");\r\n    if (getCreateVersion() != null)\r\n        sb.append(\"CreateVersion: \").append(getCreateVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ValidationError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AddThingToBillingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AttachInstancesToLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DecreaseStreamRetentionPeriodRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getRetentionPeriodHours() != null)\r\n        sb.append(\"RetentionPeriodHours: \").append(getRetentionPeriodHours());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.validateSecurityProfileBehaviors",
	"Comment": "validates a device defender security profile behaviors specification.",
	"Method": "ValidateSecurityProfileBehaviorsResult validateSecurityProfileBehaviors(ValidateSecurityProfileBehaviorsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeValidateSecurityProfileBehaviors(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListResourceTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getTruncated() != null)\r\n        sb.append(\"Truncated: \").append(getTruncated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.UpdateDatastoreRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatastoreName() != null)\r\n        sb.append(\"DatastoreName: \").append(getDatastoreName()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.ImportKeyPairRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyPairName() != null)\r\n        sb.append(\"KeyPairName: \").append(getKeyPairName()).append(\",\");\r\n    if (getPublicKeyBase64() != null)\r\n        sb.append(\"PublicKeyBase64: \").append(getPublicKeyBase64());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListAuthorizersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizers() != null)\r\n        sb.append(\"Authorizers: \").append(getAuthorizers()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.BillingGroupProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroupDescription() != null)\r\n        sb.append(\"BillingGroupDescription: \").append(getBillingGroupDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.AddApplicationReferenceDataSourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getReferenceDataSource() != null)\r\n        sb.append(\"ReferenceDataSource: \").append(getReferenceDataSource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordBatchResponseEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordId() != null)\r\n        sb.append(\"RecordId: \").append(getRecordId()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetHLSStreamingSessionURLResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHLSStreamingSessionURL() != null)\r\n        sb.append(\"HLSStreamingSessionURL: \").append(getHLSStreamingSessionURL());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.PutBotAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getBotVersion() != null)\r\n        sb.append(\"BotVersion: \").append(getBotVersion()).append(\",\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.SlotTypeMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.RecordColumn.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMapping() != null)\r\n        sb.append(\"Mapping: \").append(getMapping()).append(\",\");\r\n    if (getSqlType() != null)\r\n        sb.append(\"SqlType: \").append(getSqlType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GrantConstraints.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncryptionContextSubset() != null)\r\n        sb.append(\"EncryptionContextSubset: \").append(getEncryptionContextSubset()).append(\",\");\r\n    if (getEncryptionContextEquals() != null)\r\n        sb.append(\"EncryptionContextEquals: \").append(getEncryptionContextEquals());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListCertificatesByCARequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaCertificateId() != null)\r\n        sb.append(\"CaCertificateId: \").append(getCaCertificateId()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getAscendingOrder() != null)\r\n        sb.append(\"AscendingOrder: \").append(getAscendingOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.SelectAttributesActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getNext() != null)\r\n        sb.append(\"Next: \").append(getNext());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.deleteAccountAuditConfiguration",
	"Comment": "restores the default settings for device defender audits for this account. any configuration data you entered isdeleted and all audit checks are reset to disabled.",
	"Method": "DeleteAccountAuditConfigurationResult deleteAccountAuditConfiguration(DeleteAccountAuditConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteAccountAuditConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingRegistrationTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskIds() != null)\r\n        sb.append(\"TaskIds: \").append(getTaskIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.acceptCertificateTransfer",
	"Comment": "accepts a pending certificate transfer. the default state of the certificate is inactive.to check for pending certificate transfers, call listcertificates to enumerate your certificates.",
	"Method": "AcceptCertificateTransferResult acceptCertificateTransfer(AcceptCertificateTransferRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAcceptCertificateTransfer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.UpdateDestinationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.S3Location.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabaseSnapshot",
	"Comment": "returns information about a specific database snapshot in amazon lightsail.",
	"Method": "GetRelationalDatabaseSnapshotResult getRelationalDatabaseSnapshot(GetRelationalDatabaseSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabaseSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.Output.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getKinesisStreamsOutput() != null)\r\n        sb.append(\"KinesisStreamsOutput: \").append(getKinesisStreamsOutput()).append(\",\");\r\n    if (getKinesisFirehoseOutput() != null)\r\n        sb.append(\"KinesisFirehoseOutput: \").append(getKinesisFirehoseOutput()).append(\",\");\r\n    if (getLambdaOutput() != null)\r\n        sb.append(\"LambdaOutput: \").append(getLambdaOutput()).append(\",\");\r\n    if (getDestinationSchema() != null)\r\n        sb.append(\"DestinationSchema: \").append(getDestinationSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetSlotTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEnumerationValues() != null)\r\n        sb.append(\"EnumerationValues: \").append(getEnumerationValues()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getValueSelectionStrategy() != null)\r\n        sb.append(\"ValueSelectionStrategy: \").append(getValueSelectionStrategy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.ListDevicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDevices() != null)\r\n        sb.append(\"Devices: \").append(getDevices()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.MergeShardsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.UpdateAssessmentTargetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTargetArn() != null)\r\n        sb.append(\"AssessmentTargetArn: \").append(getAssessmentTargetArn()).append(\",\");\r\n    if (getAssessmentTargetName() != null)\r\n        sb.append(\"AssessmentTargetName: \").append(getAssessmentTargetName()).append(\",\");\r\n    if (getResourceGroupArn() != null)\r\n        sb.append(\"ResourceGroupArn: \").append(getResourceGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabaseSnapshots",
	"Comment": "returns information about all of your database snapshots in amazon lightsail.",
	"Method": "GetRelationalDatabaseSnapshotsResult getRelationalDatabaseSnapshots(GetRelationalDatabaseSnapshotsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabaseSnapshots(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.TracingConfigResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMode() != null)\r\n        sb.append(\"Mode: \").append(getMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.DataFormatConversionConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchemaConfiguration() != null)\r\n        sb.append(\"SchemaConfiguration: \").append(getSchemaConfiguration()).append(\",\");\r\n    if (getInputFormatConfiguration() != null)\r\n        sb.append(\"InputFormatConfiguration: \").append(getInputFormatConfiguration()).append(\",\");\r\n    if (getOutputFormatConfiguration() != null)\r\n        sb.append(\"OutputFormatConfiguration: \").append(getOutputFormatConfiguration()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerClientBuilder.build",
	"Comment": "construct a synchronous implementation of awslicensemanager using the current builder configuration.",
	"Method": "AWSLicenseManager build(AwsSyncClientParams params){\r\n    return new AWSLicenseManagerClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DiskInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getSizeInGb() != null)\r\n        sb.append(\"SizeInGb: \").append(getSizeInGb()).append(\",\");\r\n    if (getIsSystemDisk() != null)\r\n        sb.append(\"IsSystemDisk: \").append(getIsSystemDisk());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ReplaceTopicRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateGrantRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getGranteePrincipal() != null)\r\n        sb.append(\"GranteePrincipal: \").append(getGranteePrincipal()).append(\",\");\r\n    if (getRetiringPrincipal() != null)\r\n        sb.append(\"RetiringPrincipal: \").append(getRetiringPrincipal()).append(\",\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations()).append(\",\");\r\n    if (getConstraints() != null)\r\n        sb.append(\"Constraints: \").append(getConstraints()).append(\",\");\r\n    if (getGrantTokens() != null)\r\n        sb.append(\"GrantTokens: \").append(getGrantTokens()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateCertificateFromCsrRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateSigningRequest() != null)\r\n        sb.append(\"CertificateSigningRequest: \").append(getCertificateSigningRequest()).append(\",\");\r\n    if (getSetAsActive() != null)\r\n        sb.append(\"SetAsActive: \").append(getSetAsActive());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DetachSecurityProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getSecurityProfileTargetArn() != null)\r\n        sb.append(\"SecurityProfileTargetArn: \").append(getSecurityProfileTargetArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBuiltinSlotTypesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getSignatureContains() != null)\r\n        sb.append(\"SignatureContains: \").append(getSignatureContains()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.MetricDatapoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAverage() != null)\r\n        sb.append(\"Average: \").append(getAverage()).append(\",\");\r\n    if (getMaximum() != null)\r\n        sb.append(\"Maximum: \").append(getMaximum()).append(\",\");\r\n    if (getMinimum() != null)\r\n        sb.append(\"Minimum: \").append(getMinimum()).append(\",\");\r\n    if (getSampleCount() != null)\r\n        sb.append(\"SampleCount: \").append(getSampleCount()).append(\",\");\r\n    if (getSum() != null)\r\n        sb.append(\"Sum: \").append(getSum()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeThingTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName()).append(\",\");\r\n    if (getThingTypeId() != null)\r\n        sb.append(\"ThingTypeId: \").append(getThingTypeId()).append(\",\");\r\n    if (getThingTypeArn() != null)\r\n        sb.append(\"ThingTypeArn: \").append(getThingTypeArn()).append(\",\");\r\n    if (getThingTypeProperties() != null)\r\n        sb.append(\"ThingTypeProperties: \").append(getThingTypeProperties()).append(\",\");\r\n    if (getThingTypeMetadata() != null)\r\n        sb.append(\"ThingTypeMetadata: \").append(getThingTypeMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateOTAUpdateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOtaUpdateId() != null)\r\n        sb.append(\"OtaUpdateId: \").append(getOtaUpdateId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getTargetSelection() != null)\r\n        sb.append(\"TargetSelection: \").append(getTargetSelection()).append(\",\");\r\n    if (getAwsJobExecutionsRolloutConfig() != null)\r\n        sb.append(\"AwsJobExecutionsRolloutConfig: \").append(getAwsJobExecutionsRolloutConfig()).append(\",\");\r\n    if (getFiles() != null)\r\n        sb.append(\"Files: \").append(getFiles()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getAdditionalParameters() != null)\r\n        sb.append(\"AdditionalParameters: \").append(getAdditionalParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.UpdateApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationDetail() != null)\r\n        sb.append(\"ApplicationDetail: \").append(getApplicationDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationCodeConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeContent() != null)\r\n        sb.append(\"CodeContent: \").append(getCodeContent()).append(\",\");\r\n    if (getCodeContentType() != null)\r\n        sb.append(\"CodeContentType: \").append(getCodeContentType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DescribeApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationDetail() != null)\r\n        sb.append(\"ApplicationDetail: \").append(getApplicationDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteJobExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getExecutionNumber() != null)\r\n        sb.append(\"ExecutionNumber: \").append(getExecutionNumber()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.UpdateLicenseConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn()).append(\",\");\r\n    if (getLicenseConfigurationStatus() != null)\r\n        sb.append(\"LicenseConfigurationStatus: \").append(getLicenseConfigurationStatus()).append(\",\");\r\n    if (getLicenseRules() != null)\r\n        sb.append(\"LicenseRules: \").append(getLicenseRules()).append(\",\");\r\n    if (getLicenseCount() != null)\r\n        sb.append(\"LicenseCount: \").append(getLicenseCount()).append(\",\");\r\n    if (getLicenseCountHardLimit() != null)\r\n        sb.append(\"LicenseCountHardLimit: \").append(getLicenseCountHardLimit()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.SqlQueryDatasetAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlQuery() != null)\r\n        sb.append(\"SqlQuery: \").append(getSqlQuery()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetKeyPairRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyPairName() != null)\r\n        sb.append(\"KeyPairName: \").append(getKeyPairName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBuiltinIntentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature()).append(\",\");\r\n    if (getSupportedLocales() != null)\r\n        sb.append(\"SupportedLocales: \").append(getSupportedLocales()).append(\",\");\r\n    if (getSlots() != null)\r\n        sb.append(\"Slots: \").append(getSlots());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetLoggingOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeletePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.ReferenceDataSourceDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReferenceId() != null)\r\n        sb.append(\"ReferenceId: \").append(getReferenceId()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getS3ReferenceDataSourceDescription() != null)\r\n        sb.append(\"S3ReferenceDataSourceDescription: \").append(getS3ReferenceDataSourceDescription()).append(\",\");\r\n    if (getReferenceSchema() != null)\r\n        sb.append(\"ReferenceSchema: \").append(getReferenceSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.UpdateEventSourceMappingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUUID() != null)\r\n        sb.append(\"UUID: \").append(getUUID()).append(\",\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getBatchSize() != null)\r\n        sb.append(\"BatchSize: \").append(getBatchSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.SplunkDestinationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHECEndpoint() != null)\r\n        sb.append(\"HECEndpoint: \").append(getHECEndpoint()).append(\",\");\r\n    if (getHECEndpointType() != null)\r\n        sb.append(\"HECEndpointType: \").append(getHECEndpointType()).append(\",\");\r\n    if (getHECToken() != null)\r\n        sb.append(\"HECToken: \").append(getHECToken()).append(\",\");\r\n    if (getHECAcknowledgmentTimeoutInSeconds() != null)\r\n        sb.append(\"HECAcknowledgmentTimeoutInSeconds: \").append(getHECAcknowledgmentTimeoutInSeconds()).append(\",\");\r\n    if (getRetryOptions() != null)\r\n        sb.append(\"RetryOptions: \").append(getRetryOptions()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3DestinationDescription() != null)\r\n        sb.append(\"S3DestinationDescription: \").append(getS3DestinationDescription()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.Variable.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStringValue() != null)\r\n        sb.append(\"StringValue: \").append(getStringValue()).append(\",\");\r\n    if (getDoubleValue() != null)\r\n        sb.append(\"DoubleValue: \").append(getDoubleValue()).append(\",\");\r\n    if (getDatasetContentVersionValue() != null)\r\n        sb.append(\"DatasetContentVersionValue: \").append(getDatasetContentVersionValue()).append(\",\");\r\n    if (getOutputFileUriValue() != null)\r\n        sb.append(\"OutputFileUriValue: \").append(getOutputFileUriValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.UpdateAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFunctionVersion() != null)\r\n        sb.append(\"FunctionVersion: \").append(getFunctionVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoutingConfig() != null)\r\n        sb.append(\"RoutingConfig: \").append(getRoutingConfig()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotChannelAssociationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBotChannelAssociations() != null)\r\n        sb.append(\"BotChannelAssociations: \").append(getBotChannelAssociations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatastoreActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDatastoreName() != null)\r\n        sb.append(\"DatastoreName: \").append(getDatastoreName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.UpdateFunctionCodeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getZipFile() != null)\r\n        sb.append(\"ZipFile: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Key() != null)\r\n        sb.append(\"S3Key: \").append(getS3Key()).append(\",\");\r\n    if (getS3ObjectVersion() != null)\r\n        sb.append(\"S3ObjectVersion: \").append(getS3ObjectVersion()).append(\",\");\r\n    if (getPublish() != null)\r\n        sb.append(\"Publish: \").append(getPublish()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.OpenInstancePublicPortsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPortInfo() != null)\r\n        sb.append(\"PortInfo: \").append(getPortInfo()).append(\",\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DetachPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.DescribeDeliveryStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getExclusiveStartDestinationId() != null)\r\n        sb.append(\"ExclusiveStartDestinationId: \").append(getExclusiveStartDestinationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeAuthorizerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerDescription() != null)\r\n        sb.append(\"AuthorizerDescription: \").append(getAuthorizerDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.KMSEncryptionConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAWSKMSKeyARN() != null)\r\n        sb.append(\"AWSKMSKeyARN: \").append(getAWSKMSKeyARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateRandomResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlaintext() != null)\r\n        sb.append(\"Plaintext: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetHLSStreamingSessionURLRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getPlaybackMode() != null)\r\n        sb.append(\"PlaybackMode: \").append(getPlaybackMode()).append(\",\");\r\n    if (getHLSFragmentSelector() != null)\r\n        sb.append(\"HLSFragmentSelector: \").append(getHLSFragmentSelector()).append(\",\");\r\n    if (getDiscontinuityMode() != null)\r\n        sb.append(\"DiscontinuityMode: \").append(getDiscontinuityMode()).append(\",\");\r\n    if (getExpires() != null)\r\n        sb.append(\"Expires: \").append(getExpires()).append(\",\");\r\n    if (getMaxMediaPlaylistFragmentResults() != null)\r\n        sb.append(\"MaxMediaPlaylistFragmentResults: \").append(getMaxMediaPlaylistFragmentResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetCloudFormationStackRecordsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudFormationStackRecords() != null)\r\n        sb.append(\"CloudFormationStackRecords: \").append(getCloudFormationStackRecords()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeLimitsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShardLimit() != null)\r\n        sb.append(\"ShardLimit: \").append(getShardLimit()).append(\",\");\r\n    if (getOpenShardCount() != null)\r\n        sb.append(\"OpenShardCount: \").append(getOpenShardCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.EnableKeyRotationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteRoleAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ListApplicationSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeleteDatasetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatasetContentVersionValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SqsAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getQueueUrl() != null)\r\n        sb.append(\"QueueUrl: \").append(getQueueUrl()).append(\",\");\r\n    if (getUseBase64() != null)\r\n        sb.append(\"UseBase64: \").append(getUseBase64());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListEventSourceMappingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventSourceArn() != null)\r\n        sb.append(\"EventSourceArn: \").append(getEventSourceArn()).append(\",\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateDiskSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.AddApplicationInputProcessingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId()).append(\",\");\r\n    if (getInputProcessingConfiguration() != null)\r\n        sb.append(\"InputProcessingConfiguration: \").append(getInputProcessingConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.FlinkApplicationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckpointConfiguration() != null)\r\n        sb.append(\"CheckpointConfiguration: \").append(getCheckpointConfiguration()).append(\",\");\r\n    if (getMonitoringConfiguration() != null)\r\n        sb.append(\"MonitoringConfiguration: \").append(getMonitoringConfiguration()).append(\",\");\r\n    if (getParallelismConfiguration() != null)\r\n        sb.append(\"ParallelismConfiguration: \").append(getParallelismConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetUtterancesViewResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getUtterances() != null)\r\n        sb.append(\"Utterances: \").append(getUtterances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StartThingRegistrationTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getInputFileBucket() != null)\r\n        sb.append(\"InputFileBucket: \").append(getInputFileBucket()).append(\",\");\r\n    if (getInputFileKey() != null)\r\n        sb.append(\"InputFileKey: \").append(getInputFileKey()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateBillingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName()).append(\",\");\r\n    if (getBillingGroupArn() != null)\r\n        sb.append(\"BillingGroupArn: \").append(getBillingGroupArn()).append(\",\");\r\n    if (getBillingGroupId() != null)\r\n        sb.append(\"BillingGroupId: \").append(getBillingGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetTopicRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.BrokerNodeGroupInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerAZDistribution() != null)\r\n        sb.append(\"BrokerAZDistribution: \").append(getBrokerAZDistribution()).append(\",\");\r\n    if (getClientSubnets() != null)\r\n        sb.append(\"ClientSubnets: \").append(getClientSubnets()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getStorageInfo() != null)\r\n        sb.append(\"StorageInfo: \").append(getStorageInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThings() != null)\r\n        sb.append(\"Things: \").append(getThings()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.AmazonKinesisFirehoseAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonkinesisfirehoseasync using the current builder configuration.",
	"Method": "AmazonKinesisFirehoseAsync build(AwsAsyncClientParams params){\r\n    return new AmazonKinesisFirehoseAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.AWSIoT1ClickProjectsClient.createProject",
	"Comment": "creates an empty project with a placement template. a project contains zero or more placements that adhere to theplacement template defined in the project.",
	"Method": "CreateProjectResult createProject(CreateProjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateProject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetStaticIpsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticIps() != null)\r\n        sb.append(\"StaticIps: \").append(getStaticIps()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateInstancesFromSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceNames() != null)\r\n        sb.append(\"InstanceNames: \").append(getInstanceNames()).append(\",\");\r\n    if (getAttachedDiskMapping() != null)\r\n        sb.append(\"AttachedDiskMapping: \").append(getAttachedDiskMapping()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getInstanceSnapshotName() != null)\r\n        sb.append(\"InstanceSnapshotName: \").append(getInstanceSnapshotName()).append(\",\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData()).append(\",\");\r\n    if (getKeyPairName() != null)\r\n        sb.append(\"KeyPairName: \").append(getKeyPairName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListOTAUpdatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOtaUpdateStatus() != null)\r\n        sb.append(\"OtaUpdateStatus: \").append(getOtaUpdateStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CancelJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getReasonCode() != null)\r\n        sb.append(\"ReasonCode: \").append(getReasonCode()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.InstanceEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceName() != null)\r\n        sb.append(\"SourceName: \").append(getSourceName()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getPortInfoSource() != null)\r\n        sb.append(\"PortInfoSource: \").append(getPortInfoSource()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasArn() != null)\r\n        sb.append(\"AliasArn: \").append(getAliasArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFunctionVersion() != null)\r\n        sb.append(\"FunctionVersion: \").append(getFunctionVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoutingConfig() != null)\r\n        sb.append(\"RoutingConfig: \").append(getRoutingConfig()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabaseParameters",
	"Comment": "returns all of the runtime parameters offered by the underlying database software, or engine, for a specificdatabase in amazon lightsail.in addition to the parameter names and values, this operation returns other information about each parameter.this information includes whether changes require a reboot, whether the parameter is modifiable, the allowedvalues, and the data types.",
	"Method": "GetRelationalDatabaseParametersResult getRelationalDatabaseParameters(GetRelationalDatabaseParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabaseParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisStreamsInputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoClient.listTagsForStream",
	"Comment": "returns a list of tags associated with the specified stream.in the request, you must specify either the streamname or the streamarn.",
	"Method": "ListTagsForStreamResult listTagsForStream(ListTagsForStreamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTagsForStream(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DeleteStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateKeyPairRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyPairName() != null)\r\n        sb.append(\"KeyPairName: \").append(getKeyPairName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.AWSIoTJobsDataPlaneClient.getPendingJobExecutions",
	"Comment": "gets the list of all jobs for a thing that are not in a terminal status.",
	"Method": "GetPendingJobExecutionsResult getPendingJobExecutions(GetPendingJobExecutionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetPendingJobExecutions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisAsyncClient.createStreamAsync",
	"Comment": "simplified method form for invoking the createstream operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateStreamResult> createStreamAsync(CreateStreamRequest request,java.util.concurrent.Future<CreateStreamResult> createStreamAsync,CreateStreamRequest request,com.amazonaws.handlers.AsyncHandler<CreateStreamRequest, CreateStreamResult> asyncHandler,java.util.concurrent.Future<CreateStreamResult> createStreamAsync,String streamName,Integer shardCount,java.util.concurrent.Future<CreateStreamResult> createStreamAsync,String streamName,Integer shardCount,com.amazonaws.handlers.AsyncHandler<CreateStreamRequest, CreateStreamResult> asyncHandler){\r\n    return createStreamAsync(new CreateStreamRequest().withStreamName(streamName).withShardCount(shardCount), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteDynamicThingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeCACertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateDescription() != null)\r\n        sb.append(\"CertificateDescription: \").append(getCertificateDescription()).append(\",\");\r\n    if (getRegistrationConfig() != null)\r\n        sb.append(\"RegistrationConfig: \").append(getRegistrationConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.OpenXJsonSerDe.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConvertDotsInJsonKeysToUnderscores() != null)\r\n        sb.append(\"ConvertDotsInJsonKeysToUnderscores: \").append(getConvertDotsInJsonKeysToUnderscores()).append(\",\");\r\n    if (getCaseInsensitive() != null)\r\n        sb.append(\"CaseInsensitive: \").append(getCaseInsensitive()).append(\",\");\r\n    if (getColumnToJsonKeyMappings() != null)\r\n        sb.append(\"ColumnToJsonKeyMappings: \").append(getColumnToJsonKeyMappings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListOTAUpdatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOtaUpdates() != null)\r\n        sb.append(\"OtaUpdates: \").append(getOtaUpdates()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CertificateDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getCaCertificateId() != null)\r\n        sb.append(\"CaCertificateId: \").append(getCaCertificateId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCertificatePem() != null)\r\n        sb.append(\"CertificatePem: \").append(getCertificatePem()).append(\",\");\r\n    if (getOwnedBy() != null)\r\n        sb.append(\"OwnedBy: \").append(getOwnedBy()).append(\",\");\r\n    if (getPreviousOwnedBy() != null)\r\n        sb.append(\"PreviousOwnedBy: \").append(getPreviousOwnedBy()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getCustomerVersion() != null)\r\n        sb.append(\"CustomerVersion: \").append(getCustomerVersion()).append(\",\");\r\n    if (getTransferData() != null)\r\n        sb.append(\"TransferData: \").append(getTransferData()).append(\",\");\r\n    if (getGenerationId() != null)\r\n        sb.append(\"GenerationId: \").append(getGenerationId()).append(\",\");\r\n    if (getValidity() != null)\r\n        sb.append(\"Validity: \").append(getValidity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListCertificatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getAscendingOrder() != null)\r\n        sb.append(\"AscendingOrder: \").append(getAscendingOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.LayerVersionContentInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Key() != null)\r\n        sb.append(\"S3Key: \").append(getS3Key()).append(\",\");\r\n    if (getS3ObjectVersion() != null)\r\n        sb.append(\"S3ObjectVersion: \").append(getS3ObjectVersion()).append(\",\");\r\n    if (getZipFile() != null)\r\n        sb.append(\"ZipFile: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.ListNodesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getNodeInfoList() != null)\r\n        sb.append(\"NodeInfoList: \").append(getNodeInfoList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.AmazonLexModelBuildingClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersionOrAlias() != null)\r\n        sb.append(\"VersionOrAlias: \").append(getVersionOrAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCiphertextBlob() != null)\r\n        sb.append(\"CiphertextBlob: \").append(getCiphertextBlob()).append(\",\");\r\n    if (getSourceKeyId() != null)\r\n        sb.append(\"SourceKeyId: \").append(getSourceKeyId()).append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CopySnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceSnapshotName() != null)\r\n        sb.append(\"SourceSnapshotName: \").append(getSourceSnapshotName()).append(\",\");\r\n    if (getTargetSnapshotName() != null)\r\n        sb.append(\"TargetSnapshotName: \").append(getTargetSnapshotName()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegisterCertificateRequest.getSetAsActive",
	"Comment": "a boolean value that specifies if the ca certificate is set to active.",
	"Method": "Boolean getSetAsActive(){\r\n    return this.setAsActive;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteThingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CancelKeyDeletionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabaseMetricData",
	"Comment": "returns the data points of the specified metric for a database in amazon lightsail.",
	"Method": "GetRelationalDatabaseMetricDataResult getRelationalDatabaseMetricData(GetRelationalDatabaseMetricDataRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabaseMetricData(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingGroupProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupDescription() != null)\r\n        sb.append(\"ThingGroupDescription: \").append(getThingGroupDescription()).append(\",\");\r\n    if (getAttributePayload() != null)\r\n        sb.append(\"AttributePayload: \").append(getAttributePayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.AddApplicationInputProcessingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId()).append(\",\");\r\n    if (getInputProcessingConfiguration() != null)\r\n        sb.append(\"InputProcessingConfiguration: \").append(getInputProcessingConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.AWSKafkaClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputLambdaProcessorDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClient.runPipelineActivity",
	"Comment": "simulates the results of running a pipeline activity on a message payload.",
	"Method": "RunPipelineActivityResult runPipelineActivity(RunPipelineActivityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRunPipelineActivity(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DescribeCustomKeyStoresRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomKeyStoreId() != null)\r\n        sb.append(\"CustomKeyStoreId: \").append(getCustomKeyStoreId()).append(\",\");\r\n    if (getCustomKeyStoreName() != null)\r\n        sb.append(\"CustomKeyStoreName: \").append(getCustomKeyStoreName()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetIndexingConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.PutSlotTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEnumerationValues() != null)\r\n        sb.append(\"EnumerationValues: \").append(getEnumerationValues()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getValueSelectionStrategy() != null)\r\n        sb.append(\"ValueSelectionStrategy: \").append(getValueSelectionStrategy()).append(\",\");\r\n    if (getCreateVersion() != null)\r\n        sb.append(\"CreateVersion: \").append(getCreateVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeThingTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.Message.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageId() != null)\r\n        sb.append(\"MessageId: \").append(getMessageId()).append(\",\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(getPayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListAliasesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliases() != null)\r\n        sb.append(\"Aliases: \").append(getAliases()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getTruncated() != null)\r\n        sb.append(\"Truncated: \").append(getTruncated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.StartInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2Client.addApplicationCloudWatchLoggingOption",
	"Comment": "adds an amazon cloudwatch log stream to monitor application configuration errors.",
	"Method": "AddApplicationCloudWatchLoggingOptionResult addApplicationCloudWatchLoggingOption(AddApplicationCloudWatchLoggingOptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddApplicationCloudWatchLoggingOption(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetBundlesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIncludeInactive() != null)\r\n        sb.append(\"IncludeInactive: \").append(getIncludeInactive()).append(\",\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListStreamConsumersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getStreamCreationTimestamp() != null)\r\n        sb.append(\"StreamCreationTimestamp: \").append(getStreamCreationTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ListApplicationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SecurityProfileIdentifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisStreamsOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.AmazonKinesisFirehoseClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.DescribeJobExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecution() != null)\r\n        sb.append(\"Execution: \").append(getExecution());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.InvokeDeviceMethodResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceMethodResponse() != null)\r\n        sb.append(\"DeviceMethodResponse: \").append(getDeviceMethodResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ReEncryptRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCiphertextBlob() != null)\r\n        sb.append(\"CiphertextBlob: \").append(getCiphertextBlob()).append(\",\");\r\n    if (getSourceEncryptionContext() != null)\r\n        sb.append(\"SourceEncryptionContext: \").append(getSourceEncryptionContext()).append(\",\");\r\n    if (getDestinationKeyId() != null)\r\n        sb.append(\"DestinationKeyId: \").append(getDestinationKeyId()).append(\",\");\r\n    if (getDestinationEncryptionContext() != null)\r\n        sb.append(\"DestinationEncryptionContext: \").append(getDestinationEncryptionContext()).append(\",\");\r\n    if (getGrantTokens() != null)\r\n        sb.append(\"GrantTokens: \").append(getGrantTokens());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceAccessDetailsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.UpdateDeviceStateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CheckpointConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationType() != null)\r\n        sb.append(\"ConfigurationType: \").append(getConfigurationType()).append(\",\");\r\n    if (getCheckpointingEnabled() != null)\r\n        sb.append(\"CheckpointingEnabled: \").append(getCheckpointingEnabled()).append(\",\");\r\n    if (getCheckpointInterval() != null)\r\n        sb.append(\"CheckpointInterval: \").append(getCheckpointInterval()).append(\",\");\r\n    if (getMinPauseBetweenCheckpoints() != null)\r\n        sb.append(\"MinPauseBetweenCheckpoints: \").append(getMinPauseBetweenCheckpoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ReprocessingSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBuiltinIntentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.UpdateApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteAccountAuditConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeleteScheduledAudits() != null)\r\n        sb.append(\"DeleteScheduledAudits: \").append(getDeleteScheduledAudits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DeleteApplicationInputProcessingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeleteEventSourceMappingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUUID() != null)\r\n        sb.append(\"UUID: \").append(getUUID());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoMediaClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegisterCACertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StopThingRegistrationTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDomainsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomains() != null)\r\n        sb.append(\"Domains: \").append(getDomains()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetIntentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteCACertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.JSONMappingParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordRowPath() != null)\r\n        sb.append(\"RecordRowPath: \").append(getRecordRowPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsiot using the current builder configuration.",
	"Method": "AWSIot build(AwsSyncClientParams params){\r\n    return new AWSIotClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DisableKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DisableKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.LoadBalancerTlsCertificateRenewalSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRenewalStatus() != null)\r\n        sb.append(\"RenewalStatus: \").append(getRenewalStatus()).append(\",\");\r\n    if (getDomainValidationOptions() != null)\r\n        sb.append(\"DomainValidationOptions: \").append(getDomainValidationOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.SubscribeToEventResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CreateChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName()).append(\",\");\r\n    if (getChannelArn() != null)\r\n        sb.append(\"ChannelArn: \").append(getChannelArn()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.ImportKeyPairResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.Region.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContinentCode() != null)\r\n        sb.append(\"ContinentCode: \").append(getContinentCode()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDisplayName() != null)\r\n        sb.append(\"DisplayName: \").append(getDisplayName()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getRelationalDatabaseAvailabilityZones() != null)\r\n        sb.append(\"RelationalDatabaseAvailabilityZones: \").append(getRelationalDatabaseAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetLoadBalancersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisAsyncClient.listStreamsAsync",
	"Comment": "simplified method form for invoking the liststreams operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListStreamsResult> listStreamsAsync(ListStreamsRequest request,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,ListStreamsRequest request,com.amazonaws.handlers.AsyncHandler<ListStreamsRequest, ListStreamsResult> asyncHandler,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,com.amazonaws.handlers.AsyncHandler<ListStreamsRequest, ListStreamsResult> asyncHandler,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,String exclusiveStartStreamName,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,String exclusiveStartStreamName,com.amazonaws.handlers.AsyncHandler<ListStreamsRequest, ListStreamsResult> asyncHandler,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,Integer limit,String exclusiveStartStreamName,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,Integer limit,String exclusiveStartStreamName,com.amazonaws.handlers.AsyncHandler<ListStreamsRequest, ListStreamsResult> asyncHandler){\r\n    return listStreamsAsync(new ListStreamsRequest().withLimit(limit).withExclusiveStartStreamName(exclusiveStartStreamName), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.UpdateLicenseConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.deprecateThingType",
	"Comment": "deprecates a thing type. you can not associate new things with deprecated thing type.",
	"Method": "DeprecateThingTypeResult deprecateThingType(DeprecateThingTypeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeprecateThingType(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.listActiveViolations",
	"Comment": "lists the active violations for a given device defender security profile.",
	"Method": "ListActiveViolationsResult listActiveViolations(ListActiveViolationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListActiveViolations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.InstancePortInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getAccessFrom() != null)\r\n        sb.append(\"AccessFrom: \").append(getAccessFrom()).append(\",\");\r\n    if (getAccessType() != null)\r\n        sb.append(\"AccessType: \").append(getAccessType()).append(\",\");\r\n    if (getCommonName() != null)\r\n        sb.append(\"CommonName: \").append(getCommonName()).append(\",\");\r\n    if (getAccessDirection() != null)\r\n        sb.append(\"AccessDirection: \").append(getAccessDirection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.listPolicyVersions",
	"Comment": "lists the versions of the specified policy and identifies the default version.",
	"Method": "ListPolicyVersionsResult listPolicyVersions(ListPolicyVersionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListPolicyVersions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.DeviceDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getRemainingLife() != null)\r\n        sb.append(\"RemainingLife: \").append(getRemainingLife()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.UpdateShardCountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getCurrentShardCount() != null)\r\n        sb.append(\"CurrentShardCount: \").append(getCurrentShardCount()).append(\",\");\r\n    if (getTargetShardCount() != null)\r\n        sb.append(\"TargetShardCount: \").append(getTargetShardCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CopySnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DisableKeyRotationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetLoadBalancersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancers() != null)\r\n        sb.append(\"LoadBalancers: \").append(getLoadBalancers()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getPresignedUrlConfig() != null)\r\n        sb.append(\"PresignedUrlConfig: \").append(getPresignedUrlConfig()).append(\",\");\r\n    if (getJobExecutionsRolloutConfig() != null)\r\n        sb.append(\"JobExecutionsRolloutConfig: \").append(getJobExecutionsRolloutConfig()).append(\",\");\r\n    if (getAbortConfig() != null)\r\n        sb.append(\"AbortConfig: \").append(getAbortConfig()).append(\",\");\r\n    if (getTimeoutConfig() != null)\r\n        sb.append(\"TimeoutConfig: \").append(getTimeoutConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.RegisterStreamConsumerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConsumer() != null)\r\n        sb.append(\"Consumer: \").append(getConsumer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ExtendedS3DestinationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getBufferingHints() != null)\r\n        sb.append(\"BufferingHints: \").append(getBufferingHints()).append(\",\");\r\n    if (getCompressionFormat() != null)\r\n        sb.append(\"CompressionFormat: \").append(getCompressionFormat()).append(\",\");\r\n    if (getEncryptionConfiguration() != null)\r\n        sb.append(\"EncryptionConfiguration: \").append(getEncryptionConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3BackupUpdate() != null)\r\n        sb.append(\"S3BackupUpdate: \").append(getS3BackupUpdate()).append(\",\");\r\n    if (getDataFormatConversionConfiguration() != null)\r\n        sb.append(\"DataFormatConversionConfiguration: \").append(getDataFormatConversionConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListAuditTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTasks() != null)\r\n        sb.append(\"Tasks: \").append(getTasks()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingTypesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.TagStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GroupNameAndArn.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupArn() != null)\r\n        sb.append(\"GroupArn: \").append(getGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Denied.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImplicitDeny() != null)\r\n        sb.append(\"ImplicitDeny: \").append(getImplicitDeny()).append(\",\");\r\n    if (getExplicitDeny() != null)\r\n        sb.append(\"ExplicitDeny: \").append(getExplicitDeny());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.deleteLayerVersion",
	"Comment": "deletes a version of a function layer. deleted versions can no longer be viewed or added to functions. however, acopy of the version remains in lambda until no functions refer to it.",
	"Method": "DeleteLayerVersionResult deleteLayerVersion(DeleteLayerVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLayerVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.createScheduledAudit",
	"Comment": "creates a scheduled audit that is run at a specified time interval.",
	"Method": "CreateScheduledAuditResult createScheduledAudit(CreateScheduledAuditRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateScheduledAudit(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ListTagsForDeliveryStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getHasMoreTags() != null)\r\n        sb.append(\"HasMoreTags: \").append(getHasMoreTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.SequenceNumberRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartingSequenceNumber() != null)\r\n        sb.append(\"StartingSequenceNumber: \").append(getStartingSequenceNumber()).append(\",\");\r\n    if (getEndingSequenceNumber() != null)\r\n        sb.append(\"EndingSequenceNumber: \").append(getEndingSequenceNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.model.PostContentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getIntentName() != null)\r\n        sb.append(\"IntentName: \").append(getIntentName()).append(\",\");\r\n    if (getSlots() != null)\r\n        sb.append(\"Slots: \").append(getSlots()).append(\",\");\r\n    if (getSessionAttributes() != null)\r\n        sb.append(\"SessionAttributes: \").append(getSessionAttributes()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getMessageFormat() != null)\r\n        sb.append(\"MessageFormat: \").append(getMessageFormat()).append(\",\");\r\n    if (getDialogState() != null)\r\n        sb.append(\"DialogState: \").append(getDialogState()).append(\",\");\r\n    if (getSlotToElicit() != null)\r\n        sb.append(\"SlotToElicit: \").append(getSlotToElicit()).append(\",\");\r\n    if (getInputTranscript() != null)\r\n        sb.append(\"InputTranscript: \").append(getInputTranscript()).append(\",\");\r\n    if (getAudioStream() != null)\r\n        sb.append(\"AudioStream: \").append(getAudioStream());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListActiveViolationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActiveViolations() != null)\r\n        sb.append(\"ActiveViolations: \").append(getActiveViolations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.HLSFragmentSelector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFragmentSelectorType() != null)\r\n        sb.append(\"FragmentSelectorType: \").append(getFragmentSelectorType()).append(\",\");\r\n    if (getTimestampRange() != null)\r\n        sb.append(\"TimestampRange: \").append(getTimestampRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2Client.deleteApplication",
	"Comment": "deletes the specified application. kinesis data analytics halts application execution and deletes theapplication.",
	"Method": "DeleteApplicationResult deleteApplication(DeleteApplicationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteApplication(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsiot1clickdevicesasync using the current builder configuration.",
	"Method": "AWSIoT1ClickDevicesAsync build(AwsAsyncClientParams params){\r\n    return new AWSIoT1ClickDevicesAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DetachThingPrincipalResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListAliasesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getAliases() != null)\r\n        sb.append(\"Aliases: \").append(getAliases());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TopicRuleListItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleArn() != null)\r\n        sb.append(\"RuleArn: \").append(getRuleArn()).append(\",\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getTopicPattern() != null)\r\n        sb.append(\"TopicPattern: \").append(getTopicPattern()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getRuleDisabled() != null)\r\n        sb.append(\"RuleDisabled: \").append(getRuleDisabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.EnableTopicRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ParallelismConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationType() != null)\r\n        sb.append(\"ConfigurationType: \").append(getConfigurationType()).append(\",\");\r\n    if (getParallelism() != null)\r\n        sb.append(\"Parallelism: \").append(getParallelism()).append(\",\");\r\n    if (getParallelismPerKPU() != null)\r\n        sb.append(\"ParallelismPerKPU: \").append(getParallelismPerKPU()).append(\",\");\r\n    if (getCurrentParallelism() != null)\r\n        sb.append(\"CurrentParallelism: \").append(getCurrentParallelism()).append(\",\");\r\n    if (getAutoScalingEnabled() != null)\r\n        sb.append(\"AutoScalingEnabled: \").append(getAutoScalingEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.SqlApplicationConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputUpdates() != null)\r\n        sb.append(\"InputUpdates: \").append(getInputUpdates()).append(\",\");\r\n    if (getOutputUpdates() != null)\r\n        sb.append(\"OutputUpdates: \").append(getOutputUpdates()).append(\",\");\r\n    if (getReferenceDataSourceUpdates() != null)\r\n        sb.append(\"ReferenceDataSourceUpdates: \").append(getReferenceDataSourceUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DeleteImportedKeyMaterialResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.MonitoringConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationTypeUpdate() != null)\r\n        sb.append(\"ConfigurationTypeUpdate: \").append(getConfigurationTypeUpdate()).append(\",\");\r\n    if (getMetricsLevelUpdate() != null)\r\n        sb.append(\"MetricsLevelUpdate: \").append(getMetricsLevelUpdate()).append(\",\");\r\n    if (getLogLevelUpdate() != null)\r\n        sb.append(\"LogLevelUpdate: \").append(getLogLevelUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.InstancePortState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DisconnectCustomKeyStoreResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CreatePipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getPipelineActivities() != null)\r\n        sb.append(\"PipelineActivities: \").append(getPipelineActivities()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeleteDatasetContentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.DeviceMethod.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceType() != null)\r\n        sb.append(\"DeviceType: \").append(getDeviceType()).append(\",\");\r\n    if (getMethodName() != null)\r\n        sb.append(\"MethodName: \").append(getMethodName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.AWSIoTJobsDataPlaneClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.Deserializer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOpenXJsonSerDe() != null)\r\n        sb.append(\"OpenXJsonSerDe: \").append(getOpenXJsonSerDe()).append(\",\");\r\n    if (getHiveJsonSerDe() != null)\r\n        sb.append(\"HiveJsonSerDe: \").append(getHiveJsonSerDe());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetLoadBalancerMetricDataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getPeriod() != null)\r\n        sb.append(\"Period: \").append(getPeriod()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit()).append(\",\");\r\n    if (getStatistics() != null)\r\n        sb.append(\"Statistics: \").append(getStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListChannelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awslicensemanagerasync using the current builder configuration.",
	"Method": "AWSLicenseManagerAsync build(AwsAsyncClientParams params){\r\n    return new AWSLicenseManagerAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingGroupsForThingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroups() != null)\r\n        sb.append(\"ThingGroups: \").append(getThingGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.OutgoingCertificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getTransferredTo() != null)\r\n        sb.append(\"TransferredTo: \").append(getTransferredTo()).append(\",\");\r\n    if (getTransferDate() != null)\r\n        sb.append(\"TransferDate: \").append(getTransferDate()).append(\",\");\r\n    if (getTransferMessage() != null)\r\n        sb.append(\"TransferMessage: \").append(getTransferMessage()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ParquetSerDe.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlockSizeBytes() != null)\r\n        sb.append(\"BlockSizeBytes: \").append(getBlockSizeBytes()).append(\",\");\r\n    if (getPageSizeBytes() != null)\r\n        sb.append(\"PageSizeBytes: \").append(getPageSizeBytes()).append(\",\");\r\n    if (getCompression() != null)\r\n        sb.append(\"Compression: \").append(getCompression()).append(\",\");\r\n    if (getEnableDictionaryCompression() != null)\r\n        sb.append(\"EnableDictionaryCompression: \").append(getEnableDictionaryCompression()).append(\",\");\r\n    if (getMaxPaddingBytes() != null)\r\n        sb.append(\"MaxPaddingBytes: \").append(getMaxPaddingBytes()).append(\",\");\r\n    if (getWriterVersion() != null)\r\n        sb.append(\"WriterVersion: \").append(getWriterVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.UpdateShardCountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getTargetShardCount() != null)\r\n        sb.append(\"TargetShardCount: \").append(getTargetShardCount()).append(\",\");\r\n    if (getScalingType() != null)\r\n        sb.append(\"ScalingType: \").append(getScalingType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisStreamsOutputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.Datastore.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdateTime() != null)\r\n        sb.append(\"LastUpdateTime: \").append(getLastUpdateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.CreateApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getApplicationDescription() != null)\r\n        sb.append(\"ApplicationDescription: \").append(getApplicationDescription()).append(\",\");\r\n    if (getInputs() != null)\r\n        sb.append(\"Inputs: \").append(getInputs()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions()).append(\",\");\r\n    if (getApplicationCode() != null)\r\n        sb.append(\"ApplicationCode: \").append(getApplicationCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.AWSIoT1ClickProjectsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsiot1clickprojectsasync using the current builder configuration.",
	"Method": "AWSIoT1ClickProjectsAsync build(AwsAsyncClientParams params){\r\n    return new AWSIoT1ClickProjectsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.Bundle.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrice() != null)\r\n        sb.append(\"Price: \").append(getPrice()).append(\",\");\r\n    if (getCpuCount() != null)\r\n        sb.append(\"CpuCount: \").append(getCpuCount()).append(\",\");\r\n    if (getDiskSizeInGb() != null)\r\n        sb.append(\"DiskSizeInGb: \").append(getDiskSizeInGb()).append(\",\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getIsActive() != null)\r\n        sb.append(\"IsActive: \").append(getIsActive()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPower() != null)\r\n        sb.append(\"Power: \").append(getPower()).append(\",\");\r\n    if (getRamSizeInGb() != null)\r\n        sb.append(\"RamSizeInGb: \").append(getRamSizeInGb()).append(\",\");\r\n    if (getTransferPerMonthInGb() != null)\r\n        sb.append(\"TransferPerMonthInGb: \").append(getTransferPerMonthInGb()).append(\",\");\r\n    if (getSupportedPlatforms() != null)\r\n        sb.append(\"SupportedPlatforms: \").append(getSupportedPlatforms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteBotAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.DescribeDeliveryStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamDescription() != null)\r\n        sb.append(\"DeliveryStreamDescription: \").append(getDeliveryStreamDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoPutMediaClient.resolveCredentials",
	"Comment": "resolve credentials which may be overridden at a per request level.",
	"Method": "AWSCredentials resolveCredentials(PutMediaRequest request){\r\n    AWSCredentialsProvider resolvedProvider = CredentialUtils.getCredentialsProvider(request, credentialsProvider);\r\n    AWSCredentials resolvedCredentials = resolvedProvider == null ? null : resolvedProvider.getCredentials();\r\n    if (resolvedCredentials == null) {\r\n        throw new SdkClientException(\"Credentials must be provided via the builder or present in the environment. \" + \"See http://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html\");\r\n    }\r\n    return resolvedCredentials;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.Output.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getKinesisStreamsOutput() != null)\r\n        sb.append(\"KinesisStreamsOutput: \").append(getKinesisStreamsOutput()).append(\",\");\r\n    if (getKinesisFirehoseOutput() != null)\r\n        sb.append(\"KinesisFirehoseOutput: \").append(getKinesisFirehoseOutput()).append(\",\");\r\n    if (getLambdaOutput() != null)\r\n        sb.append(\"LambdaOutput: \").append(getLambdaOutput()).append(\",\");\r\n    if (getDestinationSchema() != null)\r\n        sb.append(\"DestinationSchema: \").append(getDestinationSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseSnapshots() != null)\r\n        sb.append(\"RelationalDatabaseSnapshots: \").append(getRelationalDatabaseSnapshots()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ReferenceDataSourceUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReferenceId() != null)\r\n        sb.append(\"ReferenceId: \").append(getReferenceId()).append(\",\");\r\n    if (getTableNameUpdate() != null)\r\n        sb.append(\"TableNameUpdate: \").append(getTableNameUpdate()).append(\",\");\r\n    if (getS3ReferenceDataSourceUpdate() != null)\r\n        sb.append(\"S3ReferenceDataSourceUpdate: \").append(getS3ReferenceDataSourceUpdate()).append(\",\");\r\n    if (getReferenceSchemaUpdate() != null)\r\n        sb.append(\"ReferenceSchemaUpdate: \").append(getReferenceSchemaUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.RunConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlRunConfigurations() != null)\r\n        sb.append(\"SqlRunConfigurations: \").append(getSqlRunConfigurations()).append(\",\");\r\n    if (getApplicationRestoreConfiguration() != null)\r\n        sb.append(\"ApplicationRestoreConfiguration: \").append(getApplicationRestoreConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesClient.initiateDeviceClaim",
	"Comment": "given a device id, initiates a claim request for the associated device.claiming a device consists of initiating a claim, then publishing a device event, and finalizing the claim. for adevice of type button, a device event can be published by simply clicking the device.",
	"Method": "InitiateDeviceClaimResult initiateDeviceClaim(InitiateDeviceClaimRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeInitiateDeviceClaim(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsiotanalytics using the current builder configuration.",
	"Method": "AWSIoTAnalytics build(AwsSyncClientParams params){\r\n    return new AWSIoTAnalyticsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ScheduleKeyDeletionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getDeletionDate() != null)\r\n        sb.append(\"DeletionDate: \").append(getDeletionDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StartThingRegistrationTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.listSecurityProfiles",
	"Comment": "lists the device defender security profiles you have created. you can use filters to list only those securityprofiles associated with a thing group or only those associated with your account.",
	"Method": "ListSecurityProfilesResult listSecurityProfiles(ListSecurityProfilesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListSecurityProfiles(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyMetadata() != null)\r\n        sb.append(\"KeyMetadata: \").append(getKeyMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.getPolicy",
	"Comment": "gets information about the specified policy with the policy document of the default version.",
	"Method": "GetPolicyResult getPolicy(GetPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Behavior.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMetric() != null)\r\n        sb.append(\"Metric: \").append(getMetric()).append(\",\");\r\n    if (getCriteria() != null)\r\n        sb.append(\"Criteria: \").append(getCriteria());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCiphertextBlob() != null)\r\n        sb.append(\"CiphertextBlob: \").append(getCiphertextBlob()).append(\",\");\r\n    if (getPlaintext() != null)\r\n        sb.append(\"Plaintext: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.OpenInstancePublicPortsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisAsyncClient.deleteStreamAsync",
	"Comment": "simplified method form for invoking the deletestream operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DeleteStreamResult> deleteStreamAsync(DeleteStreamRequest request,java.util.concurrent.Future<DeleteStreamResult> deleteStreamAsync,DeleteStreamRequest request,com.amazonaws.handlers.AsyncHandler<DeleteStreamRequest, DeleteStreamResult> asyncHandler,java.util.concurrent.Future<DeleteStreamResult> deleteStreamAsync,String streamName,java.util.concurrent.Future<DeleteStreamResult> deleteStreamAsync,String streamName,com.amazonaws.handlers.AsyncHandler<DeleteStreamRequest, DeleteStreamResult> asyncHandler){\r\n    return deleteStreamAsync(new DeleteStreamRequest().withStreamName(streamName), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AbstractAmazonKinesisAsync.putRecordAsync",
	"Comment": "simplified method form for invoking the putrecord operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<PutRecordResult> putRecordAsync(PutRecordRequest request,java.util.concurrent.Future<PutRecordResult> putRecordAsync,PutRecordRequest request,com.amazonaws.handlers.AsyncHandler<PutRecordRequest, PutRecordResult> asyncHandler,java.util.concurrent.Future<PutRecordResult> putRecordAsync,String streamName,java.nio.ByteBuffer data,String partitionKey,java.util.concurrent.Future<PutRecordResult> putRecordAsync,String streamName,java.nio.ByteBuffer data,String partitionKey,com.amazonaws.handlers.AsyncHandler<PutRecordRequest, PutRecordResult> asyncHandler,java.util.concurrent.Future<PutRecordResult> putRecordAsync,String streamName,java.nio.ByteBuffer data,String partitionKey,String sequenceNumberForOrdering,java.util.concurrent.Future<PutRecordResult> putRecordAsync,String streamName,java.nio.ByteBuffer data,String partitionKey,String sequenceNumberForOrdering,com.amazonaws.handlers.AsyncHandler<PutRecordRequest, PutRecordResult> asyncHandler){\r\n    return putRecordAsync(new PutRecordRequest().withStreamName(streamName).withData(data).withPartitionKey(partitionKey).withSequenceNumberForOrdering(sequenceNumberForOrdering), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.EBSStorageInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeSize() != null)\r\n        sb.append(\"VolumeSize: \").append(getVolumeSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StartOnDemandAuditTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ProcessingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getProcessors() != null)\r\n        sb.append(\"Processors: \").append(getProcessors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.InventoryFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCondition() != null)\r\n        sb.append(\"Condition: \").append(getCondition()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListOutgoingCertificatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getAscendingOrder() != null)\r\n        sb.append(\"AscendingOrder: \").append(getAscendingOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteLoadBalancerTlsCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getCertificateName() != null)\r\n        sb.append(\"CertificateName: \").append(getCertificateName()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeys() != null)\r\n        sb.append(\"Keys: \").append(getKeys()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getTruncated() != null)\r\n        sb.append(\"Truncated: \").append(getTruncated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValue() != null)\r\n        sb.append(\"AttributeValue: \").append(getAttributeValue()).append(\",\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteDiskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.CreateSlotTypeVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotChannelAssociationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getBotAlias() != null)\r\n        sb.append(\"BotAlias: \").append(getBotAlias()).append(\",\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getBotConfiguration() != null)\r\n        sb.append(\"BotConfiguration: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.GetPendingJobExecutionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.DeleteLicenseConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CancelAuditTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputLambdaProcessor.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "InvokeResult invoke(InvokeRequest request,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CancelCertificateTransferResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateLoadBalancerTlsCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListPolicyPrincipalsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipals() != null)\r\n        sb.append(\"Principals: \").append(getPrincipals()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationReferenceDataSourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeleteFunctionConcurrencyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteSlotTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeletePolicyVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyVersionId() != null)\r\n        sb.append(\"PolicyVersionId: \").append(getPolicyVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DescribeKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getGrantTokens() != null)\r\n        sb.append(\"GrantTokens: \").append(getGrantTokens());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.S3ReferenceDataSourceUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketARNUpdate() != null)\r\n        sb.append(\"BucketARNUpdate: \").append(getBucketARNUpdate()).append(\",\");\r\n    if (getFileKeyUpdate() != null)\r\n        sb.append(\"FileKeyUpdate: \").append(getFileKeyUpdate()).append(\",\");\r\n    if (getReferenceRoleARNUpdate() != null)\r\n        sb.append(\"ReferenceRoleARNUpdate: \").append(getReferenceRoleARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.isVpcPeered",
	"Comment": "returns a boolean value indicating whether your lightsail vpc is peered.",
	"Method": "IsVpcPeeredResult isVpcPeered(IsVpcPeeredRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeIsVpcPeered(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.InvokeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getInvocationType() != null)\r\n        sb.append(\"InvocationType: \").append(getInvocationType()).append(\",\");\r\n    if (getLogType() != null)\r\n        sb.append(\"LogType: \").append(getLogType()).append(\",\");\r\n    if (getClientContext() != null)\r\n        sb.append(\"ClientContext: \").append(getClientContext()).append(\",\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getQualifier() != null)\r\n        sb.append(\"Qualifier: \").append(getQualifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.AmazonLexRuntimeAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonlexruntimeasync using the current builder configuration.",
	"Method": "AmazonLexRuntimeAsync build(AwsAsyncClientParams params){\r\n    return new AmazonLexRuntimeAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.UpdateDataRetentionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getCurrentVersion() != null)\r\n        sb.append(\"CurrentVersion: \").append(getCurrentVersion()).append(\",\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation()).append(\",\");\r\n    if (getDataRetentionChangeInHours() != null)\r\n        sb.append(\"DataRetentionChangeInHours: \").append(getDataRetentionChangeInHours());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateDynamicThingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getThingGroupProperties() != null)\r\n        sb.append(\"ThingGroupProperties: \").append(getThingGroupProperties()).append(\",\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getQueryString() != null)\r\n        sb.append(\"QueryString: \").append(getQueryString()).append(\",\");\r\n    if (getQueryVersion() != null)\r\n        sb.append(\"QueryVersion: \").append(getQueryVersion()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeadLetterConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetArn() != null)\r\n        sb.append(\"TargetArn: \").append(getTargetArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListViolationEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getViolationEvents() != null)\r\n        sb.append(\"ViolationEvents: \").append(getViolationEvents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeIndexRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.Attributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SetLoggingOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.StopRelationalDatabaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getRelationalDatabaseSnapshotName() != null)\r\n        sb.append(\"RelationalDatabaseSnapshotName: \").append(getRelationalDatabaseSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.PresignedUrlConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getExpiresInSec() != null)\r\n        sb.append(\"ExpiresInSec: \").append(getExpiresInSec());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.CSVMappingParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordRowDelimiter() != null)\r\n        sb.append(\"RecordRowDelimiter: \").append(getRecordRowDelimiter()).append(\",\");\r\n    if (getRecordColumnDelimiter() != null)\r\n        sb.append(\"RecordColumnDelimiter: \").append(getRecordColumnDelimiter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getInputStartingPositionConfiguration() != null)\r\n        sb.append(\"InputStartingPositionConfiguration: \").append(getInputStartingPositionConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteIntentVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.CreateLicenseConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AuthInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionType() != null)\r\n        sb.append(\"ActionType: \").append(getActionType()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CodeSigningCertificateChain.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateName() != null)\r\n        sb.append(\"CertificateName: \").append(getCertificateName()).append(\",\");\r\n    if (getInlineDocument() != null)\r\n        sb.append(\"InlineDocument: \").append(getInlineDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreatePolicyVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getSetAsDefault() != null)\r\n        sb.append(\"SetAsDefault: \").append(getSetAsDefault());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingGroupsForThingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingGroupsToAdd() != null)\r\n        sb.append(\"ThingGroupsToAdd: \").append(getThingGroupsToAdd()).append(\",\");\r\n    if (getThingGroupsToRemove() != null)\r\n        sb.append(\"ThingGroupsToRemove: \").append(getThingGroupsToRemove()).append(\",\");\r\n    if (getOverrideDynamicGroups() != null)\r\n        sb.append(\"OverrideDynamicGroups: \").append(getOverrideDynamicGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TestInvokeAuthorizerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIsAuthenticated() != null)\r\n        sb.append(\"IsAuthenticated: \").append(getIsAuthenticated()).append(\",\");\r\n    if (getPrincipalId() != null)\r\n        sb.append(\"PrincipalId: \").append(getPrincipalId()).append(\",\");\r\n    if (getPolicyDocuments() != null)\r\n        sb.append(\"PolicyDocuments: \").append(getPolicyDocuments()).append(\",\");\r\n    if (getRefreshAfterInSeconds() != null)\r\n        sb.append(\"RefreshAfterInSeconds: \").append(getRefreshAfterInSeconds()).append(\",\");\r\n    if (getDisconnectAfterInSeconds() != null)\r\n        sb.append(\"DisconnectAfterInSeconds: \").append(getDisconnectAfterInSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListJobExecutionsForThingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecutionSummaries() != null)\r\n        sb.append(\"ExecutionSummaries: \").append(getExecutionSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.InvokeDeviceMethodRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId()).append(\",\");\r\n    if (getDeviceMethod() != null)\r\n        sb.append(\"DeviceMethod: \").append(getDeviceMethod()).append(\",\");\r\n    if (getDeviceMethodParameters() != null)\r\n        sb.append(\"DeviceMethodParameters: \").append(getDeviceMethodParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateThingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn()).append(\",\");\r\n    if (getThingId() != null)\r\n        sb.append(\"ThingId: \").append(getThingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.DeleteClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterArn() != null)\r\n        sb.append(\"ClusterArn: \").append(getClusterArn()).append(\",\");\r\n    if (getCurrentVersion() != null)\r\n        sb.append(\"CurrentVersion: \").append(getCurrentVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RelationalDatabaseSnapshot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getSizeInGb() != null)\r\n        sb.append(\"SizeInGb: \").append(getSizeInGb()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getFromRelationalDatabaseName() != null)\r\n        sb.append(\"FromRelationalDatabaseName: \").append(getFromRelationalDatabaseName()).append(\",\");\r\n    if (getFromRelationalDatabaseArn() != null)\r\n        sb.append(\"FromRelationalDatabaseArn: \").append(getFromRelationalDatabaseArn()).append(\",\");\r\n    if (getFromRelationalDatabaseBundleId() != null)\r\n        sb.append(\"FromRelationalDatabaseBundleId: \").append(getFromRelationalDatabaseBundleId()).append(\",\");\r\n    if (getFromRelationalDatabaseBlueprintId() != null)\r\n        sb.append(\"FromRelationalDatabaseBlueprintId: \").append(getFromRelationalDatabaseBlueprintId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateScheduledAuditResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduledAuditArn() != null)\r\n        sb.append(\"ScheduledAuditArn: \").append(getScheduledAuditArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetLayerVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getLayerArn() != null)\r\n        sb.append(\"LayerArn: \").append(getLayerArn()).append(\",\");\r\n    if (getLayerVersionArn() != null)\r\n        sb.append(\"LayerVersionArn: \").append(getLayerVersionArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getCompatibleRuntimes() != null)\r\n        sb.append(\"CompatibleRuntimes: \").append(getCompatibleRuntimes()).append(\",\");\r\n    if (getLicenseInfo() != null)\r\n        sb.append(\"LicenseInfo: \").append(getLicenseInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateOTAUpdateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOtaUpdateId() != null)\r\n        sb.append(\"OtaUpdateId: \").append(getOtaUpdateId()).append(\",\");\r\n    if (getAwsIotJobId() != null)\r\n        sb.append(\"AwsIotJobId: \").append(getAwsIotJobId()).append(\",\");\r\n    if (getOtaUpdateArn() != null)\r\n        sb.append(\"OtaUpdateArn: \").append(getOtaUpdateArn()).append(\",\");\r\n    if (getAwsIotJobArn() != null)\r\n        sb.append(\"AwsIotJobArn: \").append(getAwsIotJobArn()).append(\",\");\r\n    if (getOtaUpdateStatus() != null)\r\n        sb.append(\"OtaUpdateStatus: \").append(getOtaUpdateStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoMediaAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getIntents() != null)\r\n        sb.append(\"Intents: \").append(getIntents()).append(\",\");\r\n    if (getClarificationPrompt() != null)\r\n        sb.append(\"ClarificationPrompt: \").append(getClarificationPrompt()).append(\",\");\r\n    if (getAbortStatement() != null)\r\n        sb.append(\"AbortStatement: \").append(getAbortStatement()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getIdleSessionTTLInSeconds() != null)\r\n        sb.append(\"IdleSessionTTLInSeconds: \").append(getIdleSessionTTLInSeconds()).append(\",\");\r\n    if (getVoiceId() != null)\r\n        sb.append(\"VoiceId: \").append(getVoiceId()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getChildDirected() != null)\r\n        sb.append(\"ChildDirected: \").append(getChildDirected());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetLoadBalancerMetricDataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getMetricData() != null)\r\n        sb.append(\"MetricData: \").append(getMetricData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotAliasesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonlightsailasync using the current builder configuration.",
	"Method": "AmazonLightsailAsync build(AwsAsyncClientParams params){\r\n    return new AmazonLightsailAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CreateDatasetContentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.InstanceAccessDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertKey() != null)\r\n        sb.append(\"CertKey: \").append(getCertKey()).append(\",\");\r\n    if (getExpiresAt() != null)\r\n        sb.append(\"ExpiresAt: \").append(getExpiresAt()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(getPassword()).append(\",\");\r\n    if (getPasswordData() != null)\r\n        sb.append(\"PasswordData: \").append(getPasswordData()).append(\",\");\r\n    if (getPrivateKey() != null)\r\n        sb.append(\"PrivateKey: \").append(getPrivateKey()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetLayerVersionPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerName() != null)\r\n        sb.append(\"LayerName: \").append(getLayerName()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.EstimatedResourceSize.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEstimatedSizeInBytes() != null)\r\n        sb.append(\"EstimatedSizeInBytes: \").append(getEstimatedSizeInBytes()).append(\",\");\r\n    if (getEstimatedOn() != null)\r\n        sb.append(\"EstimatedOn: \").append(getEstimatedOn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBots() != null)\r\n        sb.append(\"Bots: \").append(getBots()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingGroupDocument.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getThingGroupId() != null)\r\n        sb.append(\"ThingGroupId: \").append(getThingGroupId()).append(\",\");\r\n    if (getThingGroupDescription() != null)\r\n        sb.append(\"ThingGroupDescription: \").append(getThingGroupDescription()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getParentGroupNames() != null)\r\n        sb.append(\"ParentGroupNames: \").append(getParentGroupNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteSecurityProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DiskMap.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOriginalDiskPath() != null)\r\n        sb.append(\"OriginalDiskPath: \").append(getOriginalDiskPath()).append(\",\");\r\n    if (getNewDiskName() != null)\r\n        sb.append(\"NewDiskName: \").append(getNewDiskName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointAddress() != null)\r\n        sb.append(\"EndpointAddress: \").append(getEndpointAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateKeysAndCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSetAsActive() != null)\r\n        sb.append(\"SetAsActive: \").append(getSetAsActive());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getFiles() != null)\r\n        sb.append(\"Files: \").append(getFiles()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClient.updateThingShadow",
	"Comment": "updates the thing shadow for the specified thing.for more information, see updatethingshadow inthe aws iot developer guide.",
	"Method": "UpdateThingShadowResult updateThingShadow(UpdateThingShadowRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateThingShadow(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeIndexResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getIndexStatus() != null)\r\n        sb.append(\"IndexStatus: \").append(getIndexStatus()).append(\",\");\r\n    if (getSchema() != null)\r\n        sb.append(\"Schema: \").append(getSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.ListProjectsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ClearDefaultAuthorizerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CACertificateDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCertificatePem() != null)\r\n        sb.append(\"CertificatePem: \").append(getCertificatePem()).append(\",\");\r\n    if (getOwnedBy() != null)\r\n        sb.append(\"OwnedBy: \").append(getOwnedBy()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getAutoRegistrationStatus() != null)\r\n        sb.append(\"AutoRegistrationStatus: \").append(getAutoRegistrationStatus()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getCustomerVersion() != null)\r\n        sb.append(\"CustomerVersion: \").append(getCustomerVersion()).append(\",\");\r\n    if (getGenerationId() != null)\r\n        sb.append(\"GenerationId: \").append(getGenerationId()).append(\",\");\r\n    if (getValidity() != null)\r\n        sb.append(\"Validity: \").append(getValidity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteBillingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetStaticIpsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListPrincipalThingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThings() != null)\r\n        sb.append(\"Things: \").append(getThings()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.AmazonLexRuntimeClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateRoleAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleAlias() != null)\r\n        sb.append(\"RoleAlias: \").append(getRoleAlias()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getCredentialDurationSeconds() != null)\r\n        sb.append(\"CredentialDurationSeconds: \").append(getCredentialDurationSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClient.tagResource",
	"Comment": "adds to or modifies the tags of the given resource. tags are metadata which can be used to manage a resource.",
	"Method": "TagResourceResult tagResource(TagResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTagResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeJobExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getExecutionNumber() != null)\r\n        sb.append(\"ExecutionNumber: \").append(getExecutionNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListCACertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingsInBillingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2Client.stopApplication",
	"Comment": "stops the application from processing data. you can stop an application only if it is in the running state. youcan use the describeapplication operation to find the application state.",
	"Method": "StopApplicationResult stopApplication(StopApplicationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStopApplication(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationReferenceDataSourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getReferenceId() != null)\r\n        sb.append(\"ReferenceId: \").append(getReferenceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeleteFunctionConcurrencyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.LogTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetType() != null)\r\n        sb.append(\"TargetType: \").append(getTargetType()).append(\",\");\r\n    if (getTargetName() != null)\r\n        sb.append(\"TargetName: \").append(getTargetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputProcessingConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputLambdaProcessorDescription() != null)\r\n        sb.append(\"InputLambdaProcessorDescription: \").append(getInputLambdaProcessorDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetV2LoggingOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getDefaultLogLevel() != null)\r\n        sb.append(\"DefaultLogLevel: \").append(getDefaultLogLevel()).append(\",\");\r\n    if (getDisableAllLogs() != null)\r\n        sb.append(\"DisableAllLogs: \").append(getDisableAllLogs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.AmazonLexModelBuildingClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteInstanceSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceSnapshotName() != null)\r\n        sb.append(\"InstanceSnapshotName: \").append(getInstanceSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RemoveThingFromBillingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.ListApplicationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationSummaries() != null)\r\n        sb.append(\"ApplicationSummaries: \").append(getApplicationSummaries()).append(\",\");\r\n    if (getHasMoreApplications() != null)\r\n        sb.append(\"HasMoreApplications: \").append(getHasMoreApplications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2AsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonkinesisanalyticsv2async using the current builderconfiguration.",
	"Method": "AmazonKinesisAnalyticsV2Async build(AwsAsyncClientParams params){\r\n    return new AmazonKinesisAnalyticsV2AsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.CreateClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerNodeGroupInfo() != null)\r\n        sb.append(\"BrokerNodeGroupInfo: \").append(getBrokerNodeGroupInfo()).append(\",\");\r\n    if (getClusterName() != null)\r\n        sb.append(\"ClusterName: \").append(getClusterName()).append(\",\");\r\n    if (getEncryptionInfo() != null)\r\n        sb.append(\"EncryptionInfo: \").append(getEncryptionInfo()).append(\",\");\r\n    if (getEnhancedMonitoring() != null)\r\n        sb.append(\"EnhancedMonitoring: \").append(getEnhancedMonitoring()).append(\",\");\r\n    if (getKafkaVersion() != null)\r\n        sb.append(\"KafkaVersion: \").append(getKafkaVersion()).append(\",\");\r\n    if (getNumberOfBrokerNodes() != null)\r\n        sb.append(\"NumberOfBrokerNodes: \").append(getNumberOfBrokerNodes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DetachPrincipalPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UpdateAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.StopAssessmentRunResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.PutInstancePublicPortsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DescribeApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationDetail() != null)\r\n        sb.append(\"ApplicationDetail: \").append(getApplicationDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.PolicyVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId()).append(\",\");\r\n    if (getIsDefaultVersion() != null)\r\n        sb.append(\"IsDefaultVersion: \").append(getIsDefaultVersion()).append(\",\");\r\n    if (getCreateDate() != null)\r\n        sb.append(\"CreateDate: \").append(getCreateDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.Concurrency.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedConcurrentExecutions() != null)\r\n        sb.append(\"ReservedConcurrentExecutions: \").append(getReservedConcurrentExecutions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.DeleteDeliveryStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ExtendedS3DestinationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getBufferingHints() != null)\r\n        sb.append(\"BufferingHints: \").append(getBufferingHints()).append(\",\");\r\n    if (getCompressionFormat() != null)\r\n        sb.append(\"CompressionFormat: \").append(getCompressionFormat()).append(\",\");\r\n    if (getEncryptionConfiguration() != null)\r\n        sb.append(\"EncryptionConfiguration: \").append(getEncryptionConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3BackupDescription() != null)\r\n        sb.append(\"S3BackupDescription: \").append(getS3BackupDescription()).append(\",\");\r\n    if (getDataFormatConversionConfiguration() != null)\r\n        sb.append(\"DataFormatConversionConfiguration: \").append(getDataFormatConversionConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.MergeShardsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getShardToMerge() != null)\r\n        sb.append(\"ShardToMerge: \").append(getShardToMerge()).append(\",\");\r\n    if (getAdjacentShardToMerge() != null)\r\n        sb.append(\"AdjacentShardToMerge: \").append(getAdjacentShardToMerge());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.LayerVersionsListItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerVersionArn() != null)\r\n        sb.append(\"LayerVersionArn: \").append(getLayerVersionArn()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getCompatibleRuntimes() != null)\r\n        sb.append(\"CompatibleRuntimes: \").append(getCompatibleRuntimes()).append(\",\");\r\n    if (getLicenseInfo() != null)\r\n        sb.append(\"LicenseInfo: \").append(getLicenseInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.UpdateApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getApplicationConfigurationUpdate() != null)\r\n        sb.append(\"ApplicationConfigurationUpdate: \").append(getApplicationConfigurationUpdate()).append(\",\");\r\n    if (getServiceExecutionRoleUpdate() != null)\r\n        sb.append(\"ServiceExecutionRoleUpdate: \").append(getServiceExecutionRoleUpdate()).append(\",\");\r\n    if (getRunConfigurationUpdate() != null)\r\n        sb.append(\"RunConfigurationUpdate: \").append(getRunConfigurationUpdate()).append(\",\");\r\n    if (getCloudWatchLoggingOptionUpdates() != null)\r\n        sb.append(\"CloudWatchLoggingOptionUpdates: \").append(getCloudWatchLoggingOptionUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeDefaultAuthorizerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.FlinkApplicationConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckpointConfigurationUpdate() != null)\r\n        sb.append(\"CheckpointConfigurationUpdate: \").append(getCheckpointConfigurationUpdate()).append(\",\");\r\n    if (getMonitoringConfigurationUpdate() != null)\r\n        sb.append(\"MonitoringConfigurationUpdate: \").append(getMonitoringConfigurationUpdate()).append(\",\");\r\n    if (getParallelismConfigurationUpdate() != null)\r\n        sb.append(\"ParallelismConfigurationUpdate: \").append(getParallelismConfigurationUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.StreamInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getMediaType() != null)\r\n        sb.append(\"MediaType: \").append(getMediaType()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getDataRetentionInHours() != null)\r\n        sb.append(\"DataRetentionInHours: \").append(getDataRetentionInHours());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecords() != null)\r\n        sb.append(\"Records: \").append(getRecords()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AcceptCertificateTransferResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.PeerVpcRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatastoreSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatastoreName() != null)\r\n        sb.append(\"DatastoreName: \").append(getDatastoreName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdateTime() != null)\r\n        sb.append(\"LastUpdateTime: \").append(getLastUpdateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.StartDeliveryStreamEncryptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CloudwatchMetricAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getMetricNamespace() != null)\r\n        sb.append(\"MetricNamespace: \").append(getMetricNamespace()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getMetricValue() != null)\r\n        sb.append(\"MetricValue: \").append(getMetricValue()).append(\",\");\r\n    if (getMetricUnit() != null)\r\n        sb.append(\"MetricUnit: \").append(getMetricUnit()).append(\",\");\r\n    if (getMetricTimestamp() != null)\r\n        sb.append(\"MetricTimestamp: \").append(getMetricTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DestinationSchema.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordFormatType() != null)\r\n        sb.append(\"RecordFormatType: \").append(getRecordFormatType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRegionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegions() != null)\r\n        sb.append(\"Regions: \").append(getRegions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TestAuthorizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal()).append(\",\");\r\n    if (getCognitoIdentityPoolId() != null)\r\n        sb.append(\"CognitoIdentityPoolId: \").append(getCognitoIdentityPoolId()).append(\",\");\r\n    if (getAuthInfos() != null)\r\n        sb.append(\"AuthInfos: \").append(getAuthInfos()).append(\",\");\r\n    if (getClientId() != null)\r\n        sb.append(\"ClientId: \").append(getClientId()).append(\",\");\r\n    if (getPolicyNamesToAdd() != null)\r\n        sb.append(\"PolicyNamesToAdd: \").append(getPolicyNamesToAdd()).append(\",\");\r\n    if (getPolicyNamesToSkip() != null)\r\n        sb.append(\"PolicyNamesToSkip: \").append(getPolicyNamesToSkip());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.detachThingPrincipal",
	"Comment": "detaches the specified principal from the specified thing.this call is asynchronous. it might take several seconds for the detachment to propagate.",
	"Method": "DetachThingPrincipalResult detachThingPrincipal(DetachThingPrincipalRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDetachThingPrincipal(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.PutKeyPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.EventSourceMappingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUUID() != null)\r\n        sb.append(\"UUID: \").append(getUUID()).append(\",\");\r\n    if (getBatchSize() != null)\r\n        sb.append(\"BatchSize: \").append(getBatchSize()).append(\",\");\r\n    if (getEventSourceArn() != null)\r\n        sb.append(\"EventSourceArn: \").append(getEventSourceArn()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getLastProcessingResult() != null)\r\n        sb.append(\"LastProcessingResult: \").append(getLastProcessingResult()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateTransitionReason() != null)\r\n        sb.append(\"StateTransitionReason: \").append(getStateTransitionReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ImportKeyMaterialRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getImportToken() != null)\r\n        sb.append(\"ImportToken: \").append(getImportToken()).append(\",\");\r\n    if (getEncryptedKeyMaterial() != null)\r\n        sb.append(\"EncryptedKeyMaterial: \").append(getEncryptedKeyMaterial()).append(\",\");\r\n    if (getValidTo() != null)\r\n        sb.append(\"ValidTo: \").append(getValidTo()).append(\",\");\r\n    if (getExpirationModel() != null)\r\n        sb.append(\"ExpirationModel: \").append(getExpirationModel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.IncreaseStreamRetentionPeriodResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.StartDeliveryStreamEncryptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabaseBlueprints",
	"Comment": "returns a list of available database blueprints in amazon lightsail. a blueprint describes the major engineversion of a database.you can use a blueprint id to create a new database that runs a specific database engine.",
	"Method": "GetRelationalDatabaseBlueprintsResult getRelationalDatabaseBlueprints(GetRelationalDatabaseBlueprintsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabaseBlueprints(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.S3ApplicationCodeLocationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getFileKey() != null)\r\n        sb.append(\"FileKey: \").append(getFileKey()).append(\",\");\r\n    if (getObjectVersion() != null)\r\n        sb.append(\"ObjectVersion: \").append(getObjectVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateKeysAndCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getCertificatePem() != null)\r\n        sb.append(\"CertificatePem: \").append(getCertificatePem()).append(\",\");\r\n    if (getKeyPair() != null)\r\n        sb.append(\"KeyPair: \").append(getKeyPair());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.StartApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAccountAuditConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getAuditNotificationTargetConfigurations() != null)\r\n        sb.append(\"AuditNotificationTargetConfigurations: \").append(getAuditNotificationTargetConfigurations()).append(\",\");\r\n    if (getAuditCheckConfigurations() != null)\r\n        sb.append(\"AuditCheckConfigurations: \").append(getAuditCheckConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.InstanceSnapshotInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFromBundleId() != null)\r\n        sb.append(\"FromBundleId: \").append(getFromBundleId()).append(\",\");\r\n    if (getFromBlueprintId() != null)\r\n        sb.append(\"FromBlueprintId: \").append(getFromBlueprintId()).append(\",\");\r\n    if (getFromDiskInfo() != null)\r\n        sb.append(\"FromDiskInfo: \").append(getFromDiskInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.SubscribeToEventRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getEvent() != null)\r\n        sb.append(\"Event: \").append(getEvent()).append(\",\");\r\n    if (getTopicArn() != null)\r\n        sb.append(\"TopicArn: \").append(getTopicArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId()).append(\",\");\r\n    if (getStreamArn() != null)\r\n        sb.append(\"StreamArn: \").append(getStreamArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getStreamVersion() != null)\r\n        sb.append(\"StreamVersion: \").append(getStreamVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegisterThingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificatePem() != null)\r\n        sb.append(\"CertificatePem: \").append(getCertificatePem()).append(\",\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyArn() != null)\r\n        sb.append(\"PolicyArn: \").append(getPolicyArn()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getDefaultVersionId() != null)\r\n        sb.append(\"DefaultVersionId: \").append(getDefaultVersionId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getGenerationId() != null)\r\n        sb.append(\"GenerationId: \").append(getGenerationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getPartitionKey() != null)\r\n        sb.append(\"PartitionKey: \").append(getPartitionKey()).append(\",\");\r\n    if (getExplicitHashKey() != null)\r\n        sb.append(\"ExplicitHashKey: \").append(getExplicitHashKey()).append(\",\");\r\n    if (getSequenceNumberForOrdering() != null)\r\n        sb.append(\"SequenceNumberForOrdering: \").append(getSequenceNumberForOrdering());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ReplaceTopicRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getTopicRulePayload() != null)\r\n        sb.append(\"TopicRulePayload: \").append(getTopicRulePayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeRoleAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleAlias() != null)\r\n        sb.append(\"RoleAlias: \").append(getRoleAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.PortInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFromPort() != null)\r\n        sb.append(\"FromPort: \").append(getFromPort()).append(\",\");\r\n    if (getToPort() != null)\r\n        sb.append(\"ToPort: \").append(getToPort()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingsInThingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getRecursive() != null)\r\n        sb.append(\"Recursive: \").append(getRecursive()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClient.listDatasetContents",
	"Comment": "lists information about data set contents that have been created.",
	"Method": "ListDatasetContentsResult listDatasetContents(ListDatasetContentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDatasetContents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoMediaClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.BatchPutMessageErrorEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageId() != null)\r\n        sb.append(\"MessageId: \").append(getMessageId()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceSnapshotName() != null)\r\n        sb.append(\"InstanceSnapshotName: \").append(getInstanceSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ConnectCustomKeyStoreResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerClient.getServiceSettings",
	"Comment": "gets license manager settings for a region. exposes the configured s3 bucket, sns topic, etc., for inspection.",
	"Method": "GetServiceSettingsResult getServiceSettings(GetServiceSettingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetServiceSettings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ReferenceDataSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getS3ReferenceDataSource() != null)\r\n        sb.append(\"S3ReferenceDataSource: \").append(getS3ReferenceDataSource()).append(\",\");\r\n    if (getReferenceSchema() != null)\r\n        sb.append(\"ReferenceSchema: \").append(getReferenceSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.ApplicationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationStatus() != null)\r\n        sb.append(\"ApplicationStatus: \").append(getApplicationStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AttachThingPrincipalResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCreateTimestamp() != null)\r\n        sb.append(\"CreateTimestamp: \").append(getCreateTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseBundlesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationCloudWatchLoggingOptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getCloudWatchLoggingOptionId() != null)\r\n        sb.append(\"CloudWatchLoggingOptionId: \").append(getCloudWatchLoggingOptionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TransferData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransferMessage() != null)\r\n        sb.append(\"TransferMessage: \").append(getTransferMessage()).append(\",\");\r\n    if (getRejectReason() != null)\r\n        sb.append(\"RejectReason: \").append(getRejectReason()).append(\",\");\r\n    if (getTransferDate() != null)\r\n        sb.append(\"TransferDate: \").append(getTransferDate()).append(\",\");\r\n    if (getAcceptDate() != null)\r\n        sb.append(\"AcceptDate: \").append(getAcceptDate()).append(\",\");\r\n    if (getRejectDate() != null)\r\n        sb.append(\"RejectDate: \").append(getRejectDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.TagStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteBotChannelAssociationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.describeEndpoint",
	"Comment": "returns a unique endpoint specific to the aws account making the call.",
	"Method": "DescribeEndpointResult describeEndpoint(DescribeEndpointRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEndpoint(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.CreateBotVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getIntents() != null)\r\n        sb.append(\"Intents: \").append(getIntents()).append(\",\");\r\n    if (getClarificationPrompt() != null)\r\n        sb.append(\"ClarificationPrompt: \").append(getClarificationPrompt()).append(\",\");\r\n    if (getAbortStatement() != null)\r\n        sb.append(\"AbortStatement: \").append(getAbortStatement()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getIdleSessionTTLInSeconds() != null)\r\n        sb.append(\"IdleSessionTTLInSeconds: \").append(getIdleSessionTTLInSeconds()).append(\",\");\r\n    if (getVoiceId() != null)\r\n        sb.append(\"VoiceId: \").append(getVoiceId()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getChildDirected() != null)\r\n        sb.append(\"ChildDirected: \").append(getChildDirected());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.Record.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DescribeKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyMetadata() != null)\r\n        sb.append(\"KeyMetadata: \").append(getKeyMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetIndexingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingIndexingConfiguration() != null)\r\n        sb.append(\"ThingIndexingConfiguration: \").append(getThingIndexingConfiguration()).append(\",\");\r\n    if (getThingGroupIndexingConfiguration() != null)\r\n        sb.append(\"ThingGroupIndexingConfiguration: \").append(getThingGroupIndexingConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.KinesisAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getPartitionKey() != null)\r\n        sb.append(\"PartitionKey: \").append(getPartitionKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeAuditTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.UpdateFunctionConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getHandler() != null)\r\n        sb.append(\"Handler: \").append(getHandler()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getMemorySize() != null)\r\n        sb.append(\"MemorySize: \").append(getMemorySize()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getRuntime() != null)\r\n        sb.append(\"Runtime: \").append(getRuntime()).append(\",\");\r\n    if (getDeadLetterConfig() != null)\r\n        sb.append(\"DeadLetterConfig: \").append(getDeadLetterConfig()).append(\",\");\r\n    if (getKMSKeyArn() != null)\r\n        sb.append(\"KMSKeyArn: \").append(getKMSKeyArn()).append(\",\");\r\n    if (getTracingConfig() != null)\r\n        sb.append(\"TracingConfig: \").append(getTracingConfig()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CancelJobExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.GetDevicesInPlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getPlacementName() != null)\r\n        sb.append(\"PlacementName: \").append(getPlacementName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RebootInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2Client.describeApplicationSnapshot",
	"Comment": "returns information about a snapshot of application state data.",
	"Method": "DescribeApplicationSnapshotResult describeApplicationSnapshot(DescribeApplicationSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeApplicationSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisStreamsOutputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RelationalDatabaseParameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowedValues() != null)\r\n        sb.append(\"AllowedValues: \").append(getAllowedValues()).append(\",\");\r\n    if (getApplyMethod() != null)\r\n        sb.append(\"ApplyMethod: \").append(getApplyMethod()).append(\",\");\r\n    if (getApplyType() != null)\r\n        sb.append(\"ApplyType: \").append(getApplyType()).append(\",\");\r\n    if (getDataType() != null)\r\n        sb.append(\"DataType: \").append(getDataType()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getIsModifiable() != null)\r\n        sb.append(\"IsModifiable: \").append(getIsModifiable()).append(\",\");\r\n    if (getParameterName() != null)\r\n        sb.append(\"ParameterName: \").append(getParameterName()).append(\",\");\r\n    if (getParameterValue() != null)\r\n        sb.append(\"ParameterValue: \").append(getParameterValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TestAuthorizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthResults() != null)\r\n        sb.append(\"AuthResults: \").append(getAuthResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.RedshiftRetryOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDurationInSeconds() != null)\r\n        sb.append(\"DurationInSeconds: \").append(getDurationInSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.InitiateDeviceClaimRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ExponentialRolloutRate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBaseRatePerMinute() != null)\r\n        sb.append(\"BaseRatePerMinute: \").append(getBaseRatePerMinute()).append(\",\");\r\n    if (getIncrementFactor() != null)\r\n        sb.append(\"IncrementFactor: \").append(getIncrementFactor()).append(\",\");\r\n    if (getRateIncreaseCriteria() != null)\r\n        sb.append(\"RateIncreaseCriteria: \").append(getRateIncreaseCriteria());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.ApplicationDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getApplicationDescription() != null)\r\n        sb.append(\"ApplicationDescription: \").append(getApplicationDescription()).append(\",\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationStatus() != null)\r\n        sb.append(\"ApplicationStatus: \").append(getApplicationStatus()).append(\",\");\r\n    if (getCreateTimestamp() != null)\r\n        sb.append(\"CreateTimestamp: \").append(getCreateTimestamp()).append(\",\");\r\n    if (getLastUpdateTimestamp() != null)\r\n        sb.append(\"LastUpdateTimestamp: \").append(getLastUpdateTimestamp()).append(\",\");\r\n    if (getInputDescriptions() != null)\r\n        sb.append(\"InputDescriptions: \").append(getInputDescriptions()).append(\",\");\r\n    if (getOutputDescriptions() != null)\r\n        sb.append(\"OutputDescriptions: \").append(getOutputDescriptions()).append(\",\");\r\n    if (getReferenceDataSourceDescriptions() != null)\r\n        sb.append(\"ReferenceDataSourceDescriptions: \").append(getReferenceDataSourceDescriptions()).append(\",\");\r\n    if (getCloudWatchLoggingOptionDescriptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptionDescriptions: \").append(getCloudWatchLoggingOptionDescriptions()).append(\",\");\r\n    if (getApplicationCode() != null)\r\n        sb.append(\"ApplicationCode: \").append(getApplicationCode()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.AddLayerVersionPermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerName() != null)\r\n        sb.append(\"LayerName: \").append(getLayerName()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber()).append(\",\");\r\n    if (getStatementId() != null)\r\n        sb.append(\"StatementId: \").append(getStatementId()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal()).append(\",\");\r\n    if (getOrganizationId() != null)\r\n        sb.append(\"OrganizationId: \").append(getOrganizationId()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.S3Destination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.FinalizeDeviceClaimResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputSchemaUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordFormatUpdate() != null)\r\n        sb.append(\"RecordFormatUpdate: \").append(getRecordFormatUpdate()).append(\",\");\r\n    if (getRecordEncodingUpdate() != null)\r\n        sb.append(\"RecordEncodingUpdate: \").append(getRecordEncodingUpdate()).append(\",\");\r\n    if (getRecordColumnUpdates() != null)\r\n        sb.append(\"RecordColumnUpdates: \").append(getRecordColumnUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.ExportSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceSnapshotName() != null)\r\n        sb.append(\"SourceSnapshotName: \").append(getSourceSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AbstractAWSKMSAsync.listAliasesAsync",
	"Comment": "simplified method form for invoking the listaliases operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAliasesResult> listAliasesAsync(ListAliasesRequest request,java.util.concurrent.Future<ListAliasesResult> listAliasesAsync,ListAliasesRequest request,com.amazonaws.handlers.AsyncHandler<ListAliasesRequest, ListAliasesResult> asyncHandler,java.util.concurrent.Future<ListAliasesResult> listAliasesAsync,java.util.concurrent.Future<ListAliasesResult> listAliasesAsync,com.amazonaws.handlers.AsyncHandler<ListAliasesRequest, ListAliasesResult> asyncHandler){\r\n    return listAliasesAsync(new ListAliasesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.GetServiceSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DeleteApplicationCloudWatchLoggingOptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getCloudWatchLoggingOptionId() != null)\r\n        sb.append(\"CloudWatchLoggingOptionId: \").append(getCloudWatchLoggingOptionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeleteDatastoreRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatastoreName() != null)\r\n        sb.append(\"DatastoreName: \").append(getDatastoreName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ElasticsearchDestinationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getDomainARN() != null)\r\n        sb.append(\"DomainARN: \").append(getDomainARN()).append(\",\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getTypeName() != null)\r\n        sb.append(\"TypeName: \").append(getTypeName()).append(\",\");\r\n    if (getIndexRotationPeriod() != null)\r\n        sb.append(\"IndexRotationPeriod: \").append(getIndexRotationPeriod()).append(\",\");\r\n    if (getBufferingHints() != null)\r\n        sb.append(\"BufferingHints: \").append(getBufferingHints()).append(\",\");\r\n    if (getRetryOptions() != null)\r\n        sb.append(\"RetryOptions: \").append(getRetryOptions()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3Configuration() != null)\r\n        sb.append(\"S3Configuration: \").append(getS3Configuration()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.ExportSnapshotRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getSourceInfo() != null)\r\n        sb.append(\"SourceInfo: \").append(getSourceInfo()).append(\",\");\r\n    if (getDestinationInfo() != null)\r\n        sb.append(\"DestinationInfo: \").append(getDestinationInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSAsyncClient.generateRandomAsync",
	"Comment": "simplified method form for invoking the generaterandom operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GenerateRandomResult> generateRandomAsync(GenerateRandomRequest request,java.util.concurrent.Future<GenerateRandomResult> generateRandomAsync,GenerateRandomRequest request,com.amazonaws.handlers.AsyncHandler<GenerateRandomRequest, GenerateRandomResult> asyncHandler,java.util.concurrent.Future<GenerateRandomResult> generateRandomAsync,java.util.concurrent.Future<GenerateRandomResult> generateRandomAsync,com.amazonaws.handlers.AsyncHandler<GenerateRandomRequest, GenerateRandomResult> asyncHandler){\r\n    return generateRandomAsync(new GenerateRandomRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.OTAUpdateSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOtaUpdateId() != null)\r\n        sb.append(\"OtaUpdateId: \").append(getOtaUpdateId()).append(\",\");\r\n    if (getOtaUpdateArn() != null)\r\n        sb.append(\"OtaUpdateArn: \").append(getOtaUpdateArn()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteDiskSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskSnapshotName() != null)\r\n        sb.append(\"DiskSnapshotName: \").append(getDiskSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListAuditTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getTaskType() != null)\r\n        sb.append(\"TaskType: \").append(getTaskType()).append(\",\");\r\n    if (getTaskStatus() != null)\r\n        sb.append(\"TaskStatus: \").append(getTaskStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AbortCriteria.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailureType() != null)\r\n        sb.append(\"FailureType: \").append(getFailureType()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getThresholdPercentage() != null)\r\n        sb.append(\"ThresholdPercentage: \").append(getThresholdPercentage()).append(\",\");\r\n    if (getMinNumberOfExecutedThings() != null)\r\n        sb.append(\"MinNumberOfExecutedThings: \").append(getMinNumberOfExecutedThings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AttachSecurityProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getSecurityProfileTargetArn() != null)\r\n        sb.append(\"SecurityProfileTargetArn: \").append(getSecurityProfileTargetArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RateIncreaseCriteria.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumberOfNotifiedThings() != null)\r\n        sb.append(\"NumberOfNotifiedThings: \").append(getNumberOfNotifiedThings()).append(\",\");\r\n    if (getNumberOfSucceededThings() != null)\r\n        sb.append(\"NumberOfSucceededThings: \").append(getNumberOfSucceededThings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeyPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.StopInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.Filter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ElasticsearchRetryOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDurationInSeconds() != null)\r\n        sb.append(\"DurationInSeconds: \").append(getDurationInSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DisableTopicRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RelationalDatabaseHardware.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCpuCount() != null)\r\n        sb.append(\"CpuCount: \").append(getCpuCount()).append(\",\");\r\n    if (getDiskSizeInGb() != null)\r\n        sb.append(\"DiskSizeInGb: \").append(getDiskSizeInGb()).append(\",\");\r\n    if (getRamSizeInGb() != null)\r\n        sb.append(\"RamSizeInGb: \").append(getRamSizeInGb());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SetDefaultAuthorizerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerName() != null)\r\n        sb.append(\"AuthorizerName: \").append(getAuthorizerName()).append(\",\");\r\n    if (getAuthorizerArn() != null)\r\n        sb.append(\"AuthorizerArn: \").append(getAuthorizerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.model.PostTextResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIntentName() != null)\r\n        sb.append(\"IntentName: \").append(getIntentName()).append(\",\");\r\n    if (getSlots() != null)\r\n        sb.append(\"Slots: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getSessionAttributes() != null)\r\n        sb.append(\"SessionAttributes: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getMessageFormat() != null)\r\n        sb.append(\"MessageFormat: \").append(getMessageFormat()).append(\",\");\r\n    if (getDialogState() != null)\r\n        sb.append(\"DialogState: \").append(getDialogState()).append(\",\");\r\n    if (getSlotToElicit() != null)\r\n        sb.append(\"SlotToElicit: \").append(getSlotToElicit()).append(\",\");\r\n    if (getResponseCard() != null)\r\n        sb.append(\"ResponseCard: \").append(getResponseCard());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobArn() != null)\r\n        sb.append(\"JobArn: \").append(getJobArn()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AuthResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthInfo() != null)\r\n        sb.append(\"AuthInfo: \").append(getAuthInfo()).append(\",\");\r\n    if (getAllowed() != null)\r\n        sb.append(\"Allowed: \").append(getAllowed()).append(\",\");\r\n    if (getDenied() != null)\r\n        sb.append(\"Denied: \").append(getDenied()).append(\",\");\r\n    if (getAuthDecision() != null)\r\n        sb.append(\"AuthDecision: \").append(getAuthDecision()).append(\",\");\r\n    if (getMissingContextValues() != null)\r\n        sb.append(\"MissingContextValues: \").append(getMissingContextValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.StreamNameCondition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getComparisonValue() != null)\r\n        sb.append(\"ComparisonValue: \").append(getComparisonValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.AmazonKinesisFirehoseClient.listTagsForDeliveryStream",
	"Comment": "lists the tags for the specified delivery stream. this operation has a limit of five transactions per second peraccount.",
	"Method": "ListTagsForDeliveryStreamResult listTagsForDeliveryStream(ListTagsForDeliveryStreamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTagsForDeliveryStream(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingDocument.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingId() != null)\r\n        sb.append(\"ThingId: \").append(getThingId()).append(\",\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName()).append(\",\");\r\n    if (getThingGroupNames() != null)\r\n        sb.append(\"ThingGroupNames: \").append(getThingGroupNames()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getShadow() != null)\r\n        sb.append(\"Shadow: \").append(getShadow()).append(\",\");\r\n    if (getConnectivity() != null)\r\n        sb.append(\"Connectivity: \").append(getConnectivity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DescribePlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacementName() != null)\r\n        sb.append(\"PlacementName: \").append(getPlacementName()).append(\",\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatasetContentStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateInstanceSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceSnapshotName() != null)\r\n        sb.append(\"InstanceSnapshotName: \").append(getInstanceSnapshotName()).append(\",\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordBatchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName()).append(\",\");\r\n    if (getRecords() != null)\r\n        sb.append(\"Records: \").append(getRecords());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.CreateProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getPlacementTemplate() != null)\r\n        sb.append(\"PlacementTemplate: \").append(getPlacementTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.getEffectivePolicies",
	"Comment": "gets a list of the policies that have an effect on the authorization behavior of the specified device when itconnects to the aws iot device gateway.",
	"Method": "GetEffectivePoliciesResult getEffectivePolicies(GetEffectivePoliciesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetEffectivePolicies(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateThingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getThingGroupArn() != null)\r\n        sb.append(\"ThingGroupArn: \").append(getThingGroupArn()).append(\",\");\r\n    if (getThingGroupId() != null)\r\n        sb.append(\"ThingGroupId: \").append(getThingGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ElasticsearchDestinationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getDomainARN() != null)\r\n        sb.append(\"DomainARN: \").append(getDomainARN()).append(\",\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getTypeName() != null)\r\n        sb.append(\"TypeName: \").append(getTypeName()).append(\",\");\r\n    if (getIndexRotationPeriod() != null)\r\n        sb.append(\"IndexRotationPeriod: \").append(getIndexRotationPeriod()).append(\",\");\r\n    if (getBufferingHints() != null)\r\n        sb.append(\"BufferingHints: \").append(getBufferingHints()).append(\",\");\r\n    if (getRetryOptions() != null)\r\n        sb.append(\"RetryOptions: \").append(getRetryOptions()).append(\",\");\r\n    if (getS3Update() != null)\r\n        sb.append(\"S3Update: \").append(getS3Update()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AttachSecurityProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListVersionsByFunctionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteSecurityProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.BatchPutMessageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBatchPutMessageErrorEntries() != null)\r\n        sb.append(\"BatchPutMessageErrorEntries: \").append(getBatchPutMessageErrorEntries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisFirehoseOutputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.OutputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutputId() != null)\r\n        sb.append(\"OutputId: \").append(getOutputId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getKinesisStreamsOutputDescription() != null)\r\n        sb.append(\"KinesisStreamsOutputDescription: \").append(getKinesisStreamsOutputDescription()).append(\",\");\r\n    if (getKinesisFirehoseOutputDescription() != null)\r\n        sb.append(\"KinesisFirehoseOutputDescription: \").append(getKinesisFirehoseOutputDescription()).append(\",\");\r\n    if (getLambdaOutputDescription() != null)\r\n        sb.append(\"LambdaOutputDescription: \").append(getLambdaOutputDescription()).append(\",\");\r\n    if (getDestinationSchema() != null)\r\n        sb.append(\"DestinationSchema: \").append(getDestinationSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.NonCompliantResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceIdentifier() != null)\r\n        sb.append(\"ResourceIdentifier: \").append(getResourceIdentifier()).append(\",\");\r\n    if (getAdditionalInfo() != null)\r\n        sb.append(\"AdditionalInfo: \").append(getAdditionalInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.AmazonKinesisAnalyticsClient.deleteApplicationCloudWatchLoggingOption",
	"Comment": "deletes a cloudwatch log stream from an application. for more information about using cloudwatch log streams withamazon kinesis analytics applications, see working with amazon cloudwatchlogs.",
	"Method": "DeleteApplicationCloudWatchLoggingOptionResult deleteApplicationCloudWatchLoggingOption(DeleteApplicationCloudWatchLoggingOptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteApplicationCloudWatchLoggingOption(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.PublishVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getRuntime() != null)\r\n        sb.append(\"Runtime: \").append(getRuntime()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getHandler() != null)\r\n        sb.append(\"Handler: \").append(getHandler()).append(\",\");\r\n    if (getCodeSize() != null)\r\n        sb.append(\"CodeSize: \").append(getCodeSize()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getMemorySize() != null)\r\n        sb.append(\"MemorySize: \").append(getMemorySize()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getCodeSha256() != null)\r\n        sb.append(\"CodeSha256: \").append(getCodeSha256()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getDeadLetterConfig() != null)\r\n        sb.append(\"DeadLetterConfig: \").append(getDeadLetterConfig()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getKMSKeyArn() != null)\r\n        sb.append(\"KMSKeyArn: \").append(getKMSKeyArn()).append(\",\");\r\n    if (getTracingConfig() != null)\r\n        sb.append(\"TracingConfig: \").append(getTracingConfig()).append(\",\");\r\n    if (getMasterArn() != null)\r\n        sb.append(\"MasterArn: \").append(getMasterArn()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDiskSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerClient.deleteLicenseConfiguration",
	"Comment": "deletes an existing license configuration. this action fails if the configuration is in use.",
	"Method": "DeleteLicenseConfigurationResult deleteLicenseConfiguration(DeleteLicenseConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLicenseConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteRelationalDatabaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getSkipFinalSnapshot() != null)\r\n        sb.append(\"SkipFinalSnapshot: \").append(getSkipFinalSnapshot()).append(\",\");\r\n    if (getFinalRelationalDatabaseSnapshotName() != null)\r\n        sb.append(\"FinalRelationalDatabaseSnapshotName: \").append(getFinalRelationalDatabaseSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstancePortStatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPortStates() != null)\r\n        sb.append(\"PortStates: \").append(getPortStates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AcceptCertificateTransferRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getSetAsActive() != null)\r\n        sb.append(\"SetAsActive: \").append(getSetAsActive());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonkinesisasync using the current builder configuration.",
	"Method": "AmazonKinesisAsync build(AwsAsyncClientParams params){\r\n    return new AmazonKinesisAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateAuthorizerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerName() != null)\r\n        sb.append(\"AuthorizerName: \").append(getAuthorizerName()).append(\",\");\r\n    if (getAuthorizerFunctionArn() != null)\r\n        sb.append(\"AuthorizerFunctionArn: \").append(getAuthorizerFunctionArn()).append(\",\");\r\n    if (getTokenKeyName() != null)\r\n        sb.append(\"TokenKeyName: \").append(getTokenKeyName()).append(\",\");\r\n    if (getTokenSigningPublicKeys() != null)\r\n        sb.append(\"TokenSigningPublicKeys: \").append(getTokenSigningPublicKeys()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.AWSIoT1ClickProjectsClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsiot1clickprojects using the current builder configuration.",
	"Method": "AWSIoT1ClickProjects build(AwsSyncClientParams params){\r\n    return new AWSIoT1ClickProjectsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.StopDeliveryStreamEncryptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.RedshiftDestinationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getClusterJDBCURL() != null)\r\n        sb.append(\"ClusterJDBCURL: \").append(getClusterJDBCURL()).append(\",\");\r\n    if (getCopyCommand() != null)\r\n        sb.append(\"CopyCommand: \").append(getCopyCommand()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRetryOptions() != null)\r\n        sb.append(\"RetryOptions: \").append(getRetryOptions()).append(\",\");\r\n    if (getS3Update() != null)\r\n        sb.append(\"S3Update: \").append(getS3Update()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3BackupUpdate() != null)\r\n        sb.append(\"S3BackupUpdate: \").append(getS3BackupUpdate()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DescribeProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDocumentSource() != null)\r\n        sb.append(\"DocumentSource: \").append(getDocumentSource()).append(\",\");\r\n    if (getJob() != null)\r\n        sb.append(\"Job: \").append(getJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2Client.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CreateAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetRegistrationCodeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.SourceSchema.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordFormat() != null)\r\n        sb.append(\"RecordFormat: \").append(getRecordFormat()).append(\",\");\r\n    if (getRecordEncoding() != null)\r\n        sb.append(\"RecordEncoding: \").append(getRecordEncoding()).append(\",\");\r\n    if (getRecordColumns() != null)\r\n        sb.append(\"RecordColumns: \").append(getRecordColumns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisStreamsInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListStreamsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getAscendingOrder() != null)\r\n        sb.append(\"AscendingOrder: \").append(getAscendingOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.RecordFormat.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordFormatType() != null)\r\n        sb.append(\"RecordFormatType: \").append(getRecordFormatType()).append(\",\");\r\n    if (getMappingParameters() != null)\r\n        sb.append(\"MappingParameters: \").append(getMappingParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SetDefaultPolicyVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.OutputFormatConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSerializer() != null)\r\n        sb.append(\"Serializer: \").append(getSerializer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.BuiltinIntentMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature()).append(\",\");\r\n    if (getSupportedLocales() != null)\r\n        sb.append(\"SupportedLocales: \").append(getSupportedLocales());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ResourceGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListTopicRulesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRules() != null)\r\n        sb.append(\"Rules: \").append(getRules()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.Device.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListDatasetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetSummaries() != null)\r\n        sb.append(\"DatasetSummaries: \").append(getDatasetSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ConsumedLicenseSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getConsumedLicenses() != null)\r\n        sb.append(\"ConsumedLicenses: \").append(getConsumedLicenses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.UpdateJobExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusDetails() != null)\r\n        sb.append(\"StatusDetails: \").append(getStatusDetails()).append(\",\");\r\n    if (getStepTimeoutInMinutes() != null)\r\n        sb.append(\"StepTimeoutInMinutes: \").append(getStepTimeoutInMinutes()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion()).append(\",\");\r\n    if (getIncludeJobExecutionState() != null)\r\n        sb.append(\"IncludeJobExecutionState: \").append(getIncludeJobExecutionState()).append(\",\");\r\n    if (getIncludeJobDocument() != null)\r\n        sb.append(\"IncludeJobDocument: \").append(getIncludeJobDocument()).append(\",\");\r\n    if (getExecutionNumber() != null)\r\n        sb.append(\"ExecutionNumber: \").append(getExecutionNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.ListPlacementsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.setDefaultAuthorizer",
	"Comment": "sets the default authorizer. this will be used if a websocket connection is made without specifying anauthorizer.",
	"Method": "SetDefaultAuthorizerResult setDefaultAuthorizer(SetDefaultAuthorizerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSetDefaultAuthorizer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.StopApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StreamDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getStreamStatus() != null)\r\n        sb.append(\"StreamStatus: \").append(getStreamStatus()).append(\",\");\r\n    if (getShards() != null)\r\n        sb.append(\"Shards: \").append(getShards()).append(\",\");\r\n    if (getHasMoreShards() != null)\r\n        sb.append(\"HasMoreShards: \").append(getHasMoreShards()).append(\",\");\r\n    if (getRetentionPeriodHours() != null)\r\n        sb.append(\"RetentionPeriodHours: \").append(getRetentionPeriodHours()).append(\",\");\r\n    if (getStreamCreationTimestamp() != null)\r\n        sb.append(\"StreamCreationTimestamp: \").append(getStreamCreationTimestamp()).append(\",\");\r\n    if (getEnhancedMonitoring() != null)\r\n        sb.append(\"EnhancedMonitoring: \").append(getEnhancedMonitoring()).append(\",\");\r\n    if (getEncryptionType() != null)\r\n        sb.append(\"EncryptionType: \").append(getEncryptionType()).append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.StartRelationalDatabaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListScheduledAuditsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.SqlApplicationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputs() != null)\r\n        sb.append(\"Inputs: \").append(getInputs()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs()).append(\",\");\r\n    if (getReferenceDataSources() != null)\r\n        sb.append(\"ReferenceDataSources: \").append(getReferenceDataSources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.AddLayerVersionPermissionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatement() != null)\r\n        sb.append(\"Statement: \").append(getStatement()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.Slot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSlotConstraint() != null)\r\n        sb.append(\"SlotConstraint: \").append(getSlotConstraint()).append(\",\");\r\n    if (getSlotType() != null)\r\n        sb.append(\"SlotType: \").append(getSlotType()).append(\",\");\r\n    if (getSlotTypeVersion() != null)\r\n        sb.append(\"SlotTypeVersion: \").append(getSlotTypeVersion()).append(\",\");\r\n    if (getValueElicitationPrompt() != null)\r\n        sb.append(\"ValueElicitationPrompt: \").append(getValueElicitationPrompt()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getSampleUtterances() != null)\r\n        sb.append(\"SampleUtterances: \").append(getSampleUtterances()).append(\",\");\r\n    if (getResponseCard() != null)\r\n        sb.append(\"ResponseCard: \").append(getResponseCard());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceNames() != null)\r\n        sb.append(\"InstanceNames: \").append(getInstanceNames()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getCustomImageName() != null)\r\n        sb.append(\"CustomImageName: \").append(getCustomImageName()).append(\",\");\r\n    if (getBlueprintId() != null)\r\n        sb.append(\"BlueprintId: \").append(getBlueprintId()).append(\",\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getUserData() != null)\r\n        sb.append(\"UserData: \").append(getUserData()).append(\",\");\r\n    if (getKeyPairName() != null)\r\n        sb.append(\"KeyPairName: \").append(getKeyPairName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputParallelismUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCountUpdate() != null)\r\n        sb.append(\"CountUpdate: \").append(getCountUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RelationalDatabase.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getRelationalDatabaseBlueprintId() != null)\r\n        sb.append(\"RelationalDatabaseBlueprintId: \").append(getRelationalDatabaseBlueprintId()).append(\",\");\r\n    if (getRelationalDatabaseBundleId() != null)\r\n        sb.append(\"RelationalDatabaseBundleId: \").append(getRelationalDatabaseBundleId()).append(\",\");\r\n    if (getMasterDatabaseName() != null)\r\n        sb.append(\"MasterDatabaseName: \").append(getMasterDatabaseName()).append(\",\");\r\n    if (getHardware() != null)\r\n        sb.append(\"Hardware: \").append(getHardware()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getSecondaryAvailabilityZone() != null)\r\n        sb.append(\"SecondaryAvailabilityZone: \").append(getSecondaryAvailabilityZone()).append(\",\");\r\n    if (getBackupRetentionEnabled() != null)\r\n        sb.append(\"BackupRetentionEnabled: \").append(getBackupRetentionEnabled()).append(\",\");\r\n    if (getPendingModifiedValues() != null)\r\n        sb.append(\"PendingModifiedValues: \").append(getPendingModifiedValues()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLatestRestorableTime() != null)\r\n        sb.append(\"LatestRestorableTime: \").append(getLatestRestorableTime()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getParameterApplyStatus() != null)\r\n        sb.append(\"ParameterApplyStatus: \").append(getParameterApplyStatus()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getMasterEndpoint() != null)\r\n        sb.append(\"MasterEndpoint: \").append(getMasterEndpoint()).append(\",\");\r\n    if (getPendingMaintenanceActions() != null)\r\n        sb.append(\"PendingMaintenanceActions: \").append(getPendingMaintenanceActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeviceRegistryEnrichActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getNext() != null)\r\n        sb.append(\"Next: \").append(getNext());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.CreateStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.ListProjectsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjects() != null)\r\n        sb.append(\"Projects: \").append(getProjects()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.KeyMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAWSAccountId() != null)\r\n        sb.append(\"AWSAccountId: \").append(getAWSAccountId()).append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getKeyUsage() != null)\r\n        sb.append(\"KeyUsage: \").append(getKeyUsage()).append(\",\");\r\n    if (getKeyState() != null)\r\n        sb.append(\"KeyState: \").append(getKeyState()).append(\",\");\r\n    if (getDeletionDate() != null)\r\n        sb.append(\"DeletionDate: \").append(getDeletionDate()).append(\",\");\r\n    if (getValidTo() != null)\r\n        sb.append(\"ValidTo: \").append(getValidTo()).append(\",\");\r\n    if (getOrigin() != null)\r\n        sb.append(\"Origin: \").append(getOrigin()).append(\",\");\r\n    if (getCustomKeyStoreId() != null)\r\n        sb.append(\"CustomKeyStoreId: \").append(getCustomKeyStoreId()).append(\",\");\r\n    if (getCloudHsmClusterId() != null)\r\n        sb.append(\"CloudHsmClusterId: \").append(getCloudHsmClusterId()).append(\",\");\r\n    if (getExpirationModel() != null)\r\n        sb.append(\"ExpirationModel: \").append(getExpirationModel()).append(\",\");\r\n    if (getKeyManager() != null)\r\n        sb.append(\"KeyManager: \").append(getKeyManager());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabaseLogStreams",
	"Comment": "returns a list of available log streams for a specific database in amazon lightsail.",
	"Method": "GetRelationalDatabaseLogStreamsResult getRelationalDatabaseLogStreams(GetRelationalDatabaseLogStreamsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabaseLogStreams(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteRoleAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleAlias() != null)\r\n        sb.append(\"RoleAlias: \").append(getRoleAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.AmazonKinesisFirehoseClient.describeDeliveryStream",
	"Comment": "describes the specified delivery stream and gets the status. for example, after your delivery stream is created,call describedeliverystream to see whether the delivery stream is active and thereforeready for data to be sent to it.",
	"Method": "DescribeDeliveryStreamResult describeDeliveryStream(DescribeDeliveryStreamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDeliveryStream(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.StopApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ManagedResourceSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getAssociationCount() != null)\r\n        sb.append(\"AssociationCount: \").append(getAssociationCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListPolicyVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyVersions() != null)\r\n        sb.append(\"PolicyVersions: \").append(getPolicyVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.TimestampRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBeginDate() != null)\r\n        sb.append(\"BeginDate: \").append(getBeginDate()).append(\",\");\r\n    if (getEndDate() != null)\r\n        sb.append(\"EndDate: \").append(getEndDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SecurityProfileTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClient.createChannel",
	"Comment": "creates a channel. a channel collects data from an mqtt topic and archives the raw, unprocessed messages beforepublishing the data to a pipeline.",
	"Method": "CreateChannelResult createChannel(CreateChannelRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateChannel(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.AWSIoTJobsDataPlaneAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeAuditTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskStatus() != null)\r\n        sb.append(\"TaskStatus: \").append(getTaskStatus()).append(\",\");\r\n    if (getTaskType() != null)\r\n        sb.append(\"TaskType: \").append(getTaskType()).append(\",\");\r\n    if (getTaskStartTime() != null)\r\n        sb.append(\"TaskStartTime: \").append(getTaskStartTime()).append(\",\");\r\n    if (getTaskStatistics() != null)\r\n        sb.append(\"TaskStatistics: \").append(getTaskStatistics()).append(\",\");\r\n    if (getScheduledAuditName() != null)\r\n        sb.append(\"ScheduledAuditName: \").append(getScheduledAuditName()).append(\",\");\r\n    if (getAuditDetails() != null)\r\n        sb.append(\"AuditDetails: \").append(getAuditDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CancelKeyDeletionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awslambdaasync using the current builder configuration.",
	"Method": "AWSLambdaAsync build(AwsAsyncClientParams params){\r\n    return new AWSLambdaAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlApplicationConfiguration() != null)\r\n        sb.append(\"SqlApplicationConfiguration: \").append(getSqlApplicationConfiguration()).append(\",\");\r\n    if (getFlinkApplicationConfiguration() != null)\r\n        sb.append(\"FlinkApplicationConfiguration: \").append(getFlinkApplicationConfiguration()).append(\",\");\r\n    if (getEnvironmentProperties() != null)\r\n        sb.append(\"EnvironmentProperties: \").append(getEnvironmentProperties()).append(\",\");\r\n    if (getApplicationCodeConfiguration() != null)\r\n        sb.append(\"ApplicationCodeConfiguration: \").append(getApplicationCodeConfiguration()).append(\",\");\r\n    if (getApplicationSnapshotConfiguration() != null)\r\n        sb.append(\"ApplicationSnapshotConfiguration: \").append(getApplicationSnapshotConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DescribeDatasetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.listTagsForStream",
	"Comment": "lists the tags for the specified kinesis data stream. this operation has a limit of five transactions per secondper account.",
	"Method": "ListTagsForStreamResult listTagsForStream(ListTagsForStreamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTagsForStream(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeletePipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisStreamsInputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate()).append(\",\");\r\n    if (getRoleARNUpdate() != null)\r\n        sb.append(\"RoleARNUpdate: \").append(getRoleARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AlertTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlertTargetArn() != null)\r\n        sb.append(\"AlertTargetArn: \").append(getAlertTargetArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.StartImportResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getMergeStrategy() != null)\r\n        sb.append(\"MergeStrategy: \").append(getMergeStrategy()).append(\",\");\r\n    if (getImportId() != null)\r\n        sb.append(\"ImportId: \").append(getImportId()).append(\",\");\r\n    if (getImportStatus() != null)\r\n        sb.append(\"ImportStatus: \").append(getImportStatus()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.PipelineSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getReprocessingSummaries() != null)\r\n        sb.append(\"ReprocessingSummaries: \").append(getReprocessingSummaries()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdateTime() != null)\r\n        sb.append(\"LastUpdateTime: \").append(getLastUpdateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordBatchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedPutCount() != null)\r\n        sb.append(\"FailedPutCount: \").append(getFailedPutCount()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getRequestResponses() != null)\r\n        sb.append(\"RequestResponses: \").append(getRequestResponses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getLoadBalancer",
	"Comment": "returns information about the specified lightsail load balancer.",
	"Method": "GetLoadBalancerResult getLoadBalancer(GetLoadBalancerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLoadBalancer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlApplicationConfigurationDescription() != null)\r\n        sb.append(\"SqlApplicationConfigurationDescription: \").append(getSqlApplicationConfigurationDescription()).append(\",\");\r\n    if (getApplicationCodeConfigurationDescription() != null)\r\n        sb.append(\"ApplicationCodeConfigurationDescription: \").append(getApplicationCodeConfigurationDescription()).append(\",\");\r\n    if (getRunConfigurationDescription() != null)\r\n        sb.append(\"RunConfigurationDescription: \").append(getRunConfigurationDescription()).append(\",\");\r\n    if (getFlinkApplicationConfigurationDescription() != null)\r\n        sb.append(\"FlinkApplicationConfigurationDescription: \").append(getFlinkApplicationConfigurationDescription()).append(\",\");\r\n    if (getEnvironmentPropertyDescriptions() != null)\r\n        sb.append(\"EnvironmentPropertyDescriptions: \").append(getEnvironmentPropertyDescriptions()).append(\",\");\r\n    if (getApplicationSnapshotConfigurationDescription() != null)\r\n        sb.append(\"ApplicationSnapshotConfigurationDescription: \").append(getApplicationSnapshotConfigurationDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ElasticsearchDestinationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getDomainARN() != null)\r\n        sb.append(\"DomainARN: \").append(getDomainARN()).append(\",\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getTypeName() != null)\r\n        sb.append(\"TypeName: \").append(getTypeName()).append(\",\");\r\n    if (getIndexRotationPeriod() != null)\r\n        sb.append(\"IndexRotationPeriod: \").append(getIndexRotationPeriod()).append(\",\");\r\n    if (getBufferingHints() != null)\r\n        sb.append(\"BufferingHints: \").append(getBufferingHints()).append(\",\");\r\n    if (getRetryOptions() != null)\r\n        sb.append(\"RetryOptions: \").append(getRetryOptions()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3DestinationDescription() != null)\r\n        sb.append(\"S3DestinationDescription: \").append(getS3DestinationDescription()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.FileLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStream() != null)\r\n        sb.append(\"Stream: \").append(getStream()).append(\",\");\r\n    if (getS3Location() != null)\r\n        sb.append(\"S3Location: \").append(getS3Location());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AbstractAmazonKinesisAsync.getShardIteratorAsync",
	"Comment": "simplified method form for invoking the getsharditerator operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync(GetShardIteratorRequest request,java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync,GetShardIteratorRequest request,com.amazonaws.handlers.AsyncHandler<GetShardIteratorRequest, GetShardIteratorResult> asyncHandler,java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync,String streamName,String shardId,String shardIteratorType,java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync,String streamName,String shardId,String shardIteratorType,com.amazonaws.handlers.AsyncHandler<GetShardIteratorRequest, GetShardIteratorResult> asyncHandler,java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync,String streamName,String shardId,String shardIteratorType,String startingSequenceNumber,java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync,String streamName,String shardId,String shardIteratorType,String startingSequenceNumber,com.amazonaws.handlers.AsyncHandler<GetShardIteratorRequest, GetShardIteratorResult> asyncHandler){\r\n    return getShardIteratorAsync(new GetShardIteratorRequest().withStreamName(streamName).withShardId(shardId).withShardIteratorType(shardIteratorType).withStartingSequenceNumber(startingSequenceNumber), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.StartAssessmentRunRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssessmentTemplateArn() != null)\r\n        sb.append(\"AssessmentTemplateArn: \").append(getAssessmentTemplateArn()).append(\",\");\r\n    if (getAssessmentRunName() != null)\r\n        sb.append(\"AssessmentRunName: \").append(getAssessmentRunName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.AWSKafkaAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awskafkaasync using the current builder configuration.",
	"Method": "AWSKafkaAsync build(AwsAsyncClientParams params){\r\n    return new AWSKafkaAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseBlueprintsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.DeleteStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.CreateStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getMediaType() != null)\r\n        sb.append(\"MediaType: \").append(getMediaType()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getDataRetentionInHours() != null)\r\n        sb.append(\"DataRetentionInHours: \").append(getDataRetentionInHours());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteCACertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDiskSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskSnapshot() != null)\r\n        sb.append(\"DiskSnapshot: \").append(getDiskSnapshot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CreateDatasetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions()).append(\",\");\r\n    if (getTriggers() != null)\r\n        sb.append(\"Triggers: \").append(getTriggers()).append(\",\");\r\n    if (getContentDeliveryRules() != null)\r\n        sb.append(\"ContentDeliveryRules: \").append(getContentDeliveryRules()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.Instance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getBlueprintId() != null)\r\n        sb.append(\"BlueprintId: \").append(getBlueprintId()).append(\",\");\r\n    if (getBlueprintName() != null)\r\n        sb.append(\"BlueprintName: \").append(getBlueprintName()).append(\",\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getIsStaticIp() != null)\r\n        sb.append(\"IsStaticIp: \").append(getIsStaticIp()).append(\",\");\r\n    if (getPrivateIpAddress() != null)\r\n        sb.append(\"PrivateIpAddress: \").append(getPrivateIpAddress()).append(\",\");\r\n    if (getPublicIpAddress() != null)\r\n        sb.append(\"PublicIpAddress: \").append(getPublicIpAddress()).append(\",\");\r\n    if (getIpv6Address() != null)\r\n        sb.append(\"Ipv6Address: \").append(getIpv6Address()).append(\",\");\r\n    if (getHardware() != null)\r\n        sb.append(\"Hardware: \").append(getHardware()).append(\",\");\r\n    if (getNetworking() != null)\r\n        sb.append(\"Networking: \").append(getNetworking()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername()).append(\",\");\r\n    if (getSshKeyName() != null)\r\n        sb.append(\"SshKeyName: \").append(getSshKeyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AbstractAWSKMSAsync.retireGrantAsync",
	"Comment": "simplified method form for invoking the retiregrant operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<RetireGrantResult> retireGrantAsync(RetireGrantRequest request,java.util.concurrent.Future<RetireGrantResult> retireGrantAsync,RetireGrantRequest request,com.amazonaws.handlers.AsyncHandler<RetireGrantRequest, RetireGrantResult> asyncHandler,java.util.concurrent.Future<RetireGrantResult> retireGrantAsync,java.util.concurrent.Future<RetireGrantResult> retireGrantAsync,com.amazonaws.handlers.AsyncHandler<RetireGrantRequest, RetireGrantResult> asyncHandler){\r\n    return retireGrantAsync(new RetireGrantRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeAuthorizerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerName() != null)\r\n        sb.append(\"AuthorizerName: \").append(getAuthorizerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatasetEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntryName() != null)\r\n        sb.append(\"EntryName: \").append(getEntryName()).append(\",\");\r\n    if (getDataURI() != null)\r\n        sb.append(\"DataURI: \").append(getDataURI());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeleteChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AllocateStaticIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticIpName() != null)\r\n        sb.append(\"StaticIpName: \").append(getStaticIpName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabasesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabases() != null)\r\n        sb.append(\"RelationalDatabases: \").append(getRelationalDatabases()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.JobExecutionStatusDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetailsMap() != null)\r\n        sb.append(\"DetailsMap: \").append(getDetailsMap());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.UpdateChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.AddPermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getStatementId() != null)\r\n        sb.append(\"StatementId: \").append(getStatementId()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal()).append(\",\");\r\n    if (getSourceArn() != null)\r\n        sb.append(\"SourceArn: \").append(getSourceArn()).append(\",\");\r\n    if (getSourceAccount() != null)\r\n        sb.append(\"SourceAccount: \").append(getSourceAccount()).append(\",\");\r\n    if (getEventSourceToken() != null)\r\n        sb.append(\"EventSourceToken: \").append(getEventSourceToken()).append(\",\");\r\n    if (getQualifier() != null)\r\n        sb.append(\"Qualifier: \").append(getQualifier()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceStateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.BuiltinSlotTypeMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature()).append(\",\");\r\n    if (getSupportedLocales() != null)\r\n        sb.append(\"SupportedLocales: \").append(getSupportedLocales());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.CreateEventSourceMappingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventSourceArn() != null)\r\n        sb.append(\"EventSourceArn: \").append(getEventSourceArn()).append(\",\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getBatchSize() != null)\r\n        sb.append(\"BatchSize: \").append(getBatchSize()).append(\",\");\r\n    if (getStartingPosition() != null)\r\n        sb.append(\"StartingPosition: \").append(getStartingPosition()).append(\",\");\r\n    if (getStartingPositionTimestamp() != null)\r\n        sb.append(\"StartingPositionTimestamp: \").append(getStartingPositionTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DescribeDatastoreResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatastore() != null)\r\n        sb.append(\"Datastore: \").append(getDatastore()).append(\",\");\r\n    if (getStatistics() != null)\r\n        sb.append(\"Statistics: \").append(getStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.BuiltinIntentSlot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ClearDefaultAuthorizerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.AliasListEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAliasName() != null)\r\n        sb.append(\"AliasName: \").append(getAliasName()).append(\",\");\r\n    if (getAliasArn() != null)\r\n        sb.append(\"AliasArn: \").append(getAliasArn()).append(\",\");\r\n    if (getTargetKeyId() != null)\r\n        sb.append(\"TargetKeyId: \").append(getTargetKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateTopicRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetLoadBalancerTlsCertificatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.S3DestinationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getBufferingHints() != null)\r\n        sb.append(\"BufferingHints: \").append(getBufferingHints()).append(\",\");\r\n    if (getCompressionFormat() != null)\r\n        sb.append(\"CompressionFormat: \").append(getCompressionFormat()).append(\",\");\r\n    if (getEncryptionConfiguration() != null)\r\n        sb.append(\"EncryptionConfiguration: \").append(getEncryptionConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UpdateKeyDescriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AbstractAWSLambdaAsync.listEventSourceMappingsAsync",
	"Comment": "simplified method form for invoking the listeventsourcemappings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListEventSourceMappingsResult> listEventSourceMappingsAsync(ListEventSourceMappingsRequest request,java.util.concurrent.Future<ListEventSourceMappingsResult> listEventSourceMappingsAsync,ListEventSourceMappingsRequest request,com.amazonaws.handlers.AsyncHandler<ListEventSourceMappingsRequest, ListEventSourceMappingsResult> asyncHandler,java.util.concurrent.Future<ListEventSourceMappingsResult> listEventSourceMappingsAsync,java.util.concurrent.Future<ListEventSourceMappingsResult> listEventSourceMappingsAsync,com.amazonaws.handlers.AsyncHandler<ListEventSourceMappingsRequest, ListEventSourceMappingsResult> asyncHandler){\r\n    return listEventSourceMappingsAsync(new ListEventSourceMappingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RebootInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeLimitsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.DescribeClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterInfo() != null)\r\n        sb.append(\"ClusterInfo: \").append(getClusterInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoArchivedMediaClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.IsVpcPeeredResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIsPeered() != null)\r\n        sb.append(\"IsPeered: \").append(getIsPeered());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.MonitoringConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationType() != null)\r\n        sb.append(\"ConfigurationType: \").append(getConfigurationType()).append(\",\");\r\n    if (getMetricsLevel() != null)\r\n        sb.append(\"MetricsLevel: \").append(getMetricsLevel()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AbstractAmazonKinesisAsync.deleteStreamAsync",
	"Comment": "simplified method form for invoking the deletestream operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DeleteStreamResult> deleteStreamAsync(DeleteStreamRequest request,java.util.concurrent.Future<DeleteStreamResult> deleteStreamAsync,DeleteStreamRequest request,com.amazonaws.handlers.AsyncHandler<DeleteStreamRequest, DeleteStreamResult> asyncHandler,java.util.concurrent.Future<DeleteStreamResult> deleteStreamAsync,String streamName,java.util.concurrent.Future<DeleteStreamResult> deleteStreamAsync,String streamName,com.amazonaws.handlers.AsyncHandler<DeleteStreamRequest, DeleteStreamResult> asyncHandler){\r\n    return deleteStreamAsync(new DeleteStreamRequest().withStreamName(streamName), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListResourceInventoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceInventoryList() != null)\r\n        sb.append(\"ResourceInventoryList: \").append(getResourceInventoryList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingTypesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingTypes() != null)\r\n        sb.append(\"ThingTypes: \").append(getThingTypes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StreamFile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileId() != null)\r\n        sb.append(\"FileId: \").append(getFileId()).append(\",\");\r\n    if (getS3Location() != null)\r\n        sb.append(\"S3Location: \").append(getS3Location());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CodeContentDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTextContent() != null)\r\n        sb.append(\"TextContent: \").append(getTextContent()).append(\",\");\r\n    if (getCodeMD5() != null)\r\n        sb.append(\"CodeMD5: \").append(getCodeMD5()).append(\",\");\r\n    if (getCodeSize() != null)\r\n        sb.append(\"CodeSize: \").append(getCodeSize()).append(\",\");\r\n    if (getS3ApplicationCodeLocationDescription() != null)\r\n        sb.append(\"S3ApplicationCodeLocationDescription: \").append(getS3ApplicationCodeLocationDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.PublishVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getCodeSha256() != null)\r\n        sb.append(\"CodeSha256: \").append(getCodeSha256()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AttachLoadBalancerTlsCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getCertificateName() != null)\r\n        sb.append(\"CertificateName: \").append(getCertificateName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.RetentionPeriod.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUnlimited() != null)\r\n        sb.append(\"Unlimited: \").append(getUnlimited()).append(\",\");\r\n    if (getNumberOfDays() != null)\r\n        sb.append(\"NumberOfDays: \").append(getNumberOfDays());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.EncryptionInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncryptionAtRest() != null)\r\n        sb.append(\"EncryptionAtRest: \").append(getEncryptionAtRest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.ListClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterInfoList() != null)\r\n        sb.append(\"ClusterInfoList: \").append(getClusterInfoList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.SchemaConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getCatalogId() != null)\r\n        sb.append(\"CatalogId: \").append(getCatalogId()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.BufferingHints.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSizeInMBs() != null)\r\n        sb.append(\"SizeInMBs: \").append(getSizeInMBs()).append(\",\");\r\n    if (getIntervalInSeconds() != null)\r\n        sb.append(\"IntervalInSeconds: \").append(getIntervalInSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.AmazonLexModelBuildingClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonlexmodelbuilding using the current builder configuration.",
	"Method": "AmazonLexModelBuilding build(AwsSyncClientParams params){\r\n    return new AmazonLexModelBuildingClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegisterCACertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaCertificate() != null)\r\n        sb.append(\"CaCertificate: \").append(getCaCertificate()).append(\",\");\r\n    if (getVerificationCertificate() != null)\r\n        sb.append(\"VerificationCertificate: \").append(getVerificationCertificate()).append(\",\");\r\n    if (getSetAsActive() != null)\r\n        sb.append(\"SetAsActive: \").append(getSetAsActive()).append(\",\");\r\n    if (getAllowAutoRegistration() != null)\r\n        sb.append(\"AllowAutoRegistration: \").append(getAllowAutoRegistration()).append(\",\");\r\n    if (getRegistrationConfig() != null)\r\n        sb.append(\"RegistrationConfig: \").append(getRegistrationConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteDynamicThingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetExportSnapshotRecordsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabase",
	"Comment": "returns information about a specific database in amazon lightsail.",
	"Method": "GetRelationalDatabaseResult getRelationalDatabase(GetRelationalDatabaseRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabase(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.RecordFormat.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordFormatType() != null)\r\n        sb.append(\"RecordFormatType: \").append(getRecordFormatType()).append(\",\");\r\n    if (getMappingParameters() != null)\r\n        sb.append(\"MappingParameters: \").append(getMappingParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.listEventSourceMappings",
	"Comment": "lists event source mappings. specify an eventsourcearn to only show event source mappings for asingle event source.",
	"Method": "ListEventSourceMappingsResult listEventSourceMappings(ListEventSourceMappingsRequest request,ListEventSourceMappingsResult listEventSourceMappings){\r\n    return listEventSourceMappings(new ListEventSourceMappingsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeScheduledAuditResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrequency() != null)\r\n        sb.append(\"Frequency: \").append(getFrequency()).append(\",\");\r\n    if (getDayOfMonth() != null)\r\n        sb.append(\"DayOfMonth: \").append(getDayOfMonth()).append(\",\");\r\n    if (getDayOfWeek() != null)\r\n        sb.append(\"DayOfWeek: \").append(getDayOfWeek()).append(\",\");\r\n    if (getTargetCheckNames() != null)\r\n        sb.append(\"TargetCheckNames: \").append(getTargetCheckNames()).append(\",\");\r\n    if (getScheduledAuditName() != null)\r\n        sb.append(\"ScheduledAuditName: \").append(getScheduledAuditName()).append(\",\");\r\n    if (getScheduledAuditArn() != null)\r\n        sb.append(\"ScheduledAuditArn: \").append(getScheduledAuditArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoPutMediaClient.getPort",
	"Comment": "netty needs an explicit port so resolve that from the endpoint provided.",
	"Method": "int getPort(URI endpoint){\r\n    if (endpoint.getPort() != -1) {\r\n        return endpoint.getPort();\r\n    } else if (\"https\".equals(endpoint.getScheme())) {\r\n        return 443;\r\n    } else {\r\n        return 80;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.LambdaOutputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate()).append(\",\");\r\n    if (getRoleARNUpdate() != null)\r\n        sb.append(\"RoleARNUpdate: \").append(getRoleARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.JobExecutionsRolloutConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaximumPerMinute() != null)\r\n        sb.append(\"MaximumPerMinute: \").append(getMaximumPerMinute()).append(\",\");\r\n    if (getExponentialRate() != null)\r\n        sb.append(\"ExponentialRate: \").append(getExponentialRate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RoleAliasDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleAlias() != null)\r\n        sb.append(\"RoleAlias: \").append(getRoleAlias()).append(\",\");\r\n    if (getRoleAliasArn() != null)\r\n        sb.append(\"RoleAliasArn: \").append(getRoleAliasArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getOwner() != null)\r\n        sb.append(\"Owner: \").append(getOwner()).append(\",\");\r\n    if (getCredentialDurationSeconds() != null)\r\n        sb.append(\"CredentialDurationSeconds: \").append(getCredentialDurationSeconds()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.UnsubscribeFromEventRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getEvent() != null)\r\n        sb.append(\"Event: \").append(getEvent()).append(\",\");\r\n    if (getTopicArn() != null)\r\n        sb.append(\"TopicArn: \").append(getTopicArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.UpdateDatasetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions()).append(\",\");\r\n    if (getTriggers() != null)\r\n        sb.append(\"Triggers: \").append(getTriggers()).append(\",\");\r\n    if (getContentDeliveryRules() != null)\r\n        sb.append(\"ContentDeliveryRules: \").append(getContentDeliveryRules()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.PublishRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTopic() != null)\r\n        sb.append(\"Topic: \").append(getTopic()).append(\",\");\r\n    if (getQos() != null)\r\n        sb.append(\"Qos: \").append(getQos()).append(\",\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(getPayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.AmazonKinesisAnalyticsClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonkinesisanalytics using the current builder configuration.",
	"Method": "AmazonKinesisAnalytics build(AwsSyncClientParams params){\r\n    return new AmazonKinesisAnalyticsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CloseInstancePublicPortsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPortInfo() != null)\r\n        sb.append(\"PortInfo: \").append(getPortInfo()).append(\",\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.HiveJsonSerDe.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestampFormats() != null)\r\n        sb.append(\"TimestampFormats: \").append(getTimestampFormats());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.PutLoggingOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Certificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.LoadBalancer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getSupportCode() != null)\r\n        sb.append(\"SupportCode: \").append(getSupportCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getDnsName() != null)\r\n        sb.append(\"DnsName: \").append(getDnsName()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getPublicPorts() != null)\r\n        sb.append(\"PublicPorts: \").append(getPublicPorts()).append(\",\");\r\n    if (getHealthCheckPath() != null)\r\n        sb.append(\"HealthCheckPath: \").append(getHealthCheckPath()).append(\",\");\r\n    if (getInstancePort() != null)\r\n        sb.append(\"InstancePort: \").append(getInstancePort()).append(\",\");\r\n    if (getInstanceHealthSummary() != null)\r\n        sb.append(\"InstanceHealthSummary: \").append(getInstanceHealthSummary()).append(\",\");\r\n    if (getTlsCertificateSummaries() != null)\r\n        sb.append(\"TlsCertificateSummaries: \").append(getTlsCertificateSummaries()).append(\",\");\r\n    if (getConfigurationOptions() != null)\r\n        sb.append(\"ConfigurationOptions: \").append(getConfigurationOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId()).append(\",\");\r\n    if (getNamePrefixUpdate() != null)\r\n        sb.append(\"NamePrefixUpdate: \").append(getNamePrefixUpdate()).append(\",\");\r\n    if (getInputProcessingConfigurationUpdate() != null)\r\n        sb.append(\"InputProcessingConfigurationUpdate: \").append(getInputProcessingConfigurationUpdate()).append(\",\");\r\n    if (getKinesisStreamsInputUpdate() != null)\r\n        sb.append(\"KinesisStreamsInputUpdate: \").append(getKinesisStreamsInputUpdate()).append(\",\");\r\n    if (getKinesisFirehoseInputUpdate() != null)\r\n        sb.append(\"KinesisFirehoseInputUpdate: \").append(getKinesisFirehoseInputUpdate()).append(\",\");\r\n    if (getInputSchemaUpdate() != null)\r\n        sb.append(\"InputSchemaUpdate: \").append(getInputSchemaUpdate()).append(\",\");\r\n    if (getInputParallelismUpdate() != null)\r\n        sb.append(\"InputParallelismUpdate: \").append(getInputParallelismUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisFirehoseOutputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Stream.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId()).append(\",\");\r\n    if (getFileId() != null)\r\n        sb.append(\"FileId: \").append(getFileId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.FunctionCodeLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryType() != null)\r\n        sb.append(\"RepositoryType: \").append(getRepositoryType()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.model.Button.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getText() != null)\r\n        sb.append(\"Text: \").append(getText()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.EnvironmentError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.TracingConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMode() != null)\r\n        sb.append(\"Mode: \").append(getMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.StartImportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(getPayload()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getMergeStrategy() != null)\r\n        sb.append(\"MergeStrategy: \").append(getMergeStrategy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getParentGroup() != null)\r\n        sb.append(\"ParentGroup: \").append(getParentGroup()).append(\",\");\r\n    if (getNamePrefixFilter() != null)\r\n        sb.append(\"NamePrefixFilter: \").append(getNamePrefixFilter()).append(\",\");\r\n    if (getRecursive() != null)\r\n        sb.append(\"Recursive: \").append(getRecursive());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.DescribeDeviceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.AmazonKinesisFirehoseClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonkinesisfirehose using the current builder configuration.",
	"Method": "AmazonKinesisFirehose build(AwsSyncClientParams params){\r\n    return new AmazonKinesisFirehoseClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.OutputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutputId() != null)\r\n        sb.append(\"OutputId: \").append(getOutputId()).append(\",\");\r\n    if (getNameUpdate() != null)\r\n        sb.append(\"NameUpdate: \").append(getNameUpdate()).append(\",\");\r\n    if (getKinesisStreamsOutputUpdate() != null)\r\n        sb.append(\"KinesisStreamsOutputUpdate: \").append(getKinesisStreamsOutputUpdate()).append(\",\");\r\n    if (getKinesisFirehoseOutputUpdate() != null)\r\n        sb.append(\"KinesisFirehoseOutputUpdate: \").append(getKinesisFirehoseOutputUpdate()).append(\",\");\r\n    if (getLambdaOutputUpdate() != null)\r\n        sb.append(\"LambdaOutputUpdate: \").append(getLambdaOutputUpdate()).append(\",\");\r\n    if (getDestinationSchemaUpdate() != null)\r\n        sb.append(\"DestinationSchemaUpdate: \").append(getDestinationSchemaUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.describeAccountAuditConfiguration",
	"Comment": "gets information about the device defender audit settings for this account. settings include how auditnotifications are sent and which audit checks are enabled or disabled.",
	"Method": "DescribeAccountAuditConfigurationResult describeAccountAuditConfiguration(DescribeAccountAuditConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAccountAuditConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ExplicitDeny.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoMediaAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonkinesisvideomediaasync using the current builder configuration.",
	"Method": "AmazonKinesisVideoMediaAsync build(AwsAsyncClientParams params){\r\n    return new AmazonKinesisVideoMediaAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.ProjectDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getUpdatedDate() != null)\r\n        sb.append(\"UpdatedDate: \").append(getUpdatedDate()).append(\",\");\r\n    if (getPlacementTemplate() != null)\r\n        sb.append(\"PlacementTemplate: \").append(getPlacementTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StartSigningJobParameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSigningProfileParameter() != null)\r\n        sb.append(\"SigningProfileParameter: \").append(getSigningProfileParameter()).append(\",\");\r\n    if (getSigningProfileName() != null)\r\n        sb.append(\"SigningProfileName: \").append(getSigningProfileName()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AbstractAWSKMSAsync.listKeysAsync",
	"Comment": "simplified method form for invoking the listkeys operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListKeysResult> listKeysAsync(ListKeysRequest request,java.util.concurrent.Future<ListKeysResult> listKeysAsync,ListKeysRequest request,com.amazonaws.handlers.AsyncHandler<ListKeysRequest, ListKeysResult> asyncHandler,java.util.concurrent.Future<ListKeysResult> listKeysAsync,java.util.concurrent.Future<ListKeysResult> listKeysAsync,com.amazonaws.handlers.AsyncHandler<ListKeysRequest, ListKeysResult> asyncHandler){\r\n    return listKeysAsync(new ListKeysRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RejectCertificateTransferResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateCACertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonlightsail using the current builder configuration.",
	"Method": "AmazonLightsail build(AwsSyncClientParams params){\r\n    return new AmazonLightsailClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CreateDatasetContentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId()).append(\",\");\r\n    if (getNamePrefixUpdate() != null)\r\n        sb.append(\"NamePrefixUpdate: \").append(getNamePrefixUpdate()).append(\",\");\r\n    if (getInputProcessingConfigurationUpdate() != null)\r\n        sb.append(\"InputProcessingConfigurationUpdate: \").append(getInputProcessingConfigurationUpdate()).append(\",\");\r\n    if (getKinesisStreamsInputUpdate() != null)\r\n        sb.append(\"KinesisStreamsInputUpdate: \").append(getKinesisStreamsInputUpdate()).append(\",\");\r\n    if (getKinesisFirehoseInputUpdate() != null)\r\n        sb.append(\"KinesisFirehoseInputUpdate: \").append(getKinesisFirehoseInputUpdate()).append(\",\");\r\n    if (getInputSchemaUpdate() != null)\r\n        sb.append(\"InputSchemaUpdate: \").append(getInputSchemaUpdate()).append(\",\");\r\n    if (getInputParallelismUpdate() != null)\r\n        sb.append(\"InputParallelismUpdate: \").append(getInputParallelismUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.OTAUpdateFile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileName() != null)\r\n        sb.append(\"FileName: \").append(getFileName()).append(\",\");\r\n    if (getFileVersion() != null)\r\n        sb.append(\"FileVersion: \").append(getFileVersion()).append(\",\");\r\n    if (getFileLocation() != null)\r\n        sb.append(\"FileLocation: \").append(getFileLocation()).append(\",\");\r\n    if (getCodeSigning() != null)\r\n        sb.append(\"CodeSigning: \").append(getCodeSigning()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingTypeProperties.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingTypeDescription() != null)\r\n        sb.append(\"ThingTypeDescription: \").append(getThingTypeDescription()).append(\",\");\r\n    if (getSearchableAttributes() != null)\r\n        sb.append(\"SearchableAttributes: \").append(getSearchableAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DeleteProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeDefaultAuthorizerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerDescription() != null)\r\n        sb.append(\"AuthorizerDescription: \").append(getAuthorizerDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RejectCertificateTransferRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getRejectReason() != null)\r\n        sb.append(\"RejectReason: \").append(getRejectReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DeleteApplicationCloudWatchLoggingOptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeBillingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName()).append(\",\");\r\n    if (getBillingGroupId() != null)\r\n        sb.append(\"BillingGroupId: \").append(getBillingGroupId()).append(\",\");\r\n    if (getBillingGroupArn() != null)\r\n        sb.append(\"BillingGroupArn: \").append(getBillingGroupArn()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getBillingGroupProperties() != null)\r\n        sb.append(\"BillingGroupProperties: \").append(getBillingGroupProperties()).append(\",\");\r\n    if (getBillingGroupMetadata() != null)\r\n        sb.append(\"BillingGroupMetadata: \").append(getBillingGroupMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StreamInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId()).append(\",\");\r\n    if (getStreamArn() != null)\r\n        sb.append(\"StreamArn: \").append(getStreamArn()).append(\",\");\r\n    if (getStreamVersion() != null)\r\n        sb.append(\"StreamVersion: \").append(getStreamVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getFiles() != null)\r\n        sb.append(\"Files: \").append(getFiles()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CheckpointConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationType() != null)\r\n        sb.append(\"ConfigurationType: \").append(getConfigurationType()).append(\",\");\r\n    if (getCheckpointingEnabled() != null)\r\n        sb.append(\"CheckpointingEnabled: \").append(getCheckpointingEnabled()).append(\",\");\r\n    if (getCheckpointInterval() != null)\r\n        sb.append(\"CheckpointInterval: \").append(getCheckpointInterval()).append(\",\");\r\n    if (getMinPauseBetweenCheckpoints() != null)\r\n        sb.append(\"MinPauseBetweenCheckpoints: \").append(getMinPauseBetweenCheckpoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.GetDatasetContentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DisassociateDeviceFromPlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.ApplicationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputUpdates() != null)\r\n        sb.append(\"InputUpdates: \").append(getInputUpdates()).append(\",\");\r\n    if (getApplicationCodeUpdate() != null)\r\n        sb.append(\"ApplicationCodeUpdate: \").append(getApplicationCodeUpdate()).append(\",\");\r\n    if (getOutputUpdates() != null)\r\n        sb.append(\"OutputUpdates: \").append(getOutputUpdates()).append(\",\");\r\n    if (getReferenceDataSourceUpdates() != null)\r\n        sb.append(\"ReferenceDataSourceUpdates: \").append(getReferenceDataSourceUpdates()).append(\",\");\r\n    if (getCloudWatchLoggingOptionUpdates() != null)\r\n        sb.append(\"CloudWatchLoggingOptionUpdates: \").append(getCloudWatchLoggingOptionUpdates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingRegistrationTaskReportsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId()).append(\",\");\r\n    if (getReportType() != null)\r\n        sb.append(\"ReportType: \").append(getReportType()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.TimestampRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartTimestamp() != null)\r\n        sb.append(\"StartTimestamp: \").append(getStartTimestamp()).append(\",\");\r\n    if (getEndTimestamp() != null)\r\n        sb.append(\"EndTimestamp: \").append(getEndTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSAsyncClient.listAliasesAsync",
	"Comment": "simplified method form for invoking the listaliases operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListAliasesResult> listAliasesAsync(ListAliasesRequest request,java.util.concurrent.Future<ListAliasesResult> listAliasesAsync,ListAliasesRequest request,com.amazonaws.handlers.AsyncHandler<ListAliasesRequest, ListAliasesResult> asyncHandler,java.util.concurrent.Future<ListAliasesResult> listAliasesAsync,java.util.concurrent.Future<ListAliasesResult> listAliasesAsync,com.amazonaws.handlers.AsyncHandler<ListAliasesRequest, ListAliasesResult> asyncHandler){\r\n    return listAliasesAsync(new ListAliasesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateTopicRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getTopicRulePayload() != null)\r\n        sb.append(\"TopicRulePayload: \").append(getTopicRulePayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeJobExecutionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecution() != null)\r\n        sb.append(\"Execution: \").append(getExecution());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesClient.listDeviceEvents",
	"Comment": "using a device id, returns a deviceeventsresponse object containing an array of events for the device.",
	"Method": "ListDeviceEventsResult listDeviceEvents(ListDeviceEventsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDeviceEvents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UpdateCustomKeyStoreResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListPrincipalThingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.describeLimits",
	"Comment": "describes the shard limits and usage for the account.if you update your account limits, the old limits might be returned for a few minutes.this operation has a limit of one transaction per second per account.",
	"Method": "DescribeLimitsResult describeLimits(DescribeLimitsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeLimits(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.Serializer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParquetSerDe() != null)\r\n        sb.append(\"ParquetSerDe: \").append(getParquetSerDe()).append(\",\");\r\n    if (getOrcSerDe() != null)\r\n        sb.append(\"OrcSerDe: \").append(getOrcSerDe());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.UntagStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetStaticIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticIp() != null)\r\n        sb.append(\"StaticIp: \").append(getStaticIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationStatus() != null)\r\n        sb.append(\"ApplicationStatus: \").append(getApplicationStatus()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId()).append(\",\");\r\n    if (getRuntimeEnvironment() != null)\r\n        sb.append(\"RuntimeEnvironment: \").append(getRuntimeEnvironment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.removeLayerVersionPermission",
	"Comment": "removes a statement from the permissions policy for a layer version. for more information, seeaddlayerversionpermission.",
	"Method": "RemoveLayerVersionPermissionResult removeLayerVersionPermission(RemoveLayerVersionPermissionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveLayerVersionPermission(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingsInThingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThings() != null)\r\n        sb.append(\"Things: \").append(getThings()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetRegistrationCodeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistrationCode() != null)\r\n        sb.append(\"RegistrationCode: \").append(getRegistrationCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.ClusterInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerNodeGroupInfo() != null)\r\n        sb.append(\"BrokerNodeGroupInfo: \").append(getBrokerNodeGroupInfo()).append(\",\");\r\n    if (getClusterArn() != null)\r\n        sb.append(\"ClusterArn: \").append(getClusterArn()).append(\",\");\r\n    if (getClusterName() != null)\r\n        sb.append(\"ClusterName: \").append(getClusterName()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getCurrentBrokerSoftwareInfo() != null)\r\n        sb.append(\"CurrentBrokerSoftwareInfo: \").append(getCurrentBrokerSoftwareInfo()).append(\",\");\r\n    if (getCurrentVersion() != null)\r\n        sb.append(\"CurrentVersion: \").append(getCurrentVersion()).append(\",\");\r\n    if (getEncryptionInfo() != null)\r\n        sb.append(\"EncryptionInfo: \").append(getEncryptionInfo()).append(\",\");\r\n    if (getEnhancedMonitoring() != null)\r\n        sb.append(\"EnhancedMonitoring: \").append(getEnhancedMonitoring()).append(\",\");\r\n    if (getNumberOfBrokerNodes() != null)\r\n        sb.append(\"NumberOfBrokerNodes: \").append(getNumberOfBrokerNodes()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getZookeeperConnectString() != null)\r\n        sb.append(\"ZookeeperConnectString: \").append(getZookeeperConnectString());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisStreamsOutputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeThingRegistrationTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getInputFileBucket() != null)\r\n        sb.append(\"InputFileBucket: \").append(getInputFileBucket()).append(\",\");\r\n    if (getInputFileKey() != null)\r\n        sb.append(\"InputFileKey: \").append(getInputFileKey()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getSuccessCount() != null)\r\n        sb.append(\"SuccessCount: \").append(getSuccessCount()).append(\",\");\r\n    if (getFailureCount() != null)\r\n        sb.append(\"FailureCount: \").append(getFailureCount()).append(\",\");\r\n    if (getPercentageProgress() != null)\r\n        sb.append(\"PercentageProgress: \").append(getPercentageProgress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.AWSIoT1ClickProjectsClient.deletePlacement",
	"Comment": "deletes a placement. to delete a placement, it must not have any devices associated with it.when you delete a placement, all associated data becomes irretrievable.",
	"Method": "DeletePlacementResult deletePlacement(DeletePlacementRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeletePlacement(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.DeleteDeliveryStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetBlueprintsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlueprints() != null)\r\n        sb.append(\"Blueprints: \").append(getBlueprints()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AuthorizerSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerName() != null)\r\n        sb.append(\"AuthorizerName: \").append(getAuthorizerName()).append(\",\");\r\n    if (getAuthorizerArn() != null)\r\n        sb.append(\"AuthorizerArn: \").append(getAuthorizerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DeleteApplicationReferenceDataSourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getDiskSnapshots",
	"Comment": "returns information about all block storage disk snapshots in your aws account and region.if you are describing a long list of disk snapshots, you can paginate the output to make the list moremanageable. you can use the pagetoken and nextpagetoken values to retrieve the next items in the list.",
	"Method": "GetDiskSnapshotsResult getDiskSnapshots(GetDiskSnapshotsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDiskSnapshots(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.UpdateFunctionCodeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getRuntime() != null)\r\n        sb.append(\"Runtime: \").append(getRuntime()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getHandler() != null)\r\n        sb.append(\"Handler: \").append(getHandler()).append(\",\");\r\n    if (getCodeSize() != null)\r\n        sb.append(\"CodeSize: \").append(getCodeSize()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getMemorySize() != null)\r\n        sb.append(\"MemorySize: \").append(getMemorySize()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getCodeSha256() != null)\r\n        sb.append(\"CodeSha256: \").append(getCodeSha256()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getDeadLetterConfig() != null)\r\n        sb.append(\"DeadLetterConfig: \").append(getDeadLetterConfig()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getKMSKeyArn() != null)\r\n        sb.append(\"KMSKeyArn: \").append(getKMSKeyArn()).append(\",\");\r\n    if (getTracingConfig() != null)\r\n        sb.append(\"TracingConfig: \").append(getTracingConfig()).append(\",\");\r\n    if (getMasterArn() != null)\r\n        sb.append(\"MasterArn: \").append(getMasterArn()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetKeyRotationStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getShardLevelMetrics() != null)\r\n        sb.append(\"ShardLevelMetrics: \").append(getShardLevelMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.UntagDeliveryStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListIndicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndexNames() != null)\r\n        sb.append(\"IndexNames: \").append(getIndexNames()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListTargetsForPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.CreateBotVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetFunctionConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getRuntime() != null)\r\n        sb.append(\"Runtime: \").append(getRuntime()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getHandler() != null)\r\n        sb.append(\"Handler: \").append(getHandler()).append(\",\");\r\n    if (getCodeSize() != null)\r\n        sb.append(\"CodeSize: \").append(getCodeSize()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getMemorySize() != null)\r\n        sb.append(\"MemorySize: \").append(getMemorySize()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getCodeSha256() != null)\r\n        sb.append(\"CodeSha256: \").append(getCodeSha256()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getDeadLetterConfig() != null)\r\n        sb.append(\"DeadLetterConfig: \").append(getDeadLetterConfig()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getKMSKeyArn() != null)\r\n        sb.append(\"KMSKeyArn: \").append(getKMSKeyArn()).append(\",\");\r\n    if (getTracingConfig() != null)\r\n        sb.append(\"TracingConfig: \").append(getTracingConfig()).append(\",\");\r\n    if (getMasterArn() != null)\r\n        sb.append(\"MasterArn: \").append(getMasterArn()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UpdateCustomKeyStoreRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomKeyStoreId() != null)\r\n        sb.append(\"CustomKeyStoreId: \").append(getCustomKeyStoreId()).append(\",\");\r\n    if (getNewCustomKeyStoreName() != null)\r\n        sb.append(\"NewCustomKeyStoreName: \").append(getNewCustomKeyStoreName()).append(\",\");\r\n    if (getKeyStorePassword() != null)\r\n        sb.append(\"KeyStorePassword: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getCloudHsmClusterId() != null)\r\n        sb.append(\"CloudHsmClusterId: \").append(getCloudHsmClusterId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SecurityProfileTargetMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileIdentifier() != null)\r\n        sb.append(\"SecurityProfileIdentifier: \").append(getSecurityProfileIdentifier()).append(\",\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.waiters.AmazonKinesisWaiters.streamExists",
	"Comment": "builds a streamexists waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeStreamRequest> streamExists(){\r\n    return new WaiterBuilder<DescribeStreamRequest, DescribeStreamResult>().withSdkFunction(new DescribeStreamFunction(client)).withAcceptors(new StreamExists.IsACTIVEMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(18), new FixedDelayStrategy(10))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.EnableKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.LoadBalancerTlsCertificateDomainValidationOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getValidationStatus() != null)\r\n        sb.append(\"ValidationStatus: \").append(getValidationStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.LoadBalancerTlsCertificateDomainValidationRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getValidationStatus() != null)\r\n        sb.append(\"ValidationStatus: \").append(getValidationStatus()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateKeyPairResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyPair() != null)\r\n        sb.append(\"KeyPair: \").append(getKeyPair()).append(\",\");\r\n    if (getPublicKeyBase64() != null)\r\n        sb.append(\"PublicKeyBase64: \").append(getPublicKeyBase64()).append(\",\");\r\n    if (getPrivateKeyBase64() != null)\r\n        sb.append(\"PrivateKeyBase64: \").append(getPrivateKeyBase64()).append(\",\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.GetDeviceMethodsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.ResourceReference.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.QueryFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeltaTime() != null)\r\n        sb.append(\"DeltaTime: \").append(getDeltaTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.UpdateServiceSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeAccountAuditConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateEventConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.RulesPackage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getProvider() != null)\r\n        sb.append(\"Provider: \").append(getProvider()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.UpdateDatasetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeleteLayerVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerName() != null)\r\n        sb.append(\"LayerName: \").append(getLayerName()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.EncryptionConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNoEncryptionConfig() != null)\r\n        sb.append(\"NoEncryptionConfig: \").append(getNoEncryptionConfig()).append(\",\");\r\n    if (getKMSEncryptionConfig() != null)\r\n        sb.append(\"KMSEncryptionConfig: \").append(getKMSEncryptionConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DetachDiskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskName() != null)\r\n        sb.append(\"DiskName: \").append(getDiskName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListPolicyVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RebootRelationalDatabaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.Fragment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFragmentNumber() != null)\r\n        sb.append(\"FragmentNumber: \").append(getFragmentNumber()).append(\",\");\r\n    if (getFragmentSizeInBytes() != null)\r\n        sb.append(\"FragmentSizeInBytes: \").append(getFragmentSizeInBytes()).append(\",\");\r\n    if (getProducerTimestamp() != null)\r\n        sb.append(\"ProducerTimestamp: \").append(getProducerTimestamp()).append(\",\");\r\n    if (getServerTimestamp() != null)\r\n        sb.append(\"ServerTimestamp: \").append(getServerTimestamp()).append(\",\");\r\n    if (getFragmentLengthInMilliseconds() != null)\r\n        sb.append(\"FragmentLengthInMilliseconds: \").append(getFragmentLengthInMilliseconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.S3DestinationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getBufferingHints() != null)\r\n        sb.append(\"BufferingHints: \").append(getBufferingHints()).append(\",\");\r\n    if (getCompressionFormat() != null)\r\n        sb.append(\"CompressionFormat: \").append(getCompressionFormat()).append(\",\");\r\n    if (getEncryptionConfiguration() != null)\r\n        sb.append(\"EncryptionConfiguration: \").append(getEncryptionConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisAsyncClient.splitShardAsync",
	"Comment": "simplified method form for invoking the splitshard operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<SplitShardResult> splitShardAsync(SplitShardRequest request,java.util.concurrent.Future<SplitShardResult> splitShardAsync,SplitShardRequest request,com.amazonaws.handlers.AsyncHandler<SplitShardRequest, SplitShardResult> asyncHandler,java.util.concurrent.Future<SplitShardResult> splitShardAsync,String streamName,String shardToSplit,String newStartingHashKey,java.util.concurrent.Future<SplitShardResult> splitShardAsync,String streamName,String shardToSplit,String newStartingHashKey,com.amazonaws.handlers.AsyncHandler<SplitShardRequest, SplitShardResult> asyncHandler){\r\n    return splitShardAsync(new SplitShardRequest().withStreamName(streamName).withShardToSplit(shardToSplit).withNewStartingHashKey(newStartingHashKey), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.StartPipelineReprocessingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2Client.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ImplicitDeny.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.AmazonLexRuntimeClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListBillingGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNamePrefixFilter() != null)\r\n        sb.append(\"NamePrefixFilter: \").append(getNamePrefixFilter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoMediaClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonkinesisvideomedia using the current builder configuration.",
	"Method": "AmazonKinesisVideoMedia build(AwsSyncClientParams params){\r\n    return new AmazonKinesisVideoMediaClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AttachStaticIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListTargetsForSecurityProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileTargets() != null)\r\n        sb.append(\"SecurityProfileTargets: \").append(getSecurityProfileTargets()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateSecurityProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getSecurityProfileDescription() != null)\r\n        sb.append(\"SecurityProfileDescription: \").append(getSecurityProfileDescription()).append(\",\");\r\n    if (getBehaviors() != null)\r\n        sb.append(\"Behaviors: \").append(getBehaviors()).append(\",\");\r\n    if (getAlertTargets() != null)\r\n        sb.append(\"AlertTargets: \").append(getAlertTargets()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointType() != null)\r\n        sb.append(\"EndpointType: \").append(getEndpointType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.PutBotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getIntents() != null)\r\n        sb.append(\"Intents: \").append(getIntents()).append(\",\");\r\n    if (getClarificationPrompt() != null)\r\n        sb.append(\"ClarificationPrompt: \").append(getClarificationPrompt()).append(\",\");\r\n    if (getAbortStatement() != null)\r\n        sb.append(\"AbortStatement: \").append(getAbortStatement()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getIdleSessionTTLInSeconds() != null)\r\n        sb.append(\"IdleSessionTTLInSeconds: \").append(getIdleSessionTTLInSeconds()).append(\",\");\r\n    if (getVoiceId() != null)\r\n        sb.append(\"VoiceId: \").append(getVoiceId()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getChildDirected() != null)\r\n        sb.append(\"ChildDirected: \").append(getChildDirected()).append(\",\");\r\n    if (getCreateVersion() != null)\r\n        sb.append(\"CreateVersion: \").append(getCreateVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetDataEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getAPIName() != null)\r\n        sb.append(\"APIName: \").append(getAPIName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.ResourceGroupTag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.UpdateStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AbstractAmazonKinesisAsync.createStreamAsync",
	"Comment": "simplified method form for invoking the createstream operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateStreamResult> createStreamAsync(CreateStreamRequest request,java.util.concurrent.Future<CreateStreamResult> createStreamAsync,CreateStreamRequest request,com.amazonaws.handlers.AsyncHandler<CreateStreamRequest, CreateStreamResult> asyncHandler,java.util.concurrent.Future<CreateStreamResult> createStreamAsync,String streamName,Integer shardCount,java.util.concurrent.Future<CreateStreamResult> createStreamAsync,String streamName,Integer shardCount,com.amazonaws.handlers.AsyncHandler<CreateStreamRequest, CreateStreamResult> asyncHandler){\r\n    return createStreamAsync(new CreateStreamRequest().withStreamName(streamName).withShardCount(shardCount), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AbstractAmazonKinesisAsync.listStreamsAsync",
	"Comment": "simplified method form for invoking the liststreams operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListStreamsResult> listStreamsAsync(ListStreamsRequest request,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,ListStreamsRequest request,com.amazonaws.handlers.AsyncHandler<ListStreamsRequest, ListStreamsResult> asyncHandler,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,com.amazonaws.handlers.AsyncHandler<ListStreamsRequest, ListStreamsResult> asyncHandler,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,String exclusiveStartStreamName,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,String exclusiveStartStreamName,com.amazonaws.handlers.AsyncHandler<ListStreamsRequest, ListStreamsResult> asyncHandler,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,Integer limit,String exclusiveStartStreamName,java.util.concurrent.Future<ListStreamsResult> listStreamsAsync,Integer limit,String exclusiveStartStreamName,com.amazonaws.handlers.AsyncHandler<ListStreamsRequest, ListStreamsResult> asyncHandler){\r\n    return listStreamsAsync(new ListStreamsRequest().withLimit(limit).withExclusiveStartStreamName(exclusiveStartStreamName), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateEventConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventConfigurations() != null)\r\n        sb.append(\"EventConfigurations: \").append(getEventConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.AddApplicationInputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateRoleAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleAlias() != null)\r\n        sb.append(\"RoleAlias: \").append(getRoleAlias()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getCredentialDurationSeconds() != null)\r\n        sb.append(\"CredentialDurationSeconds: \").append(getCredentialDurationSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.EnvironmentPropertyUpdates.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropertyGroups() != null)\r\n        sb.append(\"PropertyGroups: \").append(getPropertyGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.getLayerVersionPolicy",
	"Comment": "returns the permission policy for a layer version. for more information, see addlayerversionpermission.",
	"Method": "GetLayerVersionPolicyResult getLayerVersionPolicy(GetLayerVersionPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLayerVersionPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.AddApplicationInputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListStreamsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getStreamNameCondition() != null)\r\n        sb.append(\"StreamNameCondition: \").append(getStreamNameCondition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteRegistrationCodeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.AWSIoT1ClickProjectsClient.deleteProject",
	"Comment": "deletes a project. to delete a project, it must not have any placements associated with it.when you delete a project, all associated data becomes irretrievable.",
	"Method": "DeleteProjectResult deleteProject(DeleteProjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteProject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AuditCheckDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckRunStatus() != null)\r\n        sb.append(\"CheckRunStatus: \").append(getCheckRunStatus()).append(\",\");\r\n    if (getCheckCompliant() != null)\r\n        sb.append(\"CheckCompliant: \").append(getCheckCompliant()).append(\",\");\r\n    if (getTotalResourcesCount() != null)\r\n        sb.append(\"TotalResourcesCount: \").append(getTotalResourcesCount()).append(\",\");\r\n    if (getNonCompliantResourcesCount() != null)\r\n        sb.append(\"NonCompliantResourcesCount: \").append(getNonCompliantResourcesCount()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBuiltinIntentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIntents() != null)\r\n        sb.append(\"Intents: \").append(getIntents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.PeerVpcResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.S3ReferenceDataSourceUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketARNUpdate() != null)\r\n        sb.append(\"BucketARNUpdate: \").append(getBucketARNUpdate()).append(\",\");\r\n    if (getFileKeyUpdate() != null)\r\n        sb.append(\"FileKeyUpdate: \").append(getFileKeyUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SetLoggingOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggingOptionsPayload() != null)\r\n        sb.append(\"LoggingOptionsPayload: \").append(getLoggingOptionsPayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeltaTime.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOffsetSeconds() != null)\r\n        sb.append(\"OffsetSeconds: \").append(getOffsetSeconds()).append(\",\");\r\n    if (getTimeExpression() != null)\r\n        sb.append(\"TimeExpression: \").append(getTimeExpression());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RelatedResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceIdentifier() != null)\r\n        sb.append(\"ResourceIdentifier: \").append(getResourceIdentifier()).append(\",\");\r\n    if (getAdditionalInfo() != null)\r\n        sb.append(\"AdditionalInfo: \").append(getAdditionalInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AttachStaticIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticIpName() != null)\r\n        sb.append(\"StaticIpName: \").append(getStaticIpName()).append(\",\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationSnapshotConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotsEnabled() != null)\r\n        sb.append(\"SnapshotsEnabled: \").append(getSnapshotsEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteDiskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskName() != null)\r\n        sb.append(\"DiskName: \").append(getDiskName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RelationalDatabaseBundle.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPrice() != null)\r\n        sb.append(\"Price: \").append(getPrice()).append(\",\");\r\n    if (getRamSizeInGb() != null)\r\n        sb.append(\"RamSizeInGb: \").append(getRamSizeInGb()).append(\",\");\r\n    if (getDiskSizeInGb() != null)\r\n        sb.append(\"DiskSizeInGb: \").append(getDiskSizeInGb()).append(\",\");\r\n    if (getTransferPerMonthInGb() != null)\r\n        sb.append(\"TransferPerMonthInGb: \").append(getTransferPerMonthInGb()).append(\",\");\r\n    if (getCpuCount() != null)\r\n        sb.append(\"CpuCount: \").append(getCpuCount()).append(\",\");\r\n    if (getIsEncrypted() != null)\r\n        sb.append(\"IsEncrypted: \").append(getIsEncrypted()).append(\",\");\r\n    if (getIsActive() != null)\r\n        sb.append(\"IsActive: \").append(getIsActive());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2Client.deleteApplicationCloudWatchLoggingOption",
	"Comment": "deletes an amazon cloudwatch log stream from an amazon kinesis data analytics application.",
	"Method": "DeleteApplicationCloudWatchLoggingOptionResult deleteApplicationCloudWatchLoggingOption(DeleteApplicationCloudWatchLoggingOptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteApplicationCloudWatchLoggingOption(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.AmazonKinesisAnalyticsClient.addApplicationCloudWatchLoggingOption",
	"Comment": "adds a cloudwatch log stream to monitor application configuration errors. for more information about usingcloudwatch log streams with amazon kinesis analytics applications, see working with amazon cloudwatchlogs.",
	"Method": "AddApplicationCloudWatchLoggingOptionResult addApplicationCloudWatchLoggingOption(AddApplicationCloudWatchLoggingOptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddApplicationCloudWatchLoggingOption(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.AddApplicationInputProcessingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisFirehoseInputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceSnapshots() != null)\r\n        sb.append(\"InstanceSnapshots: \").append(getInstanceSnapshots()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationCodeConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeContentType() != null)\r\n        sb.append(\"CodeContentType: \").append(getCodeContentType()).append(\",\");\r\n    if (getCodeContentDescription() != null)\r\n        sb.append(\"CodeContentDescription: \").append(getCodeContentDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetFunctionConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getQualifier() != null)\r\n        sb.append(\"Qualifier: \").append(getQualifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.PutFunctionConcurrencyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedConcurrentExecutions() != null)\r\n        sb.append(\"ReservedConcurrentExecutions: \").append(getReservedConcurrentExecutions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.SplitShardRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getShardToSplit() != null)\r\n        sb.append(\"ShardToSplit: \").append(getShardToSplit()).append(\",\");\r\n    if (getNewStartingHashKey() != null)\r\n        sb.append(\"NewStartingHashKey: \").append(getNewStartingHashKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetParametersForImportResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getImportToken() != null)\r\n        sb.append(\"ImportToken: \").append(getImportToken()).append(\",\");\r\n    if (getPublicKey() != null)\r\n        sb.append(\"PublicKey: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getParametersValidTo() != null)\r\n        sb.append(\"ParametersValidTo: \").append(getParametersValidTo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListShardsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getExclusiveStartShardId() != null)\r\n        sb.append(\"ExclusiveStartShardId: \").append(getExclusiveStartShardId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getStreamCreationTimestamp() != null)\r\n        sb.append(\"StreamCreationTimestamp: \").append(getStreamCreationTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.S3ReferenceDataSourceDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getFileKey() != null)\r\n        sb.append(\"FileKey: \").append(getFileKey()).append(\",\");\r\n    if (getReferenceRoleARN() != null)\r\n        sb.append(\"ReferenceRoleARN: \").append(getReferenceRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListFunctionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMasterRegion() != null)\r\n        sb.append(\"MasterRegion: \").append(getMasterRegion()).append(\",\");\r\n    if (getFunctionVersion() != null)\r\n        sb.append(\"FunctionVersion: \").append(getFunctionVersion()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseBundlesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundles() != null)\r\n        sb.append(\"Bundles: \").append(getBundles()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListVersionsByFunctionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getVersions() != null)\r\n        sb.append(\"Versions: \").append(getVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.InstanceNetworking.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMonthlyTransfer() != null)\r\n        sb.append(\"MonthlyTransfer: \").append(getMonthlyTransfer()).append(\",\");\r\n    if (getPorts() != null)\r\n        sb.append(\"Ports: \").append(getPorts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ChannelActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName()).append(\",\");\r\n    if (getNext() != null)\r\n        sb.append(\"Next: \").append(getNext());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.PutRecordRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamName() != null)\r\n        sb.append(\"DeliveryStreamName: \").append(getDeliveryStreamName()).append(\",\");\r\n    if (getRecord() != null)\r\n        sb.append(\"Record: \").append(getRecord());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateThingTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName()).append(\",\");\r\n    if (getThingTypeProperties() != null)\r\n        sb.append(\"ThingTypeProperties: \").append(getThingTypeProperties()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DisableKeyRotationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetLoggingOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.AliasRoutingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdditionalVersionWeights() != null)\r\n        sb.append(\"AdditionalVersionWeights: \").append(getAdditionalVersionWeights());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeleteFunctionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getQualifier() != null)\r\n        sb.append(\"Qualifier: \").append(getQualifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.CreateSlotTypeVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEnumerationValues() != null)\r\n        sb.append(\"EnumerationValues: \").append(getEnumerationValues()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getValueSelectionStrategy() != null)\r\n        sb.append(\"ValueSelectionStrategy: \").append(getValueSelectionStrategy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GrantListEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getGrantId() != null)\r\n        sb.append(\"GrantId: \").append(getGrantId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getGranteePrincipal() != null)\r\n        sb.append(\"GranteePrincipal: \").append(getGranteePrincipal()).append(\",\");\r\n    if (getRetiringPrincipal() != null)\r\n        sb.append(\"RetiringPrincipal: \").append(getRetiringPrincipal()).append(\",\");\r\n    if (getIssuingAccount() != null)\r\n        sb.append(\"IssuingAccount: \").append(getIssuingAccount()).append(\",\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations()).append(\",\");\r\n    if (getConstraints() != null)\r\n        sb.append(\"Constraints: \").append(getConstraints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetMediaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getStartSelector() != null)\r\n        sb.append(\"StartSelector: \").append(getStartSelector());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DescribeApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getIncludeAdditionalDetails() != null)\r\n        sb.append(\"IncludeAdditionalDetails: \").append(getIncludeAdditionalDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateIndexingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateRelationalDatabaseSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.AmazonKinesisAnalyticsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DetachInstancesFromLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getInstanceNames() != null)\r\n        sb.append(\"InstanceNames: \").append(getInstanceNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StopThingRegistrationTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AttachDiskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskName() != null)\r\n        sb.append(\"DiskName: \").append(getDiskName()).append(\",\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName()).append(\",\");\r\n    if (getDiskPath() != null)\r\n        sb.append(\"DiskPath: \").append(getDiskPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getInstancePortStates",
	"Comment": "returns the port states for a specific virtual private server, or instance.",
	"Method": "GetInstancePortStatesResult getInstancePortStates(GetInstancePortStatesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetInstancePortStates(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.IotEventsDestinationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputName() != null)\r\n        sb.append(\"InputName: \").append(getInputName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CertificateValidity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotBefore() != null)\r\n        sb.append(\"NotBefore: \").append(getNotBefore()).append(\",\");\r\n    if (getNotAfter() != null)\r\n        sb.append(\"NotAfter: \").append(getNotAfter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DynamoDBv2Action.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getPutItem() != null)\r\n        sb.append(\"PutItem: \").append(getPutItem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetDataEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataEndpoint() != null)\r\n        sb.append(\"DataEndpoint: \").append(getDataEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.DeleteFunctionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabasesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.GetThingShadowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListV2LoggingLevelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetType() != null)\r\n        sb.append(\"TargetType: \").append(getTargetType()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.EnableKeyRotationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ValidateSecurityProfileBehaviorsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBehaviors() != null)\r\n        sb.append(\"Behaviors: \").append(getBehaviors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.DeleteApplicationReferenceDataSourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getReferenceId() != null)\r\n        sb.append(\"ReferenceId: \").append(getReferenceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DomainEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget()).append(\",\");\r\n    if (getIsAlias() != null)\r\n        sb.append(\"IsAlias: \").append(getIsAlias()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CreatePipelineResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getPipelineArn() != null)\r\n        sb.append(\"PipelineArn: \").append(getPipelineArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListViolationEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getSecurityProfileName() != null)\r\n        sb.append(\"SecurityProfileName: \").append(getSecurityProfileName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SetDefaultAuthorizerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerName() != null)\r\n        sb.append(\"AuthorizerName: \").append(getAuthorizerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AttachThingPrincipalRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListCertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateDynamicThingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.InstanceHealthSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName()).append(\",\");\r\n    if (getInstanceHealth() != null)\r\n        sb.append(\"InstanceHealth: \").append(getInstanceHealth()).append(\",\");\r\n    if (getInstanceHealthReason() != null)\r\n        sb.append(\"InstanceHealthReason: \").append(getInstanceHealthReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.FunctionConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getRuntime() != null)\r\n        sb.append(\"Runtime: \").append(getRuntime()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getHandler() != null)\r\n        sb.append(\"Handler: \").append(getHandler()).append(\",\");\r\n    if (getCodeSize() != null)\r\n        sb.append(\"CodeSize: \").append(getCodeSize()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getMemorySize() != null)\r\n        sb.append(\"MemorySize: \").append(getMemorySize()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getCodeSha256() != null)\r\n        sb.append(\"CodeSha256: \").append(getCodeSha256()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getDeadLetterConfig() != null)\r\n        sb.append(\"DeadLetterConfig: \").append(getDeadLetterConfig()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getKMSKeyArn() != null)\r\n        sb.append(\"KMSKeyArn: \").append(getKMSKeyArn()).append(\",\");\r\n    if (getTracingConfig() != null)\r\n        sb.append(\"TracingConfig: \").append(getTracingConfig()).append(\",\");\r\n    if (getMasterArn() != null)\r\n        sb.append(\"MasterArn: \").append(getMasterArn()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.UntagStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getTagKeyList() != null)\r\n        sb.append(\"TagKeyList: \").append(getTagKeyList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.PutIntentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSlots() != null)\r\n        sb.append(\"Slots: \").append(getSlots()).append(\",\");\r\n    if (getSampleUtterances() != null)\r\n        sb.append(\"SampleUtterances: \").append(getSampleUtterances()).append(\",\");\r\n    if (getConfirmationPrompt() != null)\r\n        sb.append(\"ConfirmationPrompt: \").append(getConfirmationPrompt()).append(\",\");\r\n    if (getRejectionStatement() != null)\r\n        sb.append(\"RejectionStatement: \").append(getRejectionStatement()).append(\",\");\r\n    if (getFollowUpPrompt() != null)\r\n        sb.append(\"FollowUpPrompt: \").append(getFollowUpPrompt()).append(\",\");\r\n    if (getConclusionStatement() != null)\r\n        sb.append(\"ConclusionStatement: \").append(getConclusionStatement()).append(\",\");\r\n    if (getDialogCodeHook() != null)\r\n        sb.append(\"DialogCodeHook: \").append(getDialogCodeHook()).append(\",\");\r\n    if (getFulfillmentActivity() != null)\r\n        sb.append(\"FulfillmentActivity: \").append(getFulfillmentActivity()).append(\",\");\r\n    if (getParentIntentSignature() != null)\r\n        sb.append(\"ParentIntentSignature: \").append(getParentIntentSignature()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum()).append(\",\");\r\n    if (getCreateVersion() != null)\r\n        sb.append(\"CreateVersion: \").append(getCreateVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.KeyPair.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKey() != null)\r\n        sb.append(\"PublicKey: \").append(getPublicKey()).append(\",\");\r\n    if (getPrivateKey() != null)\r\n        sb.append(\"PrivateKey: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SetV2LoggingOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getDefaultLogLevel() != null)\r\n        sb.append(\"DefaultLogLevel: \").append(getDefaultLogLevel()).append(\",\");\r\n    if (getDisableAllLogs() != null)\r\n        sb.append(\"DisableAllLogs: \").append(getDisableAllLogs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.UnclaimDeviceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.LicenseConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationId() != null)\r\n        sb.append(\"LicenseConfigurationId: \").append(getLicenseConfigurationId()).append(\",\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLicenseCountingType() != null)\r\n        sb.append(\"LicenseCountingType: \").append(getLicenseCountingType()).append(\",\");\r\n    if (getLicenseRules() != null)\r\n        sb.append(\"LicenseRules: \").append(getLicenseRules()).append(\",\");\r\n    if (getLicenseCount() != null)\r\n        sb.append(\"LicenseCount: \").append(getLicenseCount()).append(\",\");\r\n    if (getLicenseCountHardLimit() != null)\r\n        sb.append(\"LicenseCountHardLimit: \").append(getLicenseCountHardLimit()).append(\",\");\r\n    if (getConsumedLicenses() != null)\r\n        sb.append(\"ConsumedLicenses: \").append(getConsumedLicenses()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getOwnerAccountId() != null)\r\n        sb.append(\"OwnerAccountId: \").append(getOwnerAccountId()).append(\",\");\r\n    if (getConsumedLicenseSummaryList() != null)\r\n        sb.append(\"ConsumedLicenseSummaryList: \").append(getConsumedLicenseSummaryList()).append(\",\");\r\n    if (getManagedResourceSummaryList() != null)\r\n        sb.append(\"ManagedResourceSummaryList: \").append(getManagedResourceSummaryList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AbstractAWSKMSAsync.createKeyAsync",
	"Comment": "simplified method form for invoking the createkey operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<CreateKeyResult> createKeyAsync(CreateKeyRequest request,java.util.concurrent.Future<CreateKeyResult> createKeyAsync,CreateKeyRequest request,com.amazonaws.handlers.AsyncHandler<CreateKeyRequest, CreateKeyResult> asyncHandler,java.util.concurrent.Future<CreateKeyResult> createKeyAsync,java.util.concurrent.Future<CreateKeyResult> createKeyAsync,com.amazonaws.handlers.AsyncHandler<CreateKeyRequest, CreateKeyResult> asyncHandler){\r\n    return createKeyAsync(new CreateKeyRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CreateApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getApplicationDescription() != null)\r\n        sb.append(\"ApplicationDescription: \").append(getApplicationDescription()).append(\",\");\r\n    if (getRuntimeEnvironment() != null)\r\n        sb.append(\"RuntimeEnvironment: \").append(getRuntimeEnvironment()).append(\",\");\r\n    if (getServiceExecutionRole() != null)\r\n        sb.append(\"ServiceExecutionRole: \").append(getServiceExecutionRole()).append(\",\");\r\n    if (getApplicationConfiguration() != null)\r\n        sb.append(\"ApplicationConfiguration: \").append(getApplicationConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StartOnDemandAuditTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetCheckNames() != null)\r\n        sb.append(\"TargetCheckNames: \").append(getTargetCheckNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListChannelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelSummaries() != null)\r\n        sb.append(\"ChannelSummaries: \").append(getChannelSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.RunConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationRestoreConfigurationDescription() != null)\r\n        sb.append(\"ApplicationRestoreConfigurationDescription: \").append(getApplicationRestoreConfigurationDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.ListPlacementsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacements() != null)\r\n        sb.append(\"Placements: \").append(getPlacements()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteThingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.PendingMaintenanceAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCurrentApplyDate() != null)\r\n        sb.append(\"CurrentApplyDate: \").append(getCurrentApplyDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.AWSKafkaClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.CreateFunctionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getRuntime() != null)\r\n        sb.append(\"Runtime: \").append(getRuntime()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getHandler() != null)\r\n        sb.append(\"Handler: \").append(getHandler()).append(\",\");\r\n    if (getCodeSize() != null)\r\n        sb.append(\"CodeSize: \").append(getCodeSize()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getMemorySize() != null)\r\n        sb.append(\"MemorySize: \").append(getMemorySize()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getCodeSha256() != null)\r\n        sb.append(\"CodeSha256: \").append(getCodeSha256()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getDeadLetterConfig() != null)\r\n        sb.append(\"DeadLetterConfig: \").append(getDeadLetterConfig()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getKMSKeyArn() != null)\r\n        sb.append(\"KMSKeyArn: \").append(getKMSKeyArn()).append(\",\");\r\n    if (getTracingConfig() != null)\r\n        sb.append(\"TracingConfig: \").append(getTracingConfig()).append(\",\");\r\n    if (getMasterArn() != null)\r\n        sb.append(\"MasterArn: \").append(getMasterArn()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.AWSIoT1ClickProjectsClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.Processor.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DescribeApplicationSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.RedshiftDestinationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getClusterJDBCURL() != null)\r\n        sb.append(\"ClusterJDBCURL: \").append(getClusterJDBCURL()).append(\",\");\r\n    if (getCopyCommand() != null)\r\n        sb.append(\"CopyCommand: \").append(getCopyCommand()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRetryOptions() != null)\r\n        sb.append(\"RetryOptions: \").append(getRetryOptions()).append(\",\");\r\n    if (getS3Configuration() != null)\r\n        sb.append(\"S3Configuration: \").append(getS3Configuration()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3BackupConfiguration() != null)\r\n        sb.append(\"S3BackupConfiguration: \").append(getS3BackupConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getDisks",
	"Comment": "returns information about all block storage disks in your aws account and region.if you are describing a long list of disks, you can paginate the output to make the list more manageable. you canuse the pagetoken and nextpagetoken values to retrieve the next items in the list.",
	"Method": "GetDisksResult getDisks(GetDisksRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDisks(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeleteDatasetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputLambdaProcessorUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate()).append(\",\");\r\n    if (getRoleARNUpdate() != null)\r\n        sb.append(\"RoleARNUpdate: \").append(getRoleARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeStreamConsumerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getConsumerName() != null)\r\n        sb.append(\"ConsumerName: \").append(getConsumerName()).append(\",\");\r\n    if (getConsumerARN() != null)\r\n        sb.append(\"ConsumerARN: \").append(getConsumerARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyWithoutPlaintextRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getEncryptionContext() != null)\r\n        sb.append(\"EncryptionContext: \").append(getEncryptionContext()).append(\",\");\r\n    if (getKeySpec() != null)\r\n        sb.append(\"KeySpec: \").append(getKeySpec()).append(\",\");\r\n    if (getNumberOfBytes() != null)\r\n        sb.append(\"NumberOfBytes: \").append(getNumberOfBytes()).append(\",\");\r\n    if (getGrantTokens() != null)\r\n        sb.append(\"GrantTokens: \").append(getGrantTokens());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.PlacementSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getPlacementName() != null)\r\n        sb.append(\"PlacementName: \").append(getPlacementName()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getUpdatedDate() != null)\r\n        sb.append(\"UpdatedDate: \").append(getUpdatedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteTopicRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.Environment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVariables() != null)\r\n        sb.append(\"Variables: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegisterCertificateRequest.isSetAsActive",
	"Comment": "a boolean value that specifies if the ca certificate is set to active.",
	"Method": "Boolean isSetAsActive(){\r\n    return this.setAsActive;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaClient.listVersionsByFunction",
	"Comment": "lists all versions of a function. for information about versioning, see aws lambda function versioning andaliases.",
	"Method": "ListVersionsByFunctionResult listVersionsByFunction(ListVersionsByFunctionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListVersionsByFunction(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.CreatePlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacementName() != null)\r\n        sb.append(\"PlacementName: \").append(getPlacementName()).append(\",\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.EnableEnhancedMonitoringResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getCurrentShardLevelMetrics() != null)\r\n        sb.append(\"CurrentShardLevelMetrics: \").append(getCurrentShardLevelMetrics()).append(\",\");\r\n    if (getDesiredShardLevelMetrics() != null)\r\n        sb.append(\"DesiredShardLevelMetrics: \").append(getDesiredShardLevelMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.ListTagsForStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ElasticsearchBufferingHints.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIntervalInSeconds() != null)\r\n        sb.append(\"IntervalInSeconds: \").append(getIntervalInSeconds()).append(\",\");\r\n    if (getSizeInMBs() != null)\r\n        sb.append(\"SizeInMBs: \").append(getSizeInMBs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DetachInstancesFromLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.BotAliasMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getBotVersion() != null)\r\n        sb.append(\"BotVersion: \").append(getBotVersion()).append(\",\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getChecksum() != null)\r\n        sb.append(\"Checksum: \").append(getChecksum());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CustomCodeSigning.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature()).append(\",\");\r\n    if (getCertificateChain() != null)\r\n        sb.append(\"CertificateChain: \").append(getCertificateChain()).append(\",\");\r\n    if (getHashAlgorithm() != null)\r\n        sb.append(\"HashAlgorithm: \").append(getHashAlgorithm()).append(\",\");\r\n    if (getSignatureAlgorithm() != null)\r\n        sb.append(\"SignatureAlgorithm: \").append(getSignatureAlgorithm());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.StopApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetInstanceMetricDataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getMetricData() != null)\r\n        sb.append(\"MetricData: \").append(getMetricData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseLogStreamsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeThingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteSlotTypeVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.detachStaticIp",
	"Comment": "detaches a static ip from the amazon lightsail instance to which it is attached.",
	"Method": "DetachStaticIpResult detachStaticIp(DetachStaticIpRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDetachStaticIp(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.StartApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getInputConfigurations() != null)\r\n        sb.append(\"InputConfigurations: \").append(getInputConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteUtterancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AbstractAWSKMSAsync.generateRandomAsync",
	"Comment": "simplified method form for invoking the generaterandom operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GenerateRandomResult> generateRandomAsync(GenerateRandomRequest request,java.util.concurrent.Future<GenerateRandomResult> generateRandomAsync,GenerateRandomRequest request,com.amazonaws.handlers.AsyncHandler<GenerateRandomRequest, GenerateRandomResult> asyncHandler,java.util.concurrent.Future<GenerateRandomResult> generateRandomAsync,java.util.concurrent.Future<GenerateRandomResult> generateRandomAsync,com.amazonaws.handlers.AsyncHandler<GenerateRandomRequest, GenerateRandomResult> asyncHandler){\r\n    return generateRandomAsync(new GenerateRandomRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.RebootRelationalDatabaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListPolicyPrincipalsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getAscendingOrder() != null)\r\n        sb.append(\"AscendingOrder: \").append(getAscendingOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.AWSLicenseManagerAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.EnableKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.RemoveLayerVersionPermissionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.testAuthorization",
	"Comment": "tests if a specified principal is authorized to perform an aws iot action on a specified resource. use this totest and debug the authorization behavior of devices that connect to the aws iot device gateway.",
	"Method": "TestAuthorizationResult testAuthorization(TestAuthorizationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTestAuthorization(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteScheduledAuditRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduledAuditName() != null)\r\n        sb.append(\"ScheduledAuditName: \").append(getScheduledAuditName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ProcessorParameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterName() != null)\r\n        sb.append(\"ParameterName: \").append(getParameterName()).append(\",\");\r\n    if (getParameterValue() != null)\r\n        sb.append(\"ParameterValue: \").append(getParameterValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DownloadDefaultKeyPairResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKeyBase64() != null)\r\n        sb.append(\"PublicKeyBase64: \").append(getPublicKeyBase64()).append(\",\");\r\n    if (getPrivateKeyBase64() != null)\r\n        sb.append(\"PrivateKeyBase64: \").append(getPrivateKeyBase64());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ValidateSecurityProfileBehaviorsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValid() != null)\r\n        sb.append(\"Valid: \").append(getValid()).append(\",\");\r\n    if (getValidationErrors() != null)\r\n        sb.append(\"ValidationErrors: \").append(getValidationErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.SampleChannelDataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName()).append(\",\");\r\n    if (getMaxMessages() != null)\r\n        sb.append(\"MaxMessages: \").append(getMaxMessages()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetPolicyVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyVersionId() != null)\r\n        sb.append(\"PolicyVersionId: \").append(getPolicyVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.OutputFileUriValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileName() != null)\r\n        sb.append(\"FileName: \").append(getFileName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListFunctionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getFunctions() != null)\r\n        sb.append(\"Functions: \").append(getFunctions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeStreamConsumerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConsumerDescription() != null)\r\n        sb.append(\"ConsumerDescription: \").append(getConsumerDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CreateApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationDetail() != null)\r\n        sb.append(\"ApplicationDetail: \").append(getApplicationDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetMediaResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(getPayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListUsageForLicenseConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationUsageList() != null)\r\n        sb.append(\"LicenseConfigurationUsageList: \").append(getLicenseConfigurationUsageList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.attachSecurityProfile",
	"Comment": "associates a device defender security profile with a thing group or with this account. each thing group oraccount can have up to five security profiles associated with it.",
	"Method": "AttachSecurityProfileResult attachSecurityProfile(AttachSecurityProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAttachSecurityProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.testInvokeAuthorizer",
	"Comment": "tests a custom authorization behavior by invoking a specified custom authorizer. use this to test and debug thecustom authorization behavior of devices that connect to the aws iot device gateway.",
	"Method": "TestInvokeAuthorizerResult testInvokeAuthorizer(TestInvokeAuthorizerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTestInvokeAuthorizer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisFirehoseOutputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.AmazonKinesisAnalyticsV2AsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.CreateAliasRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFunctionVersion() != null)\r\n        sb.append(\"FunctionVersion: \").append(getFunctionVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRoutingConfig() != null)\r\n        sb.append(\"RoutingConfig: \").append(getRoutingConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRegions",
	"Comment": "returns a list of all valid regions for amazon lightsail. use the include availability zonesparameter to also return the availability zones in a region.",
	"Method": "GetRegionsResult getRegions(GetRegionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRegions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.getRegistrationCode",
	"Comment": "gets a registration code used to register a ca certificate with aws iot.",
	"Method": "GetRegistrationCodeResult getRegistrationCode(GetRegistrationCodeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRegistrationCode(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisFirehoseOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getExportSnapshotRecords",
	"Comment": "returns the export snapshot record created as a result of the export snapshot operation.an export snapshot record can be used to create a new amazon ec2 instance and its related resources with thecreate cloud formation stack operation.",
	"Method": "GetExportSnapshotRecordsResult getExportSnapshotRecords(GetExportSnapshotRecordsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetExportSnapshotRecords(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationCloudWatchLoggingOptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId()).append(\",\");\r\n    if (getCloudWatchLoggingOptionDescriptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptionDescriptions: \").append(getCloudWatchLoggingOptionDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.JobExecutionSummaryForJob.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn()).append(\",\");\r\n    if (getJobExecutionSummary() != null)\r\n        sb.append(\"JobExecutionSummary: \").append(getJobExecutionSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatastoreStatistics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.detachSecurityProfile",
	"Comment": "disassociates a device defender security profile from a thing group or from this account.",
	"Method": "DetachSecurityProfileResult detachSecurityProfile(DetachSecurityProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDetachSecurityProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TaskStatistics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTotalChecks() != null)\r\n        sb.append(\"TotalChecks: \").append(getTotalChecks()).append(\",\");\r\n    if (getInProgressChecks() != null)\r\n        sb.append(\"InProgressChecks: \").append(getInProgressChecks()).append(\",\");\r\n    if (getWaitingForDataCollectionChecks() != null)\r\n        sb.append(\"WaitingForDataCollectionChecks: \").append(getWaitingForDataCollectionChecks()).append(\",\");\r\n    if (getCompliantChecks() != null)\r\n        sb.append(\"CompliantChecks: \").append(getCompliantChecks()).append(\",\");\r\n    if (getNonCompliantChecks() != null)\r\n        sb.append(\"NonCompliantChecks: \").append(getNonCompliantChecks()).append(\",\");\r\n    if (getFailedChecks() != null)\r\n        sb.append(\"FailedChecks: \").append(getFailedChecks()).append(\",\");\r\n    if (getCanceledChecks() != null)\r\n        sb.append(\"CanceledChecks: \").append(getCanceledChecks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.MetricValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getCidrs() != null)\r\n        sb.append(\"Cidrs: \").append(getCidrs()).append(\",\");\r\n    if (getPorts() != null)\r\n        sb.append(\"Ports: \").append(getPorts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.UpdateLicenseSpecificationsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListCertificatesByCAResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.registerCACertificate",
	"Comment": "registers a ca certificate with aws iot. this ca certificate can then be used to sign device certificates, whichcan be then registered with aws iot. you can register up to 10 ca certificates per aws account that have the samesubject field. this enables you to have up to 10 certificate authorities sign your device certificates. if youhave more than one ca certificate registered, make sure you pass the ca certificate when you register your devicecertificates with the registercertificate api.",
	"Method": "RegisterCACertificateResult registerCACertificate(RegisterCACertificateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRegisterCACertificate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AbstractAmazonKinesisAsync.describeStreamAsync",
	"Comment": "simplified method form for invoking the describestream operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync(DescribeStreamRequest request,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,DescribeStreamRequest request,com.amazonaws.handlers.AsyncHandler<DescribeStreamRequest, DescribeStreamResult> asyncHandler,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,com.amazonaws.handlers.AsyncHandler<DescribeStreamRequest, DescribeStreamResult> asyncHandler,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,String exclusiveStartShardId,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,String exclusiveStartShardId,com.amazonaws.handlers.AsyncHandler<DescribeStreamRequest, DescribeStreamResult> asyncHandler,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,Integer limit,String exclusiveStartShardId,java.util.concurrent.Future<DescribeStreamResult> describeStreamAsync,String streamName,Integer limit,String exclusiveStartShardId,com.amazonaws.handlers.AsyncHandler<DescribeStreamRequest, DescribeStreamResult> asyncHandler){\r\n    return describeStreamAsync(new DescribeStreamRequest().withStreamName(streamName).withLimit(limit).withExclusiveStartShardId(exclusiveStartShardId), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetActiveNamesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getTargetSelection() != null)\r\n        sb.append(\"TargetSelection: \").append(getTargetSelection()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getThingGroupId() != null)\r\n        sb.append(\"ThingGroupId: \").append(getThingGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.JobExecution.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusDetails() != null)\r\n        sb.append(\"StatusDetails: \").append(getStatusDetails()).append(\",\");\r\n    if (getQueuedAt() != null)\r\n        sb.append(\"QueuedAt: \").append(getQueuedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getApproximateSecondsBeforeTimedOut() != null)\r\n        sb.append(\"ApproximateSecondsBeforeTimedOut: \").append(getApproximateSecondsBeforeTimedOut()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber()).append(\",\");\r\n    if (getExecutionNumber() != null)\r\n        sb.append(\"ExecutionNumber: \").append(getExecutionNumber()).append(\",\");\r\n    if (getJobDocument() != null)\r\n        sb.append(\"JobDocument: \").append(getJobDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ReferenceDataSourceDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReferenceId() != null)\r\n        sb.append(\"ReferenceId: \").append(getReferenceId()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getS3ReferenceDataSourceDescription() != null)\r\n        sb.append(\"S3ReferenceDataSourceDescription: \").append(getS3ReferenceDataSourceDescription()).append(\",\");\r\n    if (getReferenceSchema() != null)\r\n        sb.append(\"ReferenceSchema: \").append(getReferenceSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DetachStaticIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListGrantsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGrants() != null)\r\n        sb.append(\"Grants: \").append(getGrants()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getTruncated() != null)\r\n        sb.append(\"Truncated: \").append(getTruncated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.Statement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessages() != null)\r\n        sb.append(\"Messages: \").append(getMessages()).append(\",\");\r\n    if (getResponseCard() != null)\r\n        sb.append(\"ResponseCard: \").append(getResponseCard());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TopicRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRuleName() != null)\r\n        sb.append(\"RuleName: \").append(getRuleName()).append(\",\");\r\n    if (getSql() != null)\r\n        sb.append(\"Sql: \").append(getSql()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getActions() != null)\r\n        sb.append(\"Actions: \").append(getActions()).append(\",\");\r\n    if (getRuleDisabled() != null)\r\n        sb.append(\"RuleDisabled: \").append(getRuleDisabled()).append(\",\");\r\n    if (getAwsIotSqlVersion() != null)\r\n        sb.append(\"AwsIotSqlVersion: \").append(getAwsIotSqlVersion()).append(\",\");\r\n    if (getErrorAction() != null)\r\n        sb.append(\"ErrorAction: \").append(getErrorAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsiot1clickdevices using the current builder configuration.",
	"Method": "AWSIoT1ClickDevices build(AwsSyncClientParams params){\r\n    return new AWSIoT1ClickDevicesClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.KinesisFirehoseInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.GetJobDocumentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDocument() != null)\r\n        sb.append(\"Document: \").append(getDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoArchivedMediaClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListKeysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.StorageInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEbsStorageInfo() != null)\r\n        sb.append(\"EbsStorageInfo: \").append(getEbsStorageInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.DeleteApplicationInputProcessingConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.EnumerationValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getSynonyms() != null)\r\n        sb.append(\"Synonyms: \").append(getSynonyms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.JobSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobArn() != null)\r\n        sb.append(\"JobArn: \").append(getJobArn()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getThingGroupId() != null)\r\n        sb.append(\"ThingGroupId: \").append(getThingGroupId()).append(\",\");\r\n    if (getTargetSelection() != null)\r\n        sb.append(\"TargetSelection: \").append(getTargetSelection()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getCompletedAt() != null)\r\n        sb.append(\"CompletedAt: \").append(getCompletedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.AddApplicationOutputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(getOutput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteDomainEntryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.StreamSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId()).append(\",\");\r\n    if (getStreamArn() != null)\r\n        sb.append(\"StreamArn: \").append(getStreamArn()).append(\",\");\r\n    if (getStreamVersion() != null)\r\n        sb.append(\"StreamVersion: \").append(getStreamVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteV2LoggingLevelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetType() != null)\r\n        sb.append(\"TargetType: \").append(getTargetType()).append(\",\");\r\n    if (getTargetName() != null)\r\n        sb.append(\"TargetName: \").append(getTargetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateThingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName()).append(\",\");\r\n    if (getAttributePayload() != null)\r\n        sb.append(\"AttributePayload: \").append(getAttributePayload()).append(\",\");\r\n    if (getExpectedVersion() != null)\r\n        sb.append(\"ExpectedVersion: \").append(getExpectedVersion()).append(\",\");\r\n    if (getRemoveThingType() != null)\r\n        sb.append(\"RemoveThingType: \").append(getRemoveThingType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.updateAccountAuditConfiguration",
	"Comment": "configures or reconfigures the device defender audit settings for this account. settings include how auditnotifications are sent and which audit checks are enabled or disabled.",
	"Method": "UpdateAccountAuditConfigurationResult updateAccountAuditConfiguration(UpdateAccountAuditConfigurationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateAccountAuditConfiguration(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListDatastoresRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.JobExecutionState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusDetails() != null)\r\n        sb.append(\"StatusDetails: \").append(getStatusDetails()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.RemovePermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getStatementId() != null)\r\n        sb.append(\"StatementId: \").append(getStatementId()).append(\",\");\r\n    if (getQualifier() != null)\r\n        sb.append(\"Qualifier: \").append(getQualifier()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatasetContentDeliveryDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIotEventsDestinationConfiguration() != null)\r\n        sb.append(\"IotEventsDestinationConfiguration: \").append(getIotEventsDestinationConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListScheduledAuditsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduledAudits() != null)\r\n        sb.append(\"ScheduledAudits: \").append(getScheduledAudits()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.RegisterStreamConsumerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getConsumerName() != null)\r\n        sb.append(\"ConsumerName: \").append(getConsumerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListShardsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShards() != null)\r\n        sb.append(\"Shards: \").append(getShards()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GenerateDataKeyWithoutPlaintextResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCiphertextBlob() != null)\r\n        sb.append(\"CiphertextBlob: \").append(getCiphertextBlob()).append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getOperation",
	"Comment": "returns information about a specific operation. operations include events such as when you create an instance,allocate a static ip, attach a static ip, and so on.",
	"Method": "GetOperationResult getOperation(GetOperationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetOperation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetKeyPairsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyPairs() != null)\r\n        sb.append(\"KeyPairs: \").append(getKeyPairs()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.AWSLambdaAsyncClient.listEventSourceMappingsAsync",
	"Comment": "simplified method form for invoking the listeventsourcemappings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListEventSourceMappingsResult> listEventSourceMappingsAsync(ListEventSourceMappingsRequest request,java.util.concurrent.Future<ListEventSourceMappingsResult> listEventSourceMappingsAsync,ListEventSourceMappingsRequest request,com.amazonaws.handlers.AsyncHandler<ListEventSourceMappingsRequest, ListEventSourceMappingsResult> asyncHandler,java.util.concurrent.Future<ListEventSourceMappingsResult> listEventSourceMappingsAsync,java.util.concurrent.Future<ListEventSourceMappingsResult> listEventSourceMappingsAsync,com.amazonaws.handlers.AsyncHandler<ListEventSourceMappingsRequest, ListEventSourceMappingsResult> asyncHandler){\r\n    return listEventSourceMappingsAsync(new ListEventSourceMappingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.updateScheduledAudit",
	"Comment": "updates a scheduled audit, including what checks are performed and how often the audit takes place.",
	"Method": "UpdateScheduledAuditResult updateScheduledAudit(UpdateScheduledAuditRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateScheduledAudit(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.InputStartingPositionConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputStartingPosition() != null)\r\n        sb.append(\"InputStartingPosition: \").append(getInputStartingPosition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SetV2LoggingOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeStreamSummaryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamDescriptionSummary() != null)\r\n        sb.append(\"StreamDescriptionSummary: \").append(getStreamDescriptionSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.ListTagsForStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getExclusiveStartTagKey() != null)\r\n        sb.append(\"ExclusiveStartTagKey: \").append(getExclusiveStartTagKey()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DescribeCustomKeyStoresResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomKeyStores() != null)\r\n        sb.append(\"CustomKeyStores: \").append(getCustomKeyStores()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getTruncated() != null)\r\n        sb.append(\"Truncated: \").append(getTruncated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.ListNodesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterArn() != null)\r\n        sb.append(\"ClusterArn: \").append(getClusterArn()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateDiskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskName() != null)\r\n        sb.append(\"DiskName: \").append(getDiskName()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getSizeInGb() != null)\r\n        sb.append(\"SizeInGb: \").append(getSizeInGb()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AuditTaskMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId()).append(\",\");\r\n    if (getTaskStatus() != null)\r\n        sb.append(\"TaskStatus: \").append(getTaskStatus()).append(\",\");\r\n    if (getTaskType() != null)\r\n        sb.append(\"TaskType: \").append(getTaskType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DeleteAliasResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingGroupsForThingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.GetServiceSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3BucketArn() != null)\r\n        sb.append(\"S3BucketArn: \").append(getS3BucketArn()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getOrganizationConfiguration() != null)\r\n        sb.append(\"OrganizationConfiguration: \").append(getOrganizationConfiguration()).append(\",\");\r\n    if (getEnableCrossAccountsDiscovery() != null)\r\n        sb.append(\"EnableCrossAccountsDiscovery: \").append(getEnableCrossAccountsDiscovery());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.AddApplicationCloudWatchLoggingOptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.SplunkDestinationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHECEndpoint() != null)\r\n        sb.append(\"HECEndpoint: \").append(getHECEndpoint()).append(\",\");\r\n    if (getHECEndpointType() != null)\r\n        sb.append(\"HECEndpointType: \").append(getHECEndpointType()).append(\",\");\r\n    if (getHECToken() != null)\r\n        sb.append(\"HECToken: \").append(getHECToken()).append(\",\");\r\n    if (getHECAcknowledgmentTimeoutInSeconds() != null)\r\n        sb.append(\"HECAcknowledgmentTimeoutInSeconds: \").append(getHECAcknowledgmentTimeoutInSeconds()).append(\",\");\r\n    if (getRetryOptions() != null)\r\n        sb.append(\"RetryOptions: \").append(getRetryOptions()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3Update() != null)\r\n        sb.append(\"S3Update: \").append(getS3Update()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.AddApplicationReferenceDataSourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationName() != null)\r\n        sb.append(\"ApplicationName: \").append(getApplicationName()).append(\",\");\r\n    if (getCurrentApplicationVersionId() != null)\r\n        sb.append(\"CurrentApplicationVersionId: \").append(getCurrentApplicationVersionId()).append(\",\");\r\n    if (getReferenceDataSource() != null)\r\n        sb.append(\"ReferenceDataSource: \").append(getReferenceDataSource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListAliasesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getFunctionVersion() != null)\r\n        sb.append(\"FunctionVersion: \").append(getFunctionVersion()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteBotChannelAssociationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getBotAlias() != null)\r\n        sb.append(\"BotAlias: \").append(getBotAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListIndicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.Layer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCodeSize() != null)\r\n        sb.append(\"CodeSize: \").append(getCodeSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabaseBundles",
	"Comment": "returns the list of bundles that are available in amazon lightsail. a bundle describes the performancespecifications for a database.you can use a bundle id to create a new database with explicit performance specifications.",
	"Method": "GetRelationalDatabaseBundlesResult getRelationalDatabaseBundles(GetRelationalDatabaseBundlesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabaseBundles(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.UpdatePipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName()).append(\",\");\r\n    if (getPipelineActivities() != null)\r\n        sb.append(\"PipelineActivities: \").append(getPipelineActivities());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.JobExecution.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getForceCanceled() != null)\r\n        sb.append(\"ForceCanceled: \").append(getForceCanceled()).append(\",\");\r\n    if (getStatusDetails() != null)\r\n        sb.append(\"StatusDetails: \").append(getStatusDetails()).append(\",\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn()).append(\",\");\r\n    if (getQueuedAt() != null)\r\n        sb.append(\"QueuedAt: \").append(getQueuedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getExecutionNumber() != null)\r\n        sb.append(\"ExecutionNumber: \").append(getExecutionNumber()).append(\",\");\r\n    if (getVersionNumber() != null)\r\n        sb.append(\"VersionNumber: \").append(getVersionNumber()).append(\",\");\r\n    if (getApproximateSecondsBeforeTimedOut() != null)\r\n        sb.append(\"ApproximateSecondsBeforeTimedOut: \").append(getApproximateSecondsBeforeTimedOut());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetLayerVersionPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.UpdateFunctionConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionName() != null)\r\n        sb.append(\"FunctionName: \").append(getFunctionName()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getRuntime() != null)\r\n        sb.append(\"Runtime: \").append(getRuntime()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getHandler() != null)\r\n        sb.append(\"Handler: \").append(getHandler()).append(\",\");\r\n    if (getCodeSize() != null)\r\n        sb.append(\"CodeSize: \").append(getCodeSize()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTimeout() != null)\r\n        sb.append(\"Timeout: \").append(getTimeout()).append(\",\");\r\n    if (getMemorySize() != null)\r\n        sb.append(\"MemorySize: \").append(getMemorySize()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getCodeSha256() != null)\r\n        sb.append(\"CodeSha256: \").append(getCodeSha256()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getDeadLetterConfig() != null)\r\n        sb.append(\"DeadLetterConfig: \").append(getDeadLetterConfig()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getKMSKeyArn() != null)\r\n        sb.append(\"KMSKeyArn: \").append(getKMSKeyArn()).append(\",\");\r\n    if (getTracingConfig() != null)\r\n        sb.append(\"TracingConfig: \").append(getTracingConfig()).append(\",\");\r\n    if (getMasterArn() != null)\r\n        sb.append(\"MasterArn: \").append(getMasterArn()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClient.getThingShadow",
	"Comment": "gets the thing shadow for the specified thing.for more information, see getthingshadow in theaws iot developer guide.",
	"Method": "GetThingShadowResult getThingShadow(GetThingShadowRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetThingShadow(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DetachThingPrincipalRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteInstanceSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.LicenseSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseMetricDataRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getPeriod() != null)\r\n        sb.append(\"Period: \").append(getPeriod()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getUnit() != null)\r\n        sb.append(\"Unit: \").append(getUnit()).append(\",\");\r\n    if (getStatistics() != null)\r\n        sb.append(\"Statistics: \").append(getStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.GetLicenseConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLicenseConfigurationId() != null)\r\n        sb.append(\"LicenseConfigurationId: \").append(getLicenseConfigurationId()).append(\",\");\r\n    if (getLicenseConfigurationArn() != null)\r\n        sb.append(\"LicenseConfigurationArn: \").append(getLicenseConfigurationArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLicenseCountingType() != null)\r\n        sb.append(\"LicenseCountingType: \").append(getLicenseCountingType()).append(\",\");\r\n    if (getLicenseRules() != null)\r\n        sb.append(\"LicenseRules: \").append(getLicenseRules()).append(\",\");\r\n    if (getLicenseCount() != null)\r\n        sb.append(\"LicenseCount: \").append(getLicenseCount()).append(\",\");\r\n    if (getLicenseCountHardLimit() != null)\r\n        sb.append(\"LicenseCountHardLimit: \").append(getLicenseCountHardLimit()).append(\",\");\r\n    if (getConsumedLicenses() != null)\r\n        sb.append(\"ConsumedLicenses: \").append(getConsumedLicenses()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getOwnerAccountId() != null)\r\n        sb.append(\"OwnerAccountId: \").append(getOwnerAccountId()).append(\",\");\r\n    if (getConsumedLicenseSummaryList() != null)\r\n        sb.append(\"ConsumedLicenseSummaryList: \").append(getConsumedLicenseSummaryList()).append(\",\");\r\n    if (getManagedResourceSummaryList() != null)\r\n        sb.append(\"ManagedResourceSummaryList: \").append(getManagedResourceSummaryList()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.AddApplicationOutputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId()).append(\",\");\r\n    if (getOutputDescriptions() != null)\r\n        sb.append(\"OutputDescriptions: \").append(getOutputDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.JobProcessDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProcessingTargets() != null)\r\n        sb.append(\"ProcessingTargets: \").append(getProcessingTargets()).append(\",\");\r\n    if (getNumberOfCanceledThings() != null)\r\n        sb.append(\"NumberOfCanceledThings: \").append(getNumberOfCanceledThings()).append(\",\");\r\n    if (getNumberOfSucceededThings() != null)\r\n        sb.append(\"NumberOfSucceededThings: \").append(getNumberOfSucceededThings()).append(\",\");\r\n    if (getNumberOfFailedThings() != null)\r\n        sb.append(\"NumberOfFailedThings: \").append(getNumberOfFailedThings()).append(\",\");\r\n    if (getNumberOfRejectedThings() != null)\r\n        sb.append(\"NumberOfRejectedThings: \").append(getNumberOfRejectedThings()).append(\",\");\r\n    if (getNumberOfQueuedThings() != null)\r\n        sb.append(\"NumberOfQueuedThings: \").append(getNumberOfQueuedThings()).append(\",\");\r\n    if (getNumberOfInProgressThings() != null)\r\n        sb.append(\"NumberOfInProgressThings: \").append(getNumberOfInProgressThings()).append(\",\");\r\n    if (getNumberOfRemovedThings() != null)\r\n        sb.append(\"NumberOfRemovedThings: \").append(getNumberOfRemovedThings()).append(\",\");\r\n    if (getNumberOfTimedOutThings() != null)\r\n        sb.append(\"NumberOfTimedOutThings: \").append(getNumberOfTimedOutThings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRegionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIncludeAvailabilityZones() != null)\r\n        sb.append(\"IncludeAvailabilityZones: \").append(getIncludeAvailabilityZones()).append(\",\");\r\n    if (getIncludeRelationalDatabaseAvailabilityZones() != null)\r\n        sb.append(\"IncludeRelationalDatabaseAvailabilityZones: \").append(getIncludeRelationalDatabaseAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.RetireGrantRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGrantToken() != null)\r\n        sb.append(\"GrantToken: \").append(getGrantToken()).append(\",\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getGrantId() != null)\r\n        sb.append(\"GrantId: \").append(getGrantId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.LoggingOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getLevel() != null)\r\n        sb.append(\"Level: \").append(getLevel()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DisassociateDeviceFromPlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getPlacementName() != null)\r\n        sb.append(\"PlacementName: \").append(getPlacementName()).append(\",\");\r\n    if (getDeviceTemplateName() != null)\r\n        sb.append(\"DeviceTemplateName: \").append(getDeviceTemplateName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.AmazonKinesisFirehoseClient.listDeliveryStreams",
	"Comment": "lists your delivery streams in alphabetical order of their names.the number of delivery streams might be too large to return using a single call tolistdeliverystreams. you can limit the number of delivery streams returned, using the limitparameter. to determine whether there are more delivery streams to list, check the value ofhasmoredeliverystreams in the output. if there are more delivery streams to list, you can requestthem by calling this operation again and setting the exclusivestartdeliverystreamname parameter tothe name of the last delivery stream returned in the last call.",
	"Method": "ListDeliveryStreamsResult listDeliveryStreams(ListDeliveryStreamsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDeliveryStreams(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.ListDeviceEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.updateStream",
	"Comment": "updates an existing stream. the stream version will be incremented by one.",
	"Method": "UpdateStreamResult updateStream(UpdateStreamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateStream(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CancelCertificateTransferRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListPrincipalPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getAscendingOrder() != null)\r\n        sb.append(\"AscendingOrder: \").append(getAscendingOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.CreateEventSourceMappingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUUID() != null)\r\n        sb.append(\"UUID: \").append(getUUID()).append(\",\");\r\n    if (getBatchSize() != null)\r\n        sb.append(\"BatchSize: \").append(getBatchSize()).append(\",\");\r\n    if (getEventSourceArn() != null)\r\n        sb.append(\"EventSourceArn: \").append(getEventSourceArn()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getLastProcessingResult() != null)\r\n        sb.append(\"LastProcessingResult: \").append(getLastProcessingResult()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateTransitionReason() != null)\r\n        sb.append(\"StateTransitionReason: \").append(getStateTransitionReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ScheduledAuditMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduledAuditName() != null)\r\n        sb.append(\"ScheduledAuditName: \").append(getScheduledAuditName()).append(\",\");\r\n    if (getScheduledAuditArn() != null)\r\n        sb.append(\"ScheduledAuditArn: \").append(getScheduledAuditArn()).append(\",\");\r\n    if (getFrequency() != null)\r\n        sb.append(\"Frequency: \").append(getFrequency()).append(\",\");\r\n    if (getDayOfMonth() != null)\r\n        sb.append(\"DayOfMonth: \").append(getDayOfMonth()).append(\",\");\r\n    if (getDayOfWeek() != null)\r\n        sb.append(\"DayOfWeek: \").append(getDayOfWeek());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.AWSKafkaAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.DescribeClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterArn() != null)\r\n        sb.append(\"ClusterArn: \").append(getClusterArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetOperationsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.CloudWatchLoggingOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.LambdaAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingPrincipalsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipals() != null)\r\n        sb.append(\"Principals: \").append(getPrincipals());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetIntentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatasetTrigger.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getDataset() != null)\r\n        sb.append(\"Dataset: \").append(getDataset());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListAttachedPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget()).append(\",\");\r\n    if (getRecursive() != null)\r\n        sb.append(\"Recursive: \").append(getRecursive()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.CreateDatastoreRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatastoreName() != null)\r\n        sb.append(\"DatastoreName: \").append(getDatastoreName()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagKey() != null)\r\n        sb.append(\"TagKey: \").append(getTagKey()).append(\",\");\r\n    if (getTagValue() != null)\r\n        sb.append(\"TagValue: \").append(getTagValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListDatastoresResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatastoreSummaries() != null)\r\n        sb.append(\"DatastoreSummaries: \").append(getDatastoreSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DeregisterStreamConsumerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.StartPipelineReprocessingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReprocessingId() != null)\r\n        sb.append(\"ReprocessingId: \").append(getReprocessingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoArchivedMediaClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonkinesisvideoarchivedmedia using the current builderconfiguration.",
	"Method": "AmazonKinesisVideoArchivedMedia build(AwsSyncClientParams params){\r\n    return new AmazonKinesisVideoArchivedMediaClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateDiskSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskName() != null)\r\n        sb.append(\"DiskName: \").append(getDiskName()).append(\",\");\r\n    if (getDiskSnapshotName() != null)\r\n        sb.append(\"DiskSnapshotName: \").append(getDiskSnapshotName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeleteDatastoreResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DestinationInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getService() != null)\r\n        sb.append(\"Service: \").append(getService());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.DeleteBotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroups() != null)\r\n        sb.append(\"ThingGroups: \").append(getThingGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateLoadBalancerTlsCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getCertificateName() != null)\r\n        sb.append(\"CertificateName: \").append(getCertificateName()).append(\",\");\r\n    if (getCertificateDomainName() != null)\r\n        sb.append(\"CertificateDomainName: \").append(getCertificateDomainName()).append(\",\");\r\n    if (getCertificateAlternativeNames() != null)\r\n        sb.append(\"CertificateAlternativeNames: \").append(getCertificateAlternativeNames()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.UpdateKeyDescriptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListThingRegistrationTaskReportsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceLinks() != null)\r\n        sb.append(\"ResourceLinks: \").append(getResourceLinks()).append(\",\");\r\n    if (getReportType() != null)\r\n        sb.append(\"ReportType: \").append(getReportType()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DescribeLoggingOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetStaticIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticIpName() != null)\r\n        sb.append(\"StaticIpName: \").append(getStaticIpName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.AWSKafkaClient.getBootstrapBrokers",
	"Comment": "a list of brokers that a client application can use to bootstrap.",
	"Method": "GetBootstrapBrokersResult getBootstrapBrokers(GetBootstrapBrokersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetBootstrapBrokers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.ListDeliveryStreamsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamNames() != null)\r\n        sb.append(\"DeliveryStreamNames: \").append(getDeliveryStreamNames()).append(\",\");\r\n    if (getHasMoreDeliveryStreams() != null)\r\n        sb.append(\"HasMoreDeliveryStreams: \").append(getHasMoreDeliveryStreams());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.FinalizeDeviceClaimRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateScheduledAuditRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrequency() != null)\r\n        sb.append(\"Frequency: \").append(getFrequency()).append(\",\");\r\n    if (getDayOfMonth() != null)\r\n        sb.append(\"DayOfMonth: \").append(getDayOfMonth()).append(\",\");\r\n    if (getDayOfWeek() != null)\r\n        sb.append(\"DayOfWeek: \").append(getDayOfWeek()).append(\",\");\r\n    if (getTargetCheckNames() != null)\r\n        sb.append(\"TargetCheckNames: \").append(getTargetCheckNames()).append(\",\");\r\n    if (getScheduledAuditName() != null)\r\n        sb.append(\"ScheduledAuditName: \").append(getScheduledAuditName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.FlinkApplicationConfigurationDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckpointConfigurationDescription() != null)\r\n        sb.append(\"CheckpointConfigurationDescription: \").append(getCheckpointConfigurationDescription()).append(\",\");\r\n    if (getMonitoringConfigurationDescription() != null)\r\n        sb.append(\"MonitoringConfigurationDescription: \").append(getMonitoringConfigurationDescription()).append(\",\");\r\n    if (getParallelismConfigurationDescription() != null)\r\n        sb.append(\"ParallelismConfigurationDescription: \").append(getParallelismConfigurationDescription()).append(\",\");\r\n    if (getJobPlanDescription() != null)\r\n        sb.append(\"JobPlanDescription: \").append(getJobPlanDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseLogEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceLogEvents() != null)\r\n        sb.append(\"ResourceLogEvents: \").append(getResourceLogEvents()).append(\",\");\r\n    if (getNextBackwardToken() != null)\r\n        sb.append(\"NextBackwardToken: \").append(getNextBackwardToken()).append(\",\");\r\n    if (getNextForwardToken() != null)\r\n        sb.append(\"NextForwardToken: \").append(getNextForwardToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationCodeConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeContentTypeUpdate() != null)\r\n        sb.append(\"CodeContentTypeUpdate: \").append(getCodeContentTypeUpdate()).append(\",\");\r\n    if (getCodeContentUpdate() != null)\r\n        sb.append(\"CodeContentUpdate: \").append(getCodeContentUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DeleteDatasetContentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatasetName() != null)\r\n        sb.append(\"DatasetName: \").append(getDatasetName()).append(\",\");\r\n    if (getVersionId() != null)\r\n        sb.append(\"VersionId: \").append(getVersionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.CustomKeyStoresListEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomKeyStoreId() != null)\r\n        sb.append(\"CustomKeyStoreId: \").append(getCustomKeyStoreId()).append(\",\");\r\n    if (getCustomKeyStoreName() != null)\r\n        sb.append(\"CustomKeyStoreName: \").append(getCustomKeyStoreName()).append(\",\");\r\n    if (getCloudHsmClusterId() != null)\r\n        sb.append(\"CloudHsmClusterId: \").append(getCloudHsmClusterId()).append(\",\");\r\n    if (getTrustAnchorCertificate() != null)\r\n        sb.append(\"TrustAnchorCertificate: \").append(getTrustAnchorCertificate()).append(\",\");\r\n    if (getConnectionState() != null)\r\n        sb.append(\"ConnectionState: \").append(getConnectionState()).append(\",\");\r\n    if (getConnectionErrorCode() != null)\r\n        sb.append(\"ConnectionErrorCode: \").append(getConnectionErrorCode()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisClient.listStreams",
	"Comment": "lists your kinesis data streams.the number of streams may be too large to return from a single call to liststreams. you can limitthe number of returned streams using the limit parameter. if you do not specify a value for thelimit parameter, kinesis data streams uses the default limit, which is currently 10.you can detect if there are more streams available to list by using the hasmorestreams flag from thereturned output. if there are more streams available, you can request more streams by using the name of the laststream returned by the liststreams request in the exclusivestartstreamname parameter ina subsequent request to liststreams. the group of stream names returned by the subsequent request isthen added to the list. you can continue this process until all the stream names have been collected in the list.liststreams has a limit of five transactions per second per account.",
	"Method": "ListStreamsResult listStreams(ListStreamsRequest request,ListStreamsResult listStreams,ListStreamsResult listStreams,String exclusiveStartStreamName,ListStreamsResult listStreams,Integer limit,String exclusiveStartStreamName){\r\n    return listStreams(new ListStreamsRequest().withLimit(limit).withExclusiveStartStreamName(exclusiveStartStreamName));\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.CreateApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationSummary() != null)\r\n        sb.append(\"ApplicationSummary: \").append(getApplicationSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getRelationalDatabaseLogEvents",
	"Comment": "returns a list of log events for a database in amazon lightsail.",
	"Method": "GetRelationalDatabaseLogEventsResult getRelationalDatabaseLogEvents(GetRelationalDatabaseLogEventsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetRelationalDatabaseLogEvents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetKeyPairsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.AccountLimit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTotalCodeSize() != null)\r\n        sb.append(\"TotalCodeSize: \").append(getTotalCodeSize()).append(\",\");\r\n    if (getCodeSizeUnzipped() != null)\r\n        sb.append(\"CodeSizeUnzipped: \").append(getCodeSizeUnzipped()).append(\",\");\r\n    if (getCodeSizeZipped() != null)\r\n        sb.append(\"CodeSizeZipped: \").append(getCodeSizeZipped()).append(\",\");\r\n    if (getConcurrentExecutions() != null)\r\n        sb.append(\"ConcurrentExecutions: \").append(getConcurrentExecutions()).append(\",\");\r\n    if (getUnreservedConcurrentExecutions() != null)\r\n        sb.append(\"UnreservedConcurrentExecutions: \").append(getUnreservedConcurrentExecutions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.PutInstancePublicPortsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPortInfos() != null)\r\n        sb.append(\"PortInfos: \").append(getPortInfos()).append(\",\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.ApplicationConfigurationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlApplicationConfigurationUpdate() != null)\r\n        sb.append(\"SqlApplicationConfigurationUpdate: \").append(getSqlApplicationConfigurationUpdate()).append(\",\");\r\n    if (getApplicationCodeConfigurationUpdate() != null)\r\n        sb.append(\"ApplicationCodeConfigurationUpdate: \").append(getApplicationCodeConfigurationUpdate()).append(\",\");\r\n    if (getFlinkApplicationConfigurationUpdate() != null)\r\n        sb.append(\"FlinkApplicationConfigurationUpdate: \").append(getFlinkApplicationConfigurationUpdate()).append(\",\");\r\n    if (getEnvironmentPropertyUpdates() != null)\r\n        sb.append(\"EnvironmentPropertyUpdates: \").append(getEnvironmentPropertyUpdates()).append(\",\");\r\n    if (getApplicationSnapshotConfigurationUpdate() != null)\r\n        sb.append(\"ApplicationSnapshotConfigurationUpdate: \").append(getApplicationSnapshotConfigurationUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.GetEventSourceMappingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUUID() != null)\r\n        sb.append(\"UUID: \").append(getUUID()).append(\",\");\r\n    if (getBatchSize() != null)\r\n        sb.append(\"BatchSize: \").append(getBatchSize()).append(\",\");\r\n    if (getEventSourceArn() != null)\r\n        sb.append(\"EventSourceArn: \").append(getEventSourceArn()).append(\",\");\r\n    if (getFunctionArn() != null)\r\n        sb.append(\"FunctionArn: \").append(getFunctionArn()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getLastProcessingResult() != null)\r\n        sb.append(\"LastProcessingResult: \").append(getLastProcessingResult()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getStateTransitionReason() != null)\r\n        sb.append(\"StateTransitionReason: \").append(getStateTransitionReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateRelationalDatabaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CancelAuditTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.inspector.model.SetTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.RunPipelineActivityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPayloads() != null)\r\n        sb.append(\"Payloads: \").append(getPayloads()).append(\",\");\r\n    if (getLogResult() != null)\r\n        sb.append(\"LogResult: \").append(getLogResult());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.CreateProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.SplunkDestinationConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHECEndpoint() != null)\r\n        sb.append(\"HECEndpoint: \").append(getHECEndpoint()).append(\",\");\r\n    if (getHECEndpointType() != null)\r\n        sb.append(\"HECEndpointType: \").append(getHECEndpointType()).append(\",\");\r\n    if (getHECToken() != null)\r\n        sb.append(\"HECToken: \").append(getHECToken()).append(\",\");\r\n    if (getHECAcknowledgmentTimeoutInSeconds() != null)\r\n        sb.append(\"HECAcknowledgmentTimeoutInSeconds: \").append(getHECAcknowledgmentTimeoutInSeconds()).append(\",\");\r\n    if (getRetryOptions() != null)\r\n        sb.append(\"RetryOptions: \").append(getRetryOptions()).append(\",\");\r\n    if (getS3BackupMode() != null)\r\n        sb.append(\"S3BackupMode: \").append(getS3BackupMode()).append(\",\");\r\n    if (getS3Configuration() != null)\r\n        sb.append(\"S3Configuration: \").append(getS3Configuration()).append(\",\");\r\n    if (getProcessingConfiguration() != null)\r\n        sb.append(\"ProcessingConfiguration: \").append(getProcessingConfiguration()).append(\",\");\r\n    if (getCloudWatchLoggingOptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptions: \").append(getCloudWatchLoggingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.AWSIotDataClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsiotdata using the current builder configuration.",
	"Method": "AWSIotData build(AwsSyncClientParams params){\r\n    return new AWSIotDataClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DescribeStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamDescription() != null)\r\n        sb.append(\"StreamDescription: \").append(getStreamDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateBillingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName()).append(\",\");\r\n    if (getBillingGroupProperties() != null)\r\n        sb.append(\"BillingGroupProperties: \").append(getBillingGroupProperties()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.PutRecordResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShardId() != null)\r\n        sb.append(\"ShardId: \").append(getShardId()).append(\",\");\r\n    if (getSequenceNumber() != null)\r\n        sb.append(\"SequenceNumber: \").append(getSequenceNumber()).append(\",\");\r\n    if (getEncryptionType() != null)\r\n        sb.append(\"EncryptionType: \").append(getEncryptionType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.describeSecurityProfile",
	"Comment": "gets information about a device defender security profile.",
	"Method": "DescribeSecurityProfileResult describeSecurityProfile(DescribeSecurityProfileRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSecurityProfile(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getFiles() != null)\r\n        sb.append(\"Files: \").append(getFiles()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListSecurityProfilesForTargetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getRecursive() != null)\r\n        sb.append(\"Recursive: \").append(getRecursive()).append(\",\");\r\n    if (getSecurityProfileTargetArn() != null)\r\n        sb.append(\"SecurityProfileTargetArn: \").append(getSecurityProfileTargetArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.AmazonLightsailClient.getInstanceState",
	"Comment": "returns the state of a specific instance. works on one instance at a time.",
	"Method": "GetInstanceStateResult getInstanceState(GetInstanceStateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetInstanceState(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DescribeProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProject() != null)\r\n        sb.append(\"Project: \").append(getProject());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.TransferCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getTargetAwsAccount() != null)\r\n        sb.append(\"TargetAwsAccount: \").append(getTargetAwsAccount()).append(\",\");\r\n    if (getTransferMessage() != null)\r\n        sb.append(\"TransferMessage: \").append(getTransferMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListDatasetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DescribeBillingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseMetricDataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getMetricData() != null)\r\n        sb.append(\"MetricData: \").append(getMetricData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteThingTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatasetContentSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getScheduleTime() != null)\r\n        sb.append(\"ScheduleTime: \").append(getScheduleTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AddThingToThingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getThingGroupArn() != null)\r\n        sb.append(\"ThingGroupArn: \").append(getThingGroupArn()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn()).append(\",\");\r\n    if (getOverrideDynamicGroups() != null)\r\n        sb.append(\"OverrideDynamicGroups: \").append(getOverrideDynamicGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.AmazonKinesisAsyncClient.getShardIteratorAsync",
	"Comment": "simplified method form for invoking the getsharditerator operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync(GetShardIteratorRequest request,java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync,GetShardIteratorRequest request,com.amazonaws.handlers.AsyncHandler<GetShardIteratorRequest, GetShardIteratorResult> asyncHandler,java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync,String streamName,String shardId,String shardIteratorType,java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync,String streamName,String shardId,String shardIteratorType,com.amazonaws.handlers.AsyncHandler<GetShardIteratorRequest, GetShardIteratorResult> asyncHandler,java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync,String streamName,String shardId,String shardIteratorType,String startingSequenceNumber,java.util.concurrent.Future<GetShardIteratorResult> getShardIteratorAsync,String streamName,String shardId,String shardIteratorType,String startingSequenceNumber,com.amazonaws.handlers.AsyncHandler<GetShardIteratorRequest, GetShardIteratorResult> asyncHandler){\r\n    return getShardIteratorAsync(new GetShardIteratorRequest().withStreamName(streamName).withShardId(shardId).withShardIteratorType(shardIteratorType).withStartingSequenceNumber(startingSequenceNumber), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotChannelAssociationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getBotAlias() != null)\r\n        sb.append(\"BotAlias: \").append(getBotAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListAttachedPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DescribePipelineRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineName() != null)\r\n        sb.append(\"PipelineName: \").append(getPipelineName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetIntentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIntents() != null)\r\n        sb.append(\"Intents: \").append(getIntents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateInstancesFromSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.DeleteClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterArn() != null)\r\n        sb.append(\"ClusterArn: \").append(getClusterArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.S3ReferenceDataSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketARN() != null)\r\n        sb.append(\"BucketARN: \").append(getBucketARN()).append(\",\");\r\n    if (getFileKey() != null)\r\n        sb.append(\"FileKey: \").append(getFileKey()).append(\",\");\r\n    if (getReferenceRoleARN() != null)\r\n        sb.append(\"ReferenceRoleARN: \").append(getReferenceRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.CreatePlacementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.GetMediaForFragmentListResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getPayload() != null)\r\n        sb.append(\"Payload: \").append(getPayload());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DeletePlacementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPlacementName() != null)\r\n        sb.append(\"PlacementName: \").append(getPlacementName()).append(\",\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatasetAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionName() != null)\r\n        sb.append(\"ActionName: \").append(getActionName()).append(\",\");\r\n    if (getQueryAction() != null)\r\n        sb.append(\"QueryAction: \").append(getQueryAction()).append(\",\");\r\n    if (getContainerAction() != null)\r\n        sb.append(\"ContainerAction: \").append(getContainerAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.DisconnectCustomKeyStoreRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomKeyStoreId() != null)\r\n        sb.append(\"CustomKeyStoreId: \").append(getCustomKeyStoreId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateDynamicThingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getThingGroupArn() != null)\r\n        sb.append(\"ThingGroupArn: \").append(getThingGroupArn()).append(\",\");\r\n    if (getThingGroupId() != null)\r\n        sb.append(\"ThingGroupId: \").append(getThingGroupId()).append(\",\");\r\n    if (getIndexName() != null)\r\n        sb.append(\"IndexName: \").append(getIndexName()).append(\",\");\r\n    if (getQueryString() != null)\r\n        sb.append(\"QueryString: \").append(getQueryString()).append(\",\");\r\n    if (getQueryVersion() != null)\r\n        sb.append(\"QueryVersion: \").append(getQueryVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.MappingParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJSONMappingParameters() != null)\r\n        sb.append(\"JSONMappingParameters: \").append(getJSONMappingParameters()).append(\",\");\r\n    if (getCSVMappingParameters() != null)\r\n        sb.append(\"CSVMappingParameters: \").append(getCSVMappingParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.InputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId()).append(\",\");\r\n    if (getNamePrefix() != null)\r\n        sb.append(\"NamePrefix: \").append(getNamePrefix()).append(\",\");\r\n    if (getInAppStreamNames() != null)\r\n        sb.append(\"InAppStreamNames: \").append(getInAppStreamNames()).append(\",\");\r\n    if (getInputProcessingConfigurationDescription() != null)\r\n        sb.append(\"InputProcessingConfigurationDescription: \").append(getInputProcessingConfigurationDescription()).append(\",\");\r\n    if (getKinesisStreamsInputDescription() != null)\r\n        sb.append(\"KinesisStreamsInputDescription: \").append(getKinesisStreamsInputDescription()).append(\",\");\r\n    if (getKinesisFirehoseInputDescription() != null)\r\n        sb.append(\"KinesisFirehoseInputDescription: \").append(getKinesisFirehoseInputDescription()).append(\",\");\r\n    if (getInputSchema() != null)\r\n        sb.append(\"InputSchema: \").append(getInputSchema()).append(\",\");\r\n    if (getInputParallelism() != null)\r\n        sb.append(\"InputParallelism: \").append(getInputParallelism()).append(\",\");\r\n    if (getInputStartingPositionConfiguration() != null)\r\n        sb.append(\"InputStartingPositionConfiguration: \").append(getInputStartingPositionConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.AWSIoTAnalyticsClient.sampleChannelData",
	"Comment": "retrieves a sample of messages from the specified channel ingested during the specified timeframe. up to 10messages can be retrieved.",
	"Method": "SampleChannelDataResult sampleChannelData(SampleChannelDataRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSampleChannelData(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListLicenseSpecificationsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.BillingGroupMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteKeyPairResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RemoveThingFromBillingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingGroupName() != null)\r\n        sb.append(\"BillingGroupName: \").append(getBillingGroupName()).append(\",\");\r\n    if (getBillingGroupArn() != null)\r\n        sb.append(\"BillingGroupArn: \").append(getBillingGroupArn()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetBundlesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundles() != null)\r\n        sb.append(\"Bundles: \").append(getBundles()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getDurationInMinutes() != null)\r\n        sb.append(\"DurationInMinutes: \").append(getDurationInMinutes()).append(\",\");\r\n    if (getPageToken() != null)\r\n        sb.append(\"PageToken: \").append(getPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.KinesisStreamSourceDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKinesisStreamARN() != null)\r\n        sb.append(\"KinesisStreamARN: \").append(getKinesisStreamARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getDeliveryStartTimestamp() != null)\r\n        sb.append(\"DeliveryStartTimestamp: \").append(getDeliveryStartTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateAuthorizerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizerName() != null)\r\n        sb.append(\"AuthorizerName: \").append(getAuthorizerName()).append(\",\");\r\n    if (getAuthorizerArn() != null)\r\n        sb.append(\"AuthorizerArn: \").append(getAuthorizerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.CloudWatchLoggingOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogStreamARN() != null)\r\n        sb.append(\"LogStreamARN: \").append(getLogStreamARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AssociateTargetsWithJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DeregisterStreamConsumerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamARN() != null)\r\n        sb.append(\"StreamARN: \").append(getStreamARN()).append(\",\");\r\n    if (getConsumerName() != null)\r\n        sb.append(\"ConsumerName: \").append(getConsumerName()).append(\",\");\r\n    if (getConsumerARN() != null)\r\n        sb.append(\"ConsumerARN: \").append(getConsumerARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.StopInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceName() != null)\r\n        sb.append(\"InstanceName: \").append(getInstanceName()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.GetRecordsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecords() != null)\r\n        sb.append(\"Records: \").append(getRecords()).append(\",\");\r\n    if (getNextShardIterator() != null)\r\n        sb.append(\"NextShardIterator: \").append(getNextShardIterator()).append(\",\");\r\n    if (getMillisBehindLatest() != null)\r\n        sb.append(\"MillisBehindLatest: \").append(getMillisBehindLatest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisStreamsInputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListTargetsForPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.AvailabilityZone.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getZoneName() != null)\r\n        sb.append(\"ZoneName: \").append(getZoneName()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.GetParametersForImportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getWrappingAlgorithm() != null)\r\n        sb.append(\"WrappingAlgorithm: \").append(getWrappingAlgorithm()).append(\",\");\r\n    if (getWrappingKeySpec() != null)\r\n        sb.append(\"WrappingKeySpec: \").append(getWrappingKeySpec());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.GetDeviceMethodsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceMethods() != null)\r\n        sb.append(\"DeviceMethods: \").append(getDeviceMethods());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetExportSnapshotRecordsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportSnapshotRecords() != null)\r\n        sb.append(\"ExportSnapshotRecords: \").append(getExportSnapshotRecords()).append(\",\");\r\n    if (getNextPageToken() != null)\r\n        sb.append(\"NextPageToken: \").append(getNextPageToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBots() != null)\r\n        sb.append(\"Bots: \").append(getBots()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.listCertificates",
	"Comment": "lists the certificates registered in your aws account.the results are paginated with a default page size of 25. you can use the returned marker to retrieve additionalresults.",
	"Method": "ListCertificatesResult listCertificates(ListCertificatesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListCertificates(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.SearchIndexResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getThings() != null)\r\n        sb.append(\"Things: \").append(getThings()).append(\",\");\r\n    if (getThingGroups() != null)\r\n        sb.append(\"ThingGroups: \").append(getThingGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.KinesisStreamsInputUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNUpdate() != null)\r\n        sb.append(\"ResourceARNUpdate: \").append(getResourceARNUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getThingTypeName() != null)\r\n        sb.append(\"ThingTypeName: \").append(getThingTypeName()).append(\",\");\r\n    if (getThingArn() != null)\r\n        sb.append(\"ThingArn: \").append(getThingArn()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.MonthlyTransfer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGbPerMonthAllocated() != null)\r\n        sb.append(\"GbPerMonthAllocated: \").append(getGbPerMonthAllocated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.DeleteProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.SampleChannelDataResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPayloads() != null)\r\n        sb.append(\"Payloads: \").append(getPayloads());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.AWSIotClient.deleteCertificate",
	"Comment": "deletes the specified certificate.a certificate cannot be deleted if it has a policy attached to it or if its status is set to active. to delete acertificate, first use the detachprincipalpolicy api to detach all policies. next, use theupdatecertificate api to set the certificate to the inactive status.",
	"Method": "DeleteCertificateResult deleteCertificate(DeleteCertificateRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteCertificate(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.AmazonKinesisAnalyticsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonkinesisanalyticsasync using the current builder configuration.",
	"Method": "AmazonKinesisAnalyticsAsync build(AwsAsyncClientParams params){\r\n    return new AmazonKinesisAnalyticsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.model.ResponseCard.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getGenericAttachments() != null)\r\n        sb.append(\"GenericAttachments: \").append(getGenericAttachments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteRelationalDatabaseSnapshotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickprojects.model.UpdateProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectName() != null)\r\n        sb.append(\"ProjectName: \").append(getProjectName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getPlacementTemplate() != null)\r\n        sb.append(\"PlacementTemplate: \").append(getPlacementTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.LicenseConfigurationAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceOwnerId() != null)\r\n        sb.append(\"ResourceOwnerId: \").append(getResourceOwnerId()).append(\",\");\r\n    if (getAssociationTime() != null)\r\n        sb.append(\"AssociationTime: \").append(getAssociationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.MappingParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJSONMappingParameters() != null)\r\n        sb.append(\"JSONMappingParameters: \").append(getJSONMappingParameters()).append(\",\");\r\n    if (getCSVMappingParameters() != null)\r\n        sb.append(\"CSVMappingParameters: \").append(getCSVMappingParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexruntime.AmazonLexRuntimeAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ListSecurityProfilesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityProfileIdentifiers() != null)\r\n        sb.append(\"SecurityProfileIdentifiers: \").append(getSecurityProfileIdentifiers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeleteAuthorizerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.DisableEnhancedMonitoringResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getCurrentShardLevelMetrics() != null)\r\n        sb.append(\"CurrentShardLevelMetrics: \").append(getCurrentShardLevelMetrics()).append(\",\");\r\n    if (getDesiredShardLevelMetrics() != null)\r\n        sb.append(\"DesiredShardLevelMetrics: \").append(getDesiredShardLevelMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RegistrationConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTemplateBody() != null)\r\n        sb.append(\"TemplateBody: \").append(getTemplateBody()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.licensemanager.model.ListResourceInventoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.SourceDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKinesisStreamSourceDescription() != null)\r\n        sb.append(\"KinesisStreamSourceDescription: \").append(getKinesisStreamSourceDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.PropertyGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropertyGroupId() != null)\r\n        sb.append(\"PropertyGroupId: \").append(getPropertyGroupId()).append(\",\");\r\n    if (getPropertyMap() != null)\r\n        sb.append(\"PropertyMap: \").append(getPropertyMap());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.EnvironmentPropertyDescriptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropertyGroupDescriptions() != null)\r\n        sb.append(\"PropertyGroupDescriptions: \").append(getPropertyGroupDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteRelationalDatabaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetLoadBalancerTlsCertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTlsCertificates() != null)\r\n        sb.append(\"TlsCertificates: \").append(getTlsCertificates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.UpdateAccountAuditConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.DeleteDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.RepublishAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getTopic() != null)\r\n        sb.append(\"Topic: \").append(getTopic());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.ListPipelinesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPipelineSummaries() != null)\r\n        sb.append(\"PipelineSummaries: \").append(getPipelineSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotdata.model.DeleteThingShadowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.DeletePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisfirehose.model.CreateDeliveryStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamARN() != null)\r\n        sb.append(\"DeliveryStreamARN: \").append(getDeliveryStreamARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatasetContentDeliveryRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntryName() != null)\r\n        sb.append(\"EntryName: \").append(getEntryName()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.LambdaOutputDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CACertificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getCertificateId() != null)\r\n        sb.append(\"CertificateId: \").append(getCertificateId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getInstancePort() != null)\r\n        sb.append(\"InstancePort: \").append(getInstancePort()).append(\",\");\r\n    if (getHealthCheckPath() != null)\r\n        sb.append(\"HealthCheckPath: \").append(getHealthCheckPath()).append(\",\");\r\n    if (getCertificateName() != null)\r\n        sb.append(\"CertificateName: \").append(getCertificateName()).append(\",\");\r\n    if (getCertificateDomainName() != null)\r\n        sb.append(\"CertificateDomainName: \").append(getCertificateDomainName()).append(\",\");\r\n    if (getCertificateAlternativeNames() != null)\r\n        sb.append(\"CertificateAlternativeNames: \").append(getCertificateAlternativeNames()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.AWSIoT1ClickDevicesClient.getDeviceMethods",
	"Comment": "given a device id, returns the invokable methods associated with the device.",
	"Method": "GetDeviceMethodsResult getDeviceMethods(GetDeviceMethodsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDeviceMethods(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.kafka.model.GetBootstrapBrokersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBootstrapBrokerString() != null)\r\n        sb.append(\"BootstrapBrokerString: \").append(getBootstrapBrokerString());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalytics.model.Input.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNamePrefix() != null)\r\n        sb.append(\"NamePrefix: \").append(getNamePrefix()).append(\",\");\r\n    if (getInputProcessingConfiguration() != null)\r\n        sb.append(\"InputProcessingConfiguration: \").append(getInputProcessingConfiguration()).append(\",\");\r\n    if (getKinesisStreamsInput() != null)\r\n        sb.append(\"KinesisStreamsInput: \").append(getKinesisStreamsInput()).append(\",\");\r\n    if (getKinesisFirehoseInput() != null)\r\n        sb.append(\"KinesisFirehoseInput: \").append(getKinesisFirehoseInput()).append(\",\");\r\n    if (getInputParallelism() != null)\r\n        sb.append(\"InputParallelism: \").append(getInputParallelism()).append(\",\");\r\n    if (getInputSchema() != null)\r\n        sb.append(\"InputSchema: \").append(getInputSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.PipelineActivity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannel() != null)\r\n        sb.append(\"Channel: \").append(getChannel()).append(\",\");\r\n    if (getLambda() != null)\r\n        sb.append(\"Lambda: \").append(getLambda()).append(\",\");\r\n    if (getDatastore() != null)\r\n        sb.append(\"Datastore: \").append(getDatastore()).append(\",\");\r\n    if (getAddAttributes() != null)\r\n        sb.append(\"AddAttributes: \").append(getAddAttributes()).append(\",\");\r\n    if (getRemoveAttributes() != null)\r\n        sb.append(\"RemoveAttributes: \").append(getRemoveAttributes()).append(\",\");\r\n    if (getSelectAttributes() != null)\r\n        sb.append(\"SelectAttributes: \").append(getSelectAttributes()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getMath() != null)\r\n        sb.append(\"Math: \").append(getMath()).append(\",\");\r\n    if (getDeviceRegistryEnrich() != null)\r\n        sb.append(\"DeviceRegistryEnrich: \").append(getDeviceRegistryEnrich()).append(\",\");\r\n    if (getDeviceShadowEnrich() != null)\r\n        sb.append(\"DeviceShadowEnrich: \").append(getDeviceShadowEnrich());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.AWSKMSAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awskmsasync using the current builder configuration.",
	"Method": "AWSKMSAsync build(AwsAsyncClientParams params){\r\n    return new AWSKMSAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.ThingTypeMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeprecated() != null)\r\n        sb.append(\"Deprecated: \").append(getDeprecated()).append(\",\");\r\n    if (getDeprecationDate() != null)\r\n        sb.append(\"DeprecationDate: \").append(getDeprecationDate()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.ListDeviceEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceId() != null)\r\n        sb.append(\"DeviceId: \").append(getDeviceId()).append(\",\");\r\n    if (getFromTimeStamp() != null)\r\n        sb.append(\"FromTimeStamp: \").append(getFromTimeStamp()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getToTimeStamp() != null)\r\n        sb.append(\"ToTimeStamp: \").append(getToTimeStamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.SnapshotDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotName() != null)\r\n        sb.append(\"SnapshotName: \").append(getSnapshotName()).append(\",\");\r\n    if (getSnapshotStatus() != null)\r\n        sb.append(\"SnapshotStatus: \").append(getSnapshotStatus()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId()).append(\",\");\r\n    if (getSnapshotCreationTimestamp() != null)\r\n        sb.append(\"SnapshotCreationTimestamp: \").append(getSnapshotCreationTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListAliasesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyId() != null)\r\n        sb.append(\"KeyId: \").append(getKeyId()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetDiskSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDiskSnapshotName() != null)\r\n        sb.append(\"DiskSnapshotName: \").append(getDiskSnapshotName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.StartNextPendingJobExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getStatusDetails() != null)\r\n        sb.append(\"StatusDetails: \").append(getStatusDetails()).append(\",\");\r\n    if (getStepTimeoutInMinutes() != null)\r\n        sb.append(\"StepTimeoutInMinutes: \").append(getStepTimeoutInMinutes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesis.model.StartStreamEncryptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot1clickdevices.model.InitiateDeviceClaimResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.AddApplicationInputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId()).append(\",\");\r\n    if (getInputDescriptions() != null)\r\n        sb.append(\"InputDescriptions: \").append(getInputDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.AmazonKinesisVideoAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonkinesisvideoasync using the current builder configuration.",
	"Method": "AmazonKinesisVideoAsync build(AwsAsyncClientParams params){\r\n    return new AmazonKinesisVideoAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.TriggeringDataset.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetBuiltinIntentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getSignatureContains() != null)\r\n        sb.append(\"SignatureContains: \").append(getSignatureContains()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.AddApplicationCloudWatchLoggingOptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationARN() != null)\r\n        sb.append(\"ApplicationARN: \").append(getApplicationARN()).append(\",\");\r\n    if (getApplicationVersionId() != null)\r\n        sb.append(\"ApplicationVersionId: \").append(getApplicationVersionId()).append(\",\");\r\n    if (getCloudWatchLoggingOptionDescriptions() != null)\r\n        sb.append(\"CloudWatchLoggingOptionDescriptions: \").append(getCloudWatchLoggingOptionDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisanalyticsv2.model.CloudWatchLoggingOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogStreamARN() != null)\r\n        sb.append(\"LogStreamARN: \").append(getLogStreamARN());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.ListLayerVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompatibleRuntime() != null)\r\n        sb.append(\"CompatibleRuntime: \").append(getCompatibleRuntime()).append(\",\");\r\n    if (getLayerName() != null)\r\n        sb.append(\"LayerName: \").append(getLayerName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotanalytics.model.DatasetActionSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionName() != null)\r\n        sb.append(\"ActionName: \").append(getActionName()).append(\",\");\r\n    if (getActionType() != null)\r\n        sb.append(\"ActionType: \").append(getActionType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lexmodelbuilding.model.GetUtterancesViewRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBotName() != null)\r\n        sb.append(\"BotName: \").append(getBotName()).append(\",\");\r\n    if (getBotVersions() != null)\r\n        sb.append(\"BotVersions: \").append(getBotVersions()).append(\",\");\r\n    if (getStatusType() != null)\r\n        sb.append(\"StatusType: \").append(getStatusType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.AddThingToThingGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.GetRelationalDatabaseLogStreamsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogStreams() != null)\r\n        sb.append(\"LogStreams: \").append(getLogStreams());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kinesisvideo.model.StartSelector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartSelectorType() != null)\r\n        sb.append(\"StartSelectorType: \").append(getStartSelectorType()).append(\",\");\r\n    if (getAfterFragmentNumber() != null)\r\n        sb.append(\"AfterFragmentNumber: \").append(getAfterFragmentNumber()).append(\",\");\r\n    if (getStartTimestamp() != null)\r\n        sb.append(\"StartTimestamp: \").append(getStartTimestamp()).append(\",\");\r\n    if (getContinuationToken() != null)\r\n        sb.append(\"ContinuationToken: \").append(getContinuationToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.kms.model.ListRetirableGrantsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGrants() != null)\r\n        sb.append(\"Grants: \").append(getGrants()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getTruncated() != null)\r\n        sb.append(\"Truncated: \").append(getTruncated());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iot.model.CreateThingGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getThingGroupName() != null)\r\n        sb.append(\"ThingGroupName: \").append(getThingGroupName()).append(\",\");\r\n    if (getParentGroupName() != null)\r\n        sb.append(\"ParentGroupName: \").append(getParentGroupName()).append(\",\");\r\n    if (getThingGroupProperties() != null)\r\n        sb.append(\"ThingGroupProperties: \").append(getThingGroupProperties()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.iotjobsdataplane.model.DescribeJobExecutionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getThingName() != null)\r\n        sb.append(\"ThingName: \").append(getThingName()).append(\",\");\r\n    if (getIncludeJobDocument() != null)\r\n        sb.append(\"IncludeJobDocument: \").append(getIncludeJobDocument()).append(\",\");\r\n    if (getExecutionNumber() != null)\r\n        sb.append(\"ExecutionNumber: \").append(getExecutionNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.CreateLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lambda.model.LayersListItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerName() != null)\r\n        sb.append(\"LayerName: \").append(getLayerName()).append(\",\");\r\n    if (getLayerArn() != null)\r\n        sb.append(\"LayerArn: \").append(getLayerArn()).append(\",\");\r\n    if (getLatestMatchingVersion() != null)\r\n        sb.append(\"LatestMatchingVersion: \").append(getLatestMatchingVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}]