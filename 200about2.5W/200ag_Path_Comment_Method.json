[{
	"Path": "com.amazonaws.services.mediapackage.model.HlsManifestCreateOrUpdateParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdMarkers() != null)\r\n        sb.append(\"AdMarkers: \").append(getAdMarkers()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIncludeIframeOnlyStream() != null)\r\n        sb.append(\"IncludeIframeOnlyStream: \").append(getIncludeIframeOnlyStream()).append(\",\");\r\n    if (getManifestName() != null)\r\n        sb.append(\"ManifestName: \").append(getManifestName()).append(\",\");\r\n    if (getPlaylistType() != null)\r\n        sb.append(\"PlaylistType: \").append(getPlaylistType()).append(\",\");\r\n    if (getPlaylistWindowSeconds() != null)\r\n        sb.append(\"PlaylistWindowSeconds: \").append(getPlaylistWindowSeconds()).append(\",\");\r\n    if (getProgramDateTimeIntervalSeconds() != null)\r\n        sb.append(\"ProgramDateTimeIntervalSeconds: \").append(getProgramDateTimeIntervalSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.AWSMediaStoreClient.putContainerPolicy",
	"Comment": "creates an access policy for the specified container to restrict the users and clients that can access it. forinformation about the data that is included in an access policy, see the aws identity and access management user guide.for this release of the rest api, you can create only one policy for a container. if you enterputcontainerpolicy twice, the second command modifies the existing policy.",
	"Method": "PutContainerPolicyResult putContainerPolicy(PutContainerPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutContainerPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateAppRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateApplicationRequest() != null)\r\n        sb.append(\"CreateApplicationRequest: \").append(getCreateApplicationRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeDestinationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationNamePrefix() != null)\r\n        sb.append(\"DestinationNamePrefix: \").append(getDestinationNamePrefix()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.UpdateFlowEntitlementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntitlement() != null)\r\n        sb.append(\"Entitlement: \").append(getEntitlement()).append(\",\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.GetContainerPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeregisterEcsClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEcsClusterArn() != null)\r\n        sb.append(\"EcsClusterArn: \").append(getEcsClusterArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getStartFromHead() != null)\r\n        sb.append(\"StartFromHead: \").append(getStartFromHead());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeResourcePoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourcePolicies() != null)\r\n        sb.append(\"ResourcePolicies: \").append(getResourcePolicies()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.TtmlDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStylePassthrough() != null)\r\n        sb.append(\"StylePassthrough: \").append(getStylePassthrough());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.RejectQualificationRequestResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.StartInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportJobResponse() != null)\r\n        sb.append(\"ExportJobResponse: \").append(getExportJobResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Endpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeServiceErrorsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceErrors() != null)\r\n        sb.append(\"ServiceErrors: \").append(getServiceErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.HIT.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId()).append(\",\");\r\n    if (getHITTypeId() != null)\r\n        sb.append(\"HITTypeId: \").append(getHITTypeId()).append(\",\");\r\n    if (getHITGroupId() != null)\r\n        sb.append(\"HITGroupId: \").append(getHITGroupId()).append(\",\");\r\n    if (getHITLayoutId() != null)\r\n        sb.append(\"HITLayoutId: \").append(getHITLayoutId()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getQuestion() != null)\r\n        sb.append(\"Question: \").append(getQuestion()).append(\",\");\r\n    if (getKeywords() != null)\r\n        sb.append(\"Keywords: \").append(getKeywords()).append(\",\");\r\n    if (getHITStatus() != null)\r\n        sb.append(\"HITStatus: \").append(getHITStatus()).append(\",\");\r\n    if (getMaxAssignments() != null)\r\n        sb.append(\"MaxAssignments: \").append(getMaxAssignments()).append(\",\");\r\n    if (getReward() != null)\r\n        sb.append(\"Reward: \").append(getReward()).append(\",\");\r\n    if (getAutoApprovalDelayInSeconds() != null)\r\n        sb.append(\"AutoApprovalDelayInSeconds: \").append(getAutoApprovalDelayInSeconds()).append(\",\");\r\n    if (getExpiration() != null)\r\n        sb.append(\"Expiration: \").append(getExpiration()).append(\",\");\r\n    if (getAssignmentDurationInSeconds() != null)\r\n        sb.append(\"AssignmentDurationInSeconds: \").append(getAssignmentDurationInSeconds()).append(\",\");\r\n    if (getRequesterAnnotation() != null)\r\n        sb.append(\"RequesterAnnotation: \").append(getRequesterAnnotation()).append(\",\");\r\n    if (getQualificationRequirements() != null)\r\n        sb.append(\"QualificationRequirements: \").append(getQualificationRequirements()).append(\",\");\r\n    if (getHITReviewStatus() != null)\r\n        sb.append(\"HITReviewStatus: \").append(getHITReviewStatus()).append(\",\");\r\n    if (getNumberOfAssignmentsPending() != null)\r\n        sb.append(\"NumberOfAssignmentsPending: \").append(getNumberOfAssignmentsPending()).append(\",\");\r\n    if (getNumberOfAssignmentsAvailable() != null)\r\n        sb.append(\"NumberOfAssignmentsAvailable: \").append(getNumberOfAssignmentsAvailable()).append(\",\");\r\n    if (getNumberOfAssignmentsCompleted() != null)\r\n        sb.append(\"NumberOfAssignmentsCompleted: \").append(getNumberOfAssignmentsCompleted());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointMessageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getDeliveryStatus() != null)\r\n        sb.append(\"DeliveryStatus: \").append(getDeliveryStatus()).append(\",\");\r\n    if (getMessageId() != null)\r\n        sb.append(\"MessageId: \").append(getMessageId()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getUpdatedToken() != null)\r\n        sb.append(\"UpdatedToken: \").append(getUpdatedToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ListQueuesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getQueues() != null)\r\n        sb.append(\"Queues: \").append(getQueues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.setProxyPassword",
	"Comment": "sets the optional proxy password to use when connecting through a proxy.",
	"Method": "void setProxyPassword(String proxyPassword){\r\n    this.proxyPassword = proxyPassword;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DataSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId()).append(\",\");\r\n    if (getDataLocationS3() != null)\r\n        sb.append(\"DataLocationS3: \").append(getDataLocationS3()).append(\",\");\r\n    if (getDataRearrangement() != null)\r\n        sb.append(\"DataRearrangement: \").append(getDataRearrangement()).append(\",\");\r\n    if (getCreatedByIamUser() != null)\r\n        sb.append(\"CreatedByIamUser: \").append(getCreatedByIamUser()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getDataSizeInBytes() != null)\r\n        sb.append(\"DataSizeInBytes: \").append(getDataSizeInBytes()).append(\",\");\r\n    if (getNumberOfFiles() != null)\r\n        sb.append(\"NumberOfFiles: \").append(getNumberOfFiles()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getRedshiftMetadata() != null)\r\n        sb.append(\"RedshiftMetadata: \").append(getRedshiftMetadata()).append(\",\");\r\n    if (getRDSMetadata() != null)\r\n        sb.append(\"RDSMetadata: \").append(getRDSMetadata()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getComputeStatistics() != null)\r\n        sb.append(\"ComputeStatistics: \").append(getComputeStatistics()).append(\",\");\r\n    if (getComputeTime() != null)\r\n        sb.append(\"ComputeTime: \").append(getComputeTime()).append(\",\");\r\n    if (getFinishedAt() != null)\r\n        sb.append(\"FinishedAt: \").append(getFinishedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DescribeEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getMode() != null)\r\n        sb.append(\"Mode: \").append(getMode()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.AWSMediaPackageClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.OrderableDBInstanceOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getMultiAZCapable() != null)\r\n        sb.append(\"MultiAZCapable: \").append(getMultiAZCapable()).append(\",\");\r\n    if (getReadReplicaCapable() != null)\r\n        sb.append(\"ReadReplicaCapable: \").append(getReadReplicaCapable()).append(\",\");\r\n    if (getVpc() != null)\r\n        sb.append(\"Vpc: \").append(getVpc()).append(\",\");\r\n    if (getSupportsStorageEncryption() != null)\r\n        sb.append(\"SupportsStorageEncryption: \").append(getSupportsStorageEncryption()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getSupportsIops() != null)\r\n        sb.append(\"SupportsIops: \").append(getSupportsIops()).append(\",\");\r\n    if (getSupportsEnhancedMonitoring() != null)\r\n        sb.append(\"SupportsEnhancedMonitoring: \").append(getSupportsEnhancedMonitoring()).append(\",\");\r\n    if (getSupportsIAMDatabaseAuthentication() != null)\r\n        sb.append(\"SupportsIAMDatabaseAuthentication: \").append(getSupportsIAMDatabaseAuthentication()).append(\",\");\r\n    if (getSupportsPerformanceInsights() != null)\r\n        sb.append(\"SupportsPerformanceInsights: \").append(getSupportsPerformanceInsights()).append(\",\");\r\n    if (getMinStorageSize() != null)\r\n        sb.append(\"MinStorageSize: \").append(getMinStorageSize()).append(\",\");\r\n    if (getMaxStorageSize() != null)\r\n        sb.append(\"MaxStorageSize: \").append(getMaxStorageSize()).append(\",\");\r\n    if (getMinIopsPerDbInstance() != null)\r\n        sb.append(\"MinIopsPerDbInstance: \").append(getMinIopsPerDbInstance()).append(\",\");\r\n    if (getMaxIopsPerDbInstance() != null)\r\n        sb.append(\"MaxIopsPerDbInstance: \").append(getMaxIopsPerDbInstance()).append(\",\");\r\n    if (getMinIopsPerGib() != null)\r\n        sb.append(\"MinIopsPerGib: \").append(getMinIopsPerGib()).append(\",\");\r\n    if (getMaxIopsPerGib() != null)\r\n        sb.append(\"MaxIopsPerGib: \").append(getMaxIopsPerGib());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListAccountsForParentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParentId() != null)\r\n        sb.append(\"ParentId: \").append(getParentId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.UpdateFlowSourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDecryption() != null)\r\n        sb.append(\"Decryption: \").append(getDecryption()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEntitlementArn() != null)\r\n        sb.append(\"EntitlementArn: \").append(getEntitlementArn()).append(\",\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getIngestPort() != null)\r\n        sb.append(\"IngestPort: \").append(getIngestPort()).append(\",\");\r\n    if (getMaxBitrate() != null)\r\n        sb.append(\"MaxBitrate: \").append(getMaxBitrate()).append(\",\");\r\n    if (getMaxLatency() != null)\r\n        sb.append(\"MaxLatency: \").append(getMaxLatency()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getSourceArn() != null)\r\n        sb.append(\"SourceArn: \").append(getSourceArn()).append(\",\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId()).append(\",\");\r\n    if (getWhitelistCidr() != null)\r\n        sb.append(\"WhitelistCidr: \").append(getWhitelistCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getLayerIds() != null)\r\n        sb.append(\"LayerIds: \").append(getLayerIds()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getAutoScalingType() != null)\r\n        sb.append(\"AutoScalingType: \").append(getAutoScalingType()).append(\",\");\r\n    if (getHostname() != null)\r\n        sb.append(\"Hostname: \").append(getHostname()).append(\",\");\r\n    if (getOs() != null)\r\n        sb.append(\"Os: \").append(getOs()).append(\",\");\r\n    if (getAmiId() != null)\r\n        sb.append(\"AmiId: \").append(getAmiId()).append(\",\");\r\n    if (getSshKeyName() != null)\r\n        sb.append(\"SshKeyName: \").append(getSshKeyName()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getInstallUpdatesOnBoot() != null)\r\n        sb.append(\"InstallUpdatesOnBoot: \").append(getInstallUpdatesOnBoot()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getAgentVersion() != null)\r\n        sb.append(\"AgentVersion: \").append(getAgentVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateSegmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSegmentResponse() != null)\r\n        sb.append(\"SegmentResponse: \").append(getSegmentResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.ListTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListAWSServiceAccessForOrganizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DeleteOrganizationalUnitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationalUnitId() != null)\r\n        sb.append(\"OrganizationalUnitId: \").append(getOrganizationalUnitId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.AWSMediaLiveAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmedialiveasync using the current builder configuration.",
	"Method": "AWSMediaLiveAsync build(AwsAsyncClientParams params){\r\n    return new AWSMediaLiveAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.tagLogGroup",
	"Comment": "adds or updates the specified tags for the specified log group.to list the tags for a log group, use listtagsloggroup. to remove tags, use untagloggroup.for more information about tags, see tag log groups in amazoncloudwatch logs in the amazon cloudwatch logs user guide.",
	"Method": "TagLogGroupResult tagLogGroup(TagLogGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTagLogGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribeOrganizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.AWSOrganizationsClient.listHandshakesForAccount",
	"Comment": "lists the current handshakes that are associated with the account of the requesting user.handshakes that are accepted, declined, or canceled appear in the results of this api for only 30 days afterchanging to that state. after that they are deleted and no longer accessible.always check the nexttoken response parameter for a null value when calling alist operation. these operations can occasionally return an empty set of results even when thereare more results available. the nexttoken response parameter value is null onlywhen there are no more results to display.this operation can be called from any account in the organization.",
	"Method": "ListHandshakesForAccountResult listHandshakesForAccount(ListHandshakesForAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListHandshakesForAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ListInputSecurityGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.MssPackage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getManifestWindowSeconds() != null)\r\n        sb.append(\"ManifestWindowSeconds: \").append(getManifestWindowSeconds()).append(\",\");\r\n    if (getSegmentDurationSeconds() != null)\r\n        sb.append(\"SegmentDurationSeconds: \").append(getSegmentDurationSeconds()).append(\",\");\r\n    if (getStreamSelection() != null)\r\n        sb.append(\"StreamSelection: \").append(getStreamSelection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBSubnetGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getDBSubnetGroupDescription() != null)\r\n        sb.append(\"DBSubnetGroupDescription: \").append(getDBSubnetGroupDescription()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getSubnetGroupStatus() != null)\r\n        sb.append(\"SubnetGroupStatus: \").append(getSubnetGroupStatus()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getDBSubnetGroupArn() != null)\r\n        sb.append(\"DBSubnetGroupArn: \").append(getDBSubnetGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.NotifyApplicationStateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CloudWatchLogsConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getLogStreams() != null)\r\n        sb.append(\"LogStreams: \").append(getLogStreams());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AudioSelectorSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioLanguageSelection() != null)\r\n        sb.append(\"AudioLanguageSelection: \").append(getAudioLanguageSelection()).append(\",\");\r\n    if (getAudioPidSelection() != null)\r\n        sb.append(\"AudioPidSelection: \").append(getAudioPidSelection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UpdateRelationalDatabaseParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.GetJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJob() != null)\r\n        sb.append(\"Job: \").append(getJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.FixedModeScheduleActionStartSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTime() != null)\r\n        sb.append(\"Time: \").append(getTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.TtmlDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStyleControl() != null)\r\n        sb.append(\"StyleControl: \").append(getStyleControl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.AWSOpsWorksClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsopsworks using the current builder configuration.",
	"Method": "AWSOpsWorks build(AwsSyncClientParams params){\r\n    return new AWSOpsWorksClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResults() != null)\r\n        sb.append(\"Results: \").append(getResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.PurchaseOfferingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservation() != null)\r\n        sb.append(\"Reservation: \").append(getReservation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.createWorkerBlock",
	"Comment": "the createworkerblock operation allows you to prevent a worker from working on your hits. forexample, you can block a worker who is producing poor quality work. you can block up to 100,000 workers.",
	"Method": "CreateWorkerBlockResult createWorkerBlock(CreateWorkerBlockRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateWorkerBlock(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.CreateContainerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateAppResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.modifyDBCluster",
	"Comment": "modify a setting for a db cluster. you can change one or more database configuration parameters by specifyingthese parameters and the new values in the request.",
	"Method": "DBCluster modifyDBCluster(ModifyDBClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyDBCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateDeploymentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.H264QvbrSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxAverageBitrate() != null)\r\n        sb.append(\"MaxAverageBitrate: \").append(getMaxAverageBitrate()).append(\",\");\r\n    if (getQvbrQualityLevel() != null)\r\n        sb.append(\"QvbrQualityLevel: \").append(getQvbrQualityLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsVoipChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ListMigrationTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMigrationTaskSummaryList() != null)\r\n        sb.append(\"MigrationTaskSummaryList: \").append(getMigrationTaskSummaryList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.ChefConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getManageBerkshelf() != null)\r\n        sb.append(\"ManageBerkshelf: \").append(getManageBerkshelf()).append(\",\");\r\n    if (getBerkshelfVersion() != null)\r\n        sb.append(\"BerkshelfVersion: \").append(getBerkshelfVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CloneStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceStackId() != null)\r\n        sb.append(\"SourceStackId: \").append(getSourceStackId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getServiceRoleArn() != null)\r\n        sb.append(\"ServiceRoleArn: \").append(getServiceRoleArn()).append(\",\");\r\n    if (getDefaultInstanceProfileArn() != null)\r\n        sb.append(\"DefaultInstanceProfileArn: \").append(getDefaultInstanceProfileArn()).append(\",\");\r\n    if (getDefaultOs() != null)\r\n        sb.append(\"DefaultOs: \").append(getDefaultOs()).append(\",\");\r\n    if (getHostnameTheme() != null)\r\n        sb.append(\"HostnameTheme: \").append(getHostnameTheme()).append(\",\");\r\n    if (getDefaultAvailabilityZone() != null)\r\n        sb.append(\"DefaultAvailabilityZone: \").append(getDefaultAvailabilityZone()).append(\",\");\r\n    if (getDefaultSubnetId() != null)\r\n        sb.append(\"DefaultSubnetId: \").append(getDefaultSubnetId()).append(\",\");\r\n    if (getCustomJson() != null)\r\n        sb.append(\"CustomJson: \").append(getCustomJson()).append(\",\");\r\n    if (getConfigurationManager() != null)\r\n        sb.append(\"ConfigurationManager: \").append(getConfigurationManager()).append(\",\");\r\n    if (getChefConfiguration() != null)\r\n        sb.append(\"ChefConfiguration: \").append(getChefConfiguration()).append(\",\");\r\n    if (getUseCustomCookbooks() != null)\r\n        sb.append(\"UseCustomCookbooks: \").append(getUseCustomCookbooks()).append(\",\");\r\n    if (getUseOpsworksSecurityGroups() != null)\r\n        sb.append(\"UseOpsworksSecurityGroups: \").append(getUseOpsworksSecurityGroups()).append(\",\");\r\n    if (getCustomCookbooksSource() != null)\r\n        sb.append(\"CustomCookbooksSource: \").append(getCustomCookbooksSource()).append(\",\");\r\n    if (getDefaultSshKeyName() != null)\r\n        sb.append(\"DefaultSshKeyName: \").append(getDefaultSshKeyName()).append(\",\");\r\n    if (getClonePermissions() != null)\r\n        sb.append(\"ClonePermissions: \").append(getClonePermissions()).append(\",\");\r\n    if (getCloneAppIds() != null)\r\n        sb.append(\"CloneAppIds: \").append(getCloneAppIds()).append(\",\");\r\n    if (getDefaultRootDeviceType() != null)\r\n        sb.append(\"DefaultRootDeviceType: \").append(getDefaultRootDeviceType()).append(\",\");\r\n    if (getAgentVersion() != null)\r\n        sb.append(\"AgentVersion: \").append(getAgentVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DisassociateElasticIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getIconReference() != null)\r\n        sb.append(\"IconReference: \").append(getIconReference()).append(\",\");\r\n    if (getImageIconUrl() != null)\r\n        sb.append(\"ImageIconUrl: \").append(getImageIconUrl()).append(\",\");\r\n    if (getImageUrl() != null)\r\n        sb.append(\"ImageUrl: \").append(getImageUrl()).append(\",\");\r\n    if (getRawContent() != null)\r\n        sb.append(\"RawContent: \").append(getRawContent()).append(\",\");\r\n    if (getSilentPush() != null)\r\n        sb.append(\"SilentPush: \").append(getSilentPush()).append(\",\");\r\n    if (getSmallImageIconUrl() != null)\r\n        sb.append(\"SmallImageIconUrl: \").append(getSmallImageIconUrl()).append(\",\");\r\n    if (getSound() != null)\r\n        sb.append(\"Sound: \").append(getSound()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions()).append(\",\");\r\n    if (getTimeToLive() != null)\r\n        sb.append(\"TimeToLive: \").append(getTimeToLive()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeAgentVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getConfigurationManager() != null)\r\n        sb.append(\"ConfigurationManager: \").append(getConfigurationManager());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.Account.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getJoinedMethod() != null)\r\n        sb.append(\"JoinedMethod: \").append(getJoinedMethod()).append(\",\");\r\n    if (getJoinedTimestamp() != null)\r\n        sb.append(\"JoinedTimestamp: \").append(getJoinedTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ListTagsLogGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ScheduleAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionName() != null)\r\n        sb.append(\"ActionName: \").append(getActionName()).append(\",\");\r\n    if (getScheduleActionSettings() != null)\r\n        sb.append(\"ScheduleActionSettings: \").append(getScheduleActionSettings()).append(\",\");\r\n    if (getScheduleActionStartSettings() != null)\r\n        sb.append(\"ScheduleActionStartSettings: \").append(getScheduleActionStartSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsVoipSandboxChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBClusterParameterGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDBClusterParameterGroupArn() != null)\r\n        sb.append(\"DBClusterParameterGroupArn: \").append(getDBClusterParameterGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.waiters.DescribeMLModelsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeMLModelsResult apply(DescribeMLModelsRequest describeMLModelsRequest){\r\n    return client.describeMLModels(describeMLModelsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.ListChannelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.PutCorsPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AddressConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBodyOverride() != null)\r\n        sb.append(\"BodyOverride: \").append(getBodyOverride()).append(\",\");\r\n    if (getChannelType() != null)\r\n        sb.append(\"ChannelType: \").append(getChannelType()).append(\",\");\r\n    if (getContext() != null)\r\n        sb.append(\"Context: \").append(getContext()).append(\",\");\r\n    if (getRawContent() != null)\r\n        sb.append(\"RawContent: \").append(getRawContent()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions()).append(\",\");\r\n    if (getTitleOverride() != null)\r\n        sb.append(\"TitleOverride: \").append(getTitleOverride());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.UpdateFlowSourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.restoreDBClusterToPointInTime",
	"Comment": "restores a db cluster to an arbitrary point in time. users can restore to any point in time beforelatestrestorabletime for up to backupretentionperiod days. the target db cluster iscreated from the source db cluster with the same configuration as the original db cluster, except that the new dbcluster is created with the default db security group.this action only restores the db cluster, not the db instances for that db cluster. you must invoke thecreatedbinstance action to create db instances for the restored db cluster, specifying the identifier ofthe restored db cluster in dbclusteridentifier. you can create db instances only after therestoredbclustertopointintime action has completed and the db cluster is available.",
	"Method": "DBCluster restoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRestoreDBClusterToPointInTime(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ListInputSecurityGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputSecurityGroups() != null)\r\n        sb.append(\"InputSecurityGroups: \").append(getInputSecurityGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.StartFlowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ReservationPlan.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommitment() != null)\r\n        sb.append(\"Commitment: \").append(getCommitment()).append(\",\");\r\n    if (getExpiresAt() != null)\r\n        sb.append(\"ExpiresAt: \").append(getExpiresAt()).append(\",\");\r\n    if (getPurchasedAt() != null)\r\n        sb.append(\"PurchasedAt: \").append(getPurchasedAt()).append(\",\");\r\n    if (getRenewalType() != null)\r\n        sb.append(\"RenewalType: \").append(getRenewalType()).append(\",\");\r\n    if (getReservedSlots() != null)\r\n        sb.append(\"ReservedSlots: \").append(getReservedSlots()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.GetHostnameSuggestionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId()).append(\",\");\r\n    if (getHostname() != null)\r\n        sb.append(\"Hostname: \").append(getHostname());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.AmazonMQAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.HandshakeResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.ListedEntitlement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntitlementArn() != null)\r\n        sb.append(\"EntitlementArn: \").append(getEntitlementArn()).append(\",\");\r\n    if (getEntitlementName() != null)\r\n        sb.append(\"EntitlementName: \").append(getEntitlementName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.FileGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.predict",
	"Comment": "generates a prediction for the observation using the specified ml model.notenot all response parameters will be populated. whether a response parameter is populated depends on the type ofmodel requested.",
	"Method": "PredictResult predict(PredictRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePredict(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.RealtimeEndpointInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPeakRequestsPerSecond() != null)\r\n        sb.append(\"PeakRequestsPerSecond: \").append(getPeakRequestsPerSecond()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getEndpointUrl() != null)\r\n        sb.append(\"EndpointUrl: \").append(getEndpointUrl()).append(\",\");\r\n    if (getEndpointStatus() != null)\r\n        sb.append(\"EndpointStatus: \").append(getEndpointStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Eac3Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttenuationControl() != null)\r\n        sb.append(\"AttenuationControl: \").append(getAttenuationControl()).append(\",\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getBitstreamMode() != null)\r\n        sb.append(\"BitstreamMode: \").append(getBitstreamMode()).append(\",\");\r\n    if (getCodingMode() != null)\r\n        sb.append(\"CodingMode: \").append(getCodingMode()).append(\",\");\r\n    if (getDcFilter() != null)\r\n        sb.append(\"DcFilter: \").append(getDcFilter()).append(\",\");\r\n    if (getDialnorm() != null)\r\n        sb.append(\"Dialnorm: \").append(getDialnorm()).append(\",\");\r\n    if (getDrcLine() != null)\r\n        sb.append(\"DrcLine: \").append(getDrcLine()).append(\",\");\r\n    if (getDrcRf() != null)\r\n        sb.append(\"DrcRf: \").append(getDrcRf()).append(\",\");\r\n    if (getLfeControl() != null)\r\n        sb.append(\"LfeControl: \").append(getLfeControl()).append(\",\");\r\n    if (getLfeFilter() != null)\r\n        sb.append(\"LfeFilter: \").append(getLfeFilter()).append(\",\");\r\n    if (getLoRoCenterMixLevel() != null)\r\n        sb.append(\"LoRoCenterMixLevel: \").append(getLoRoCenterMixLevel()).append(\",\");\r\n    if (getLoRoSurroundMixLevel() != null)\r\n        sb.append(\"LoRoSurroundMixLevel: \").append(getLoRoSurroundMixLevel()).append(\",\");\r\n    if (getLtRtCenterMixLevel() != null)\r\n        sb.append(\"LtRtCenterMixLevel: \").append(getLtRtCenterMixLevel()).append(\",\");\r\n    if (getLtRtSurroundMixLevel() != null)\r\n        sb.append(\"LtRtSurroundMixLevel: \").append(getLtRtSurroundMixLevel()).append(\",\");\r\n    if (getMetadataControl() != null)\r\n        sb.append(\"MetadataControl: \").append(getMetadataControl()).append(\",\");\r\n    if (getPassthroughControl() != null)\r\n        sb.append(\"PassthroughControl: \").append(getPassthroughControl()).append(\",\");\r\n    if (getPhaseControl() != null)\r\n        sb.append(\"PhaseControl: \").append(getPhaseControl()).append(\",\");\r\n    if (getStereoDownmix() != null)\r\n        sb.append(\"StereoDownmix: \").append(getStereoDownmix()).append(\",\");\r\n    if (getSurroundExMode() != null)\r\n        sb.append(\"SurroundExMode: \").append(getSurroundExMode()).append(\",\");\r\n    if (getSurroundMode() != null)\r\n        sb.append(\"SurroundMode: \").append(getSurroundMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeDBInstances",
	"Comment": "returns information about provisioned instances. this api supports pagination.",
	"Method": "DescribeDBInstancesResult describeDBInstances(DescribeDBInstancesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBInstances(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.model.UsageRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getCustomerIdentifier() != null)\r\n        sb.append(\"CustomerIdentifier: \").append(getCustomerIdentifier()).append(\",\");\r\n    if (getDimension() != null)\r\n        sb.append(\"Dimension: \").append(getDimension()).append(\",\");\r\n    if (getQuantity() != null)\r\n        sb.append(\"Quantity: \").append(getQuantity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.AddTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.StopChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getEgressEndpoints() != null)\r\n        sb.append(\"EgressEndpoints: \").append(getEgressEndpoints()).append(\",\");\r\n    if (getEncoderSettings() != null)\r\n        sb.append(\"EncoderSettings: \").append(getEncoderSettings()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getInputAttachments() != null)\r\n        sb.append(\"InputAttachments: \").append(getInputAttachments()).append(\",\");\r\n    if (getInputSpecification() != null)\r\n        sb.append(\"InputSpecification: \").append(getInputSpecification()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPipelinesRunningCount() != null)\r\n        sb.append(\"PipelinesRunningCount: \").append(getPipelinesRunningCount()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.TeletextSourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageNumber() != null)\r\n        sb.append(\"PageNumber: \").append(getPageNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte20PlusEmbeddedDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CmafGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBaseUrl() != null)\r\n        sb.append(\"BaseUrl: \").append(getBaseUrl()).append(\",\");\r\n    if (getClientCache() != null)\r\n        sb.append(\"ClientCache: \").append(getClientCache()).append(\",\");\r\n    if (getCodecSpecification() != null)\r\n        sb.append(\"CodecSpecification: \").append(getCodecSpecification()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getFragmentLength() != null)\r\n        sb.append(\"FragmentLength: \").append(getFragmentLength()).append(\",\");\r\n    if (getManifestCompression() != null)\r\n        sb.append(\"ManifestCompression: \").append(getManifestCompression()).append(\",\");\r\n    if (getManifestDurationFormat() != null)\r\n        sb.append(\"ManifestDurationFormat: \").append(getManifestDurationFormat()).append(\",\");\r\n    if (getMinBufferTime() != null)\r\n        sb.append(\"MinBufferTime: \").append(getMinBufferTime()).append(\",\");\r\n    if (getMinFinalSegmentLength() != null)\r\n        sb.append(\"MinFinalSegmentLength: \").append(getMinFinalSegmentLength()).append(\",\");\r\n    if (getSegmentControl() != null)\r\n        sb.append(\"SegmentControl: \").append(getSegmentControl()).append(\",\");\r\n    if (getSegmentLength() != null)\r\n        sb.append(\"SegmentLength: \").append(getSegmentLength()).append(\",\");\r\n    if (getStreamInfResolution() != null)\r\n        sb.append(\"StreamInfResolution: \").append(getStreamInfResolution()).append(\",\");\r\n    if (getWriteDashManifest() != null)\r\n        sb.append(\"WriteDashManifest: \").append(getWriteDashManifest()).append(\",\");\r\n    if (getWriteHlsManifest() != null)\r\n        sb.append(\"WriteHlsManifest: \").append(getWriteHlsManifest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AncillarySourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceAncillaryChannelNumber() != null)\r\n        sb.append(\"SourceAncillaryChannelNumber: \").append(getSourceAncillaryChannelNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ExportTaskStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.ListMemberAccountsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DashIsoGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBaseUrl() != null)\r\n        sb.append(\"BaseUrl: \").append(getBaseUrl()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getFragmentLength() != null)\r\n        sb.append(\"FragmentLength: \").append(getFragmentLength()).append(\",\");\r\n    if (getHbbtvCompliance() != null)\r\n        sb.append(\"HbbtvCompliance: \").append(getHbbtvCompliance()).append(\",\");\r\n    if (getMinBufferTime() != null)\r\n        sb.append(\"MinBufferTime: \").append(getMinBufferTime()).append(\",\");\r\n    if (getSegmentControl() != null)\r\n        sb.append(\"SegmentControl: \").append(getSegmentControl()).append(\",\");\r\n    if (getSegmentLength() != null)\r\n        sb.append(\"SegmentLength: \").append(getSegmentLength()).append(\",\");\r\n    if (getWriteSegmentTimelineInRepresentation() != null)\r\n        sb.append(\"WriteSegmentTimelineInRepresentation: \").append(getWriteSegmentTimelineInRepresentation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.describeBatchPredictions",
	"Comment": "returns a list of batchprediction operations that match the search criteria in the request.",
	"Method": "DescribeBatchPredictionsResult describeBatchPredictions(DescribeBatchPredictionsRequest request,DescribeBatchPredictionsResult describeBatchPredictions){\r\n    return describeBatchPredictions(new DescribeBatchPredictionsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListQualificationTypesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumResults() != null)\r\n        sb.append(\"NumResults: \").append(getNumResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getQualificationTypes() != null)\r\n        sb.append(\"QualificationTypes: \").append(getQualificationTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribeAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DvbSubDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlignment() != null)\r\n        sb.append(\"Alignment: \").append(getAlignment()).append(\",\");\r\n    if (getBackgroundColor() != null)\r\n        sb.append(\"BackgroundColor: \").append(getBackgroundColor()).append(\",\");\r\n    if (getBackgroundOpacity() != null)\r\n        sb.append(\"BackgroundOpacity: \").append(getBackgroundOpacity()).append(\",\");\r\n    if (getFontColor() != null)\r\n        sb.append(\"FontColor: \").append(getFontColor()).append(\",\");\r\n    if (getFontOpacity() != null)\r\n        sb.append(\"FontOpacity: \").append(getFontOpacity()).append(\",\");\r\n    if (getFontResolution() != null)\r\n        sb.append(\"FontResolution: \").append(getFontResolution()).append(\",\");\r\n    if (getFontSize() != null)\r\n        sb.append(\"FontSize: \").append(getFontSize()).append(\",\");\r\n    if (getOutlineColor() != null)\r\n        sb.append(\"OutlineColor: \").append(getOutlineColor()).append(\",\");\r\n    if (getOutlineSize() != null)\r\n        sb.append(\"OutlineSize: \").append(getOutlineSize()).append(\",\");\r\n    if (getShadowColor() != null)\r\n        sb.append(\"ShadowColor: \").append(getShadowColor()).append(\",\");\r\n    if (getShadowOpacity() != null)\r\n        sb.append(\"ShadowOpacity: \").append(getShadowOpacity()).append(\",\");\r\n    if (getShadowXOffset() != null)\r\n        sb.append(\"ShadowXOffset: \").append(getShadowXOffset()).append(\",\");\r\n    if (getShadowYOffset() != null)\r\n        sb.append(\"ShadowYOffset: \").append(getShadowYOffset()).append(\",\");\r\n    if (getTeletextSpacing() != null)\r\n        sb.append(\"TeletextSpacing: \").append(getTeletextSpacing()).append(\",\");\r\n    if (getXPosition() != null)\r\n        sb.append(\"XPosition: \").append(getXPosition()).append(\",\");\r\n    if (getYPosition() != null)\r\n        sb.append(\"YPosition: \").append(getYPosition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DeleteTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DisassociateCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte35ReturnToNetworkScheduleActionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpliceEventId() != null)\r\n        sb.append(\"SpliceEventId: \").append(getSpliceEventId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.CreateBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackup() != null)\r\n        sb.append(\"Backup: \").append(getBackup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.RDSDatabaseCredentials.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(getPassword());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.AWSMediaStoreClient.getContainerPolicy",
	"Comment": "retrieves the access policy for the specified container. for information about the data that is included in anaccess policy, see the aws identity and access managementuser guide.",
	"Method": "GetContainerPolicyResult getContainerPolicy(GetContainerPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetContainerPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivityResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCampaignId() != null)\r\n        sb.append(\"CampaignId: \").append(getCampaignId()).append(\",\");\r\n    if (getEnd() != null)\r\n        sb.append(\"End: \").append(getEnd()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getResult() != null)\r\n        sb.append(\"Result: \").append(getResult()).append(\",\");\r\n    if (getScheduledStart() != null)\r\n        sb.append(\"ScheduledStart: \").append(getScheduledStart()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getSuccessfulEndpointCount() != null)\r\n        sb.append(\"SuccessfulEndpointCount: \").append(getSuccessfulEndpointCount()).append(\",\");\r\n    if (getTimezonesCompletedCount() != null)\r\n        sb.append(\"TimezonesCompletedCount: \").append(getTimezonesCompletedCount()).append(\",\");\r\n    if (getTimezonesTotalCount() != null)\r\n        sb.append(\"TimezonesTotalCount: \").append(getTimezonesTotalCount()).append(\",\");\r\n    if (getTotalEndpointCount() != null)\r\n        sb.append(\"TotalEndpointCount: \").append(getTotalEndpointCount()).append(\",\");\r\n    if (getTreatmentId() != null)\r\n        sb.append(\"TreatmentId: \").append(getTreatmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeEcsClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEcsClusterArns() != null)\r\n        sb.append(\"EcsClusterArns: \").append(getEcsClusterArns()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DeleteBackupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonmturkasync using the current builder configuration.",
	"Method": "AmazonMTurkAsync build(AwsAsyncClientParams params){\r\n    return new AmazonMTurkAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.ExportProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.InputTemplate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioSelectorGroups() != null)\r\n        sb.append(\"AudioSelectorGroups: \").append(getAudioSelectorGroups()).append(\",\");\r\n    if (getAudioSelectors() != null)\r\n        sb.append(\"AudioSelectors: \").append(getAudioSelectors()).append(\",\");\r\n    if (getCaptionSelectors() != null)\r\n        sb.append(\"CaptionSelectors: \").append(getCaptionSelectors()).append(\",\");\r\n    if (getDeblockFilter() != null)\r\n        sb.append(\"DeblockFilter: \").append(getDeblockFilter()).append(\",\");\r\n    if (getDenoiseFilter() != null)\r\n        sb.append(\"DenoiseFilter: \").append(getDenoiseFilter()).append(\",\");\r\n    if (getFilterEnable() != null)\r\n        sb.append(\"FilterEnable: \").append(getFilterEnable()).append(\",\");\r\n    if (getFilterStrength() != null)\r\n        sb.append(\"FilterStrength: \").append(getFilterStrength()).append(\",\");\r\n    if (getImageInserter() != null)\r\n        sb.append(\"ImageInserter: \").append(getImageInserter()).append(\",\");\r\n    if (getInputClippings() != null)\r\n        sb.append(\"InputClippings: \").append(getInputClippings()).append(\",\");\r\n    if (getProgramNumber() != null)\r\n        sb.append(\"ProgramNumber: \").append(getProgramNumber()).append(\",\");\r\n    if (getPsiControl() != null)\r\n        sb.append(\"PsiControl: \").append(getPsiControl()).append(\",\");\r\n    if (getTimecodeSource() != null)\r\n        sb.append(\"TimecodeSource: \").append(getTimecodeSource()).append(\",\");\r\n    if (getVideoSelector() != null)\r\n        sb.append(\"VideoSelector: \").append(getVideoSelector());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.UpdateNotificationSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITTypeId() != null)\r\n        sb.append(\"HITTypeId: \").append(getHITTypeId()).append(\",\");\r\n    if (getNotification() != null)\r\n        sb.append(\"Notification: \").append(getNotification()).append(\",\");\r\n    if (getActive() != null)\r\n        sb.append(\"Active: \").append(getActive());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.setNonProxyHosts",
	"Comment": "set the optional hosts the client will access without goingthrough the proxy.",
	"Method": "void setNonProxyHosts(String nonProxyHosts){\r\n    this.nonProxyHosts = nonProxyHosts;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeLogGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroups() != null)\r\n        sb.append(\"LogGroups: \").append(getLogGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetFileUploadURLRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssignmentId() != null)\r\n        sb.append(\"AssignmentId: \").append(getAssignmentId()).append(\",\");\r\n    if (getQuestionIdentifier() != null)\r\n        sb.append(\"QuestionIdentifier: \").append(getQuestionIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ExportTaskExecutionInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getCompletionTime() != null)\r\n        sb.append(\"CompletionTime: \").append(getCompletionTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AbstractAmazonMachineLearningAsync.describeMLModelsAsync",
	"Comment": "simplified method form for invoking the describemlmodels operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeMLModelsResult> describeMLModelsAsync(DescribeMLModelsRequest request,java.util.concurrent.Future<DescribeMLModelsResult> describeMLModelsAsync,DescribeMLModelsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeMLModelsRequest, DescribeMLModelsResult> asyncHandler,java.util.concurrent.Future<DescribeMLModelsResult> describeMLModelsAsync,java.util.concurrent.Future<DescribeMLModelsResult> describeMLModelsAsync,com.amazonaws.handlers.AsyncHandler<DescribeMLModelsRequest, DescribeMLModelsResult> asyncHandler){\r\n    return describeMLModelsAsync(new DescribeMLModelsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.AWSMediaStoreClient.deleteContainer",
	"Comment": "deletes the specified container. before you make a deletecontainer request, delete any objects inthe container or in any folders in the container. you can delete only empty containers.",
	"Method": "DeleteContainerResult deleteContainer(DeleteContainerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteContainer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.MotionImageInsertionFramerate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFramerateDenominator() != null)\r\n        sb.append(\"FramerateDenominator: \").append(getFramerateDenominator()).append(\",\");\r\n    if (getFramerateNumerator() != null)\r\n        sb.append(\"FramerateNumerator: \").append(getFramerateNumerator());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DeleteChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getEgressEndpoints() != null)\r\n        sb.append(\"EgressEndpoints: \").append(getEgressEndpoints()).append(\",\");\r\n    if (getEncoderSettings() != null)\r\n        sb.append(\"EncoderSettings: \").append(getEncoderSettings()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getInputAttachments() != null)\r\n        sb.append(\"InputAttachments: \").append(getInputAttachments()).append(\",\");\r\n    if (getInputSpecification() != null)\r\n        sb.append(\"InputSpecification: \").append(getInputSpecification()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPipelinesRunningCount() != null)\r\n        sb.append(\"PipelinesRunningCount: \").append(getPipelinesRunningCount()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplaceentitlement.model.GetEntitlementsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProductCode() != null)\r\n        sb.append(\"ProductCode: \").append(getProductCode()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.BaseRequest.clone",
	"Comment": "creates a shallow clone of this request. explicitly does not clone the deepstructure of the request object.",
	"Method": "BaseRequest clone(){\r\n    try {\r\n        return (BaseRequest) super.clone();\r\n    } catch (CloneNotSupportedException e) {\r\n        throw new IllegalStateException(\"Got a CloneNotSupportedException from Object.clone() \" + \"even though we're Cloneable!\", e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.setProxyHost",
	"Comment": "sets the optional proxy host the client will connect through.",
	"Method": "void setProxyHost(String proxyHost){\r\n    this.proxyHost = proxyHost;\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.AWSMarketplaceMeteringClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmarketplacemetering using the current builder configuration.",
	"Method": "AWSMarketplaceMetering build(AwsSyncClientParams params){\r\n    return new AWSMarketplaceMeteringClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.SendTestEventNotificationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ListConfigurationRevisionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationId() != null)\r\n        sb.append(\"ConfigurationId: \").append(getConfigurationId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getRevisions() != null)\r\n        sb.append(\"Revisions: \").append(getRevisions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeDBClusterParameterGroups",
	"Comment": "returns a list of dbclusterparametergroup descriptions. if adbclusterparametergroupname parameter is specified, the list will contain only the description ofthe specified db cluster parameter group.",
	"Method": "DescribeDBClusterParameterGroupsResult describeDBClusterParameterGroups(DescribeDBClusterParameterGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBClusterParameterGroups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeregisterRdsDbInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRdsDbInstanceArn() != null)\r\n        sb.append(\"RdsDbInstanceArn: \").append(getRdsDbInstanceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.DashConfigurationForPut.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMpdLocation() != null)\r\n        sb.append(\"MpdLocation: \").append(getMpdLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.MoveAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getS3UrlPrefix() != null)\r\n        sb.append(\"S3UrlPrefix: \").append(getS3UrlPrefix()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getSegmentVersion() != null)\r\n        sb.append(\"SegmentVersion: \").append(getSegmentVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CreateOrganizationalUnitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParentId() != null)\r\n        sb.append(\"ParentId: \").append(getParentId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetVoiceChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeDBParameters",
	"Comment": "returns the detailed parameter list for a particular db parameter group.",
	"Method": "DescribeDBParametersResult describeDBParameters(DescribeDBParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.restoreDBClusterFromSnapshot",
	"Comment": "creates a new db cluster from a db snapshot or db cluster snapshot.if a db snapshot is specified, the target db cluster is created from the source db snapshot with a defaultconfiguration and default security group.if a db cluster snapshot is specified, the target db cluster is created from the source db cluster restore pointwith the same configuration as the original source db cluster, except that the new db cluster is created with thedefault security group.",
	"Method": "DBCluster restoreDBClusterFromSnapshot(RestoreDBClusterFromSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRestoreDBClusterFromSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.AWSMediaConvertAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.ListEntitlementsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeleteUserProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputChannelLevel.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGain() != null)\r\n        sb.append(\"Gain: \").append(getGain()).append(\",\");\r\n    if (getInputChannel() != null)\r\n        sb.append(\"InputChannel: \").append(getInputChannel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.putResourcePolicy",
	"Comment": "creates or updates a resource policy allowing other aws services to put log events to this account, such asamazon route 53. an account can have up to 10 resource policies per region.",
	"Method": "PutResourcePolicyResult putResourcePolicy(PutResourcePolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutResourcePolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.AWSMediaTailorAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmediatailorasync using the current builder configuration.",
	"Method": "AWSMediaTailorAsync build(AwsAsyncClientParams params){\r\n    return new AWSMediaTailorAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAdmChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getADMChannelResponse() != null)\r\n        sb.append(\"ADMChannelResponse: \").append(getADMChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateRealtimeEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeElasticLoadBalancersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getLayerIds() != null)\r\n        sb.append(\"LayerIds: \").append(getLayerIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacecommerceanalytics.AWSMarketplaceCommerceAnalyticsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.OutputDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPasswordParam() != null)\r\n        sb.append(\"PasswordParam: \").append(getPasswordParam()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte35SpliceInsert.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdAvailOffset() != null)\r\n        sb.append(\"AdAvailOffset: \").append(getAdAvailOffset()).append(\",\");\r\n    if (getNoRegionalBlackoutFlag() != null)\r\n        sb.append(\"NoRegionalBlackoutFlag: \").append(getNoRegionalBlackoutFlag()).append(\",\");\r\n    if (getWebDeliveryAllowedFlag() != null)\r\n        sb.append(\"WebDeliveryAllowedFlag: \").append(getWebDeliveryAllowedFlag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.EnableAWSServiceAccessRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServicePrincipal() != null)\r\n        sb.append(\"ServicePrincipal: \").append(getServicePrincipal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMClient.describeEvents",
	"Comment": "describes events for a specified server. results are ordered by time, with newest events first.this operation is synchronous.a resourcenotfoundexception is thrown when the server does not exist. avalidationexception is raised when parameters of the request are not valid.",
	"Method": "DescribeEventsResult describeEvents(DescribeEventsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEvents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AbstractAWSLogsAsync.describeLogGroupsAsync",
	"Comment": "simplified method form for invoking the describeloggroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeLogGroupsResult> describeLogGroupsAsync(DescribeLogGroupsRequest request,java.util.concurrent.Future<DescribeLogGroupsResult> describeLogGroupsAsync,DescribeLogGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeLogGroupsRequest, DescribeLogGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeLogGroupsResult> describeLogGroupsAsync,java.util.concurrent.Future<DescribeLogGroupsResult> describeLogGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeLogGroupsRequest, DescribeLogGroupsResult> asyncHandler){\r\n    return describeLogGroupsAsync(new DescribeLogGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeValidDBInstanceModificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UpdateLoadBalancerAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.RestoreDBClusterFromSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ListReservationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodec() != null)\r\n        sb.append(\"Codec: \").append(getCodec()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getMaximumBitrate() != null)\r\n        sb.append(\"MaximumBitrate: \").append(getMaximumBitrate()).append(\",\");\r\n    if (getMaximumFramerate() != null)\r\n        sb.append(\"MaximumFramerate: \").append(getMaximumFramerate()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getResolution() != null)\r\n        sb.append(\"Resolution: \").append(getResolution()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getSpecialFeature() != null)\r\n        sb.append(\"SpecialFeature: \").append(getSpecialFeature()).append(\",\");\r\n    if (getVideoQuality() != null)\r\n        sb.append(\"VideoQuality: \").append(getVideoQuality());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Output.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioDescriptionNames() != null)\r\n        sb.append(\"AudioDescriptionNames: \").append(getAudioDescriptionNames()).append(\",\");\r\n    if (getCaptionDescriptionNames() != null)\r\n        sb.append(\"CaptionDescriptionNames: \").append(getCaptionDescriptionNames()).append(\",\");\r\n    if (getOutputName() != null)\r\n        sb.append(\"OutputName: \").append(getOutputName()).append(\",\");\r\n    if (getOutputSettings() != null)\r\n        sb.append(\"OutputSettings: \").append(getOutputSettings()).append(\",\");\r\n    if (getVideoDescriptionName() != null)\r\n        sb.append(\"VideoDescriptionName: \").append(getVideoDescriptionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.PutPlaybackConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdDecisionServerUrl() != null)\r\n        sb.append(\"AdDecisionServerUrl: \").append(getAdDecisionServerUrl()).append(\",\");\r\n    if (getCdnConfiguration() != null)\r\n        sb.append(\"CdnConfiguration: \").append(getCdnConfiguration()).append(\",\");\r\n    if (getDashConfiguration() != null)\r\n        sb.append(\"DashConfiguration: \").append(getDashConfiguration()).append(\",\");\r\n    if (getHlsConfiguration() != null)\r\n        sb.append(\"HlsConfiguration: \").append(getHlsConfiguration()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPlaybackEndpointPrefix() != null)\r\n        sb.append(\"PlaybackEndpointPrefix: \").append(getPlaybackEndpointPrefix()).append(\",\");\r\n    if (getSessionInitializationEndpointPrefix() != null)\r\n        sb.append(\"SessionInitializationEndpointPrefix: \").append(getSessionInitializationEndpointPrefix()).append(\",\");\r\n    if (getSlateAdUrl() != null)\r\n        sb.append(\"SlateAdUrl: \").append(getSlateAdUrl()).append(\",\");\r\n    if (getTranscodeProfileName() != null)\r\n        sb.append(\"TranscodeProfileName: \").append(getTranscodeProfileName()).append(\",\");\r\n    if (getVideoContentSourceUrl() != null)\r\n        sb.append(\"VideoContentSourceUrl: \").append(getVideoContentSourceUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.RebootBrokerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.AWSMediaTailorClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmediatailor using the current builder configuration.",
	"Method": "AWSMediaTailor build(AwsSyncClientParams params){\r\n    return new AWSMediaTailorClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.MsSmoothGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAcquisitionPointId() != null)\r\n        sb.append(\"AcquisitionPointId: \").append(getAcquisitionPointId()).append(\",\");\r\n    if (getAudioOnlyTimecodeControl() != null)\r\n        sb.append(\"AudioOnlyTimecodeControl: \").append(getAudioOnlyTimecodeControl()).append(\",\");\r\n    if (getCertificateMode() != null)\r\n        sb.append(\"CertificateMode: \").append(getCertificateMode()).append(\",\");\r\n    if (getConnectionRetryInterval() != null)\r\n        sb.append(\"ConnectionRetryInterval: \").append(getConnectionRetryInterval()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getEventId() != null)\r\n        sb.append(\"EventId: \").append(getEventId()).append(\",\");\r\n    if (getEventIdMode() != null)\r\n        sb.append(\"EventIdMode: \").append(getEventIdMode()).append(\",\");\r\n    if (getEventStopBehavior() != null)\r\n        sb.append(\"EventStopBehavior: \").append(getEventStopBehavior()).append(\",\");\r\n    if (getFilecacheDuration() != null)\r\n        sb.append(\"FilecacheDuration: \").append(getFilecacheDuration()).append(\",\");\r\n    if (getFragmentLength() != null)\r\n        sb.append(\"FragmentLength: \").append(getFragmentLength()).append(\",\");\r\n    if (getInputLossAction() != null)\r\n        sb.append(\"InputLossAction: \").append(getInputLossAction()).append(\",\");\r\n    if (getNumRetries() != null)\r\n        sb.append(\"NumRetries: \").append(getNumRetries()).append(\",\");\r\n    if (getRestartDelay() != null)\r\n        sb.append(\"RestartDelay: \").append(getRestartDelay()).append(\",\");\r\n    if (getSegmentationMode() != null)\r\n        sb.append(\"SegmentationMode: \").append(getSegmentationMode()).append(\",\");\r\n    if (getSendDelayMs() != null)\r\n        sb.append(\"SendDelayMs: \").append(getSendDelayMs()).append(\",\");\r\n    if (getSparseTrackType() != null)\r\n        sb.append(\"SparseTrackType: \").append(getSparseTrackType()).append(\",\");\r\n    if (getStreamManifestBehavior() != null)\r\n        sb.append(\"StreamManifestBehavior: \").append(getStreamManifestBehavior()).append(\",\");\r\n    if (getTimestampOffset() != null)\r\n        sb.append(\"TimestampOffset: \").append(getTimestampOffset()).append(\",\");\r\n    if (getTimestampOffsetMode() != null)\r\n        sb.append(\"TimestampOffsetMode: \").append(getTimestampOffsetMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.EbsBlockDevice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getVolumeSize() != null)\r\n        sb.append(\"VolumeSize: \").append(getVolumeSize()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getDeleteOnTermination() != null)\r\n        sb.append(\"DeleteOnTermination: \").append(getDeleteOnTermination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.SetSourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDecryption() != null)\r\n        sb.append(\"Decryption: \").append(getDecryption()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEntitlementArn() != null)\r\n        sb.append(\"EntitlementArn: \").append(getEntitlementArn()).append(\",\");\r\n    if (getIngestPort() != null)\r\n        sb.append(\"IngestPort: \").append(getIngestPort()).append(\",\");\r\n    if (getMaxBitrate() != null)\r\n        sb.append(\"MaxBitrate: \").append(getMaxBitrate()).append(\",\");\r\n    if (getMaxLatency() != null)\r\n        sb.append(\"MaxLatency: \").append(getMaxLatency()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId()).append(\",\");\r\n    if (getWhitelistCidr() != null)\r\n        sb.append(\"WhitelistCidr: \").append(getWhitelistCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.UpdateJobTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobTemplate() != null)\r\n        sb.append(\"JobTemplate: \").append(getJobTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getChannelType() != null)\r\n        sb.append(\"ChannelType: \").append(getChannelType()).append(\",\");\r\n    if (getDemographic() != null)\r\n        sb.append(\"Demographic: \").append(getDemographic()).append(\",\");\r\n    if (getEffectiveDate() != null)\r\n        sb.append(\"EffectiveDate: \").append(getEffectiveDate()).append(\",\");\r\n    if (getEndpointStatus() != null)\r\n        sb.append(\"EndpointStatus: \").append(getEndpointStatus()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getMetrics() != null)\r\n        sb.append(\"Metrics: \").append(getMetrics()).append(\",\");\r\n    if (getOptOut() != null)\r\n        sb.append(\"OptOut: \").append(getOptOut()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.PendingMaintenanceAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getAutoAppliedAfterDate() != null)\r\n        sb.append(\"AutoAppliedAfterDate: \").append(getAutoAppliedAfterDate()).append(\",\");\r\n    if (getForcedApplyDate() != null)\r\n        sb.append(\"ForcedApplyDate: \").append(getForcedApplyDate()).append(\",\");\r\n    if (getOptInStatus() != null)\r\n        sb.append(\"OptInStatus: \").append(getOptInStatus()).append(\",\");\r\n    if (getCurrentApplyDate() != null)\r\n        sb.append(\"CurrentApplyDate: \").append(getCurrentApplyDate()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.ListTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.CdnConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdSegmentUrlPrefix() != null)\r\n        sb.append(\"AdSegmentUrlPrefix: \").append(getAdSegmentUrlPrefix()).append(\",\");\r\n    if (getContentSegmentUrlPrefix() != null)\r\n        sb.append(\"ContentSegmentUrlPrefix: \").append(getContentSegmentUrlPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.internal.config.ApiGatewayClientConfiguration.connectionConfiguration",
	"Comment": "sets various options related to the http connection pool and connections.",
	"Method": "ApiGatewayClientConfiguration connectionConfiguration(ConnectionConfiguration connectionConfiguration){\r\n    setConnectionConfiguration(connectionConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.AWSPIClientBuilder.build",
	"Comment": "construct a synchronous implementation of awspi using the current builder configuration.",
	"Method": "AWSPI build(AwsSyncClientParams params){\r\n    return new AWSPIClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.GetCorsPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCorsPolicy() != null)\r\n        sb.append(\"CorsPolicy: \").append(getCorsPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.waiters.DescribeDataSourcesFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeDataSourcesResult apply(DescribeDataSourcesRequest describeDataSourcesRequest){\r\n    return client.describeDataSources(describeDataSourcesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.AWSOpsWorksClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ListCreatedArtifactsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateWorkerBlockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ImportMigrationTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.AmazonMacieAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonmacieasync using the current builder configuration.",
	"Method": "AmazonMacieAsync build(AwsAsyncClientParams params){\r\n    return new AmazonMacieAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte35TimeSignalScheduleActionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScte35Descriptors() != null)\r\n        sb.append(\"Scte35Descriptors: \").append(getScte35Descriptors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.CreateProgressUpdateStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStreamName() != null)\r\n        sb.append(\"ProgressUpdateStreamName: \").append(getProgressUpdateStreamName()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonneptuneasync using the current builder configuration.",
	"Method": "AmazonNeptuneAsync build(AwsAsyncClientParams params){\r\n    return new AmazonNeptuneAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListAssignmentsForHITResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getNumResults() != null)\r\n        sb.append(\"NumResults: \").append(getNumResults()).append(\",\");\r\n    if (getAssignments() != null)\r\n        sb.append(\"Assignments: \").append(getAssignments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DeleteReservationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservationId() != null)\r\n        sb.append(\"ReservationId: \").append(getReservationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.CreateFlowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getEntitlements() != null)\r\n        sb.append(\"Entitlements: \").append(getEntitlements()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getLogStreamNames() != null)\r\n        sb.append(\"LogStreamNames: \").append(getLogStreamNames()).append(\",\");\r\n    if (getLogStreamNamePrefix() != null)\r\n        sb.append(\"LogStreamNamePrefix: \").append(getLogStreamNamePrefix()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getFilterPattern() != null)\r\n        sb.append(\"FilterPattern: \").append(getFilterPattern()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getInterleaved() != null)\r\n        sb.append(\"Interleaved: \").append(getInterleaved());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.ClassificationTypeUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOneTime() != null)\r\n        sb.append(\"OneTime: \").append(getOneTime()).append(\",\");\r\n    if (getContinuous() != null)\r\n        sb.append(\"Continuous: \").append(getContinuous());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.MsSmoothEncryptionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpekeKeyProvider() != null)\r\n        sb.append(\"SpekeKeyProvider: \").append(getSpekeKeyProvider());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateLayerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.putDestinationPolicy",
	"Comment": "creates or updates an access policy associated with an existing destination. an access policy is an iam policy document that isused to authorize claims to register a subscription filter against a given destination.",
	"Method": "PutDestinationPolicyResult putDestinationPolicy(PutDestinationPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutDestinationPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEmailChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateMyUserProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.Policy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicySummary() != null)\r\n        sb.append(\"PolicySummary: \").append(getPolicySummary()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ValidationError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElementPath() != null)\r\n        sb.append(\"ElementPath: \").append(getElementPath()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.CreateExportTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskName() != null)\r\n        sb.append(\"TaskName: \").append(getTaskName()).append(\",\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getLogStreamNamePrefix() != null)\r\n        sb.append(\"LogStreamNamePrefix: \").append(getLogStreamNamePrefix()).append(\",\");\r\n    if (getFrom() != null)\r\n        sb.append(\"From: \").append(getFrom()).append(\",\");\r\n    if (getTo() != null)\r\n        sb.append(\"To: \").append(getTo()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getDestinationPrefix() != null)\r\n        sb.append(\"DestinationPrefix: \").append(getDestinationPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RegisterInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getHostname() != null)\r\n        sb.append(\"Hostname: \").append(getHostname()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp()).append(\",\");\r\n    if (getPrivateIp() != null)\r\n        sb.append(\"PrivateIp: \").append(getPrivateIp()).append(\",\");\r\n    if (getRsaPublicKey() != null)\r\n        sb.append(\"RsaPublicKey: \").append(getRsaPublicKey()).append(\",\");\r\n    if (getRsaPublicKeyFingerprint() != null)\r\n        sb.append(\"RsaPublicKeyFingerprint: \").append(getRsaPublicKeyFingerprint()).append(\",\");\r\n    if (getInstanceIdentity() != null)\r\n        sb.append(\"InstanceIdentity: \").append(getInstanceIdentity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getDefaultAuthenticationMethod() != null)\r\n        sb.append(\"DefaultAuthenticationMethod: \").append(getDefaultAuthenticationMethod()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getHasTokenKey() != null)\r\n        sb.append(\"HasTokenKey: \").append(getHasTokenKey()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteBatchPredictionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBatchPredictionId() != null)\r\n        sb.append(\"BatchPredictionId: \").append(getBatchPredictionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteResourcePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.isPreemptiveBasicProxyAuth",
	"Comment": "returns whether to attempt to authenticate preemptively against proxy servers using basicauthentication.",
	"Method": "Optional<Boolean> isPreemptiveBasicProxyAuth(){\r\n    return Optional.ofNullable(preemptiveBasicProxyAuth);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.AWSMediaStoreDataAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CreateAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getAccountName() != null)\r\n        sb.append(\"AccountName: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRoleName() != null)\r\n        sb.append(\"RoleName: \").append(getRoleName()).append(\",\");\r\n    if (getIamUserAccessToBilling() != null)\r\n        sb.append(\"IamUserAccessToBilling: \").append(getIamUserAccessToBilling());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.describeExportTasks",
	"Comment": "lists the specified export tasks. you can list all your export tasks or filter the results based on task id ortask status.",
	"Method": "DescribeExportTasksResult describeExportTasks(DescribeExportTasksRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeExportTasks(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.NotificationSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getTransport() != null)\r\n        sb.append(\"Transport: \").append(getTransport()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getEventTypes() != null)\r\n        sb.append(\"EventTypes: \").append(getEventTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UserProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSshUsername() != null)\r\n        sb.append(\"SshUsername: \").append(getSshUsername()).append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey()).append(\",\");\r\n    if (getAllowSelfManagement() != null)\r\n        sb.append(\"AllowSelfManagement: \").append(getAllowSelfManagement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribeOrganizationalUnitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationalUnitId() != null)\r\n        sb.append(\"OrganizationalUnitId: \").append(getOrganizationalUnitId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DeleteBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.UpdateServerEngineAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServer() != null)\r\n        sb.append(\"Server: \").append(getServer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.PutPlaybackConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdDecisionServerUrl() != null)\r\n        sb.append(\"AdDecisionServerUrl: \").append(getAdDecisionServerUrl()).append(\",\");\r\n    if (getCdnConfiguration() != null)\r\n        sb.append(\"CdnConfiguration: \").append(getCdnConfiguration()).append(\",\");\r\n    if (getDashConfiguration() != null)\r\n        sb.append(\"DashConfiguration: \").append(getDashConfiguration()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSlateAdUrl() != null)\r\n        sb.append(\"SlateAdUrl: \").append(getSlateAdUrl()).append(\",\");\r\n    if (getTranscodeProfileName() != null)\r\n        sb.append(\"TranscodeProfileName: \").append(getTranscodeProfileName()).append(\",\");\r\n    if (getVideoContentSourceUrl() != null)\r\n        sb.append(\"VideoContentSourceUrl: \").append(getVideoContentSourceUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ListConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.Configurations.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrent() != null)\r\n        sb.append(\"Current: \").append(getCurrent()).append(\",\");\r\n    if (getHistory() != null)\r\n        sb.append(\"History: \").append(getHistory()).append(\",\");\r\n    if (getPending() != null)\r\n        sb.append(\"Pending: \").append(getPending());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.HlsWebdavSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionRetryInterval() != null)\r\n        sb.append(\"ConnectionRetryInterval: \").append(getConnectionRetryInterval()).append(\",\");\r\n    if (getFilecacheDuration() != null)\r\n        sb.append(\"FilecacheDuration: \").append(getFilecacheDuration()).append(\",\");\r\n    if (getHttpTransferMode() != null)\r\n        sb.append(\"HttpTransferMode: \").append(getHttpTransferMode()).append(\",\");\r\n    if (getNumRetries() != null)\r\n        sb.append(\"NumRetries: \").append(getNumRetries()).append(\",\");\r\n    if (getRestartDelay() != null)\r\n        sb.append(\"RestartDelay: \").append(getRestartDelay());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCompletedPieces() != null)\r\n        sb.append(\"CompletedPieces: \").append(getCompletedPieces()).append(\",\");\r\n    if (getCompletionDate() != null)\r\n        sb.append(\"CompletionDate: \").append(getCompletionDate()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(getDefinition()).append(\",\");\r\n    if (getFailedPieces() != null)\r\n        sb.append(\"FailedPieces: \").append(getFailedPieces()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getTotalFailures() != null)\r\n        sb.append(\"TotalFailures: \").append(getTotalFailures()).append(\",\");\r\n    if (getTotalPieces() != null)\r\n        sb.append(\"TotalPieces: \").append(getTotalPieces()).append(\",\");\r\n    if (getTotalProcessed() != null)\r\n        sb.append(\"TotalProcessed: \").append(getTotalProcessed()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.BlockDeviceMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeviceName() != null)\r\n        sb.append(\"DeviceName: \").append(getDeviceName()).append(\",\");\r\n    if (getNoDevice() != null)\r\n        sb.append(\"NoDevice: \").append(getNoDevice()).append(\",\");\r\n    if (getVirtualName() != null)\r\n        sb.append(\"VirtualName: \").append(getVirtualName()).append(\",\");\r\n    if (getEbs() != null)\r\n        sb.append(\"Ebs: \").append(getEbs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ArchiveContainerSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getM2tsSettings() != null)\r\n        sb.append(\"M2tsSettings: \").append(getM2tsSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateLayerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte27DestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.SccDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFramerate() != null)\r\n        sb.append(\"Framerate: \").append(getFramerate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.GetContainerPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectClient.describeFlow",
	"Comment": "displays the details of a flow. the response includes the flow arn, name, and availability zone, as well asdetails about the source, outputs, and entitlements.",
	"Method": "DescribeFlowResult describeFlow(DescribeFlowRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeFlow(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeDestinationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetAccountBalanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventsBatch.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.UpdateNotificationSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.GetHostnameSuggestionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteDestinationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationName() != null)\r\n        sb.append(\"DestinationName: \").append(getDestinationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DescribeNodeAssociationStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodeAssociationStatusToken() != null)\r\n        sb.append(\"NodeAssociationStatusToken: \").append(getNodeAssociationStatusToken()).append(\",\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.HlsInputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBandwidth() != null)\r\n        sb.append(\"Bandwidth: \").append(getBandwidth()).append(\",\");\r\n    if (getBufferSegments() != null)\r\n        sb.append(\"BufferSegments: \").append(getBufferSegments()).append(\",\");\r\n    if (getRetries() != null)\r\n        sb.append(\"Retries: \").append(getRetries()).append(\",\");\r\n    if (getRetryInterval() != null)\r\n        sb.append(\"RetryInterval: \").append(getRetryInterval());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListPoliciesForTargetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetAccountBalanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailableBalance() != null)\r\n        sb.append(\"AvailableBalance: \").append(getAvailableBalance()).append(\",\");\r\n    if (getOnHoldBalance() != null)\r\n        sb.append(\"OnHoldBalance: \").append(getOnHoldBalance());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.WeeklyStartTime.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDayOfWeek() != null)\r\n        sb.append(\"DayOfWeek: \").append(getDayOfWeek()).append(\",\");\r\n    if (getTimeOfDay() != null)\r\n        sb.append(\"TimeOfDay: \").append(getTimeOfDay()).append(\",\");\r\n    if (getTimeZone() != null)\r\n        sb.append(\"TimeZone: \").append(getTimeZone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutSubscriptionFilterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getFilterName() != null)\r\n        sb.append(\"FilterName: \").append(getFilterName()).append(\",\");\r\n    if (getFilterPattern() != null)\r\n        sb.append(\"FilterPattern: \").append(getFilterPattern()).append(\",\");\r\n    if (getDestinationArn() != null)\r\n        sb.append(\"DestinationArn: \").append(getDestinationArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getDistribution() != null)\r\n        sb.append(\"Distribution: \").append(getDistribution());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.RotateIngestEndpointCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsIngest() != null)\r\n        sb.append(\"HlsIngest: \").append(getHlsIngest()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateRealtimeEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getRealtimeEndpointInfo() != null)\r\n        sb.append(\"RealtimeEndpointInfo: \").append(getRealtimeEndpointInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.CreateBrokerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerArn() != null)\r\n        sb.append(\"BrokerArn: \").append(getBrokerArn()).append(\",\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetHITRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ListTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeOrderableDBInstanceOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getVpc() != null)\r\n        sb.append(\"Vpc: \").append(getVpc()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteSmsChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.CorsRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowedOrigins() != null)\r\n        sb.append(\"AllowedOrigins: \").append(getAllowedOrigins()).append(\",\");\r\n    if (getAllowedMethods() != null)\r\n        sb.append(\"AllowedMethods: \").append(getAllowedMethods()).append(\",\");\r\n    if (getAllowedHeaders() != null)\r\n        sb.append(\"AllowedHeaders: \").append(getAllowedHeaders()).append(\",\");\r\n    if (getMaxAgeSeconds() != null)\r\n        sb.append(\"MaxAgeSeconds: \").append(getMaxAgeSeconds()).append(\",\");\r\n    if (getExposeHeaders() != null)\r\n        sb.append(\"ExposeHeaders: \").append(getExposeHeaders());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ListJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOrder() != null)\r\n        sb.append(\"Order: \").append(getOrder()).append(\",\");\r\n    if (getQueue() != null)\r\n        sb.append(\"Queue: \").append(getQueue()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputSwitchScheduleActionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputAttachmentNameReference() != null)\r\n        sb.append(\"InputAttachmentNameReference: \").append(getInputAttachmentNameReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DetachPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListChildrenRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParentId() != null)\r\n        sb.append(\"ParentId: \").append(getParentId()).append(\",\");\r\n    if (getChildType() != null)\r\n        sb.append(\"ChildType: \").append(getChildType()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBClusterOptionGroupStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterOptionGroupName() != null)\r\n        sb.append(\"DBClusterOptionGroupName: \").append(getDBClusterOptionGroupName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.UpdateProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetails() != null)\r\n        sb.append(\"Details: \").append(getDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.UpdateEncryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithm() != null)\r\n        sb.append(\"Algorithm: \").append(getAlgorithm()).append(\",\");\r\n    if (getKeyType() != null)\r\n        sb.append(\"KeyType: \").append(getKeyType()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getSecretArn() != null)\r\n        sb.append(\"SecretArn: \").append(getSecretArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogGroupFieldsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupFields() != null)\r\n        sb.append(\"LogGroupFields: \").append(getLogGroupFields());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.UserPendingChanges.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConsoleAccess() != null)\r\n        sb.append(\"ConsoleAccess: \").append(getConsoleAccess()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getPendingChange() != null)\r\n        sb.append(\"PendingChange: \").append(getPendingChange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateDataSourceFromRedshiftResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBSecurityGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSecurityGroupName() != null)\r\n        sb.append(\"DBSecurityGroupName: \").append(getDBSecurityGroupName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CloudwatchLogsExportConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnableLogTypes() != null)\r\n        sb.append(\"EnableLogTypes: \").append(getEnableLogTypes()).append(\",\");\r\n    if (getDisableLogTypes() != null)\r\n        sb.append(\"DisableLogTypes: \").append(getDisableLogTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeploymentCommand.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArgs() != null)\r\n        sb.append(\"Args: \").append(getArgs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.LogGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getRetentionInDays() != null)\r\n        sb.append(\"RetentionInDays: \").append(getRetentionInDays()).append(\",\");\r\n    if (getMetricFilterCount() != null)\r\n        sb.append(\"MetricFilterCount: \").append(getMetricFilterCount()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getStoredBytes() != null)\r\n        sb.append(\"StoredBytes: \").append(getStoredBytes()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DeletePresetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DescribeEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerEvents() != null)\r\n        sb.append(\"ServerEvents: \").append(getServerEvents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DeleteJobTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateHITTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITTypeId() != null)\r\n        sb.append(\"HITTypeId: \").append(getHITTypeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ContainerSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainer() != null)\r\n        sb.append(\"Container: \").append(getContainer()).append(\",\");\r\n    if (getF4vSettings() != null)\r\n        sb.append(\"F4vSettings: \").append(getF4vSettings()).append(\",\");\r\n    if (getM2tsSettings() != null)\r\n        sb.append(\"M2tsSettings: \").append(getM2tsSettings()).append(\",\");\r\n    if (getM3u8Settings() != null)\r\n        sb.append(\"M3u8Settings: \").append(getM3u8Settings()).append(\",\");\r\n    if (getMovSettings() != null)\r\n        sb.append(\"MovSettings: \").append(getMovSettings()).append(\",\");\r\n    if (getMp4Settings() != null)\r\n        sb.append(\"Mp4Settings: \").append(getMp4Settings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.StartChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getEgressEndpoints() != null)\r\n        sb.append(\"EgressEndpoints: \").append(getEgressEndpoints()).append(\",\");\r\n    if (getEncoderSettings() != null)\r\n        sb.append(\"EncoderSettings: \").append(getEncoderSettings()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getInputAttachments() != null)\r\n        sb.append(\"InputAttachments: \").append(getInputAttachments()).append(\",\");\r\n    if (getInputSpecification() != null)\r\n        sb.append(\"InputSpecification: \").append(getInputSpecification()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPipelinesRunningCount() != null)\r\n        sb.append(\"PipelinesRunningCount: \").append(getPipelinesRunningCount()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.FailedS3Resource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedItem() != null)\r\n        sb.append(\"FailedItem: \").append(getFailedItem()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.Output.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getEntitlementArn() != null)\r\n        sb.append(\"EntitlementArn: \").append(getEntitlementArn()).append(\",\");\r\n    if (getMediaLiveInputArn() != null)\r\n        sb.append(\"MediaLiveInputArn: \").append(getMediaLiveInputArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOutputArn() != null)\r\n        sb.append(\"OutputArn: \").append(getOutputArn()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getTransport() != null)\r\n        sb.append(\"Transport: \").append(getTransport());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeStackSummaryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackSummary() != null)\r\n        sb.append(\"StackSummary: \").append(getStackSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribeOrganizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganization() != null)\r\n        sb.append(\"Organization: \").append(getOrganization());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.AWSOpsWorksClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.SmpteTtDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateAppRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getShortname() != null)\r\n        sb.append(\"Shortname: \").append(getShortname()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDataSources() != null)\r\n        sb.append(\"DataSources: \").append(getDataSources()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getAppSource() != null)\r\n        sb.append(\"AppSource: \").append(getAppSource()).append(\",\");\r\n    if (getDomains() != null)\r\n        sb.append(\"Domains: \").append(getDomains()).append(\",\");\r\n    if (getEnableSsl() != null)\r\n        sb.append(\"EnableSsl: \").append(getEnableSsl()).append(\",\");\r\n    if (getSslConfiguration() != null)\r\n        sb.append(\"SslConfiguration: \").append(getSslConfiguration()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UpdateLoadBalancerAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBalancerName() != null)\r\n        sb.append(\"LoadBalancerName: \").append(getLoadBalancerName()).append(\",\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValue() != null)\r\n        sb.append(\"AttributeValue: \").append(getAttributeValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeEventCategoriesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.describeQueries",
	"Comment": "returns a list of cloudwatch logs insights queries that are scheduled, executing, or have been executed recentlyin this account. you can request all queries, or limit it to queries of a specific log group or queries with acertain status.",
	"Method": "DescribeQueriesResult describeQueries(DescribeQueriesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeQueries(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.AssociateElasticIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getServiceRoleArn() != null)\r\n        sb.append(\"ServiceRoleArn: \").append(getServiceRoleArn()).append(\",\");\r\n    if (getDefaultInstanceProfileArn() != null)\r\n        sb.append(\"DefaultInstanceProfileArn: \").append(getDefaultInstanceProfileArn()).append(\",\");\r\n    if (getDefaultOs() != null)\r\n        sb.append(\"DefaultOs: \").append(getDefaultOs()).append(\",\");\r\n    if (getHostnameTheme() != null)\r\n        sb.append(\"HostnameTheme: \").append(getHostnameTheme()).append(\",\");\r\n    if (getDefaultAvailabilityZone() != null)\r\n        sb.append(\"DefaultAvailabilityZone: \").append(getDefaultAvailabilityZone()).append(\",\");\r\n    if (getDefaultSubnetId() != null)\r\n        sb.append(\"DefaultSubnetId: \").append(getDefaultSubnetId()).append(\",\");\r\n    if (getCustomJson() != null)\r\n        sb.append(\"CustomJson: \").append(getCustomJson()).append(\",\");\r\n    if (getConfigurationManager() != null)\r\n        sb.append(\"ConfigurationManager: \").append(getConfigurationManager()).append(\",\");\r\n    if (getChefConfiguration() != null)\r\n        sb.append(\"ChefConfiguration: \").append(getChefConfiguration()).append(\",\");\r\n    if (getUseCustomCookbooks() != null)\r\n        sb.append(\"UseCustomCookbooks: \").append(getUseCustomCookbooks()).append(\",\");\r\n    if (getCustomCookbooksSource() != null)\r\n        sb.append(\"CustomCookbooksSource: \").append(getCustomCookbooksSource()).append(\",\");\r\n    if (getDefaultSshKeyName() != null)\r\n        sb.append(\"DefaultSshKeyName: \").append(getDefaultSshKeyName()).append(\",\");\r\n    if (getDefaultRootDeviceType() != null)\r\n        sb.append(\"DefaultRootDeviceType: \").append(getDefaultRootDeviceType()).append(\",\");\r\n    if (getUseOpsworksSecurityGroups() != null)\r\n        sb.append(\"UseOpsworksSecurityGroups: \").append(getUseOpsworksSecurityGroups()).append(\",\");\r\n    if (getAgentVersion() != null)\r\n        sb.append(\"AgentVersion: \").append(getAgentVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.OutputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHlsSettings() != null)\r\n        sb.append(\"HlsSettings: \").append(getHlsSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.VideoSelectorSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVideoSelectorPid() != null)\r\n        sb.append(\"VideoSelectorPid: \").append(getVideoSelectorPid()).append(\",\");\r\n    if (getVideoSelectorProgramId() != null)\r\n        sb.append(\"VideoSelectorProgramId: \").append(getVideoSelectorProgramId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.GrantAccessResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTemporaryCredential() != null)\r\n        sb.append(\"TemporaryCredential: \").append(getTemporaryCredential());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.QualificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationRequestId() != null)\r\n        sb.append(\"QualificationRequestId: \").append(getQualificationRequestId()).append(\",\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId()).append(\",\");\r\n    if (getTest() != null)\r\n        sb.append(\"Test: \").append(getTest()).append(\",\");\r\n    if (getAnswer() != null)\r\n        sb.append(\"Answer: \").append(getAnswer()).append(\",\");\r\n    if (getSubmitTime() != null)\r\n        sb.append(\"SubmitTime: \").append(getSubmitTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DisassociateDiscoveredResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DeleteReservationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getDurationUnits() != null)\r\n        sb.append(\"DurationUnits: \").append(getDurationUnits()).append(\",\");\r\n    if (getEnd() != null)\r\n        sb.append(\"End: \").append(getEnd()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOfferingDescription() != null)\r\n        sb.append(\"OfferingDescription: \").append(getOfferingDescription()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getReservationId() != null)\r\n        sb.append(\"ReservationId: \").append(getReservationId()).append(\",\");\r\n    if (getResourceSpecification() != null)\r\n        sb.append(\"ResourceSpecification: \").append(getResourceSpecification()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.deleteLogGroup",
	"Comment": "deletes the specified log group and permanently deletes all the archived log events associated with the loggroup.",
	"Method": "DeleteLogGroupResult deleteLogGroup(DeleteLogGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLogGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.UpdateFlowEntitlementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getEntitlementArn() != null)\r\n        sb.append(\"EntitlementArn: \").append(getEntitlementArn()).append(\",\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getSubscribers() != null)\r\n        sb.append(\"Subscribers: \").append(getSubscribers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.ListChannelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannels() != null)\r\n        sb.append(\"Channels: \").append(getChannels()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Mp2Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getChannels() != null)\r\n        sb.append(\"Channels: \").append(getChannels()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateRdsDbInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.AssociateNodeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodeAssociationStatusToken() != null)\r\n        sb.append(\"NodeAssociationStatusToken: \").append(getNodeAssociationStatusToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DescribeUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.proxyUsername",
	"Comment": "sets the optional proxy user name to use if connecting through a proxy.",
	"Method": "ProxyConfiguration proxyUsername(String proxyUsername){\r\n    setProxyUsername(proxyUsername);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DeleteJobTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.CreatedArtifact.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DeleteDBClusterParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.SubscriptionFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilterName() != null)\r\n        sb.append(\"FilterName: \").append(getFilterName()).append(\",\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getFilterPattern() != null)\r\n        sb.append(\"FilterPattern: \").append(getFilterPattern()).append(\",\");\r\n    if (getDestinationArn() != null)\r\n        sb.append(\"DestinationArn: \").append(getDestinationArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getDistribution() != null)\r\n        sb.append(\"Distribution: \").append(getDistribution()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.DeleteFlowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.CreateExportTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.AssociateQualificationWithWorkerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCampaignsResponse() != null)\r\n        sb.append(\"CampaignsResponse: \").append(getCampaignsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateAppResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAppId() != null)\r\n        sb.append(\"AppId: \").append(getAppId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getVerbose() != null)\r\n        sb.append(\"Verbose: \").append(getVerbose());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.VideoSelectorProgramId.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgramId() != null)\r\n        sb.append(\"ProgramId: \").append(getProgramId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate()).append(\",\");\r\n    if (getDefaultAuthenticationMethod() != null)\r\n        sb.append(\"DefaultAuthenticationMethod: \").append(getDefaultAuthenticationMethod()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getPrivateKey() != null)\r\n        sb.append(\"PrivateKey: \").append(getPrivateKey()).append(\",\");\r\n    if (getTeamId() != null)\r\n        sb.append(\"TeamId: \").append(getTeamId()).append(\",\");\r\n    if (getTokenKey() != null)\r\n        sb.append(\"TokenKey: \").append(getTokenKey()).append(\",\");\r\n    if (getTokenKeyId() != null)\r\n        sb.append(\"TokenKeyId: \").append(getTokenKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.HlsManifest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdMarkers() != null)\r\n        sb.append(\"AdMarkers: \").append(getAdMarkers()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIncludeIframeOnlyStream() != null)\r\n        sb.append(\"IncludeIframeOnlyStream: \").append(getIncludeIframeOnlyStream()).append(\",\");\r\n    if (getManifestName() != null)\r\n        sb.append(\"ManifestName: \").append(getManifestName()).append(\",\");\r\n    if (getPlaylistType() != null)\r\n        sb.append(\"PlaylistType: \").append(getPlaylistType()).append(\",\");\r\n    if (getPlaylistWindowSeconds() != null)\r\n        sb.append(\"PlaylistWindowSeconds: \").append(getPlaylistWindowSeconds()).append(\",\");\r\n    if (getProgramDateTimeIntervalSeconds() != null)\r\n        sb.append(\"ProgramDateTimeIntervalSeconds: \").append(getProgramDateTimeIntervalSeconds()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Evaluation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationId() != null)\r\n        sb.append(\"EvaluationId: \").append(getEvaluationId()).append(\",\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getEvaluationDataSourceId() != null)\r\n        sb.append(\"EvaluationDataSourceId: \").append(getEvaluationDataSourceId()).append(\",\");\r\n    if (getInputDataLocationS3() != null)\r\n        sb.append(\"InputDataLocationS3: \").append(getInputDataLocationS3()).append(\",\");\r\n    if (getCreatedByIamUser() != null)\r\n        sb.append(\"CreatedByIamUser: \").append(getCreatedByIamUser()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPerformanceMetrics() != null)\r\n        sb.append(\"PerformanceMetrics: \").append(getPerformanceMetrics()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getComputeTime() != null)\r\n        sb.append(\"ComputeTime: \").append(getComputeTime()).append(\",\");\r\n    if (getFinishedAt() != null)\r\n        sb.append(\"FinishedAt: \").append(getFinishedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.DescribeBundleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetails() != null)\r\n        sb.append(\"Details: \").append(getDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogRecordRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogRecordPointer() != null)\r\n        sb.append(\"LogRecordPointer: \").append(getLogRecordPointer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteSegmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.H265Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdaptiveQuantization() != null)\r\n        sb.append(\"AdaptiveQuantization: \").append(getAdaptiveQuantization()).append(\",\");\r\n    if (getAlternateTransferFunctionSei() != null)\r\n        sb.append(\"AlternateTransferFunctionSei: \").append(getAlternateTransferFunctionSei()).append(\",\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getCodecLevel() != null)\r\n        sb.append(\"CodecLevel: \").append(getCodecLevel()).append(\",\");\r\n    if (getCodecProfile() != null)\r\n        sb.append(\"CodecProfile: \").append(getCodecProfile()).append(\",\");\r\n    if (getDynamicSubGop() != null)\r\n        sb.append(\"DynamicSubGop: \").append(getDynamicSubGop()).append(\",\");\r\n    if (getFlickerAdaptiveQuantization() != null)\r\n        sb.append(\"FlickerAdaptiveQuantization: \").append(getFlickerAdaptiveQuantization()).append(\",\");\r\n    if (getFramerateControl() != null)\r\n        sb.append(\"FramerateControl: \").append(getFramerateControl()).append(\",\");\r\n    if (getFramerateConversionAlgorithm() != null)\r\n        sb.append(\"FramerateConversionAlgorithm: \").append(getFramerateConversionAlgorithm()).append(\",\");\r\n    if (getFramerateDenominator() != null)\r\n        sb.append(\"FramerateDenominator: \").append(getFramerateDenominator()).append(\",\");\r\n    if (getFramerateNumerator() != null)\r\n        sb.append(\"FramerateNumerator: \").append(getFramerateNumerator()).append(\",\");\r\n    if (getGopBReference() != null)\r\n        sb.append(\"GopBReference: \").append(getGopBReference()).append(\",\");\r\n    if (getGopClosedCadence() != null)\r\n        sb.append(\"GopClosedCadence: \").append(getGopClosedCadence()).append(\",\");\r\n    if (getGopSize() != null)\r\n        sb.append(\"GopSize: \").append(getGopSize()).append(\",\");\r\n    if (getGopSizeUnits() != null)\r\n        sb.append(\"GopSizeUnits: \").append(getGopSizeUnits()).append(\",\");\r\n    if (getHrdBufferInitialFillPercentage() != null)\r\n        sb.append(\"HrdBufferInitialFillPercentage: \").append(getHrdBufferInitialFillPercentage()).append(\",\");\r\n    if (getHrdBufferSize() != null)\r\n        sb.append(\"HrdBufferSize: \").append(getHrdBufferSize()).append(\",\");\r\n    if (getInterlaceMode() != null)\r\n        sb.append(\"InterlaceMode: \").append(getInterlaceMode()).append(\",\");\r\n    if (getMaxBitrate() != null)\r\n        sb.append(\"MaxBitrate: \").append(getMaxBitrate()).append(\",\");\r\n    if (getMinIInterval() != null)\r\n        sb.append(\"MinIInterval: \").append(getMinIInterval()).append(\",\");\r\n    if (getNumberBFramesBetweenReferenceFrames() != null)\r\n        sb.append(\"NumberBFramesBetweenReferenceFrames: \").append(getNumberBFramesBetweenReferenceFrames()).append(\",\");\r\n    if (getNumberReferenceFrames() != null)\r\n        sb.append(\"NumberReferenceFrames: \").append(getNumberReferenceFrames()).append(\",\");\r\n    if (getParControl() != null)\r\n        sb.append(\"ParControl: \").append(getParControl()).append(\",\");\r\n    if (getParDenominator() != null)\r\n        sb.append(\"ParDenominator: \").append(getParDenominator()).append(\",\");\r\n    if (getParNumerator() != null)\r\n        sb.append(\"ParNumerator: \").append(getParNumerator()).append(\",\");\r\n    if (getQualityTuningLevel() != null)\r\n        sb.append(\"QualityTuningLevel: \").append(getQualityTuningLevel()).append(\",\");\r\n    if (getQvbrSettings() != null)\r\n        sb.append(\"QvbrSettings: \").append(getQvbrSettings()).append(\",\");\r\n    if (getRateControlMode() != null)\r\n        sb.append(\"RateControlMode: \").append(getRateControlMode()).append(\",\");\r\n    if (getSampleAdaptiveOffsetFilterMode() != null)\r\n        sb.append(\"SampleAdaptiveOffsetFilterMode: \").append(getSampleAdaptiveOffsetFilterMode()).append(\",\");\r\n    if (getSceneChangeDetect() != null)\r\n        sb.append(\"SceneChangeDetect: \").append(getSceneChangeDetect()).append(\",\");\r\n    if (getSlices() != null)\r\n        sb.append(\"Slices: \").append(getSlices()).append(\",\");\r\n    if (getSlowPal() != null)\r\n        sb.append(\"SlowPal: \").append(getSlowPal()).append(\",\");\r\n    if (getSpatialAdaptiveQuantization() != null)\r\n        sb.append(\"SpatialAdaptiveQuantization: \").append(getSpatialAdaptiveQuantization()).append(\",\");\r\n    if (getTelecine() != null)\r\n        sb.append(\"Telecine: \").append(getTelecine()).append(\",\");\r\n    if (getTemporalAdaptiveQuantization() != null)\r\n        sb.append(\"TemporalAdaptiveQuantization: \").append(getTemporalAdaptiveQuantization()).append(\",\");\r\n    if (getTemporalIds() != null)\r\n        sb.append(\"TemporalIds: \").append(getTemporalIds()).append(\",\");\r\n    if (getTiles() != null)\r\n        sb.append(\"Tiles: \").append(getTiles()).append(\",\");\r\n    if (getUnregisteredSeiTimecode() != null)\r\n        sb.append(\"UnregisteredSeiTimecode: \").append(getUnregisteredSeiTimecode()).append(\",\");\r\n    if (getWriteMp4PackagingType() != null)\r\n        sb.append(\"WriteMp4PackagingType: \").append(getWriteMp4PackagingType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplaceentitlement.AWSMarketplaceEntitlementAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeleteInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.UpdateS3ResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberAccountId() != null)\r\n        sb.append(\"MemberAccountId: \").append(getMemberAccountId()).append(\",\");\r\n    if (getS3ResourcesUpdate() != null)\r\n        sb.append(\"S3ResourcesUpdate: \").append(getS3ResourcesUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.EmbeddedDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteAdmChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getADMChannelResponse() != null)\r\n        sb.append(\"ADMChannelResponse: \").append(getADMChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.DescribeFlowResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlow() != null)\r\n        sb.append(\"Flow: \").append(getFlow()).append(\",\");\r\n    if (getMessages() != null)\r\n        sb.append(\"Messages: \").append(getMessages());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeleteAppResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListHandshakesForOrganizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshakes() != null)\r\n        sb.append(\"Handshakes: \").append(getHandshakes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.getFileUploadURL",
	"Comment": "the getfileuploadurl operation generates and returns a temporary url. you use the temporary url toretrieve a file uploaded by a worker as an answer to a fileuploadanswer question for a hit. the temporary url isgenerated the instant the getfileuploadurl operation is called, and is valid for 60 seconds. you can get atemporary file upload url any time until the hit is disposed. after the hit is disposed, any uploaded files aredeleted, and cannot be retrieved. pending deprecation on december 12, 2017. the answer specification structurewill no longer support the fileuploadanswer element to be used for the questionform data structure.instead, we recommend that requesters who want to create hits asking workers to upload files to use amazon s3.",
	"Method": "GetFileUploadURLResult getFileUploadURL(GetFileUploadURLRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetFileUploadURL(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteBaiduChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBaiduChannelResponse() != null)\r\n        sb.append(\"BaiduChannelResponse: \").append(getBaiduChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBEngineVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBEngineVersions() != null)\r\n        sb.append(\"DBEngineVersions: \").append(getDBEngineVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.Container.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getARN() != null)\r\n        sb.append(\"ARN: \").append(getARN()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.model.ListItemsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.AWSPIClient.describeDimensionKeys",
	"Comment": "for a specific time period, retrieve the top n dimension keys for a metric.",
	"Method": "DescribeDimensionKeysResult describeDimensionKeys(DescribeDimensionKeysRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDimensionKeys(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputSecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getInputs() != null)\r\n        sb.append(\"Inputs: \").append(getInputs()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getWhitelistRules() != null)\r\n        sb.append(\"WhitelistRules: \").append(getWhitelistRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CharacterSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getCharacterSetDescription() != null)\r\n        sb.append(\"CharacterSetDescription: \").append(getCharacterSetDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointUser.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserAttributes() != null)\r\n        sb.append(\"UserAttributes: \").append(getUserAttributes()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateRdsDbInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRdsDbInstanceArn() != null)\r\n        sb.append(\"RdsDbInstanceArn: \").append(getRdsDbInstanceArn()).append(\",\");\r\n    if (getDbUser() != null)\r\n        sb.append(\"DbUser: \").append(getDbUser()).append(\",\");\r\n    if (getDbPassword() != null)\r\n        sb.append(\"DbPassword: \").append(getDbPassword());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.removeSourceIdentifierFromSubscription",
	"Comment": "removes a source identifier from an existing event notification subscription.",
	"Method": "EventSubscription removeSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveSourceIdentifierFromSubscription(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeRaidArraysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRaidArrays() != null)\r\n        sb.append(\"RaidArrays: \").append(getRaidArrays());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.DeleteCorsPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DescribeConfigurationRevisionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationId() != null)\r\n        sb.append(\"ConfigurationId: \").append(getConfigurationId()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AvailBlanking.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailBlankingImage() != null)\r\n        sb.append(\"AvailBlankingImage: \").append(getAvailBlankingImage()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.DashEncryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyRotationIntervalSeconds() != null)\r\n        sb.append(\"KeyRotationIntervalSeconds: \").append(getKeyRotationIntervalSeconds()).append(\",\");\r\n    if (getSpekeKeyProvider() != null)\r\n        sb.append(\"SpekeKeyProvider: \").append(getSpekeKeyProvider());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsVoipSandboxChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSVoipSandboxChannelResponse() != null)\r\n        sb.append(\"APNSVoipSandboxChannelResponse: \").append(getAPNSVoipSandboxChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.WorkerBlock.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeStacksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStacks() != null)\r\n        sb.append(\"Stacks: \").append(getStacks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateExportJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getExportJobRequest() != null)\r\n        sb.append(\"ExportJobRequest: \").append(getExportJobRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.OutputDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.AWSMobileClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmobile using the current builder configuration.",
	"Method": "AWSMobile build(AwsSyncClientParams params){\r\n    return new AWSMobileClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.RedshiftDataSpec.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatabaseInformation() != null)\r\n        sb.append(\"DatabaseInformation: \").append(getDatabaseInformation()).append(\",\");\r\n    if (getSelectSqlQuery() != null)\r\n        sb.append(\"SelectSqlQuery: \").append(getSelectSqlQuery()).append(\",\");\r\n    if (getDatabaseCredentials() != null)\r\n        sb.append(\"DatabaseCredentials: \").append(getDatabaseCredentials()).append(\",\");\r\n    if (getS3StagingLocation() != null)\r\n        sb.append(\"S3StagingLocation: \").append(getS3StagingLocation()).append(\",\");\r\n    if (getDataRearrangement() != null)\r\n        sb.append(\"DataRearrangement: \").append(getDataRearrangement()).append(\",\");\r\n    if (getDataSchema() != null)\r\n        sb.append(\"DataSchema: \").append(getDataSchema()).append(\",\");\r\n    if (getDataSchemaUri() != null)\r\n        sb.append(\"DataSchemaUri: \").append(getDataSchemaUri());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeTimeBasedAutoScalingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimeBasedAutoScalingConfigurations() != null)\r\n        sb.append(\"TimeBasedAutoScalingConfigurations: \").append(getTimeBasedAutoScalingConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateSegmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getWriteSegmentRequest() != null)\r\n        sb.append(\"WriteSegmentRequest: \").append(getWriteSegmentRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageBody.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getRequestID() != null)\r\n        sb.append(\"RequestID: \").append(getRequestID());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeUserProfilesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserProfiles() != null)\r\n        sb.append(\"UserProfiles: \").append(getUserProfiles());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.UpdateQualificationTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationType() != null)\r\n        sb.append(\"QualificationType: \").append(getQualificationType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Hdr10Metadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBluePrimaryX() != null)\r\n        sb.append(\"BluePrimaryX: \").append(getBluePrimaryX()).append(\",\");\r\n    if (getBluePrimaryY() != null)\r\n        sb.append(\"BluePrimaryY: \").append(getBluePrimaryY()).append(\",\");\r\n    if (getGreenPrimaryX() != null)\r\n        sb.append(\"GreenPrimaryX: \").append(getGreenPrimaryX()).append(\",\");\r\n    if (getGreenPrimaryY() != null)\r\n        sb.append(\"GreenPrimaryY: \").append(getGreenPrimaryY()).append(\",\");\r\n    if (getMaxContentLightLevel() != null)\r\n        sb.append(\"MaxContentLightLevel: \").append(getMaxContentLightLevel()).append(\",\");\r\n    if (getMaxFrameAverageLightLevel() != null)\r\n        sb.append(\"MaxFrameAverageLightLevel: \").append(getMaxFrameAverageLightLevel()).append(\",\");\r\n    if (getMaxLuminance() != null)\r\n        sb.append(\"MaxLuminance: \").append(getMaxLuminance()).append(\",\");\r\n    if (getMinLuminance() != null)\r\n        sb.append(\"MinLuminance: \").append(getMinLuminance()).append(\",\");\r\n    if (getRedPrimaryX() != null)\r\n        sb.append(\"RedPrimaryX: \").append(getRedPrimaryX()).append(\",\");\r\n    if (getRedPrimaryY() != null)\r\n        sb.append(\"RedPrimaryY: \").append(getRedPrimaryY()).append(\",\");\r\n    if (getWhitePointX() != null)\r\n        sb.append(\"WhitePointX: \").append(getWhitePointX()).append(\",\");\r\n    if (getWhitePointY() != null)\r\n        sb.append(\"WhitePointY: \").append(getWhitePointY());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetChannelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.CreateLogGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBClusterParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AttributeDimension.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeType() != null)\r\n        sb.append(\"AttributeType: \").append(getAttributeType()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsVoipChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSVoipChannelResponse() != null)\r\n        sb.append(\"APNSVoipChannelResponse: \").append(getAPNSVoipChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DescribeDataSourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilterVariable() != null)\r\n        sb.append(\"FilterVariable: \").append(getFilterVariable()).append(\",\");\r\n    if (getEQ() != null)\r\n        sb.append(\"EQ: \").append(getEQ()).append(\",\");\r\n    if (getGT() != null)\r\n        sb.append(\"GT: \").append(getGT()).append(\",\");\r\n    if (getLT() != null)\r\n        sb.append(\"LT: \").append(getLT()).append(\",\");\r\n    if (getGE() != null)\r\n        sb.append(\"GE: \").append(getGE()).append(\",\");\r\n    if (getLE() != null)\r\n        sb.append(\"LE: \").append(getLE()).append(\",\");\r\n    if (getNE() != null)\r\n        sb.append(\"NE: \").append(getNE()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.listWorkerBlocks",
	"Comment": "the listworkersblocks operation retrieves a list of workers who are blocked from working on yourhits.",
	"Method": "ListWorkerBlocksResult listWorkerBlocks(ListWorkerBlocksRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListWorkerBlocks(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.ListBundlesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeReservationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservationId() != null)\r\n        sb.append(\"ReservationId: \").append(getReservationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.Recipes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSetup() != null)\r\n        sb.append(\"Setup: \").append(getSetup()).append(\",\");\r\n    if (getConfigure() != null)\r\n        sb.append(\"Configure: \").append(getConfigure()).append(\",\");\r\n    if (getDeploy() != null)\r\n        sb.append(\"Deploy: \").append(getDeploy()).append(\",\");\r\n    if (getUndeploy() != null)\r\n        sb.append(\"Undeploy: \").append(getUndeploy()).append(\",\");\r\n    if (getShutdown() != null)\r\n        sb.append(\"Shutdown: \").append(getShutdown());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.waiters.DescribeDBInstancesFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeDBInstancesResult apply(DescribeDBInstancesRequest describeDBInstancesRequest){\r\n    return client.describeDBInstances(describeDBInstancesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplaceentitlement.AWSMarketplaceEntitlementClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacecommerceanalytics.AWSMarketplaceCommerceAnalyticsClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmarketplacecommerceanalytics using the current builderconfiguration.",
	"Method": "AWSMarketplaceCommerceAnalytics build(AwsSyncClientParams params){\r\n    return new AWSMarketplaceCommerceAnalyticsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeAgentVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAgentVersions() != null)\r\n        sb.append(\"AgentVersions: \").append(getAgentVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ExportTask.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId()).append(\",\");\r\n    if (getTaskName() != null)\r\n        sb.append(\"TaskName: \").append(getTaskName()).append(\",\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getFrom() != null)\r\n        sb.append(\"From: \").append(getFrom()).append(\",\");\r\n    if (getTo() != null)\r\n        sb.append(\"To: \").append(getTo()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getDestinationPrefix() != null)\r\n        sb.append(\"DestinationPrefix: \").append(getDestinationPrefix()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getExecutionInfo() != null)\r\n        sb.append(\"ExecutionInfo: \").append(getExecutionInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents()).append(\",\");\r\n    if (getNextForwardToken() != null)\r\n        sb.append(\"NextForwardToken: \").append(getNextForwardToken()).append(\",\");\r\n    if (getNextBackwardToken() != null)\r\n        sb.append(\"NextBackwardToken: \").append(getNextBackwardToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeResourcePoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.AssociateNodeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getNodeName() != null)\r\n        sb.append(\"NodeName: \").append(getNodeName()).append(\",\");\r\n    if (getEngineAttributes() != null)\r\n        sb.append(\"EngineAttributes: \").append(getEngineAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.AWSMigrationHubClient.listProgressUpdateStreams",
	"Comment": "lists progress update streams associated with the user account making this call.",
	"Method": "ListProgressUpdateStreamsResult listProgressUpdateStreams(ListProgressUpdateStreamsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListProgressUpdateStreams(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.ExportServerEngineAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportAttributeName() != null)\r\n        sb.append(\"ExportAttributeName: \").append(getExportAttributeName()).append(\",\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getInputAttributes() != null)\r\n        sb.append(\"InputAttributes: \").append(getInputAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.CreateLogStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.getMLModel",
	"Comment": "returns an mlmodel that includes detailed metadata, data source information, and the current statusof the mlmodel.getmlmodel provides results in normal or verbose format.",
	"Method": "GetMLModelResult getMLModel(GetMLModelRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetMLModel(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ListUsersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateAdditionalAssignmentsForHITResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ProgressUpdateStreamSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStreamName() != null)\r\n        sb.append(\"ProgressUpdateStreamName: \").append(getProgressUpdateStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.waiters.AWSOpsWorksWaiters.instanceStopped",
	"Comment": "builds a instancestopped waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstancesRequest> instanceStopped(){\r\n    return new WaiterBuilder<DescribeInstancesRequest, DescribeInstancesResult>().withSdkFunction(new DescribeInstancesFunction(client)).withAcceptors(new InstanceStopped.IsStoppedMatcher(), new InstanceStopped.IsBootingMatcher(), new InstanceStopped.IsPendingMatcher(), new InstanceStopped.IsRebootingMatcher(), new InstanceStopped.IsRequestedMatcher(), new InstanceStopped.IsRunning_setupMatcher(), new InstanceStopped.IsSetup_failedMatcher(), new InstanceStopped.IsStart_failedMatcher(), new InstanceStopped.IsStop_failedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Input.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getAttachedChannels() != null)\r\n        sb.append(\"AttachedChannels: \").append(getAttachedChannels()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getMediaConnectFlows() != null)\r\n        sb.append(\"MediaConnectFlows: \").append(getMediaConnectFlows()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.RejectQualificationRequestRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationRequestId() != null)\r\n        sb.append(\"QualificationRequestId: \").append(getQualificationRequestId()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.AWSMediaPackageClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmediapackage using the current builder configuration.",
	"Method": "AWSMediaPackage build(AwsSyncClientParams params){\r\n    return new AWSMediaPackageClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DescribeConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationId() != null)\r\n        sb.append(\"ConfigurationId: \").append(getConfigurationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.Source.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(getPassword()).append(\",\");\r\n    if (getSshKey() != null)\r\n        sb.append(\"SshKey: \").append(getSshKey()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeDeploymentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeployments() != null)\r\n        sb.append(\"Deployments: \").append(getDeployments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.PolicyTargetSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.UpdateJobTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getQueue() != null)\r\n        sb.append(\"Queue: \").append(getQueue()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeDBClusterParameters",
	"Comment": "returns the detailed parameter list for a particular db cluster parameter group.",
	"Method": "DescribeDBClusterParametersResult describeDBClusterParameters(DescribeDBClusterParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBClusterParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ListReservationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getReservations() != null)\r\n        sb.append(\"Reservations: \").append(getReservations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeregisterInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSChannelResponse() != null)\r\n        sb.append(\"APNSChannelResponse: \").append(getAPNSChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.putMetricFilter",
	"Comment": "creates or updates a metric filter and associates it with the specified log group. metric filters allow you toconfigure rules to extract metric data from log events ingested through putlogevents.the maximum number of metric filters that can be associated with a log group is 100.",
	"Method": "PutMetricFilterResult putMetricFilter(PutMetricFilterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutMetricFilter(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.TeletextDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.PendingLogs.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudit() != null)\r\n        sb.append(\"Audit: \").append(getAudit()).append(\",\");\r\n    if (getGeneral() != null)\r\n        sb.append(\"General: \").append(getGeneral());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.VideoSelectorPid.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPid() != null)\r\n        sb.append(\"Pid: \").append(getPid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientId() != null)\r\n        sb.append(\"ClientId: \").append(getClientId()).append(\",\");\r\n    if (getClientSecret() != null)\r\n        sb.append(\"ClientSecret: \").append(getClientSecret()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPasswordParam() != null)\r\n        sb.append(\"PasswordParam: \").append(getPasswordParam()).append(\",\");\r\n    if (getUri() != null)\r\n        sb.append(\"Uri: \").append(getUri()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceTags() != null)\r\n        sb.append(\"ResourceTags: \").append(getResourceTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.Permission.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn()).append(\",\");\r\n    if (getAllowSsh() != null)\r\n        sb.append(\"AllowSsh: \").append(getAllowSsh()).append(\",\");\r\n    if (getAllowSudo() != null)\r\n        sb.append(\"AllowSudo: \").append(getAllowSudo()).append(\",\");\r\n    if (getLevel() != null)\r\n        sb.append(\"Level: \").append(getLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.UpdateFlowOutputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(getOutput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DeleteDBInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getSkipFinalSnapshot() != null)\r\n        sb.append(\"SkipFinalSnapshot: \").append(getSkipFinalSnapshot()).append(\",\");\r\n    if (getFinalDBSnapshotIdentifier() != null)\r\n        sb.append(\"FinalDBSnapshotIdentifier: \").append(getFinalDBSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.Qualification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId()).append(\",\");\r\n    if (getGrantTime() != null)\r\n        sb.append(\"GrantTime: \").append(getGrantTime()).append(\",\");\r\n    if (getIntegerValue() != null)\r\n        sb.append(\"IntegerValue: \").append(getIntegerValue()).append(\",\");\r\n    if (getLocaleValue() != null)\r\n        sb.append(\"LocaleValue: \").append(getLocaleValue()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentExportJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportJobsResponse() != null)\r\n        sb.append(\"ExportJobsResponse: \").append(getExportJobsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.CreateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeregisterVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.H264Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdaptiveQuantization() != null)\r\n        sb.append(\"AdaptiveQuantization: \").append(getAdaptiveQuantization()).append(\",\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getCodecLevel() != null)\r\n        sb.append(\"CodecLevel: \").append(getCodecLevel()).append(\",\");\r\n    if (getCodecProfile() != null)\r\n        sb.append(\"CodecProfile: \").append(getCodecProfile()).append(\",\");\r\n    if (getDynamicSubGop() != null)\r\n        sb.append(\"DynamicSubGop: \").append(getDynamicSubGop()).append(\",\");\r\n    if (getEntropyEncoding() != null)\r\n        sb.append(\"EntropyEncoding: \").append(getEntropyEncoding()).append(\",\");\r\n    if (getFieldEncoding() != null)\r\n        sb.append(\"FieldEncoding: \").append(getFieldEncoding()).append(\",\");\r\n    if (getFlickerAdaptiveQuantization() != null)\r\n        sb.append(\"FlickerAdaptiveQuantization: \").append(getFlickerAdaptiveQuantization()).append(\",\");\r\n    if (getFramerateControl() != null)\r\n        sb.append(\"FramerateControl: \").append(getFramerateControl()).append(\",\");\r\n    if (getFramerateConversionAlgorithm() != null)\r\n        sb.append(\"FramerateConversionAlgorithm: \").append(getFramerateConversionAlgorithm()).append(\",\");\r\n    if (getFramerateDenominator() != null)\r\n        sb.append(\"FramerateDenominator: \").append(getFramerateDenominator()).append(\",\");\r\n    if (getFramerateNumerator() != null)\r\n        sb.append(\"FramerateNumerator: \").append(getFramerateNumerator()).append(\",\");\r\n    if (getGopBReference() != null)\r\n        sb.append(\"GopBReference: \").append(getGopBReference()).append(\",\");\r\n    if (getGopClosedCadence() != null)\r\n        sb.append(\"GopClosedCadence: \").append(getGopClosedCadence()).append(\",\");\r\n    if (getGopSize() != null)\r\n        sb.append(\"GopSize: \").append(getGopSize()).append(\",\");\r\n    if (getGopSizeUnits() != null)\r\n        sb.append(\"GopSizeUnits: \").append(getGopSizeUnits()).append(\",\");\r\n    if (getHrdBufferInitialFillPercentage() != null)\r\n        sb.append(\"HrdBufferInitialFillPercentage: \").append(getHrdBufferInitialFillPercentage()).append(\",\");\r\n    if (getHrdBufferSize() != null)\r\n        sb.append(\"HrdBufferSize: \").append(getHrdBufferSize()).append(\",\");\r\n    if (getInterlaceMode() != null)\r\n        sb.append(\"InterlaceMode: \").append(getInterlaceMode()).append(\",\");\r\n    if (getMaxBitrate() != null)\r\n        sb.append(\"MaxBitrate: \").append(getMaxBitrate()).append(\",\");\r\n    if (getMinIInterval() != null)\r\n        sb.append(\"MinIInterval: \").append(getMinIInterval()).append(\",\");\r\n    if (getNumberBFramesBetweenReferenceFrames() != null)\r\n        sb.append(\"NumberBFramesBetweenReferenceFrames: \").append(getNumberBFramesBetweenReferenceFrames()).append(\",\");\r\n    if (getNumberReferenceFrames() != null)\r\n        sb.append(\"NumberReferenceFrames: \").append(getNumberReferenceFrames()).append(\",\");\r\n    if (getParControl() != null)\r\n        sb.append(\"ParControl: \").append(getParControl()).append(\",\");\r\n    if (getParDenominator() != null)\r\n        sb.append(\"ParDenominator: \").append(getParDenominator()).append(\",\");\r\n    if (getParNumerator() != null)\r\n        sb.append(\"ParNumerator: \").append(getParNumerator()).append(\",\");\r\n    if (getQualityTuningLevel() != null)\r\n        sb.append(\"QualityTuningLevel: \").append(getQualityTuningLevel()).append(\",\");\r\n    if (getQvbrSettings() != null)\r\n        sb.append(\"QvbrSettings: \").append(getQvbrSettings()).append(\",\");\r\n    if (getRateControlMode() != null)\r\n        sb.append(\"RateControlMode: \").append(getRateControlMode()).append(\",\");\r\n    if (getRepeatPps() != null)\r\n        sb.append(\"RepeatPps: \").append(getRepeatPps()).append(\",\");\r\n    if (getSceneChangeDetect() != null)\r\n        sb.append(\"SceneChangeDetect: \").append(getSceneChangeDetect()).append(\",\");\r\n    if (getSlices() != null)\r\n        sb.append(\"Slices: \").append(getSlices()).append(\",\");\r\n    if (getSlowPal() != null)\r\n        sb.append(\"SlowPal: \").append(getSlowPal()).append(\",\");\r\n    if (getSoftness() != null)\r\n        sb.append(\"Softness: \").append(getSoftness()).append(\",\");\r\n    if (getSpatialAdaptiveQuantization() != null)\r\n        sb.append(\"SpatialAdaptiveQuantization: \").append(getSpatialAdaptiveQuantization()).append(\",\");\r\n    if (getSyntax() != null)\r\n        sb.append(\"Syntax: \").append(getSyntax()).append(\",\");\r\n    if (getTelecine() != null)\r\n        sb.append(\"Telecine: \").append(getTelecine()).append(\",\");\r\n    if (getTemporalAdaptiveQuantization() != null)\r\n        sb.append(\"TemporalAdaptiveQuantization: \").append(getTemporalAdaptiveQuantization()).append(\",\");\r\n    if (getUnregisteredSeiTimecode() != null)\r\n        sb.append(\"UnregisteredSeiTimecode: \").append(getUnregisteredSeiTimecode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.MotionImageInsertionOffset.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImageX() != null)\r\n        sb.append(\"ImageX: \").append(getImageX()).append(\",\");\r\n    if (getImageY() != null)\r\n        sb.append(\"ImageY: \").append(getImageY());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteAppRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectClient.listFlows",
	"Comment": "displays a list of flows that are associated with this account. this request returns a paginated result.",
	"Method": "ListFlowsResult listFlows(ListFlowsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListFlows(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.ListEntitlementsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntitlements() != null)\r\n        sb.append(\"Entitlements: \").append(getEntitlements()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.UserSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPendingChange() != null)\r\n        sb.append(\"PendingChange: \").append(getPendingChange()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetEvaluationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationId() != null)\r\n        sb.append(\"EvaluationId: \").append(getEvaluationId()).append(\",\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getEvaluationDataSourceId() != null)\r\n        sb.append(\"EvaluationDataSourceId: \").append(getEvaluationDataSourceId()).append(\",\");\r\n    if (getInputDataLocationS3() != null)\r\n        sb.append(\"InputDataLocationS3: \").append(getInputDataLocationS3()).append(\",\");\r\n    if (getCreatedByIamUser() != null)\r\n        sb.append(\"CreatedByIamUser: \").append(getCreatedByIamUser()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPerformanceMetrics() != null)\r\n        sb.append(\"PerformanceMetrics: \").append(getPerformanceMetrics()).append(\",\");\r\n    if (getLogUri() != null)\r\n        sb.append(\"LogUri: \").append(getLogUri()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getComputeTime() != null)\r\n        sb.append(\"ComputeTime: \").append(getComputeTime()).append(\",\");\r\n    if (getFinishedAt() != null)\r\n        sb.append(\"FinishedAt: \").append(getFinishedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.RemoveRoleFromDBClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.HandshakeParty.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.AssociateCreatedArtifactRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getCreatedArtifact() != null)\r\n        sb.append(\"CreatedArtifact: \").append(getCreatedArtifact()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.getAccountBalance",
	"Comment": "the getaccountbalance operation retrieves the amount of money in your amazon mechanical turkaccount.",
	"Method": "GetAccountBalanceResult getAccountBalance(GetAccountBalanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetAccountBalance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.Source.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDecryption() != null)\r\n        sb.append(\"Decryption: \").append(getDecryption()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEntitlementArn() != null)\r\n        sb.append(\"EntitlementArn: \").append(getEntitlementArn()).append(\",\");\r\n    if (getIngestIp() != null)\r\n        sb.append(\"IngestIp: \").append(getIngestIp()).append(\",\");\r\n    if (getIngestPort() != null)\r\n        sb.append(\"IngestPort: \").append(getIngestPort()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSourceArn() != null)\r\n        sb.append(\"SourceArn: \").append(getSourceArn()).append(\",\");\r\n    if (getTransport() != null)\r\n        sb.append(\"Transport: \").append(getTransport()).append(\",\");\r\n    if (getWhitelistCidr() != null)\r\n        sb.append(\"WhitelistCidr: \").append(getWhitelistCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.SanitizationWarning.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getElementName() != null)\r\n        sb.append(\"ElementName: \").append(getElementName()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.preemptiveBasicProxyAuth",
	"Comment": "sets whether to attempt to authenticate preemptively against proxy servers using basic authentication.",
	"Method": "ProxyConfiguration preemptiveBasicProxyAuth(boolean preemptiveBasicProxyAuth){\r\n    setPreemptiveBasicProxyAuth(preemptiveBasicProxyAuth);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteRealtimeEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getRealtimeEndpointInfo() != null)\r\n        sb.append(\"RealtimeEndpointInfo: \").append(getRealtimeEndpointInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.PutCorsPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName()).append(\",\");\r\n    if (getCorsPolicy() != null)\r\n        sb.append(\"CorsPolicy: \").append(getCorsPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.DescribeBundleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DeleteChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.ProjectSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AbstractAmazonMachineLearningAsync.describeBatchPredictionsAsync",
	"Comment": "simplified method form for invoking the describebatchpredictions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeBatchPredictionsResult> describeBatchPredictionsAsync(DescribeBatchPredictionsRequest request,java.util.concurrent.Future<DescribeBatchPredictionsResult> describeBatchPredictionsAsync,DescribeBatchPredictionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeBatchPredictionsRequest, DescribeBatchPredictionsResult> asyncHandler,java.util.concurrent.Future<DescribeBatchPredictionsResult> describeBatchPredictionsAsync,java.util.concurrent.Future<DescribeBatchPredictionsResult> describeBatchPredictionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeBatchPredictionsRequest, DescribeBatchPredictionsResult> asyncHandler){\r\n    return describeBatchPredictionsAsync(new DescribeBatchPredictionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.StopInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.FollowModeScheduleActionStartSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFollowPoint() != null)\r\n        sb.append(\"FollowPoint: \").append(getFollowPoint()).append(\",\");\r\n    if (getReferenceActionName() != null)\r\n        sb.append(\"ReferenceActionName: \").append(getReferenceActionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignEventFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getFilterType() != null)\r\n        sb.append(\"FilterType: \").append(getFilterType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getEgressEndpoints() != null)\r\n        sb.append(\"EgressEndpoints: \").append(getEgressEndpoints()).append(\",\");\r\n    if (getEncoderSettings() != null)\r\n        sb.append(\"EncoderSettings: \").append(getEncoderSettings()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getInputAttachments() != null)\r\n        sb.append(\"InputAttachments: \").append(getInputAttachments()).append(\",\");\r\n    if (getInputSpecification() != null)\r\n        sb.append(\"InputSpecification: \").append(getInputSpecification()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPipelinesRunningCount() != null)\r\n        sb.append(\"PipelinesRunningCount: \").append(getPipelinesRunningCount()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.waiters.AWSOpsWorksWaiters.instanceOnline",
	"Comment": "builds a instanceonline waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstancesRequest> instanceOnline(){\r\n    return new WaiterBuilder<DescribeInstancesRequest, DescribeInstancesResult>().withSdkFunction(new DescribeInstancesFunction(client)).withAcceptors(new InstanceOnline.IsOnlineMatcher(), new InstanceOnline.IsSetup_failedMatcher(), new InstanceOnline.IsShutting_downMatcher(), new InstanceOnline.IsStart_failedMatcher(), new InstanceOnline.IsStoppedMatcher(), new InstanceOnline.IsStoppingMatcher(), new InstanceOnline.IsTerminatingMatcher(), new InstanceOnline.IsTerminatedMatcher(), new InstanceOnline.IsStop_failedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.UpdateInputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.VpcSecurityGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcSecurityGroupId() != null)\r\n        sb.append(\"VpcSecurityGroupId: \").append(getVpcSecurityGroupId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.RemoveAccountFromOrganizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.AWSMediaConvertClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutMetricFilterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DeleteDBClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CreateDBClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CreateDBSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getDBSubnetGroupDescription() != null)\r\n        sb.append(\"DBSubnetGroupDescription: \").append(getDBSubnetGroupDescription()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeMetricFiltersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getFilterNamePrefix() != null)\r\n        sb.append(\"FilterNamePrefix: \").append(getFilterNamePrefix()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getMetricNamespace() != null)\r\n        sb.append(\"MetricNamespace: \").append(getMetricNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.RtmpGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthenticationScheme() != null)\r\n        sb.append(\"AuthenticationScheme: \").append(getAuthenticationScheme()).append(\",\");\r\n    if (getCacheFullBehavior() != null)\r\n        sb.append(\"CacheFullBehavior: \").append(getCacheFullBehavior()).append(\",\");\r\n    if (getCacheLength() != null)\r\n        sb.append(\"CacheLength: \").append(getCacheLength()).append(\",\");\r\n    if (getCaptionData() != null)\r\n        sb.append(\"CaptionData: \").append(getCaptionData()).append(\",\");\r\n    if (getInputLossAction() != null)\r\n        sb.append(\"InputLossAction: \").append(getInputLossAction()).append(\",\");\r\n    if (getRestartDelay() != null)\r\n        sb.append(\"RestartDelay: \").append(getRestartDelay());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AudioPidSelection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPid() != null)\r\n        sb.append(\"Pid: \").append(getPid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ChannelSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getEgressEndpoints() != null)\r\n        sb.append(\"EgressEndpoints: \").append(getEgressEndpoints()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getInputAttachments() != null)\r\n        sb.append(\"InputAttachments: \").append(getInputAttachments()).append(\",\");\r\n    if (getInputSpecification() != null)\r\n        sb.append(\"InputSpecification: \").append(getInputSpecification()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPipelinesRunningCount() != null)\r\n        sb.append(\"PipelinesRunningCount: \").append(getPipelinesRunningCount()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeAppsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getAppIds() != null)\r\n        sb.append(\"AppIds: \").append(getAppIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.MetricQuery.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetric() != null)\r\n        sb.append(\"Metric: \").append(getMetric()).append(\",\");\r\n    if (getGroupBy() != null)\r\n        sb.append(\"GroupBy: \").append(getGroupBy()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.DashPackage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getManifestWindowSeconds() != null)\r\n        sb.append(\"ManifestWindowSeconds: \").append(getManifestWindowSeconds()).append(\",\");\r\n    if (getMinBufferTimeSeconds() != null)\r\n        sb.append(\"MinBufferTimeSeconds: \").append(getMinBufferTimeSeconds()).append(\",\");\r\n    if (getMinUpdatePeriodSeconds() != null)\r\n        sb.append(\"MinUpdatePeriodSeconds: \").append(getMinUpdatePeriodSeconds()).append(\",\");\r\n    if (getPeriodTriggers() != null)\r\n        sb.append(\"PeriodTriggers: \").append(getPeriodTriggers()).append(\",\");\r\n    if (getProfile() != null)\r\n        sb.append(\"Profile: \").append(getProfile()).append(\",\");\r\n    if (getSegmentDurationSeconds() != null)\r\n        sb.append(\"SegmentDurationSeconds: \").append(getSegmentDurationSeconds()).append(\",\");\r\n    if (getStreamSelection() != null)\r\n        sb.append(\"StreamSelection: \").append(getStreamSelection()).append(\",\");\r\n    if (getSuggestedPresentationDelaySeconds() != null)\r\n        sb.append(\"SuggestedPresentationDelaySeconds: \").append(getSuggestedPresentationDelaySeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.AWSMediaConvertClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CreatePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AudioNormalizationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithm() != null)\r\n        sb.append(\"Algorithm: \").append(getAlgorithm()).append(\",\");\r\n    if (getAlgorithmControl() != null)\r\n        sb.append(\"AlgorithmControl: \").append(getAlgorithmControl()).append(\",\");\r\n    if (getTargetLkfs() != null)\r\n        sb.append(\"TargetLkfs: \").append(getTargetLkfs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DeleteEventSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetQueryResultsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueryId() != null)\r\n        sb.append(\"QueryId: \").append(getQueryId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.AWSMediaLiveAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.StartChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacecommerceanalytics.model.StartSupportDataExportResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSetRequestId() != null)\r\n        sb.append(\"DataSetRequestId: \").append(getDataSetRequestId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateDataSourceFromRDSRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId()).append(\",\");\r\n    if (getDataSourceName() != null)\r\n        sb.append(\"DataSourceName: \").append(getDataSourceName()).append(\",\");\r\n    if (getRDSData() != null)\r\n        sb.append(\"RDSData: \").append(getRDSData()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getComputeStatistics() != null)\r\n        sb.append(\"ComputeStatistics: \").append(getComputeStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteEvaluationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationId() != null)\r\n        sb.append(\"EvaluationId: \").append(getEvaluationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListReviewPolicyResultsForHITRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId()).append(\",\");\r\n    if (getPolicyLevels() != null)\r\n        sb.append(\"PolicyLevels: \").append(getPolicyLevels()).append(\",\");\r\n    if (getRetrieveActions() != null)\r\n        sb.append(\"RetrieveActions: \").append(getRetrieveActions()).append(\",\");\r\n    if (getRetrieveResults() != null)\r\n        sb.append(\"RetrieveResults: \").append(getRetrieveResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteCampaignRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCampaignId() != null)\r\n        sb.append(\"CampaignId: \").append(getCampaignId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacecommerceanalytics.model.GenerateDataSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSetRequestId() != null)\r\n        sb.append(\"DataSetRequestId: \").append(getDataSetRequestId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DeleteUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.UpdateEvaluationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationId() != null)\r\n        sb.append(\"EvaluationId: \").append(getEvaluationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteDestinationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.AWSMediaStoreClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.StandardHlsSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioRenditionSets() != null)\r\n        sb.append(\"AudioRenditionSets: \").append(getAudioRenditionSets()).append(\",\");\r\n    if (getM3u8Settings() != null)\r\n        sb.append(\"M3u8Settings: \").append(getM3u8Settings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventItemResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetBaiduChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.waiters.AWSOpsWorksWaiters.instanceTerminated",
	"Comment": "builds a instanceterminated waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstancesRequest> instanceTerminated(){\r\n    return new WaiterBuilder<DescribeInstancesRequest, DescribeInstancesResult>().withSdkFunction(new DescribeInstancesFunction(client)).withAcceptors(new InstanceTerminated.IsTerminatedMatcher(), new InstanceTerminated.IsResourceNotFoundExceptionMatcher(), new InstanceTerminated.IsBootingMatcher(), new InstanceTerminated.IsOnlineMatcher(), new InstanceTerminated.IsPendingMatcher(), new InstanceTerminated.IsRebootingMatcher(), new InstanceTerminated.IsRequestedMatcher(), new InstanceTerminated.IsRunning_setupMatcher(), new InstanceTerminated.IsSetup_failedMatcher(), new InstanceTerminated.IsStart_failedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.updateHITTypeOfHIT",
	"Comment": "the updatehittypeofhit operation allows you to change the hittype properties of a hit. thisoperation disassociates the hit from its old hittype properties and associates it with the new hittypeproperties. the hit takes on the properties of the new hittype in place of the old ones.",
	"Method": "UpdateHITTypeOfHITResult updateHITTypeOfHIT(UpdateHITTypeOfHITRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateHITTypeOfHIT(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.CancelExportTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.CmafPackageCreateOrUpdateParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getHlsManifests() != null)\r\n        sb.append(\"HlsManifests: \").append(getHlsManifests()).append(\",\");\r\n    if (getSegmentDurationSeconds() != null)\r\n        sb.append(\"SegmentDurationSeconds: \").append(getSegmentDurationSeconds()).append(\",\");\r\n    if (getSegmentPrefix() != null)\r\n        sb.append(\"SegmentPrefix: \").append(getSegmentPrefix()).append(\",\");\r\n    if (getStreamSelection() != null)\r\n        sb.append(\"StreamSelection: \").append(getStreamSelection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.UpgradeTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getAutoUpgrade() != null)\r\n        sb.append(\"AutoUpgrade: \").append(getAutoUpgrade()).append(\",\");\r\n    if (getIsMajorVersionUpgrade() != null)\r\n        sb.append(\"IsMajorVersionUpgrade: \").append(getIsMajorVersionUpgrade());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DescribeMLModelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResults() != null)\r\n        sb.append(\"Results: \").append(getResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.AccountAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMaximum() != null)\r\n        sb.append(\"Maximum: \").append(getMaximum()).append(\",\");\r\n    if (getUsed() != null)\r\n        sb.append(\"Used: \").append(getUsed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.CreateOriginEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId()).append(\",\");\r\n    if (getCmafPackage() != null)\r\n        sb.append(\"CmafPackage: \").append(getCmafPackage()).append(\",\");\r\n    if (getDashPackage() != null)\r\n        sb.append(\"DashPackage: \").append(getDashPackage()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsPackage() != null)\r\n        sb.append(\"HlsPackage: \").append(getHlsPackage()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getManifestName() != null)\r\n        sb.append(\"ManifestName: \").append(getManifestName()).append(\",\");\r\n    if (getMssPackage() != null)\r\n        sb.append(\"MssPackage: \").append(getMssPackage()).append(\",\");\r\n    if (getStartoverWindowSeconds() != null)\r\n        sb.append(\"StartoverWindowSeconds: \").append(getStartoverWindowSeconds()).append(\",\");\r\n    if (getTimeDelaySeconds() != null)\r\n        sb.append(\"TimeDelaySeconds: \").append(getTimeDelaySeconds()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getWhitelist() != null)\r\n        sb.append(\"Whitelist: \").append(getWhitelist());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.StaticKeyProvider.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyFormat() != null)\r\n        sb.append(\"KeyFormat: \").append(getKeyFormat()).append(\",\");\r\n    if (getKeyFormatVersions() != null)\r\n        sb.append(\"KeyFormatVersions: \").append(getKeyFormatVersions()).append(\",\");\r\n    if (getStaticKeyValue() != null)\r\n        sb.append(\"StaticKeyValue: \").append(getStaticKeyValue()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.OutputLocationRef.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationRefId() != null)\r\n        sb.append(\"DestinationRefId: \").append(getDestinationRefId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeleteStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getServiceRoleArn() != null)\r\n        sb.append(\"ServiceRoleArn: \").append(getServiceRoleArn()).append(\",\");\r\n    if (getDefaultInstanceProfileArn() != null)\r\n        sb.append(\"DefaultInstanceProfileArn: \").append(getDefaultInstanceProfileArn()).append(\",\");\r\n    if (getDefaultOs() != null)\r\n        sb.append(\"DefaultOs: \").append(getDefaultOs()).append(\",\");\r\n    if (getHostnameTheme() != null)\r\n        sb.append(\"HostnameTheme: \").append(getHostnameTheme()).append(\",\");\r\n    if (getDefaultAvailabilityZone() != null)\r\n        sb.append(\"DefaultAvailabilityZone: \").append(getDefaultAvailabilityZone()).append(\",\");\r\n    if (getDefaultSubnetId() != null)\r\n        sb.append(\"DefaultSubnetId: \").append(getDefaultSubnetId()).append(\",\");\r\n    if (getCustomJson() != null)\r\n        sb.append(\"CustomJson: \").append(getCustomJson()).append(\",\");\r\n    if (getConfigurationManager() != null)\r\n        sb.append(\"ConfigurationManager: \").append(getConfigurationManager()).append(\",\");\r\n    if (getChefConfiguration() != null)\r\n        sb.append(\"ChefConfiguration: \").append(getChefConfiguration()).append(\",\");\r\n    if (getUseCustomCookbooks() != null)\r\n        sb.append(\"UseCustomCookbooks: \").append(getUseCustomCookbooks()).append(\",\");\r\n    if (getUseOpsworksSecurityGroups() != null)\r\n        sb.append(\"UseOpsworksSecurityGroups: \").append(getUseOpsworksSecurityGroups()).append(\",\");\r\n    if (getCustomCookbooksSource() != null)\r\n        sb.append(\"CustomCookbooksSource: \").append(getCustomCookbooksSource()).append(\",\");\r\n    if (getDefaultSshKeyName() != null)\r\n        sb.append(\"DefaultSshKeyName: \").append(getDefaultSshKeyName()).append(\",\");\r\n    if (getDefaultRootDeviceType() != null)\r\n        sb.append(\"DefaultRootDeviceType: \").append(getDefaultRootDeviceType()).append(\",\");\r\n    if (getAgentVersion() != null)\r\n        sb.append(\"AgentVersion: \").append(getAgentVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.listQualificationTypes",
	"Comment": "the listqualificationtypes operation returns a list of qualification types, filtered by an optionalsearch term.",
	"Method": "ListQualificationTypesResult listQualificationTypes(ListQualificationTypesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListQualificationTypes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.waiters.AmazonMachineLearningWaiters.dataSourceAvailable",
	"Comment": "builds a datasourceavailable waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeDataSourcesRequest> dataSourceAvailable(){\r\n    return new WaiterBuilder<DescribeDataSourcesRequest, DescribeDataSourcesResult>().withSdkFunction(new DescribeDataSourcesFunction(client)).withAcceptors(new DataSourceAvailable.IsCOMPLETEDMatcher(), new DataSourceAvailable.IsFAILEDMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.H265QvbrSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxAverageBitrate() != null)\r\n        sb.append(\"MaxAverageBitrate: \").append(getMaxAverageBitrate()).append(\",\");\r\n    if (getQvbrQualityLevel() != null)\r\n        sb.append(\"QvbrQualityLevel: \").append(getQvbrQualityLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.OperatingSystemConfigurationManager.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListReviewableHITsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITTypeId() != null)\r\n        sb.append(\"HITTypeId: \").append(getHITTypeId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.HlsGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdMarkers() != null)\r\n        sb.append(\"AdMarkers: \").append(getAdMarkers()).append(\",\");\r\n    if (getBaseUrl() != null)\r\n        sb.append(\"BaseUrl: \").append(getBaseUrl()).append(\",\");\r\n    if (getCaptionLanguageMappings() != null)\r\n        sb.append(\"CaptionLanguageMappings: \").append(getCaptionLanguageMappings()).append(\",\");\r\n    if (getCaptionLanguageSetting() != null)\r\n        sb.append(\"CaptionLanguageSetting: \").append(getCaptionLanguageSetting()).append(\",\");\r\n    if (getClientCache() != null)\r\n        sb.append(\"ClientCache: \").append(getClientCache()).append(\",\");\r\n    if (getCodecSpecification() != null)\r\n        sb.append(\"CodecSpecification: \").append(getCodecSpecification()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getDirectoryStructure() != null)\r\n        sb.append(\"DirectoryStructure: \").append(getDirectoryStructure()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getManifestCompression() != null)\r\n        sb.append(\"ManifestCompression: \").append(getManifestCompression()).append(\",\");\r\n    if (getManifestDurationFormat() != null)\r\n        sb.append(\"ManifestDurationFormat: \").append(getManifestDurationFormat()).append(\",\");\r\n    if (getMinFinalSegmentLength() != null)\r\n        sb.append(\"MinFinalSegmentLength: \").append(getMinFinalSegmentLength()).append(\",\");\r\n    if (getMinSegmentLength() != null)\r\n        sb.append(\"MinSegmentLength: \").append(getMinSegmentLength()).append(\",\");\r\n    if (getOutputSelection() != null)\r\n        sb.append(\"OutputSelection: \").append(getOutputSelection()).append(\",\");\r\n    if (getProgramDateTime() != null)\r\n        sb.append(\"ProgramDateTime: \").append(getProgramDateTime()).append(\",\");\r\n    if (getProgramDateTimePeriod() != null)\r\n        sb.append(\"ProgramDateTimePeriod: \").append(getProgramDateTimePeriod()).append(\",\");\r\n    if (getSegmentControl() != null)\r\n        sb.append(\"SegmentControl: \").append(getSegmentControl()).append(\",\");\r\n    if (getSegmentLength() != null)\r\n        sb.append(\"SegmentLength: \").append(getSegmentLength()).append(\",\");\r\n    if (getSegmentsPerSubdirectory() != null)\r\n        sb.append(\"SegmentsPerSubdirectory: \").append(getSegmentsPerSubdirectory()).append(\",\");\r\n    if (getStreamInfResolution() != null)\r\n        sb.append(\"StreamInfResolution: \").append(getStreamInfResolution()).append(\",\");\r\n    if (getTimedMetadataId3Frame() != null)\r\n        sb.append(\"TimedMetadataId3Frame: \").append(getTimedMetadataId3Frame()).append(\",\");\r\n    if (getTimedMetadataId3Period() != null)\r\n        sb.append(\"TimedMetadataId3Period: \").append(getTimedMetadataId3Period()).append(\",\");\r\n    if (getTimestampDeltaMilliseconds() != null)\r\n        sb.append(\"TimestampDeltaMilliseconds: \").append(getTimestampDeltaMilliseconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.QueryCompileErrorLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartCharOffset() != null)\r\n        sb.append(\"StartCharOffset: \").append(getStartCharOffset()).append(\",\");\r\n    if (getEndCharOffset() != null)\r\n        sb.append(\"EndCharOffset: \").append(getEndCharOffset());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.ListFlowsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlows() != null)\r\n        sb.append(\"Flows: \").append(getFlows()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeEventCategoriesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventCategoriesMapList() != null)\r\n        sb.append(\"EventCategoriesMapList: \").append(getEventCategoriesMapList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Preset.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLastUpdated() != null)\r\n        sb.append(\"LastUpdated: \").append(getLastUpdated()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CreateInputSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWhitelistRules() != null)\r\n        sb.append(\"WhitelistRules: \").append(getWhitelistRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.ListOriginEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.OutputDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDurationInMs() != null)\r\n        sb.append(\"DurationInMs: \").append(getDurationInMs()).append(\",\");\r\n    if (getVideoDetails() != null)\r\n        sb.append(\"VideoDetails: \").append(getVideoDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DescribeBrokerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.EmbeddedPlusScte20DestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.AcceptHandshakeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshake() != null)\r\n        sb.append(\"Handshake: \").append(getHandshake());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.UpdateOriginEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCmafPackage() != null)\r\n        sb.append(\"CmafPackage: \").append(getCmafPackage()).append(\",\");\r\n    if (getDashPackage() != null)\r\n        sb.append(\"DashPackage: \").append(getDashPackage()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsPackage() != null)\r\n        sb.append(\"HlsPackage: \").append(getHlsPackage()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getManifestName() != null)\r\n        sb.append(\"ManifestName: \").append(getManifestName()).append(\",\");\r\n    if (getMssPackage() != null)\r\n        sb.append(\"MssPackage: \").append(getMssPackage()).append(\",\");\r\n    if (getStartoverWindowSeconds() != null)\r\n        sb.append(\"StartoverWindowSeconds: \").append(getStartoverWindowSeconds()).append(\",\");\r\n    if (getTimeDelaySeconds() != null)\r\n        sb.append(\"TimeDelaySeconds: \").append(getTimeDelaySeconds()).append(\",\");\r\n    if (getWhitelist() != null)\r\n        sb.append(\"Whitelist: \").append(getWhitelist());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DeleteBrokerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.ListOriginEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOriginEndpoints() != null)\r\n        sb.append(\"OriginEndpoints: \").append(getOriginEndpoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.ListProjectsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjects() != null)\r\n        sb.append(\"Projects: \").append(getProjects()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.UpdateEvaluationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationId() != null)\r\n        sb.append(\"EvaluationId: \").append(getEvaluationId()).append(\",\");\r\n    if (getEvaluationName() != null)\r\n        sb.append(\"EvaluationName: \").append(getEvaluationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBClusterSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getSnapshotType() != null)\r\n        sb.append(\"SnapshotType: \").append(getSnapshotType()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getIncludeShared() != null)\r\n        sb.append(\"IncludeShared: \").append(getIncludeShared()).append(\",\");\r\n    if (getIncludePublic() != null)\r\n        sb.append(\"IncludePublic: \").append(getIncludePublic());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateUserProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsopsworkscm using the current builder configuration.",
	"Method": "AWSOpsWorksCM build(AwsSyncClientParams params){\r\n    return new AWSOpsWorksCMClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.model.UsageRecordResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUsageRecord() != null)\r\n        sb.append(\"UsageRecord: \").append(getUsageRecord()).append(\",\");\r\n    if (getMeteringRecordId() != null)\r\n        sb.append(\"MeteringRecordId: \").append(getMeteringRecordId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.notifyWorkers",
	"Comment": "the notifyworkers operation sends an email to one or more workers that you specify with the workerid. you can specify up to 100 worker ids to send the same message with a single call to the notifyworkersoperation. the notifyworkers operation will send a notification email to a worker only if you have previouslyapproved or rejected work from the worker.",
	"Method": "NotifyWorkersResult notifyWorkers(NotifyWorkersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeNotifyWorkers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectClient.removeFlowOutput",
	"Comment": "removes an output from an existing flow. this request can be made only on an output that does not have anentitlement associated with it. if the output has an entitlement, you must revoke the entitlement instead. whenan entitlement is revoked from a flow, the service automatically removes the associated output.",
	"Method": "RemoveFlowOutputResult removeFlowOutput(RemoveFlowOutputRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveFlowOutput(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.UpdateInputSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputSecurityGroupId() != null)\r\n        sb.append(\"InputSecurityGroupId: \").append(getInputSecurityGroupId()).append(\",\");\r\n    if (getWhitelistRules() != null)\r\n        sb.append(\"WhitelistRules: \").append(getWhitelistRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.DeleteChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.AWSMigrationHubClient.importMigrationTask",
	"Comment": "registers a new migration task which represents a server, database, etc., being migrated to aws by a migrationtool.this api is a prerequisite to calling the notifymigrationtaskstate api as the migration tool mustfirst register the migration task with migration hub.",
	"Method": "ImportMigrationTaskResult importMigrationTask(ImportMigrationTaskRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeImportMigrationTask(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateHITWithHITTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITTypeId() != null)\r\n        sb.append(\"HITTypeId: \").append(getHITTypeId()).append(\",\");\r\n    if (getMaxAssignments() != null)\r\n        sb.append(\"MaxAssignments: \").append(getMaxAssignments()).append(\",\");\r\n    if (getLifetimeInSeconds() != null)\r\n        sb.append(\"LifetimeInSeconds: \").append(getLifetimeInSeconds()).append(\",\");\r\n    if (getQuestion() != null)\r\n        sb.append(\"Question: \").append(getQuestion()).append(\",\");\r\n    if (getRequesterAnnotation() != null)\r\n        sb.append(\"RequesterAnnotation: \").append(getRequesterAnnotation()).append(\",\");\r\n    if (getUniqueRequestToken() != null)\r\n        sb.append(\"UniqueRequestToken: \").append(getUniqueRequestToken()).append(\",\");\r\n    if (getAssignmentReviewPolicy() != null)\r\n        sb.append(\"AssignmentReviewPolicy: \").append(getAssignmentReviewPolicy()).append(\",\");\r\n    if (getHITReviewPolicy() != null)\r\n        sb.append(\"HITReviewPolicy: \").append(getHITReviewPolicy()).append(\",\");\r\n    if (getHITLayoutId() != null)\r\n        sb.append(\"HITLayoutId: \").append(getHITLayoutId()).append(\",\");\r\n    if (getHITLayoutParameters() != null)\r\n        sb.append(\"HITLayoutParameters: \").append(getHITLayoutParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.BatchScheduleActionCreateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduleActions() != null)\r\n        sb.append(\"ScheduleActions: \").append(getScheduleActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.HlsBasicPutSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionRetryInterval() != null)\r\n        sb.append(\"ConnectionRetryInterval: \").append(getConnectionRetryInterval()).append(\",\");\r\n    if (getFilecacheDuration() != null)\r\n        sb.append(\"FilecacheDuration: \").append(getFilecacheDuration()).append(\",\");\r\n    if (getNumRetries() != null)\r\n        sb.append(\"NumRetries: \").append(getNumRetries()).append(\",\");\r\n    if (getRestartDelay() != null)\r\n        sb.append(\"RestartDelay: \").append(getRestartDelay());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.GetPresetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.RDSDataSpec.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatabaseInformation() != null)\r\n        sb.append(\"DatabaseInformation: \").append(getDatabaseInformation()).append(\",\");\r\n    if (getSelectSqlQuery() != null)\r\n        sb.append(\"SelectSqlQuery: \").append(getSelectSqlQuery()).append(\",\");\r\n    if (getDatabaseCredentials() != null)\r\n        sb.append(\"DatabaseCredentials: \").append(getDatabaseCredentials()).append(\",\");\r\n    if (getS3StagingLocation() != null)\r\n        sb.append(\"S3StagingLocation: \").append(getS3StagingLocation()).append(\",\");\r\n    if (getDataRearrangement() != null)\r\n        sb.append(\"DataRearrangement: \").append(getDataRearrangement()).append(\",\");\r\n    if (getDataSchema() != null)\r\n        sb.append(\"DataSchema: \").append(getDataSchema()).append(\",\");\r\n    if (getDataSchemaUri() != null)\r\n        sb.append(\"DataSchemaUri: \").append(getDataSchemaUri()).append(\",\");\r\n    if (getResourceRole() != null)\r\n        sb.append(\"ResourceRole: \").append(getResourceRole()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AudioSelector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSelectorSettings() != null)\r\n        sb.append(\"SelectorSettings: \").append(getSelectorSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CaptionSelectorSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAribSourceSettings() != null)\r\n        sb.append(\"AribSourceSettings: \").append(getAribSourceSettings()).append(\",\");\r\n    if (getDvbSubSourceSettings() != null)\r\n        sb.append(\"DvbSubSourceSettings: \").append(getDvbSubSourceSettings()).append(\",\");\r\n    if (getEmbeddedSourceSettings() != null)\r\n        sb.append(\"EmbeddedSourceSettings: \").append(getEmbeddedSourceSettings()).append(\",\");\r\n    if (getScte20SourceSettings() != null)\r\n        sb.append(\"Scte20SourceSettings: \").append(getScte20SourceSettings()).append(\",\");\r\n    if (getScte27SourceSettings() != null)\r\n        sb.append(\"Scte27SourceSettings: \").append(getScte27SourceSettings()).append(\",\");\r\n    if (getTeletextSourceSettings() != null)\r\n        sb.append(\"TeletextSourceSettings: \").append(getTeletextSourceSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.AWSMobileClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetQualificationScoreResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualification() != null)\r\n        sb.append(\"Qualification: \").append(getQualification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CreateDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getReplicationSourceIdentifier() != null)\r\n        sb.append(\"ReplicationSourceIdentifier: \").append(getReplicationSourceIdentifier()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getPreSignedUrl() != null)\r\n        sb.append(\"PreSignedUrl: \").append(getPreSignedUrl()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeServiceErrorsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getServiceErrorIds() != null)\r\n        sb.append(\"ServiceErrorIds: \").append(getServiceErrorIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBParameterGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDBParameterGroupArn() != null)\r\n        sb.append(\"DBParameterGroupArn: \").append(getDBParameterGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Id3Insertion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId3() != null)\r\n        sb.append(\"Id3: \").append(getId3()).append(\",\");\r\n    if (getTimecode() != null)\r\n        sb.append(\"Timecode: \").append(getTimecode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.waiters.AmazonNeptuneWaiters.dBInstanceAvailable",
	"Comment": "builds a dbinstanceavailable waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeDBInstancesRequest> dBInstanceAvailable(){\r\n    return new WaiterBuilder<DescribeDBInstancesRequest, DescribeDBInstancesResult>().withSdkFunction(new DescribeDBInstancesFunction(client)).withAcceptors(new DBInstanceAvailable.IsAvailableMatcher(), new DBInstanceAvailable.IsDeletedMatcher(), new DBInstanceAvailable.IsDeletingMatcher(), new DBInstanceAvailable.IsFailedMatcher(), new DBInstanceAvailable.IsIncompatiblerestoreMatcher(), new DBInstanceAvailable.IsIncompatibleparametersMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AssociateCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.StartInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DescribeServersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServers() != null)\r\n        sb.append(\"Servers: \").append(getServers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectClient.addFlowOutputs",
	"Comment": "adds outputs to an existing flow. you can create up to 20 outputs per flow.",
	"Method": "AddFlowOutputsResult addFlowOutputs(AddFlowOutputsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddFlowOutputs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.DeleteOriginEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribeCreateAccountStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateAccountStatus() != null)\r\n        sb.append(\"CreateAccountStatus: \").append(getCreateAccountStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Ac3Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getBitstreamMode() != null)\r\n        sb.append(\"BitstreamMode: \").append(getBitstreamMode()).append(\",\");\r\n    if (getCodingMode() != null)\r\n        sb.append(\"CodingMode: \").append(getCodingMode()).append(\",\");\r\n    if (getDialnorm() != null)\r\n        sb.append(\"Dialnorm: \").append(getDialnorm()).append(\",\");\r\n    if (getDrcProfile() != null)\r\n        sb.append(\"DrcProfile: \").append(getDrcProfile()).append(\",\");\r\n    if (getLfeFilter() != null)\r\n        sb.append(\"LfeFilter: \").append(getLfeFilter()).append(\",\");\r\n    if (getMetadataControl() != null)\r\n        sb.append(\"MetadataControl: \").append(getMetadataControl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte35Descriptor.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScte35DescriptorSettings() != null)\r\n        sb.append(\"Scte35DescriptorSettings: \").append(getScte35DescriptorSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.InstancesCount.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssigning() != null)\r\n        sb.append(\"Assigning: \").append(getAssigning()).append(\",\");\r\n    if (getBooting() != null)\r\n        sb.append(\"Booting: \").append(getBooting()).append(\",\");\r\n    if (getConnectionLost() != null)\r\n        sb.append(\"ConnectionLost: \").append(getConnectionLost()).append(\",\");\r\n    if (getDeregistering() != null)\r\n        sb.append(\"Deregistering: \").append(getDeregistering()).append(\",\");\r\n    if (getOnline() != null)\r\n        sb.append(\"Online: \").append(getOnline()).append(\",\");\r\n    if (getPending() != null)\r\n        sb.append(\"Pending: \").append(getPending()).append(\",\");\r\n    if (getRebooting() != null)\r\n        sb.append(\"Rebooting: \").append(getRebooting()).append(\",\");\r\n    if (getRegistered() != null)\r\n        sb.append(\"Registered: \").append(getRegistered()).append(\",\");\r\n    if (getRegistering() != null)\r\n        sb.append(\"Registering: \").append(getRegistering()).append(\",\");\r\n    if (getRequested() != null)\r\n        sb.append(\"Requested: \").append(getRequested()).append(\",\");\r\n    if (getRunningSetup() != null)\r\n        sb.append(\"RunningSetup: \").append(getRunningSetup()).append(\",\");\r\n    if (getSetupFailed() != null)\r\n        sb.append(\"SetupFailed: \").append(getSetupFailed()).append(\",\");\r\n    if (getShuttingDown() != null)\r\n        sb.append(\"ShuttingDown: \").append(getShuttingDown()).append(\",\");\r\n    if (getStartFailed() != null)\r\n        sb.append(\"StartFailed: \").append(getStartFailed()).append(\",\");\r\n    if (getStopFailed() != null)\r\n        sb.append(\"StopFailed: \").append(getStopFailed()).append(\",\");\r\n    if (getStopped() != null)\r\n        sb.append(\"Stopped: \").append(getStopped()).append(\",\");\r\n    if (getStopping() != null)\r\n        sb.append(\"Stopping: \").append(getStopping()).append(\",\");\r\n    if (getTerminated() != null)\r\n        sb.append(\"Terminated: \").append(getTerminated()).append(\",\");\r\n    if (getTerminating() != null)\r\n        sb.append(\"Terminating: \").append(getTerminating()).append(\",\");\r\n    if (getUnassigning() != null)\r\n        sb.append(\"Unassigning: \").append(getUnassigning());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddresses() != null)\r\n        sb.append(\"Addresses: \").append(getAddresses()).append(\",\");\r\n    if (getContext() != null)\r\n        sb.append(\"Context: \").append(getContext()).append(\",\");\r\n    if (getEndpoints() != null)\r\n        sb.append(\"Endpoints: \").append(getEndpoints()).append(\",\");\r\n    if (getMessageConfiguration() != null)\r\n        sb.append(\"MessageConfiguration: \").append(getMessageConfiguration()).append(\",\");\r\n    if (getTraceId() != null)\r\n        sb.append(\"TraceId: \").append(getTraceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.MssEncryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpekeKeyProvider() != null)\r\n        sb.append(\"SpekeKeyProvider: \").append(getSpekeKeyProvider());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.waiters.DescribeNodeAssociationStatusFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeNodeAssociationStatusResult apply(DescribeNodeAssociationStatusRequest describeNodeAssociationStatusRequest){\r\n    return client.describeNodeAssociationStatus(describeNodeAssociationStatusRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.waiters.DescribeBatchPredictionsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeBatchPredictionsResult apply(DescribeBatchPredictionsRequest describeBatchPredictionsRequest){\r\n    return client.describeBatchPredictions(describeBatchPredictionsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CreateJobTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getQueue() != null)\r\n        sb.append(\"Queue: \").append(getQueue()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.InviteAccountToOrganizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshake() != null)\r\n        sb.append(\"Handshake: \").append(getHandshake());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.HlsPackage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdMarkers() != null)\r\n        sb.append(\"AdMarkers: \").append(getAdMarkers()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getIncludeIframeOnlyStream() != null)\r\n        sb.append(\"IncludeIframeOnlyStream: \").append(getIncludeIframeOnlyStream()).append(\",\");\r\n    if (getPlaylistType() != null)\r\n        sb.append(\"PlaylistType: \").append(getPlaylistType()).append(\",\");\r\n    if (getPlaylistWindowSeconds() != null)\r\n        sb.append(\"PlaylistWindowSeconds: \").append(getPlaylistWindowSeconds()).append(\",\");\r\n    if (getProgramDateTimeIntervalSeconds() != null)\r\n        sb.append(\"ProgramDateTimeIntervalSeconds: \").append(getProgramDateTimeIntervalSeconds()).append(\",\");\r\n    if (getSegmentDurationSeconds() != null)\r\n        sb.append(\"SegmentDurationSeconds: \").append(getSegmentDurationSeconds()).append(\",\");\r\n    if (getStreamSelection() != null)\r\n        sb.append(\"StreamSelection: \").append(getStreamSelection()).append(\",\");\r\n    if (getUseAudioRenditionGroup() != null)\r\n        sb.append(\"UseAudioRenditionGroup: \").append(getUseAudioRenditionGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DisassociateCreatedArtifactRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getCreatedArtifactName() != null)\r\n        sb.append(\"CreatedArtifactName: \").append(getCreatedArtifactName()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.AWSMarketplaceMeteringAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmarketplacemeteringasync using the current builder configuration.",
	"Method": "AWSMarketplaceMeteringAsync build(AwsAsyncClientParams params){\r\n    return new AWSMarketplaceMeteringAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeExportTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.AWSMediaTailorClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DvbNitSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkId() != null)\r\n        sb.append(\"NetworkId: \").append(getNetworkId()).append(\",\");\r\n    if (getNetworkName() != null)\r\n        sb.append(\"NetworkName: \").append(getNetworkName()).append(\",\");\r\n    if (getRepInterval() != null)\r\n        sb.append(\"RepInterval: \").append(getRepInterval());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Event.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getClientSdkVersion() != null)\r\n        sb.append(\"ClientSdkVersion: \").append(getClientSdkVersion()).append(\",\");\r\n    if (getEventType() != null)\r\n        sb.append(\"EventType: \").append(getEventType()).append(\",\");\r\n    if (getMetrics() != null)\r\n        sb.append(\"Metrics: \").append(getMetrics()).append(\",\");\r\n    if (getSession() != null)\r\n        sb.append(\"Session: \").append(getSession()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.ListBundlesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleList() != null)\r\n        sb.append(\"BundleList: \").append(getBundleList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ResourcePendingMaintenanceActions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceIdentifier() != null)\r\n        sb.append(\"ResourceIdentifier: \").append(getResourceIdentifier()).append(\",\");\r\n    if (getPendingMaintenanceActionDetails() != null)\r\n        sb.append(\"PendingMaintenanceActionDetails: \").append(getPendingMaintenanceActionDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.EnableAWSServiceAccessResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DisassociateKmsKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.GetJobTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateExportJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportJobResponse() != null)\r\n        sb.append(\"ExportJobResponse: \").append(getExportJobResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteSubscriptionFilterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getFilterName() != null)\r\n        sb.append(\"FilterName: \").append(getFilterName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CaptionDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBurninDestinationSettings() != null)\r\n        sb.append(\"BurninDestinationSettings: \").append(getBurninDestinationSettings()).append(\",\");\r\n    if (getDestinationType() != null)\r\n        sb.append(\"DestinationType: \").append(getDestinationType()).append(\",\");\r\n    if (getDvbSubDestinationSettings() != null)\r\n        sb.append(\"DvbSubDestinationSettings: \").append(getDvbSubDestinationSettings()).append(\",\");\r\n    if (getSccDestinationSettings() != null)\r\n        sb.append(\"SccDestinationSettings: \").append(getSccDestinationSettings()).append(\",\");\r\n    if (getTeletextDestinationSettings() != null)\r\n        sb.append(\"TeletextDestinationSettings: \").append(getTeletextDestinationSettings()).append(\",\");\r\n    if (getTtmlDestinationSettings() != null)\r\n        sb.append(\"TtmlDestinationSettings: \").append(getTtmlDestinationSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.AWSMobileAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.CreateServerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociatePublicIpAddress() != null)\r\n        sb.append(\"AssociatePublicIpAddress: \").append(getAssociatePublicIpAddress()).append(\",\");\r\n    if (getDisableAutomatedBackup() != null)\r\n        sb.append(\"DisableAutomatedBackup: \").append(getDisableAutomatedBackup()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineModel() != null)\r\n        sb.append(\"EngineModel: \").append(getEngineModel()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getEngineAttributes() != null)\r\n        sb.append(\"EngineAttributes: \").append(getEngineAttributes()).append(\",\");\r\n    if (getBackupRetentionCount() != null)\r\n        sb.append(\"BackupRetentionCount: \").append(getBackupRetentionCount()).append(\",\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getInstanceProfileArn() != null)\r\n        sb.append(\"InstanceProfileArn: \").append(getInstanceProfileArn()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKeyPair() != null)\r\n        sb.append(\"KeyPair: \").append(getKeyPair()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getServiceRoleArn() != null)\r\n        sb.append(\"ServiceRoleArn: \").append(getServiceRoleArn()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ImportMigrationTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DeletePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.PredictResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrediction() != null)\r\n        sb.append(\"Prediction: \").append(getPrediction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.BundleDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getIconUrl() != null)\r\n        sb.append(\"IconUrl: \").append(getIconUrl()).append(\",\");\r\n    if (getAvailablePlatforms() != null)\r\n        sb.append(\"AvailablePlatforms: \").append(getAvailablePlatforms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeLogStreamsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogStreams() != null)\r\n        sb.append(\"LogStreams: \").append(getLogStreams()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteMLModelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.ListPlaybackConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.OutputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArchiveOutputSettings() != null)\r\n        sb.append(\"ArchiveOutputSettings: \").append(getArchiveOutputSettings()).append(\",\");\r\n    if (getHlsOutputSettings() != null)\r\n        sb.append(\"HlsOutputSettings: \").append(getHlsOutputSettings()).append(\",\");\r\n    if (getMsSmoothOutputSettings() != null)\r\n        sb.append(\"MsSmoothOutputSettings: \").append(getMsSmoothOutputSettings()).append(\",\");\r\n    if (getRtmpOutputSettings() != null)\r\n        sb.append(\"RtmpOutputSettings: \").append(getRtmpOutputSettings()).append(\",\");\r\n    if (getUdpOutputSettings() != null)\r\n        sb.append(\"UdpOutputSettings: \").append(getUdpOutputSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.GrantFlowEntitlementsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntitlements() != null)\r\n        sb.append(\"Entitlements: \").append(getEntitlements()).append(\",\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.UntagLogGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeleteAppRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAppId() != null)\r\n        sb.append(\"AppId: \").append(getAppId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.GetQueueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueue() != null)\r\n        sb.append(\"Queue: \").append(getQueue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.StartStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSegmentResponse() != null)\r\n        sb.append(\"SegmentResponse: \").append(getSegmentResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateQualificationTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getKeywords() != null)\r\n        sb.append(\"Keywords: \").append(getKeywords()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getQualificationTypeStatus() != null)\r\n        sb.append(\"QualificationTypeStatus: \").append(getQualificationTypeStatus()).append(\",\");\r\n    if (getRetryDelayInSeconds() != null)\r\n        sb.append(\"RetryDelayInSeconds: \").append(getRetryDelayInSeconds()).append(\",\");\r\n    if (getTest() != null)\r\n        sb.append(\"Test: \").append(getTest()).append(\",\");\r\n    if (getAnswerKey() != null)\r\n        sb.append(\"AnswerKey: \").append(getAnswerKey()).append(\",\");\r\n    if (getTestDurationInSeconds() != null)\r\n        sb.append(\"TestDurationInSeconds: \").append(getTestDurationInSeconds()).append(\",\");\r\n    if (getAutoGranted() != null)\r\n        sb.append(\"AutoGranted: \").append(getAutoGranted()).append(\",\");\r\n    if (getAutoGrantedValue() != null)\r\n        sb.append(\"AutoGrantedValue: \").append(getAutoGrantedValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonneptune using the current builder configuration.",
	"Method": "AmazonNeptune build(AwsSyncClientParams params){\r\n    return new AmazonNeptuneClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.AWSMediaConvertAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmediaconvertasync using the current builder configuration.",
	"Method": "AWSMediaConvertAsync build(AwsAsyncClientParams params){\r\n    return new AWSMediaConvertAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DisableAWSServiceAccessRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServicePrincipal() != null)\r\n        sb.append(\"ServicePrincipal: \").append(getServicePrincipal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ResultField.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getField() != null)\r\n        sb.append(\"Field: \").append(getField()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.AWSOrganizationsClient.deleteOrganization",
	"Comment": "deletes the organization. you can delete an organization only by using credentials from the master account. theorganization must be empty of member accounts.",
	"Method": "DeleteOrganizationResult deleteOrganization(DeleteOrganizationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteOrganization(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.DisassociateMemberAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CreateJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBillingTagsSource() != null)\r\n        sb.append(\"BillingTagsSource: \").append(getBillingTagsSource()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getJobTemplate() != null)\r\n        sb.append(\"JobTemplate: \").append(getJobTemplate()).append(\",\");\r\n    if (getQueue() != null)\r\n        sb.append(\"Queue: \").append(getQueue()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings()).append(\",\");\r\n    if (getUserMetadata() != null)\r\n        sb.append(\"UserMetadata: \").append(getUserMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefineSegment() != null)\r\n        sb.append(\"DefineSegment: \").append(getDefineSegment()).append(\",\");\r\n    if (getExternalId() != null)\r\n        sb.append(\"ExternalId: \").append(getExternalId()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getRegisterEndpoints() != null)\r\n        sb.append(\"RegisterEndpoints: \").append(getRegisterEndpoints()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getS3Url() != null)\r\n        sb.append(\"S3Url: \").append(getS3Url()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getSegmentName() != null)\r\n        sb.append(\"SegmentName: \").append(getSegmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetBatchPredictionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBatchPredictionId() != null)\r\n        sb.append(\"BatchPredictionId: \").append(getBatchPredictionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.model.ResolveCustomerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegistrationToken() != null)\r\n        sb.append(\"RegistrationToken: \").append(getRegistrationToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte35DeliveryRestrictions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArchiveAllowedFlag() != null)\r\n        sb.append(\"ArchiveAllowedFlag: \").append(getArchiveAllowedFlag()).append(\",\");\r\n    if (getDeviceRestrictions() != null)\r\n        sb.append(\"DeviceRestrictions: \").append(getDeviceRestrictions()).append(\",\");\r\n    if (getNoRegionalBlackoutFlag() != null)\r\n        sb.append(\"NoRegionalBlackoutFlag: \").append(getNoRegionalBlackoutFlag()).append(\",\");\r\n    if (getWebDeliveryAllowedFlag() != null)\r\n        sb.append(\"WebDeliveryAllowedFlag: \").append(getWebDeliveryAllowedFlag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DescribeMigrationTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMigrationTask() != null)\r\n        sb.append(\"MigrationTask: \").append(getMigrationTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ModifyDBSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getDBSubnetGroupDescription() != null)\r\n        sb.append(\"DBSubnetGroupDescription: \").append(getDBSubnetGroupDescription()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.WavSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBitDepth() != null)\r\n        sb.append(\"BitDepth: \").append(getBitDepth()).append(\",\");\r\n    if (getChannels() != null)\r\n        sb.append(\"Channels: \").append(getChannels()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.NetworkInputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHlsInputSettings() != null)\r\n        sb.append(\"HlsInputSettings: \").append(getHlsInputSettings()).append(\",\");\r\n    if (getServerValidation() != null)\r\n        sb.append(\"ServerValidation: \").append(getServerValidation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.model.RegisterUsageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicKeyRotationTimestamp() != null)\r\n        sb.append(\"PublicKeyRotationTimestamp: \").append(getPublicKeyRotationTimestamp()).append(\",\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.S3ResourceClassificationUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getClassificationTypeUpdate() != null)\r\n        sb.append(\"ClassificationTypeUpdate: \").append(getClassificationTypeUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ListQueuesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getListBy() != null)\r\n        sb.append(\"ListBy: \").append(getListBy()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOrder() != null)\r\n        sb.append(\"Order: \").append(getOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ListInputsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCampaignResponse() != null)\r\n        sb.append(\"CampaignResponse: \").append(getCampaignResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Input.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioSelectorGroups() != null)\r\n        sb.append(\"AudioSelectorGroups: \").append(getAudioSelectorGroups()).append(\",\");\r\n    if (getAudioSelectors() != null)\r\n        sb.append(\"AudioSelectors: \").append(getAudioSelectors()).append(\",\");\r\n    if (getCaptionSelectors() != null)\r\n        sb.append(\"CaptionSelectors: \").append(getCaptionSelectors()).append(\",\");\r\n    if (getDeblockFilter() != null)\r\n        sb.append(\"DeblockFilter: \").append(getDeblockFilter()).append(\",\");\r\n    if (getDecryptionSettings() != null)\r\n        sb.append(\"DecryptionSettings: \").append(getDecryptionSettings()).append(\",\");\r\n    if (getDenoiseFilter() != null)\r\n        sb.append(\"DenoiseFilter: \").append(getDenoiseFilter()).append(\",\");\r\n    if (getFileInput() != null)\r\n        sb.append(\"FileInput: \").append(getFileInput()).append(\",\");\r\n    if (getFilterEnable() != null)\r\n        sb.append(\"FilterEnable: \").append(getFilterEnable()).append(\",\");\r\n    if (getFilterStrength() != null)\r\n        sb.append(\"FilterStrength: \").append(getFilterStrength()).append(\",\");\r\n    if (getImageInserter() != null)\r\n        sb.append(\"ImageInserter: \").append(getImageInserter()).append(\",\");\r\n    if (getInputClippings() != null)\r\n        sb.append(\"InputClippings: \").append(getInputClippings()).append(\",\");\r\n    if (getProgramNumber() != null)\r\n        sb.append(\"ProgramNumber: \").append(getProgramNumber()).append(\",\");\r\n    if (getPsiControl() != null)\r\n        sb.append(\"PsiControl: \").append(getPsiControl()).append(\",\");\r\n    if (getTimecodeSource() != null)\r\n        sb.append(\"TimecodeSource: \").append(getTimecodeSource()).append(\",\");\r\n    if (getVideoSelector() != null)\r\n        sb.append(\"VideoSelector: \").append(getVideoSelector());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CreateAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateAccountStatus() != null)\r\n        sb.append(\"CreateAccountStatus: \").append(getCreateAccountStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.AWSMediaConvertClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmediaconvert using the current builder configuration.",
	"Method": "AWSMediaConvert build(AwsSyncClientParams params){\r\n    return new AWSMediaConvertClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.ElasticLoadBalancer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticLoadBalancerName() != null)\r\n        sb.append(\"ElasticLoadBalancerName: \").append(getElasticLoadBalancerName()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getDnsName() != null)\r\n        sb.append(\"DnsName: \").append(getDnsName()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getEc2InstanceIds() != null)\r\n        sb.append(\"Ec2InstanceIds: \").append(getEc2InstanceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateMyUserProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CreateJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJob() != null)\r\n        sb.append(\"Job: \").append(getJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateEvaluationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationId() != null)\r\n        sb.append(\"EvaluationId: \").append(getEvaluationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RegisterRdsDbInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.AWSOpsWorksClient.describeAgentVersions",
	"Comment": "describes the available aws opsworks stacks agent versions. you must specify a stack id or a configurationmanager. describeagentversions returns a list of available agent versions for the specified stack orconfiguration manager.",
	"Method": "DescribeAgentVersionsResult describeAgentVersions(DescribeAgentVersionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAgentVersions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.addTagsToResource",
	"Comment": "adds metadata tags to an amazon neptune resource. these tags can also be used with cost allocation reporting totrack cost associated with amazon neptune resources, or used in a condition statement in an iam policy for amazonneptune.",
	"Method": "AddTagsToResourceResult addTagsToResource(AddTagsToResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddTagsToResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteLogStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeEvents",
	"Comment": "returns events related to db instances, db security groups, db snapshots, and db parameter groups for the past 14days. events specific to a particular db instance, db security group, database snapshot, or db parameter groupcan be obtained by providing the name as a parameter. by default, the past hour of events are returned.",
	"Method": "DescribeEventsResult describeEvents(DescribeEventsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEvents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AribSourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeOrderableDBInstanceOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrderableDBInstanceOptions() != null)\r\n        sb.append(\"OrderableDBInstanceOptions: \").append(getOrderableDBInstanceOptions()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeSubscriptionFiltersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getFilterNamePrefix() != null)\r\n        sb.append(\"FilterNamePrefix: \").append(getFilterNamePrefix()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.CreateChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsopsworkscmasync using the current builder configuration.",
	"Method": "AWSOpsWorksCMAsync build(AwsAsyncClientParams params){\r\n    return new AWSOpsWorksCMAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CmafEncryptionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConstantInitializationVector() != null)\r\n        sb.append(\"ConstantInitializationVector: \").append(getConstantInitializationVector()).append(\",\");\r\n    if (getEncryptionMethod() != null)\r\n        sb.append(\"EncryptionMethod: \").append(getEncryptionMethod()).append(\",\");\r\n    if (getInitializationVectorInManifest() != null)\r\n        sb.append(\"InitializationVectorInManifest: \").append(getInitializationVectorInManifest()).append(\",\");\r\n    if (getStaticKeyProvider() != null)\r\n        sb.append(\"StaticKeyProvider: \").append(getStaticKeyProvider()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.RebootBrokerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeInputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeSubscriptionFiltersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionFilters() != null)\r\n        sb.append(\"SubscriptionFilters: \").append(getSubscriptionFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte35TimeSignalApos.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdAvailOffset() != null)\r\n        sb.append(\"AdAvailOffset: \").append(getAdAvailOffset()).append(\",\");\r\n    if (getNoRegionalBlackoutFlag() != null)\r\n        sb.append(\"NoRegionalBlackoutFlag: \").append(getNoRegionalBlackoutFlag()).append(\",\");\r\n    if (getWebDeliveryAllowedFlag() != null)\r\n        sb.append(\"WebDeliveryAllowedFlag: \").append(getWebDeliveryAllowedFlag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.ExportProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDownloadUrl() != null)\r\n        sb.append(\"DownloadUrl: \").append(getDownloadUrl()).append(\",\");\r\n    if (getShareUrl() != null)\r\n        sb.append(\"ShareUrl: \").append(getShareUrl()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.AWSMediaStoreAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.RotateChannelCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsIngest() != null)\r\n        sb.append(\"HlsIngest: \").append(getHlsIngest()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.QueryInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueryId() != null)\r\n        sb.append(\"QueryId: \").append(getQueryId()).append(\",\");\r\n    if (getQueryString() != null)\r\n        sb.append(\"QueryString: \").append(getQueryString()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCreateTime() != null)\r\n        sb.append(\"CreateTime: \").append(getCreateTime()).append(\",\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.GetJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RebootInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.AmazonMacieClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeLoadBasedAutoScalingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerIds() != null)\r\n        sb.append(\"LayerIds: \").append(getLayerIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DescribeBatchPredictionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilterVariable() != null)\r\n        sb.append(\"FilterVariable: \").append(getFilterVariable()).append(\",\");\r\n    if (getEQ() != null)\r\n        sb.append(\"EQ: \").append(getEQ()).append(\",\");\r\n    if (getGT() != null)\r\n        sb.append(\"GT: \").append(getGT()).append(\",\");\r\n    if (getLT() != null)\r\n        sb.append(\"LT: \").append(getLT()).append(\",\");\r\n    if (getGE() != null)\r\n        sb.append(\"GE: \").append(getGE()).append(\",\");\r\n    if (getLE() != null)\r\n        sb.append(\"LE: \").append(getLE()).append(\",\");\r\n    if (getNE() != null)\r\n        sb.append(\"NE: \").append(getNE()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointClient.getCampaignActivities",
	"Comment": "returns information about the activity performed by a campaign.",
	"Method": "GetCampaignActivitiesResult getCampaignActivities(GetCampaignActivitiesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetCampaignActivities(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeReservationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getDurationUnits() != null)\r\n        sb.append(\"DurationUnits: \").append(getDurationUnits()).append(\",\");\r\n    if (getEnd() != null)\r\n        sb.append(\"End: \").append(getEnd()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOfferingDescription() != null)\r\n        sb.append(\"OfferingDescription: \").append(getOfferingDescription()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getReservationId() != null)\r\n        sb.append(\"ReservationId: \").append(getReservationId()).append(\",\");\r\n    if (getResourceSpecification() != null)\r\n        sb.append(\"ResourceSpecification: \").append(getResourceSpecification()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.AWSMediaStoreDataClient.putObject",
	"Comment": "uploads an object to the specified path. object sizes are limited to 25 mb.",
	"Method": "PutObjectResult putObject(PutObjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutObject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateDataSourceFromS3Result.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DeleteOrganizationalUnitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEventStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventStream() != null)\r\n        sb.append(\"EventStream: \").append(getEventStream());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.AssignInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getLayerIds() != null)\r\n        sb.append(\"LayerIds: \").append(getLayerIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSegmentsResponse() != null)\r\n        sb.append(\"SegmentsResponse: \").append(getSegmentsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentImportJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.DisassociateS3ResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberAccountId() != null)\r\n        sb.append(\"MemberAccountId: \").append(getMemberAccountId()).append(\",\");\r\n    if (getAssociatedS3Resources() != null)\r\n        sb.append(\"AssociatedS3Resources: \").append(getAssociatedS3Resources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListTargetsForPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargets() != null)\r\n        sb.append(\"Targets: \").append(getTargets()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDefineSegment() != null)\r\n        sb.append(\"DefineSegment: \").append(getDefineSegment()).append(\",\");\r\n    if (getExternalId() != null)\r\n        sb.append(\"ExternalId: \").append(getExternalId()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getRegisterEndpoints() != null)\r\n        sb.append(\"RegisterEndpoints: \").append(getRegisterEndpoints()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getS3Url() != null)\r\n        sb.append(\"S3Url: \").append(getS3Url()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getSegmentName() != null)\r\n        sb.append(\"SegmentName: \").append(getSegmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.VideoDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodecSettings() != null)\r\n        sb.append(\"CodecSettings: \").append(getCodecSettings()).append(\",\");\r\n    if (getHeight() != null)\r\n        sb.append(\"Height: \").append(getHeight()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRespondToAfd() != null)\r\n        sb.append(\"RespondToAfd: \").append(getRespondToAfd()).append(\",\");\r\n    if (getScalingBehavior() != null)\r\n        sb.append(\"ScalingBehavior: \").append(getScalingBehavior()).append(\",\");\r\n    if (getSharpness() != null)\r\n        sb.append(\"Sharpness: \").append(getSharpness()).append(\",\");\r\n    if (getWidth() != null)\r\n        sb.append(\"Width: \").append(getWidth());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBInstances() != null)\r\n        sb.append(\"DBInstances: \").append(getDBInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.AWSMediaStoreDataClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GPSCoordinates.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLatitude() != null)\r\n        sb.append(\"Latitude: \").append(getLatitude()).append(\",\");\r\n    if (getLongitude() != null)\r\n        sb.append(\"Longitude: \").append(getLongitude());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.UpdateExpirationForHITRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId()).append(\",\");\r\n    if (getExpireAt() != null)\r\n        sb.append(\"ExpireAt: \").append(getExpireAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.PutContainerPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.DeleteContainerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.StartMaintenanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServer() != null)\r\n        sb.append(\"Server: \").append(getServer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetDataSourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId()).append(\",\");\r\n    if (getVerbose() != null)\r\n        sb.append(\"Verbose: \").append(getVerbose());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ParameterMapEntry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DvbNitSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNetworkId() != null)\r\n        sb.append(\"NetworkId: \").append(getNetworkId()).append(\",\");\r\n    if (getNetworkName() != null)\r\n        sb.append(\"NetworkName: \").append(getNetworkName()).append(\",\");\r\n    if (getNitInterval() != null)\r\n        sb.append(\"NitInterval: \").append(getNitInterval());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DetachElasticLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.AddTagsToResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.ExportServerEngineAttributeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngineAttribute() != null)\r\n        sb.append(\"EngineAttribute: \").append(getEngineAttribute()).append(\",\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getConfigurationSet() != null)\r\n        sb.append(\"ConfigurationSet: \").append(getConfigurationSet()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getFromAddress() != null)\r\n        sb.append(\"FromAddress: \").append(getFromAddress()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIdentity() != null)\r\n        sb.append(\"Identity: \").append(getIdentity()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getMessagesPerSecond() != null)\r\n        sb.append(\"MessagesPerSecond: \").append(getMessagesPerSecond()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Job.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getBillingTagsSource() != null)\r\n        sb.append(\"BillingTagsSource: \").append(getBillingTagsSource()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getJobTemplate() != null)\r\n        sb.append(\"JobTemplate: \").append(getJobTemplate()).append(\",\");\r\n    if (getOutputGroupDetails() != null)\r\n        sb.append(\"OutputGroupDetails: \").append(getOutputGroupDetails()).append(\",\");\r\n    if (getQueue() != null)\r\n        sb.append(\"Queue: \").append(getQueue()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getTiming() != null)\r\n        sb.append(\"Timing: \").append(getTiming()).append(\",\");\r\n    if (getUserMetadata() != null)\r\n        sb.append(\"UserMetadata: \").append(getUserMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.model.DeleteObjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonpinpoint using the current builder configuration.",
	"Method": "AmazonPinpoint build(AwsSyncClientParams params){\r\n    return new AmazonPinpointClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ItemResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointItemResponse() != null)\r\n        sb.append(\"EndpointItemResponse: \").append(getEndpointItemResponse()).append(\",\");\r\n    if (getEventsItemResponse() != null)\r\n        sb.append(\"EventsItemResponse: \").append(getEventsItemResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.AWSMediaStoreClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ReviewReport.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReviewResults() != null)\r\n        sb.append(\"ReviewResults: \").append(getReviewResults()).append(\",\");\r\n    if (getReviewActions() != null)\r\n        sb.append(\"ReviewActions: \").append(getReviewActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeregisterEcsClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateCampaignRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getWriteCampaignRequest() != null)\r\n        sb.append(\"WriteCampaignRequest: \").append(getWriteCampaignRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.AWSOpsWorksClient.describeOperatingSystems",
	"Comment": "describes the operating systems that are supported by aws opsworks stacks.",
	"Method": "DescribeOperatingSystemsResult describeOperatingSystems(DescribeOperatingSystemsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeOperatingSystems(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getADMMessage() != null)\r\n        sb.append(\"ADMMessage: \").append(getADMMessage()).append(\",\");\r\n    if (getAPNSMessage() != null)\r\n        sb.append(\"APNSMessage: \").append(getAPNSMessage()).append(\",\");\r\n    if (getBaiduMessage() != null)\r\n        sb.append(\"BaiduMessage: \").append(getBaiduMessage()).append(\",\");\r\n    if (getDefaultMessage() != null)\r\n        sb.append(\"DefaultMessage: \").append(getDefaultMessage()).append(\",\");\r\n    if (getEmailMessage() != null)\r\n        sb.append(\"EmailMessage: \").append(getEmailMessage()).append(\",\");\r\n    if (getGCMMessage() != null)\r\n        sb.append(\"GCMMessage: \").append(getGCMMessage()).append(\",\");\r\n    if (getSMSMessage() != null)\r\n        sb.append(\"SMSMessage: \").append(getSMSMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.HlsSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioGroupId() != null)\r\n        sb.append(\"AudioGroupId: \").append(getAudioGroupId()).append(\",\");\r\n    if (getAudioRenditionSets() != null)\r\n        sb.append(\"AudioRenditionSets: \").append(getAudioRenditionSets()).append(\",\");\r\n    if (getAudioTrackType() != null)\r\n        sb.append(\"AudioTrackType: \").append(getAudioTrackType()).append(\",\");\r\n    if (getIFrameOnlyManifest() != null)\r\n        sb.append(\"IFrameOnlyManifest: \").append(getIFrameOnlyManifest()).append(\",\");\r\n    if (getSegmentModifier() != null)\r\n        sb.append(\"SegmentModifier: \").append(getSegmentModifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AudioChannelMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputChannelLevels() != null)\r\n        sb.append(\"InputChannelLevels: \").append(getInputChannelLevels()).append(\",\");\r\n    if (getOutputChannel() != null)\r\n        sb.append(\"OutputChannel: \").append(getOutputChannel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CloneStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.GetPlaybackConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeDBClusters",
	"Comment": "returns information about provisioned db clusters. this api supports pagination.",
	"Method": "DescribeDBClustersResult describeDBClusters(DescribeDBClustersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBClusters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getEndpointResult() != null)\r\n        sb.append(\"EndpointResult: \").append(getEndpointResult()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getResult() != null)\r\n        sb.append(\"Result: \").append(getResult());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSmsChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIp() != null)\r\n        sb.append(\"Ip: \").append(getIp()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApplicationSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationSettingsResource() != null)\r\n        sb.append(\"ApplicationSettingsResource: \").append(getApplicationSettingsResource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.TeletextSourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageNumber() != null)\r\n        sb.append(\"PageNumber: \").append(getPageNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.UpdatePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.model.ListItemsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItems() != null)\r\n        sb.append(\"Items: \").append(getItems()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.listBonusPayments",
	"Comment": "the listbonuspayments operation retrieves the amounts of bonuses you have paid to workers for agiven hit or assignment.",
	"Method": "ListBonusPaymentsResult listBonusPayments(ListBonusPaymentsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListBonusPayments(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.AddFlowOutputsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ListCreatedArtifactsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getCreatedArtifactList() != null)\r\n        sb.append(\"CreatedArtifactList: \").append(getCreatedArtifactList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.GetResourceMetricsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlignedStartTime() != null)\r\n        sb.append(\"AlignedStartTime: \").append(getAlignedStartTime()).append(\",\");\r\n    if (getAlignedEndTime() != null)\r\n        sb.append(\"AlignedEndTime: \").append(getAlignedEndTime()).append(\",\");\r\n    if (getIdentifier() != null)\r\n        sb.append(\"Identifier: \").append(getIdentifier()).append(\",\");\r\n    if (getMetricList() != null)\r\n        sb.append(\"MetricList: \").append(getMetricList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.deleteEvaluation",
	"Comment": "assigns the deleted status to an evaluation, rendering it unusable.after invoking the deleteevaluation operation, you can use the getevaluation operationto verify that the status of the evaluation changed to deleted.cautionthe results of the deleteevaluation operation are irreversible.",
	"Method": "DeleteEvaluationResult deleteEvaluation(DeleteEvaluationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteEvaluation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ListPresetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getListBy() != null)\r\n        sb.append(\"ListBy: \").append(getListBy()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOrder() != null)\r\n        sb.append(\"Order: \").append(getOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.HlsAkamaiSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionRetryInterval() != null)\r\n        sb.append(\"ConnectionRetryInterval: \").append(getConnectionRetryInterval()).append(\",\");\r\n    if (getFilecacheDuration() != null)\r\n        sb.append(\"FilecacheDuration: \").append(getFilecacheDuration()).append(\",\");\r\n    if (getHttpTransferMode() != null)\r\n        sb.append(\"HttpTransferMode: \").append(getHttpTransferMode()).append(\",\");\r\n    if (getNumRetries() != null)\r\n        sb.append(\"NumRetries: \").append(getNumRetries()).append(\",\");\r\n    if (getRestartDelay() != null)\r\n        sb.append(\"RestartDelay: \").append(getRestartDelay()).append(\",\");\r\n    if (getSalt() != null)\r\n        sb.append(\"Salt: \").append(getSalt()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.VideoCodecSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getH264Settings() != null)\r\n        sb.append(\"H264Settings: \").append(getH264Settings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.AttachElasticLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticLoadBalancerName() != null)\r\n        sb.append(\"ElasticLoadBalancerName: \").append(getElasticLoadBalancerName()).append(\",\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteMetricFilterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getFilterName() != null)\r\n        sb.append(\"FilterName: \").append(getFilterName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteVoiceChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVoiceChannelResponse() != null)\r\n        sb.append(\"VoiceChannelResponse: \").append(getVoiceChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.TagLogGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.StartQueryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueryId() != null)\r\n        sb.append(\"QueryId: \").append(getQueryId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutLogEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName()).append(\",\");\r\n    if (getLogEvents() != null)\r\n        sb.append(\"LogEvents: \").append(getLogEvents()).append(\",\");\r\n    if (getSequenceToken() != null)\r\n        sb.append(\"SequenceToken: \").append(getSequenceToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.UpdateHITReviewStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId()).append(\",\");\r\n    if (getRevert() != null)\r\n        sb.append(\"Revert: \").append(getRevert());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribePendingMaintenanceActionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceIdentifier() != null)\r\n        sb.append(\"ResourceIdentifier: \").append(getResourceIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DeleteBrokerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEmailChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DeleteInputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.waiters.DescribeInstancesFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeInstancesResult apply(DescribeInstancesRequest describeInstancesRequest){\r\n    return client.describeInstances(describeInstancesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.StartStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeOrderableDBInstanceOptions",
	"Comment": "returns a list of orderable db instance options for the specified engine.",
	"Method": "DescribeOrderableDBInstanceOptionsResult describeOrderableDBInstanceOptions(DescribeOrderableDBInstanceOptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeOrderableDBInstanceOptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.RemoveAccountFromOrganizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getDefaultAuthenticationMethod() != null)\r\n        sb.append(\"DefaultAuthenticationMethod: \").append(getDefaultAuthenticationMethod()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getHasTokenKey() != null)\r\n        sb.append(\"HasTokenKey: \").append(getHasTokenKey()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsVoipSandboxChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSVoipSandboxChannelResponse() != null)\r\n        sb.append(\"APNSVoipSandboxChannelResponse: \").append(getAPNSVoipSandboxChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DeleteServerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSegmentResponse() != null)\r\n        sb.append(\"SegmentResponse: \").append(getSegmentResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.OptionGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsSandboxChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSSandboxChannelResponse() != null)\r\n        sb.append(\"APNSSandboxChannelResponse: \").append(getAPNSSandboxChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.FrameCaptureSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFramerateDenominator() != null)\r\n        sb.append(\"FramerateDenominator: \").append(getFramerateDenominator()).append(\",\");\r\n    if (getFramerateNumerator() != null)\r\n        sb.append(\"FramerateNumerator: \").append(getFramerateNumerator()).append(\",\");\r\n    if (getMaxCaptures() != null)\r\n        sb.append(\"MaxCaptures: \").append(getMaxCaptures()).append(\",\");\r\n    if (getQuality() != null)\r\n        sb.append(\"Quality: \").append(getQuality());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutMetricFilterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getFilterName() != null)\r\n        sb.append(\"FilterName: \").append(getFilterName()).append(\",\");\r\n    if (getFilterPattern() != null)\r\n        sb.append(\"FilterPattern: \").append(getFilterPattern()).append(\",\");\r\n    if (getMetricTransformations() != null)\r\n        sb.append(\"MetricTransformations: \").append(getMetricTransformations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UpdateDomainEntryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getDomainEntry() != null)\r\n        sb.append(\"DomainEntry: \").append(getDomainEntry());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonpinpointasync using the current builder configuration.",
	"Method": "AmazonPinpointAsync build(AwsAsyncClientParams params){\r\n    return new AmazonPinpointAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.RDSDatabase.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceIdentifier() != null)\r\n        sb.append(\"InstanceIdentifier: \").append(getInstanceIdentifier()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribePendingMaintenanceActionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPendingMaintenanceActions() != null)\r\n        sb.append(\"PendingMaintenanceActions: \").append(getPendingMaintenanceActions()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.SetTimeBasedAutoScalingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AvailConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailSettings() != null)\r\n        sb.append(\"AvailSettings: \").append(getAvailSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CaptionDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAribDestinationSettings() != null)\r\n        sb.append(\"AribDestinationSettings: \").append(getAribDestinationSettings()).append(\",\");\r\n    if (getBurnInDestinationSettings() != null)\r\n        sb.append(\"BurnInDestinationSettings: \").append(getBurnInDestinationSettings()).append(\",\");\r\n    if (getDvbSubDestinationSettings() != null)\r\n        sb.append(\"DvbSubDestinationSettings: \").append(getDvbSubDestinationSettings()).append(\",\");\r\n    if (getEmbeddedDestinationSettings() != null)\r\n        sb.append(\"EmbeddedDestinationSettings: \").append(getEmbeddedDestinationSettings()).append(\",\");\r\n    if (getEmbeddedPlusScte20DestinationSettings() != null)\r\n        sb.append(\"EmbeddedPlusScte20DestinationSettings: \").append(getEmbeddedPlusScte20DestinationSettings()).append(\",\");\r\n    if (getRtmpCaptionInfoDestinationSettings() != null)\r\n        sb.append(\"RtmpCaptionInfoDestinationSettings: \").append(getRtmpCaptionInfoDestinationSettings()).append(\",\");\r\n    if (getScte20PlusEmbeddedDestinationSettings() != null)\r\n        sb.append(\"Scte20PlusEmbeddedDestinationSettings: \").append(getScte20PlusEmbeddedDestinationSettings()).append(\",\");\r\n    if (getScte27DestinationSettings() != null)\r\n        sb.append(\"Scte27DestinationSettings: \").append(getScte27DestinationSettings()).append(\",\");\r\n    if (getSmpteTtDestinationSettings() != null)\r\n        sb.append(\"SmpteTtDestinationSettings: \").append(getSmpteTtDestinationSettings()).append(\",\");\r\n    if (getTeletextDestinationSettings() != null)\r\n        sb.append(\"TeletextDestinationSettings: \").append(getTeletextDestinationSettings()).append(\",\");\r\n    if (getTtmlDestinationSettings() != null)\r\n        sb.append(\"TtmlDestinationSettings: \").append(getTtmlDestinationSettings()).append(\",\");\r\n    if (getWebvttDestinationSettings() != null)\r\n        sb.append(\"WebvttDestinationSettings: \").append(getWebvttDestinationSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteCampaignResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCampaignResponse() != null)\r\n        sb.append(\"CampaignResponse: \").append(getCampaignResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.Parent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.NotifyApplicationStateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteApnsSandboxChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.updateEvaluation",
	"Comment": "updates the evaluationname of an evaluation.you can use the getevaluation operation to view the contents of the updated data element.",
	"Method": "UpdateEvaluationResult updateEvaluation(UpdateEvaluationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateEvaluation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.LoadBasedAutoScalingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId()).append(\",\");\r\n    if (getEnable() != null)\r\n        sb.append(\"Enable: \").append(getEnable()).append(\",\");\r\n    if (getUpScaling() != null)\r\n        sb.append(\"UpScaling: \").append(getUpScaling()).append(\",\");\r\n    if (getDownScaling() != null)\r\n        sb.append(\"DownScaling: \").append(getDownScaling());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ProresSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodecProfile() != null)\r\n        sb.append(\"CodecProfile: \").append(getCodecProfile()).append(\",\");\r\n    if (getFramerateControl() != null)\r\n        sb.append(\"FramerateControl: \").append(getFramerateControl()).append(\",\");\r\n    if (getFramerateConversionAlgorithm() != null)\r\n        sb.append(\"FramerateConversionAlgorithm: \").append(getFramerateConversionAlgorithm()).append(\",\");\r\n    if (getFramerateDenominator() != null)\r\n        sb.append(\"FramerateDenominator: \").append(getFramerateDenominator()).append(\",\");\r\n    if (getFramerateNumerator() != null)\r\n        sb.append(\"FramerateNumerator: \").append(getFramerateNumerator()).append(\",\");\r\n    if (getInterlaceMode() != null)\r\n        sb.append(\"InterlaceMode: \").append(getInterlaceMode()).append(\",\");\r\n    if (getParControl() != null)\r\n        sb.append(\"ParControl: \").append(getParControl()).append(\",\");\r\n    if (getParDenominator() != null)\r\n        sb.append(\"ParDenominator: \").append(getParDenominator()).append(\",\");\r\n    if (getParNumerator() != null)\r\n        sb.append(\"ParNumerator: \").append(getParNumerator()).append(\",\");\r\n    if (getSlowPal() != null)\r\n        sb.append(\"SlowPal: \").append(getSlowPal()).append(\",\");\r\n    if (getTelecine() != null)\r\n        sb.append(\"Telecine: \").append(getTelecine());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeInputSecurityGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getInputs() != null)\r\n        sb.append(\"Inputs: \").append(getInputs()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getWhitelistRules() != null)\r\n        sb.append(\"WhitelistRules: \").append(getWhitelistRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.PutContainerPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName()).append(\",\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.Assignment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssignmentId() != null)\r\n        sb.append(\"AssignmentId: \").append(getAssignmentId()).append(\",\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId()).append(\",\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId()).append(\",\");\r\n    if (getAssignmentStatus() != null)\r\n        sb.append(\"AssignmentStatus: \").append(getAssignmentStatus()).append(\",\");\r\n    if (getAutoApprovalTime() != null)\r\n        sb.append(\"AutoApprovalTime: \").append(getAutoApprovalTime()).append(\",\");\r\n    if (getAcceptTime() != null)\r\n        sb.append(\"AcceptTime: \").append(getAcceptTime()).append(\",\");\r\n    if (getSubmitTime() != null)\r\n        sb.append(\"SubmitTime: \").append(getSubmitTime()).append(\",\");\r\n    if (getApprovalTime() != null)\r\n        sb.append(\"ApprovalTime: \").append(getApprovalTime()).append(\",\");\r\n    if (getRejectionTime() != null)\r\n        sb.append(\"RejectionTime: \").append(getRejectionTime()).append(\",\");\r\n    if (getDeadline() != null)\r\n        sb.append(\"Deadline: \").append(getDeadline()).append(\",\");\r\n    if (getAnswer() != null)\r\n        sb.append(\"Answer: \").append(getAnswer()).append(\",\");\r\n    if (getRequesterFeedback() != null)\r\n        sb.append(\"RequesterFeedback: \").append(getRequesterFeedback());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ModifyDBParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getBadge() != null)\r\n        sb.append(\"Badge: \").append(getBadge()).append(\",\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getCollapseId() != null)\r\n        sb.append(\"CollapseId: \").append(getCollapseId()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getMediaUrl() != null)\r\n        sb.append(\"MediaUrl: \").append(getMediaUrl()).append(\",\");\r\n    if (getPreferredAuthenticationMethod() != null)\r\n        sb.append(\"PreferredAuthenticationMethod: \").append(getPreferredAuthenticationMethod()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getRawContent() != null)\r\n        sb.append(\"RawContent: \").append(getRawContent()).append(\",\");\r\n    if (getSilentPush() != null)\r\n        sb.append(\"SilentPush: \").append(getSilentPush()).append(\",\");\r\n    if (getSound() != null)\r\n        sb.append(\"Sound: \").append(getSound()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions()).append(\",\");\r\n    if (getThreadId() != null)\r\n        sb.append(\"ThreadId: \").append(getThreadId()).append(\",\");\r\n    if (getTimeToLive() != null)\r\n        sb.append(\"TimeToLive: \").append(getTimeToLive()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.EnableAllFeaturesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshake() != null)\r\n        sb.append(\"Handshake: \").append(getHandshake());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.CreateTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.AmazonMacieClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CopyDBClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"SourceDBClusterSnapshotIdentifier: \").append(getSourceDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getTargetDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"TargetDBClusterSnapshotIdentifier: \").append(getTargetDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getPreSignedUrl() != null)\r\n        sb.append(\"PreSignedUrl: \").append(getPreSignedUrl()).append(\",\");\r\n    if (getCopyTags() != null)\r\n        sb.append(\"CopyTags: \").append(getCopyTags()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DeclineHandshakeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshake() != null)\r\n        sb.append(\"Handshake: \").append(getHandshake());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.SendTestEventNotificationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotification() != null)\r\n        sb.append(\"Notification: \").append(getNotification()).append(\",\");\r\n    if (getTestEventType() != null)\r\n        sb.append(\"TestEventType: \").append(getTestEventType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ScheduleActionStartSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFixedModeScheduleActionStartSettings() != null)\r\n        sb.append(\"FixedModeScheduleActionStartSettings: \").append(getFixedModeScheduleActionStartSettings()).append(\",\");\r\n    if (getFollowModeScheduleActionStartSettings() != null)\r\n        sb.append(\"FollowModeScheduleActionStartSettings: \").append(getFollowModeScheduleActionStartSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.AWSMediaPackageAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.AcceptHandshakeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshakeId() != null)\r\n        sb.append(\"HandshakeId: \").append(getHandshakeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeLoadBasedAutoScalingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoadBasedAutoScalingConfigurations() != null)\r\n        sb.append(\"LoadBasedAutoScalingConfigurations: \").append(getLoadBasedAutoScalingConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApiKey() != null)\r\n        sb.append(\"ApiKey: \").append(getApiKey()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Reservation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getDurationUnits() != null)\r\n        sb.append(\"DurationUnits: \").append(getDurationUnits()).append(\",\");\r\n    if (getEnd() != null)\r\n        sb.append(\"End: \").append(getEnd()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOfferingDescription() != null)\r\n        sb.append(\"OfferingDescription: \").append(getOfferingDescription()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getReservationId() != null)\r\n        sb.append(\"ReservationId: \").append(getReservationId()).append(\",\");\r\n    if (getResourceSpecification() != null)\r\n        sb.append(\"ResourceSpecification: \").append(getResourceSpecification()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.Layer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getShortname() != null)\r\n        sb.append(\"Shortname: \").append(getShortname()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getCloudWatchLogsConfiguration() != null)\r\n        sb.append(\"CloudWatchLogsConfiguration: \").append(getCloudWatchLogsConfiguration()).append(\",\");\r\n    if (getCustomInstanceProfileArn() != null)\r\n        sb.append(\"CustomInstanceProfileArn: \").append(getCustomInstanceProfileArn()).append(\",\");\r\n    if (getCustomJson() != null)\r\n        sb.append(\"CustomJson: \").append(getCustomJson()).append(\",\");\r\n    if (getCustomSecurityGroupIds() != null)\r\n        sb.append(\"CustomSecurityGroupIds: \").append(getCustomSecurityGroupIds()).append(\",\");\r\n    if (getDefaultSecurityGroupNames() != null)\r\n        sb.append(\"DefaultSecurityGroupNames: \").append(getDefaultSecurityGroupNames()).append(\",\");\r\n    if (getPackages() != null)\r\n        sb.append(\"Packages: \").append(getPackages()).append(\",\");\r\n    if (getVolumeConfigurations() != null)\r\n        sb.append(\"VolumeConfigurations: \").append(getVolumeConfigurations()).append(\",\");\r\n    if (getEnableAutoHealing() != null)\r\n        sb.append(\"EnableAutoHealing: \").append(getEnableAutoHealing()).append(\",\");\r\n    if (getAutoAssignElasticIps() != null)\r\n        sb.append(\"AutoAssignElasticIps: \").append(getAutoAssignElasticIps()).append(\",\");\r\n    if (getAutoAssignPublicIps() != null)\r\n        sb.append(\"AutoAssignPublicIps: \").append(getAutoAssignPublicIps()).append(\",\");\r\n    if (getDefaultRecipes() != null)\r\n        sb.append(\"DefaultRecipes: \").append(getDefaultRecipes()).append(\",\");\r\n    if (getCustomRecipes() != null)\r\n        sb.append(\"CustomRecipes: \").append(getCustomRecipes()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getInstallUpdatesOnBoot() != null)\r\n        sb.append(\"InstallUpdatesOnBoot: \").append(getInstallUpdatesOnBoot()).append(\",\");\r\n    if (getUseEbsOptimizedInstances() != null)\r\n        sb.append(\"UseEbsOptimizedInstances: \").append(getUseEbsOptimizedInstances()).append(\",\");\r\n    if (getLifecycleEventConfiguration() != null)\r\n        sb.append(\"LifecycleEventConfiguration: \").append(getLifecycleEventConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.NotifyWorkersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotifyWorkersFailureStatuses() != null)\r\n        sb.append(\"NotifyWorkersFailureStatuses: \").append(getNotifyWorkersFailureStatuses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeOperatingSystemsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DisassociateNodeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getNodeName() != null)\r\n        sb.append(\"NodeName: \").append(getNodeName()).append(\",\");\r\n    if (getEngineAttributes() != null)\r\n        sb.append(\"EngineAttributes: \").append(getEngineAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.model.MeterUsageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMeteringRecordId() != null)\r\n        sb.append(\"MeteringRecordId: \").append(getMeteringRecordId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteSegmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSegmentResponse() != null)\r\n        sb.append(\"SegmentResponse: \").append(getSegmentResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteRetentionPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.describeMLModels",
	"Comment": "returns a list of mlmodel that match the search criteria in the request.",
	"Method": "DescribeMLModelsResult describeMLModels(DescribeMLModelsRequest request,DescribeMLModelsResult describeMLModels){\r\n    return describeMLModels(new DescribeMLModelsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.CreateBrokerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getBrokerName() != null)\r\n        sb.append(\"BrokerName: \").append(getBrokerName()).append(\",\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration()).append(\",\");\r\n    if (getCreatorRequestId() != null)\r\n        sb.append(\"CreatorRequestId: \").append(getCreatorRequestId()).append(\",\");\r\n    if (getDeploymentMode() != null)\r\n        sb.append(\"DeploymentMode: \").append(getDeploymentMode()).append(\",\");\r\n    if (getEngineType() != null)\r\n        sb.append(\"EngineType: \").append(getEngineType()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getHostInstanceType() != null)\r\n        sb.append(\"HostInstanceType: \").append(getHostInstanceType()).append(\",\");\r\n    if (getLogs() != null)\r\n        sb.append(\"Logs: \").append(getLogs()).append(\",\");\r\n    if (getMaintenanceWindowStartTime() != null)\r\n        sb.append(\"MaintenanceWindowStartTime: \").append(getMaintenanceWindowStartTime()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.PresetSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioDescriptions() != null)\r\n        sb.append(\"AudioDescriptions: \").append(getAudioDescriptions()).append(\",\");\r\n    if (getCaptionDescriptions() != null)\r\n        sb.append(\"CaptionDescriptions: \").append(getCaptionDescriptions()).append(\",\");\r\n    if (getContainerSettings() != null)\r\n        sb.append(\"ContainerSettings: \").append(getContainerSettings()).append(\",\");\r\n    if (getVideoDescription() != null)\r\n        sb.append(\"VideoDescription: \").append(getVideoDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.BatchScheduleActionDeleteRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionNames() != null)\r\n        sb.append(\"ActionNames: \").append(getActionNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointClient.getUserEndpoints",
	"Comment": "returns information about the endpoints that are associated with a user id.",
	"Method": "GetUserEndpointsResult getUserEndpoints(GetUserEndpointsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetUserEndpoints(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCampaignId() != null)\r\n        sb.append(\"CampaignId: \").append(getCampaignId()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.UpdateChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsIngest() != null)\r\n        sb.append(\"HlsIngest: \").append(getHlsIngest()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ApproveAssignmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.ListMemberAccountsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberAccounts() != null)\r\n        sb.append(\"MemberAccounts: \").append(getMemberAccounts()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DvbSubSourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPid() != null)\r\n        sb.append(\"Pid: \").append(getPid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.GetJobTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobTemplate() != null)\r\n        sb.append(\"JobTemplate: \").append(getJobTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.AmazonMacieAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.RestoreServerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId()).append(\",\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKeyPair() != null)\r\n        sb.append(\"KeyPair: \").append(getKeyPair());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeLogGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupNamePrefix() != null)\r\n        sb.append(\"LogGroupNamePrefix: \").append(getLogGroupNamePrefix()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getS3UrlPrefix() != null)\r\n        sb.append(\"S3UrlPrefix: \").append(getS3UrlPrefix()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getSegmentVersion() != null)\r\n        sb.append(\"SegmentVersion: \").append(getSegmentVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateBatchPredictionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBatchPredictionId() != null)\r\n        sb.append(\"BatchPredictionId: \").append(getBatchPredictionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.MLModel.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getTrainingDataSourceId() != null)\r\n        sb.append(\"TrainingDataSourceId: \").append(getTrainingDataSourceId()).append(\",\");\r\n    if (getCreatedByIamUser() != null)\r\n        sb.append(\"CreatedByIamUser: \").append(getCreatedByIamUser()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSizeInBytes() != null)\r\n        sb.append(\"SizeInBytes: \").append(getSizeInBytes()).append(\",\");\r\n    if (getEndpointInfo() != null)\r\n        sb.append(\"EndpointInfo: \").append(getEndpointInfo()).append(\",\");\r\n    if (getTrainingParameters() != null)\r\n        sb.append(\"TrainingParameters: \").append(getTrainingParameters()).append(\",\");\r\n    if (getInputDataLocationS3() != null)\r\n        sb.append(\"InputDataLocationS3: \").append(getInputDataLocationS3()).append(\",\");\r\n    if (getAlgorithm() != null)\r\n        sb.append(\"Algorithm: \").append(getAlgorithm()).append(\",\");\r\n    if (getMLModelType() != null)\r\n        sb.append(\"MLModelType: \").append(getMLModelType()).append(\",\");\r\n    if (getScoreThreshold() != null)\r\n        sb.append(\"ScoreThreshold: \").append(getScoreThreshold()).append(\",\");\r\n    if (getScoreThresholdLastUpdatedAt() != null)\r\n        sb.append(\"ScoreThresholdLastUpdatedAt: \").append(getScoreThresholdLastUpdatedAt()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getComputeTime() != null)\r\n        sb.append(\"ComputeTime: \").append(getComputeTime()).append(\",\");\r\n    if (getFinishedAt() != null)\r\n        sb.append(\"FinishedAt: \").append(getFinishedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.Child.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.Endpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DeleteProgressUpdateStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ColorCorrector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrightness() != null)\r\n        sb.append(\"Brightness: \").append(getBrightness()).append(\",\");\r\n    if (getColorSpaceConversion() != null)\r\n        sb.append(\"ColorSpaceConversion: \").append(getColorSpaceConversion()).append(\",\");\r\n    if (getContrast() != null)\r\n        sb.append(\"Contrast: \").append(getContrast()).append(\",\");\r\n    if (getHdr10Metadata() != null)\r\n        sb.append(\"Hdr10Metadata: \").append(getHdr10Metadata()).append(\",\");\r\n    if (getHue() != null)\r\n        sb.append(\"Hue: \").append(getHue()).append(\",\");\r\n    if (getSaturation() != null)\r\n        sb.append(\"Saturation: \").append(getSaturation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.AWSMarketplaceMeteringClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.MotionImageInserter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFramerate() != null)\r\n        sb.append(\"Framerate: \").append(getFramerate()).append(\",\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput()).append(\",\");\r\n    if (getInsertionMode() != null)\r\n        sb.append(\"InsertionMode: \").append(getInsertionMode()).append(\",\");\r\n    if (getOffset() != null)\r\n        sb.append(\"Offset: \").append(getOffset()).append(\",\");\r\n    if (getPlayback() != null)\r\n        sb.append(\"Playback: \").append(getPlayback()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.BatchUpdateScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId()).append(\",\");\r\n    if (getCreates() != null)\r\n        sb.append(\"Creates: \").append(getCreates()).append(\",\");\r\n    if (getDeletes() != null)\r\n        sb.append(\"Deletes: \").append(getDeletes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.setPreemptiveBasicProxyAuth",
	"Comment": "sets whether to attempt to authenticate preemptively against proxy servers using basic authentication.",
	"Method": "void setPreemptiveBasicProxyAuth(Boolean preemptiveBasicProxyAuth){\r\n    this.preemptiveBasicProxyAuth = preemptiveBasicProxyAuth;\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DescribeBrokerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getBrokerArn() != null)\r\n        sb.append(\"BrokerArn: \").append(getBrokerArn()).append(\",\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getBrokerInstances() != null)\r\n        sb.append(\"BrokerInstances: \").append(getBrokerInstances()).append(\",\");\r\n    if (getBrokerName() != null)\r\n        sb.append(\"BrokerName: \").append(getBrokerName()).append(\",\");\r\n    if (getBrokerState() != null)\r\n        sb.append(\"BrokerState: \").append(getBrokerState()).append(\",\");\r\n    if (getConfigurations() != null)\r\n        sb.append(\"Configurations: \").append(getConfigurations()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getDeploymentMode() != null)\r\n        sb.append(\"DeploymentMode: \").append(getDeploymentMode()).append(\",\");\r\n    if (getEngineType() != null)\r\n        sb.append(\"EngineType: \").append(getEngineType()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getHostInstanceType() != null)\r\n        sb.append(\"HostInstanceType: \").append(getHostInstanceType()).append(\",\");\r\n    if (getLogs() != null)\r\n        sb.append(\"Logs: \").append(getLogs()).append(\",\");\r\n    if (getMaintenanceWindowStartTime() != null)\r\n        sb.append(\"MaintenanceWindowStartTime: \").append(getMaintenanceWindowStartTime()).append(\",\");\r\n    if (getPendingEngineVersion() != null)\r\n        sb.append(\"PendingEngineVersion: \").append(getPendingEngineVersion()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.ProjectDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getCreatedDate() != null)\r\n        sb.append(\"CreatedDate: \").append(getCreatedDate()).append(\",\");\r\n    if (getLastUpdatedDate() != null)\r\n        sb.append(\"LastUpdatedDate: \").append(getLastUpdatedDate()).append(\",\");\r\n    if (getConsoleUrl() != null)\r\n        sb.append(\"ConsoleUrl: \").append(getConsoleUrl()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.TimedMetadataInsertion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId3Insertions() != null)\r\n        sb.append(\"Id3Insertions: \").append(getId3Insertions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.SetTimeBasedAutoScalingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getAutoScalingSchedule() != null)\r\n        sb.append(\"AutoScalingSchedule: \").append(getAutoScalingSchedule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CaptionDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaptionSelectorName() != null)\r\n        sb.append(\"CaptionSelectorName: \").append(getCaptionSelectorName()).append(\",\");\r\n    if (getDestinationSettings() != null)\r\n        sb.append(\"DestinationSettings: \").append(getDestinationSettings()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLanguageDescription() != null)\r\n        sb.append(\"LanguageDescription: \").append(getLanguageDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.DisassociateMemberAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberAccountId() != null)\r\n        sb.append(\"MemberAccountId: \").append(getMemberAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.AWSMediaLiveClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AudioOnlyHlsSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioGroupId() != null)\r\n        sb.append(\"AudioGroupId: \").append(getAudioGroupId()).append(\",\");\r\n    if (getAudioOnlyImage() != null)\r\n        sb.append(\"AudioOnlyImage: \").append(getAudioOnlyImage()).append(\",\");\r\n    if (getAudioTrackType() != null)\r\n        sb.append(\"AudioTrackType: \").append(getAudioTrackType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DescribeDataSourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResults() != null)\r\n        sb.append(\"Results: \").append(getResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.UpdateChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.AWSMigrationHubClient.describeMigrationTask",
	"Comment": "retrieves a list of all attributes associated with a specific migration task.",
	"Method": "DescribeMigrationTaskResult describeMigrationTask(DescribeMigrationTaskRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeMigrationTask(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DetachElasticLoadBalancerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticLoadBalancerName() != null)\r\n        sb.append(\"ElasticLoadBalancerName: \").append(getElasticLoadBalancerName()).append(\",\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ApplyPendingMaintenanceActionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceIdentifier() != null)\r\n        sb.append(\"ResourceIdentifier: \").append(getResourceIdentifier()).append(\",\");\r\n    if (getApplyAction() != null)\r\n        sb.append(\"ApplyAction: \").append(getApplyAction()).append(\",\");\r\n    if (getOptInType() != null)\r\n        sb.append(\"OptInType: \").append(getOptInType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioSelectors() != null)\r\n        sb.append(\"AudioSelectors: \").append(getAudioSelectors()).append(\",\");\r\n    if (getCaptionSelectors() != null)\r\n        sb.append(\"CaptionSelectors: \").append(getCaptionSelectors()).append(\",\");\r\n    if (getDeblockFilter() != null)\r\n        sb.append(\"DeblockFilter: \").append(getDeblockFilter()).append(\",\");\r\n    if (getDenoiseFilter() != null)\r\n        sb.append(\"DenoiseFilter: \").append(getDenoiseFilter()).append(\",\");\r\n    if (getFilterStrength() != null)\r\n        sb.append(\"FilterStrength: \").append(getFilterStrength()).append(\",\");\r\n    if (getInputFilter() != null)\r\n        sb.append(\"InputFilter: \").append(getInputFilter()).append(\",\");\r\n    if (getNetworkInputSettings() != null)\r\n        sb.append(\"NetworkInputSettings: \").append(getNetworkInputSettings()).append(\",\");\r\n    if (getSourceEndBehavior() != null)\r\n        sb.append(\"SourceEndBehavior: \").append(getSourceEndBehavior()).append(\",\");\r\n    if (getVideoSelector() != null)\r\n        sb.append(\"VideoSelector: \").append(getVideoSelector());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilteredLogEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getIngestionTime() != null)\r\n        sb.append(\"IngestionTime: \").append(getIngestionTime()).append(\",\");\r\n    if (getEventId() != null)\r\n        sb.append(\"EventId: \").append(getEventId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningAsyncClient.describeBatchPredictionsAsync",
	"Comment": "simplified method form for invoking the describebatchpredictions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeBatchPredictionsResult> describeBatchPredictionsAsync(DescribeBatchPredictionsRequest request,java.util.concurrent.Future<DescribeBatchPredictionsResult> describeBatchPredictionsAsync,DescribeBatchPredictionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeBatchPredictionsRequest, DescribeBatchPredictionsResult> asyncHandler,java.util.concurrent.Future<DescribeBatchPredictionsResult> describeBatchPredictionsAsync,java.util.concurrent.Future<DescribeBatchPredictionsResult> describeBatchPredictionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeBatchPredictionsRequest, DescribeBatchPredictionsResult> asyncHandler){\r\n    return describeBatchPredictionsAsync(new DescribeBatchPredictionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.MoveAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getSourceParentId() != null)\r\n        sb.append(\"SourceParentId: \").append(getSourceParentId()).append(\",\");\r\n    if (getDestinationParentId() != null)\r\n        sb.append(\"DestinationParentId: \").append(getDestinationParentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutRetentionPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getRetentionInDays() != null)\r\n        sb.append(\"RetentionInDays: \").append(getRetentionInDays());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribeHandshakeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshake() != null)\r\n        sb.append(\"Handshake: \").append(getHandshake());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteRealtimeEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeEventSubscriptions",
	"Comment": "lists all the subscription descriptions for a customer account. the description for a subscription includessubscriptionname, snstopicarn, customerid, sourcetype, sourceid, creationtime, and status.if you specify a subscriptionname, lists the description for that subscription.",
	"Method": "DescribeEventSubscriptionsResult describeEventSubscriptions(DescribeEventSubscriptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEventSubscriptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeOperatingSystemsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperatingSystems() != null)\r\n        sb.append(\"OperatingSystems: \").append(getOperatingSystems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCampaignsResponse() != null)\r\n        sb.append(\"CampaignsResponse: \").append(getCampaignsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateBatchPredictionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBatchPredictionId() != null)\r\n        sb.append(\"BatchPredictionId: \").append(getBatchPredictionId()).append(\",\");\r\n    if (getBatchPredictionName() != null)\r\n        sb.append(\"BatchPredictionName: \").append(getBatchPredictionName()).append(\",\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getBatchPredictionDataSourceId() != null)\r\n        sb.append(\"BatchPredictionDataSourceId: \").append(getBatchPredictionDataSourceId()).append(\",\");\r\n    if (getOutputUri() != null)\r\n        sb.append(\"OutputUri: \").append(getOutputUri());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AudioCodecSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAacSettings() != null)\r\n        sb.append(\"AacSettings: \").append(getAacSettings()).append(\",\");\r\n    if (getAc3Settings() != null)\r\n        sb.append(\"Ac3Settings: \").append(getAc3Settings()).append(\",\");\r\n    if (getAiffSettings() != null)\r\n        sb.append(\"AiffSettings: \").append(getAiffSettings()).append(\",\");\r\n    if (getCodec() != null)\r\n        sb.append(\"Codec: \").append(getCodec()).append(\",\");\r\n    if (getEac3Settings() != null)\r\n        sb.append(\"Eac3Settings: \").append(getEac3Settings()).append(\",\");\r\n    if (getMp2Settings() != null)\r\n        sb.append(\"Mp2Settings: \").append(getMp2Settings()).append(\",\");\r\n    if (getWavSettings() != null)\r\n        sb.append(\"WavSettings: \").append(getWavSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeOfferingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ListChannelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.UdpGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputLossAction() != null)\r\n        sb.append(\"InputLossAction: \").append(getInputLossAction()).append(\",\");\r\n    if (getTimedMetadataId3Frame() != null)\r\n        sb.append(\"TimedMetadataId3Frame: \").append(getTimedMetadataId3Frame()).append(\",\");\r\n    if (getTimedMetadataId3Period() != null)\r\n        sb.append(\"TimedMetadataId3Period: \").append(getTimedMetadataId3Period());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.AWSPIClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.MigrationTask.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getTask() != null)\r\n        sb.append(\"Task: \").append(getTask()).append(\",\");\r\n    if (getUpdateDateTime() != null)\r\n        sb.append(\"UpdateDateTime: \").append(getUpdateDateTime()).append(\",\");\r\n    if (getResourceAttributeList() != null)\r\n        sb.append(\"ResourceAttributeList: \").append(getResourceAttributeList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBEngineVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getDBEngineDescription() != null)\r\n        sb.append(\"DBEngineDescription: \").append(getDBEngineDescription()).append(\",\");\r\n    if (getDBEngineVersionDescription() != null)\r\n        sb.append(\"DBEngineVersionDescription: \").append(getDBEngineVersionDescription()).append(\",\");\r\n    if (getDefaultCharacterSet() != null)\r\n        sb.append(\"DefaultCharacterSet: \").append(getDefaultCharacterSet()).append(\",\");\r\n    if (getSupportedCharacterSets() != null)\r\n        sb.append(\"SupportedCharacterSets: \").append(getSupportedCharacterSets()).append(\",\");\r\n    if (getValidUpgradeTarget() != null)\r\n        sb.append(\"ValidUpgradeTarget: \").append(getValidUpgradeTarget()).append(\",\");\r\n    if (getSupportedTimezones() != null)\r\n        sb.append(\"SupportedTimezones: \").append(getSupportedTimezones()).append(\",\");\r\n    if (getExportableLogTypes() != null)\r\n        sb.append(\"ExportableLogTypes: \").append(getExportableLogTypes()).append(\",\");\r\n    if (getSupportsLogExportsToCloudwatchLogs() != null)\r\n        sb.append(\"SupportsLogExportsToCloudwatchLogs: \").append(getSupportsLogExportsToCloudwatchLogs()).append(\",\");\r\n    if (getSupportsReadReplica() != null)\r\n        sb.append(\"SupportsReadReplica: \").append(getSupportsReadReplica());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.AgentVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getConfigurationManager() != null)\r\n        sb.append(\"ConfigurationManager: \").append(getConfigurationManager());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteUserEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointsResponse() != null)\r\n        sb.append(\"EndpointsResponse: \").append(getEndpointsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DescribeBatchPredictionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResults() != null)\r\n        sb.append(\"Results: \").append(getResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.listReviewableHITs",
	"Comment": "the listreviewablehits operation retrieves the hits with status equal to reviewable or status equalto reviewing that belong to the requester calling the operation.",
	"Method": "ListReviewableHITsResult listReviewableHITs(ListReviewableHITsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListReviewableHITs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSegmentsResponse() != null)\r\n        sb.append(\"SegmentsResponse: \").append(getSegmentsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.ListFlowsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEventStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventStream() != null)\r\n        sb.append(\"EventStream: \").append(getEventStream());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getEndpointId() != null)\r\n        sb.append(\"EndpointId: \").append(getEndpointId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutDestinationPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationName() != null)\r\n        sb.append(\"DestinationName: \").append(getDestinationName()).append(\",\");\r\n    if (getAccessPolicy() != null)\r\n        sb.append(\"AccessPolicy: \").append(getAccessPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.AWSMediaConvertClient.listPresets",
	"Comment": "retrieve a json array of up to twenty of your presets. this will return the presets themselves, not just a listof them. to retrieve the next twenty presets, use the nexttoken string returned with the array.",
	"Method": "ListPresetsResult listPresets(ListPresetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListPresets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ModifyDBClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteEvaluationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationId() != null)\r\n        sb.append(\"EvaluationId: \").append(getEvaluationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.retry.RetryPolicyBuilder.build",
	"Comment": "construct a retrypolicy with the current configuration in the builder.",
	"Method": "RetryPolicy build(){\r\n    return new SimpleRetryPolicy(buildCondition(), backoffStrategy);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.AWSOpsWorksClient.listTags",
	"Comment": "returns a list of tags that are applied to the specified stack or layer.",
	"Method": "ListTagsResult listTags(ListTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CreateInputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListAccountsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.InsertableImage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFadeIn() != null)\r\n        sb.append(\"FadeIn: \").append(getFadeIn()).append(\",\");\r\n    if (getFadeOut() != null)\r\n        sb.append(\"FadeOut: \").append(getFadeOut()).append(\",\");\r\n    if (getHeight() != null)\r\n        sb.append(\"Height: \").append(getHeight()).append(\",\");\r\n    if (getImageInserterInput() != null)\r\n        sb.append(\"ImageInserterInput: \").append(getImageInserterInput()).append(\",\");\r\n    if (getImageX() != null)\r\n        sb.append(\"ImageX: \").append(getImageX()).append(\",\");\r\n    if (getImageY() != null)\r\n        sb.append(\"ImageY: \").append(getImageY()).append(\",\");\r\n    if (getLayer() != null)\r\n        sb.append(\"Layer: \").append(getLayer()).append(\",\");\r\n    if (getOpacity() != null)\r\n        sb.append(\"Opacity: \").append(getOpacity()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getWidth() != null)\r\n        sb.append(\"Width: \").append(getWidth());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.DeleteContainerPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ModifyDBParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.UpdateHITReviewStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.ListProjectsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListAccountsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccounts() != null)\r\n        sb.append(\"Accounts: \").append(getAccounts()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ListChannelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannels() != null)\r\n        sb.append(\"Channels: \").append(getChannels()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ResourceAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.updateDataSource",
	"Comment": "updates the datasourcename of a datasource.you can use the getdatasource operation to view the contents of the updated data element.",
	"Method": "UpdateDataSourceResult updateDataSource(UpdateDataSourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateDataSource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.HlsConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getManifestEndpointPrefix() != null)\r\n        sb.append(\"ManifestEndpointPrefix: \").append(getManifestEndpointPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportJobsResponse() != null)\r\n        sb.append(\"ImportJobsResponse: \").append(getImportJobsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.UpdateDataSourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.UdpContainerSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getM2tsSettings() != null)\r\n        sb.append(\"M2tsSettings: \").append(getM2tsSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.UpdatePresetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPreset() != null)\r\n        sb.append(\"Preset: \").append(getPreset());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.Prediction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPredictedLabel() != null)\r\n        sb.append(\"PredictedLabel: \").append(getPredictedLabel()).append(\",\");\r\n    if (getPredictedValue() != null)\r\n        sb.append(\"PredictedValue: \").append(getPredictedValue()).append(\",\");\r\n    if (getPredictedScores() != null)\r\n        sb.append(\"PredictedScores: \").append(getPredictedScores()).append(\",\");\r\n    if (getDetails() != null)\r\n        sb.append(\"Details: \").append(getDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DescribeEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.DeleteContainerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateAdditionalAssignmentsForHITRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId()).append(\",\");\r\n    if (getNumberOfAdditionalAssignments() != null)\r\n        sb.append(\"NumberOfAdditionalAssignments: \").append(getNumberOfAdditionalAssignments()).append(\",\");\r\n    if (getUniqueRequestToken() != null)\r\n        sb.append(\"UniqueRequestToken: \").append(getUniqueRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputWhitelistRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidr() != null)\r\n        sb.append(\"Cidr: \").append(getCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.model.PutObjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getCacheControl() != null)\r\n        sb.append(\"CacheControl: \").append(getCacheControl()).append(\",\");\r\n    if (getStorageClass() != null)\r\n        sb.append(\"StorageClass: \").append(getStorageClass());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.WebvttDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CancelJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.CreateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getConsoleAccess() != null)\r\n        sb.append(\"ConsoleAccess: \").append(getConsoleAccess()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(getPassword()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AudioNormalizationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithm() != null)\r\n        sb.append(\"Algorithm: \").append(getAlgorithm()).append(\",\");\r\n    if (getAlgorithmControl() != null)\r\n        sb.append(\"AlgorithmControl: \").append(getAlgorithmControl()).append(\",\");\r\n    if (getCorrectionGateLevel() != null)\r\n        sb.append(\"CorrectionGateLevel: \").append(getCorrectionGateLevel()).append(\",\");\r\n    if (getLoudnessLogging() != null)\r\n        sb.append(\"LoudnessLogging: \").append(getLoudnessLogging()).append(\",\");\r\n    if (getPeakCalculation() != null)\r\n        sb.append(\"PeakCalculation: \").append(getPeakCalculation()).append(\",\");\r\n    if (getTargetLkfs() != null)\r\n        sb.append(\"TargetLkfs: \").append(getTargetLkfs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.listQualificationRequests",
	"Comment": "the listqualificationrequests operation retrieves requests for qualifications of a particularqualification type. the owner of the qualification type calls this operation to poll for pending requests, andaccepts them using the acceptqualification operation.",
	"Method": "ListQualificationRequestsResult listQualificationRequests(ListQualificationRequestsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListQualificationRequests(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.AWSMediaLiveClient.deleteChannel",
	"Comment": "starts deletion of channel. the associated outputs are also deleted.",
	"Method": "DeleteChannelResult deleteChannel(DeleteChannelRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteChannel(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.SearchedLogStream.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName()).append(\",\");\r\n    if (getSearchedCompletely() != null)\r\n        sb.append(\"SearchedCompletely: \").append(getSearchedCompletely());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.CreateLogStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CreateChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannel() != null)\r\n        sb.append(\"Channel: \").append(getChannel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.AWSMobileAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmobileasync using the current builder configuration.",
	"Method": "AWSMobileAsync build(AwsAsyncClientParams params){\r\n    return new AWSMobileAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.PendingCloudwatchLogsExports.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogTypesToEnable() != null)\r\n        sb.append(\"LogTypesToEnable: \").append(getLogTypesToEnable()).append(\",\");\r\n    if (getLogTypesToDisable() != null)\r\n        sb.append(\"LogTypesToDisable: \").append(getLogTypesToDisable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DeleteDBSubnetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.App.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAppId() != null)\r\n        sb.append(\"AppId: \").append(getAppId()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getShortname() != null)\r\n        sb.append(\"Shortname: \").append(getShortname()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDataSources() != null)\r\n        sb.append(\"DataSources: \").append(getDataSources()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getAppSource() != null)\r\n        sb.append(\"AppSource: \").append(getAppSource()).append(\",\");\r\n    if (getDomains() != null)\r\n        sb.append(\"Domains: \").append(getDomains()).append(\",\");\r\n    if (getEnableSsl() != null)\r\n        sb.append(\"EnableSsl: \").append(getEnableSsl()).append(\",\");\r\n    if (getSslConfiguration() != null)\r\n        sb.append(\"SslConfiguration: \").append(getSslConfiguration()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Output.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioDescriptions() != null)\r\n        sb.append(\"AudioDescriptions: \").append(getAudioDescriptions()).append(\",\");\r\n    if (getCaptionDescriptions() != null)\r\n        sb.append(\"CaptionDescriptions: \").append(getCaptionDescriptions()).append(\",\");\r\n    if (getContainerSettings() != null)\r\n        sb.append(\"ContainerSettings: \").append(getContainerSettings()).append(\",\");\r\n    if (getExtension() != null)\r\n        sb.append(\"Extension: \").append(getExtension()).append(\",\");\r\n    if (getNameModifier() != null)\r\n        sb.append(\"NameModifier: \").append(getNameModifier()).append(\",\");\r\n    if (getOutputSettings() != null)\r\n        sb.append(\"OutputSettings: \").append(getOutputSettings()).append(\",\");\r\n    if (getPreset() != null)\r\n        sb.append(\"Preset: \").append(getPreset()).append(\",\");\r\n    if (getVideoDescription() != null)\r\n        sb.append(\"VideoDescription: \").append(getVideoDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.protect.protocol.ApiGatewayProtocolFactoryImpl.createResponseHandler",
	"Comment": "creates a response handler to be used for handling a successful response.",
	"Method": "HttpResponseHandler<T> createResponseHandler(JsonOperationMetadata operationMetadata,Unmarshaller<T, JsonUnmarshallerContext> responseUnmarshaller){\r\n    final JsonResponseHandler<T> responseHandler = JSON_FACTORY.createResponseHandler(operationMetadata, responseUnmarshaller);\r\n    return new ApiGatewayResponseHandler(responseHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointResponse() != null)\r\n        sb.append(\"EndpointResponse: \").append(getEndpointResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CaptionSourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAncillarySourceSettings() != null)\r\n        sb.append(\"AncillarySourceSettings: \").append(getAncillarySourceSettings()).append(\",\");\r\n    if (getDvbSubSourceSettings() != null)\r\n        sb.append(\"DvbSubSourceSettings: \").append(getDvbSubSourceSettings()).append(\",\");\r\n    if (getEmbeddedSourceSettings() != null)\r\n        sb.append(\"EmbeddedSourceSettings: \").append(getEmbeddedSourceSettings()).append(\",\");\r\n    if (getFileSourceSettings() != null)\r\n        sb.append(\"FileSourceSettings: \").append(getFileSourceSettings()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getTeletextSourceSettings() != null)\r\n        sb.append(\"TeletextSourceSettings: \").append(getTeletextSourceSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.StartMaintenanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getEngineAttributes() != null)\r\n        sb.append(\"EngineAttributes: \").append(getEngineAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DescribeApplicationStateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationStatus() != null)\r\n        sb.append(\"ApplicationStatus: \").append(getApplicationStatus()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointItemResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListCreateAccountStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStates() != null)\r\n        sb.append(\"States: \").append(getStates()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListTargetsForPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.BatchPrediction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBatchPredictionId() != null)\r\n        sb.append(\"BatchPredictionId: \").append(getBatchPredictionId()).append(\",\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getBatchPredictionDataSourceId() != null)\r\n        sb.append(\"BatchPredictionDataSourceId: \").append(getBatchPredictionDataSourceId()).append(\",\");\r\n    if (getInputDataLocationS3() != null)\r\n        sb.append(\"InputDataLocationS3: \").append(getInputDataLocationS3()).append(\",\");\r\n    if (getCreatedByIamUser() != null)\r\n        sb.append(\"CreatedByIamUser: \").append(getCreatedByIamUser()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getOutputUri() != null)\r\n        sb.append(\"OutputUri: \").append(getOutputUri()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getComputeTime() != null)\r\n        sb.append(\"ComputeTime: \").append(getComputeTime()).append(\",\");\r\n    if (getFinishedAt() != null)\r\n        sb.append(\"FinishedAt: \").append(getFinishedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getTotalRecordCount() != null)\r\n        sb.append(\"TotalRecordCount: \").append(getTotalRecordCount()).append(\",\");\r\n    if (getInvalidRecordCount() != null)\r\n        sb.append(\"InvalidRecordCount: \").append(getInvalidRecordCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CreateDBParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonmachinelearning using the current builder configuration.",
	"Method": "AmazonMachineLearning build(AwsSyncClientParams params){\r\n    return new AmazonMachineLearningClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutResourcePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourcePolicy() != null)\r\n        sb.append(\"ResourcePolicy: \").append(getResourcePolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ConfigurationRevision.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignActivitiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCampaignId() != null)\r\n        sb.append(\"CampaignId: \").append(getCampaignId()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DeleteProgressUpdateStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStreamName() != null)\r\n        sb.append(\"ProgressUpdateStreamName: \").append(getProgressUpdateStreamName()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.RemixSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelMappings() != null)\r\n        sb.append(\"ChannelMappings: \").append(getChannelMappings()).append(\",\");\r\n    if (getChannelsIn() != null)\r\n        sb.append(\"ChannelsIn: \").append(getChannelsIn()).append(\",\");\r\n    if (getChannelsOut() != null)\r\n        sb.append(\"ChannelsOut: \").append(getChannelsOut());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ListTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.AWSMediaConvertClient.listQueues",
	"Comment": "retrieve a json array of up to twenty of your queues. this will return the queues themselves, not just a list ofthem. to retrieve the next twenty queues, use the nexttoken string returned with the array.",
	"Method": "ListQueuesResult listQueues(ListQueuesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListQueues(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeRdsDbInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getRdsDbInstanceArns() != null)\r\n        sb.append(\"RdsDbInstanceArns: \").append(getRdsDbInstanceArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetQualificationScoreRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.DisassociateS3ResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedS3Resources() != null)\r\n        sb.append(\"FailedS3Resources: \").append(getFailedS3Resources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DisassociateCreatedArtifactResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.FilterLogEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents()).append(\",\");\r\n    if (getSearchedLogStreams() != null)\r\n        sb.append(\"SearchedLogStreams: \").append(getSearchedLogStreams()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.StopQueryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueryId() != null)\r\n        sb.append(\"QueryId: \").append(getQueryId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Mp4Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCslgAtom() != null)\r\n        sb.append(\"CslgAtom: \").append(getCslgAtom()).append(\",\");\r\n    if (getFreeSpaceBox() != null)\r\n        sb.append(\"FreeSpaceBox: \").append(getFreeSpaceBox()).append(\",\");\r\n    if (getMoovPlacement() != null)\r\n        sb.append(\"MoovPlacement: \").append(getMoovPlacement()).append(\",\");\r\n    if (getMp4MajorBrand() != null)\r\n        sb.append(\"Mp4MajorBrand: \").append(getMp4MajorBrand());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Timing.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFinishTime() != null)\r\n        sb.append(\"FinishTime: \").append(getFinishTime()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getSubmitTime() != null)\r\n        sb.append(\"SubmitTime: \").append(getSubmitTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListCreateAccountStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateAccountStatuses() != null)\r\n        sb.append(\"CreateAccountStatuses: \").append(getCreateAccountStatuses()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.AWSMarketplaceMeteringClient.resolveCustomer",
	"Comment": "resolvecustomer is called by a saas application during the registration process. when a buyer visits your websiteduring the registration process, the buyer submits a registration token through their browser. the registrationtoken is resolved through this api to obtain a customeridentifier and product code.",
	"Method": "ResolveCustomerResult resolveCustomer(ResolveCustomerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeResolveCustomer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeExportTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportTasks() != null)\r\n        sb.append(\"ExportTasks: \").append(getExportTasks()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.DeleteContainerPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointResponse() != null)\r\n        sb.append(\"EndpointResponse: \").append(getEndpointResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.HandshakeFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionType() != null)\r\n        sb.append(\"ActionType: \").append(getActionType()).append(\",\");\r\n    if (getParentHandshakeId() != null)\r\n        sb.append(\"ParentHandshakeId: \").append(getParentHandshakeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.DeleteCorsPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.AWSOrganizationsClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsorganizations using the current builder configuration.",
	"Method": "AWSOrganizations build(AwsSyncClientParams params){\r\n    return new AWSOrganizationsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeOfferingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getDurationUnits() != null)\r\n        sb.append(\"DurationUnits: \").append(getDurationUnits()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getOfferingDescription() != null)\r\n        sb.append(\"OfferingDescription: \").append(getOfferingDescription()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getResourceSpecification() != null)\r\n        sb.append(\"ResourceSpecification: \").append(getResourceSpecification()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplaceentitlement.model.EntitlementValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIntegerValue() != null)\r\n        sb.append(\"IntegerValue: \").append(getIntegerValue()).append(\",\");\r\n    if (getDoubleValue() != null)\r\n        sb.append(\"DoubleValue: \").append(getDoubleValue()).append(\",\");\r\n    if (getBooleanValue() != null)\r\n        sb.append(\"BooleanValue: \").append(getBooleanValue()).append(\",\");\r\n    if (getStringValue() != null)\r\n        sb.append(\"StringValue: \").append(getStringValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.UdpOutputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBufferMsec() != null)\r\n        sb.append(\"BufferMsec: \").append(getBufferMsec()).append(\",\");\r\n    if (getContainerSettings() != null)\r\n        sb.append(\"ContainerSettings: \").append(getContainerSettings()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getFecOutputSettings() != null)\r\n        sb.append(\"FecOutputSettings: \").append(getFecOutputSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UnassignVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribePermissionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.model.BatchMeterUsageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUsageRecords() != null)\r\n        sb.append(\"UsageRecords: \").append(getUsageRecords()).append(\",\");\r\n    if (getProductCode() != null)\r\n        sb.append(\"ProductCode: \").append(getProductCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.startQuery",
	"Comment": "schedules a query of a log group using cloudwatch logs insights. you specify the log group to query, the querystring to use, and the time to query.for more information, see cloudwatch logs insightsquery syntax.",
	"Method": "StartQueryResult startQuery(StartQueryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartQuery(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacecommerceanalytics.AWSMarketplaceCommerceAnalyticsClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicy() != null)\r\n        sb.append(\"Policy: \").append(getPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.AWSMediaPackageAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmediapackageasync using the current builder configuration.",
	"Method": "AWSMediaPackageAsync build(AwsAsyncClientParams params){\r\n    return new AWSMediaPackageAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.UpdateOrganizationalUnitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationalUnit() != null)\r\n        sb.append(\"OrganizationalUnit: \").append(getOrganizationalUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PhoneNumberValidateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumberValidateRequest() != null)\r\n        sb.append(\"NumberValidateRequest: \").append(getNumberValidateRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.AmazonMacieClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonmacie using the current builder configuration.",
	"Method": "AmazonMacie build(AwsSyncClientParams params){\r\n    return new AmazonMacieClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeEventCategories",
	"Comment": "displays a list of categories for all event source types, or, if specified, for a specified source type.",
	"Method": "DescribeEventCategoriesResult describeEventCategories(DescribeEventCategoriesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEventCategories(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetQueryResultsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResults() != null)\r\n        sb.append(\"Results: \").append(getResults()).append(\",\");\r\n    if (getStatistics() != null)\r\n        sb.append(\"Statistics: \").append(getStatistics()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.Filter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte35DescriptorSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSegmentationDescriptorScte35DescriptorSettings() != null)\r\n        sb.append(\"SegmentationDescriptorScte35DescriptorSettings: \").append(getSegmentationDescriptorScte35DescriptorSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DescribeConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEngineType() != null)\r\n        sb.append(\"EngineType: \").append(getEngineType()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLatestRevision() != null)\r\n        sb.append(\"LatestRevision: \").append(getLatestRevision()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeEcsClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEcsClusters() != null)\r\n        sb.append(\"EcsClusters: \").append(getEcsClusters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListAssignmentsForHITRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getAssignmentStatuses() != null)\r\n        sb.append(\"AssignmentStatuses: \").append(getAssignmentStatuses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.VideoSelector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getColorSpace() != null)\r\n        sb.append(\"ColorSpace: \").append(getColorSpace()).append(\",\");\r\n    if (getColorSpaceUsage() != null)\r\n        sb.append(\"ColorSpaceUsage: \").append(getColorSpaceUsage()).append(\",\");\r\n    if (getSelectorSettings() != null)\r\n        sb.append(\"SelectorSettings: \").append(getSelectorSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DeleteUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.ServiceError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceErrorId() != null)\r\n        sb.append(\"ServiceErrorId: \").append(getServiceErrorId()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeregisterRdsDbInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.StopStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DescribeMigrationTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Offering.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getDurationUnits() != null)\r\n        sb.append(\"DurationUnits: \").append(getDurationUnits()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getOfferingDescription() != null)\r\n        sb.append(\"OfferingDescription: \").append(getOfferingDescription()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getResourceSpecification() != null)\r\n        sb.append(\"ResourceSpecification: \").append(getResourceSpecification()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AssociateCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.CreateConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLatestRevision() != null)\r\n        sb.append(\"LatestRevision: \").append(getLatestRevision()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DescribeConfigurationRevisionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationId() != null)\r\n        sb.append(\"ConfigurationId: \").append(getConfigurationId()).append(\",\");\r\n    if (getConfigurationRevision() != null)\r\n        sb.append(\"ConfigurationRevision: \").append(getConfigurationRevision());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.AWSOrganizationsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DeleteOrganizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMClient.updateServer",
	"Comment": "updates settings for a server.this operation is synchronous.",
	"Method": "UpdateServerResult updateServer(UpdateServerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateServer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AudioSelectorGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioSelectorNames() != null)\r\n        sb.append(\"AudioSelectorNames: \").append(getAudioSelectorNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListQualificationRequestsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ResetDBParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteLogStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.RtmpCaptionInfoDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.DimensionKeyDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getTotal() != null)\r\n        sb.append(\"Total: \").append(getTotal()).append(\",\");\r\n    if (getPartitions() != null)\r\n        sb.append(\"Partitions: \").append(getPartitions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RegisterEcsClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEcsClusterArn() != null)\r\n        sb.append(\"EcsClusterArn: \").append(getEcsClusterArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getLayerIds() != null)\r\n        sb.append(\"LayerIds: \").append(getLayerIds()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getAutoScalingType() != null)\r\n        sb.append(\"AutoScalingType: \").append(getAutoScalingType()).append(\",\");\r\n    if (getHostname() != null)\r\n        sb.append(\"Hostname: \").append(getHostname()).append(\",\");\r\n    if (getOs() != null)\r\n        sb.append(\"Os: \").append(getOs()).append(\",\");\r\n    if (getAmiId() != null)\r\n        sb.append(\"AmiId: \").append(getAmiId()).append(\",\");\r\n    if (getSshKeyName() != null)\r\n        sb.append(\"SshKeyName: \").append(getSshKeyName()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getVirtualizationType() != null)\r\n        sb.append(\"VirtualizationType: \").append(getVirtualizationType()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getRootDeviceType() != null)\r\n        sb.append(\"RootDeviceType: \").append(getRootDeviceType()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getInstallUpdatesOnBoot() != null)\r\n        sb.append(\"InstallUpdatesOnBoot: \").append(getInstallUpdatesOnBoot()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getAgentVersion() != null)\r\n        sb.append(\"AgentVersion: \").append(getAgentVersion()).append(\",\");\r\n    if (getTenancy() != null)\r\n        sb.append(\"Tenancy: \").append(getTenancy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetAssignmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssignmentId() != null)\r\n        sb.append(\"AssignmentId: \").append(getAssignmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateLayerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getShortname() != null)\r\n        sb.append(\"Shortname: \").append(getShortname()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getCloudWatchLogsConfiguration() != null)\r\n        sb.append(\"CloudWatchLogsConfiguration: \").append(getCloudWatchLogsConfiguration()).append(\",\");\r\n    if (getCustomInstanceProfileArn() != null)\r\n        sb.append(\"CustomInstanceProfileArn: \").append(getCustomInstanceProfileArn()).append(\",\");\r\n    if (getCustomJson() != null)\r\n        sb.append(\"CustomJson: \").append(getCustomJson()).append(\",\");\r\n    if (getCustomSecurityGroupIds() != null)\r\n        sb.append(\"CustomSecurityGroupIds: \").append(getCustomSecurityGroupIds()).append(\",\");\r\n    if (getPackages() != null)\r\n        sb.append(\"Packages: \").append(getPackages()).append(\",\");\r\n    if (getVolumeConfigurations() != null)\r\n        sb.append(\"VolumeConfigurations: \").append(getVolumeConfigurations()).append(\",\");\r\n    if (getEnableAutoHealing() != null)\r\n        sb.append(\"EnableAutoHealing: \").append(getEnableAutoHealing()).append(\",\");\r\n    if (getAutoAssignElasticIps() != null)\r\n        sb.append(\"AutoAssignElasticIps: \").append(getAutoAssignElasticIps()).append(\",\");\r\n    if (getAutoAssignPublicIps() != null)\r\n        sb.append(\"AutoAssignPublicIps: \").append(getAutoAssignPublicIps()).append(\",\");\r\n    if (getCustomRecipes() != null)\r\n        sb.append(\"CustomRecipes: \").append(getCustomRecipes()).append(\",\");\r\n    if (getInstallUpdatesOnBoot() != null)\r\n        sb.append(\"InstallUpdatesOnBoot: \").append(getInstallUpdatesOnBoot()).append(\",\");\r\n    if (getUseEbsOptimizedInstances() != null)\r\n        sb.append(\"UseEbsOptimizedInstances: \").append(getUseEbsOptimizedInstances()).append(\",\");\r\n    if (getLifecycleEventConfiguration() != null)\r\n        sb.append(\"LifecycleEventConfiguration: \").append(getLifecycleEventConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.AWSMobileClient.exportProject",
	"Comment": "exports project configuration to a snapshot which can be downloaded and shared. note that mobile app pushcredentials are encrypted in exported projects, so they can only be shared successfully within the same awsaccount.",
	"Method": "ExportProjectResult exportProject(ExportProjectRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeExportProject(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.BatchScheduleActionDeleteResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduleActions() != null)\r\n        sb.append(\"ScheduleActions: \").append(getScheduleActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.GrantAccessRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getValidForInMinutes() != null)\r\n        sb.append(\"ValidForInMinutes: \").append(getValidForInMinutes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.InputLogEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.AssignInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.UpdateConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationId() != null)\r\n        sb.append(\"ConfigurationId: \").append(getConfigurationId()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CreateOrganizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFeatureSet() != null)\r\n        sb.append(\"FeatureSet: \").append(getFeatureSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DescribeUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getConsoleAccess() != null)\r\n        sb.append(\"ConsoleAccess: \").append(getConsoleAccess()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getPending() != null)\r\n        sb.append(\"Pending: \").append(getPending()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.deleteDestination",
	"Comment": "deletes the specified destination, and eventually disables all the subscription filters that publish to it. thisoperation does not delete the physical resource encapsulated by the destination.",
	"Method": "DeleteDestinationResult deleteDestination(DeleteDestinationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDestination(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.ResponsePartitionKey.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignHook.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLambdaFunctionName() != null)\r\n        sb.append(\"LambdaFunctionName: \").append(getLambdaFunctionName()).append(\",\");\r\n    if (getMode() != null)\r\n        sb.append(\"Mode: \").append(getMode()).append(\",\");\r\n    if (getWebUrl() != null)\r\n        sb.append(\"WebUrl: \").append(getWebUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CreatePresetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateElasticIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.updateBatchPrediction",
	"Comment": "updates the batchpredictionname of a batchprediction.you can use the getbatchprediction operation to view the contents of the updated data element.",
	"Method": "UpdateBatchPredictionResult updateBatchPrediction(UpdateBatchPredictionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateBatchPrediction(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.JobSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdAvailOffset() != null)\r\n        sb.append(\"AdAvailOffset: \").append(getAdAvailOffset()).append(\",\");\r\n    if (getAvailBlanking() != null)\r\n        sb.append(\"AvailBlanking: \").append(getAvailBlanking()).append(\",\");\r\n    if (getInputs() != null)\r\n        sb.append(\"Inputs: \").append(getInputs()).append(\",\");\r\n    if (getMotionImageInserter() != null)\r\n        sb.append(\"MotionImageInserter: \").append(getMotionImageInserter()).append(\",\");\r\n    if (getNielsenConfiguration() != null)\r\n        sb.append(\"NielsenConfiguration: \").append(getNielsenConfiguration()).append(\",\");\r\n    if (getOutputGroups() != null)\r\n        sb.append(\"OutputGroups: \").append(getOutputGroups()).append(\",\");\r\n    if (getTimecodeConfig() != null)\r\n        sb.append(\"TimecodeConfig: \").append(getTimecodeConfig()).append(\",\");\r\n    if (getTimedMetadataInsertion() != null)\r\n        sb.append(\"TimedMetadataInsertion: \").append(getTimedMetadataInsertion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.GrantEntitlementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSubscribers() != null)\r\n        sb.append(\"Subscribers: \").append(getSubscribers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.AvailabilityZone.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsVoipSandboxChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ReviewActionDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionId() != null)\r\n        sb.append(\"ActionId: \").append(getActionId()).append(\",\");\r\n    if (getActionName() != null)\r\n        sb.append(\"ActionName: \").append(getActionName()).append(\",\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId()).append(\",\");\r\n    if (getTargetType() != null)\r\n        sb.append(\"TargetType: \").append(getTargetType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCompleteTime() != null)\r\n        sb.append(\"CompleteTime: \").append(getCompleteTime()).append(\",\");\r\n    if (getResult() != null)\r\n        sb.append(\"Result: \").append(getResult()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.AWSPIClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.StackConfigurationManager.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.DeleteQualificationTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.DescribeFlowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.DescribeContainerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeVolumesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getRaidArrayId() != null)\r\n        sb.append(\"RaidArrayId: \").append(getRaidArrayId()).append(\",\");\r\n    if (getVolumeIds() != null)\r\n        sb.append(\"VolumeIds: \").append(getVolumeIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CaptionDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaptionSelectorName() != null)\r\n        sb.append(\"CaptionSelectorName: \").append(getCaptionSelectorName()).append(\",\");\r\n    if (getCustomLanguageCode() != null)\r\n        sb.append(\"CustomLanguageCode: \").append(getCustomLanguageCode()).append(\",\");\r\n    if (getDestinationSettings() != null)\r\n        sb.append(\"DestinationSettings: \").append(getDestinationSettings()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLanguageDescription() != null)\r\n        sb.append(\"LanguageDescription: \").append(getLanguageDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ModifyDBClusterParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ConfigurationId.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getRevision() != null)\r\n        sb.append(\"Revision: \").append(getRevision());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.AWSPIAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningAsyncClient.describeDataSourcesAsync",
	"Comment": "simplified method form for invoking the describedatasources operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDataSourcesResult> describeDataSourcesAsync(DescribeDataSourcesRequest request,java.util.concurrent.Future<DescribeDataSourcesResult> describeDataSourcesAsync,DescribeDataSourcesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDataSourcesRequest, DescribeDataSourcesResult> asyncHandler,java.util.concurrent.Future<DescribeDataSourcesResult> describeDataSourcesAsync,java.util.concurrent.Future<DescribeDataSourcesResult> describeDataSourcesAsync,com.amazonaws.handlers.AsyncHandler<DescribeDataSourcesRequest, DescribeDataSourcesResult> asyncHandler){\r\n    return describeDataSourcesAsync(new DescribeDataSourcesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListBonusPaymentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumResults() != null)\r\n        sb.append(\"NumResults: \").append(getNumResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getBonusPayments() != null)\r\n        sb.append(\"BonusPayments: \").append(getBonusPayments());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.UpdateBrokerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLogs() != null)\r\n        sb.append(\"Logs: \").append(getLogs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.model.MeterUsageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProductCode() != null)\r\n        sb.append(\"ProductCode: \").append(getProductCode()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getUsageDimension() != null)\r\n        sb.append(\"UsageDimension: \").append(getUsageDimension()).append(\",\");\r\n    if (getUsageQuantity() != null)\r\n        sb.append(\"UsageQuantity: \").append(getUsageQuantity()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointClient.getCampaignVersion",
	"Comment": "returns information about a specific version of a campaign.",
	"Method": "GetCampaignVersionResult getCampaignVersion(GetCampaignVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetCampaignVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.InputDecryptionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDecryptionMode() != null)\r\n        sb.append(\"DecryptionMode: \").append(getDecryptionMode()).append(\",\");\r\n    if (getEncryptedDecryptionKey() != null)\r\n        sb.append(\"EncryptedDecryptionKey: \").append(getEncryptedDecryptionKey()).append(\",\");\r\n    if (getInitializationVector() != null)\r\n        sb.append(\"InitializationVector: \").append(getInitializationVector()).append(\",\");\r\n    if (getKmsKeyRegion() != null)\r\n        sb.append(\"KmsKeyRegion: \").append(getKmsKeyRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateUserProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn()).append(\",\");\r\n    if (getSshUsername() != null)\r\n        sb.append(\"SshUsername: \").append(getSshUsername()).append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey()).append(\",\");\r\n    if (getAllowSelfManagement() != null)\r\n        sb.append(\"AllowSelfManagement: \").append(getAllowSelfManagement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.DescribeDimensionKeysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlignedStartTime() != null)\r\n        sb.append(\"AlignedStartTime: \").append(getAlignedStartTime()).append(\",\");\r\n    if (getAlignedEndTime() != null)\r\n        sb.append(\"AlignedEndTime: \").append(getAlignedEndTime()).append(\",\");\r\n    if (getPartitionKeys() != null)\r\n        sb.append(\"PartitionKeys: \").append(getPartitionKeys()).append(\",\");\r\n    if (getKeys() != null)\r\n        sb.append(\"Keys: \").append(getKeys()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.ExportBundleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.DescribeDimensionKeysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceType() != null)\r\n        sb.append(\"ServiceType: \").append(getServiceType()).append(\",\");\r\n    if (getIdentifier() != null)\r\n        sb.append(\"Identifier: \").append(getIdentifier()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getMetric() != null)\r\n        sb.append(\"Metric: \").append(getMetric()).append(\",\");\r\n    if (getPeriodInSeconds() != null)\r\n        sb.append(\"PeriodInSeconds: \").append(getPeriodInSeconds()).append(\",\");\r\n    if (getGroupBy() != null)\r\n        sb.append(\"GroupBy: \").append(getGroupBy()).append(\",\");\r\n    if (getPartitionBy() != null)\r\n        sb.append(\"PartitionBy: \").append(getPartitionBy()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.PutResourceAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.UpdateConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLatestRevision() != null)\r\n        sb.append(\"LatestRevision: \").append(getLatestRevision()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getWarnings() != null)\r\n        sb.append(\"Warnings: \").append(getWarnings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.PolicySummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getAwsManaged() != null)\r\n        sb.append(\"AwsManaged: \").append(getAwsManaged());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.QueryCompileError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.Logs.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudit() != null)\r\n        sb.append(\"Audit: \").append(getAudit()).append(\",\");\r\n    if (getGeneral() != null)\r\n        sb.append(\"General: \").append(getGeneral());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ActivitiesResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBParameterGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.UpdateOrganizationalUnitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationalUnitId() != null)\r\n        sb.append(\"OrganizationalUnitId: \").append(getOrganizationalUnitId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CopyDBParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceDBParameterGroupIdentifier() != null)\r\n        sb.append(\"SourceDBParameterGroupIdentifier: \").append(getSourceDBParameterGroupIdentifier()).append(\",\");\r\n    if (getTargetDBParameterGroupIdentifier() != null)\r\n        sb.append(\"TargetDBParameterGroupIdentifier: \").append(getTargetDBParameterGroupIdentifier()).append(\",\");\r\n    if (getTargetDBParameterGroupDescription() != null)\r\n        sb.append(\"TargetDBParameterGroupDescription: \").append(getTargetDBParameterGroupDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.ResponseResourceMetricKey.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetric() != null)\r\n        sb.append(\"Metric: \").append(getMetric()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.AmazonMQClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.TemporaryCredential.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(getPassword()).append(\",\");\r\n    if (getValidForInMinutes() != null)\r\n        sb.append(\"ValidForInMinutes: \").append(getValidForInMinutes()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.deleteDBClusterSnapshot",
	"Comment": "deletes a db cluster snapshot. if the snapshot is being copied, the copy operation is terminated.the db cluster snapshot must be in the available state to be deleted.",
	"Method": "DBClusterSnapshot deleteDBClusterSnapshot(DeleteDBClusterSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDBClusterSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.EmbeddedSourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConvert608To708() != null)\r\n        sb.append(\"Convert608To708: \").append(getConvert608To708()).append(\",\");\r\n    if (getScte20Detection() != null)\r\n        sb.append(\"Scte20Detection: \").append(getScte20Detection()).append(\",\");\r\n    if (getSource608ChannelNumber() != null)\r\n        sb.append(\"Source608ChannelNumber: \").append(getSource608ChannelNumber()).append(\",\");\r\n    if (getSource608TrackNumber() != null)\r\n        sb.append(\"Source608TrackNumber: \").append(getSource608TrackNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ResetDBParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getResetAllParameters() != null)\r\n        sb.append(\"ResetAllParameters: \").append(getResetAllParameters()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetChannelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelsResponse() != null)\r\n        sb.append(\"ChannelsResponse: \").append(getChannelsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.CreateLogGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListHandshakesForOrganizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEmailChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmailChannelResponse() != null)\r\n        sb.append(\"EmailChannelResponse: \").append(getEmailChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getEndpointId() != null)\r\n        sb.append(\"EndpointId: \").append(getEndpointId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateAppRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAppId() != null)\r\n        sb.append(\"AppId: \").append(getAppId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDataSources() != null)\r\n        sb.append(\"DataSources: \").append(getDataSources()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getAppSource() != null)\r\n        sb.append(\"AppSource: \").append(getAppSource()).append(\",\");\r\n    if (getDomains() != null)\r\n        sb.append(\"Domains: \").append(getDomains()).append(\",\");\r\n    if (getEnableSsl() != null)\r\n        sb.append(\"EnableSsl: \").append(getEnableSsl()).append(\",\");\r\n    if (getSslConfiguration() != null)\r\n        sb.append(\"SslConfiguration: \").append(getSslConfiguration()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.internal.protocol.ApiGatewayErrorResponseHandler.createException",
	"Comment": "create an amazonserviceexception using the chain of unmarshallers. this method will neverreturn null, it will always return a valid exception.",
	"Method": "BaseException createException(int httpStatusCode,JsonContent jsonContent){\r\n    return unmarshallers.stream().filter(u -> u.matches(httpStatusCode)).findFirst().map(u -> safeUnmarshall(jsonContent, u)).orElseThrow(this::createUnknownException);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListAWSServiceAccessForOrganizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabledServicePrincipals() != null)\r\n        sb.append(\"EnabledServicePrincipals: \").append(getEnabledServicePrincipals()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeCommandsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommands() != null)\r\n        sb.append(\"Commands: \").append(getCommands());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBatchItem() != null)\r\n        sb.append(\"BatchItem: \").append(getBatchItem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListParentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChildId() != null)\r\n        sb.append(\"ChildId: \").append(getChildId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.listWorkersWithQualificationType",
	"Comment": "the listworkerswithqualificationtype operation returns all of the workers that have been associatedwith a given qualification type.",
	"Method": "ListWorkersWithQualificationTypeResult listWorkersWithQualificationType(ListWorkersWithQualificationTypeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListWorkersWithQualificationType(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.ListedFlow.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.PolicyParameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues()).append(\",\");\r\n    if (getMapEntries() != null)\r\n        sb.append(\"MapEntries: \").append(getMapEntries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ApproveAssignmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssignmentId() != null)\r\n        sb.append(\"AssignmentId: \").append(getAssignmentId()).append(\",\");\r\n    if (getRequesterFeedback() != null)\r\n        sb.append(\"RequesterFeedback: \").append(getRequesterFeedback()).append(\",\");\r\n    if (getOverrideRejection() != null)\r\n        sb.append(\"OverrideRejection: \").append(getOverrideRejection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.CreateContainerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainer() != null)\r\n        sb.append(\"Container: \").append(getContainer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.RejectedLogEventsInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTooNewLogEventStartIndex() != null)\r\n        sb.append(\"TooNewLogEventStartIndex: \").append(getTooNewLogEventStartIndex()).append(\",\");\r\n    if (getTooOldLogEventEndIndex() != null)\r\n        sb.append(\"TooOldLogEventEndIndex: \").append(getTooOldLogEventEndIndex()).append(\",\");\r\n    if (getExpiredLogEventEndIndex() != null)\r\n        sb.append(\"ExpiredLogEventEndIndex: \").append(getExpiredLogEventEndIndex());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.CreateTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.AmazonMQClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeUserProfilesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamUserArns() != null)\r\n        sb.append(\"IamUserArns: \").append(getIamUserArns());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DescribeTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RegisterVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.MigrationTaskSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getProgressPercent() != null)\r\n        sb.append(\"ProgressPercent: \").append(getProgressPercent()).append(\",\");\r\n    if (getStatusDetail() != null)\r\n        sb.append(\"StatusDetail: \").append(getStatusDetail()).append(\",\");\r\n    if (getUpdateDateTime() != null)\r\n        sb.append(\"UpdateDateTime: \").append(getUpdateDateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.UpdateBatchPredictionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBatchPredictionId() != null)\r\n        sb.append(\"BatchPredictionId: \").append(getBatchPredictionId()).append(\",\");\r\n    if (getBatchPredictionName() != null)\r\n        sb.append(\"BatchPredictionName: \").append(getBatchPredictionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CreateJobTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobTemplate() != null)\r\n        sb.append(\"JobTemplate: \").append(getJobTemplate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListWorkerBlocksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateHITWithHITTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHIT() != null)\r\n        sb.append(\"HIT: \").append(getHIT());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Rectangle.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHeight() != null)\r\n        sb.append(\"Height: \").append(getHeight()).append(\",\");\r\n    if (getWidth() != null)\r\n        sb.append(\"Width: \").append(getWidth()).append(\",\");\r\n    if (getX() != null)\r\n        sb.append(\"X: \").append(getX()).append(\",\");\r\n    if (getY() != null)\r\n        sb.append(\"Y: \").append(getY());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DeleteInputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.TagLogGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.AssociateKmsKeyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputDestinationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.CreateChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsIngest() != null)\r\n        sb.append(\"HlsIngest: \").append(getHlsIngest()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.PlaybackConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdDecisionServerUrl() != null)\r\n        sb.append(\"AdDecisionServerUrl: \").append(getAdDecisionServerUrl()).append(\",\");\r\n    if (getCdnConfiguration() != null)\r\n        sb.append(\"CdnConfiguration: \").append(getCdnConfiguration()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSlateAdUrl() != null)\r\n        sb.append(\"SlateAdUrl: \").append(getSlateAdUrl()).append(\",\");\r\n    if (getVideoContentSourceUrl() != null)\r\n        sb.append(\"VideoContentSourceUrl: \").append(getVideoContentSourceUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteLogGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.Flow.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEgressIp() != null)\r\n        sb.append(\"EgressIp: \").append(getEgressIp()).append(\",\");\r\n    if (getEntitlements() != null)\r\n        sb.append(\"Entitlements: \").append(getEntitlements()).append(\",\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBClusterSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBClusterSnapshots() != null)\r\n        sb.append(\"DBClusterSnapshots: \").append(getDBClusterSnapshots());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.StaticImageDeactivateScheduleActionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFadeOut() != null)\r\n        sb.append(\"FadeOut: \").append(getFadeOut()).append(\",\");\r\n    if (getLayer() != null)\r\n        sb.append(\"Layer: \").append(getLayer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.addSourceIdentifierToSubscription",
	"Comment": "adds a source identifier to an existing event notification subscription.",
	"Method": "EventSubscription addSourceIdentifierToSubscription(AddSourceIdentifierToSubscriptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddSourceIdentifierToSubscription(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeValidDBInstanceModifications",
	"Comment": "you can call describevaliddbinstancemodifications to learn what modifications you can make to your dbinstance. you can use this information when you call modifydbinstance.",
	"Method": "ValidDBInstanceModificationsMessage describeValidDBInstanceModifications(DescribeValidDBInstanceModificationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeValidDBInstanceModifications(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.AmazonMQAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonmqasync using the current builder configuration.",
	"Method": "AmazonMQAsync build(AwsAsyncClientParams params){\r\n    return new AmazonMQAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CancelHandshakeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshake() != null)\r\n        sb.append(\"Handshake: \").append(getHandshake());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeleteLayerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.OutputGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOutputGroupSettings() != null)\r\n        sb.append(\"OutputGroupSettings: \").append(getOutputGroupSettings()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBParameterGroupStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getParameterApplyStatus() != null)\r\n        sb.append(\"ParameterApplyStatus: \").append(getParameterApplyStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DisablePolicyTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRootId() != null)\r\n        sb.append(\"RootId: \").append(getRootId()).append(\",\");\r\n    if (getPolicyType() != null)\r\n        sb.append(\"PolicyType: \").append(getPolicyType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.OutputLogEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getIngestionTime() != null)\r\n        sb.append(\"IngestionTime: \").append(getIngestionTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DeleteDBParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventStream.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getDestinationStreamArn() != null)\r\n        sb.append(\"DestinationStreamArn: \").append(getDestinationStreamArn()).append(\",\");\r\n    if (getExternalId() != null)\r\n        sb.append(\"ExternalId: \").append(getExternalId()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getLastUpdatedBy() != null)\r\n        sb.append(\"LastUpdatedBy: \").append(getLastUpdatedBy()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.model.DescribeObjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBClusterSnapshot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getSnapshotCreateTime() != null)\r\n        sb.append(\"SnapshotCreateTime: \").append(getSnapshotCreateTime()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getClusterCreateTime() != null)\r\n        sb.append(\"ClusterCreateTime: \").append(getClusterCreateTime()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getSnapshotType() != null)\r\n        sb.append(\"SnapshotType: \").append(getSnapshotType()).append(\",\");\r\n    if (getPercentProgress() != null)\r\n        sb.append(\"PercentProgress: \").append(getPercentProgress()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getDBClusterSnapshotArn() != null)\r\n        sb.append(\"DBClusterSnapshotArn: \").append(getDBClusterSnapshotArn()).append(\",\");\r\n    if (getSourceDBClusterSnapshotArn() != null)\r\n        sb.append(\"SourceDBClusterSnapshotArn: \").append(getSourceDBClusterSnapshotArn()).append(\",\");\r\n    if (getIAMDatabaseAuthenticationEnabled() != null)\r\n        sb.append(\"IAMDatabaseAuthenticationEnabled: \").append(getIAMDatabaseAuthenticationEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetUserEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.AddOutputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getMaxLatency() != null)\r\n        sb.append(\"MaxLatency: \").append(getMaxLatency()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getSmoothingLatency() != null)\r\n        sb.append(\"SmoothingLatency: \").append(getSmoothingLatency()).append(\",\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.CreateServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServer() != null)\r\n        sb.append(\"Server: \").append(getServer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.Task.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusDetail() != null)\r\n        sb.append(\"StatusDetail: \").append(getStatusDetail()).append(\",\");\r\n    if (getProgressPercent() != null)\r\n        sb.append(\"ProgressPercent: \").append(getProgressPercent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.getDataSource",
	"Comment": "returns a datasource that includes metadata and data file information, as well as the current statusof the datasource.getdatasource provides results in normal or verbose format. the verbose format adds the schemadescription and the list of files pointed to by the datasource to the normal format.",
	"Method": "GetDataSourceResult getDataSource(GetDataSourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDataSource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getChannelType() != null)\r\n        sb.append(\"ChannelType: \").append(getChannelType()).append(\",\");\r\n    if (getDemographic() != null)\r\n        sb.append(\"Demographic: \").append(getDemographic()).append(\",\");\r\n    if (getEffectiveDate() != null)\r\n        sb.append(\"EffectiveDate: \").append(getEffectiveDate()).append(\",\");\r\n    if (getEndpointStatus() != null)\r\n        sb.append(\"EndpointStatus: \").append(getEndpointStatus()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getMetrics() != null)\r\n        sb.append(\"Metrics: \").append(getMetrics()).append(\",\");\r\n    if (getOptOut() != null)\r\n        sb.append(\"OptOut: \").append(getOptOut()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.StaticImageActivateScheduleActionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFadeIn() != null)\r\n        sb.append(\"FadeIn: \").append(getFadeIn()).append(\",\");\r\n    if (getFadeOut() != null)\r\n        sb.append(\"FadeOut: \").append(getFadeOut()).append(\",\");\r\n    if (getHeight() != null)\r\n        sb.append(\"Height: \").append(getHeight()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getImageX() != null)\r\n        sb.append(\"ImageX: \").append(getImageX()).append(\",\");\r\n    if (getImageY() != null)\r\n        sb.append(\"ImageY: \").append(getImageY()).append(\",\");\r\n    if (getLayer() != null)\r\n        sb.append(\"Layer: \").append(getLayer()).append(\",\");\r\n    if (getOpacity() != null)\r\n        sb.append(\"Opacity: \").append(getOpacity()).append(\",\");\r\n    if (getWidth() != null)\r\n        sb.append(\"Width: \").append(getWidth());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DirectMessageConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getADMMessage() != null)\r\n        sb.append(\"ADMMessage: \").append(getADMMessage()).append(\",\");\r\n    if (getAPNSMessage() != null)\r\n        sb.append(\"APNSMessage: \").append(getAPNSMessage()).append(\",\");\r\n    if (getBaiduMessage() != null)\r\n        sb.append(\"BaiduMessage: \").append(getBaiduMessage()).append(\",\");\r\n    if (getDefaultMessage() != null)\r\n        sb.append(\"DefaultMessage: \").append(getDefaultMessage()).append(\",\");\r\n    if (getDefaultPushNotificationMessage() != null)\r\n        sb.append(\"DefaultPushNotificationMessage: \").append(getDefaultPushNotificationMessage()).append(\",\");\r\n    if (getEmailMessage() != null)\r\n        sb.append(\"EmailMessage: \").append(getEmailMessage()).append(\",\");\r\n    if (getGCMMessage() != null)\r\n        sb.append(\"GCMMessage: \").append(getGCMMessage()).append(\",\");\r\n    if (getSMSMessage() != null)\r\n        sb.append(\"SMSMessage: \").append(getSMSMessage()).append(\",\");\r\n    if (getVoiceMessage() != null)\r\n        sb.append(\"VoiceMessage: \").append(getVoiceMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeMetricFiltersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricFilters() != null)\r\n        sb.append(\"MetricFilters: \").append(getMetricFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.AddTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.UpdateQueueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueue() != null)\r\n        sb.append(\"Queue: \").append(getQueue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UnassignVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getFeedbackForwardingAddress() != null)\r\n        sb.append(\"FeedbackForwardingAddress: \").append(getFeedbackForwardingAddress()).append(\",\");\r\n    if (getFromAddress() != null)\r\n        sb.append(\"FromAddress: \").append(getFromAddress()).append(\",\");\r\n    if (getRawEmail() != null)\r\n        sb.append(\"RawEmail: \").append(getRawEmail()).append(\",\");\r\n    if (getReplyToAddresses() != null)\r\n        sb.append(\"ReplyToAddresses: \").append(getReplyToAddresses()).append(\",\");\r\n    if (getSimpleEmail() != null)\r\n        sb.append(\"SimpleEmail: \").append(getSimpleEmail()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdditionalTreatments() != null)\r\n        sb.append(\"AdditionalTreatments: \").append(getAdditionalTreatments()).append(\",\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getDefaultState() != null)\r\n        sb.append(\"DefaultState: \").append(getDefaultState()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHoldoutPercent() != null)\r\n        sb.append(\"HoldoutPercent: \").append(getHoldoutPercent()).append(\",\");\r\n    if (getHook() != null)\r\n        sb.append(\"Hook: \").append(getHook()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsPaused() != null)\r\n        sb.append(\"IsPaused: \").append(getIsPaused()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getLimits() != null)\r\n        sb.append(\"Limits: \").append(getLimits()).append(\",\");\r\n    if (getMessageConfiguration() != null)\r\n        sb.append(\"MessageConfiguration: \").append(getMessageConfiguration()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getSegmentVersion() != null)\r\n        sb.append(\"SegmentVersion: \").append(getSegmentVersion()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getTreatmentDescription() != null)\r\n        sb.append(\"TreatmentDescription: \").append(getTreatmentDescription()).append(\",\");\r\n    if (getTreatmentName() != null)\r\n        sb.append(\"TreatmentName: \").append(getTreatmentName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AbstractAWSLogsAsync.describeDestinationsAsync",
	"Comment": "simplified method form for invoking the describedestinations operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDestinationsResult> describeDestinationsAsync(DescribeDestinationsRequest request,java.util.concurrent.Future<DescribeDestinationsResult> describeDestinationsAsync,DescribeDestinationsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDestinationsRequest, DescribeDestinationsResult> asyncHandler,java.util.concurrent.Future<DescribeDestinationsResult> describeDestinationsAsync,java.util.concurrent.Future<DescribeDestinationsResult> describeDestinationsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDestinationsRequest, DescribeDestinationsResult> asyncHandler){\r\n    return describeDestinationsAsync(new DescribeDestinationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBClusterSnapshotAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValues() != null)\r\n        sb.append(\"AttributeValues: \").append(getAttributeValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListRootsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoots() != null)\r\n        sb.append(\"Roots: \").append(getRoots()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.waiters.AWSOpsWorksWaiters.appExists",
	"Comment": "builds a appexists waiter by using custom parameters waiterparameters and other parameters defined in the waitersspecification, and then polls until it determines whether the resource entered the desired state or not, wherepolling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeAppsRequest> appExists(){\r\n    return new WaiterBuilder<DescribeAppsRequest, DescribeAppsResult>().withSdkFunction(new DescribeAppsFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor(WaiterState.SUCCESS), new HttpFailureStatusAcceptor(400, WaiterState.FAILURE)).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(1))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getDefaultAuthenticationMethod() != null)\r\n        sb.append(\"DefaultAuthenticationMethod: \").append(getDefaultAuthenticationMethod()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getHasTokenKey() != null)\r\n        sb.append(\"HasTokenKey: \").append(getHasTokenKey()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.RejectAssignmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.AWSMediaStoreDataClient.listItems",
	"Comment": "provides a list of metadata entries about folders and objects in the specified folder.",
	"Method": "ListItemsResult listItems(ListItemsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListItems(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateMLModelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EventDimensions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getEventType() != null)\r\n        sb.append(\"EventType: \").append(getEventType()).append(\",\");\r\n    if (getMetrics() != null)\r\n        sb.append(\"Metrics: \").append(getMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.CmafPackage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getHlsManifests() != null)\r\n        sb.append(\"HlsManifests: \").append(getHlsManifests()).append(\",\");\r\n    if (getSegmentDurationSeconds() != null)\r\n        sb.append(\"SegmentDurationSeconds: \").append(getSegmentDurationSeconds()).append(\",\");\r\n    if (getSegmentPrefix() != null)\r\n        sb.append(\"SegmentPrefix: \").append(getSegmentPrefix()).append(\",\");\r\n    if (getStreamSelection() != null)\r\n        sb.append(\"StreamSelection: \").append(getStreamSelection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AiffSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBitDepth() != null)\r\n        sb.append(\"BitDepth: \").append(getBitDepth()).append(\",\");\r\n    if (getChannels() != null)\r\n        sb.append(\"Channels: \").append(getChannels()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsAsyncClient.describeLogGroupsAsync",
	"Comment": "simplified method form for invoking the describeloggroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeLogGroupsResult> describeLogGroupsAsync(DescribeLogGroupsRequest request,java.util.concurrent.Future<DescribeLogGroupsResult> describeLogGroupsAsync,DescribeLogGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeLogGroupsRequest, DescribeLogGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeLogGroupsResult> describeLogGroupsAsync,java.util.concurrent.Future<DescribeLogGroupsResult> describeLogGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeLogGroupsRequest, DescribeLogGroupsResult> asyncHandler){\r\n    return describeLogGroupsAsync(new DescribeLogGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputLossBehavior.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlackFrameMsec() != null)\r\n        sb.append(\"BlackFrameMsec: \").append(getBlackFrameMsec()).append(\",\");\r\n    if (getInputLossImageColor() != null)\r\n        sb.append(\"InputLossImageColor: \").append(getInputLossImageColor()).append(\",\");\r\n    if (getInputLossImageSlate() != null)\r\n        sb.append(\"InputLossImageSlate: \").append(getInputLossImageSlate()).append(\",\");\r\n    if (getInputLossImageType() != null)\r\n        sb.append(\"InputLossImageType: \").append(getInputLossImageType()).append(\",\");\r\n    if (getRepeatFrameMsec() != null)\r\n        sb.append(\"RepeatFrameMsec: \").append(getRepeatFrameMsec());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListWorkersWithQualificationTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DescribeEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpoints() != null)\r\n        sb.append(\"Endpoints: \").append(getEndpoints()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetMLModelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getTrainingDataSourceId() != null)\r\n        sb.append(\"TrainingDataSourceId: \").append(getTrainingDataSourceId()).append(\",\");\r\n    if (getCreatedByIamUser() != null)\r\n        sb.append(\"CreatedByIamUser: \").append(getCreatedByIamUser()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSizeInBytes() != null)\r\n        sb.append(\"SizeInBytes: \").append(getSizeInBytes()).append(\",\");\r\n    if (getEndpointInfo() != null)\r\n        sb.append(\"EndpointInfo: \").append(getEndpointInfo()).append(\",\");\r\n    if (getTrainingParameters() != null)\r\n        sb.append(\"TrainingParameters: \").append(getTrainingParameters()).append(\",\");\r\n    if (getInputDataLocationS3() != null)\r\n        sb.append(\"InputDataLocationS3: \").append(getInputDataLocationS3()).append(\",\");\r\n    if (getMLModelType() != null)\r\n        sb.append(\"MLModelType: \").append(getMLModelType()).append(\",\");\r\n    if (getScoreThreshold() != null)\r\n        sb.append(\"ScoreThreshold: \").append(getScoreThreshold()).append(\",\");\r\n    if (getScoreThresholdLastUpdatedAt() != null)\r\n        sb.append(\"ScoreThresholdLastUpdatedAt: \").append(getScoreThresholdLastUpdatedAt()).append(\",\");\r\n    if (getLogUri() != null)\r\n        sb.append(\"LogUri: \").append(getLogUri()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getComputeTime() != null)\r\n        sb.append(\"ComputeTime: \").append(getComputeTime()).append(\",\");\r\n    if (getFinishedAt() != null)\r\n        sb.append(\"FinishedAt: \").append(getFinishedAt()).append(\",\");\r\n    if (getStartedAt() != null)\r\n        sb.append(\"StartedAt: \").append(getStartedAt()).append(\",\");\r\n    if (getRecipe() != null)\r\n        sb.append(\"Recipe: \").append(getRecipe()).append(\",\");\r\n    if (getSchema() != null)\r\n        sb.append(\"Schema: \").append(getSchema());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.DeletePlaybackConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.modifyDBSubnetGroup",
	"Comment": "modifies an existing db subnet group. db subnet groups must contain at least one subnet in at least two azs inthe aws region.",
	"Method": "DBSubnetGroup modifyDBSubnetGroup(ModifyDBSubnetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyDBSubnetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBEngineVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDefaultOnly() != null)\r\n        sb.append(\"DefaultOnly: \").append(getDefaultOnly()).append(\",\");\r\n    if (getListSupportedCharacterSets() != null)\r\n        sb.append(\"ListSupportedCharacterSets: \").append(getListSupportedCharacterSets()).append(\",\");\r\n    if (getListSupportedTimezones() != null)\r\n        sb.append(\"ListSupportedTimezones: \").append(getListSupportedTimezones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.deleteQualificationType",
	"Comment": "the deletequalificationtype deletes a qualification type and deletes any hit types that areassociated with the qualification type.this operation does not revoke qualifications already assigned to workers because the qualifications might beneeded for active hits. if there are any pending requests for the qualification type, amazon mechanical turkrejects those requests. after you delete a qualification type, you can no longer use it to create hits or hittypes.deletequalificationtype must wait for all the hits that use the deleted qualification type to be deleted beforecompleting. it may take up to 48 hours before deletequalificationtype completes and the unique name of thequalification type is available for reuse with createqualificationtype.",
	"Method": "DeleteQualificationTypeResult deleteQualificationType(DeleteQualificationTypeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteQualificationType(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.waiters.AmazonMachineLearningWaiters.batchPredictionAvailable",
	"Comment": "builds a batchpredictionavailable waiter by using custom parameters waiterparameters and other parameters definedin the waiters specification, and then polls until it determines whether the resource entered the desired stateor not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeBatchPredictionsRequest> batchPredictionAvailable(){\r\n    return new WaiterBuilder<DescribeBatchPredictionsRequest, DescribeBatchPredictionsResult>().withSdkFunction(new DescribeBatchPredictionsFunction(client)).withAcceptors(new BatchPredictionAvailable.IsCOMPLETEDMatcher(), new BatchPredictionAvailable.IsFAILEDMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.EnablePolicyTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRootId() != null)\r\n        sb.append(\"RootId: \").append(getRootId()).append(\",\");\r\n    if (getPolicyType() != null)\r\n        sb.append(\"PolicyType: \").append(getPolicyType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.AssociateMemberAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.StopChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CancelHandshakeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshakeId() != null)\r\n        sb.append(\"HandshakeId: \").append(getHandshakeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.SendBonusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.LifecycleEventConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getShutdown() != null)\r\n        sb.append(\"Shutdown: \").append(getShutdown());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.AcceptQualificationRequestRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationRequestId() != null)\r\n        sb.append(\"QualificationRequestId: \").append(getQualificationRequestId()).append(\",\");\r\n    if (getIntegerValue() != null)\r\n        sb.append(\"IntegerValue: \").append(getIntegerValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonmachinelearningasync using the current builder configuration.",
	"Method": "AmazonMachineLearningAsync build(AwsAsyncClientParams params){\r\n    return new AmazonMachineLearningAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.waiters.DescribeDeploymentsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeDeploymentsResult apply(DescribeDeploymentsRequest describeDeploymentsRequest){\r\n    return client.describeDeployments(describeDeploymentsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.LogGroupField.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPercent() != null)\r\n        sb.append(\"Percent: \").append(getPercent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.ListContainersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateDataSourceFromRedshiftRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId()).append(\",\");\r\n    if (getDataSourceName() != null)\r\n        sb.append(\"DataSourceName: \").append(getDataSourceName()).append(\",\");\r\n    if (getDataSpec() != null)\r\n        sb.append(\"DataSpec: \").append(getDataSpec()).append(\",\");\r\n    if (getRoleARN() != null)\r\n        sb.append(\"RoleARN: \").append(getRoleARN()).append(\",\");\r\n    if (getComputeStatistics() != null)\r\n        sb.append(\"ComputeStatistics: \").append(getComputeStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignState.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCampaignStatus() != null)\r\n        sb.append(\"CampaignStatus: \").append(getCampaignStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.HlsGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdMarkers() != null)\r\n        sb.append(\"AdMarkers: \").append(getAdMarkers()).append(\",\");\r\n    if (getBaseUrlContent() != null)\r\n        sb.append(\"BaseUrlContent: \").append(getBaseUrlContent()).append(\",\");\r\n    if (getBaseUrlManifest() != null)\r\n        sb.append(\"BaseUrlManifest: \").append(getBaseUrlManifest()).append(\",\");\r\n    if (getCaptionLanguageMappings() != null)\r\n        sb.append(\"CaptionLanguageMappings: \").append(getCaptionLanguageMappings()).append(\",\");\r\n    if (getCaptionLanguageSetting() != null)\r\n        sb.append(\"CaptionLanguageSetting: \").append(getCaptionLanguageSetting()).append(\",\");\r\n    if (getClientCache() != null)\r\n        sb.append(\"ClientCache: \").append(getClientCache()).append(\",\");\r\n    if (getCodecSpecification() != null)\r\n        sb.append(\"CodecSpecification: \").append(getCodecSpecification()).append(\",\");\r\n    if (getConstantIv() != null)\r\n        sb.append(\"ConstantIv: \").append(getConstantIv()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getDirectoryStructure() != null)\r\n        sb.append(\"DirectoryStructure: \").append(getDirectoryStructure()).append(\",\");\r\n    if (getEncryptionType() != null)\r\n        sb.append(\"EncryptionType: \").append(getEncryptionType()).append(\",\");\r\n    if (getHlsCdnSettings() != null)\r\n        sb.append(\"HlsCdnSettings: \").append(getHlsCdnSettings()).append(\",\");\r\n    if (getIndexNSegments() != null)\r\n        sb.append(\"IndexNSegments: \").append(getIndexNSegments()).append(\",\");\r\n    if (getInputLossAction() != null)\r\n        sb.append(\"InputLossAction: \").append(getInputLossAction()).append(\",\");\r\n    if (getIvInManifest() != null)\r\n        sb.append(\"IvInManifest: \").append(getIvInManifest()).append(\",\");\r\n    if (getIvSource() != null)\r\n        sb.append(\"IvSource: \").append(getIvSource()).append(\",\");\r\n    if (getKeepSegments() != null)\r\n        sb.append(\"KeepSegments: \").append(getKeepSegments()).append(\",\");\r\n    if (getKeyFormat() != null)\r\n        sb.append(\"KeyFormat: \").append(getKeyFormat()).append(\",\");\r\n    if (getKeyFormatVersions() != null)\r\n        sb.append(\"KeyFormatVersions: \").append(getKeyFormatVersions()).append(\",\");\r\n    if (getKeyProviderSettings() != null)\r\n        sb.append(\"KeyProviderSettings: \").append(getKeyProviderSettings()).append(\",\");\r\n    if (getManifestCompression() != null)\r\n        sb.append(\"ManifestCompression: \").append(getManifestCompression()).append(\",\");\r\n    if (getManifestDurationFormat() != null)\r\n        sb.append(\"ManifestDurationFormat: \").append(getManifestDurationFormat()).append(\",\");\r\n    if (getMinSegmentLength() != null)\r\n        sb.append(\"MinSegmentLength: \").append(getMinSegmentLength()).append(\",\");\r\n    if (getMode() != null)\r\n        sb.append(\"Mode: \").append(getMode()).append(\",\");\r\n    if (getOutputSelection() != null)\r\n        sb.append(\"OutputSelection: \").append(getOutputSelection()).append(\",\");\r\n    if (getProgramDateTime() != null)\r\n        sb.append(\"ProgramDateTime: \").append(getProgramDateTime()).append(\",\");\r\n    if (getProgramDateTimePeriod() != null)\r\n        sb.append(\"ProgramDateTimePeriod: \").append(getProgramDateTimePeriod()).append(\",\");\r\n    if (getRedundantManifest() != null)\r\n        sb.append(\"RedundantManifest: \").append(getRedundantManifest()).append(\",\");\r\n    if (getSegmentLength() != null)\r\n        sb.append(\"SegmentLength: \").append(getSegmentLength()).append(\",\");\r\n    if (getSegmentationMode() != null)\r\n        sb.append(\"SegmentationMode: \").append(getSegmentationMode()).append(\",\");\r\n    if (getSegmentsPerSubdirectory() != null)\r\n        sb.append(\"SegmentsPerSubdirectory: \").append(getSegmentsPerSubdirectory()).append(\",\");\r\n    if (getStreamInfResolution() != null)\r\n        sb.append(\"StreamInfResolution: \").append(getStreamInfResolution()).append(\",\");\r\n    if (getTimedMetadataId3Frame() != null)\r\n        sb.append(\"TimedMetadataId3Frame: \").append(getTimedMetadataId3Frame()).append(\",\");\r\n    if (getTimedMetadataId3Period() != null)\r\n        sb.append(\"TimedMetadataId3Period: \").append(getTimedMetadataId3Period()).append(\",\");\r\n    if (getTimestampDeltaMilliseconds() != null)\r\n        sb.append(\"TimestampDeltaMilliseconds: \").append(getTimestampDeltaMilliseconds()).append(\",\");\r\n    if (getTsFileMode() != null)\r\n        sb.append(\"TsFileMode: \").append(getTsFileMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AvailBlanking.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailBlankingImage() != null)\r\n        sb.append(\"AvailBlankingImage: \").append(getAvailBlankingImage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteAdmChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListQualificationRequestsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumResults() != null)\r\n        sb.append(\"NumResults: \").append(getNumResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getQualificationRequests() != null)\r\n        sb.append(\"QualificationRequests: \").append(getQualificationRequests());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.Transport.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxBitrate() != null)\r\n        sb.append(\"MaxBitrate: \").append(getMaxBitrate()).append(\",\");\r\n    if (getMaxLatency() != null)\r\n        sb.append(\"MaxLatency: \").append(getMaxLatency()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getSmoothingLatency() != null)\r\n        sb.append(\"SmoothingLatency: \").append(getSmoothingLatency()).append(\",\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.GetQueueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.EnvironmentVariable.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getSecure() != null)\r\n        sb.append(\"Secure: \").append(getSecure());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribeHandshakeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshakeId() != null)\r\n        sb.append(\"HandshakeId: \").append(getHandshakeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.Stack.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getServiceRoleArn() != null)\r\n        sb.append(\"ServiceRoleArn: \").append(getServiceRoleArn()).append(\",\");\r\n    if (getDefaultInstanceProfileArn() != null)\r\n        sb.append(\"DefaultInstanceProfileArn: \").append(getDefaultInstanceProfileArn()).append(\",\");\r\n    if (getDefaultOs() != null)\r\n        sb.append(\"DefaultOs: \").append(getDefaultOs()).append(\",\");\r\n    if (getHostnameTheme() != null)\r\n        sb.append(\"HostnameTheme: \").append(getHostnameTheme()).append(\",\");\r\n    if (getDefaultAvailabilityZone() != null)\r\n        sb.append(\"DefaultAvailabilityZone: \").append(getDefaultAvailabilityZone()).append(\",\");\r\n    if (getDefaultSubnetId() != null)\r\n        sb.append(\"DefaultSubnetId: \").append(getDefaultSubnetId()).append(\",\");\r\n    if (getCustomJson() != null)\r\n        sb.append(\"CustomJson: \").append(getCustomJson()).append(\",\");\r\n    if (getConfigurationManager() != null)\r\n        sb.append(\"ConfigurationManager: \").append(getConfigurationManager()).append(\",\");\r\n    if (getChefConfiguration() != null)\r\n        sb.append(\"ChefConfiguration: \").append(getChefConfiguration()).append(\",\");\r\n    if (getUseCustomCookbooks() != null)\r\n        sb.append(\"UseCustomCookbooks: \").append(getUseCustomCookbooks()).append(\",\");\r\n    if (getUseOpsworksSecurityGroups() != null)\r\n        sb.append(\"UseOpsworksSecurityGroups: \").append(getUseOpsworksSecurityGroups()).append(\",\");\r\n    if (getCustomCookbooksSource() != null)\r\n        sb.append(\"CustomCookbooksSource: \").append(getCustomCookbooksSource()).append(\",\");\r\n    if (getDefaultSshKeyName() != null)\r\n        sb.append(\"DefaultSshKeyName: \").append(getDefaultSshKeyName()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getDefaultRootDeviceType() != null)\r\n        sb.append(\"DefaultRootDeviceType: \").append(getDefaultRootDeviceType()).append(\",\");\r\n    if (getAgentVersion() != null)\r\n        sb.append(\"AgentVersion: \").append(getAgentVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.HITLayoutParameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.OutputGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArchiveGroupSettings() != null)\r\n        sb.append(\"ArchiveGroupSettings: \").append(getArchiveGroupSettings()).append(\",\");\r\n    if (getHlsGroupSettings() != null)\r\n        sb.append(\"HlsGroupSettings: \").append(getHlsGroupSettings()).append(\",\");\r\n    if (getMsSmoothGroupSettings() != null)\r\n        sb.append(\"MsSmoothGroupSettings: \").append(getMsSmoothGroupSettings()).append(\",\");\r\n    if (getRtmpGroupSettings() != null)\r\n        sb.append(\"RtmpGroupSettings: \").append(getRtmpGroupSettings()).append(\",\");\r\n    if (getUdpGroupSettings() != null)\r\n        sb.append(\"UdpGroupSettings: \").append(getUdpGroupSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBClusterSnapshotAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.SelfUserProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSshUsername() != null)\r\n        sb.append(\"SshUsername: \").append(getSshUsername()).append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.AWSMediaTailorClient.listPlaybackConfigurations",
	"Comment": "returns a list of the configurations defined in aws elemental mediatailor. you can specify a max number ofconfigurations to return at a time. the default max is 50. results are returned in pagefuls. if aws elementalmediatailor has more configurations than the specified max, it provides parameters in the response that you canuse to retrieve the next pageful.",
	"Method": "ListPlaybackConfigurationsResult listPlaybackConfigurations(ListPlaybackConfigurationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListPlaybackConfigurations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ListPresetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getPresets() != null)\r\n        sb.append(\"Presets: \").append(getPresets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeDBClusterSnapshots",
	"Comment": "returns information about db cluster snapshots. this api action supports pagination.",
	"Method": "DescribeDBClusterSnapshotsResult describeDBClusterSnapshots(DescribeDBClusterSnapshotsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBClusterSnapshots(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.DescribeContainerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainer() != null)\r\n        sb.append(\"Container: \").append(getContainer());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DvbSdtSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutputSdt() != null)\r\n        sb.append(\"OutputSdt: \").append(getOutputSdt()).append(\",\");\r\n    if (getRepInterval() != null)\r\n        sb.append(\"RepInterval: \").append(getRepInterval()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getServiceProviderName() != null)\r\n        sb.append(\"ServiceProviderName: \").append(getServiceProviderName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.RevokeFlowEntitlementRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntitlementArn() != null)\r\n        sb.append(\"EntitlementArn: \").append(getEntitlementArn()).append(\",\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteVoiceChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.DisassociateQualificationFromWorkerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId()).append(\",\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AudioCodecSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAacSettings() != null)\r\n        sb.append(\"AacSettings: \").append(getAacSettings()).append(\",\");\r\n    if (getAc3Settings() != null)\r\n        sb.append(\"Ac3Settings: \").append(getAc3Settings()).append(\",\");\r\n    if (getEac3Settings() != null)\r\n        sb.append(\"Eac3Settings: \").append(getEac3Settings()).append(\",\");\r\n    if (getMp2Settings() != null)\r\n        sb.append(\"Mp2Settings: \").append(getMp2Settings()).append(\",\");\r\n    if (getPassThroughSettings() != null)\r\n        sb.append(\"PassThroughSettings: \").append(getPassThroughSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeInputSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputSecurityGroupId() != null)\r\n        sb.append(\"InputSecurityGroupId: \").append(getInputSecurityGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.UpdateServerEngineAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValue() != null)\r\n        sb.append(\"AttributeValue: \").append(getAttributeValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.ElasticIp.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIp() != null)\r\n        sb.append(\"Ip: \").append(getIp()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DiscoveredResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationId() != null)\r\n        sb.append(\"ConfigurationId: \").append(getConfigurationId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CaptionSelector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSelectorSettings() != null)\r\n        sb.append(\"SelectorSettings: \").append(getSelectorSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DisassociateDiscoveredResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getConfigurationId() != null)\r\n        sb.append(\"ConfigurationId: \").append(getConfigurationId()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.OrganizationalUnit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.Subnet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIdentifier() != null)\r\n        sb.append(\"SubnetIdentifier: \").append(getSubnetIdentifier()).append(\",\");\r\n    if (getSubnetAvailabilityZone() != null)\r\n        sb.append(\"SubnetAvailabilityZone: \").append(getSubnetAvailabilityZone()).append(\",\");\r\n    if (getSubnetStatus() != null)\r\n        sb.append(\"SubnetStatus: \").append(getSubnetStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getDefaultAuthenticationMethod() != null)\r\n        sb.append(\"DefaultAuthenticationMethod: \").append(getDefaultAuthenticationMethod()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getHasTokenKey() != null)\r\n        sb.append(\"HasTokenKey: \").append(getHasTokenKey()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CaptionLanguageMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCaptionChannel() != null)\r\n        sb.append(\"CaptionChannel: \").append(getCaptionChannel()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLanguageDescription() != null)\r\n        sb.append(\"LanguageDescription: \").append(getLanguageDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.RotateChannelCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CreateInputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getInputSecurityGroups() != null)\r\n        sb.append(\"InputSecurityGroups: \").append(getInputSecurityGroups()).append(\",\");\r\n    if (getMediaConnectFlows() != null)\r\n        sb.append(\"MediaConnectFlows: \").append(getMediaConnectFlows()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.UpdateBrokerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getConfiguration() != null)\r\n        sb.append(\"Configuration: \").append(getConfiguration()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLogs() != null)\r\n        sb.append(\"Logs: \").append(getLogs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.PolicyTypeSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.FileSourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConvert608To708() != null)\r\n        sb.append(\"Convert608To708: \").append(getConvert608To708()).append(\",\");\r\n    if (getSourceFile() != null)\r\n        sb.append(\"SourceFile: \").append(getSourceFile()).append(\",\");\r\n    if (getTimeDelta() != null)\r\n        sb.append(\"TimeDelta: \").append(getTimeDelta());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CreateOrganizationalUnitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationalUnit() != null)\r\n        sb.append(\"OrganizationalUnit: \").append(getOrganizationalUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.AddSourceIdentifierToSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribePermissionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPermissions() != null)\r\n        sb.append(\"Permissions: \").append(getPermissions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UnpeerVpcResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.MemberAccount.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.OriginEndpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId()).append(\",\");\r\n    if (getCmafPackage() != null)\r\n        sb.append(\"CmafPackage: \").append(getCmafPackage()).append(\",\");\r\n    if (getDashPackage() != null)\r\n        sb.append(\"DashPackage: \").append(getDashPackage()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsPackage() != null)\r\n        sb.append(\"HlsPackage: \").append(getHlsPackage()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getManifestName() != null)\r\n        sb.append(\"ManifestName: \").append(getManifestName()).append(\",\");\r\n    if (getMssPackage() != null)\r\n        sb.append(\"MssPackage: \").append(getMssPackage()).append(\",\");\r\n    if (getStartoverWindowSeconds() != null)\r\n        sb.append(\"StartoverWindowSeconds: \").append(getStartoverWindowSeconds()).append(\",\");\r\n    if (getTimeDelaySeconds() != null)\r\n        sb.append(\"TimeDelaySeconds: \").append(getTimeDelaySeconds()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getWhitelist() != null)\r\n        sb.append(\"Whitelist: \").append(getWhitelist());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.OutputGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomName() != null)\r\n        sb.append(\"CustomName: \").append(getCustomName()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOutputGroupSettings() != null)\r\n        sb.append(\"OutputGroupSettings: \").append(getOutputGroupSettings()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.AssignVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.AWSOrganizationsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsorganizationsasync using the current builder configuration.",
	"Method": "AWSOrganizationsAsync build(AwsAsyncClientParams params){\r\n    return new AWSOrganizationsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AudioDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioNormalizationSettings() != null)\r\n        sb.append(\"AudioNormalizationSettings: \").append(getAudioNormalizationSettings()).append(\",\");\r\n    if (getAudioSourceName() != null)\r\n        sb.append(\"AudioSourceName: \").append(getAudioSourceName()).append(\",\");\r\n    if (getAudioType() != null)\r\n        sb.append(\"AudioType: \").append(getAudioType()).append(\",\");\r\n    if (getAudioTypeControl() != null)\r\n        sb.append(\"AudioTypeControl: \").append(getAudioTypeControl()).append(\",\");\r\n    if (getCodecSettings() != null)\r\n        sb.append(\"CodecSettings: \").append(getCodecSettings()).append(\",\");\r\n    if (getCustomLanguageCode() != null)\r\n        sb.append(\"CustomLanguageCode: \").append(getCustomLanguageCode()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLanguageCodeControl() != null)\r\n        sb.append(\"LanguageCodeControl: \").append(getLanguageCodeControl()).append(\",\");\r\n    if (getRemixSettings() != null)\r\n        sb.append(\"RemixSettings: \").append(getRemixSettings()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CreateDBInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBName() != null)\r\n        sb.append(\"DBName: \").append(getDBName()).append(\",\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getDBSecurityGroups() != null)\r\n        sb.append(\"DBSecurityGroups: \").append(getDBSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getTdeCredentialArn() != null)\r\n        sb.append(\"TdeCredentialArn: \").append(getTdeCredentialArn()).append(\",\");\r\n    if (getTdeCredentialPassword() != null)\r\n        sb.append(\"TdeCredentialPassword: \").append(getTdeCredentialPassword()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getCopyTagsToSnapshot() != null)\r\n        sb.append(\"CopyTagsToSnapshot: \").append(getCopyTagsToSnapshot()).append(\",\");\r\n    if (getMonitoringInterval() != null)\r\n        sb.append(\"MonitoringInterval: \").append(getMonitoringInterval()).append(\",\");\r\n    if (getMonitoringRoleArn() != null)\r\n        sb.append(\"MonitoringRoleArn: \").append(getMonitoringRoleArn()).append(\",\");\r\n    if (getDomainIAMRoleName() != null)\r\n        sb.append(\"DomainIAMRoleName: \").append(getDomainIAMRoleName()).append(\",\");\r\n    if (getPromotionTier() != null)\r\n        sb.append(\"PromotionTier: \").append(getPromotionTier()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getEnablePerformanceInsights() != null)\r\n        sb.append(\"EnablePerformanceInsights: \").append(getEnablePerformanceInsights()).append(\",\");\r\n    if (getPerformanceInsightsKMSKeyId() != null)\r\n        sb.append(\"PerformanceInsightsKMSKeyId: \").append(getPerformanceInsightsKMSKeyId()).append(\",\");\r\n    if (getEnableCloudwatchLogsExports() != null)\r\n        sb.append(\"EnableCloudwatchLogsExports: \").append(getEnableCloudwatchLogsExports());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DeleteDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getSkipFinalSnapshot() != null)\r\n        sb.append(\"SkipFinalSnapshot: \").append(getSkipFinalSnapshot()).append(\",\");\r\n    if (getFinalDBSnapshotIdentifier() != null)\r\n        sb.append(\"FinalDBSnapshotIdentifier: \").append(getFinalDBSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.DescribeProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId()).append(\",\");\r\n    if (getSyncFromResources() != null)\r\n        sb.append(\"SyncFromResources: \").append(getSyncFromResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.RedshiftMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRedshiftDatabase() != null)\r\n        sb.append(\"RedshiftDatabase: \").append(getRedshiftDatabase()).append(\",\");\r\n    if (getDatabaseUserName() != null)\r\n        sb.append(\"DatabaseUserName: \").append(getDatabaseUserName()).append(\",\");\r\n    if (getSelectSqlQuery() != null)\r\n        sb.append(\"SelectSqlQuery: \").append(getSelectSqlQuery());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMountPoint() != null)\r\n        sb.append(\"MountPoint: \").append(getMountPoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.MediaConnectFlowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.EngineDefaults.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.model.GetObjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getCacheControl() != null)\r\n        sb.append(\"CacheControl: \").append(getCacheControl()).append(\",\");\r\n    if (getContentRange() != null)\r\n        sb.append(\"ContentRange: \").append(getContentRange()).append(\",\");\r\n    if (getContentLength() != null)\r\n        sb.append(\"ContentLength: \").append(getContentLength()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.PredictRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getRecord() != null)\r\n        sb.append(\"Record: \").append(getRecord()).append(\",\");\r\n    if (getPredictEndpoint() != null)\r\n        sb.append(\"PredictEndpoint: \").append(getPredictEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPasswordParam() != null)\r\n        sb.append(\"PasswordParam: \").append(getPasswordParam()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListOrganizationalUnitsForParentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationalUnits() != null)\r\n        sb.append(\"OrganizationalUnits: \").append(getOrganizationalUnits()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ListJobTemplatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobTemplates() != null)\r\n        sb.append(\"JobTemplates: \").append(getJobTemplates()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.OperatingSystem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getConfigurationManagers() != null)\r\n        sb.append(\"ConfigurationManagers: \").append(getConfigurationManagers()).append(\",\");\r\n    if (getReportedName() != null)\r\n        sb.append(\"ReportedName: \").append(getReportedName()).append(\",\");\r\n    if (getReportedVersion() != null)\r\n        sb.append(\"ReportedVersion: \").append(getReportedVersion()).append(\",\");\r\n    if (getSupported() != null)\r\n        sb.append(\"Supported: \").append(getSupported());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.DeleteHITRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBCluster.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterParameterGroup() != null)\r\n        sb.append(\"DBClusterParameterGroup: \").append(getDBClusterParameterGroup()).append(\",\");\r\n    if (getDBSubnetGroup() != null)\r\n        sb.append(\"DBSubnetGroup: \").append(getDBSubnetGroup()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPercentProgress() != null)\r\n        sb.append(\"PercentProgress: \").append(getPercentProgress()).append(\",\");\r\n    if (getEarliestRestorableTime() != null)\r\n        sb.append(\"EarliestRestorableTime: \").append(getEarliestRestorableTime()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getReaderEndpoint() != null)\r\n        sb.append(\"ReaderEndpoint: \").append(getReaderEndpoint()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLatestRestorableTime() != null)\r\n        sb.append(\"LatestRestorableTime: \").append(getLatestRestorableTime()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getDBClusterOptionGroupMemberships() != null)\r\n        sb.append(\"DBClusterOptionGroupMemberships: \").append(getDBClusterOptionGroupMemberships()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getReplicationSourceIdentifier() != null)\r\n        sb.append(\"ReplicationSourceIdentifier: \").append(getReplicationSourceIdentifier()).append(\",\");\r\n    if (getReadReplicaIdentifiers() != null)\r\n        sb.append(\"ReadReplicaIdentifiers: \").append(getReadReplicaIdentifiers()).append(\",\");\r\n    if (getDBClusterMembers() != null)\r\n        sb.append(\"DBClusterMembers: \").append(getDBClusterMembers()).append(\",\");\r\n    if (getVpcSecurityGroups() != null)\r\n        sb.append(\"VpcSecurityGroups: \").append(getVpcSecurityGroups()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getDbClusterResourceId() != null)\r\n        sb.append(\"DbClusterResourceId: \").append(getDbClusterResourceId()).append(\",\");\r\n    if (getDBClusterArn() != null)\r\n        sb.append(\"DBClusterArn: \").append(getDBClusterArn()).append(\",\");\r\n    if (getAssociatedRoles() != null)\r\n        sb.append(\"AssociatedRoles: \").append(getAssociatedRoles()).append(\",\");\r\n    if (getIAMDatabaseAuthenticationEnabled() != null)\r\n        sb.append(\"IAMDatabaseAuthenticationEnabled: \").append(getIAMDatabaseAuthenticationEnabled()).append(\",\");\r\n    if (getCloneGroupId() != null)\r\n        sb.append(\"CloneGroupId: \").append(getCloneGroupId()).append(\",\");\r\n    if (getClusterCreateTime() != null)\r\n        sb.append(\"ClusterCreateTime: \").append(getClusterCreateTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UpdateDomainEntryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutLogEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextSequenceToken() != null)\r\n        sb.append(\"NextSequenceToken: \").append(getNextSequenceToken()).append(\",\");\r\n    if (getRejectedLogEventsInfo() != null)\r\n        sb.append(\"RejectedLogEventsInfo: \").append(getRejectedLogEventsInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.DeletePlaybackConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.StackSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getLayersCount() != null)\r\n        sb.append(\"LayersCount: \").append(getLayersCount()).append(\",\");\r\n    if (getAppsCount() != null)\r\n        sb.append(\"AppsCount: \").append(getAppsCount()).append(\",\");\r\n    if (getInstancesCount() != null)\r\n        sb.append(\"InstancesCount: \").append(getInstancesCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEmailChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmailChannelResponse() != null)\r\n        sb.append(\"EmailChannelResponse: \").append(getEmailChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.testMetricFilter",
	"Comment": "tests the filter pattern of a metric filter against a sample of log event messages. you can use this operation tovalidate the correctness of a metric filter pattern.",
	"Method": "TestMetricFilterResult testMetricFilter(TestMetricFilterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTestMetricFilter(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ListBrokersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipSandboxChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate()).append(\",\");\r\n    if (getDefaultAuthenticationMethod() != null)\r\n        sb.append(\"DefaultAuthenticationMethod: \").append(getDefaultAuthenticationMethod()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getPrivateKey() != null)\r\n        sb.append(\"PrivateKey: \").append(getPrivateKey()).append(\",\");\r\n    if (getTeamId() != null)\r\n        sb.append(\"TeamId: \").append(getTeamId()).append(\",\");\r\n    if (getTokenKey() != null)\r\n        sb.append(\"TokenKey: \").append(getTokenKey()).append(\",\");\r\n    if (getTokenKeyId() != null)\r\n        sb.append(\"TokenKeyId: \").append(getTokenKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.AWSMigrationHubClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmigrationhub using the current builder configuration.",
	"Method": "AWSMigrationHub build(AwsSyncClientParams params){\r\n    return new AWSMigrationHubClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.sendTestEventNotification",
	"Comment": "the sendtesteventnotification operation causes amazon mechanical turk to send a notification messageas if a hit event occurred, according to the provided notification specification. this allows you to testnotifications without setting up notifications for a real hit type and trying to trigger them using the website.when you call this operation, the service attempts to send the test notification immediately.",
	"Method": "SendTestEventNotificationResult sendTestEventNotification(SendTestEventNotificationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSendTestEventNotification(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplaceentitlement.AWSMarketplaceEntitlementClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmarketplaceentitlement using the current builder configuration.",
	"Method": "AWSMarketplaceEntitlement build(AwsSyncClientParams params){\r\n    return new AWSMarketplaceEntitlementClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsAsyncClient.describeDestinationsAsync",
	"Comment": "simplified method form for invoking the describedestinations operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDestinationsResult> describeDestinationsAsync(DescribeDestinationsRequest request,java.util.concurrent.Future<DescribeDestinationsResult> describeDestinationsAsync,DescribeDestinationsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDestinationsRequest, DescribeDestinationsResult> asyncHandler,java.util.concurrent.Future<DescribeDestinationsResult> describeDestinationsAsync,java.util.concurrent.Future<DescribeDestinationsResult> describeDestinationsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDestinationsRequest, DescribeDestinationsResult> asyncHandler){\r\n    return describeDestinationsAsync(new DescribeDestinationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.AttachPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DeleteOrganizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.model.RawRequest.httpMethod",
	"Comment": "set the http method to perform against the configured resouce.",
	"Method": "HttpMethodName httpMethod(RawRequest httpMethod,HttpMethodName httpMethod){\r\n    this.httpMethod = httpMethod;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListHandshakesForAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListWorkersWithQualificationTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getNumResults() != null)\r\n        sb.append(\"NumResults: \").append(getNumResults()).append(\",\");\r\n    if (getQualifications() != null)\r\n        sb.append(\"Qualifications: \").append(getQualifications());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.Backup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupArn() != null)\r\n        sb.append(\"BackupArn: \").append(getBackupArn()).append(\",\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId()).append(\",\");\r\n    if (getBackupType() != null)\r\n        sb.append(\"BackupType: \").append(getBackupType()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineModel() != null)\r\n        sb.append(\"EngineModel: \").append(getEngineModel()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getInstanceProfileArn() != null)\r\n        sb.append(\"InstanceProfileArn: \").append(getInstanceProfileArn()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKeyPair() != null)\r\n        sb.append(\"KeyPair: \").append(getKeyPair()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getS3DataSize() != null)\r\n        sb.append(\"S3DataSize: \").append(getS3DataSize()).append(\",\");\r\n    if (getS3DataUrl() != null)\r\n        sb.append(\"S3DataUrl: \").append(getS3DataUrl()).append(\",\");\r\n    if (getS3LogUrl() != null)\r\n        sb.append(\"S3LogUrl: \").append(getS3LogUrl()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getServiceRoleArn() != null)\r\n        sb.append(\"ServiceRoleArn: \").append(getServiceRoleArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusDescription() != null)\r\n        sb.append(\"StatusDescription: \").append(getStatusDescription()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getToolsVersion() != null)\r\n        sb.append(\"ToolsVersion: \").append(getToolsVersion()).append(\",\");\r\n    if (getUserArn() != null)\r\n        sb.append(\"UserArn: \").append(getUserArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Queue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLastUpdated() != null)\r\n        sb.append(\"LastUpdated: \").append(getLastUpdated()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPricingPlan() != null)\r\n        sb.append(\"PricingPlan: \").append(getPricingPlan()).append(\",\");\r\n    if (getProgressingJobsCount() != null)\r\n        sb.append(\"ProgressingJobsCount: \").append(getProgressingJobsCount()).append(\",\");\r\n    if (getReservationPlan() != null)\r\n        sb.append(\"ReservationPlan: \").append(getReservationPlan()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSubmittedJobsCount() != null)\r\n        sb.append(\"SubmittedJobsCount: \").append(getSubmittedJobsCount()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListChildrenResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChildren() != null)\r\n        sb.append(\"Children: \").append(getChildren()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMClient.describeServers",
	"Comment": "lists all configuration management servers that are identified with your account. only the stored results fromamazon dynamodb are returned. aws opsworks cm does not query other services.this operation is synchronous.a resourcenotfoundexception is thrown when the server does not exist. avalidationexception is raised when parameters of the request are not valid.",
	"Method": "DescribeServersResult describeServers(DescribeServersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeServers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PhoneNumberValidateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumberValidateResponse() != null)\r\n        sb.append(\"NumberValidateResponse: \").append(getNumberValidateResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointSendConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBodyOverride() != null)\r\n        sb.append(\"BodyOverride: \").append(getBodyOverride()).append(\",\");\r\n    if (getContext() != null)\r\n        sb.append(\"Context: \").append(getContext()).append(\",\");\r\n    if (getRawContent() != null)\r\n        sb.append(\"RawContent: \").append(getRawContent()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions()).append(\",\");\r\n    if (getTitleOverride() != null)\r\n        sb.append(\"TitleOverride: \").append(getTitleOverride());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputAttachment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputAttachmentName() != null)\r\n        sb.append(\"InputAttachmentName: \").append(getInputAttachmentName()).append(\",\");\r\n    if (getInputId() != null)\r\n        sb.append(\"InputId: \").append(getInputId()).append(\",\");\r\n    if (getInputSettings() != null)\r\n        sb.append(\"InputSettings: \").append(getInputSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBClusterRole.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.DeleteQualificationTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ArchiveGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getRolloverInterval() != null)\r\n        sb.append(\"RolloverInterval: \").append(getRolloverInterval());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.GlobalConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInitialAudioGain() != null)\r\n        sb.append(\"InitialAudioGain: \").append(getInitialAudioGain()).append(\",\");\r\n    if (getInputEndAction() != null)\r\n        sb.append(\"InputEndAction: \").append(getInputEndAction()).append(\",\");\r\n    if (getInputLossBehavior() != null)\r\n        sb.append(\"InputLossBehavior: \").append(getInputLossBehavior()).append(\",\");\r\n    if (getOutputTimingSource() != null)\r\n        sb.append(\"OutputTimingSource: \").append(getOutputTimingSource()).append(\",\");\r\n    if (getSupportLowFramerateInputs() != null)\r\n        sb.append(\"SupportLowFramerateInputs: \").append(getSupportLowFramerateInputs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.AWSPIAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awspiasync using the current builder configuration.",
	"Method": "AWSPIAsync build(AwsAsyncClientParams params){\r\n    return new AWSPIAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetFileUploadURLResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFileUploadURL() != null)\r\n        sb.append(\"FileUploadURL: \").append(getFileUploadURL());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutDestinationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationName() != null)\r\n        sb.append(\"DestinationName: \").append(getDestinationName()).append(\",\");\r\n    if (getTargetArn() != null)\r\n        sb.append(\"TargetArn: \").append(getTargetArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.UpdateServerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDisableAutomatedBackup() != null)\r\n        sb.append(\"DisableAutomatedBackup: \").append(getDisableAutomatedBackup()).append(\",\");\r\n    if (getBackupRetentionCount() != null)\r\n        sb.append(\"BackupRetentionCount: \").append(getBackupRetentionCount()).append(\",\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationResponse() != null)\r\n        sb.append(\"ApplicationResponse: \").append(getApplicationResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignEmailMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getFromAddress() != null)\r\n        sb.append(\"FromAddress: \").append(getFromAddress()).append(\",\");\r\n    if (getHtmlBody() != null)\r\n        sb.append(\"HtmlBody: \").append(getHtmlBody()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.rebootDBInstance",
	"Comment": "you might need to reboot your db instance, usually for maintenance reasons. for example, if you make certainmodifications, or if you change the db parameter group associated with the db instance, you must reboot theinstance for the changes to take effect.rebooting a db instance restarts the database engine service. rebooting a db instance results in a momentaryoutage, during which the db instance status is set to rebooting.",
	"Method": "DBInstance rebootDBInstance(RebootDBInstanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRebootDBInstance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportJobResponse() != null)\r\n        sb.append(\"ImportJobResponse: \").append(getImportJobResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.SendBonusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId()).append(\",\");\r\n    if (getBonusAmount() != null)\r\n        sb.append(\"BonusAmount: \").append(getBonusAmount()).append(\",\");\r\n    if (getAssignmentId() != null)\r\n        sb.append(\"AssignmentId: \").append(getAssignmentId()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getUniqueRequestToken() != null)\r\n        sb.append(\"UniqueRequestToken: \").append(getUniqueRequestToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointDemographic.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAppVersion() != null)\r\n        sb.append(\"AppVersion: \").append(getAppVersion()).append(\",\");\r\n    if (getLocale() != null)\r\n        sb.append(\"Locale: \").append(getLocale()).append(\",\");\r\n    if (getMake() != null)\r\n        sb.append(\"Make: \").append(getMake()).append(\",\");\r\n    if (getModel() != null)\r\n        sb.append(\"Model: \").append(getModel()).append(\",\");\r\n    if (getModelVersion() != null)\r\n        sb.append(\"ModelVersion: \").append(getModelVersion()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getPlatformVersion() != null)\r\n        sb.append(\"PlatformVersion: \").append(getPlatformVersion()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.MetricFilterMatchRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventNumber() != null)\r\n        sb.append(\"EventNumber: \").append(getEventNumber()).append(\",\");\r\n    if (getEventMessage() != null)\r\n        sb.append(\"EventMessage: \").append(getEventMessage()).append(\",\");\r\n    if (getExtractedValues() != null)\r\n        sb.append(\"ExtractedValues: \").append(getExtractedValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteEventStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.RDSMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatabase() != null)\r\n        sb.append(\"Database: \").append(getDatabase()).append(\",\");\r\n    if (getDatabaseUserName() != null)\r\n        sb.append(\"DatabaseUserName: \").append(getDatabaseUserName()).append(\",\");\r\n    if (getSelectSqlQuery() != null)\r\n        sb.append(\"SelectSqlQuery: \").append(getSelectSqlQuery()).append(\",\");\r\n    if (getResourceRole() != null)\r\n        sb.append(\"ResourceRole: \").append(getResourceRole()).append(\",\");\r\n    if (getServiceRole() != null)\r\n        sb.append(\"ServiceRole: \").append(getServiceRole()).append(\",\");\r\n    if (getDataPipelineId() != null)\r\n        sb.append(\"DataPipelineId: \").append(getDataPipelineId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ListDiscoveredResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.LeaveOrganizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputSourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPasswordParam() != null)\r\n        sb.append(\"PasswordParam: \").append(getPasswordParam()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.UpdateMLModelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getMLModelName() != null)\r\n        sb.append(\"MLModelName: \").append(getMLModelName()).append(\",\");\r\n    if (getScoreThreshold() != null)\r\n        sb.append(\"ScoreThreshold: \").append(getScoreThreshold());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PublicEndpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getChannelType() != null)\r\n        sb.append(\"ChannelType: \").append(getChannelType()).append(\",\");\r\n    if (getDemographic() != null)\r\n        sb.append(\"Demographic: \").append(getDemographic()).append(\",\");\r\n    if (getEffectiveDate() != null)\r\n        sb.append(\"EffectiveDate: \").append(getEffectiveDate()).append(\",\");\r\n    if (getEndpointStatus() != null)\r\n        sb.append(\"EndpointStatus: \").append(getEndpointStatus()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getMetrics() != null)\r\n        sb.append(\"Metrics: \").append(getMetrics()).append(\",\");\r\n    if (getOptOut() != null)\r\n        sb.append(\"OptOut: \").append(getOptOut()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.AWSMediaConvertClient.listJobTemplates",
	"Comment": "retrieve a json array of up to twenty of your job templates. this will return the templates themselves, not justa list of them. to retrieve the next twenty templates, use the nexttoken string returned with the array",
	"Method": "ListJobTemplatesResult listJobTemplates(ListJobTemplatesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListJobTemplates(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ReviewPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeleteUserProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.JobTemplate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getLastUpdated() != null)\r\n        sb.append(\"LastUpdated: \").append(getLastUpdated()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getQueue() != null)\r\n        sb.append(\"Queue: \").append(getQueue()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.PromoteReadReplicaDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.QueryStatistics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecordsMatched() != null)\r\n        sb.append(\"RecordsMatched: \").append(getRecordsMatched()).append(\",\");\r\n    if (getRecordsScanned() != null)\r\n        sb.append(\"RecordsScanned: \").append(getRecordsScanned()).append(\",\");\r\n    if (getBytesScanned() != null)\r\n        sb.append(\"BytesScanned: \").append(getBytesScanned());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.SpekeKeyProvider.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getSystemIds() != null)\r\n        sb.append(\"SystemIds: \").append(getSystemIds()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DeleteDBParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ResetDBClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getResetAllParameters() != null)\r\n        sb.append(\"ResetAllParameters: \").append(getResetAllParameters()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.RestoreDBClusterToPointInTimeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getRestoreType() != null)\r\n        sb.append(\"RestoreType: \").append(getRestoreType()).append(\",\");\r\n    if (getSourceDBClusterIdentifier() != null)\r\n        sb.append(\"SourceDBClusterIdentifier: \").append(getSourceDBClusterIdentifier()).append(\",\");\r\n    if (getRestoreToTime() != null)\r\n        sb.append(\"RestoreToTime: \").append(getRestoreToTime()).append(\",\");\r\n    if (getUseLatestRestorableTime() != null)\r\n        sb.append(\"UseLatestRestorableTime: \").append(getUseLatestRestorableTime()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeEventSubscriptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getEventSubscriptionsList() != null)\r\n        sb.append(\"EventSubscriptionsList: \").append(getEventSubscriptionsList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CreateQueueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueue() != null)\r\n        sb.append(\"Queue: \").append(getQueue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ArchiveOutputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerSettings() != null)\r\n        sb.append(\"ContainerSettings: \").append(getContainerSettings()).append(\",\");\r\n    if (getExtension() != null)\r\n        sb.append(\"Extension: \").append(getExtension()).append(\",\");\r\n    if (getNameModifier() != null)\r\n        sb.append(\"NameModifier: \").append(getNameModifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ADMMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getConsolidationKey() != null)\r\n        sb.append(\"ConsolidationKey: \").append(getConsolidationKey()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getExpiresAfter() != null)\r\n        sb.append(\"ExpiresAfter: \").append(getExpiresAfter()).append(\",\");\r\n    if (getIconReference() != null)\r\n        sb.append(\"IconReference: \").append(getIconReference()).append(\",\");\r\n    if (getImageIconUrl() != null)\r\n        sb.append(\"ImageIconUrl: \").append(getImageIconUrl()).append(\",\");\r\n    if (getImageUrl() != null)\r\n        sb.append(\"ImageUrl: \").append(getImageUrl()).append(\",\");\r\n    if (getMD5() != null)\r\n        sb.append(\"MD5: \").append(getMD5()).append(\",\");\r\n    if (getRawContent() != null)\r\n        sb.append(\"RawContent: \").append(getRawContent()).append(\",\");\r\n    if (getSilentPush() != null)\r\n        sb.append(\"SilentPush: \").append(getSilentPush()).append(\",\");\r\n    if (getSmallImageIconUrl() != null)\r\n        sb.append(\"SmallImageIconUrl: \").append(getSmallImageIconUrl()).append(\",\");\r\n    if (getSound() != null)\r\n        sb.append(\"Sound: \").append(getSound()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.ShutdownEventConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExecutionTimeout() != null)\r\n        sb.append(\"ExecutionTimeout: \").append(getExecutionTimeout()).append(\",\");\r\n    if (getDelayUntilElbConnectionsDrained() != null)\r\n        sb.append(\"DelayUntilElbConnectionsDrained: \").append(getDelayUntilElbConnectionsDrained());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AbstractAmazonMachineLearningAsync.describeEvaluationsAsync",
	"Comment": "simplified method form for invoking the describeevaluations operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEvaluationsResult> describeEvaluationsAsync(DescribeEvaluationsRequest request,java.util.concurrent.Future<DescribeEvaluationsResult> describeEvaluationsAsync,DescribeEvaluationsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEvaluationsRequest, DescribeEvaluationsResult> asyncHandler,java.util.concurrent.Future<DescribeEvaluationsResult> describeEvaluationsAsync,java.util.concurrent.Future<DescribeEvaluationsResult> describeEvaluationsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEvaluationsRequest, DescribeEvaluationsResult> asyncHandler){\r\n    return describeEvaluationsAsync(new DescribeEvaluationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.UpdateQueueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getReservationPlanSettings() != null)\r\n        sb.append(\"ReservationPlanSettings: \").append(getReservationPlanSettings()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.waiters.DescribeEvaluationsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeEvaluationsResult apply(DescribeEvaluationsRequest describeEvaluationsRequest){\r\n    return client.describeEvaluations(describeEvaluationsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.getAssignment",
	"Comment": "the getassignment operation retrieves the details of the specified assignment.",
	"Method": "GetAssignmentResult getAssignment(GetAssignmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetAssignment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.HlsIngest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIngestEndpoints() != null)\r\n        sb.append(\"IngestEndpoints: \").append(getIngestEndpoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateImportJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportJobResponse() != null)\r\n        sb.append(\"ImportJobResponse: \").append(getImportJobResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.CmafEncryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyRotationIntervalSeconds() != null)\r\n        sb.append(\"KeyRotationIntervalSeconds: \").append(getKeyRotationIntervalSeconds()).append(\",\");\r\n    if (getSpekeKeyProvider() != null)\r\n        sb.append(\"SpekeKeyProvider: \").append(getSpekeKeyProvider());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.RemoveFlowOutputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getOutputArn() != null)\r\n        sb.append(\"OutputArn: \").append(getOutputArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DvbTdtSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTdtInterval() != null)\r\n        sb.append(\"TdtInterval: \").append(getTdtInterval());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DeleteQueueResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.RtmpOutputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateMode() != null)\r\n        sb.append(\"CertificateMode: \").append(getCertificateMode()).append(\",\");\r\n    if (getConnectionRetryInterval() != null)\r\n        sb.append(\"ConnectionRetryInterval: \").append(getConnectionRetryInterval()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getNumRetries() != null)\r\n        sb.append(\"NumRetries: \").append(getNumRetries());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.OutputGroupDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutputDetails() != null)\r\n        sb.append(\"OutputDetails: \").append(getOutputDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.RestoreServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteGcmChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeCommandsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getCommandIds() != null)\r\n        sb.append(\"CommandIds: \").append(getCommandIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.IngestEndpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(getPassword()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.VolumeConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMountPoint() != null)\r\n        sb.append(\"MountPoint: \").append(getMountPoint()).append(\",\");\r\n    if (getRaidLevel() != null)\r\n        sb.append(\"RaidLevel: \").append(getRaidLevel()).append(\",\");\r\n    if (getNumberOfDisks() != null)\r\n        sb.append(\"NumberOfDisks: \").append(getNumberOfDisks()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.ListS3ResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberAccountId() != null)\r\n        sb.append(\"MemberAccountId: \").append(getMemberAccountId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMClient.describeNodeAssociationStatus",
	"Comment": "returns the current status of an existing association or disassociation request.a resourcenotfoundexception is thrown when no recent association or disassociation request with thespecified token is found, or when the server does not exist. a validationexception is raised whenparameters of the request are not valid.",
	"Method": "DescribeNodeAssociationStatusResult describeNodeAssociationStatus(DescribeNodeAssociationStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeNodeAssociationStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DescribeMLModelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilterVariable() != null)\r\n        sb.append(\"FilterVariable: \").append(getFilterVariable()).append(\",\");\r\n    if (getEQ() != null)\r\n        sb.append(\"EQ: \").append(getEQ()).append(\",\");\r\n    if (getGT() != null)\r\n        sb.append(\"GT: \").append(getGT()).append(\",\");\r\n    if (getLT() != null)\r\n        sb.append(\"LT: \").append(getLT()).append(\",\");\r\n    if (getGE() != null)\r\n        sb.append(\"GE: \").append(getGE()).append(\",\");\r\n    if (getLE() != null)\r\n        sb.append(\"LE: \").append(getLE()).append(\",\");\r\n    if (getNE() != null)\r\n        sb.append(\"NE: \").append(getNE()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getCredential() != null)\r\n        sb.append(\"Credential: \").append(getCredential()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.EventCategoriesMap.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.F4vSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMoovPlacement() != null)\r\n        sb.append(\"MoovPlacement: \").append(getMoovPlacement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.UpdateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getConsoleAccess() != null)\r\n        sb.append(\"ConsoleAccess: \").append(getConsoleAccess()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(getPassword()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.StopFlowRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.AWSMigrationHubClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.AssociateS3ResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedS3Resources() != null)\r\n        sb.append(\"FailedS3Resources: \").append(getFailedS3Resources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.UpdateChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getEncoderSettings() != null)\r\n        sb.append(\"EncoderSettings: \").append(getEncoderSettings()).append(\",\");\r\n    if (getInputAttachments() != null)\r\n        sb.append(\"InputAttachments: \").append(getInputAttachments()).append(\",\");\r\n    if (getInputSpecification() != null)\r\n        sb.append(\"InputSpecification: \").append(getInputSpecification()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.EncoderSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioDescriptions() != null)\r\n        sb.append(\"AudioDescriptions: \").append(getAudioDescriptions()).append(\",\");\r\n    if (getAvailBlanking() != null)\r\n        sb.append(\"AvailBlanking: \").append(getAvailBlanking()).append(\",\");\r\n    if (getAvailConfiguration() != null)\r\n        sb.append(\"AvailConfiguration: \").append(getAvailConfiguration()).append(\",\");\r\n    if (getBlackoutSlate() != null)\r\n        sb.append(\"BlackoutSlate: \").append(getBlackoutSlate()).append(\",\");\r\n    if (getCaptionDescriptions() != null)\r\n        sb.append(\"CaptionDescriptions: \").append(getCaptionDescriptions()).append(\",\");\r\n    if (getGlobalConfiguration() != null)\r\n        sb.append(\"GlobalConfiguration: \").append(getGlobalConfiguration()).append(\",\");\r\n    if (getOutputGroups() != null)\r\n        sb.append(\"OutputGroups: \").append(getOutputGroups()).append(\",\");\r\n    if (getTimecodeConfig() != null)\r\n        sb.append(\"TimecodeConfig: \").append(getTimecodeConfig()).append(\",\");\r\n    if (getVideoDescriptions() != null)\r\n        sb.append(\"VideoDescriptions: \").append(getVideoDescriptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DisassociateCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.S3DataSpec.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataLocationS3() != null)\r\n        sb.append(\"DataLocationS3: \").append(getDataLocationS3()).append(\",\");\r\n    if (getDataRearrangement() != null)\r\n        sb.append(\"DataRearrangement: \").append(getDataRearrangement()).append(\",\");\r\n    if (getDataSchema() != null)\r\n        sb.append(\"DataSchema: \").append(getDataSchema()).append(\",\");\r\n    if (getDataSchemaLocationS3() != null)\r\n        sb.append(\"DataSchemaLocationS3: \").append(getDataSchemaLocationS3());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsSandboxChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSSandboxChannelResponse() != null)\r\n        sb.append(\"APNSSandboxChannelResponse: \").append(getAPNSSandboxChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteDataSourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.describeDataSources",
	"Comment": "returns a list of datasource that match the search criteria in the request.",
	"Method": "DescribeDataSourcesResult describeDataSources(DescribeDataSourcesRequest request,DescribeDataSourcesResult describeDataSources){\r\n    return describeDataSources(new DescribeDataSourcesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.promoteReadReplicaDBCluster",
	"Comment": "promotes a read replica db cluster to a standalone db cluster.",
	"Method": "DBCluster promoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePromoteReadReplicaDBCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.createAdditionalAssignmentsForHIT",
	"Comment": "the createadditionalassignmentsforhit operation increases the maximum number of assignments of anexisting hit.to extend the maximum number of assignments, specify the number of additional assignments.hits created with fewer than 10 assignments cannot be extended to have 10 or more assignments. attempting to addassignments in a way that brings the total number of assignments for a hit from fewer than 10 assignments to 10or more assignments will result in an aws.mechanicalturk.invalidmaximumassignmentsincreaseexception.hits that were created before july 22, 2015 cannot be extended. attempting to extend hits that were createdbefore july 22, 2015 will result in an aws.mechanicalturk.hittoooldforextension exception.",
	"Method": "CreateAdditionalAssignmentsForHITResult createAdditionalAssignmentsForHIT(CreateAdditionalAssignmentsForHITRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateAdditionalAssignmentsForHIT(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AacSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getCodingMode() != null)\r\n        sb.append(\"CodingMode: \").append(getCodingMode()).append(\",\");\r\n    if (getInputType() != null)\r\n        sb.append(\"InputType: \").append(getInputType()).append(\",\");\r\n    if (getProfile() != null)\r\n        sb.append(\"Profile: \").append(getProfile()).append(\",\");\r\n    if (getRateControlMode() != null)\r\n        sb.append(\"RateControlMode: \").append(getRateControlMode()).append(\",\");\r\n    if (getRawFormat() != null)\r\n        sb.append(\"RawFormat: \").append(getRawFormat()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate()).append(\",\");\r\n    if (getSpec() != null)\r\n        sb.append(\"Spec: \").append(getSpec()).append(\",\");\r\n    if (getVbrQuality() != null)\r\n        sb.append(\"VbrQuality: \").append(getVbrQuality());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DomainMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFQDN() != null)\r\n        sb.append(\"FQDN: \").append(getFQDN()).append(\",\");\r\n    if (getIAMRoleName() != null)\r\n        sb.append(\"IAMRoleName: \").append(getIAMRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.LogStream.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogStreamName() != null)\r\n        sb.append(\"LogStreamName: \").append(getLogStreamName()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getFirstEventTimestamp() != null)\r\n        sb.append(\"FirstEventTimestamp: \").append(getFirstEventTimestamp()).append(\",\");\r\n    if (getLastEventTimestamp() != null)\r\n        sb.append(\"LastEventTimestamp: \").append(getLastEventTimestamp()).append(\",\");\r\n    if (getLastIngestionTime() != null)\r\n        sb.append(\"LastIngestionTime: \").append(getLastIngestionTime()).append(\",\");\r\n    if (getUploadSequenceToken() != null)\r\n        sb.append(\"UploadSequenceToken: \").append(getUploadSequenceToken()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getStoredBytes() != null)\r\n        sb.append(\"StoredBytes: \").append(getStoredBytes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.Range.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrom() != null)\r\n        sb.append(\"From: \").append(getFrom()).append(\",\");\r\n    if (getTo() != null)\r\n        sb.append(\"To: \").append(getTo()).append(\",\");\r\n    if (getStep() != null)\r\n        sb.append(\"Step: \").append(getStep());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GPSPointDimension.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCoordinates() != null)\r\n        sb.append(\"Coordinates: \").append(getCoordinates()).append(\",\");\r\n    if (getRangeInKilometers() != null)\r\n        sb.append(\"RangeInKilometers: \").append(getRangeInKilometers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListHITsForQualificationTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.AWSMediaStoreClient.deleteContainerPolicy",
	"Comment": "deletes the access policy that is associated with the specified container.",
	"Method": "DeleteContainerPolicyResult deleteContainerPolicy(DeleteContainerPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteContainerPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.waiters.DescribeAppsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeAppsResult apply(DescribeAppsRequest describeAppsRequest){\r\n    return client.describeApps(describeAppsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApplicationSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateQualificationTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationType() != null)\r\n        sb.append(\"QualificationType: \").append(getQualificationType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.AWSOrganizationsClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.protect.client.SdkSyncClientBuilder.setConnectionConfiguration",
	"Comment": "sets various optional options related to the http connection pool and connections.",
	"Method": "void setConnectionConfiguration(ConnectionConfiguration connectionConfiguration){\r\n    apiGatewayClientConfiguration.setConnectionConfiguration(connectionConfiguration);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.waiters.AWSOpsWorksWaiters.instanceRegistered",
	"Comment": "builds a instanceregistered waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeInstancesRequest> instanceRegistered(){\r\n    return new WaiterBuilder<DescribeInstancesRequest, DescribeInstancesResult>().withSdkFunction(new DescribeInstancesFunction(client)).withAcceptors(new InstanceRegistered.IsRegisteredMatcher(), new InstanceRegistered.IsSetup_failedMatcher(), new InstanceRegistered.IsShutting_downMatcher(), new InstanceRegistered.IsStoppedMatcher(), new InstanceRegistered.IsStoppingMatcher(), new InstanceRegistered.IsTerminatingMatcher(), new InstanceRegistered.IsTerminatedMatcher(), new InstanceRegistered.IsStop_failedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.PerformanceMetrics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProperties() != null)\r\n        sb.append(\"Properties: \").append(getProperties());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBSubnetGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBSubnetGroups() != null)\r\n        sb.append(\"DBSubnetGroups: \").append(getDBSubnetGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetExportJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getExportJobsResponse() != null)\r\n        sb.append(\"ExportJobsResponse: \").append(getExportJobsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.TeletextDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageNumber() != null)\r\n        sb.append(\"PageNumber: \").append(getPageNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.ReportedOs.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFamily() != null)\r\n        sb.append(\"Family: \").append(getFamily()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getCredential() != null)\r\n        sb.append(\"Credential: \").append(getCredential()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.UpdateBatchPredictionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBatchPredictionId() != null)\r\n        sb.append(\"BatchPredictionId: \").append(getBatchPredictionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CreateEventSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getSourceIds() != null)\r\n        sb.append(\"SourceIds: \").append(getSourceIds()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ListProgressUpdateStreamsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStreamSummaryList() != null)\r\n        sb.append(\"ProgressUpdateStreamSummaryList: \").append(getProgressUpdateStreamSummaryList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.UpdateQualificationTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getQualificationTypeStatus() != null)\r\n        sb.append(\"QualificationTypeStatus: \").append(getQualificationTypeStatus()).append(\",\");\r\n    if (getTest() != null)\r\n        sb.append(\"Test: \").append(getTest()).append(\",\");\r\n    if (getAnswerKey() != null)\r\n        sb.append(\"AnswerKey: \").append(getAnswerKey()).append(\",\");\r\n    if (getTestDurationInSeconds() != null)\r\n        sb.append(\"TestDurationInSeconds: \").append(getTestDurationInSeconds()).append(\",\");\r\n    if (getRetryDelayInSeconds() != null)\r\n        sb.append(\"RetryDelayInSeconds: \").append(getRetryDelayInSeconds()).append(\",\");\r\n    if (getAutoGranted() != null)\r\n        sb.append(\"AutoGranted: \").append(getAutoGranted()).append(\",\");\r\n    if (getAutoGrantedValue() != null)\r\n        sb.append(\"AutoGrantedValue: \").append(getAutoGrantedValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.BlackoutSlate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlackoutSlateImage() != null)\r\n        sb.append(\"BlackoutSlateImage: \").append(getBlackoutSlateImage()).append(\",\");\r\n    if (getNetworkEndBlackout() != null)\r\n        sb.append(\"NetworkEndBlackout: \").append(getNetworkEndBlackout()).append(\",\");\r\n    if (getNetworkEndBlackoutImage() != null)\r\n        sb.append(\"NetworkEndBlackoutImage: \").append(getNetworkEndBlackoutImage()).append(\",\");\r\n    if (getNetworkId() != null)\r\n        sb.append(\"NetworkId: \").append(getNetworkId()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DeleteServerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBClusters() != null)\r\n        sb.append(\"DBClusters: \").append(getDBClusters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetEventStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetQualificationTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationType() != null)\r\n        sb.append(\"QualificationType: \").append(getQualificationType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.VideoDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHeightInPx() != null)\r\n        sb.append(\"HeightInPx: \").append(getHeightInPx()).append(\",\");\r\n    if (getWidthInPx() != null)\r\n        sb.append(\"WidthInPx: \").append(getWidthInPx());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.FailoverDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getTargetDBInstanceIdentifier() != null)\r\n        sb.append(\"TargetDBInstanceIdentifier: \").append(getTargetDBInstanceIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteBaiduChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.AddFlowOutputsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getOutputs() != null)\r\n        sb.append(\"Outputs: \").append(getOutputs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.ExportBundleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDownloadUrl() != null)\r\n        sb.append(\"DownloadUrl: \").append(getDownloadUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.disassociateQualificationFromWorker",
	"Comment": "the disassociatequalificationfromworker revokes a previously granted qualification from a user.you can provide a text message explaining why the qualification was revoked. the user who had the qualificationcan see this message.",
	"Method": "DisassociateQualificationFromWorkerResult disassociateQualificationFromWorker(DisassociateQualificationFromWorkerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateQualificationFromWorker(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListHITsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DisassociateNodeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodeAssociationStatusToken() != null)\r\n        sb.append(\"NodeAssociationStatusToken: \").append(getNodeAssociationStatusToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.InviteAccountToOrganizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTarget() != null)\r\n        sb.append(\"Target: \").append(getTarget()).append(\",\");\r\n    if (getNotes() != null)\r\n        sb.append(\"Notes: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.waiters.AWSOpsWorksCMWaiters.nodeAssociated",
	"Comment": "builds a nodeassociated waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeNodeAssociationStatusRequest> nodeAssociated(){\r\n    return new WaiterBuilder<DescribeNodeAssociationStatusRequest, DescribeNodeAssociationStatusResult>().withSdkFunction(new DescribeNodeAssociationStatusFunction(client)).withAcceptors(new NodeAssociated.IsSUCCESSMatcher(), new NodeAssociated.IsFAILEDMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(15), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.AWSMediaStoreAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmediastoreasync using the current builder configuration.",
	"Method": "AWSMediaStoreAsync build(AwsAsyncClientParams params){\r\n    return new AWSMediaStoreAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.SetLoadBasedAutoScalingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DescribeServersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.Organization.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getFeatureSet() != null)\r\n        sb.append(\"FeatureSet: \").append(getFeatureSet()).append(\",\");\r\n    if (getMasterAccountArn() != null)\r\n        sb.append(\"MasterAccountArn: \").append(getMasterAccountArn()).append(\",\");\r\n    if (getMasterAccountId() != null)\r\n        sb.append(\"MasterAccountId: \").append(getMasterAccountId()).append(\",\");\r\n    if (getMasterAccountEmail() != null)\r\n        sb.append(\"MasterAccountEmail: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getAvailablePolicyTypes() != null)\r\n        sb.append(\"AvailablePolicyTypes: \").append(getAvailablePolicyTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.SslConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate()).append(\",\");\r\n    if (getPrivateKey() != null)\r\n        sb.append(\"PrivateKey: \").append(getPrivateKey()).append(\",\");\r\n    if (getChain() != null)\r\n        sb.append(\"Chain: \").append(getChain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListHITsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getNumResults() != null)\r\n        sb.append(\"NumResults: \").append(getNumResults()).append(\",\");\r\n    if (getHITs() != null)\r\n        sb.append(\"HITs: \").append(getHITs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.MsSmoothOutputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNameModifier() != null)\r\n        sb.append(\"NameModifier: \").append(getNameModifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListParentsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParents() != null)\r\n        sb.append(\"Parents: \").append(getParents()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ResourcePolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.Command.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommandId() != null)\r\n        sb.append(\"CommandId: \").append(getCommandId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getAcknowledgedAt() != null)\r\n        sb.append(\"AcknowledgedAt: \").append(getAcknowledgedAt()).append(\",\");\r\n    if (getCompletedAt() != null)\r\n        sb.append(\"CompletedAt: \").append(getCompletedAt()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getExitCode() != null)\r\n        sb.append(\"ExitCode: \").append(getExitCode()).append(\",\");\r\n    if (getLogUrl() != null)\r\n        sb.append(\"LogUrl: \").append(getLogUrl()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AudioDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioNormalizationSettings() != null)\r\n        sb.append(\"AudioNormalizationSettings: \").append(getAudioNormalizationSettings()).append(\",\");\r\n    if (getAudioSelectorName() != null)\r\n        sb.append(\"AudioSelectorName: \").append(getAudioSelectorName()).append(\",\");\r\n    if (getAudioType() != null)\r\n        sb.append(\"AudioType: \").append(getAudioType()).append(\",\");\r\n    if (getAudioTypeControl() != null)\r\n        sb.append(\"AudioTypeControl: \").append(getAudioTypeControl()).append(\",\");\r\n    if (getCodecSettings() != null)\r\n        sb.append(\"CodecSettings: \").append(getCodecSettings()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLanguageCodeControl() != null)\r\n        sb.append(\"LanguageCodeControl: \").append(getLanguageCodeControl()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRemixSettings() != null)\r\n        sb.append(\"RemixSettings: \").append(getRemixSettings()).append(\",\");\r\n    if (getStreamName() != null)\r\n        sb.append(\"StreamName: \").append(getStreamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.getQueryResults",
	"Comment": "returns the results from the specified query. if the query is in progress, partial results of that currentexecution are returned. only the fields requested in the query are returned.getqueryresults does not start a query execution. to run a query, use .",
	"Method": "GetQueryResultsResult getQueryResults(GetQueryResultsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetQueryResults(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.NoiseReducer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getFilterSettings() != null)\r\n        sb.append(\"FilterSettings: \").append(getFilterSettings()).append(\",\");\r\n    if (getSpatialFilterSettings() != null)\r\n        sb.append(\"SpatialFilterSettings: \").append(getSpatialFilterSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.NoiseReducerSpatialFilterSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPostFilterSharpenStrength() != null)\r\n        sb.append(\"PostFilterSharpenStrength: \").append(getPostFilterSharpenStrength()).append(\",\");\r\n    if (getSpeed() != null)\r\n        sb.append(\"Speed: \").append(getSpeed()).append(\",\");\r\n    if (getStrength() != null)\r\n        sb.append(\"Strength: \").append(getStrength());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplaceentitlement.model.GetEntitlementsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntitlements() != null)\r\n        sb.append(\"Entitlements: \").append(getEntitlements()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateWorkerBlockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.DimensionGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAdmChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetVoiceChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVoiceChannelResponse() != null)\r\n        sb.append(\"VoiceChannelResponse: \").append(getVoiceChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DescribeBackupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackupId() != null)\r\n        sb.append(\"BackupId: \").append(getBackupId()).append(\",\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutRetentionPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.AutoScalingThresholds.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getThresholdsWaitTime() != null)\r\n        sb.append(\"ThresholdsWaitTime: \").append(getThresholdsWaitTime()).append(\",\");\r\n    if (getIgnoreMetricsTime() != null)\r\n        sb.append(\"IgnoreMetricsTime: \").append(getIgnoreMetricsTime()).append(\",\");\r\n    if (getCpuThreshold() != null)\r\n        sb.append(\"CpuThreshold: \").append(getCpuThreshold()).append(\",\");\r\n    if (getMemoryThreshold() != null)\r\n        sb.append(\"MemoryThreshold: \").append(getMemoryThreshold()).append(\",\");\r\n    if (getLoadThreshold() != null)\r\n        sb.append(\"LoadThreshold: \").append(getLoadThreshold()).append(\",\");\r\n    if (getAlarms() != null)\r\n        sb.append(\"Alarms: \").append(getAlarms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateDeploymentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getAppId() != null)\r\n        sb.append(\"AppId: \").append(getAppId()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds()).append(\",\");\r\n    if (getLayerIds() != null)\r\n        sb.append(\"LayerIds: \").append(getLayerIds()).append(\",\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getCustomJson() != null)\r\n        sb.append(\"CustomJson: \").append(getCustomJson());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.ListTagsLogGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutDestinationPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonmturk using the current builder configuration.",
	"Method": "AmazonMTurk build(AwsSyncClientParams params){\r\n    return new AmazonMTurkClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribeCreateAccountStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreateAccountRequestId() != null)\r\n        sb.append(\"CreateAccountRequestId: \").append(getCreateAccountRequestId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.RemoveTagsFromResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.waiters.AmazonMachineLearningWaiters.mLModelAvailable",
	"Comment": "builds a mlmodelavailable waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeMLModelsRequest> mLModelAvailable(){\r\n    return new WaiterBuilder<DescribeMLModelsRequest, DescribeMLModelsResult>().withSdkFunction(new DescribeMLModelsFunction(client)).withAcceptors(new MLModelAvailable.IsCOMPLETEDMatcher(), new MLModelAvailable.IsFAILEDMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AacSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioDescriptionBroadcasterMix() != null)\r\n        sb.append(\"AudioDescriptionBroadcasterMix: \").append(getAudioDescriptionBroadcasterMix()).append(\",\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getCodecProfile() != null)\r\n        sb.append(\"CodecProfile: \").append(getCodecProfile()).append(\",\");\r\n    if (getCodingMode() != null)\r\n        sb.append(\"CodingMode: \").append(getCodingMode()).append(\",\");\r\n    if (getRateControlMode() != null)\r\n        sb.append(\"RateControlMode: \").append(getRateControlMode()).append(\",\");\r\n    if (getRawFormat() != null)\r\n        sb.append(\"RawFormat: \").append(getRawFormat()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate()).append(\",\");\r\n    if (getSpecification() != null)\r\n        sb.append(\"Specification: \").append(getSpecification()).append(\",\");\r\n    if (getVbrQuality() != null)\r\n        sb.append(\"VbrQuality: \").append(getVbrQuality());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CreatePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeEngineDefaultClusterParameters",
	"Comment": "returns the default engine and system parameter information for the cluster database engine.",
	"Method": "EngineDefaults describeEngineDefaultClusterParameters(DescribeEngineDefaultClusterParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEngineDefaultClusterParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.ListS3ResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Resources() != null)\r\n        sb.append(\"S3Resources: \").append(getS3Resources()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.stopQuery",
	"Comment": "stops a cloudwatch logs insights query that is in progress. if the query has already ended, the operation returnsan error indicating that the specified query is not running.",
	"Method": "StopQueryResult stopQuery(StopQueryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStopQuery(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.HlsMediaStoreSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConnectionRetryInterval() != null)\r\n        sb.append(\"ConnectionRetryInterval: \").append(getConnectionRetryInterval()).append(\",\");\r\n    if (getFilecacheDuration() != null)\r\n        sb.append(\"FilecacheDuration: \").append(getFilecacheDuration()).append(\",\");\r\n    if (getMediaStoreStorageClass() != null)\r\n        sb.append(\"MediaStoreStorageClass: \").append(getMediaStoreStorageClass()).append(\",\");\r\n    if (getNumRetries() != null)\r\n        sb.append(\"NumRetries: \").append(getNumRetries()).append(\",\");\r\n    if (getRestartDelay() != null)\r\n        sb.append(\"RestartDelay: \").append(getRestartDelay());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIsoCountryCode() != null)\r\n        sb.append(\"IsoCountryCode: \").append(getIsoCountryCode()).append(\",\");\r\n    if (getPhoneNumber() != null)\r\n        sb.append(\"PhoneNumber: \").append(getPhoneNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ListJobTemplatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getListBy() != null)\r\n        sb.append(\"ListBy: \").append(getListBy()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOrder() != null)\r\n        sb.append(\"Order: \").append(getOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ValidStorageOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getStorageSize() != null)\r\n        sb.append(\"StorageSize: \").append(getStorageSize()).append(\",\");\r\n    if (getProvisionedIops() != null)\r\n        sb.append(\"ProvisionedIops: \").append(getProvisionedIops()).append(\",\");\r\n    if (getIopsToStorageRatio() != null)\r\n        sb.append(\"IopsToStorageRatio: \").append(getIopsToStorageRatio());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.StreamSelection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxVideoBitsPerSecond() != null)\r\n        sb.append(\"MaxVideoBitsPerSecond: \").append(getMaxVideoBitsPerSecond()).append(\",\");\r\n    if (getMinVideoBitsPerSecond() != null)\r\n        sb.append(\"MinVideoBitsPerSecond: \").append(getMinVideoBitsPerSecond()).append(\",\");\r\n    if (getStreamOrder() != null)\r\n        sb.append(\"StreamOrder: \").append(getStreamOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeStackSummaryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateDataSourceFromRDSResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeMyUserProfileResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserProfile() != null)\r\n        sb.append(\"UserProfile: \").append(getUserProfile());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.AWSMediaPackageClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.LogsSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudit() != null)\r\n        sb.append(\"Audit: \").append(getAudit()).append(\",\");\r\n    if (getAuditLogGroup() != null)\r\n        sb.append(\"AuditLogGroup: \").append(getAuditLogGroup()).append(\",\");\r\n    if (getGeneral() != null)\r\n        sb.append(\"General: \").append(getGeneral()).append(\",\");\r\n    if (getGeneralLogGroup() != null)\r\n        sb.append(\"GeneralLogGroup: \").append(getGeneralLogGroup()).append(\",\");\r\n    if (getPending() != null)\r\n        sb.append(\"Pending: \").append(getPending());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.AttachPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteSubscriptionFilterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RegisterElasticIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ListMigrationTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CreateDBClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CreateOrganizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganization() != null)\r\n        sb.append(\"Organization: \").append(getOrganization());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ModifyDBClusterSnapshotAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getValuesToAdd() != null)\r\n        sb.append(\"ValuesToAdd: \").append(getValuesToAdd()).append(\",\");\r\n    if (getValuesToRemove() != null)\r\n        sb.append(\"ValuesToRemove: \").append(getValuesToRemove());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCampaignId() != null)\r\n        sb.append(\"CampaignId: \").append(getCampaignId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.Entitlement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getEntitlementArn() != null)\r\n        sb.append(\"EntitlementArn: \").append(getEntitlementArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSubscribers() != null)\r\n        sb.append(\"Subscribers: \").append(getSubscribers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ReservationResourceSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodec() != null)\r\n        sb.append(\"Codec: \").append(getCodec()).append(\",\");\r\n    if (getMaximumBitrate() != null)\r\n        sb.append(\"MaximumBitrate: \").append(getMaximumBitrate()).append(\",\");\r\n    if (getMaximumFramerate() != null)\r\n        sb.append(\"MaximumFramerate: \").append(getMaximumFramerate()).append(\",\");\r\n    if (getResolution() != null)\r\n        sb.append(\"Resolution: \").append(getResolution()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getSpecialFeature() != null)\r\n        sb.append(\"SpecialFeature: \").append(getSpecialFeature()).append(\",\");\r\n    if (getVideoQuality() != null)\r\n        sb.append(\"VideoQuality: \").append(getVideoQuality());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.NotifyWorkersFailureStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotifyWorkersFailureCode() != null)\r\n        sb.append(\"NotifyWorkersFailureCode: \").append(getNotifyWorkersFailureCode()).append(\",\");\r\n    if (getNotifyWorkersFailureMessage() != null)\r\n        sb.append(\"NotifyWorkersFailureMessage: \").append(getNotifyWorkersFailureMessage()).append(\",\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.VideoCodecSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodec() != null)\r\n        sb.append(\"Codec: \").append(getCodec()).append(\",\");\r\n    if (getFrameCaptureSettings() != null)\r\n        sb.append(\"FrameCaptureSettings: \").append(getFrameCaptureSettings()).append(\",\");\r\n    if (getH264Settings() != null)\r\n        sb.append(\"H264Settings: \").append(getH264Settings()).append(\",\");\r\n    if (getH265Settings() != null)\r\n        sb.append(\"H265Settings: \").append(getH265Settings()).append(\",\");\r\n    if (getMpeg2Settings() != null)\r\n        sb.append(\"Mpeg2Settings: \").append(getMpeg2Settings()).append(\",\");\r\n    if (getProresSettings() != null)\r\n        sb.append(\"ProresSettings: \").append(getProresSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CloudWatchLogsLogStream.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getDatetimeFormat() != null)\r\n        sb.append(\"DatetimeFormat: \").append(getDatetimeFormat()).append(\",\");\r\n    if (getTimeZone() != null)\r\n        sb.append(\"TimeZone: \").append(getTimeZone()).append(\",\");\r\n    if (getFile() != null)\r\n        sb.append(\"File: \").append(getFile()).append(\",\");\r\n    if (getFileFingerprintLines() != null)\r\n        sb.append(\"FileFingerprintLines: \").append(getFileFingerprintLines()).append(\",\");\r\n    if (getMultiLineStartPattern() != null)\r\n        sb.append(\"MultiLineStartPattern: \").append(getMultiLineStartPattern()).append(\",\");\r\n    if (getInitialPosition() != null)\r\n        sb.append(\"InitialPosition: \").append(getInitialPosition()).append(\",\");\r\n    if (getEncoding() != null)\r\n        sb.append(\"Encoding: \").append(getEncoding()).append(\",\");\r\n    if (getBufferDuration() != null)\r\n        sb.append(\"BufferDuration: \").append(getBufferDuration()).append(\",\");\r\n    if (getBatchCount() != null)\r\n        sb.append(\"BatchCount: \").append(getBatchCount()).append(\",\");\r\n    if (getBatchSize() != null)\r\n        sb.append(\"BatchSize: \").append(getBatchSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.model.RegisterUsageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProductCode() != null)\r\n        sb.append(\"ProductCode: \").append(getProductCode()).append(\",\");\r\n    if (getPublicKeyVersion() != null)\r\n        sb.append(\"PublicKeyVersion: \").append(getPublicKeyVersion()).append(\",\");\r\n    if (getNonce() != null)\r\n        sb.append(\"Nonce: \").append(getNonce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteUserEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getUserId() != null)\r\n        sb.append(\"UserId: \").append(getUserId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.CreateProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getContents() != null)\r\n        sb.append(\"Contents: \").append(getContents()).append(\",\");\r\n    if (getSnapshotId() != null)\r\n        sb.append(\"SnapshotId: \").append(getSnapshotId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.MetricFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilterName() != null)\r\n        sb.append(\"FilterName: \").append(getFilterName()).append(\",\");\r\n    if (getFilterPattern() != null)\r\n        sb.append(\"FilterPattern: \").append(getFilterPattern()).append(\",\");\r\n    if (getMetricTransformations() != null)\r\n        sb.append(\"MetricTransformations: \").append(getMetricTransformations()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.AWSMarketplaceMeteringAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.RemoveRoleFromDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.BrokerSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerArn() != null)\r\n        sb.append(\"BrokerArn: \").append(getBrokerArn()).append(\",\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getBrokerName() != null)\r\n        sb.append(\"BrokerName: \").append(getBrokerName()).append(\",\");\r\n    if (getBrokerState() != null)\r\n        sb.append(\"BrokerState: \").append(getBrokerState()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getDeploymentMode() != null)\r\n        sb.append(\"DeploymentMode: \").append(getDeploymentMode()).append(\",\");\r\n    if (getHostInstanceType() != null)\r\n        sb.append(\"HostInstanceType: \").append(getHostInstanceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.Encryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithm() != null)\r\n        sb.append(\"Algorithm: \").append(getAlgorithm()).append(\",\");\r\n    if (getKeyType() != null)\r\n        sb.append(\"KeyType: \").append(getKeyType()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getSecretArn() != null)\r\n        sb.append(\"SecretArn: \").append(getSecretArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationsResponse() != null)\r\n        sb.append(\"ApplicationsResponse: \").append(getApplicationsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.PassThroughSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.AWSOpsWorksClient.grantAccess",
	"Comment": "this action can be used only with windows stacks.grants rdp access to a windows instance for a specified time period.",
	"Method": "GrantAccessResult grantAccess(GrantAccessRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGrantAccess(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListQualificationTypesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQuery() != null)\r\n        sb.append(\"Query: \").append(getQuery()).append(\",\");\r\n    if (getMustBeRequestable() != null)\r\n        sb.append(\"MustBeRequestable: \").append(getMustBeRequestable()).append(\",\");\r\n    if (getMustBeOwnedByCaller() != null)\r\n        sb.append(\"MustBeOwnedByCaller: \").append(getMustBeOwnedByCaller()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointBatchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.waiters.AmazonMachineLearningWaiters.evaluationAvailable",
	"Comment": "builds a evaluationavailable waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeEvaluationsRequest> evaluationAvailable(){\r\n    return new WaiterBuilder<DescribeEvaluationsRequest, DescribeEvaluationsResult>().withSdkFunction(new DescribeEvaluationsFunction(client)).withAcceptors(new EvaluationAvailable.IsCOMPLETEDMatcher(), new EvaluationAvailable.IsFAILEDMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ModifyDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getNewDBClusterIdentifier() != null)\r\n        sb.append(\"NewDBClusterIdentifier: \").append(getNewDBClusterIdentifier()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DescribeNodeAssociationStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodeAssociationStatus() != null)\r\n        sb.append(\"NodeAssociationStatus: \").append(getNodeAssociationStatus()).append(\",\");\r\n    if (getEngineAttributes() != null)\r\n        sb.append(\"EngineAttributes: \").append(getEngineAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.GetEvaluationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationId() != null)\r\n        sb.append(\"EvaluationId: \").append(getEvaluationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.DeleteWorkerBlockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RegisterInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.model.BatchMeterUsageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResults() != null)\r\n        sb.append(\"Results: \").append(getResults()).append(\",\");\r\n    if (getUnprocessedRecords() != null)\r\n        sb.append(\"UnprocessedRecords: \").append(getUnprocessedRecords());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.TestMetricFilterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMatches() != null)\r\n        sb.append(\"Matches: \").append(getMatches());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.DeleteChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeElasticIpsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticIps() != null)\r\n        sb.append(\"ElasticIps: \").append(getElasticIps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.HlsEncryptionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConstantInitializationVector() != null)\r\n        sb.append(\"ConstantInitializationVector: \").append(getConstantInitializationVector()).append(\",\");\r\n    if (getEncryptionMethod() != null)\r\n        sb.append(\"EncryptionMethod: \").append(getEncryptionMethod()).append(\",\");\r\n    if (getInitializationVectorInManifest() != null)\r\n        sb.append(\"InitializationVectorInManifest: \").append(getInitializationVectorInManifest()).append(\",\");\r\n    if (getSpekeKeyProvider() != null)\r\n        sb.append(\"SpekeKeyProvider: \").append(getSpekeKeyProvider()).append(\",\");\r\n    if (getStaticKeyProvider() != null)\r\n        sb.append(\"StaticKeyProvider: \").append(getStaticKeyProvider()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignLimits.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDaily() != null)\r\n        sb.append(\"Daily: \").append(getDaily()).append(\",\");\r\n    if (getMaximumDuration() != null)\r\n        sb.append(\"MaximumDuration: \").append(getMaximumDuration()).append(\",\");\r\n    if (getMessagesPerSecond() != null)\r\n        sb.append(\"MessagesPerSecond: \").append(getMessagesPerSecond()).append(\",\");\r\n    if (getTotal() != null)\r\n        sb.append(\"Total: \").append(getTotal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MetricDimension.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awslogsasync using the current builder configuration.",
	"Method": "AWSLogsAsync build(AwsAsyncClientParams params){\r\n    return new AWSLogsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DvbTdtSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepInterval() != null)\r\n        sb.append(\"RepInterval: \").append(getRepInterval());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.CreateOriginEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId()).append(\",\");\r\n    if (getCmafPackage() != null)\r\n        sb.append(\"CmafPackage: \").append(getCmafPackage()).append(\",\");\r\n    if (getDashPackage() != null)\r\n        sb.append(\"DashPackage: \").append(getDashPackage()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsPackage() != null)\r\n        sb.append(\"HlsPackage: \").append(getHlsPackage()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getManifestName() != null)\r\n        sb.append(\"ManifestName: \").append(getManifestName()).append(\",\");\r\n    if (getMssPackage() != null)\r\n        sb.append(\"MssPackage: \").append(getMssPackage()).append(\",\");\r\n    if (getStartoverWindowSeconds() != null)\r\n        sb.append(\"StartoverWindowSeconds: \").append(getStartoverWindowSeconds()).append(\",\");\r\n    if (getTimeDelaySeconds() != null)\r\n        sb.append(\"TimeDelaySeconds: \").append(getTimeDelaySeconds()).append(\",\");\r\n    if (getWhitelist() != null)\r\n        sb.append(\"Whitelist: \").append(getWhitelist());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningAsyncClient.describeEvaluationsAsync",
	"Comment": "simplified method form for invoking the describeevaluations operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEvaluationsResult> describeEvaluationsAsync(DescribeEvaluationsRequest request,java.util.concurrent.Future<DescribeEvaluationsResult> describeEvaluationsAsync,DescribeEvaluationsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEvaluationsRequest, DescribeEvaluationsResult> asyncHandler,java.util.concurrent.Future<DescribeEvaluationsResult> describeEvaluationsAsync,java.util.concurrent.Future<DescribeEvaluationsResult> describeEvaluationsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEvaluationsRequest, DescribeEvaluationsResult> asyncHandler){\r\n    return describeEvaluationsAsync(new DescribeEvaluationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.AWSMediaStoreClient.createContainer",
	"Comment": "creates a storage container to hold objects. a container is similar to a bucket in the amazon s3 service.",
	"Method": "CreateContainerResult createContainer(CreateContainerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateContainer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeEventSubscriptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.BrokerInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConsoleURL() != null)\r\n        sb.append(\"ConsoleURL: \").append(getConsoleURL()).append(\",\");\r\n    if (getEndpoints() != null)\r\n        sb.append(\"Endpoints: \").append(getEndpoints()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateCampaignResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCampaignResponse() != null)\r\n        sb.append(\"CampaignResponse: \").append(getCampaignResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.KeyProviderSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticKeySettings() != null)\r\n        sb.append(\"StaticKeySettings: \").append(getStaticKeySettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.HlsCdnSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHlsAkamaiSettings() != null)\r\n        sb.append(\"HlsAkamaiSettings: \").append(getHlsAkamaiSettings()).append(\",\");\r\n    if (getHlsBasicPutSettings() != null)\r\n        sb.append(\"HlsBasicPutSettings: \").append(getHlsBasicPutSettings()).append(\",\");\r\n    if (getHlsMediaStoreSettings() != null)\r\n        sb.append(\"HlsMediaStoreSettings: \").append(getHlsMediaStoreSettings()).append(\",\");\r\n    if (getHlsWebdavSettings() != null)\r\n        sb.append(\"HlsWebdavSettings: \").append(getHlsWebdavSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CampaignSmsMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getMessageType() != null)\r\n        sb.append(\"MessageType: \").append(getMessageType()).append(\",\");\r\n    if (getSenderId() != null)\r\n        sb.append(\"SenderId: \").append(getSenderId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.AssociateCreatedArtifactResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.setProxyUsername",
	"Comment": "sets the optional proxy user name to use if connecting through a proxy.",
	"Method": "void setProxyUsername(String proxyUsername){\r\n    this.proxyUsername = proxyUsername;\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogRecordResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogRecord() != null)\r\n        sb.append(\"LogRecord: \").append(getLogRecord());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.JobTemplateSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdAvailOffset() != null)\r\n        sb.append(\"AdAvailOffset: \").append(getAdAvailOffset()).append(\",\");\r\n    if (getAvailBlanking() != null)\r\n        sb.append(\"AvailBlanking: \").append(getAvailBlanking()).append(\",\");\r\n    if (getInputs() != null)\r\n        sb.append(\"Inputs: \").append(getInputs()).append(\",\");\r\n    if (getMotionImageInserter() != null)\r\n        sb.append(\"MotionImageInserter: \").append(getMotionImageInserter()).append(\",\");\r\n    if (getNielsenConfiguration() != null)\r\n        sb.append(\"NielsenConfiguration: \").append(getNielsenConfiguration()).append(\",\");\r\n    if (getOutputGroups() != null)\r\n        sb.append(\"OutputGroups: \").append(getOutputGroups()).append(\",\");\r\n    if (getTimecodeConfig() != null)\r\n        sb.append(\"TimecodeConfig: \").append(getTimecodeConfig()).append(\",\");\r\n    if (getTimedMetadataInsertion() != null)\r\n        sb.append(\"TimedMetadataInsertion: \").append(getTimedMetadataInsertion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.TimecodeBurnin.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFontSize() != null)\r\n        sb.append(\"FontSize: \").append(getFontSize()).append(\",\");\r\n    if (getPosition() != null)\r\n        sb.append(\"Position: \").append(getPosition()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetBaiduChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBaiduChannelResponse() != null)\r\n        sb.append(\"BaiduChannelResponse: \").append(getBaiduChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ModifyDBInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getDBSecurityGroups() != null)\r\n        sb.append(\"DBSecurityGroups: \").append(getDBSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getAllowMajorVersionUpgrade() != null)\r\n        sb.append(\"AllowMajorVersionUpgrade: \").append(getAllowMajorVersionUpgrade()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getNewDBInstanceIdentifier() != null)\r\n        sb.append(\"NewDBInstanceIdentifier: \").append(getNewDBInstanceIdentifier()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getTdeCredentialArn() != null)\r\n        sb.append(\"TdeCredentialArn: \").append(getTdeCredentialArn()).append(\",\");\r\n    if (getTdeCredentialPassword() != null)\r\n        sb.append(\"TdeCredentialPassword: \").append(getTdeCredentialPassword()).append(\",\");\r\n    if (getCACertificateIdentifier() != null)\r\n        sb.append(\"CACertificateIdentifier: \").append(getCACertificateIdentifier()).append(\",\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getCopyTagsToSnapshot() != null)\r\n        sb.append(\"CopyTagsToSnapshot: \").append(getCopyTagsToSnapshot()).append(\",\");\r\n    if (getMonitoringInterval() != null)\r\n        sb.append(\"MonitoringInterval: \").append(getMonitoringInterval()).append(\",\");\r\n    if (getDBPortNumber() != null)\r\n        sb.append(\"DBPortNumber: \").append(getDBPortNumber()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getMonitoringRoleArn() != null)\r\n        sb.append(\"MonitoringRoleArn: \").append(getMonitoringRoleArn()).append(\",\");\r\n    if (getDomainIAMRoleName() != null)\r\n        sb.append(\"DomainIAMRoleName: \").append(getDomainIAMRoleName()).append(\",\");\r\n    if (getPromotionTier() != null)\r\n        sb.append(\"PromotionTier: \").append(getPromotionTier()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getEnablePerformanceInsights() != null)\r\n        sb.append(\"EnablePerformanceInsights: \").append(getEnablePerformanceInsights()).append(\",\");\r\n    if (getPerformanceInsightsKMSKeyId() != null)\r\n        sb.append(\"PerformanceInsightsKMSKeyId: \").append(getPerformanceInsightsKMSKeyId()).append(\",\");\r\n    if (getCloudwatchLogsExportConfiguration() != null)\r\n        sb.append(\"CloudwatchLogsExportConfiguration: \").append(getCloudwatchLogsExportConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeleteStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.CreateConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngineType() != null)\r\n        sb.append(\"EngineType: \").append(getEngineType()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClientBuilder.build",
	"Comment": "construct a synchronous implementation of awslogs using the current builder configuration.",
	"Method": "AWSLogs build(AwsSyncClientParams params){\r\n    return new AWSLogsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.SetPermissionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn()).append(\",\");\r\n    if (getAllowSsh() != null)\r\n        sb.append(\"AllowSsh: \").append(getAllowSsh()).append(\",\");\r\n    if (getAllowSudo() != null)\r\n        sb.append(\"AllowSudo: \").append(getAllowSudo()).append(\",\");\r\n    if (getLevel() != null)\r\n        sb.append(\"Level: \").append(getLevel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.Destination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationName() != null)\r\n        sb.append(\"DestinationName: \").append(getDestinationName()).append(\",\");\r\n    if (getTargetArn() != null)\r\n        sb.append(\"TargetArn: \").append(getTargetArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getAccessPolicy() != null)\r\n        sb.append(\"AccessPolicy: \").append(getAccessPolicy()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.VideoSelector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getColorSpace() != null)\r\n        sb.append(\"ColorSpace: \").append(getColorSpace()).append(\",\");\r\n    if (getColorSpaceUsage() != null)\r\n        sb.append(\"ColorSpaceUsage: \").append(getColorSpaceUsage()).append(\",\");\r\n    if (getHdr10Metadata() != null)\r\n        sb.append(\"Hdr10Metadata: \").append(getHdr10Metadata()).append(\",\");\r\n    if (getPid() != null)\r\n        sb.append(\"Pid: \").append(getPid()).append(\",\");\r\n    if (getProgramNumber() != null)\r\n        sb.append(\"ProgramNumber: \").append(getProgramNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.RebootDBInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getForceFailover() != null)\r\n        sb.append(\"ForceFailover: \").append(getForceFailover());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CaptionDescriptionPreset.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomLanguageCode() != null)\r\n        sb.append(\"CustomLanguageCode: \").append(getCustomLanguageCode()).append(\",\");\r\n    if (getDestinationSettings() != null)\r\n        sb.append(\"DestinationSettings: \").append(getDestinationSettings()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLanguageDescription() != null)\r\n        sb.append(\"LanguageDescription: \").append(getLanguageDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetAppsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeStacksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackIds() != null)\r\n        sb.append(\"StackIds: \").append(getStackIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBClusterParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteAppResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationResponse() != null)\r\n        sb.append(\"ApplicationResponse: \").append(getApplicationResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMClient.describeAccountAttributes",
	"Comment": "describes your account attributes, and creates requests to increase limits before they are reached or exceeded.this operation is synchronous.",
	"Method": "DescribeAccountAttributesResult describeAccountAttributes(DescribeAccountAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAccountAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.SetLoadBasedAutoScalingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId()).append(\",\");\r\n    if (getEnable() != null)\r\n        sb.append(\"Enable: \").append(getEnable()).append(\",\");\r\n    if (getUpScaling() != null)\r\n        sb.append(\"UpScaling: \").append(getUpScaling()).append(\",\");\r\n    if (getDownScaling() != null)\r\n        sb.append(\"DownScaling: \").append(getDownScaling());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.createQualificationType",
	"Comment": "the createqualificationtype operation creates a new qualification type, which is represented by aqualificationtype data structure.",
	"Method": "CreateQualificationTypeResult createQualificationType(CreateQualificationTypeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateQualificationType(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.GetCorsPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerName() != null)\r\n        sb.append(\"ContainerName: \").append(getContainerName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.M3u8Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioFramesPerPes() != null)\r\n        sb.append(\"AudioFramesPerPes: \").append(getAudioFramesPerPes()).append(\",\");\r\n    if (getAudioPids() != null)\r\n        sb.append(\"AudioPids: \").append(getAudioPids()).append(\",\");\r\n    if (getNielsenId3() != null)\r\n        sb.append(\"NielsenId3: \").append(getNielsenId3()).append(\",\");\r\n    if (getPatInterval() != null)\r\n        sb.append(\"PatInterval: \").append(getPatInterval()).append(\",\");\r\n    if (getPcrControl() != null)\r\n        sb.append(\"PcrControl: \").append(getPcrControl()).append(\",\");\r\n    if (getPcrPid() != null)\r\n        sb.append(\"PcrPid: \").append(getPcrPid()).append(\",\");\r\n    if (getPmtInterval() != null)\r\n        sb.append(\"PmtInterval: \").append(getPmtInterval()).append(\",\");\r\n    if (getPmtPid() != null)\r\n        sb.append(\"PmtPid: \").append(getPmtPid()).append(\",\");\r\n    if (getPrivateMetadataPid() != null)\r\n        sb.append(\"PrivateMetadataPid: \").append(getPrivateMetadataPid()).append(\",\");\r\n    if (getProgramNumber() != null)\r\n        sb.append(\"ProgramNumber: \").append(getProgramNumber()).append(\",\");\r\n    if (getScte35Pid() != null)\r\n        sb.append(\"Scte35Pid: \").append(getScte35Pid()).append(\",\");\r\n    if (getScte35Source() != null)\r\n        sb.append(\"Scte35Source: \").append(getScte35Source()).append(\",\");\r\n    if (getTimedMetadata() != null)\r\n        sb.append(\"TimedMetadata: \").append(getTimedMetadata()).append(\",\");\r\n    if (getTimedMetadataPid() != null)\r\n        sb.append(\"TimedMetadataPid: \").append(getTimedMetadataPid()).append(\",\");\r\n    if (getTransportStreamId() != null)\r\n        sb.append(\"TransportStreamId: \").append(getTransportStreamId()).append(\",\");\r\n    if (getVideoPid() != null)\r\n        sb.append(\"VideoPid: \").append(getVideoPid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.CreateAccountStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getAccountName() != null)\r\n        sb.append(\"AccountName: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getRequestedTimestamp() != null)\r\n        sb.append(\"RequestedTimestamp: \").append(getRequestedTimestamp()).append(\",\");\r\n    if (getCompletedTimestamp() != null)\r\n        sb.append(\"CompletedTimestamp: \").append(getCompletedTimestamp()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.proxyPassword",
	"Comment": "sets the optional proxy password to use when connecting through a proxy.",
	"Method": "ProxyConfiguration proxyPassword(String proxyPassword){\r\n    setProxyPassword(proxyPassword);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.protect.client.RequestConfigAdapter.getProgressListener",
	"Comment": "progress listeners are not yet supported for api gateway clients.",
	"Method": "ProgressListener getProgressListener(){\r\n    return ProgressListener.NOOP;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCampaignId() != null)\r\n        sb.append(\"CampaignId: \").append(getCampaignId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.AWSMediaStoreDataClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeregisterElasticIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningAsyncClient.describeMLModelsAsync",
	"Comment": "simplified method form for invoking the describemlmodels operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeMLModelsResult> describeMLModelsAsync(DescribeMLModelsRequest request,java.util.concurrent.Future<DescribeMLModelsResult> describeMLModelsAsync,DescribeMLModelsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeMLModelsRequest, DescribeMLModelsResult> asyncHandler,java.util.concurrent.Future<DescribeMLModelsResult> describeMLModelsAsync,java.util.concurrent.Future<DescribeMLModelsResult> describeMLModelsAsync,com.amazonaws.handlers.AsyncHandler<DescribeMLModelsRequest, DescribeMLModelsResult> asyncHandler){\r\n    return describeMLModelsAsync(new DescribeMLModelsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DisassociateKmsKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.SetPermissionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.StopFlowResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.UpdateHITTypeOfHITRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId()).append(\",\");\r\n    if (getHITTypeId() != null)\r\n        sb.append(\"HITTypeId: \").append(getHITTypeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateHITResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHIT() != null)\r\n        sb.append(\"HIT: \").append(getHIT());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DoubleRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrom() != null)\r\n        sb.append(\"From: \").append(getFrom()).append(\",\");\r\n    if (getTo() != null)\r\n        sb.append(\"To: \").append(getTo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.QualificationRequirement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getComparator() != null)\r\n        sb.append(\"Comparator: \").append(getComparator()).append(\",\");\r\n    if (getIntegerValues() != null)\r\n        sb.append(\"IntegerValues: \").append(getIntegerValues()).append(\",\");\r\n    if (getLocaleValues() != null)\r\n        sb.append(\"LocaleValues: \").append(getLocaleValues()).append(\",\");\r\n    if (getRequiredToPreview() != null)\r\n        sb.append(\"RequiredToPreview: \").append(getRequiredToPreview()).append(\",\");\r\n    if (getActionsGuarded() != null)\r\n        sb.append(\"ActionsGuarded: \").append(getActionsGuarded());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.AWSMediaConvertClient.describeEndpoints",
	"Comment": "send an request with an empty body to the regional api endpoint to get your account api endpoint.",
	"Method": "DescribeEndpointsResult describeEndpoints(DescribeEndpointsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEndpoints(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DescribeTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSmsChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSMSChannelResponse() != null)\r\n        sb.append(\"SMSChannelResponse: \").append(getSMSChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.Channel.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsIngest() != null)\r\n        sb.append(\"HlsIngest: \").append(getHlsIngest()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DeclineHandshakeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshakeId() != null)\r\n        sb.append(\"HandshakeId: \").append(getHandshakeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.TestMetricFilterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilterPattern() != null)\r\n        sb.append(\"FilterPattern: \").append(getFilterPattern()).append(\",\");\r\n    if (getLogEventMessages() != null)\r\n        sb.append(\"LogEventMessages: \").append(getLogEventMessages());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListBonusPaymentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId()).append(\",\");\r\n    if (getAssignmentId() != null)\r\n        sb.append(\"AssignmentId: \").append(getAssignmentId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.CreateProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetails() != null)\r\n        sb.append(\"Details: \").append(getDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ListOfferingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelConfiguration() != null)\r\n        sb.append(\"ChannelConfiguration: \").append(getChannelConfiguration()).append(\",\");\r\n    if (getCodec() != null)\r\n        sb.append(\"Codec: \").append(getCodec()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getMaximumBitrate() != null)\r\n        sb.append(\"MaximumBitrate: \").append(getMaximumBitrate()).append(\",\");\r\n    if (getMaximumFramerate() != null)\r\n        sb.append(\"MaximumFramerate: \").append(getMaximumFramerate()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getResolution() != null)\r\n        sb.append(\"Resolution: \").append(getResolution()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getSpecialFeature() != null)\r\n        sb.append(\"SpecialFeature: \").append(getSpecialFeature()).append(\",\");\r\n    if (getVideoQuality() != null)\r\n        sb.append(\"VideoQuality: \").append(getVideoQuality());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentImportJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImportJobsResponse() != null)\r\n        sb.append(\"ImportJobsResponse: \").append(getImportJobsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.GetPlaybackConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdDecisionServerUrl() != null)\r\n        sb.append(\"AdDecisionServerUrl: \").append(getAdDecisionServerUrl()).append(\",\");\r\n    if (getCdnConfiguration() != null)\r\n        sb.append(\"CdnConfiguration: \").append(getCdnConfiguration()).append(\",\");\r\n    if (getDashConfiguration() != null)\r\n        sb.append(\"DashConfiguration: \").append(getDashConfiguration()).append(\",\");\r\n    if (getHlsConfiguration() != null)\r\n        sb.append(\"HlsConfiguration: \").append(getHlsConfiguration()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPlaybackEndpointPrefix() != null)\r\n        sb.append(\"PlaybackEndpointPrefix: \").append(getPlaybackEndpointPrefix()).append(\",\");\r\n    if (getSessionInitializationEndpointPrefix() != null)\r\n        sb.append(\"SessionInitializationEndpointPrefix: \").append(getSessionInitializationEndpointPrefix()).append(\",\");\r\n    if (getSlateAdUrl() != null)\r\n        sb.append(\"SlateAdUrl: \").append(getSlateAdUrl()).append(\",\");\r\n    if (getTranscodeProfileName() != null)\r\n        sb.append(\"TranscodeProfileName: \").append(getTranscodeProfileName()).append(\",\");\r\n    if (getVideoContentSourceUrl() != null)\r\n        sb.append(\"VideoContentSourceUrl: \").append(getVideoContentSourceUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CancelJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AribDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplaceentitlement.model.Entitlement.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProductCode() != null)\r\n        sb.append(\"ProductCode: \").append(getProductCode()).append(\",\");\r\n    if (getDimension() != null)\r\n        sb.append(\"Dimension: \").append(getDimension()).append(\",\");\r\n    if (getCustomerIdentifier() != null)\r\n        sb.append(\"CustomerIdentifier: \").append(getCustomerIdentifier()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getExpirationDate() != null)\r\n        sb.append(\"ExpirationDate: \").append(getExpirationDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ResetDBClusterParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.protect.client.RequestConfigAdapter.getRequestMetricsCollector",
	"Comment": "request level metrics collector is not yet supported for api gateway clients.",
	"Method": "RequestMetricCollector getRequestMetricsCollector(){\r\n    return RequestMetricCollector.NONE;\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBInstanceStatusInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatusType() != null)\r\n        sb.append(\"StatusType: \").append(getStatusType()).append(\",\");\r\n    if (getNormal() != null)\r\n        sb.append(\"Normal: \").append(getNormal()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplaceentitlement.AWSMarketplaceEntitlementClient.getEntitlements",
	"Comment": "getentitlements retrieves entitlement values for a given product. the results can be filtered based on customeridentifier or product dimensions.",
	"Method": "GetEntitlementsResult getEntitlements(GetEntitlementsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetEntitlements(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.EventSubscription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomerAwsId() != null)\r\n        sb.append(\"CustomerAwsId: \").append(getCustomerAwsId()).append(\",\");\r\n    if (getCustSubscriptionId() != null)\r\n        sb.append(\"CustSubscriptionId: \").append(getCustSubscriptionId()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSubscriptionCreationTime() != null)\r\n        sb.append(\"SubscriptionCreationTime: \").append(getSubscriptionCreationTime()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getSourceIdsList() != null)\r\n        sb.append(\"SourceIdsList: \").append(getSourceIdsList()).append(\",\");\r\n    if (getEventCategoriesList() != null)\r\n        sb.append(\"EventCategoriesList: \").append(getEventCategoriesList()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getEventSubscriptionArn() != null)\r\n        sb.append(\"EventSubscriptionArn: \").append(getEventSubscriptionArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateEvaluationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationId() != null)\r\n        sb.append(\"EvaluationId: \").append(getEvaluationId()).append(\",\");\r\n    if (getEvaluationName() != null)\r\n        sb.append(\"EvaluationName: \").append(getEvaluationName()).append(\",\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getEvaluationDataSourceId() != null)\r\n        sb.append(\"EvaluationDataSourceId: \").append(getEvaluationDataSourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.model.DescribeObjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getContentLength() != null)\r\n        sb.append(\"ContentLength: \").append(getContentLength()).append(\",\");\r\n    if (getCacheControl() != null)\r\n        sb.append(\"CacheControl: \").append(getCacheControl()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ResourceTags.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.NielsenConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBreakoutCode() != null)\r\n        sb.append(\"BreakoutCode: \").append(getBreakoutCode()).append(\",\");\r\n    if (getDistributorId() != null)\r\n        sb.append(\"DistributorId: \").append(getDistributorId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.CancelExportTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.createDBSubnetGroup",
	"Comment": "creates a new db subnet group. db subnet groups must contain at least one subnet in at least two azs in the awsregion.",
	"Method": "DBSubnetGroup createDBSubnetGroup(CreateDBSubnetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDBSubnetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.getEvaluation",
	"Comment": "returns an evaluation that includes metadata as well as the current status of theevaluation.",
	"Method": "GetEvaluationResult getEvaluation(GetEvaluationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetEvaluation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.AWSMediaTailorAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.PurchaseOfferingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOfferingId() != null)\r\n        sb.append(\"OfferingId: \").append(getOfferingId()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.DescribeProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetails() != null)\r\n        sb.append(\"Details: \").append(getDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.deleteLogStream",
	"Comment": "deletes the specified log stream and permanently deletes all the archived log events associated with the logstream.",
	"Method": "DeleteLogStreamResult deleteLogStream(DeleteLogStreamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLogStream(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CreateChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getEncoderSettings() != null)\r\n        sb.append(\"EncoderSettings: \").append(getEncoderSettings()).append(\",\");\r\n    if (getInputAttachments() != null)\r\n        sb.append(\"InputAttachments: \").append(getInputAttachments()).append(\",\");\r\n    if (getInputSpecification() != null)\r\n        sb.append(\"InputSpecification: \").append(getInputSpecification()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getReserved() != null)\r\n        sb.append(\"Reserved: \").append(getReserved()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.Deployment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentId() != null)\r\n        sb.append(\"DeploymentId: \").append(getDeploymentId()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getAppId() != null)\r\n        sb.append(\"AppId: \").append(getAppId()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getCompletedAt() != null)\r\n        sb.append(\"CompletedAt: \").append(getCompletedAt()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getCommand() != null)\r\n        sb.append(\"Command: \").append(getCommand()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCustomJson() != null)\r\n        sb.append(\"CustomJson: \").append(getCustomJson()).append(\",\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.BurninDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlignment() != null)\r\n        sb.append(\"Alignment: \").append(getAlignment()).append(\",\");\r\n    if (getBackgroundColor() != null)\r\n        sb.append(\"BackgroundColor: \").append(getBackgroundColor()).append(\",\");\r\n    if (getBackgroundOpacity() != null)\r\n        sb.append(\"BackgroundOpacity: \").append(getBackgroundOpacity()).append(\",\");\r\n    if (getFontColor() != null)\r\n        sb.append(\"FontColor: \").append(getFontColor()).append(\",\");\r\n    if (getFontOpacity() != null)\r\n        sb.append(\"FontOpacity: \").append(getFontOpacity()).append(\",\");\r\n    if (getFontResolution() != null)\r\n        sb.append(\"FontResolution: \").append(getFontResolution()).append(\",\");\r\n    if (getFontSize() != null)\r\n        sb.append(\"FontSize: \").append(getFontSize()).append(\",\");\r\n    if (getOutlineColor() != null)\r\n        sb.append(\"OutlineColor: \").append(getOutlineColor()).append(\",\");\r\n    if (getOutlineSize() != null)\r\n        sb.append(\"OutlineSize: \").append(getOutlineSize()).append(\",\");\r\n    if (getShadowColor() != null)\r\n        sb.append(\"ShadowColor: \").append(getShadowColor()).append(\",\");\r\n    if (getShadowOpacity() != null)\r\n        sb.append(\"ShadowOpacity: \").append(getShadowOpacity()).append(\",\");\r\n    if (getShadowXOffset() != null)\r\n        sb.append(\"ShadowXOffset: \").append(getShadowXOffset()).append(\",\");\r\n    if (getShadowYOffset() != null)\r\n        sb.append(\"ShadowYOffset: \").append(getShadowYOffset()).append(\",\");\r\n    if (getTeletextSpacing() != null)\r\n        sb.append(\"TeletextSpacing: \").append(getTeletextSpacing()).append(\",\");\r\n    if (getXPosition() != null)\r\n        sb.append(\"XPosition: \").append(getXPosition()).append(\",\");\r\n    if (getYPosition() != null)\r\n        sb.append(\"YPosition: \").append(getYPosition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte20SourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConvert608To708() != null)\r\n        sb.append(\"Convert608To708: \").append(getConvert608To708()).append(\",\");\r\n    if (getSource608ChannelNumber() != null)\r\n        sb.append(\"Source608ChannelNumber: \").append(getSource608ChannelNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.StopStackRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.ClassificationType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOneTime() != null)\r\n        sb.append(\"OneTime: \").append(getOneTime()).append(\",\");\r\n    if (getContinuous() != null)\r\n        sb.append(\"Continuous: \").append(getContinuous());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateMLModelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId()).append(\",\");\r\n    if (getMLModelName() != null)\r\n        sb.append(\"MLModelName: \").append(getMLModelName()).append(\",\");\r\n    if (getMLModelType() != null)\r\n        sb.append(\"MLModelType: \").append(getMLModelType()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getTrainingDataSourceId() != null)\r\n        sb.append(\"TrainingDataSourceId: \").append(getTrainingDataSourceId()).append(\",\");\r\n    if (getRecipe() != null)\r\n        sb.append(\"Recipe: \").append(getRecipe()).append(\",\");\r\n    if (getRecipeUri() != null)\r\n        sb.append(\"RecipeUri: \").append(getRecipeUri());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.DeleteHITResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.AttributesResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getAttributeType() != null)\r\n        sb.append(\"AttributeType: \").append(getAttributeType()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DescribeEvaluationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilterVariable() != null)\r\n        sb.append(\"FilterVariable: \").append(getFilterVariable()).append(\",\");\r\n    if (getEQ() != null)\r\n        sb.append(\"EQ: \").append(getEQ()).append(\",\");\r\n    if (getGT() != null)\r\n        sb.append(\"GT: \").append(getGT()).append(\",\");\r\n    if (getLT() != null)\r\n        sb.append(\"LT: \").append(getLT()).append(\",\");\r\n    if (getGE() != null)\r\n        sb.append(\"GE: \").append(getGE()).append(\",\");\r\n    if (getLE() != null)\r\n        sb.append(\"LE: \").append(getLE()).append(\",\");\r\n    if (getNE() != null)\r\n        sb.append(\"NE: \").append(getNE()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DeleteDBSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Channel.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getEgressEndpoints() != null)\r\n        sb.append(\"EgressEndpoints: \").append(getEgressEndpoints()).append(\",\");\r\n    if (getEncoderSettings() != null)\r\n        sb.append(\"EncoderSettings: \").append(getEncoderSettings()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getInputAttachments() != null)\r\n        sb.append(\"InputAttachments: \").append(getInputAttachments()).append(\",\");\r\n    if (getInputSpecification() != null)\r\n        sb.append(\"InputSpecification: \").append(getInputSpecification()).append(\",\");\r\n    if (getLogLevel() != null)\r\n        sb.append(\"LogLevel: \").append(getLogLevel()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPipelinesRunningCount() != null)\r\n        sb.append(\"PipelinesRunningCount: \").append(getPipelinesRunningCount()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeStackProvisioningParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAgentInstallerUrl() != null)\r\n        sb.append(\"AgentInstallerUrl: \").append(getAgentInstallerUrl()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.AWSMediaLiveClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmedialive using the current builder configuration.",
	"Method": "AWSMediaLive build(AwsSyncClientParams params){\r\n    return new AWSMediaLiveClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.NumberValidateResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCarrier() != null)\r\n        sb.append(\"Carrier: \").append(getCarrier()).append(\",\");\r\n    if (getCity() != null)\r\n        sb.append(\"City: \").append(getCity()).append(\",\");\r\n    if (getCleansedPhoneNumberE164() != null)\r\n        sb.append(\"CleansedPhoneNumberE164: \").append(getCleansedPhoneNumberE164()).append(\",\");\r\n    if (getCleansedPhoneNumberNational() != null)\r\n        sb.append(\"CleansedPhoneNumberNational: \").append(getCleansedPhoneNumberNational()).append(\",\");\r\n    if (getCountry() != null)\r\n        sb.append(\"Country: \").append(getCountry()).append(\",\");\r\n    if (getCountryCodeIso2() != null)\r\n        sb.append(\"CountryCodeIso2: \").append(getCountryCodeIso2()).append(\",\");\r\n    if (getCountryCodeNumeric() != null)\r\n        sb.append(\"CountryCodeNumeric: \").append(getCountryCodeNumeric()).append(\",\");\r\n    if (getCounty() != null)\r\n        sb.append(\"County: \").append(getCounty()).append(\",\");\r\n    if (getOriginalCountryCodeIso2() != null)\r\n        sb.append(\"OriginalCountryCodeIso2: \").append(getOriginalCountryCodeIso2()).append(\",\");\r\n    if (getOriginalPhoneNumber() != null)\r\n        sb.append(\"OriginalPhoneNumber: \").append(getOriginalPhoneNumber()).append(\",\");\r\n    if (getPhoneType() != null)\r\n        sb.append(\"PhoneType: \").append(getPhoneType()).append(\",\");\r\n    if (getPhoneTypeCode() != null)\r\n        sb.append(\"PhoneTypeCode: \").append(getPhoneTypeCode()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone()).append(\",\");\r\n    if (getZipCode() != null)\r\n        sb.append(\"ZipCode: \").append(getZipCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RegisterRdsDbInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getRdsDbInstanceArn() != null)\r\n        sb.append(\"RdsDbInstanceArn: \").append(getRdsDbInstanceArn()).append(\",\");\r\n    if (getDbUser() != null)\r\n        sb.append(\"DbUser: \").append(getDbUser()).append(\",\");\r\n    if (getDbPassword() != null)\r\n        sb.append(\"DbPassword: \").append(getDbPassword());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.updateMLModel",
	"Comment": "updates the mlmodelname and the scorethreshold of an mlmodel.you can use the getmlmodel operation to view the contents of the updated data element.",
	"Method": "UpdateMLModelResult updateMLModel(UpdateMLModelRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateMLModel(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.model.ResolveCustomerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomerIdentifier() != null)\r\n        sb.append(\"CustomerIdentifier: \").append(getCustomerIdentifier()).append(\",\");\r\n    if (getProductCode() != null)\r\n        sb.append(\"ProductCode: \").append(getProductCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.AssociateS3ResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberAccountId() != null)\r\n        sb.append(\"MemberAccountId: \").append(getMemberAccountId()).append(\",\");\r\n    if (getS3Resources() != null)\r\n        sb.append(\"S3Resources: \").append(getS3Resources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ImportJobResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCompletedPieces() != null)\r\n        sb.append(\"CompletedPieces: \").append(getCompletedPieces()).append(\",\");\r\n    if (getCompletionDate() != null)\r\n        sb.append(\"CompletionDate: \").append(getCompletionDate()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getDefinition() != null)\r\n        sb.append(\"Definition: \").append(getDefinition()).append(\",\");\r\n    if (getFailedPieces() != null)\r\n        sb.append(\"FailedPieces: \").append(getFailedPieces()).append(\",\");\r\n    if (getFailures() != null)\r\n        sb.append(\"Failures: \").append(getFailures()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getTotalFailures() != null)\r\n        sb.append(\"TotalFailures: \").append(getTotalFailures()).append(\",\");\r\n    if (getTotalPieces() != null)\r\n        sb.append(\"TotalPieces: \").append(getTotalPieces()).append(\",\");\r\n    if (getTotalProcessed() != null)\r\n        sb.append(\"TotalProcessed: \").append(getTotalProcessed()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.OutputGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCmafGroupSettings() != null)\r\n        sb.append(\"CmafGroupSettings: \").append(getCmafGroupSettings()).append(\",\");\r\n    if (getDashIsoGroupSettings() != null)\r\n        sb.append(\"DashIsoGroupSettings: \").append(getDashIsoGroupSettings()).append(\",\");\r\n    if (getFileGroupSettings() != null)\r\n        sb.append(\"FileGroupSettings: \").append(getFileGroupSettings()).append(\",\");\r\n    if (getHlsGroupSettings() != null)\r\n        sb.append(\"HlsGroupSettings: \").append(getHlsGroupSettings()).append(\",\");\r\n    if (getMsSmoothGroupSettings() != null)\r\n        sb.append(\"MsSmoothGroupSettings: \").append(getMsSmoothGroupSettings()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.EnabledServicePrincipal.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServicePrincipal() != null)\r\n        sb.append(\"ServicePrincipal: \").append(getServicePrincipal()).append(\",\");\r\n    if (getDateEnabled() != null)\r\n        sb.append(\"DateEnabled: \").append(getDateEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DescribeAccountAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.putRetentionPolicy",
	"Comment": "sets the retention of the specified log group. a retention policy allows you to configure the number of days forwhich to retain log events in the specified log group.",
	"Method": "PutRetentionPolicyResult putRetentionPolicy(PutRetentionPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutRetentionPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.UntagLogGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeDBSubnetGroups",
	"Comment": "returns a list of dbsubnetgroup descriptions. if a dbsubnetgroupname is specified, the list will contain only thedescriptions of the specified dbsubnetgroup.for an overview of cidr ranges, go to the wikipedia tutorial.",
	"Method": "DescribeDBSubnetGroupsResult describeDBSubnetGroups(DescribeDBSubnetGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBSubnetGroups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.StopInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateHITTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoApprovalDelayInSeconds() != null)\r\n        sb.append(\"AutoApprovalDelayInSeconds: \").append(getAutoApprovalDelayInSeconds()).append(\",\");\r\n    if (getAssignmentDurationInSeconds() != null)\r\n        sb.append(\"AssignmentDurationInSeconds: \").append(getAssignmentDurationInSeconds()).append(\",\");\r\n    if (getReward() != null)\r\n        sb.append(\"Reward: \").append(getReward()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getKeywords() != null)\r\n        sb.append(\"Keywords: \").append(getKeywords()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getQualificationRequirements() != null)\r\n        sb.append(\"QualificationRequirements: \").append(getQualificationRequirements());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateUserProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamUserArn() != null)\r\n        sb.append(\"IamUserArn: \").append(getIamUserArn()).append(\",\");\r\n    if (getSshUsername() != null)\r\n        sb.append(\"SshUsername: \").append(getSshUsername()).append(\",\");\r\n    if (getSshPublicKey() != null)\r\n        sb.append(\"SshPublicKey: \").append(getSshPublicKey()).append(\",\");\r\n    if (getAllowSelfManagement() != null)\r\n        sb.append(\"AllowSelfManagement: \").append(getAllowSelfManagement());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.model.GetObjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPath() != null)\r\n        sb.append(\"Path: \").append(getPath()).append(\",\");\r\n    if (getRange() != null)\r\n        sb.append(\"Range: \").append(getRange());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribeAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccount() != null)\r\n        sb.append(\"Account: \").append(getAccount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.UpdateDataSourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId()).append(\",\");\r\n    if (getDataSourceName() != null)\r\n        sb.append(\"DataSourceName: \").append(getDataSourceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.waiters.AWSOpsWorksWaiters.deploymentSuccessful",
	"Comment": "builds a deploymentsuccessful waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeDeploymentsRequest> deploymentSuccessful(){\r\n    return new WaiterBuilder<DescribeDeploymentsRequest, DescribeDeploymentsResult>().withSdkFunction(new DescribeDeploymentsFunction(client)).withAcceptors(new DeploymentSuccessful.IsSuccessfulMatcher(), new DeploymentSuccessful.IsFailedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(40), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.updateHITReviewStatus",
	"Comment": "the updatehitreviewstatus operation updates the status of a hit. if the status is reviewable, thisoperation can update the status to reviewing, or it can revert a reviewing hit back to the reviewable status.",
	"Method": "UpdateHITReviewStatusResult updateHITReviewStatus(UpdateHITReviewStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateHITReviewStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.model.PutObjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContentSHA256() != null)\r\n        sb.append(\"ContentSHA256: \").append(getContentSHA256()).append(\",\");\r\n    if (getETag() != null)\r\n        sb.append(\"ETag: \").append(getETag()).append(\",\");\r\n    if (getStorageClass() != null)\r\n        sb.append(\"StorageClass: \").append(getStorageClass());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutResourcePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyName() != null)\r\n        sb.append(\"PolicyName: \").append(getPolicyName()).append(\",\");\r\n    if (getPolicyDocument() != null)\r\n        sb.append(\"PolicyDocument: \").append(getPolicyDocument());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMClient.deleteBackup",
	"Comment": "deletes a backup. you can delete both manual and automated backups. this operation is asynchronous.an invalidstateexception is thrown when a backup deletion is already in progress. aresourcenotfoundexception is thrown when the backup does not exist. avalidationexception is thrown when parameters of the request are not valid.",
	"Method": "DeleteBackupResult deleteBackup(DeleteBackupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteBackup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DisablePolicyTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoot() != null)\r\n        sb.append(\"Root: \").append(getRoot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.ServerEvent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getLogUrl() != null)\r\n        sb.append(\"LogUrl: \").append(getLogUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.AssociateElasticIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.Configuration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreated() != null)\r\n        sb.append(\"Created: \").append(getCreated()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEngineType() != null)\r\n        sb.append(\"EngineType: \").append(getEngineType()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLatestRevision() != null)\r\n        sb.append(\"LatestRevision: \").append(getLatestRevision()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.UpdateMLModelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.EnablePolicyTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoot() != null)\r\n        sb.append(\"Root: \").append(getRoot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacemetering.AWSMarketplaceMeteringClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacecommerceanalytics.AWSMarketplaceCommerceAnalyticsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplaceentitlement.AWSMarketplaceEntitlementAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmarketplaceentitlementasync using the current builderconfiguration.",
	"Method": "AWSMarketplaceEntitlementAsync build(AwsAsyncClientParams params){\r\n    return new AWSMarketplaceEntitlementAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.NotifyMigrationTaskStateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getTask() != null)\r\n        sb.append(\"Task: \").append(getTask()).append(\",\");\r\n    if (getUpdateDateTime() != null)\r\n        sb.append(\"UpdateDateTime: \").append(getUpdateDateTime()).append(\",\");\r\n    if (getNextUpdateSeconds() != null)\r\n        sb.append(\"NextUpdateSeconds: \").append(getNextUpdateSeconds()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.M2tsSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAbsentInputAudioBehavior() != null)\r\n        sb.append(\"AbsentInputAudioBehavior: \").append(getAbsentInputAudioBehavior()).append(\",\");\r\n    if (getArib() != null)\r\n        sb.append(\"Arib: \").append(getArib()).append(\",\");\r\n    if (getAribCaptionsPid() != null)\r\n        sb.append(\"AribCaptionsPid: \").append(getAribCaptionsPid()).append(\",\");\r\n    if (getAribCaptionsPidControl() != null)\r\n        sb.append(\"AribCaptionsPidControl: \").append(getAribCaptionsPidControl()).append(\",\");\r\n    if (getAudioBufferModel() != null)\r\n        sb.append(\"AudioBufferModel: \").append(getAudioBufferModel()).append(\",\");\r\n    if (getAudioFramesPerPes() != null)\r\n        sb.append(\"AudioFramesPerPes: \").append(getAudioFramesPerPes()).append(\",\");\r\n    if (getAudioPids() != null)\r\n        sb.append(\"AudioPids: \").append(getAudioPids()).append(\",\");\r\n    if (getAudioStreamType() != null)\r\n        sb.append(\"AudioStreamType: \").append(getAudioStreamType()).append(\",\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getBufferModel() != null)\r\n        sb.append(\"BufferModel: \").append(getBufferModel()).append(\",\");\r\n    if (getCcDescriptor() != null)\r\n        sb.append(\"CcDescriptor: \").append(getCcDescriptor()).append(\",\");\r\n    if (getDvbNitSettings() != null)\r\n        sb.append(\"DvbNitSettings: \").append(getDvbNitSettings()).append(\",\");\r\n    if (getDvbSdtSettings() != null)\r\n        sb.append(\"DvbSdtSettings: \").append(getDvbSdtSettings()).append(\",\");\r\n    if (getDvbSubPids() != null)\r\n        sb.append(\"DvbSubPids: \").append(getDvbSubPids()).append(\",\");\r\n    if (getDvbTdtSettings() != null)\r\n        sb.append(\"DvbTdtSettings: \").append(getDvbTdtSettings()).append(\",\");\r\n    if (getDvbTeletextPid() != null)\r\n        sb.append(\"DvbTeletextPid: \").append(getDvbTeletextPid()).append(\",\");\r\n    if (getEbif() != null)\r\n        sb.append(\"Ebif: \").append(getEbif()).append(\",\");\r\n    if (getEbpAudioInterval() != null)\r\n        sb.append(\"EbpAudioInterval: \").append(getEbpAudioInterval()).append(\",\");\r\n    if (getEbpLookaheadMs() != null)\r\n        sb.append(\"EbpLookaheadMs: \").append(getEbpLookaheadMs()).append(\",\");\r\n    if (getEbpPlacement() != null)\r\n        sb.append(\"EbpPlacement: \").append(getEbpPlacement()).append(\",\");\r\n    if (getEcmPid() != null)\r\n        sb.append(\"EcmPid: \").append(getEcmPid()).append(\",\");\r\n    if (getEsRateInPes() != null)\r\n        sb.append(\"EsRateInPes: \").append(getEsRateInPes()).append(\",\");\r\n    if (getEtvPlatformPid() != null)\r\n        sb.append(\"EtvPlatformPid: \").append(getEtvPlatformPid()).append(\",\");\r\n    if (getEtvSignalPid() != null)\r\n        sb.append(\"EtvSignalPid: \").append(getEtvSignalPid()).append(\",\");\r\n    if (getFragmentTime() != null)\r\n        sb.append(\"FragmentTime: \").append(getFragmentTime()).append(\",\");\r\n    if (getKlv() != null)\r\n        sb.append(\"Klv: \").append(getKlv()).append(\",\");\r\n    if (getKlvDataPids() != null)\r\n        sb.append(\"KlvDataPids: \").append(getKlvDataPids()).append(\",\");\r\n    if (getNullPacketBitrate() != null)\r\n        sb.append(\"NullPacketBitrate: \").append(getNullPacketBitrate()).append(\",\");\r\n    if (getPatInterval() != null)\r\n        sb.append(\"PatInterval: \").append(getPatInterval()).append(\",\");\r\n    if (getPcrControl() != null)\r\n        sb.append(\"PcrControl: \").append(getPcrControl()).append(\",\");\r\n    if (getPcrPeriod() != null)\r\n        sb.append(\"PcrPeriod: \").append(getPcrPeriod()).append(\",\");\r\n    if (getPcrPid() != null)\r\n        sb.append(\"PcrPid: \").append(getPcrPid()).append(\",\");\r\n    if (getPmtInterval() != null)\r\n        sb.append(\"PmtInterval: \").append(getPmtInterval()).append(\",\");\r\n    if (getPmtPid() != null)\r\n        sb.append(\"PmtPid: \").append(getPmtPid()).append(\",\");\r\n    if (getProgramNum() != null)\r\n        sb.append(\"ProgramNum: \").append(getProgramNum()).append(\",\");\r\n    if (getRateMode() != null)\r\n        sb.append(\"RateMode: \").append(getRateMode()).append(\",\");\r\n    if (getScte27Pids() != null)\r\n        sb.append(\"Scte27Pids: \").append(getScte27Pids()).append(\",\");\r\n    if (getScte35Control() != null)\r\n        sb.append(\"Scte35Control: \").append(getScte35Control()).append(\",\");\r\n    if (getScte35Pid() != null)\r\n        sb.append(\"Scte35Pid: \").append(getScte35Pid()).append(\",\");\r\n    if (getSegmentationMarkers() != null)\r\n        sb.append(\"SegmentationMarkers: \").append(getSegmentationMarkers()).append(\",\");\r\n    if (getSegmentationStyle() != null)\r\n        sb.append(\"SegmentationStyle: \").append(getSegmentationStyle()).append(\",\");\r\n    if (getSegmentationTime() != null)\r\n        sb.append(\"SegmentationTime: \").append(getSegmentationTime()).append(\",\");\r\n    if (getTimedMetadataBehavior() != null)\r\n        sb.append(\"TimedMetadataBehavior: \").append(getTimedMetadataBehavior()).append(\",\");\r\n    if (getTimedMetadataPid() != null)\r\n        sb.append(\"TimedMetadataPid: \").append(getTimedMetadataPid()).append(\",\");\r\n    if (getTransportStreamId() != null)\r\n        sb.append(\"TransportStreamId: \").append(getTransportStreamId()).append(\",\");\r\n    if (getVideoPid() != null)\r\n        sb.append(\"VideoPid: \").append(getVideoPid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeregisterElasticIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.AssociateMemberAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberAccountId() != null)\r\n        sb.append(\"MemberAccountId: \").append(getMemberAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.updateExpirationForHIT",
	"Comment": "the updateexpirationforhit operation allows you update the expiration time of a hit. if you updateit to a time in the past, the hit will be immediately expired.",
	"Method": "UpdateExpirationForHITResult updateExpirationForHIT(UpdateExpirationForHITRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateExpirationForHIT(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CreateQueueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPricingPlan() != null)\r\n        sb.append(\"PricingPlan: \").append(getPricingPlan()).append(\",\");\r\n    if (getReservationPlanSettings() != null)\r\n        sb.append(\"ReservationPlanSettings: \").append(getReservationPlanSettings()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ListUsersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerId() != null)\r\n        sb.append(\"BrokerId: \").append(getBrokerId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.Timezone.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimezoneName() != null)\r\n        sb.append(\"TimezoneName: \").append(getTimezoneName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Ac3Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getBitstreamMode() != null)\r\n        sb.append(\"BitstreamMode: \").append(getBitstreamMode()).append(\",\");\r\n    if (getCodingMode() != null)\r\n        sb.append(\"CodingMode: \").append(getCodingMode()).append(\",\");\r\n    if (getDialnorm() != null)\r\n        sb.append(\"Dialnorm: \").append(getDialnorm()).append(\",\");\r\n    if (getDynamicRangeCompressionProfile() != null)\r\n        sb.append(\"DynamicRangeCompressionProfile: \").append(getDynamicRangeCompressionProfile()).append(\",\");\r\n    if (getLfeFilter() != null)\r\n        sb.append(\"LfeFilter: \").append(getLfeFilter()).append(\",\");\r\n    if (getMetadataControl() != null)\r\n        sb.append(\"MetadataControl: \").append(getMetadataControl()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.AWSMediaStoreDataClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmediastoredata using the current builder configuration.",
	"Method": "AWSMediaStoreData build(AwsSyncClientParams params){\r\n    return new AWSMediaStoreDataClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DeleteQueueRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Message.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getImageIconUrl() != null)\r\n        sb.append(\"ImageIconUrl: \").append(getImageIconUrl()).append(\",\");\r\n    if (getImageSmallIconUrl() != null)\r\n        sb.append(\"ImageSmallIconUrl: \").append(getImageSmallIconUrl()).append(\",\");\r\n    if (getImageUrl() != null)\r\n        sb.append(\"ImageUrl: \").append(getImageUrl()).append(\",\");\r\n    if (getJsonBody() != null)\r\n        sb.append(\"JsonBody: \").append(getJsonBody()).append(\",\");\r\n    if (getMediaUrl() != null)\r\n        sb.append(\"MediaUrl: \").append(getMediaUrl()).append(\",\");\r\n    if (getRawContent() != null)\r\n        sb.append(\"RawContent: \").append(getRawContent()).append(\",\");\r\n    if (getSilentPush() != null)\r\n        sb.append(\"SilentPush: \").append(getSilentPush()).append(\",\");\r\n    if (getTimeToLive() != null)\r\n        sb.append(\"TimeToLive: \").append(getTimeToLive()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DeleteInputSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputSecurityGroupId() != null)\r\n        sb.append(\"InputSecurityGroupId: \").append(getInputSecurityGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacecommerceanalytics.AWSMarketplaceCommerceAnalyticsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmarketplacecommerceanalyticsasync using the current builderconfiguration.",
	"Method": "AWSMarketplaceCommerceAnalyticsAsync build(AwsAsyncClientParams params){\r\n    return new AWSMarketplaceCommerceAnalyticsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.RemoveTagsFromResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsmediaconnect using the current builder configuration.",
	"Method": "AWSMediaConnect build(AwsSyncClientParams params){\r\n    return new AWSMediaConnectClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.WeeklyAutoScalingSchedule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMonday() != null)\r\n        sb.append(\"Monday: \").append(getMonday()).append(\",\");\r\n    if (getTuesday() != null)\r\n        sb.append(\"Tuesday: \").append(getTuesday()).append(\",\");\r\n    if (getWednesday() != null)\r\n        sb.append(\"Wednesday: \").append(getWednesday()).append(\",\");\r\n    if (getThursday() != null)\r\n        sb.append(\"Thursday: \").append(getThursday()).append(\",\");\r\n    if (getFriday() != null)\r\n        sb.append(\"Friday: \").append(getFriday()).append(\",\");\r\n    if (getSaturday() != null)\r\n        sb.append(\"Saturday: \").append(getSaturday()).append(\",\");\r\n    if (getSunday() != null)\r\n        sb.append(\"Sunday: \").append(getSunday());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeQueriesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueries() != null)\r\n        sb.append(\"Queries: \").append(getQueries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte35SegmentationDescriptor.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryRestrictions() != null)\r\n        sb.append(\"DeliveryRestrictions: \").append(getDeliveryRestrictions()).append(\",\");\r\n    if (getSegmentNum() != null)\r\n        sb.append(\"SegmentNum: \").append(getSegmentNum()).append(\",\");\r\n    if (getSegmentationCancelIndicator() != null)\r\n        sb.append(\"SegmentationCancelIndicator: \").append(getSegmentationCancelIndicator()).append(\",\");\r\n    if (getSegmentationDuration() != null)\r\n        sb.append(\"SegmentationDuration: \").append(getSegmentationDuration()).append(\",\");\r\n    if (getSegmentationEventId() != null)\r\n        sb.append(\"SegmentationEventId: \").append(getSegmentationEventId()).append(\",\");\r\n    if (getSegmentationTypeId() != null)\r\n        sb.append(\"SegmentationTypeId: \").append(getSegmentationTypeId()).append(\",\");\r\n    if (getSegmentationUpid() != null)\r\n        sb.append(\"SegmentationUpid: \").append(getSegmentationUpid()).append(\",\");\r\n    if (getSegmentationUpidType() != null)\r\n        sb.append(\"SegmentationUpidType: \").append(getSegmentationUpidType()).append(\",\");\r\n    if (getSegmentsExpected() != null)\r\n        sb.append(\"SegmentsExpected: \").append(getSegmentsExpected()).append(\",\");\r\n    if (getSubSegmentNum() != null)\r\n        sb.append(\"SubSegmentNum: \").append(getSubSegmentNum()).append(\",\");\r\n    if (getSubSegmentsExpected() != null)\r\n        sb.append(\"SubSegmentsExpected: \").append(getSubSegmentsExpected());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte35SpliceInsertScheduleActionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getSpliceEventId() != null)\r\n        sb.append(\"SpliceEventId: \").append(getSpliceEventId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.NoiseReducerFilterSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStrength() != null)\r\n        sb.append(\"Strength: \").append(getStrength());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeVolumesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumes() != null)\r\n        sb.append(\"Volumes: \").append(getVolumes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.AWSMigrationHubAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCity() != null)\r\n        sb.append(\"City: \").append(getCity()).append(\",\");\r\n    if (getCountry() != null)\r\n        sb.append(\"Country: \").append(getCountry()).append(\",\");\r\n    if (getLatitude() != null)\r\n        sb.append(\"Latitude: \").append(getLatitude()).append(\",\");\r\n    if (getLongitude() != null)\r\n        sb.append(\"Longitude: \").append(getLongitude()).append(\",\");\r\n    if (getPostalCode() != null)\r\n        sb.append(\"PostalCode: \").append(getPostalCode()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ListConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurations() != null)\r\n        sb.append(\"Configurations: \").append(getConfigurations()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.UpdateChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannel() != null)\r\n        sb.append(\"Channel: \").append(getChannel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.deleteRetentionPolicy",
	"Comment": "deletes the specified retention policy.log events do not expire if they belong to log groups without a retention policy.",
	"Method": "DeleteRetentionPolicyResult deleteRetentionPolicy(DeleteRetentionPolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteRetentionPolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.FecOutputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getColumnDepth() != null)\r\n        sb.append(\"ColumnDepth: \").append(getColumnDepth()).append(\",\");\r\n    if (getIncludeFec() != null)\r\n        sb.append(\"IncludeFec: \").append(getIncludeFec()).append(\",\");\r\n    if (getRowLength() != null)\r\n        sb.append(\"RowLength: \").append(getRowLength());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.RejectAssignmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssignmentId() != null)\r\n        sb.append(\"AssignmentId: \").append(getAssignmentId()).append(\",\");\r\n    if (getRequesterFeedback() != null)\r\n        sb.append(\"RequesterFeedback: \").append(getRequesterFeedback());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeleteInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getDeleteElasticIp() != null)\r\n        sb.append(\"DeleteElasticIp: \").append(getDeleteElasticIp()).append(\",\");\r\n    if (getDeleteVolumes() != null)\r\n        sb.append(\"DeleteVolumes: \").append(getDeleteVolumes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBClusterParameterGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsVoipChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DeletePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.DataPoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteResourcePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteGcmChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGCMChannelResponse() != null)\r\n        sb.append(\"GCMChannelResponse: \").append(getGCMChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Mp2Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getCodingMode() != null)\r\n        sb.append(\"CodingMode: \").append(getCodingMode()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeLayersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayers() != null)\r\n        sb.append(\"Layers: \").append(getLayers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RebootInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DvbSdtSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutputSdt() != null)\r\n        sb.append(\"OutputSdt: \").append(getOutputSdt()).append(\",\");\r\n    if (getSdtInterval() != null)\r\n        sb.append(\"SdtInterval: \").append(getSdtInterval()).append(\",\");\r\n    if (getServiceName() != null)\r\n        sb.append(\"ServiceName: \").append(getServiceName()).append(\",\");\r\n    if (getServiceProviderName() != null)\r\n        sb.append(\"ServiceProviderName: \").append(getServiceProviderName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.AWSOrganizationsClient.describeHandshake",
	"Comment": "retrieves information about a previously requested handshake. the handshake id comes from the response to theoriginal inviteaccounttoorganization operation that generated the handshake.you can access handshakes that are accepted, declined, or canceled for only 30 days after they change to thatstate. they are then deleted and no longer accessible.this operation can be called from any account in the organization.",
	"Method": "DescribeHandshakeResult describeHandshake(DescribeHandshakeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeHandshake(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.HlsOutputSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHlsSettings() != null)\r\n        sb.append(\"HlsSettings: \").append(getHlsSettings()).append(\",\");\r\n    if (getNameModifier() != null)\r\n        sb.append(\"NameModifier: \").append(getNameModifier()).append(\",\");\r\n    if (getSegmentModifier() != null)\r\n        sb.append(\"SegmentModifier: \").append(getSegmentModifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeElasticLoadBalancersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticLoadBalancers() != null)\r\n        sb.append(\"ElasticLoadBalancers: \").append(getElasticLoadBalancers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodec() != null)\r\n        sb.append(\"Codec: \").append(getCodec()).append(\",\");\r\n    if (getMaximumBitrate() != null)\r\n        sb.append(\"MaximumBitrate: \").append(getMaximumBitrate()).append(\",\");\r\n    if (getResolution() != null)\r\n        sb.append(\"Resolution: \").append(getResolution());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ReviewResultDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActionId() != null)\r\n        sb.append(\"ActionId: \").append(getActionId()).append(\",\");\r\n    if (getSubjectId() != null)\r\n        sb.append(\"SubjectId: \").append(getSubjectId()).append(\",\");\r\n    if (getSubjectType() != null)\r\n        sb.append(\"SubjectType: \").append(getSubjectType()).append(\",\");\r\n    if (getQuestionId() != null)\r\n        sb.append(\"QuestionId: \").append(getQuestionId()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeleteLayerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.MetricKeyDataPoints.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getDataPoints() != null)\r\n        sb.append(\"DataPoints: \").append(getDataPoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.MovSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClapAtom() != null)\r\n        sb.append(\"ClapAtom: \").append(getClapAtom()).append(\",\");\r\n    if (getCslgAtom() != null)\r\n        sb.append(\"CslgAtom: \").append(getCslgAtom()).append(\",\");\r\n    if (getMpeg2FourCCControl() != null)\r\n        sb.append(\"Mpeg2FourCCControl: \").append(getMpeg2FourCCControl()).append(\",\");\r\n    if (getPaddingControl() != null)\r\n        sb.append(\"PaddingControl: \").append(getPaddingControl()).append(\",\");\r\n    if (getReference() != null)\r\n        sb.append(\"Reference: \").append(getReference());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getScheduleActions() != null)\r\n        sb.append(\"ScheduleActions: \").append(getScheduleActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.CreateHITRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxAssignments() != null)\r\n        sb.append(\"MaxAssignments: \").append(getMaxAssignments()).append(\",\");\r\n    if (getAutoApprovalDelayInSeconds() != null)\r\n        sb.append(\"AutoApprovalDelayInSeconds: \").append(getAutoApprovalDelayInSeconds()).append(\",\");\r\n    if (getLifetimeInSeconds() != null)\r\n        sb.append(\"LifetimeInSeconds: \").append(getLifetimeInSeconds()).append(\",\");\r\n    if (getAssignmentDurationInSeconds() != null)\r\n        sb.append(\"AssignmentDurationInSeconds: \").append(getAssignmentDurationInSeconds()).append(\",\");\r\n    if (getReward() != null)\r\n        sb.append(\"Reward: \").append(getReward()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getKeywords() != null)\r\n        sb.append(\"Keywords: \").append(getKeywords()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getQuestion() != null)\r\n        sb.append(\"Question: \").append(getQuestion()).append(\",\");\r\n    if (getRequesterAnnotation() != null)\r\n        sb.append(\"RequesterAnnotation: \").append(getRequesterAnnotation()).append(\",\");\r\n    if (getQualificationRequirements() != null)\r\n        sb.append(\"QualificationRequirements: \").append(getQualificationRequirements()).append(\",\");\r\n    if (getUniqueRequestToken() != null)\r\n        sb.append(\"UniqueRequestToken: \").append(getUniqueRequestToken()).append(\",\");\r\n    if (getAssignmentReviewPolicy() != null)\r\n        sb.append(\"AssignmentReviewPolicy: \").append(getAssignmentReviewPolicy()).append(\",\");\r\n    if (getHITReviewPolicy() != null)\r\n        sb.append(\"HITReviewPolicy: \").append(getHITReviewPolicy()).append(\",\");\r\n    if (getHITLayoutId() != null)\r\n        sb.append(\"HITLayoutId: \").append(getHITLayoutId()).append(\",\");\r\n    if (getHITLayoutParameters() != null)\r\n        sb.append(\"HITLayoutParameters: \").append(getHITLayoutParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.InputClipping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndTimecode() != null)\r\n        sb.append(\"EndTimecode: \").append(getEndTimecode()).append(\",\");\r\n    if (getStartTimecode() != null)\r\n        sb.append(\"StartTimecode: \").append(getStartTimecode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.UpdateOriginEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId()).append(\",\");\r\n    if (getCmafPackage() != null)\r\n        sb.append(\"CmafPackage: \").append(getCmafPackage()).append(\",\");\r\n    if (getDashPackage() != null)\r\n        sb.append(\"DashPackage: \").append(getDashPackage()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsPackage() != null)\r\n        sb.append(\"HlsPackage: \").append(getHlsPackage()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getManifestName() != null)\r\n        sb.append(\"ManifestName: \").append(getManifestName()).append(\",\");\r\n    if (getMssPackage() != null)\r\n        sb.append(\"MssPackage: \").append(getMssPackage()).append(\",\");\r\n    if (getStartoverWindowSeconds() != null)\r\n        sb.append(\"StartoverWindowSeconds: \").append(getStartoverWindowSeconds()).append(\",\");\r\n    if (getTimeDelaySeconds() != null)\r\n        sb.append(\"TimeDelaySeconds: \").append(getTimeDelaySeconds()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getWhitelist() != null)\r\n        sb.append(\"Whitelist: \").append(getWhitelist());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeElasticIpsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getIps() != null)\r\n        sb.append(\"Ips: \").append(getIps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.CreateInputSecurityGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecurityGroup() != null)\r\n        sb.append(\"SecurityGroup: \").append(getSecurityGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.Messages.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DescribeOrganizationalUnitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrganizationalUnit() != null)\r\n        sb.append(\"OrganizationalUnit: \").append(getOrganizationalUnit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.modifyDBInstance",
	"Comment": "modifies settings for a db instance. you can change one or more database configuration parameters by specifyingthese parameters and the new values in the request. to learn what modifications you can make to your db instance,call describevaliddbinstancemodifications before you call modifydbinstance.",
	"Method": "DBInstance modifyDBInstance(ModifyDBInstanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyDBInstance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.User.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConsoleAccess() != null)\r\n        sb.append(\"ConsoleAccess: \").append(getConsoleAccess()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getPassword() != null)\r\n        sb.append(\"Password: \").append(getPassword()).append(\",\");\r\n    if (getUsername() != null)\r\n        sb.append(\"Username: \").append(getUsername());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.internal.config.ApiGatewayClientConfiguration.setConnectionConfiguration",
	"Comment": "sets various options related to the http connection pool and connections.",
	"Method": "void setConnectionConfiguration(ConnectionConfiguration connectionConfiguration){\r\n    this.connectionConfiguration = connectionConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSChannelResponse() != null)\r\n        sb.append(\"APNSChannelResponse: \").append(getAPNSChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.EmbeddedSourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConvert608To708() != null)\r\n        sb.append(\"Convert608To708: \").append(getConvert608To708()).append(\",\");\r\n    if (getSource608ChannelNumber() != null)\r\n        sb.append(\"Source608ChannelNumber: \").append(getSource608ChannelNumber()).append(\",\");\r\n    if (getSource608TrackNumber() != null)\r\n        sb.append(\"Source608TrackNumber: \").append(getSource608TrackNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteBatchPredictionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBatchPredictionId() != null)\r\n        sb.append(\"BatchPredictionId: \").append(getBatchPredictionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.AmazonMacieClient.associateMemberAccount",
	"Comment": "associates a specified aws account with amazon macie as a member account.",
	"Method": "AssociateMemberAccountResult associateMemberAccount(AssociateMemberAccountRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAssociateMemberAccount(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.DisableAWSServiceAccessResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeInputResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getAttachedChannels() != null)\r\n        sb.append(\"AttachedChannels: \").append(getAttachedChannels()).append(\",\");\r\n    if (getDestinations() != null)\r\n        sb.append(\"Destinations: \").append(getDestinations()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getMediaConnectFlows() != null)\r\n        sb.append(\"MediaConnectFlows: \").append(getMediaConnectFlows()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.TimecodeConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getSyncThreshold() != null)\r\n        sb.append(\"SyncThreshold: \").append(getSyncThreshold());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.protect.client.SdkSyncClientBuilder.connectionConfiguration",
	"Comment": "sets various optional options related to the http connection pool and connections.",
	"Method": "Subclass connectionConfiguration(ConnectionConfiguration connectionConfiguration){\r\n    setConnectionConfiguration(connectionConfiguration);\r\n    return getSubclass();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DeleteInputSecurityGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UpdateRelationalDatabaseResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeMyUserProfileRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.HlsSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioOnlyHlsSettings() != null)\r\n        sb.append(\"AudioOnlyHlsSettings: \").append(getAudioOnlyHlsSettings()).append(\",\");\r\n    if (getStandardHlsSettings() != null)\r\n        sb.append(\"StandardHlsSettings: \").append(getStandardHlsSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetGcmChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGCMChannelResponse() != null)\r\n        sb.append(\"GCMChannelResponse: \").append(getGCMChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateAppResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationResponse() != null)\r\n        sb.append(\"ApplicationResponse: \").append(getApplicationResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DvbSubDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlignment() != null)\r\n        sb.append(\"Alignment: \").append(getAlignment()).append(\",\");\r\n    if (getBackgroundColor() != null)\r\n        sb.append(\"BackgroundColor: \").append(getBackgroundColor()).append(\",\");\r\n    if (getBackgroundOpacity() != null)\r\n        sb.append(\"BackgroundOpacity: \").append(getBackgroundOpacity()).append(\",\");\r\n    if (getFont() != null)\r\n        sb.append(\"Font: \").append(getFont()).append(\",\");\r\n    if (getFontColor() != null)\r\n        sb.append(\"FontColor: \").append(getFontColor()).append(\",\");\r\n    if (getFontOpacity() != null)\r\n        sb.append(\"FontOpacity: \").append(getFontOpacity()).append(\",\");\r\n    if (getFontResolution() != null)\r\n        sb.append(\"FontResolution: \").append(getFontResolution()).append(\",\");\r\n    if (getFontSize() != null)\r\n        sb.append(\"FontSize: \").append(getFontSize()).append(\",\");\r\n    if (getOutlineColor() != null)\r\n        sb.append(\"OutlineColor: \").append(getOutlineColor()).append(\",\");\r\n    if (getOutlineSize() != null)\r\n        sb.append(\"OutlineSize: \").append(getOutlineSize()).append(\",\");\r\n    if (getShadowColor() != null)\r\n        sb.append(\"ShadowColor: \").append(getShadowColor()).append(\",\");\r\n    if (getShadowOpacity() != null)\r\n        sb.append(\"ShadowOpacity: \").append(getShadowOpacity()).append(\",\");\r\n    if (getShadowXOffset() != null)\r\n        sb.append(\"ShadowXOffset: \").append(getShadowXOffset()).append(\",\");\r\n    if (getShadowYOffset() != null)\r\n        sb.append(\"ShadowYOffset: \").append(getShadowYOffset()).append(\",\");\r\n    if (getTeletextGridControl() != null)\r\n        sb.append(\"TeletextGridControl: \").append(getTeletextGridControl()).append(\",\");\r\n    if (getXPosition() != null)\r\n        sb.append(\"XPosition: \").append(getXPosition()).append(\",\");\r\n    if (getYPosition() != null)\r\n        sb.append(\"YPosition: \").append(getYPosition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.deleteResourcePolicy",
	"Comment": "deletes a resource policy from this account. this revokes the access of the identities in that policy to put logevents to this account.",
	"Method": "DeleteResourcePolicyResult deleteResourcePolicy(DeleteResourcePolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteResourcePolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.InstanceIdentity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDocument() != null)\r\n        sb.append(\"Document: \").append(getDocument()).append(\",\");\r\n    if (getSignature() != null)\r\n        sb.append(\"Signature: \").append(getSignature());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateLayerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLayerId() != null)\r\n        sb.append(\"LayerId: \").append(getLayerId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getShortname() != null)\r\n        sb.append(\"Shortname: \").append(getShortname()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getCloudWatchLogsConfiguration() != null)\r\n        sb.append(\"CloudWatchLogsConfiguration: \").append(getCloudWatchLogsConfiguration()).append(\",\");\r\n    if (getCustomInstanceProfileArn() != null)\r\n        sb.append(\"CustomInstanceProfileArn: \").append(getCustomInstanceProfileArn()).append(\",\");\r\n    if (getCustomJson() != null)\r\n        sb.append(\"CustomJson: \").append(getCustomJson()).append(\",\");\r\n    if (getCustomSecurityGroupIds() != null)\r\n        sb.append(\"CustomSecurityGroupIds: \").append(getCustomSecurityGroupIds()).append(\",\");\r\n    if (getPackages() != null)\r\n        sb.append(\"Packages: \").append(getPackages()).append(\",\");\r\n    if (getVolumeConfigurations() != null)\r\n        sb.append(\"VolumeConfigurations: \").append(getVolumeConfigurations()).append(\",\");\r\n    if (getEnableAutoHealing() != null)\r\n        sb.append(\"EnableAutoHealing: \").append(getEnableAutoHealing()).append(\",\");\r\n    if (getAutoAssignElasticIps() != null)\r\n        sb.append(\"AutoAssignElasticIps: \").append(getAutoAssignElasticIps()).append(\",\");\r\n    if (getAutoAssignPublicIps() != null)\r\n        sb.append(\"AutoAssignPublicIps: \").append(getAutoAssignPublicIps()).append(\",\");\r\n    if (getCustomRecipes() != null)\r\n        sb.append(\"CustomRecipes: \").append(getCustomRecipes()).append(\",\");\r\n    if (getInstallUpdatesOnBoot() != null)\r\n        sb.append(\"InstallUpdatesOnBoot: \").append(getInstallUpdatesOnBoot()).append(\",\");\r\n    if (getUseEbsOptimizedInstances() != null)\r\n        sb.append(\"UseEbsOptimizedInstances: \").append(getUseEbsOptimizedInstances()).append(\",\");\r\n    if (getLifecycleEventConfiguration() != null)\r\n        sb.append(\"LifecycleEventConfiguration: \").append(getLifecycleEventConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.DeleteWorkerBlockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getDBInstanceStatus() != null)\r\n        sb.append(\"DBInstanceStatus: \").append(getDBInstanceStatus()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getDBName() != null)\r\n        sb.append(\"DBName: \").append(getDBName()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getInstanceCreateTime() != null)\r\n        sb.append(\"InstanceCreateTime: \").append(getInstanceCreateTime()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getDBSecurityGroups() != null)\r\n        sb.append(\"DBSecurityGroups: \").append(getDBSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroups() != null)\r\n        sb.append(\"VpcSecurityGroups: \").append(getVpcSecurityGroups()).append(\",\");\r\n    if (getDBParameterGroups() != null)\r\n        sb.append(\"DBParameterGroups: \").append(getDBParameterGroups()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDBSubnetGroup() != null)\r\n        sb.append(\"DBSubnetGroup: \").append(getDBSubnetGroup()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getPendingModifiedValues() != null)\r\n        sb.append(\"PendingModifiedValues: \").append(getPendingModifiedValues()).append(\",\");\r\n    if (getLatestRestorableTime() != null)\r\n        sb.append(\"LatestRestorableTime: \").append(getLatestRestorableTime()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getReadReplicaSourceDBInstanceIdentifier() != null)\r\n        sb.append(\"ReadReplicaSourceDBInstanceIdentifier: \").append(getReadReplicaSourceDBInstanceIdentifier()).append(\",\");\r\n    if (getReadReplicaDBInstanceIdentifiers() != null)\r\n        sb.append(\"ReadReplicaDBInstanceIdentifiers: \").append(getReadReplicaDBInstanceIdentifiers()).append(\",\");\r\n    if (getReadReplicaDBClusterIdentifiers() != null)\r\n        sb.append(\"ReadReplicaDBClusterIdentifiers: \").append(getReadReplicaDBClusterIdentifiers()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupMemberships() != null)\r\n        sb.append(\"OptionGroupMemberships: \").append(getOptionGroupMemberships()).append(\",\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getSecondaryAvailabilityZone() != null)\r\n        sb.append(\"SecondaryAvailabilityZone: \").append(getSecondaryAvailabilityZone()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getStatusInfos() != null)\r\n        sb.append(\"StatusInfos: \").append(getStatusInfos()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getTdeCredentialArn() != null)\r\n        sb.append(\"TdeCredentialArn: \").append(getTdeCredentialArn()).append(\",\");\r\n    if (getDbInstancePort() != null)\r\n        sb.append(\"DbInstancePort: \").append(getDbInstancePort()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getDbiResourceId() != null)\r\n        sb.append(\"DbiResourceId: \").append(getDbiResourceId()).append(\",\");\r\n    if (getCACertificateIdentifier() != null)\r\n        sb.append(\"CACertificateIdentifier: \").append(getCACertificateIdentifier()).append(\",\");\r\n    if (getDomainMemberships() != null)\r\n        sb.append(\"DomainMemberships: \").append(getDomainMemberships()).append(\",\");\r\n    if (getCopyTagsToSnapshot() != null)\r\n        sb.append(\"CopyTagsToSnapshot: \").append(getCopyTagsToSnapshot()).append(\",\");\r\n    if (getMonitoringInterval() != null)\r\n        sb.append(\"MonitoringInterval: \").append(getMonitoringInterval()).append(\",\");\r\n    if (getEnhancedMonitoringResourceArn() != null)\r\n        sb.append(\"EnhancedMonitoringResourceArn: \").append(getEnhancedMonitoringResourceArn()).append(\",\");\r\n    if (getMonitoringRoleArn() != null)\r\n        sb.append(\"MonitoringRoleArn: \").append(getMonitoringRoleArn()).append(\",\");\r\n    if (getPromotionTier() != null)\r\n        sb.append(\"PromotionTier: \").append(getPromotionTier()).append(\",\");\r\n    if (getDBInstanceArn() != null)\r\n        sb.append(\"DBInstanceArn: \").append(getDBInstanceArn()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone()).append(\",\");\r\n    if (getIAMDatabaseAuthenticationEnabled() != null)\r\n        sb.append(\"IAMDatabaseAuthenticationEnabled: \").append(getIAMDatabaseAuthenticationEnabled()).append(\",\");\r\n    if (getPerformanceInsightsEnabled() != null)\r\n        sb.append(\"PerformanceInsightsEnabled: \").append(getPerformanceInsightsEnabled()).append(\",\");\r\n    if (getPerformanceInsightsKMSKeyId() != null)\r\n        sb.append(\"PerformanceInsightsKMSKeyId: \").append(getPerformanceInsightsKMSKeyId()).append(\",\");\r\n    if (getEnabledCloudwatchLogsExports() != null)\r\n        sb.append(\"EnabledCloudwatchLogsExports: \").append(getEnabledCloudwatchLogsExports());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.UpdatePresetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCategory() != null)\r\n        sb.append(\"Category: \").append(getCategory()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.H264Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdaptiveQuantization() != null)\r\n        sb.append(\"AdaptiveQuantization: \").append(getAdaptiveQuantization()).append(\",\");\r\n    if (getAfdSignaling() != null)\r\n        sb.append(\"AfdSignaling: \").append(getAfdSignaling()).append(\",\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getBufFillPct() != null)\r\n        sb.append(\"BufFillPct: \").append(getBufFillPct()).append(\",\");\r\n    if (getBufSize() != null)\r\n        sb.append(\"BufSize: \").append(getBufSize()).append(\",\");\r\n    if (getColorMetadata() != null)\r\n        sb.append(\"ColorMetadata: \").append(getColorMetadata()).append(\",\");\r\n    if (getEntropyEncoding() != null)\r\n        sb.append(\"EntropyEncoding: \").append(getEntropyEncoding()).append(\",\");\r\n    if (getFixedAfd() != null)\r\n        sb.append(\"FixedAfd: \").append(getFixedAfd()).append(\",\");\r\n    if (getFlickerAq() != null)\r\n        sb.append(\"FlickerAq: \").append(getFlickerAq()).append(\",\");\r\n    if (getFramerateControl() != null)\r\n        sb.append(\"FramerateControl: \").append(getFramerateControl()).append(\",\");\r\n    if (getFramerateDenominator() != null)\r\n        sb.append(\"FramerateDenominator: \").append(getFramerateDenominator()).append(\",\");\r\n    if (getFramerateNumerator() != null)\r\n        sb.append(\"FramerateNumerator: \").append(getFramerateNumerator()).append(\",\");\r\n    if (getGopBReference() != null)\r\n        sb.append(\"GopBReference: \").append(getGopBReference()).append(\",\");\r\n    if (getGopClosedCadence() != null)\r\n        sb.append(\"GopClosedCadence: \").append(getGopClosedCadence()).append(\",\");\r\n    if (getGopNumBFrames() != null)\r\n        sb.append(\"GopNumBFrames: \").append(getGopNumBFrames()).append(\",\");\r\n    if (getGopSize() != null)\r\n        sb.append(\"GopSize: \").append(getGopSize()).append(\",\");\r\n    if (getGopSizeUnits() != null)\r\n        sb.append(\"GopSizeUnits: \").append(getGopSizeUnits()).append(\",\");\r\n    if (getLevel() != null)\r\n        sb.append(\"Level: \").append(getLevel()).append(\",\");\r\n    if (getLookAheadRateControl() != null)\r\n        sb.append(\"LookAheadRateControl: \").append(getLookAheadRateControl()).append(\",\");\r\n    if (getMaxBitrate() != null)\r\n        sb.append(\"MaxBitrate: \").append(getMaxBitrate()).append(\",\");\r\n    if (getMinIInterval() != null)\r\n        sb.append(\"MinIInterval: \").append(getMinIInterval()).append(\",\");\r\n    if (getNumRefFrames() != null)\r\n        sb.append(\"NumRefFrames: \").append(getNumRefFrames()).append(\",\");\r\n    if (getParControl() != null)\r\n        sb.append(\"ParControl: \").append(getParControl()).append(\",\");\r\n    if (getParDenominator() != null)\r\n        sb.append(\"ParDenominator: \").append(getParDenominator()).append(\",\");\r\n    if (getParNumerator() != null)\r\n        sb.append(\"ParNumerator: \").append(getParNumerator()).append(\",\");\r\n    if (getProfile() != null)\r\n        sb.append(\"Profile: \").append(getProfile()).append(\",\");\r\n    if (getQvbrQualityLevel() != null)\r\n        sb.append(\"QvbrQualityLevel: \").append(getQvbrQualityLevel()).append(\",\");\r\n    if (getRateControlMode() != null)\r\n        sb.append(\"RateControlMode: \").append(getRateControlMode()).append(\",\");\r\n    if (getScanType() != null)\r\n        sb.append(\"ScanType: \").append(getScanType()).append(\",\");\r\n    if (getSceneChangeDetect() != null)\r\n        sb.append(\"SceneChangeDetect: \").append(getSceneChangeDetect()).append(\",\");\r\n    if (getSlices() != null)\r\n        sb.append(\"Slices: \").append(getSlices()).append(\",\");\r\n    if (getSoftness() != null)\r\n        sb.append(\"Softness: \").append(getSoftness()).append(\",\");\r\n    if (getSpatialAq() != null)\r\n        sb.append(\"SpatialAq: \").append(getSpatialAq()).append(\",\");\r\n    if (getSyntax() != null)\r\n        sb.append(\"Syntax: \").append(getSyntax()).append(\",\");\r\n    if (getTemporalAq() != null)\r\n        sb.append(\"TemporalAq: \").append(getTemporalAq()).append(\",\");\r\n    if (getTimecodeInsertion() != null)\r\n        sb.append(\"TimecodeInsertion: \").append(getTimecodeInsertion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.UpdateProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContents() != null)\r\n        sb.append(\"Contents: \").append(getContents()).append(\",\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBClusterSnapshotAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getDBClusterSnapshotAttributes() != null)\r\n        sb.append(\"DBClusterSnapshotAttributes: \").append(getDBClusterSnapshotAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeregisterInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.Event.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getDate() != null)\r\n        sb.append(\"Date: \").append(getDate()).append(\",\");\r\n    if (getSourceArn() != null)\r\n        sb.append(\"SourceArn: \").append(getSourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.proxyHost",
	"Comment": "sets the optional proxy host the client will connect through.",
	"Method": "ProxyConfiguration proxyHost(String proxyHost){\r\n    setProxyHost(proxyHost);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.AttachElasticLoadBalancerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastore.model.ListContainersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainers() != null)\r\n        sb.append(\"Containers: \").append(getContainers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBClusterParameterGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBClusterParameterGroups() != null)\r\n        sb.append(\"DBClusterParameterGroups: \").append(getDBClusterParameterGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.UpdateFlowOutputRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getMaxLatency() != null)\r\n        sb.append(\"MaxLatency: \").append(getMaxLatency()).append(\",\");\r\n    if (getOutputArn() != null)\r\n        sb.append(\"OutputArn: \").append(getOutputArn()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol()).append(\",\");\r\n    if (getSmoothingLatency() != null)\r\n        sb.append(\"SmoothingLatency: \").append(getSmoothingLatency()).append(\",\");\r\n    if (getStreamId() != null)\r\n        sb.append(\"StreamId: \").append(getStreamId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.CreateImportJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getImportJobRequest() != null)\r\n        sb.append(\"ImportJobRequest: \").append(getImportJobRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.Handshake.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getParties() != null)\r\n        sb.append(\"Parties: \").append(getParties()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getRequestedTimestamp() != null)\r\n        sb.append(\"RequestedTimestamp: \").append(getRequestedTimestamp()).append(\",\");\r\n    if (getExpirationTimestamp() != null)\r\n        sb.append(\"ExpirationTimestamp: \").append(getExpirationTimestamp()).append(\",\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.DescribeApplicationStateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ReservationPlanSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCommitment() != null)\r\n        sb.append(\"Commitment: \").append(getCommitment()).append(\",\");\r\n    if (getRenewalType() != null)\r\n        sb.append(\"RenewalType: \").append(getRenewalType()).append(\",\");\r\n    if (getReservedSlots() != null)\r\n        sb.append(\"ReservedSlots: \").append(getReservedSlots());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.createHITType",
	"Comment": "the createhittype operation creates a new hit type. this operation allows you to define a standardset of hit properties to use when creating hits. if you register a hit type with values that match an existinghit type, the hit type id of the existing type will be returned.",
	"Method": "CreateHITTypeResult createHITType(CreateHITTypeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateHITType(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignActivitiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getActivitiesResponse() != null)\r\n        sb.append(\"ActivitiesResponse: \").append(getActivitiesResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.AWSMediaTailorClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.AudioLanguageSelection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLanguageSelectionPolicy() != null)\r\n        sb.append(\"LanguageSelectionPolicy: \").append(getLanguageSelectionPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.DescribeChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediastoredata.model.DeleteObjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ExportJobsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteMetricFilterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.AssociateDiscoveredResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getDiscoveredResource() != null)\r\n        sb.append(\"DiscoveredResource: \").append(getDiscoveredResource()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CaptionSelector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomLanguageCode() != null)\r\n        sb.append(\"CustomLanguageCode: \").append(getCustomLanguageCode()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getSourceSettings() != null)\r\n        sb.append(\"SourceSettings: \").append(getSourceSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.RemoveSourceIdentifierFromSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.DescribeOriginEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ListBrokersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrokerSummaries() != null)\r\n        sb.append(\"BrokerSummaries: \").append(getBrokerSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DescribeAccountAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.OutputChannelMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputChannels() != null)\r\n        sb.append(\"InputChannels: \").append(getInputChannels());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DeregisterVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutDestinationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ListJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetGcmChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.UpdateHITTypeOfHITResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.InputWhitelistRuleCidr.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCidr() != null)\r\n        sb.append(\"Cidr: \").append(getCidr());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeRaidArraysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getRaidArrayIds() != null)\r\n        sb.append(\"RaidArrayIds: \").append(getRaidArrayIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmediaconnectasync using the current builder configuration.",
	"Method": "AWSMediaConnectAsync build(AwsAsyncClientParams params){\r\n    return new AWSMediaConnectAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.DashConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getManifestEndpointPrefix() != null)\r\n        sb.append(\"ManifestEndpointPrefix: \").append(getManifestEndpointPrefix()).append(\",\");\r\n    if (getMpdLocation() != null)\r\n        sb.append(\"MpdLocation: \").append(getMpdLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListPoliciesForTargetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetId() != null)\r\n        sb.append(\"TargetId: \").append(getTargetId()).append(\",\");\r\n    if (getFilter() != null)\r\n        sb.append(\"Filter: \").append(getFilter()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.AWSMediaLiveClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeAppsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApps() != null)\r\n        sb.append(\"Apps: \").append(getApps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RegisterEcsClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEcsClusterArn() != null)\r\n        sb.append(\"EcsClusterArn: \").append(getEcsClusterArn()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListOrganizationalUnitsForParentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParentId() != null)\r\n        sb.append(\"ParentId: \").append(getParentId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.AmazonPinpointClient.putEvents",
	"Comment": "use to record events for endpoints. this method creates events and creates or updates the endpoints that thoseevents are associated with.",
	"Method": "PutEventsResult putEvents(PutEventsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutEvents(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Deinterlacer.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithm() != null)\r\n        sb.append(\"Algorithm: \").append(getAlgorithm()).append(\",\");\r\n    if (getControl() != null)\r\n        sb.append(\"Control: \").append(getControl()).append(\",\");\r\n    if (getMode() != null)\r\n        sb.append(\"Mode: \").append(getMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.NotifyMigrationTaskStateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.ListConfigurationRevisionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationId() != null)\r\n        sb.append(\"ConfigurationId: \").append(getConfigurationId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UpdateRelationalDatabaseParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.DeleteProjectResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeletedResources() != null)\r\n        sb.append(\"DeletedResources: \").append(getDeletedResources()).append(\",\");\r\n    if (getOrphanedResources() != null)\r\n        sb.append(\"OrphanedResources: \").append(getOrphanedResources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.Server.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociatePublicIpAddress() != null)\r\n        sb.append(\"AssociatePublicIpAddress: \").append(getAssociatePublicIpAddress()).append(\",\");\r\n    if (getBackupRetentionCount() != null)\r\n        sb.append(\"BackupRetentionCount: \").append(getBackupRetentionCount()).append(\",\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getCloudFormationStackArn() != null)\r\n        sb.append(\"CloudFormationStackArn: \").append(getCloudFormationStackArn()).append(\",\");\r\n    if (getDisableAutomatedBackup() != null)\r\n        sb.append(\"DisableAutomatedBackup: \").append(getDisableAutomatedBackup()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineModel() != null)\r\n        sb.append(\"EngineModel: \").append(getEngineModel()).append(\",\");\r\n    if (getEngineAttributes() != null)\r\n        sb.append(\"EngineAttributes: \").append(getEngineAttributes()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getInstanceProfileArn() != null)\r\n        sb.append(\"InstanceProfileArn: \").append(getInstanceProfileArn()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getKeyPair() != null)\r\n        sb.append(\"KeyPair: \").append(getKeyPair()).append(\",\");\r\n    if (getMaintenanceStatus() != null)\r\n        sb.append(\"MaintenanceStatus: \").append(getMaintenanceStatus()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getServiceRoleArn() != null)\r\n        sb.append(\"ServiceRoleArn: \").append(getServiceRoleArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusReason() != null)\r\n        sb.append(\"StatusReason: \").append(getStatusReason()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getServerArn() != null)\r\n        sb.append(\"ServerArn: \").append(getServerArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ApplicationSettingsResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCampaignHook() != null)\r\n        sb.append(\"CampaignHook: \").append(getCampaignHook()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getLimits() != null)\r\n        sb.append(\"Limits: \").append(getLimits()).append(\",\");\r\n    if (getQuietTime() != null)\r\n        sb.append(\"QuietTime: \").append(getQuietTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DefaultPushNotificationMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getSilentPush() != null)\r\n        sb.append(\"SilentPush: \").append(getSilentPush()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.UpdateS3ResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedS3Resources() != null)\r\n        sb.append(\"FailedS3Resources: \").append(getFailedS3Resources());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UnassignInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.describeEvaluations",
	"Comment": "returns a list of describeevaluations that match the search criteria in the request.",
	"Method": "DescribeEvaluationsResult describeEvaluations(DescribeEvaluationsRequest request,DescribeEvaluationsResult describeEvaluations){\r\n    return describeEvaluations(new DescribeEvaluationsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.Root.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getPolicyTypes() != null)\r\n        sb.append(\"PolicyTypes: \").append(getPolicyTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteRetentionPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ModifyEventSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DisassociateElasticIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.Instance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAgentVersion() != null)\r\n        sb.append(\"AgentVersion: \").append(getAgentVersion()).append(\",\");\r\n    if (getAmiId() != null)\r\n        sb.append(\"AmiId: \").append(getAmiId()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getAutoScalingType() != null)\r\n        sb.append(\"AutoScalingType: \").append(getAutoScalingType()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getBlockDeviceMappings() != null)\r\n        sb.append(\"BlockDeviceMappings: \").append(getBlockDeviceMappings()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getEbsOptimized() != null)\r\n        sb.append(\"EbsOptimized: \").append(getEbsOptimized()).append(\",\");\r\n    if (getEc2InstanceId() != null)\r\n        sb.append(\"Ec2InstanceId: \").append(getEc2InstanceId()).append(\",\");\r\n    if (getEcsClusterArn() != null)\r\n        sb.append(\"EcsClusterArn: \").append(getEcsClusterArn()).append(\",\");\r\n    if (getEcsContainerInstanceArn() != null)\r\n        sb.append(\"EcsContainerInstanceArn: \").append(getEcsContainerInstanceArn()).append(\",\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp()).append(\",\");\r\n    if (getHostname() != null)\r\n        sb.append(\"Hostname: \").append(getHostname()).append(\",\");\r\n    if (getInfrastructureClass() != null)\r\n        sb.append(\"InfrastructureClass: \").append(getInfrastructureClass()).append(\",\");\r\n    if (getInstallUpdatesOnBoot() != null)\r\n        sb.append(\"InstallUpdatesOnBoot: \").append(getInstallUpdatesOnBoot()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getInstanceProfileArn() != null)\r\n        sb.append(\"InstanceProfileArn: \").append(getInstanceProfileArn()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getLastServiceErrorId() != null)\r\n        sb.append(\"LastServiceErrorId: \").append(getLastServiceErrorId()).append(\",\");\r\n    if (getLayerIds() != null)\r\n        sb.append(\"LayerIds: \").append(getLayerIds()).append(\",\");\r\n    if (getOs() != null)\r\n        sb.append(\"Os: \").append(getOs()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getPrivateDns() != null)\r\n        sb.append(\"PrivateDns: \").append(getPrivateDns()).append(\",\");\r\n    if (getPrivateIp() != null)\r\n        sb.append(\"PrivateIp: \").append(getPrivateIp()).append(\",\");\r\n    if (getPublicDns() != null)\r\n        sb.append(\"PublicDns: \").append(getPublicDns()).append(\",\");\r\n    if (getPublicIp() != null)\r\n        sb.append(\"PublicIp: \").append(getPublicIp()).append(\",\");\r\n    if (getRegisteredBy() != null)\r\n        sb.append(\"RegisteredBy: \").append(getRegisteredBy()).append(\",\");\r\n    if (getReportedAgentVersion() != null)\r\n        sb.append(\"ReportedAgentVersion: \").append(getReportedAgentVersion()).append(\",\");\r\n    if (getReportedOs() != null)\r\n        sb.append(\"ReportedOs: \").append(getReportedOs()).append(\",\");\r\n    if (getRootDeviceType() != null)\r\n        sb.append(\"RootDeviceType: \").append(getRootDeviceType()).append(\",\");\r\n    if (getRootDeviceVolumeId() != null)\r\n        sb.append(\"RootDeviceVolumeId: \").append(getRootDeviceVolumeId()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getSshHostDsaKeyFingerprint() != null)\r\n        sb.append(\"SshHostDsaKeyFingerprint: \").append(getSshHostDsaKeyFingerprint()).append(\",\");\r\n    if (getSshHostRsaKeyFingerprint() != null)\r\n        sb.append(\"SshHostRsaKeyFingerprint: \").append(getSshHostRsaKeyFingerprint()).append(\",\");\r\n    if (getSshKeyName() != null)\r\n        sb.append(\"SshKeyName: \").append(getSshKeyName()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getTenancy() != null)\r\n        sb.append(\"Tenancy: \").append(getTenancy()).append(\",\");\r\n    if (getVirtualizationType() != null)\r\n        sb.append(\"VirtualizationType: \").append(getVirtualizationType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.CreatePresetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPreset() != null)\r\n        sb.append(\"Preset: \").append(getPreset());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UnpeerVpcRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DeletePresetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.AcceptQualificationRequestResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.LeaveOrganizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteDataSourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.model.DeleteTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListReviewPolicyResultsForHITResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHITId() != null)\r\n        sb.append(\"HITId: \").append(getHITId()).append(\",\");\r\n    if (getAssignmentReviewPolicy() != null)\r\n        sb.append(\"AssignmentReviewPolicy: \").append(getAssignmentReviewPolicy()).append(\",\");\r\n    if (getHITReviewPolicy() != null)\r\n        sb.append(\"HITReviewPolicy: \").append(getHITReviewPolicy()).append(\",\");\r\n    if (getAssignmentReviewReport() != null)\r\n        sb.append(\"AssignmentReviewReport: \").append(getAssignmentReviewReport()).append(\",\");\r\n    if (getHITReviewReport() != null)\r\n        sb.append(\"HITReviewReport: \").append(getHITReviewReport()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.MessageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStatus() != null)\r\n        sb.append(\"DeliveryStatus: \").append(getDeliveryStatus()).append(\",\");\r\n    if (getMessageId() != null)\r\n        sb.append(\"MessageId: \").append(getMessageId()).append(\",\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getUpdatedToken() != null)\r\n        sb.append(\"UpdatedToken: \").append(getUpdatedToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.describeLogStreams",
	"Comment": "lists the log streams for the specified log group. you can list all the log streams or filter the results byprefix. you can also control how the results are ordered.this operation has a limit of five transactions per second, after which transactions are throttled.",
	"Method": "DescribeLogStreamsResult describeLogStreams(DescribeLogStreamsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeLogStreams(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.AmazonMQClient.listConfigurationRevisions",
	"Comment": "returns a list of all revisions for the specified configuration.",
	"Method": "ListConfigurationRevisionsResult listConfigurationRevisions(ListConfigurationRevisionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListConfigurationRevisions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeDeploymentsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getAppId() != null)\r\n        sb.append(\"AppId: \").append(getAppId()).append(\",\");\r\n    if (getDeploymentIds() != null)\r\n        sb.append(\"DeploymentIds: \").append(getDeploymentIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UpdateElasticIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBSubnetGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeEngineDefaultParameters",
	"Comment": "returns the default engine and system parameter information for the specified database engine.",
	"Method": "EngineDefaults describeEngineDefaultParameters(DescribeEngineDefaultParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEngineDefaultParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EmailChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSet() != null)\r\n        sb.append(\"ConfigurationSet: \").append(getConfigurationSet()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getFromAddress() != null)\r\n        sb.append(\"FromAddress: \").append(getFromAddress()).append(\",\");\r\n    if (getIdentity() != null)\r\n        sb.append(\"Identity: \").append(getIdentity()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.BonusPayment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId()).append(\",\");\r\n    if (getBonusAmount() != null)\r\n        sb.append(\"BonusAmount: \").append(getBonusAmount()).append(\",\");\r\n    if (getAssignmentId() != null)\r\n        sb.append(\"AssignmentId: \").append(getAssignmentId()).append(\",\");\r\n    if (getReason() != null)\r\n        sb.append(\"Reason: \").append(getReason()).append(\",\");\r\n    if (getGrantTime() != null)\r\n        sb.append(\"GrantTime: \").append(getGrantTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeDBParameterGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBParameterGroups() != null)\r\n        sb.append(\"DBParameterGroups: \").append(getDBParameterGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.AWSOpsWorksCMClient.describeBackups",
	"Comment": "describes backups. the results are ordered by time, with newest backups first. if you do not specify a backupidor servername, the command returns all backups.this operation is synchronous.a resourcenotfoundexception is thrown when the backup does not exist. avalidationexception is raised when parameters of the request are not valid.",
	"Method": "DescribeBackupsResult describeBackups(DescribeBackupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeBackups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.MsSmoothGroupSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioDeduplication() != null)\r\n        sb.append(\"AudioDeduplication: \").append(getAudioDeduplication()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getEncryption() != null)\r\n        sb.append(\"Encryption: \").append(getEncryption()).append(\",\");\r\n    if (getFragmentLength() != null)\r\n        sb.append(\"FragmentLength: \").append(getFragmentLength()).append(\",\");\r\n    if (getManifestEncoding() != null)\r\n        sb.append(\"ManifestEncoding: \").append(getManifestEncoding());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.AWSMigrationHubClient.listDiscoveredResources",
	"Comment": "lists discovered resources associated with the given migrationtask.",
	"Method": "ListDiscoveredResourcesResult listDiscoveredResources(ListDiscoveredResourcesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDiscoveredResources(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.Parameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterName() != null)\r\n        sb.append(\"ParameterName: \").append(getParameterName()).append(\",\");\r\n    if (getParameterValue() != null)\r\n        sb.append(\"ParameterValue: \").append(getParameterValue()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getApplyType() != null)\r\n        sb.append(\"ApplyType: \").append(getApplyType()).append(\",\");\r\n    if (getDataType() != null)\r\n        sb.append(\"DataType: \").append(getDataType()).append(\",\");\r\n    if (getAllowedValues() != null)\r\n        sb.append(\"AllowedValues: \").append(getAllowedValues()).append(\",\");\r\n    if (getIsModifiable() != null)\r\n        sb.append(\"IsModifiable: \").append(getIsModifiable()).append(\",\");\r\n    if (getMinimumEngineVersion() != null)\r\n        sb.append(\"MinimumEngineVersion: \").append(getMinimumEngineVersion()).append(\",\");\r\n    if (getApplyMethod() != null)\r\n        sb.append(\"ApplyMethod: \").append(getApplyMethod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.waiters.AmazonNeptuneWaiters.dBInstanceDeleted",
	"Comment": "builds a dbinstancedeleted waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeDBInstancesRequest> dBInstanceDeleted(){\r\n    return new WaiterBuilder<DescribeDBInstancesRequest, DescribeDBInstancesResult>().withSdkFunction(new DescribeDBInstancesFunction(client)).withAcceptors(new DBInstanceDeleted.IsDeletedMatcher(), new DBInstanceDeleted.IsDBInstanceNotFoundMatcher(), new DBInstanceDeleted.IsCreatingMatcher(), new DBInstanceDeleted.IsModifyingMatcher(), new DBInstanceDeleted.IsRebootingMatcher(), new DBInstanceDeleted.IsResettingmastercredentialsMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.BatchUpdateScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreates() != null)\r\n        sb.append(\"Creates: \").append(getCreates()).append(\",\");\r\n    if (getDeletes() != null)\r\n        sb.append(\"Deletes: \").append(getDeletes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListHITsForQualificationTypeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getNumResults() != null)\r\n        sb.append(\"NumResults: \").append(getNumResults()).append(\",\");\r\n    if (getHITs() != null)\r\n        sb.append(\"HITs: \").append(getHITs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListRootsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.NotifyWorkersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubject() != null)\r\n        sb.append(\"Subject: \").append(getSubject()).append(\",\");\r\n    if (getMessageText() != null)\r\n        sb.append(\"MessageText: \").append(getMessageText()).append(\",\");\r\n    if (getWorkerIds() != null)\r\n        sb.append(\"WorkerIds: \").append(getWorkerIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListReviewableHITsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getNumResults() != null)\r\n        sb.append(\"NumResults: \").append(getNumResults()).append(\",\");\r\n    if (getHITs() != null)\r\n        sb.append(\"HITs: \").append(getHITs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.VideoPreprocessor.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getColorCorrector() != null)\r\n        sb.append(\"ColorCorrector: \").append(getColorCorrector()).append(\",\");\r\n    if (getDeinterlacer() != null)\r\n        sb.append(\"Deinterlacer: \").append(getDeinterlacer()).append(\",\");\r\n    if (getImageInserter() != null)\r\n        sb.append(\"ImageInserter: \").append(getImageInserter()).append(\",\");\r\n    if (getNoiseReducer() != null)\r\n        sb.append(\"NoiseReducer: \").append(getNoiseReducer()).append(\",\");\r\n    if (getTimecodeBurnin() != null)\r\n        sb.append(\"TimecodeBurnin: \").append(getTimecodeBurnin());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.AWSOpsWorksAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsopsworksasync using the current builder configuration.",
	"Method": "AWSOpsWorksAsync build(AwsAsyncClientParams params){\r\n    return new AWSOpsWorksAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.CopyDBClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceDBClusterParameterGroupIdentifier() != null)\r\n        sb.append(\"SourceDBClusterParameterGroupIdentifier: \").append(getSourceDBClusterParameterGroupIdentifier()).append(\",\");\r\n    if (getTargetDBClusterParameterGroupIdentifier() != null)\r\n        sb.append(\"TargetDBClusterParameterGroupIdentifier: \").append(getTargetDBClusterParameterGroupIdentifier()).append(\",\");\r\n    if (getTargetDBClusterParameterGroupDescription() != null)\r\n        sb.append(\"TargetDBClusterParameterGroupDescription: \").append(getTargetDBClusterParameterGroupDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RegisterVolumeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEc2VolumeId() != null)\r\n        sb.append(\"Ec2VolumeId: \").append(getEc2VolumeId()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.DeleteProjectRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProjectId() != null)\r\n        sb.append(\"ProjectId: \").append(getProjectId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DescribeChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.AssociateKmsKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.StartFlowResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DescribeEvaluationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResults() != null)\r\n        sb.append(\"Results: \").append(getResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.UpdatePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicyId() != null)\r\n        sb.append(\"PolicyId: \").append(getPolicyId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.S3ResourceClassification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix()).append(\",\");\r\n    if (getClassificationType() != null)\r\n        sb.append(\"ClassificationType: \").append(getClassificationType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.DeleteSmsChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSMSChannelResponse() != null)\r\n        sb.append(\"SMSChannelResponse: \").append(getSMSChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetImportJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RegisterElasticIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.DescribeBackupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBackups() != null)\r\n        sb.append(\"Backups: \").append(getBackups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListHandshakesForAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHandshakes() != null)\r\n        sb.append(\"Handshakes: \").append(getHandshakes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ListProgressUpdateStreamsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.TimecodeConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAnchor() != null)\r\n        sb.append(\"Anchor: \").append(getAnchor()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getTimestampOffset() != null)\r\n        sb.append(\"TimestampOffset: \").append(getTimestampOffset());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.model.Resource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getFeature() != null)\r\n        sb.append(\"Feature: \").append(getFeature()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsSandboxChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.BatchScheduleActionCreateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduleActions() != null)\r\n        sb.append(\"ScheduleActions: \").append(getScheduleActions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetApnsVoipChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSVoipChannelResponse() != null)\r\n        sb.append(\"APNSVoipChannelResponse: \").append(getAPNSVoipChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.AssociateDiscoveredResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.GetLogGroupFieldsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getTime() != null)\r\n        sb.append(\"Time: \").append(getTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GCMMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getCollapseKey() != null)\r\n        sb.append(\"CollapseKey: \").append(getCollapseKey()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getIconReference() != null)\r\n        sb.append(\"IconReference: \").append(getIconReference()).append(\",\");\r\n    if (getImageIconUrl() != null)\r\n        sb.append(\"ImageIconUrl: \").append(getImageIconUrl()).append(\",\");\r\n    if (getImageUrl() != null)\r\n        sb.append(\"ImageUrl: \").append(getImageUrl()).append(\",\");\r\n    if (getPriority() != null)\r\n        sb.append(\"Priority: \").append(getPriority()).append(\",\");\r\n    if (getRawContent() != null)\r\n        sb.append(\"RawContent: \").append(getRawContent()).append(\",\");\r\n    if (getRestrictedPackageName() != null)\r\n        sb.append(\"RestrictedPackageName: \").append(getRestrictedPackageName()).append(\",\");\r\n    if (getSilentPush() != null)\r\n        sb.append(\"SilentPush: \").append(getSilentPush()).append(\",\");\r\n    if (getSmallImageIconUrl() != null)\r\n        sb.append(\"SmallImageIconUrl: \").append(getSmallImageIconUrl()).append(\",\");\r\n    if (getSound() != null)\r\n        sb.append(\"Sound: \").append(getSound()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions()).append(\",\");\r\n    if (getTimeToLive() != null)\r\n        sb.append(\"TimeToLive: \").append(getTimeToLive()).append(\",\");\r\n    if (getTitle() != null)\r\n        sb.append(\"Title: \").append(getTitle()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.StaticKeySettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKeyProviderServer() != null)\r\n        sb.append(\"KeyProviderServer: \").append(getKeyProviderServer()).append(\",\");\r\n    if (getStaticKeyValue() != null)\r\n        sb.append(\"StaticKeyValue: \").append(getStaticKeyValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.CreateBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServerName() != null)\r\n        sb.append(\"ServerName: \").append(getServerName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.lightsail.model.UpdateRelationalDatabaseRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRelationalDatabaseName() != null)\r\n        sb.append(\"RelationalDatabaseName: \").append(getRelationalDatabaseName()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRotateMasterUserPassword() != null)\r\n        sb.append(\"RotateMasterUserPassword: \").append(getRotateMasterUserPassword()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getEnableBackupRetention() != null)\r\n        sb.append(\"EnableBackupRetention: \").append(getEnableBackupRetention()).append(\",\");\r\n    if (getDisableBackupRetention() != null)\r\n        sb.append(\"DisableBackupRetention: \").append(getDisableBackupRetention()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.RaidArray.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRaidArrayId() != null)\r\n        sb.append(\"RaidArrayId: \").append(getRaidArrayId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRaidLevel() != null)\r\n        sb.append(\"RaidLevel: \").append(getRaidLevel()).append(\",\");\r\n    if (getNumberOfDisks() != null)\r\n        sb.append(\"NumberOfDisks: \").append(getNumberOfDisks()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getDevice() != null)\r\n        sb.append(\"Device: \").append(getDevice()).append(\",\");\r\n    if (getMountPoint() != null)\r\n        sb.append(\"MountPoint: \").append(getMountPoint()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.AssociateQualificationWithWorkerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getWorkerId() != null)\r\n        sb.append(\"WorkerId: \").append(getWorkerId()).append(\",\");\r\n    if (getIntegerValue() != null)\r\n        sb.append(\"IntegerValue: \").append(getIntegerValue()).append(\",\");\r\n    if (getSendNotification() != null)\r\n        sb.append(\"SendNotification: \").append(getSendNotification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.QualificationType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getKeywords() != null)\r\n        sb.append(\"Keywords: \").append(getKeywords()).append(\",\");\r\n    if (getQualificationTypeStatus() != null)\r\n        sb.append(\"QualificationTypeStatus: \").append(getQualificationTypeStatus()).append(\",\");\r\n    if (getTest() != null)\r\n        sb.append(\"Test: \").append(getTest()).append(\",\");\r\n    if (getTestDurationInSeconds() != null)\r\n        sb.append(\"TestDurationInSeconds: \").append(getTestDurationInSeconds()).append(\",\");\r\n    if (getAnswerKey() != null)\r\n        sb.append(\"AnswerKey: \").append(getAnswerKey()).append(\",\");\r\n    if (getRetryDelayInSeconds() != null)\r\n        sb.append(\"RetryDelayInSeconds: \").append(getRetryDelayInSeconds()).append(\",\");\r\n    if (getIsRequestable() != null)\r\n        sb.append(\"IsRequestable: \").append(getIsRequestable()).append(\",\");\r\n    if (getAutoGranted() != null)\r\n        sb.append(\"AutoGranted: \").append(getAutoGranted()).append(\",\");\r\n    if (getAutoGrantedValue() != null)\r\n        sb.append(\"AutoGrantedValue: \").append(getAutoGrantedValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.Volume.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeId() != null)\r\n        sb.append(\"VolumeId: \").append(getVolumeId()).append(\",\");\r\n    if (getEc2VolumeId() != null)\r\n        sb.append(\"Ec2VolumeId: \").append(getEc2VolumeId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRaidArrayId() != null)\r\n        sb.append(\"RaidArrayId: \").append(getRaidArrayId()).append(\",\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize()).append(\",\");\r\n    if (getDevice() != null)\r\n        sb.append(\"Device: \").append(getDevice()).append(\",\");\r\n    if (getMountPoint() != null)\r\n        sb.append(\"MountPoint: \").append(getMountPoint()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getVolumeType() != null)\r\n        sb.append(\"VolumeType: \").append(getVolumeType()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AbstractAmazonMachineLearningAsync.describeDataSourcesAsync",
	"Comment": "simplified method form for invoking the describedatasources operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDataSourcesResult> describeDataSourcesAsync(DescribeDataSourcesRequest request,java.util.concurrent.Future<DescribeDataSourcesResult> describeDataSourcesAsync,DescribeDataSourcesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDataSourcesRequest, DescribeDataSourcesResult> asyncHandler,java.util.concurrent.Future<DescribeDataSourcesResult> describeDataSourcesAsync,java.util.concurrent.Future<DescribeDataSourcesResult> describeDataSourcesAsync,com.amazonaws.handlers.AsyncHandler<DescribeDataSourcesRequest, DescribeDataSourcesResult> asyncHandler){\r\n    return describeDataSourcesAsync(new DescribeDataSourcesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.cancelExportTask",
	"Comment": "cancels the specified export task.the task must be in the pending or running state.",
	"Method": "CancelExportTaskResult cancelExportTask(CancelExportTaskRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCancelExportTask(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.ListAccountsForParentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccounts() != null)\r\n        sb.append(\"Accounts: \").append(getAccounts()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.UnassignInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceId() != null)\r\n        sb.append(\"InstanceId: \").append(getInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.M3u8Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioFramesPerPes() != null)\r\n        sb.append(\"AudioFramesPerPes: \").append(getAudioFramesPerPes()).append(\",\");\r\n    if (getAudioPids() != null)\r\n        sb.append(\"AudioPids: \").append(getAudioPids()).append(\",\");\r\n    if (getEcmPid() != null)\r\n        sb.append(\"EcmPid: \").append(getEcmPid()).append(\",\");\r\n    if (getPatInterval() != null)\r\n        sb.append(\"PatInterval: \").append(getPatInterval()).append(\",\");\r\n    if (getPcrControl() != null)\r\n        sb.append(\"PcrControl: \").append(getPcrControl()).append(\",\");\r\n    if (getPcrPeriod() != null)\r\n        sb.append(\"PcrPeriod: \").append(getPcrPeriod()).append(\",\");\r\n    if (getPcrPid() != null)\r\n        sb.append(\"PcrPid: \").append(getPcrPid()).append(\",\");\r\n    if (getPmtInterval() != null)\r\n        sb.append(\"PmtInterval: \").append(getPmtInterval()).append(\",\");\r\n    if (getPmtPid() != null)\r\n        sb.append(\"PmtPid: \").append(getPmtPid()).append(\",\");\r\n    if (getProgramNum() != null)\r\n        sb.append(\"ProgramNum: \").append(getProgramNum()).append(\",\");\r\n    if (getScte35Behavior() != null)\r\n        sb.append(\"Scte35Behavior: \").append(getScte35Behavior()).append(\",\");\r\n    if (getScte35Pid() != null)\r\n        sb.append(\"Scte35Pid: \").append(getScte35Pid()).append(\",\");\r\n    if (getTimedMetadataBehavior() != null)\r\n        sb.append(\"TimedMetadataBehavior: \").append(getTimedMetadataBehavior()).append(\",\");\r\n    if (getTimedMetadataPid() != null)\r\n        sb.append(\"TimedMetadataPid: \").append(getTimedMetadataPid()).append(\",\");\r\n    if (getTransportStreamId() != null)\r\n        sb.append(\"TransportStreamId: \").append(getTransportStreamId()).append(\",\");\r\n    if (getVideoPid() != null)\r\n        sb.append(\"VideoPid: \").append(getVideoPid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.model.S3Resource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getPrefix() != null)\r\n        sb.append(\"Prefix: \").append(getPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.AssignVolumeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Mpeg2Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdaptiveQuantization() != null)\r\n        sb.append(\"AdaptiveQuantization: \").append(getAdaptiveQuantization()).append(\",\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getCodecLevel() != null)\r\n        sb.append(\"CodecLevel: \").append(getCodecLevel()).append(\",\");\r\n    if (getCodecProfile() != null)\r\n        sb.append(\"CodecProfile: \").append(getCodecProfile()).append(\",\");\r\n    if (getDynamicSubGop() != null)\r\n        sb.append(\"DynamicSubGop: \").append(getDynamicSubGop()).append(\",\");\r\n    if (getFramerateControl() != null)\r\n        sb.append(\"FramerateControl: \").append(getFramerateControl()).append(\",\");\r\n    if (getFramerateConversionAlgorithm() != null)\r\n        sb.append(\"FramerateConversionAlgorithm: \").append(getFramerateConversionAlgorithm()).append(\",\");\r\n    if (getFramerateDenominator() != null)\r\n        sb.append(\"FramerateDenominator: \").append(getFramerateDenominator()).append(\",\");\r\n    if (getFramerateNumerator() != null)\r\n        sb.append(\"FramerateNumerator: \").append(getFramerateNumerator()).append(\",\");\r\n    if (getGopClosedCadence() != null)\r\n        sb.append(\"GopClosedCadence: \").append(getGopClosedCadence()).append(\",\");\r\n    if (getGopSize() != null)\r\n        sb.append(\"GopSize: \").append(getGopSize()).append(\",\");\r\n    if (getGopSizeUnits() != null)\r\n        sb.append(\"GopSizeUnits: \").append(getGopSizeUnits()).append(\",\");\r\n    if (getHrdBufferInitialFillPercentage() != null)\r\n        sb.append(\"HrdBufferInitialFillPercentage: \").append(getHrdBufferInitialFillPercentage()).append(\",\");\r\n    if (getHrdBufferSize() != null)\r\n        sb.append(\"HrdBufferSize: \").append(getHrdBufferSize()).append(\",\");\r\n    if (getInterlaceMode() != null)\r\n        sb.append(\"InterlaceMode: \").append(getInterlaceMode()).append(\",\");\r\n    if (getIntraDcPrecision() != null)\r\n        sb.append(\"IntraDcPrecision: \").append(getIntraDcPrecision()).append(\",\");\r\n    if (getMaxBitrate() != null)\r\n        sb.append(\"MaxBitrate: \").append(getMaxBitrate()).append(\",\");\r\n    if (getMinIInterval() != null)\r\n        sb.append(\"MinIInterval: \").append(getMinIInterval()).append(\",\");\r\n    if (getNumberBFramesBetweenReferenceFrames() != null)\r\n        sb.append(\"NumberBFramesBetweenReferenceFrames: \").append(getNumberBFramesBetweenReferenceFrames()).append(\",\");\r\n    if (getParControl() != null)\r\n        sb.append(\"ParControl: \").append(getParControl()).append(\",\");\r\n    if (getParDenominator() != null)\r\n        sb.append(\"ParDenominator: \").append(getParDenominator()).append(\",\");\r\n    if (getParNumerator() != null)\r\n        sb.append(\"ParNumerator: \").append(getParNumerator()).append(\",\");\r\n    if (getQualityTuningLevel() != null)\r\n        sb.append(\"QualityTuningLevel: \").append(getQualityTuningLevel()).append(\",\");\r\n    if (getRateControlMode() != null)\r\n        sb.append(\"RateControlMode: \").append(getRateControlMode()).append(\",\");\r\n    if (getSceneChangeDetect() != null)\r\n        sb.append(\"SceneChangeDetect: \").append(getSceneChangeDetect()).append(\",\");\r\n    if (getSlowPal() != null)\r\n        sb.append(\"SlowPal: \").append(getSlowPal()).append(\",\");\r\n    if (getSoftness() != null)\r\n        sb.append(\"Softness: \").append(getSoftness()).append(\",\");\r\n    if (getSpatialAdaptiveQuantization() != null)\r\n        sb.append(\"SpatialAdaptiveQuantization: \").append(getSpatialAdaptiveQuantization()).append(\",\");\r\n    if (getSyntax() != null)\r\n        sb.append(\"Syntax: \").append(getSyntax()).append(\",\");\r\n    if (getTelecine() != null)\r\n        sb.append(\"Telecine: \").append(getTelecine()).append(\",\");\r\n    if (getTemporalAdaptiveQuantization() != null)\r\n        sb.append(\"TemporalAdaptiveQuantization: \").append(getTemporalAdaptiveQuantization());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.ListDiscoveredResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getDiscoveredResourceList() != null)\r\n        sb.append(\"DiscoveredResourceList: \").append(getDiscoveredResourceList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.AddRoleToDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.StopQueryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccess() != null)\r\n        sb.append(\"Success: \").append(getSuccess());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.RemixSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelMapping() != null)\r\n        sb.append(\"ChannelMapping: \").append(getChannelMapping()).append(\",\");\r\n    if (getChannelsIn() != null)\r\n        sb.append(\"ChannelsIn: \").append(getChannelsIn()).append(\",\");\r\n    if (getChannelsOut() != null)\r\n        sb.append(\"ChannelsOut: \").append(getChannelsOut());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ChannelEgressEndpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceIp() != null)\r\n        sb.append(\"SourceIp: \").append(getSourceIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeLayersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId()).append(\",\");\r\n    if (getLayerIds() != null)\r\n        sb.append(\"LayerIds: \").append(getLayerIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeDBClusterSnapshotAttributes",
	"Comment": "returns a list of db cluster snapshot attribute names and values for a manual db cluster snapshot.when sharing snapshots with other aws accounts, describedbclustersnapshotattributes returns therestore attribute and a list of ids for the aws accounts that are authorized to copy or restore themanual db cluster snapshot. if all is included in the list of values for the restoreattribute, then the manual db cluster snapshot is public and can be copied or restored by all aws accounts.to add or remove access for an aws account to copy or restore a manual db cluster snapshot, or to make the manualdb cluster snapshot public or private, use the modifydbclustersnapshotattribute api action.",
	"Method": "DBClusterSnapshotAttributesResult describeDBClusterSnapshotAttributes(DescribeDBClusterSnapshotAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBClusterSnapshotAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.BurnInDestinationSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlignment() != null)\r\n        sb.append(\"Alignment: \").append(getAlignment()).append(\",\");\r\n    if (getBackgroundColor() != null)\r\n        sb.append(\"BackgroundColor: \").append(getBackgroundColor()).append(\",\");\r\n    if (getBackgroundOpacity() != null)\r\n        sb.append(\"BackgroundOpacity: \").append(getBackgroundOpacity()).append(\",\");\r\n    if (getFont() != null)\r\n        sb.append(\"Font: \").append(getFont()).append(\",\");\r\n    if (getFontColor() != null)\r\n        sb.append(\"FontColor: \").append(getFontColor()).append(\",\");\r\n    if (getFontOpacity() != null)\r\n        sb.append(\"FontOpacity: \").append(getFontOpacity()).append(\",\");\r\n    if (getFontResolution() != null)\r\n        sb.append(\"FontResolution: \").append(getFontResolution()).append(\",\");\r\n    if (getFontSize() != null)\r\n        sb.append(\"FontSize: \").append(getFontSize()).append(\",\");\r\n    if (getOutlineColor() != null)\r\n        sb.append(\"OutlineColor: \").append(getOutlineColor()).append(\",\");\r\n    if (getOutlineSize() != null)\r\n        sb.append(\"OutlineSize: \").append(getOutlineSize()).append(\",\");\r\n    if (getShadowColor() != null)\r\n        sb.append(\"ShadowColor: \").append(getShadowColor()).append(\",\");\r\n    if (getShadowOpacity() != null)\r\n        sb.append(\"ShadowOpacity: \").append(getShadowOpacity()).append(\",\");\r\n    if (getShadowXOffset() != null)\r\n        sb.append(\"ShadowXOffset: \").append(getShadowXOffset()).append(\",\");\r\n    if (getShadowYOffset() != null)\r\n        sb.append(\"ShadowYOffset: \").append(getShadowYOffset()).append(\",\");\r\n    if (getTeletextGridControl() != null)\r\n        sb.append(\"TeletextGridControl: \").append(getTeletextGridControl()).append(\",\");\r\n    if (getXPosition() != null)\r\n        sb.append(\"XPosition: \").append(getXPosition()).append(\",\");\r\n    if (getYPosition() != null)\r\n        sb.append(\"YPosition: \").append(getYPosition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.getHIT",
	"Comment": "the gethit operation retrieves the details of the specified hit.",
	"Method": "GetHITResult getHIT(GetHITRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetHIT(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.AmazonMQClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonmq using the current builder configuration.",
	"Method": "AmazonMQ build(AwsSyncClientParams params){\r\n    return new AmazonMQClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetQualificationTypeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQualificationTypeId() != null)\r\n        sb.append(\"QualificationTypeId: \").append(getQualificationTypeId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.AWSMigrationHubClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.PutSubscriptionFilterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.CreateStackResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.rejectAssignment",
	"Comment": "the rejectassignment operation rejects the results of a completed assignment.you can include an optional feedback message with the rejection, which the worker can see in the status sectionof the web site. when you include a feedback message with the rejection, it helps the worker understand why theassignment was rejected, and can improve the quality of the results the worker submits in the future.only the requester who created the hit can reject an assignment for the hit.",
	"Method": "RejectAssignmentResult rejectAssignment(RejectAssignmentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRejectAssignment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DeleteLogGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.DvbSubSourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPid() != null)\r\n        sb.append(\"Pid: \").append(getPid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.RotateIngestEndpointCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIngestEndpointId() != null)\r\n        sb.append(\"IngestEndpointId: \").append(getIngestEndpointId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.DeleteOriginEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectClient.listEntitlements",
	"Comment": "displays a list of all entitlements that have been granted to this account. this request returns 20 results perpage.",
	"Method": "ListEntitlementsResult listEntitlements(ListEntitlementsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListEntitlements(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetAssignmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssignment() != null)\r\n        sb.append(\"Assignment: \").append(getAssignment()).append(\",\");\r\n    if (getHIT() != null)\r\n        sb.append(\"HIT: \").append(getHIT());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.ValidDBInstanceModificationsMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStorage() != null)\r\n        sb.append(\"Storage: \").append(getStorage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.MediaConnectFlow.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.DashIsoEncryptionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpekeKeyProvider() != null)\r\n        sb.append(\"SpekeKeyProvider: \").append(getSpekeKeyProvider());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.ListWorkerBlocksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getNumResults() != null)\r\n        sb.append(\"NumResults: \").append(getNumResults()).append(\",\");\r\n    if (getWorkerBlocks() != null)\r\n        sb.append(\"WorkerBlocks: \").append(getWorkerBlocks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.PendingModifiedValues.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getCACertificateIdentifier() != null)\r\n        sb.append(\"CACertificateIdentifier: \").append(getCACertificateIdentifier()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getPendingCloudwatchLogsExports() != null)\r\n        sb.append(\"PendingCloudwatchLogsExports: \").append(getPendingCloudwatchLogsExports());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ListOfferingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getOfferings() != null)\r\n        sb.append(\"Offerings: \").append(getOfferings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.opensdk.config.ProxyConfiguration.nonProxyHosts",
	"Comment": "set the optional hosts the client will access without goingthrough the proxy.",
	"Method": "ProxyConfiguration nonProxyHosts(String nonProxyHosts){\r\n    setNonProxyHosts(nonProxyHosts);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplaceentitlement.AWSMarketplaceEntitlementClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.StartQueryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getQueryString() != null)\r\n        sb.append(\"QueryString: \").append(getQueryString()).append(\",\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.DisassociateQualificationFromWorkerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeStackProvisioningParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStackId() != null)\r\n        sb.append(\"StackId: \").append(getStackId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworkscm.model.EngineAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.AWSOrganizationsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DeleteDBClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeRdsDbInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRdsDbInstances() != null)\r\n        sb.append(\"RdsDbInstances: \").append(getRdsDbInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetCampaignVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCampaignResponse() != null)\r\n        sb.append(\"CampaignResponse: \").append(getCampaignResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.macie.AmazonMacieClient.listMemberAccounts",
	"Comment": "lists all amazon macie member accounts for the current amazon macie master account.",
	"Method": "ListMemberAccountsResult listMemberAccounts(ListMemberAccountsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListMemberAccounts(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.AudioSelector.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomLanguageCode() != null)\r\n        sb.append(\"CustomLanguageCode: \").append(getCustomLanguageCode()).append(\",\");\r\n    if (getDefaultSelection() != null)\r\n        sb.append(\"DefaultSelection: \").append(getDefaultSelection()).append(\",\");\r\n    if (getExternalAudioFileInput() != null)\r\n        sb.append(\"ExternalAudioFileInput: \").append(getExternalAudioFileInput()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getOffset() != null)\r\n        sb.append(\"Offset: \").append(getOffset()).append(\",\");\r\n    if (getPids() != null)\r\n        sb.append(\"Pids: \").append(getPids()).append(\",\");\r\n    if (getProgramSelection() != null)\r\n        sb.append(\"ProgramSelection: \").append(getProgramSelection()).append(\",\");\r\n    if (getRemixSettings() != null)\r\n        sb.append(\"RemixSettings: \").append(getRemixSettings()).append(\",\");\r\n    if (getSelectorType() != null)\r\n        sb.append(\"SelectorType: \").append(getSelectorType()).append(\",\");\r\n    if (getTracks() != null)\r\n        sb.append(\"Tracks: \").append(getTracks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.ChannelMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutputChannels() != null)\r\n        sb.append(\"OutputChannels: \").append(getOutputChannels());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSSandboxChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate()).append(\",\");\r\n    if (getDefaultAuthenticationMethod() != null)\r\n        sb.append(\"DefaultAuthenticationMethod: \").append(getDefaultAuthenticationMethod()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getPrivateKey() != null)\r\n        sb.append(\"PrivateKey: \").append(getPrivateKey()).append(\",\");\r\n    if (getTeamId() != null)\r\n        sb.append(\"TeamId: \").append(getTeamId()).append(\",\");\r\n    if (getTokenKey() != null)\r\n        sb.append(\"TokenKey: \").append(getTokenKey()).append(\",\");\r\n    if (getTokenKeyId() != null)\r\n        sb.append(\"TokenKeyId: \").append(getTokenKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.RevokeFlowEntitlementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntitlementArn() != null)\r\n        sb.append(\"EntitlementArn: \").append(getEntitlementArn()).append(\",\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.GetPresetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPreset() != null)\r\n        sb.append(\"Preset: \").append(getPreset());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DBClusterMember.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getIsClusterWriter() != null)\r\n        sb.append(\"IsClusterWriter: \").append(getIsClusterWriter()).append(\",\");\r\n    if (getDBClusterParameterGroupStatus() != null)\r\n        sb.append(\"DBClusterParameterGroupStatus: \").append(getDBClusterParameterGroupStatus()).append(\",\");\r\n    if (getPromotionTier() != null)\r\n        sb.append(\"PromotionTier: \").append(getPromotionTier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeEngineDefaultParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.SpekeKeyProvider.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getSystemIds() != null)\r\n        sb.append(\"SystemIds: \").append(getSystemIds()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetSegmentExportJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getToken() != null)\r\n        sb.append(\"Token: \").append(getToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DescribeTimeBasedAutoScalingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceIds() != null)\r\n        sb.append(\"InstanceIds: \").append(getInstanceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.BaiduChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApiKey() != null)\r\n        sb.append(\"ApiKey: \").append(getApiKey()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getSecretKey() != null)\r\n        sb.append(\"SecretKey: \").append(getSecretKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.GetUserEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointsResponse() != null)\r\n        sb.append(\"EndpointsResponse: \").append(getEndpointsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.ChannelsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannels() != null)\r\n        sb.append(\"Channels: \").append(getChannels());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.AmazonMachineLearningClient.getBatchPrediction",
	"Comment": "returns a batchprediction that includes detailed metadata, status, and data file information for abatch prediction request.",
	"Method": "GetBatchPredictionResult getBatchPrediction(GetBatchPredictionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetBatchPrediction(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.GetHITResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHIT() != null)\r\n        sb.append(\"HIT: \").append(getHIT());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.M2tsSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioBufferModel() != null)\r\n        sb.append(\"AudioBufferModel: \").append(getAudioBufferModel()).append(\",\");\r\n    if (getAudioFramesPerPes() != null)\r\n        sb.append(\"AudioFramesPerPes: \").append(getAudioFramesPerPes()).append(\",\");\r\n    if (getAudioPids() != null)\r\n        sb.append(\"AudioPids: \").append(getAudioPids()).append(\",\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getBufferModel() != null)\r\n        sb.append(\"BufferModel: \").append(getBufferModel()).append(\",\");\r\n    if (getDvbNitSettings() != null)\r\n        sb.append(\"DvbNitSettings: \").append(getDvbNitSettings()).append(\",\");\r\n    if (getDvbSdtSettings() != null)\r\n        sb.append(\"DvbSdtSettings: \").append(getDvbSdtSettings()).append(\",\");\r\n    if (getDvbSubPids() != null)\r\n        sb.append(\"DvbSubPids: \").append(getDvbSubPids()).append(\",\");\r\n    if (getDvbTdtSettings() != null)\r\n        sb.append(\"DvbTdtSettings: \").append(getDvbTdtSettings()).append(\",\");\r\n    if (getDvbTeletextPid() != null)\r\n        sb.append(\"DvbTeletextPid: \").append(getDvbTeletextPid()).append(\",\");\r\n    if (getEbpAudioInterval() != null)\r\n        sb.append(\"EbpAudioInterval: \").append(getEbpAudioInterval()).append(\",\");\r\n    if (getEbpPlacement() != null)\r\n        sb.append(\"EbpPlacement: \").append(getEbpPlacement()).append(\",\");\r\n    if (getEsRateInPes() != null)\r\n        sb.append(\"EsRateInPes: \").append(getEsRateInPes()).append(\",\");\r\n    if (getFragmentTime() != null)\r\n        sb.append(\"FragmentTime: \").append(getFragmentTime()).append(\",\");\r\n    if (getMaxPcrInterval() != null)\r\n        sb.append(\"MaxPcrInterval: \").append(getMaxPcrInterval()).append(\",\");\r\n    if (getMinEbpInterval() != null)\r\n        sb.append(\"MinEbpInterval: \").append(getMinEbpInterval()).append(\",\");\r\n    if (getNielsenId3() != null)\r\n        sb.append(\"NielsenId3: \").append(getNielsenId3()).append(\",\");\r\n    if (getNullPacketBitrate() != null)\r\n        sb.append(\"NullPacketBitrate: \").append(getNullPacketBitrate()).append(\",\");\r\n    if (getPatInterval() != null)\r\n        sb.append(\"PatInterval: \").append(getPatInterval()).append(\",\");\r\n    if (getPcrControl() != null)\r\n        sb.append(\"PcrControl: \").append(getPcrControl()).append(\",\");\r\n    if (getPcrPid() != null)\r\n        sb.append(\"PcrPid: \").append(getPcrPid()).append(\",\");\r\n    if (getPmtInterval() != null)\r\n        sb.append(\"PmtInterval: \").append(getPmtInterval()).append(\",\");\r\n    if (getPmtPid() != null)\r\n        sb.append(\"PmtPid: \").append(getPmtPid()).append(\",\");\r\n    if (getPrivateMetadataPid() != null)\r\n        sb.append(\"PrivateMetadataPid: \").append(getPrivateMetadataPid()).append(\",\");\r\n    if (getProgramNumber() != null)\r\n        sb.append(\"ProgramNumber: \").append(getProgramNumber()).append(\",\");\r\n    if (getRateMode() != null)\r\n        sb.append(\"RateMode: \").append(getRateMode()).append(\",\");\r\n    if (getScte35Pid() != null)\r\n        sb.append(\"Scte35Pid: \").append(getScte35Pid()).append(\",\");\r\n    if (getScte35Source() != null)\r\n        sb.append(\"Scte35Source: \").append(getScte35Source()).append(\",\");\r\n    if (getSegmentationMarkers() != null)\r\n        sb.append(\"SegmentationMarkers: \").append(getSegmentationMarkers()).append(\",\");\r\n    if (getSegmentationStyle() != null)\r\n        sb.append(\"SegmentationStyle: \").append(getSegmentationStyle()).append(\",\");\r\n    if (getSegmentationTime() != null)\r\n        sb.append(\"SegmentationTime: \").append(getSegmentationTime()).append(\",\");\r\n    if (getTimedMetadataPid() != null)\r\n        sb.append(\"TimedMetadataPid: \").append(getTimedMetadataPid()).append(\",\");\r\n    if (getTransportStreamId() != null)\r\n        sb.append(\"TransportStreamId: \").append(getTransportStreamId()).append(\",\");\r\n    if (getVideoPid() != null)\r\n        sb.append(\"VideoPid: \").append(getVideoPid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.Scte27SourceSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPid() != null)\r\n        sb.append(\"Pid: \").append(getPid());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectClient.revokeFlowEntitlement",
	"Comment": "revokes an entitlement from a flow. once an entitlement is revoked, the content becomes unavailable to thesubscriber and the associated output is removed.",
	"Method": "RevokeFlowEntitlementResult revokeFlowEntitlement(RevokeFlowEntitlementRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRevokeFlowEntitlement(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.AWSMigrationHubAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsmigrationhubasync using the current builder configuration.",
	"Method": "AWSMigrationHubAsync build(AwsAsyncClientParams params){\r\n    return new AWSMigrationHubAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.migrationhub.model.PutResourceAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProgressUpdateStream() != null)\r\n        sb.append(\"ProgressUpdateStream: \").append(getProgressUpdateStream()).append(\",\");\r\n    if (getMigrationTaskName() != null)\r\n        sb.append(\"MigrationTaskName: \").append(getMigrationTaskName()).append(\",\");\r\n    if (getResourceAttributeList() != null)\r\n        sb.append(\"ResourceAttributeList: \").append(getResourceAttributeList()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.DeleteMLModelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMLModelId() != null)\r\n        sb.append(\"MLModelId: \").append(getMLModelId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacecommerceanalytics.model.StartSupportDataExportRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSetType() != null)\r\n        sb.append(\"DataSetType: \").append(getDataSetType()).append(\",\");\r\n    if (getFromDate() != null)\r\n        sb.append(\"FromDate: \").append(getFromDate()).append(\",\");\r\n    if (getRoleNameArn() != null)\r\n        sb.append(\"RoleNameArn: \").append(getRoleNameArn()).append(\",\");\r\n    if (getDestinationS3BucketName() != null)\r\n        sb.append(\"DestinationS3BucketName: \").append(getDestinationS3BucketName()).append(\",\");\r\n    if (getDestinationS3Prefix() != null)\r\n        sb.append(\"DestinationS3Prefix: \").append(getDestinationS3Prefix()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getCustomerDefinedValues() != null)\r\n        sb.append(\"CustomerDefinedValues: \").append(getCustomerDefinedValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.UpdateExpirationForHITResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.DeleteFlowResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mobile.AWSMobileClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.EndpointResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getChannelType() != null)\r\n        sb.append(\"ChannelType: \").append(getChannelType()).append(\",\");\r\n    if (getCohortId() != null)\r\n        sb.append(\"CohortId: \").append(getCohortId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getDemographic() != null)\r\n        sb.append(\"Demographic: \").append(getDemographic()).append(\",\");\r\n    if (getEffectiveDate() != null)\r\n        sb.append(\"EffectiveDate: \").append(getEffectiveDate()).append(\",\");\r\n    if (getEndpointStatus() != null)\r\n        sb.append(\"EndpointStatus: \").append(getEndpointStatus()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getMetrics() != null)\r\n        sb.append(\"Metrics: \").append(getMetrics()).append(\",\");\r\n    if (getOptOut() != null)\r\n        sb.append(\"OptOut: \").append(getOptOut()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.AWSPIClient.getResourceMetrics",
	"Comment": "retrieve performance insights metrics for a set of data sources, over a time period. you can provide specificdimension groups and dimensions, and provide aggregation and filtering criteria for each group.",
	"Method": "GetResourceMetricsResult getResourceMetrics(GetResourceMetricsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetResourceMetrics(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.model.DataSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.model.GrantFlowEntitlementsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEntitlements() != null)\r\n        sb.append(\"Entitlements: \").append(getEntitlements()).append(\",\");\r\n    if (getFlowArn() != null)\r\n        sb.append(\"FlowArn: \").append(getFlowArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ScheduleActionSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputSwitchSettings() != null)\r\n        sb.append(\"InputSwitchSettings: \").append(getInputSwitchSettings()).append(\",\");\r\n    if (getScte35ReturnToNetworkSettings() != null)\r\n        sb.append(\"Scte35ReturnToNetworkSettings: \").append(getScte35ReturnToNetworkSettings()).append(\",\");\r\n    if (getScte35SpliceInsertSettings() != null)\r\n        sb.append(\"Scte35SpliceInsertSettings: \").append(getScte35SpliceInsertSettings()).append(\",\");\r\n    if (getScte35TimeSignalSettings() != null)\r\n        sb.append(\"Scte35TimeSignalSettings: \").append(getScte35TimeSignalSettings()).append(\",\");\r\n    if (getStaticImageActivateSettings() != null)\r\n        sb.append(\"StaticImageActivateSettings: \").append(getStaticImageActivateSettings()).append(\",\");\r\n    if (getStaticImageDeactivateSettings() != null)\r\n        sb.append(\"StaticImageDeactivateSettings: \").append(getStaticImageDeactivateSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mq.AmazonMQClient.describeConfigurationRevision",
	"Comment": "returns the specified configuration revision for the specified configuration.",
	"Method": "DescribeConfigurationRevisionResult describeConfigurationRevision(DescribeConfigurationRevisionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeConfigurationRevision(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.DescribeEngineDefaultClusterParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.organizations.model.EnableAllFeaturesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.medialive.model.ListInputsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInputs() != null)\r\n        sb.append(\"Inputs: \").append(getInputs()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.APNSVoipChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBundleId() != null)\r\n        sb.append(\"BundleId: \").append(getBundleId()).append(\",\");\r\n    if (getCertificate() != null)\r\n        sb.append(\"Certificate: \").append(getCertificate()).append(\",\");\r\n    if (getDefaultAuthenticationMethod() != null)\r\n        sb.append(\"DefaultAuthenticationMethod: \").append(getDefaultAuthenticationMethod()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getPrivateKey() != null)\r\n        sb.append(\"PrivateKey: \").append(getPrivateKey()).append(\",\");\r\n    if (getTeamId() != null)\r\n        sb.append(\"TeamId: \").append(getTeamId()).append(\",\");\r\n    if (getTokenKey() != null)\r\n        sb.append(\"TokenKey: \").append(getTokenKey()).append(\",\");\r\n    if (getTokenKeyId() != null)\r\n        sb.append(\"TokenKeyId: \").append(getTokenKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.model.Eac3Settings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttenuationControl() != null)\r\n        sb.append(\"AttenuationControl: \").append(getAttenuationControl()).append(\",\");\r\n    if (getBitrate() != null)\r\n        sb.append(\"Bitrate: \").append(getBitrate()).append(\",\");\r\n    if (getBitstreamMode() != null)\r\n        sb.append(\"BitstreamMode: \").append(getBitstreamMode()).append(\",\");\r\n    if (getCodingMode() != null)\r\n        sb.append(\"CodingMode: \").append(getCodingMode()).append(\",\");\r\n    if (getDcFilter() != null)\r\n        sb.append(\"DcFilter: \").append(getDcFilter()).append(\",\");\r\n    if (getDialnorm() != null)\r\n        sb.append(\"Dialnorm: \").append(getDialnorm()).append(\",\");\r\n    if (getDynamicRangeCompressionLine() != null)\r\n        sb.append(\"DynamicRangeCompressionLine: \").append(getDynamicRangeCompressionLine()).append(\",\");\r\n    if (getDynamicRangeCompressionRf() != null)\r\n        sb.append(\"DynamicRangeCompressionRf: \").append(getDynamicRangeCompressionRf()).append(\",\");\r\n    if (getLfeControl() != null)\r\n        sb.append(\"LfeControl: \").append(getLfeControl()).append(\",\");\r\n    if (getLfeFilter() != null)\r\n        sb.append(\"LfeFilter: \").append(getLfeFilter()).append(\",\");\r\n    if (getLoRoCenterMixLevel() != null)\r\n        sb.append(\"LoRoCenterMixLevel: \").append(getLoRoCenterMixLevel()).append(\",\");\r\n    if (getLoRoSurroundMixLevel() != null)\r\n        sb.append(\"LoRoSurroundMixLevel: \").append(getLoRoSurroundMixLevel()).append(\",\");\r\n    if (getLtRtCenterMixLevel() != null)\r\n        sb.append(\"LtRtCenterMixLevel: \").append(getLtRtCenterMixLevel()).append(\",\");\r\n    if (getLtRtSurroundMixLevel() != null)\r\n        sb.append(\"LtRtSurroundMixLevel: \").append(getLtRtSurroundMixLevel()).append(\",\");\r\n    if (getMetadataControl() != null)\r\n        sb.append(\"MetadataControl: \").append(getMetadataControl()).append(\",\");\r\n    if (getPassthroughControl() != null)\r\n        sb.append(\"PassthroughControl: \").append(getPassthroughControl()).append(\",\");\r\n    if (getPhaseControl() != null)\r\n        sb.append(\"PhaseControl: \").append(getPhaseControl()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate()).append(\",\");\r\n    if (getStereoDownmix() != null)\r\n        sb.append(\"StereoDownmix: \").append(getStereoDownmix()).append(\",\");\r\n    if (getSurroundExMode() != null)\r\n        sb.append(\"SurroundExMode: \").append(getSurroundExMode()).append(\",\");\r\n    if (getSurroundMode() != null)\r\n        sb.append(\"SurroundMode: \").append(getSurroundMode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.model.DescribeQueriesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogGroupName() != null)\r\n        sb.append(\"LogGroupName: \").append(getLogGroupName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.DescribeOriginEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getChannelId() != null)\r\n        sb.append(\"ChannelId: \").append(getChannelId()).append(\",\");\r\n    if (getCmafPackage() != null)\r\n        sb.append(\"CmafPackage: \").append(getCmafPackage()).append(\",\");\r\n    if (getDashPackage() != null)\r\n        sb.append(\"DashPackage: \").append(getDashPackage()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsPackage() != null)\r\n        sb.append(\"HlsPackage: \").append(getHlsPackage()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getManifestName() != null)\r\n        sb.append(\"ManifestName: \").append(getManifestName()).append(\",\");\r\n    if (getMssPackage() != null)\r\n        sb.append(\"MssPackage: \").append(getMssPackage()).append(\",\");\r\n    if (getStartoverWindowSeconds() != null)\r\n        sb.append(\"StartoverWindowSeconds: \").append(getStartoverWindowSeconds()).append(\",\");\r\n    if (getTimeDelaySeconds() != null)\r\n        sb.append(\"TimeDelaySeconds: \").append(getTimeDelaySeconds()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getWhitelist() != null)\r\n        sb.append(\"Whitelist: \").append(getWhitelist());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pi.model.GetResourceMetricsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceType() != null)\r\n        sb.append(\"ServiceType: \").append(getServiceType()).append(\",\");\r\n    if (getIdentifier() != null)\r\n        sb.append(\"Identifier: \").append(getIdentifier()).append(\",\");\r\n    if (getMetricQueries() != null)\r\n        sb.append(\"MetricQueries: \").append(getMetricQueries()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getPeriodInSeconds() != null)\r\n        sb.append(\"PeriodInSeconds: \").append(getPeriodInSeconds()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.HlsEncryption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConstantInitializationVector() != null)\r\n        sb.append(\"ConstantInitializationVector: \").append(getConstantInitializationVector()).append(\",\");\r\n    if (getEncryptionMethod() != null)\r\n        sb.append(\"EncryptionMethod: \").append(getEncryptionMethod()).append(\",\");\r\n    if (getKeyRotationIntervalSeconds() != null)\r\n        sb.append(\"KeyRotationIntervalSeconds: \").append(getKeyRotationIntervalSeconds()).append(\",\");\r\n    if (getRepeatExtXKey() != null)\r\n        sb.append(\"RepeatExtXKey: \").append(getRepeatExtXKey()).append(\",\");\r\n    if (getSpekeKeyProvider() != null)\r\n        sb.append(\"SpekeKeyProvider: \").append(getSpekeKeyProvider());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.machinelearning.model.CreateDataSourceFromS3Request.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSourceId() != null)\r\n        sb.append(\"DataSourceId: \").append(getDataSourceId()).append(\",\");\r\n    if (getDataSourceName() != null)\r\n        sb.append(\"DataSourceName: \").append(getDataSourceName()).append(\",\");\r\n    if (getDataSpec() != null)\r\n        sb.append(\"DataSpec: \").append(getDataSpec()).append(\",\");\r\n    if (getComputeStatistics() != null)\r\n        sb.append(\"ComputeStatistics: \").append(getComputeStatistics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.AmazonNeptuneClient.describeDBParameterGroups",
	"Comment": "returns a list of dbparametergroup descriptions. if a dbparametergroupname isspecified, the list will contain only the description of the specified db parameter group.",
	"Method": "DescribeDBParameterGroupsResult describeDBParameterGroups(DescribeDBParameterGroupsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBParameterGroups(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.neptune.model.AddTagsToResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconnect.AWSMediaConnectClient.deleteFlow",
	"Comment": "deletes a flow. before you can delete a flow, you must stop the flow.",
	"Method": "DeleteFlowResult deleteFlow(DeleteFlowRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteFlow(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediapackage.model.DescribeChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHlsIngest() != null)\r\n        sb.append(\"HlsIngest: \").append(getHlsIngest()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.logs.AWSLogsClient.untagLogGroup",
	"Comment": "removes the specified tags from the specified log group.to list the tags for a log group, use listtagsloggroup. to add tags, use untagloggroup.",
	"Method": "UntagLogGroupResult untagLogGroup(UntagLogGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUntagLogGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.model.Locale.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCountry() != null)\r\n        sb.append(\"Country: \").append(getCountry()).append(\",\");\r\n    if (getSubdivision() != null)\r\n        sb.append(\"Subdivision: \").append(getSubdivision());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mediaconvert.AWSMediaConvertClient.getJob",
	"Comment": "retrieve the json for a specific completed transcoding job.",
	"Method": "GetJobResult getJob(GetJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.marketplacecommerceanalytics.model.GenerateDataSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSetType() != null)\r\n        sb.append(\"DataSetType: \").append(getDataSetType()).append(\",\");\r\n    if (getDataSetPublicationDate() != null)\r\n        sb.append(\"DataSetPublicationDate: \").append(getDataSetPublicationDate()).append(\",\");\r\n    if (getRoleNameArn() != null)\r\n        sb.append(\"RoleNameArn: \").append(getRoleNameArn()).append(\",\");\r\n    if (getDestinationS3BucketName() != null)\r\n        sb.append(\"DestinationS3BucketName: \").append(getDestinationS3BucketName()).append(\",\");\r\n    if (getDestinationS3Prefix() != null)\r\n        sb.append(\"DestinationS3Prefix: \").append(getDestinationS3Prefix()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getCustomerDefinedValues() != null)\r\n        sb.append(\"CustomerDefinedValues: \").append(getCustomerDefinedValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.mturk.AmazonMTurkClient.getQualificationType",
	"Comment": "the getqualificationtypeoperation retrieves information about a qualification type using its id.",
	"Method": "GetQualificationTypeResult getQualificationType(GetQualificationTypeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetQualificationType(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.mediatailor.model.ListPlaybackConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.opsworks.AWSOpsWorksAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}]