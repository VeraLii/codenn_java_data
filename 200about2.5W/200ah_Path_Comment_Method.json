[{
	"Path": "com.amazonaws.services.robomaker.model.SyncDeploymentJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.getCrossOriginConfiguration",
	"Comment": "gets the new cross origin configuration for the specified bucket.",
	"Method": "BucketCrossOriginConfiguration getCrossOriginConfiguration(){\r\n    return crossOriginConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBSnapshotAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSnapshotIdentifier() != null)\r\n        sb.append(\"DBSnapshotIdentifier: \").append(getDBSnapshotIdentifier()).append(\",\");\r\n    if (getDBSnapshotAttributes() != null)\r\n        sb.append(\"DBSnapshotAttributes: \").append(getDBSnapshotAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.SyncDeploymentJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getDeploymentConfig() != null)\r\n        sb.append(\"DeploymentConfig: \").append(getDeploymentConfig()).append(\",\");\r\n    if (getDeploymentApplicationConfigs() != null)\r\n        sb.append(\"DeploymentApplicationConfigs: \").append(getDeploymentApplicationConfigs()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.ListResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.Channel.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelName() != null)\r\n        sb.append(\"ChannelName: \").append(getChannelName()).append(\",\");\r\n    if (getDataSource() != null)\r\n        sb.append(\"DataSource: \").append(getDataSource()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getCompressionType() != null)\r\n        sb.append(\"CompressionType: \").append(getCompressionType()).append(\",\");\r\n    if (getRecordWrapperType() != null)\r\n        sb.append(\"RecordWrapperType: \").append(getRecordWrapperType()).append(\",\");\r\n    if (getInputMode() != null)\r\n        sb.append(\"InputMode: \").append(getInputMode()).append(\",\");\r\n    if (getShuffleConfig() != null)\r\n        sb.append(\"ShuffleConfig: \").append(getShuffleConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.CreateResolverRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreatorRequestId() != null)\r\n        sb.append(\"CreatorRequestId: \").append(getCreatorRequestId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRuleType() != null)\r\n        sb.append(\"RuleType: \").append(getRuleType()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getTargetIps() != null)\r\n        sb.append(\"TargetIps: \").append(getTargetIps()).append(\",\");\r\n    if (getResolverEndpointId() != null)\r\n        sb.append(\"ResolverEndpointId: \").append(getResolverEndpointId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeModelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelName() != null)\r\n        sb.append(\"ModelName: \").append(getModelName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVideoMetadata() != null)\r\n        sb.append(\"VideoMetadata: \").append(getVideoMetadata()).append(\",\");\r\n    if (getPersons() != null)\r\n        sb.append(\"Persons: \").append(getPersons());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getDBSnapshotIdentifier() != null)\r\n        sb.append(\"DBSnapshotIdentifier: \").append(getDBSnapshotIdentifier()).append(\",\");\r\n    if (getSnapshotType() != null)\r\n        sb.append(\"SnapshotType: \").append(getSnapshotType()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getIncludeShared() != null)\r\n        sb.append(\"IncludeShared: \").append(getIncludeShared()).append(\",\");\r\n    if (getIncludePublic() != null)\r\n        sb.append(\"IncludePublic: \").append(getIncludePublic()).append(\",\");\r\n    if (getDbiResourceId() != null)\r\n        sb.append(\"DbiResourceId: \").append(getDbiResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.Subnet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIdentifier() != null)\r\n        sb.append(\"SubnetIdentifier: \").append(getSubnetIdentifier()).append(\",\");\r\n    if (getSubnetAvailabilityZone() != null)\r\n        sb.append(\"SubnetAvailabilityZone: \").append(getSubnetAvailabilityZone()).append(\",\");\r\n    if (getSubnetStatus() != null)\r\n        sb.append(\"SubnetStatus: \").append(getSubnetStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.policy.conditions.S3ConditionFactory.newCannedACLCondition",
	"Comment": "constructs a new access policy condition that compares an amazon s3canned acl with the canned acl specified by an incoming request.you can use this condition to ensure that any objects uploaded to anamazon s3 bucket have a specific canned acl set.",
	"Method": "Condition newCannedACLCondition(CannedAccessControlList cannedAcl){\r\n    return new StringCondition(StringComparisonType.StringEquals, CANNED_ACL_CONDITION_KEY, cannedAcl.toString());\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeDBSnapshotAttributesAsync",
	"Comment": "simplified method form for invoking the describedbsnapshotattributes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DBSnapshotAttributesResult> describeDBSnapshotAttributesAsync(DescribeDBSnapshotAttributesRequest request,java.util.concurrent.Future<DBSnapshotAttributesResult> describeDBSnapshotAttributesAsync,DescribeDBSnapshotAttributesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBSnapshotAttributesRequest, DBSnapshotAttributesResult> asyncHandler,java.util.concurrent.Future<DBSnapshotAttributesResult> describeDBSnapshotAttributesAsync,java.util.concurrent.Future<DBSnapshotAttributesResult> describeDBSnapshotAttributesAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBSnapshotAttributesRequest, DBSnapshotAttributesResult> asyncHandler){\r\n    return describeDBSnapshotAttributesAsync(new DescribeDBSnapshotAttributesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket whoseobjects are to be listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBClusterParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerBuilder.withDisableParallelDownloads",
	"Comment": "sets the option to disable parallel downloads. by default, the value is set to false.transfermanager automatically detects and downloads a multipart objectin parallel. setting this option to true will disable parallel downloads.during parallel downloads, each part is downloaded to a temporary file, gets mergedinto the final destination file and will be deleted. these temporary files uses disk space temporarily.disable parallel downloads if your system do not have enough space to store these files during download.disabling parallel downloads might reduce performance for large files.",
	"Method": "TransferManagerBuilder withDisableParallelDownloads(Boolean disableParallelDownloads){\r\n    setDisableParallelDownloads(disableParallelDownloads);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withDestinationBucketName",
	"Comment": "sets the name of the destination bucket which will contain the new,copied object and returns this object, enabling additional method callsto be chained together.",
	"Method": "CopyObjectRequest withDestinationBucketName(String destinationBucketName){\r\n    setDestinationBucketName(destinationBucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket from which an analytics configuration is to be retrievedand returns this object for method chaining.",
	"Method": "GetBucketAnalyticsConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CopyDBClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"SourceDBClusterSnapshotIdentifier: \").append(getSourceDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getTargetDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"TargetDBClusterSnapshotIdentifier: \").append(getTargetDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getPreSignedUrl() != null)\r\n        sb.append(\"PreSignedUrl: \").append(getPreSignedUrl()).append(\",\");\r\n    if (getCopyTags() != null)\r\n        sb.append(\"CopyTags: \").append(getCopyTags()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeFleetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setStartAfter",
	"Comment": "sets the optional parameter indicating where you want amazon s3 to start the objectlisting from.this can be any key in the bucket.",
	"Method": "void setStartAfter(String startAfter){\r\n    this.startAfter = startAfter;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.KinesisFirehoseDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamRoleArn() != null)\r\n        sb.append(\"IamRoleArn: \").append(getIamRoleArn()).append(\",\");\r\n    if (getDeliveryStreamArn() != null)\r\n        sb.append(\"DeliveryStreamArn: \").append(getDeliveryStreamArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateTrafficPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicy() != null)\r\n        sb.append(\"TrafficPolicy: \").append(getTrafficPolicy()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.SendVoiceMessageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCallerId() != null)\r\n        sb.append(\"CallerId: \").append(getCallerId()).append(\",\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getDestinationPhoneNumber() != null)\r\n        sb.append(\"DestinationPhoneNumber: \").append(getDestinationPhoneNumber()).append(\",\");\r\n    if (getOriginationPhoneNumber() != null)\r\n        sb.append(\"OriginationPhoneNumber: \").append(getOriginationPhoneNumber());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeNotebookInstanceLifecycleConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceLifecycleConfigArn() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigArn: \").append(getNotebookInstanceLifecycleConfigArn()).append(\",\");\r\n    if (getNotebookInstanceLifecycleConfigName() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigName: \").append(getNotebookInstanceLifecycleConfigName()).append(\",\");\r\n    if (getOnCreate() != null)\r\n        sb.append(\"OnCreate: \").append(getOnCreate()).append(\",\");\r\n    if (getOnStart() != null)\r\n        sb.append(\"OnStart: \").append(getOnStart()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerConfiguration.setDisableParallelDownloads",
	"Comment": "sets the option to disable parallel downloads. by default, the value is set to false.transfermanager automatically detects and downloads a multipart objectin parallel. setting this option to true will disable parallel downloads.during parallel downloads, each part is downloaded to a temporary file, gets mergedinto the final destination file and will be deleted. these temporary files uses disk space temporarily.disable parallel downloads if your system do not have enough space to store these files during download.disabling parallel downloads might reduce performance for large files.",
	"Method": "void setDisableParallelDownloads(boolean disableParallelDownloads){\r\n    this.disableParallelDownloads = disableParallelDownloads;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.CheckDomainAvailabilityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailability() != null)\r\n        sb.append(\"Availability: \").append(getAvailability());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.Grant.getPermission",
	"Comment": "gets the permission being granted to the grantee by this grant.",
	"Method": "Permission getPermission(){\r\n    return permission;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose objects are to be listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.RetrieveDomainAuthCodeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.GetResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPaginationToken() != null)\r\n        sb.append(\"PaginationToken: \").append(getPaginationToken()).append(\",\");\r\n    if (getResourceTagMappingList() != null)\r\n        sb.append(\"ResourceTagMappingList: \").append(getResourceTagMappingList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAclRequest.getCannedAcl",
	"Comment": "returns the canned acl to be applied to the specified bucket when this\trequest is executed. a request can use either a custom acl or a canned\tacl, but not both.",
	"Method": "CannedAccessControlList getCannedAcl(){\r\n    return cannedAcl;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteOptionGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectLockLegalHold.withStatus",
	"Comment": "indicates whether the specified object has a legal hold in place.",
	"Method": "ObjectLockLegalHold withStatus(String status,ObjectLockLegalHold withStatus,ObjectLockLegalHoldStatus status){\r\n    this.status = status.toString();\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBSecurityGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSecurityGroupName() != null)\r\n        sb.append(\"DBSecurityGroupName: \").append(getDBSecurityGroupName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.PendingMaintenanceAction.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getAutoAppliedAfterDate() != null)\r\n        sb.append(\"AutoAppliedAfterDate: \").append(getAutoAppliedAfterDate()).append(\",\");\r\n    if (getForcedApplyDate() != null)\r\n        sb.append(\"ForcedApplyDate: \").append(getForcedApplyDate()).append(\",\");\r\n    if (getOptInStatus() != null)\r\n        sb.append(\"OptInStatus: \").append(getOptInStatus()).append(\",\");\r\n    if (getCurrentApplyDate() != null)\r\n        sb.append(\"CurrentApplyDate: \").append(getCurrentApplyDate()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.TestDNSAnswerRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getRecordName() != null)\r\n        sb.append(\"RecordName: \").append(getRecordName()).append(\",\");\r\n    if (getRecordType() != null)\r\n        sb.append(\"RecordType: \").append(getRecordType()).append(\",\");\r\n    if (getResolverIP() != null)\r\n        sb.append(\"ResolverIP: \").append(getResolverIP()).append(\",\");\r\n    if (getEDNS0ClientSubnetIP() != null)\r\n        sb.append(\"EDNS0ClientSubnetIP: \").append(getEDNS0ClientSubnetIP()).append(\",\");\r\n    if (getEDNS0ClientSubnetMask() != null)\r\n        sb.append(\"EDNS0ClientSubnetMask: \").append(getEDNS0ClientSubnetMask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.ServiceUtils.appendFile",
	"Comment": "append the data in sourcefile to destinationfile.note that the sourcefile is deleted after appending the data.",
	"Method": "void appendFile(File sourceFile,File destinationFile){\r\n    ValidationUtils.assertNotNull(destinationFile, \"destFile\");\r\n    ValidationUtils.assertNotNull(sourceFile, \"sourceFile\");\r\n    if (!FileLocks.lock(sourceFile)) {\r\n        throw new FileLockException(\"Fail to lock \" + sourceFile);\r\n    }\r\n    if (!FileLocks.lock(destinationFile)) {\r\n        throw new FileLockException(\"Fail to lock \" + destinationFile);\r\n    }\r\n    FileChannel in = null;\r\n    FileChannel out = null;\r\n    try {\r\n        in = new FileInputStream(sourceFile).getChannel();\r\n        out = new FileOutputStream(destinationFile, true).getChannel();\r\n        final long size = in.size();\r\n        final long count = 32 * MB;\r\n        long position = 0;\r\n        while (position < size) {\r\n            position += in.transferTo(position, count, out);\r\n        }\r\n    } catch (IOException e) {\r\n        throw new SdkClientException(\"Unable to append file \" + sourceFile.getAbsolutePath() + \"to destination file \" + destinationFile.getAbsolutePath() + \"\\n\" + e.getMessage(), e);\r\n    } finally {\r\n        closeQuietly(out, LOG);\r\n        closeQuietly(in, LOG);\r\n        FileLocks.unlock(sourceFile);\r\n        FileLocks.unlock(destinationFile);\r\n        try {\r\n            if (!sourceFile.delete()) {\r\n                LOG.warn(\"Failed to delete file \" + sourceFile.getAbsolutePath());\r\n            }\r\n        } catch (SecurityException exception) {\r\n            LOG.warn(\"Security manager denied delete access to file \" + sourceFile.getAbsolutePath());\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.getRules",
	"Comment": "returns the replication rules associated with this amazon s3 bucket.",
	"Method": "Map<String, ReplicationRule> getRules(){\r\n    return rules;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose website configuration is being\tretrieved, and returns this updated request object so that additional\tmethod calls can be chained together.",
	"Method": "GetBucketWebsiteConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.AWSPricingAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.UpgradeTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getAutoUpgrade() != null)\r\n        sb.append(\"AutoUpgrade: \").append(getAutoUpgrade()).append(\",\");\r\n    if (getIsMajorVersionUpgrade() != null)\r\n        sb.append(\"IsMajorVersionUpgrade: \").append(getIsMajorVersionUpgrade());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeleteRobotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.GetResolverEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpointId() != null)\r\n        sb.append(\"ResolverEndpointId: \").append(getResolverEndpointId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.waiters.HeadBucketFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking thecorresponding request and returns the corresponding result",
	"Method": "HeadBucketResult apply(HeadBucketRequest headBucketRequest){\r\n    return client.headBucket(headBucketRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.getCannedAcl",
	"Comment": "returns the canned acl to be applied to the specified object when thisrequest is executed. a request can use either a custom acl or a cannedacl, but not both.",
	"Method": "CannedAccessControlList getCannedAcl(){\r\n    return cannedAcl;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeEventCategories",
	"Comment": "displays a list of categories for all event source types, or, if specified, for a specified source type. you cansee a list of the event categories and source types in theevents topic in the amazonrds user guide.",
	"Method": "DescribeEventCategoriesResult describeEventCategories(DescribeEventCategoriesRequest request,DescribeEventCategoriesResult describeEventCategories){\r\n    return describeEventCategories(new DescribeEventCategoriesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.SnapshotSchedule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduleDefinitions() != null)\r\n        sb.append(\"ScheduleDefinitions: \").append(getScheduleDefinitions()).append(\",\");\r\n    if (getScheduleIdentifier() != null)\r\n        sb.append(\"ScheduleIdentifier: \").append(getScheduleIdentifier()).append(\",\");\r\n    if (getScheduleDescription() != null)\r\n        sb.append(\"ScheduleDescription: \").append(getScheduleDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextInvocations() != null)\r\n        sb.append(\"NextInvocations: \").append(getNextInvocations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.UpdateTrafficPolicyCommentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.TransferManagerUtils.calculateOptimalPartSize",
	"Comment": "returns the optimal part size, in bytes, for each individual part uploadin a multipart upload.",
	"Method": "long calculateOptimalPartSize(PutObjectRequest putObjectRequest,TransferManagerConfiguration configuration){\r\n    double contentLength = TransferManagerUtils.getContentLength(putObjectRequest);\r\n    double optimalPartSize = (double) contentLength / (double) MAXIMUM_UPLOAD_PARTS;\r\n    optimalPartSize = Math.ceil(optimalPartSize);\r\n    return (long) Math.max(optimalPartSize, configuration.getMinimumUploadPartSize());\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeResizeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeDeploymentJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getDeploymentConfig() != null)\r\n        sb.append(\"DeploymentConfig: \").append(getDeploymentConfig()).append(\",\");\r\n    if (getDeploymentApplicationConfigs() != null)\r\n        sb.append(\"DeploymentApplicationConfigs: \").append(getDeploymentApplicationConfigs()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getRobotDeploymentSummary() != null)\r\n        sb.append(\"RobotDeploymentSummary: \").append(getRobotDeploymentSummary());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.PropertyNameQuery.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropertyNameHint() != null)\r\n        sb.append(\"PropertyNameHint: \").append(getPropertyNameHint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.isFetchOwner",
	"Comment": "returns if fetch owner is set.the owner field is not present in listobjectsv2results by default.if this flag is set to true the owner field will be included.",
	"Method": "boolean isFetchOwner(){\r\n    return fetchOwner;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.StopDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.addPartNumberIfNotNull",
	"Comment": "adds the part number to the specified request, if partnumber is not null.",
	"Method": "void addPartNumberIfNotNull(Request<?> request,Integer partNumber){\r\n    if (partNumber != null) {\r\n        request.addParameter(\"partNumber\", partNumber.toString());\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.getStartAfter",
	"Comment": "returns optional parameter indicating where you want amazon s3 to start the objectlisting from.this can be any key in the bucket.",
	"Method": "String getStartAfter(){\r\n    return startAfter;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeDBEngineVersionsAsync",
	"Comment": "simplified method form for invoking the describedbengineversions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBEngineVersionsResult> describeDBEngineVersionsAsync(DescribeDBEngineVersionsRequest request,java.util.concurrent.Future<DescribeDBEngineVersionsResult> describeDBEngineVersionsAsync,DescribeDBEngineVersionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBEngineVersionsRequest, DescribeDBEngineVersionsResult> asyncHandler,java.util.concurrent.Future<DescribeDBEngineVersionsResult> describeDBEngineVersionsAsync,java.util.concurrent.Future<DescribeDBEngineVersionsResult> describeDBEngineVersionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBEngineVersionsRequest, DescribeDBEngineVersionsResult> asyncHandler){\r\n    return describeDBEngineVersionsAsync(new DescribeDBEngineVersionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeClusterSnapshotsAsync",
	"Comment": "simplified method form for invoking the describeclustersnapshots operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync(DescribeClusterSnapshotsRequest request,java.util.concurrent.Future<DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync,DescribeClusterSnapshotsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClusterSnapshotsRequest, DescribeClusterSnapshotsResult> asyncHandler,java.util.concurrent.Future<DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync,java.util.concurrent.Future<DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync,com.amazonaws.handlers.AsyncHandler<DescribeClusterSnapshotsRequest, DescribeClusterSnapshotsResult> asyncHandler){\r\n    return describeClusterSnapshotsAsync(new DescribeClusterSnapshotsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.SupportedOperation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationName() != null)\r\n        sb.append(\"OperationName: \").append(getOperationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeClusterSnapshotsAsync",
	"Comment": "simplified method form for invoking the describeclustersnapshots operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync(DescribeClusterSnapshotsRequest request,java.util.concurrent.Future<DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync,DescribeClusterSnapshotsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClusterSnapshotsRequest, DescribeClusterSnapshotsResult> asyncHandler,java.util.concurrent.Future<DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync,java.util.concurrent.Future<DescribeClusterSnapshotsResult> describeClusterSnapshotsAsync,com.amazonaws.handlers.AsyncHandler<DescribeClusterSnapshotsRequest, DescribeClusterSnapshotsResult> asyncHandler){\r\n    return describeClusterSnapshotsAsync(new DescribeClusterSnapshotsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.TagRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsRequest.setContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "void setContinuationToken(String continuationToken){\r\n    this.continuationToken = continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.changeTagsForResource",
	"Comment": "adds, edits, or deletes tags for a health check or a hosted zone.for information about using tags for cost allocation, see using cost allocationtags in the aws billing and cost management user guide.",
	"Method": "ChangeTagsForResourceResult changeTagsForResource(ChangeTagsForResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeChangeTagsForResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateAdmChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getADMChannelResponse() != null)\r\n        sb.append(\"ADMChannelResponse: \").append(getADMChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeAccountAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountAttributes() != null)\r\n        sb.append(\"AccountAttributes: \").append(getAccountAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.withKey",
	"Comment": "sets the key of the object involved in this request, and returns thisrequest object to enable additional method calls to be chained together.",
	"Method": "GeneratePresignedUrlRequest withKey(String key){\r\n    setKey(key);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.model.GetProductsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFormatVersion() != null)\r\n        sb.append(\"FormatVersion: \").append(getFormatVersion()).append(\",\");\r\n    if (getPriceList() != null)\r\n        sb.append(\"PriceList: \").append(getPriceList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeSimulationJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJob() != null)\r\n        sb.append(\"Job: \").append(getJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlAsyncClientBuilder.withFipsEnabled",
	"Comment": "sets the status of fips enabled endpoints for clients built with this builder. the default is to not use fipsendpoints.",
	"Method": "AWSS3ControlAsyncClientBuilder withFipsEnabled(Boolean fipsEnabled){\r\n    setFipsEnabled(fipsEnabled);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.createResolverRule",
	"Comment": "for dns queries that originate in your vpcs, specifies which resolver endpoint the queries pass through, onedomain name that you want to forward to your network, and the ip addresses of the dns resolvers in your network.",
	"Method": "CreateResolverRuleResult createResolverRule(CreateResolverRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateResolverRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.SearchResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceIdentifiers() != null)\r\n        sb.append(\"ResourceIdentifiers: \").append(getResourceIdentifiers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getQueryErrors() != null)\r\n        sb.append(\"QueryErrors: \").append(getQueryErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.AddTagsToResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.CreateResolverEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreatorRequestId() != null)\r\n        sb.append(\"CreatorRequestId: \").append(getCreatorRequestId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getDirection() != null)\r\n        sb.append(\"Direction: \").append(getDirection()).append(\",\");\r\n    if (getIpAddresses() != null)\r\n        sb.append(\"IpAddresses: \").append(getIpAddresses()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getSkipFinalClusterSnapshot() != null)\r\n        sb.append(\"SkipFinalClusterSnapshot: \").append(getSkipFinalClusterSnapshot()).append(\",\");\r\n    if (getFinalClusterSnapshotIdentifier() != null)\r\n        sb.append(\"FinalClusterSnapshotIdentifier: \").append(getFinalClusterSnapshotIdentifier()).append(\",\");\r\n    if (getFinalClusterSnapshotRetentionPeriod() != null)\r\n        sb.append(\"FinalClusterSnapshotRetentionPeriod: \").append(getFinalClusterSnapshotRetentionPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeDBSnapshotsAsync",
	"Comment": "simplified method form for invoking the describedbsnapshots operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBSnapshotsResult> describeDBSnapshotsAsync(DescribeDBSnapshotsRequest request,java.util.concurrent.Future<DescribeDBSnapshotsResult> describeDBSnapshotsAsync,DescribeDBSnapshotsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBSnapshotsRequest, DescribeDBSnapshotsResult> asyncHandler,java.util.concurrent.Future<DescribeDBSnapshotsResult> describeDBSnapshotsAsync,java.util.concurrent.Future<DescribeDBSnapshotsResult> describeDBSnapshotsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBSnapshotsRequest, DescribeDBSnapshotsResult> asyncHandler){\r\n    return describeDBSnapshotsAsync(new DescribeDBSnapshotsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.GroupFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateHostedZoneRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVPC() != null)\r\n        sb.append(\"VPC: \").append(getVPC()).append(\",\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getHostedZoneConfig() != null)\r\n        sb.append(\"HostedZoneConfig: \").append(getHostedZoneConfig()).append(\",\");\r\n    if (getDelegationSetId() != null)\r\n        sb.append(\"DelegationSetId: \").append(getDelegationSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.CopyResult.setVersionId",
	"Comment": "sets the version id of the new object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateHyperParameterTuningJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHyperParameterTuningJobName() != null)\r\n        sb.append(\"HyperParameterTuningJobName: \").append(getHyperParameterTuningJobName()).append(\",\");\r\n    if (getHyperParameterTuningJobConfig() != null)\r\n        sb.append(\"HyperParameterTuningJobConfig: \").append(getHyperParameterTuningJobConfig()).append(\",\");\r\n    if (getTrainingJobDefinition() != null)\r\n        sb.append(\"TrainingJobDefinition: \").append(getTrainingJobDefinition()).append(\",\");\r\n    if (getWarmStartConfig() != null)\r\n        sb.append(\"WarmStartConfig: \").append(getWarmStartConfig()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListSimulationJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.UpdateRobotApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withId",
	"Comment": "sets the id of this rule and returns a reference to this object formethod chaining.",
	"Method": "CORSRule withId(String id){\r\n    this.id = id;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DkimAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSigningEnabled() != null)\r\n        sb.append(\"SigningEnabled: \").append(getSigningEnabled()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getTokens() != null)\r\n        sb.append(\"Tokens: \").append(getTokens());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.GetDomainSuggestionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getSuggestionCount() != null)\r\n        sb.append(\"SuggestionCount: \").append(getSuggestionCount()).append(\",\");\r\n    if (getOnlyAvailable() != null)\r\n        sb.append(\"OnlyAvailable: \").append(getOnlyAvailable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeEventCategoriesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventCategoriesMapList() != null)\r\n        sb.append(\"EventCategoriesMapList: \").append(getEventCategoriesMapList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonrekognitionasync using the current builder configuration.",
	"Method": "AmazonRekognitionAsync build(AwsAsyncClientParams params){\r\n    return new AmazonRekognitionAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.Constants.getStreamBufferSize",
	"Comment": "returns the buffer size override if it is specified in the system property,otherwise returns the default value.",
	"Method": "int getStreamBufferSize(){\r\n    int streamBufferSize = DEFAULT_STREAM_BUFFER_SIZE;\r\n    String bufferSizeOverride = System.getProperty(SDKGlobalConfiguration.DEFAULT_S3_STREAM_BUFFER_SIZE);\r\n    if (bufferSizeOverride != null) {\r\n        try {\r\n            streamBufferSize = Integer.parseInt(bufferSizeOverride);\r\n        } catch (Exception e) {\r\n            log.warn(\"Unable to parse buffer size override from value: \" + bufferSizeOverride);\r\n        }\r\n    }\r\n    return streamBufferSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeLabelingJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabelingJobName() != null)\r\n        sb.append(\"LabelingJobName: \").append(getLabelingJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListHostedZonesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems()).append(\",\");\r\n    if (getDelegationSetId() != null)\r\n        sb.append(\"DelegationSetId: \").append(getDelegationSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getFileOffset",
	"Comment": "returns the optional offset in the specified file, at which to beginuploading data for this part. if not specified, data will be read fromthe beginning of the file.",
	"Method": "long getFileOffset(){\r\n    return fileOffset;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.StartDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.setTruncated",
	"Comment": "for internal use only. sets the truncated property forthis metrics configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setFileOffset",
	"Comment": "sets the optional offset in the specified file, at which to beginuploading data for this part. if not specified, data will be read fromthe beginning of the file.",
	"Method": "void setFileOffset(long fileOffset){\r\n    this.fileOffset = fileOffset;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerBuilder.withMinimumUploadPartSize",
	"Comment": "sets the minimum part size for upload parts. decreasing the minimum part size will causemultipart uploads to be split into a larger number of smaller parts. setting this value toolow can have a negative effect on transfer speeds since it will cause extra latency andnetwork communication for each part.",
	"Method": "TransferManagerBuilder withMinimumUploadPartSize(Long minimumUploadPartSize){\r\n    setMinimumUploadPartSize(minimumUploadPartSize);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetChangeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListReusableDelegationSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.StorageClassAnalysisDataExport.getOutputSchemaVersion",
	"Comment": "returns the version of the output schema to use when exporting data.",
	"Method": "String getOutputSchemaVersion(){\r\n    return outputSchemaVersion;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryConfiguration.setEnabled",
	"Comment": "sets the value whether the inventory is enabled or disabled.the value true indicates the inventory is enabled andfalse indicates the inventory is disabled.",
	"Method": "void setEnabled(Boolean enabled){\r\n    isEnabled = enabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.getPrefix",
	"Comment": "gets the optional prefix parameter restricting the response to keysthat begin with the specified prefix. use prefixes to separate abucket into different sets of keys, similar to how a file system organizes filesinto directories.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DeleteCollectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCollectionId() != null)\r\n        sb.append(\"CollectionId: \").append(getCollectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteEventSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonrekognition using the current builder configuration.",
	"Method": "AmazonRekognition build(AwsSyncClientParams params){\r\n    return new AmazonRekognitionClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteModelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.AcceptResourceShareInvitationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareInvitationArn() != null)\r\n        sb.append(\"ResourceShareInvitationArn: \").append(getResourceShareInvitationArn()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.addSourceIdentifierToSubscription",
	"Comment": "adds a source identifier to an existing rds event notification subscription.",
	"Method": "EventSubscription addSourceIdentifierToSubscription(AddSourceIdentifierToSubscriptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddSourceIdentifierToSubscription(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getSourceBucketName",
	"Comment": "gets the name of the bucket containing the source object to be copied.",
	"Method": "String getSourceBucketName(){\r\n    return sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withMetadataDirective",
	"Comment": "specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.",
	"Method": "CopyObjectRequest withMetadataDirective(String metadataDirective,CopyObjectRequest withMetadataDirective,MetadataDirective metadataDirective){\r\n    return withMetadataDirective(metadataDirective == null ? null : metadataDirective.toString());\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeCertificatesAsync",
	"Comment": "simplified method form for invoking the describecertificates operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCertificatesResult> describeCertificatesAsync(DescribeCertificatesRequest request,java.util.concurrent.Future<DescribeCertificatesResult> describeCertificatesAsync,DescribeCertificatesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCertificatesRequest, DescribeCertificatesResult> asyncHandler,java.util.concurrent.Future<DescribeCertificatesResult> describeCertificatesAsync,java.util.concurrent.Future<DescribeCertificatesResult> describeCertificatesAsync,com.amazonaws.handlers.AsyncHandler<DescribeCertificatesRequest, DescribeCertificatesResult> asyncHandler){\r\n    return describeCertificatesAsync(new DescribeCertificatesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.UpdateSimulationApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getSimulationSoftwareSuite() != null)\r\n        sb.append(\"SimulationSoftwareSuite: \").append(getSimulationSoftwareSuite()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getRenderingEngine() != null)\r\n        sb.append(\"RenderingEngine: \").append(getRenderingEngine()).append(\",\");\r\n    if (getCurrentRevisionId() != null)\r\n        sb.append(\"CurrentRevisionId: \").append(getCurrentRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.TrafficPolicySummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getLatestVersion() != null)\r\n        sb.append(\"LatestVersion: \").append(getLatestVersion()).append(\",\");\r\n    if (getTrafficPolicyCount() != null)\r\n        sb.append(\"TrafficPolicyCount: \").append(getTrafficPolicyCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withPartSize",
	"Comment": "sets the size of this part, in bytes, and returns this updateduploadpartrequest object so that additional method calls can be chainedtogether.",
	"Method": "UploadPartRequest withPartSize(long partSize){\r\n    this.partSize = partSize;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DesiredWeightAndCapacity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVariantName() != null)\r\n        sb.append(\"VariantName: \").append(getVariantName()).append(\",\");\r\n    if (getDesiredWeight() != null)\r\n        sb.append(\"DesiredWeight: \").append(getDesiredWeight()).append(\",\");\r\n    if (getDesiredInstanceCount() != null)\r\n        sb.append(\"DesiredInstanceCount: \").append(getDesiredInstanceCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutConfigurationSetDeliveryOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getProgressListener",
	"Comment": "returns the optional progress listener for receiving updates about objectupload status.",
	"Method": "com.amazonaws.services.s3.model.ProgressListener getProgressListener(){\r\n    ProgressListener generalProgressListener = getGeneralProgressListener();\r\n    if (generalProgressListener instanceof LegacyS3ProgressListener) {\r\n        return ((LegacyS3ProgressListener) generalProgressListener).unwrap();\r\n    } else {\r\n        return null;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CopyDBSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceDBSnapshotIdentifier() != null)\r\n        sb.append(\"SourceDBSnapshotIdentifier: \").append(getSourceDBSnapshotIdentifier()).append(\",\");\r\n    if (getTargetDBSnapshotIdentifier() != null)\r\n        sb.append(\"TargetDBSnapshotIdentifier: \").append(getTargetDBSnapshotIdentifier()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getCopyTags() != null)\r\n        sb.append(\"CopyTags: \").append(getCopyTags()).append(\",\");\r\n    if (getPreSignedUrl() != null)\r\n        sb.append(\"PreSignedUrl: \").append(getPreSignedUrl()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.SendEmailResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageId() != null)\r\n        sb.append(\"MessageId: \").append(getMessageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateHsmConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmConfigurationIdentifier() != null)\r\n        sb.append(\"HsmConfigurationIdentifier: \").append(getHsmConfigurationIdentifier()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHsmIpAddress() != null)\r\n        sb.append(\"HsmIpAddress: \").append(getHsmIpAddress()).append(\",\");\r\n    if (getHsmPartitionName() != null)\r\n        sb.append(\"HsmPartitionName: \").append(getHsmPartitionName()).append(\",\");\r\n    if (getHsmPartitionPassword() != null)\r\n        sb.append(\"HsmPartitionPassword: \").append(getHsmPartitionPassword()).append(\",\");\r\n    if (getHsmServerPublicCertificate() != null)\r\n        sb.append(\"HsmServerPublicCertificate: \").append(getHsmServerPublicCertificate()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupName() != null)\r\n        sb.append(\"ParameterGroupName: \").append(getParameterGroupName()).append(\",\");\r\n    if (getParameterGroupFamily() != null)\r\n        sb.append(\"ParameterGroupFamily: \").append(getParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ProgressDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCurrentProgress() != null)\r\n        sb.append(\"CurrentProgress: \").append(getCurrentProgress()).append(\",\");\r\n    if (getTargetResource() != null)\r\n        sb.append(\"TargetResource: \").append(getTargetResource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectLegalHoldRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "GetObjectLegalHoldRequest withRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeTransformJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransformJobName() != null)\r\n        sb.append(\"TransformJobName: \").append(getTransformJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CategoricalParameterRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateRobotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getGreengrassGroupId() != null)\r\n        sb.append(\"GreengrassGroupId: \").append(getGreengrassGroupId()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getReservedNodeOfferings() != null)\r\n        sb.append(\"ReservedNodeOfferings: \").append(getReservedNodeOfferings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClient.getResourceShares",
	"Comment": "gets the specified resource shares or all of your resource shares.",
	"Method": "GetResourceSharesResult getResourceShares(GetResourceSharesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetResourceShares(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.setPrefix",
	"Comment": "sets the optional prefix parameter restricting the response to keys thatbegin with the specified prefix.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.RotateEncryptionKeyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.getAccountLimit",
	"Comment": "gets the specified limit for the current account, for example, the maximum number of health checks that you cancreate using the account.for the default limit, see limits in the amazonroute 53 developer guide. to request a higher limit, open a case.",
	"Method": "GetAccountLimitResult getAccountLimit(GetAccountLimitRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetAccountLimit(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.getTrafficPolicyInstanceCountAsync",
	"Comment": "simplified method form for invoking the gettrafficpolicyinstancecount operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetTrafficPolicyInstanceCountResult> getTrafficPolicyInstanceCountAsync(GetTrafficPolicyInstanceCountRequest request,java.util.concurrent.Future<GetTrafficPolicyInstanceCountResult> getTrafficPolicyInstanceCountAsync,GetTrafficPolicyInstanceCountRequest request,com.amazonaws.handlers.AsyncHandler<GetTrafficPolicyInstanceCountRequest, GetTrafficPolicyInstanceCountResult> asyncHandler,java.util.concurrent.Future<GetTrafficPolicyInstanceCountResult> getTrafficPolicyInstanceCountAsync,java.util.concurrent.Future<GetTrafficPolicyInstanceCountResult> getTrafficPolicyInstanceCountAsync,com.amazonaws.handlers.AsyncHandler<GetTrafficPolicyInstanceCountRequest, GetTrafficPolicyInstanceCountResult> asyncHandler){\r\n    return getTrafficPolicyInstanceCountAsync(new GetTrafficPolicyInstanceCountRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketPolicyRequest.getBucketName",
	"Comment": "returns the name of the amazon s3 bucket whose policy is being retrieved.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.getBucketName",
	"Comment": "returns the name of the bucket containing the listed multipart uploads,as specified in the original request.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3URI.parseVersionId",
	"Comment": "attempts to parse a versionid parameter from the querystring.",
	"Method": "String parseVersionId(String query){\r\n    if (query != null) {\r\n        String[] params = VERSION_ID_PATTERN.split(query);\r\n        for (String param : params) {\r\n            if (param.startsWith(\"versionId=\")) {\r\n                return decode(param.substring(10));\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeEventCategoriesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.PersistableTransfer.deserializeFrom",
	"Comment": "returns the deserialized transfer state of the given serializedrepresentation.",
	"Method": "T deserializeFrom(InputStream in,T deserializeFrom,String serialized){\r\n    if (serialized == null)\r\n        return null;\r\n    ByteArrayInputStream byteStream = new ByteArrayInputStream(serialized.getBytes(UTF8));\r\n    try {\r\n        return deserializeFrom(byteStream);\r\n    } finally {\r\n        try {\r\n            byteStream.close();\r\n        } catch (IOException ioe) {\r\n        }\r\n        ;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteSnapshotScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getObjectMetadata",
	"Comment": "returns the additional information about the part being uploaded.",
	"Method": "ObjectMetadata getObjectMetadata(){\r\n    return objectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartETag.withETag",
	"Comment": "sets the entity tag generated from the content of the associated part,and returns this updated partetag object so that additional method callscan be chained together.",
	"Method": "PartETag withETag(String eTag){\r\n    this.eTag = eTag;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.PersistableUpload.getFile",
	"Comment": "returns the file name along with path which needs to be uploaded toamazon s3.",
	"Method": "String getFile(){\r\n    return file;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.Mimetypes.loadAndReplaceMimetypes",
	"Comment": "reads and stores the mime type setting corresponding to a file extension, by readingtext from an inputstream. if a mime type setting already exists when this method is run,the mime type value is replaced with the newer one.",
	"Method": "void loadAndReplaceMimetypes(InputStream is){\r\n    BufferedReader br = new BufferedReader(new InputStreamReader(is, StringUtils.UTF8));\r\n    String line = null;\r\n    while ((line = br.readLine()) != null) {\r\n        line = line.trim();\r\n        if (line.startsWith(\"#\") || line.length() == 0) {\r\n        } else {\r\n            StringTokenizer st = new StringTokenizer(line, \" \\t\");\r\n            if (st.countTokens() > 1) {\r\n                String mimetype = st.nextToken();\r\n                while (st.hasMoreTokens()) {\r\n                    String extension = st.nextToken();\r\n                    extensionToMimetypeMap.put(StringUtils.lowerCase(extension), mimetype);\r\n                    if (log.isDebugEnabled()) {\r\n                        log.debug(\"Setting mime type for extension '\" + StringUtils.lowerCase(extension) + \"' to '\" + mimetype + \"'\");\r\n                    }\r\n                }\r\n            } else {\r\n                if (log.isDebugEnabled()) {\r\n                    log.debug(\"Ignoring mimetype with no associated file extensions: '\" + line + \"'\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.isTruncated",
	"Comment": "returns whether or not this listing is truncated, and additional requestsneed to be made to get more results.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setObjectMetadata",
	"Comment": "sets the additional information about the part being uploaded.",
	"Method": "void setObjectMetadata(ObjectMetadata objectMetadata){\r\n    this.objectMetadata = objectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.RestoreFromClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getSnapshotClusterIdentifier() != null)\r\n        sb.append(\"SnapshotClusterIdentifier: \").append(getSnapshotClusterIdentifier()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getAllowVersionUpgrade() != null)\r\n        sb.append(\"AllowVersionUpgrade: \").append(getAllowVersionUpgrade()).append(\",\");\r\n    if (getClusterSubnetGroupName() != null)\r\n        sb.append(\"ClusterSubnetGroupName: \").append(getClusterSubnetGroupName()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getOwnerAccount() != null)\r\n        sb.append(\"OwnerAccount: \").append(getOwnerAccount()).append(\",\");\r\n    if (getHsmClientCertificateIdentifier() != null)\r\n        sb.append(\"HsmClientCertificateIdentifier: \").append(getHsmClientCertificateIdentifier()).append(\",\");\r\n    if (getHsmConfigurationIdentifier() != null)\r\n        sb.append(\"HsmConfigurationIdentifier: \").append(getHsmConfigurationIdentifier()).append(\",\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp()).append(\",\");\r\n    if (getClusterParameterGroupName() != null)\r\n        sb.append(\"ClusterParameterGroupName: \").append(getClusterParameterGroupName()).append(\",\");\r\n    if (getClusterSecurityGroups() != null)\r\n        sb.append(\"ClusterSecurityGroups: \").append(getClusterSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getAutomatedSnapshotRetentionPeriod() != null)\r\n        sb.append(\"AutomatedSnapshotRetentionPeriod: \").append(getAutomatedSnapshotRetentionPeriod()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getEnhancedVpcRouting() != null)\r\n        sb.append(\"EnhancedVpcRouting: \").append(getEnhancedVpcRouting()).append(\",\");\r\n    if (getAdditionalInfo() != null)\r\n        sb.append(\"AdditionalInfo: \").append(getAdditionalInfo()).append(\",\");\r\n    if (getIamRoles() != null)\r\n        sb.append(\"IamRoles: \").append(getIamRoles()).append(\",\");\r\n    if (getMaintenanceTrackName() != null)\r\n        sb.append(\"MaintenanceTrackName: \").append(getMaintenanceTrackName()).append(\",\");\r\n    if (getSnapshotScheduleIdentifier() != null)\r\n        sb.append(\"SnapshotScheduleIdentifier: \").append(getSnapshotScheduleIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.isTruncated",
	"Comment": "gets whether or not this inventory configuration listing is complete.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateModelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelArn() != null)\r\n        sb.append(\"ModelArn: \").append(getModelArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.CreateGroupMembershipRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberName() != null)\r\n        sb.append(\"MemberName: \").append(getMemberName()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.DisassociateResourceShareRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns()).append(\",\");\r\n    if (getPrincipals() != null)\r\n        sb.append(\"Principals: \").append(getPrincipals()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CompareFacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceImageFace() != null)\r\n        sb.append(\"SourceImageFace: \").append(getSourceImageFace()).append(\",\");\r\n    if (getFaceMatches() != null)\r\n        sb.append(\"FaceMatches: \").append(getFaceMatches()).append(\",\");\r\n    if (getUnmatchedFaces() != null)\r\n        sb.append(\"UnmatchedFaces: \").append(getUnmatchedFaces()).append(\",\");\r\n    if (getSourceImageOrientationCorrection() != null)\r\n        sb.append(\"SourceImageOrientationCorrection: \").append(getSourceImageOrientationCorrection()).append(\",\");\r\n    if (getTargetImageOrientationCorrection() != null)\r\n        sb.append(\"TargetImageOrientationCorrection: \").append(getTargetImageOrientationCorrection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getModifiedSinceConstraint",
	"Comment": "gets the optional modified constraint that restricts thisrequest to executing only if the object has beenmodified after the specified date.",
	"Method": "Date getModifiedSinceConstraint(){\r\n    return modifiedSinceConstraint;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DefaultRetention.getMode",
	"Comment": "the default object lock retention mode you want to apply to new objects placed in the specified bucket.",
	"Method": "String getMode(){\r\n    return mode;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.withNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "ListBucketAnalyticsConfigurationsResult withNextContinuationToken(String nextContinuationToken){\r\n    setNextContinuationToken(nextContinuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.setPrefix",
	"Comment": "sets the prefix to use when exporting data. the exported data begins with this prefix.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateVoiceChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getVoiceChannelRequest() != null)\r\n        sb.append(\"VoiceChannelRequest: \").append(getVoiceChannelRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.createClusterParameterGroup",
	"Comment": "creates an amazon redshift parameter group.creating parameter groups is independent of creating clusters. you can associate a cluster with a parameter groupwhen you create the cluster. you can also associate an existing cluster with a parameter group after the clusteris created by using modifycluster.parameters in the parameter group define specific behavior that applies to the databases you create on thecluster. for more information about parameters and parameter groups, go to amazon redshiftparameter groups in the amazon redshift cluster management guide.",
	"Method": "ClusterParameterGroup createClusterParameterGroup(CreateClusterParameterGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateClusterParameterGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withInputStream",
	"Comment": "sets the stream containing the data to upload for the new part, andreturns this updated object so that additional method calls can bechained together.",
	"Method": "UploadPartRequest withInputStream(InputStream inputStream){\r\n    setInputStream(inputStream);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBSubnetGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBSubnetGroups() != null)\r\n        sb.append(\"DBSubnetGroups: \").append(getDBSubnetGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.GetTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ValidDBInstanceModificationsMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStorage() != null)\r\n        sb.append(\"Storage: \").append(getStorage()).append(\",\");\r\n    if (getValidProcessorFeatures() != null)\r\n        sb.append(\"ValidProcessorFeatures: \").append(getValidProcessorFeatures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBClusterEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterEndpointIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointIdentifier: \").append(getDBClusterEndpointIdentifier()).append(\",\");\r\n    if (getEndpointType() != null)\r\n        sb.append(\"EndpointType: \").append(getEndpointType()).append(\",\");\r\n    if (getStaticMembers() != null)\r\n        sb.append(\"StaticMembers: \").append(getStaticMembers()).append(\",\");\r\n    if (getExcludedMembers() != null)\r\n        sb.append(\"ExcludedMembers: \").append(getExcludedMembers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsram using the current builder configuration.",
	"Method": "AWSRAM build(AwsSyncClientParams params){\r\n    return new AWSRAMClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withUploadId",
	"Comment": "sets the id of the existing, initiated multipart upload with which thisnew part will be associated.",
	"Method": "CopyPartRequest withUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.waiters.DescribeDBInstancesFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeDBInstancesResult apply(DescribeDBInstancesRequest describeDBInstancesRequest){\r\n    return client.describeDBInstances(describeDBInstancesRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.withProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectdownload status, and returns this updated object so that additional methodcalls can be chained together.",
	"Method": "GetObjectRequest withProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setProgressListener(progressListener);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getSSEAwsKeyManagementParams",
	"Comment": "returns the aws key management system parameters used to encrypt theobject on server side.",
	"Method": "SSEAwsKeyManagementParams getSSEAwsKeyManagementParams(){\r\n    return sseAwsKeyManagementParams;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.getKey",
	"Comment": "gets the key of the object whose metadata is being retrieved.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.VoiceMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getOriginationNumber() != null)\r\n        sb.append(\"OriginationNumber: \").append(getOriginationNumber()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions()).append(\",\");\r\n    if (getVoiceId() != null)\r\n        sb.append(\"VoiceId: \").append(getVoiceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.DeleteGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ProcessorFeature.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectLegalHoldRequest.setRequesterPays",
	"Comment": "used for downloading an amazon s3 object from a requester pays bucket. ifset the requester is charged for downloading the data from the bucket.if a bucket is enabled for requester pays, then any attempt to read anobject from it without requester pays enabled will result in a 403 errorand the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.TestDNSAnswerResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNameserver() != null)\r\n        sb.append(\"Nameserver: \").append(getNameserver()).append(\",\");\r\n    if (getRecordName() != null)\r\n        sb.append(\"RecordName: \").append(getRecordName()).append(\",\");\r\n    if (getRecordType() != null)\r\n        sb.append(\"RecordType: \").append(getRecordType()).append(\",\");\r\n    if (getRecordData() != null)\r\n        sb.append(\"RecordData: \").append(getRecordData()).append(\",\");\r\n    if (getResponseCode() != null)\r\n        sb.append(\"ResponseCode: \").append(getResponseCode()).append(\",\");\r\n    if (getProtocol() != null)\r\n        sb.append(\"Protocol: \").append(getProtocol());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.CreateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getResourceQuery() != null)\r\n        sb.append(\"ResourceQuery: \").append(getResourceQuery()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectRetentionRequest.setRetention",
	"Comment": "the container element for the object retention configuration.",
	"Method": "void setRetention(ObjectLockRetention retention){\r\n    withRetention(retention);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.RenderingError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCode() != null)\r\n        sb.append(\"Code: \").append(getCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated putobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "CopyPartRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setEncodingType",
	"Comment": "for internal use only. sets the encoding type used by amazon s3 to encodeobject key names in the xml response.",
	"Method": "void setEncodingType(String encodingType){\r\n    this.encodingType = encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotCopyGrantName() != null)\r\n        sb.append(\"SnapshotCopyGrantName: \").append(getSnapshotCopyGrantName()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.listSimulationApplications",
	"Comment": "returns a list of simulation applications. you can optionally provide filters to retrieve specific simulationapplications.",
	"Method": "ListSimulationApplicationsResult listSimulationApplications(ListSimulationApplicationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListSimulationApplications(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase.contentCryptoMaterialOf",
	"Comment": "returns the content crypto material of an existing s3 object.",
	"Method": "ContentCryptoMaterial contentCryptoMaterialOf(S3ObjectWrapper s3w){\r\n    if (s3w.hasEncryptionInfo()) {\r\n        return // existing CEK not necessarily key-wrapped\r\n        ContentCryptoMaterial.fromObjectMetadata(// existing CEK not necessarily key-wrapped\r\n        s3w.getObjectMetadata(), // existing CEK not necessarily key-wrapped\r\n        kekMaterialsProvider, // existing CEK not necessarily key-wrapped\r\n        cryptoConfig.getCryptoProvider(), cryptoConfig.getAlwaysUseCryptoProvider(), false, kms);\r\n    }\r\n    S3ObjectWrapper orig_ifile = fetchInstructionFile(s3w.getS3ObjectId(), null);\r\n    if (orig_ifile == null) {\r\n        throw new IllegalArgumentException(\"S3 object is not encrypted: \" + s3w);\r\n    }\r\n    String json = orig_ifile.toJsonString();\r\n    return ccmFromJson(json);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.RevisionTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDatabaseRevision() != null)\r\n        sb.append(\"DatabaseRevision: \").append(getDatabaseRevision()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDatabaseRevisionReleaseDate() != null)\r\n        sb.append(\"DatabaseRevisionReleaseDate: \").append(getDatabaseRevisionReleaseDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonroute53domains using the current builder configuration.",
	"Method": "AmazonRoute53Domains build(AwsSyncClientParams params){\r\n    return new AmazonRoute53DomainsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.listTrafficPolicyVersions",
	"Comment": "gets information about all of the versions for a specified traffic policy.traffic policy versions are listed in numerical order by versionnumber.",
	"Method": "ListTrafficPolicyVersionsResult listTrafficPolicyVersions(ListTrafficPolicyVersionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTrafficPolicyVersions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopCompilationJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.HsmStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmClientCertificateIdentifier() != null)\r\n        sb.append(\"HsmClientCertificateIdentifier: \").append(getHsmClientCertificateIdentifier()).append(\",\");\r\n    if (getHsmConfigurationIdentifier() != null)\r\n        sb.append(\"HsmConfigurationIdentifier: \").append(getHsmConfigurationIdentifier()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.getKey",
	"Comment": "returns the object key for which the multipart upload was initiated.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateCampaignRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCampaignId() != null)\r\n        sb.append(\"CampaignId: \").append(getCampaignId()).append(\",\");\r\n    if (getWriteCampaignRequest() != null)\r\n        sb.append(\"WriteCampaignRequest: \").append(getWriteCampaignRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListEndpointConfigsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBSnapshots",
	"Comment": "returns information about db snapshots. this api action supports pagination.",
	"Method": "DescribeDBSnapshotsResult describeDBSnapshots(DescribeDBSnapshotsRequest request,DescribeDBSnapshotsResult describeDBSnapshots){\r\n    return describeDBSnapshots(new DescribeDBSnapshotsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CancelSimulationJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJob() != null)\r\n        sb.append(\"Job: \").append(getJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreatePresignedNotebookInstanceUrlRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceName() != null)\r\n        sb.append(\"NotebookInstanceName: \").append(getNotebookInstanceName()).append(\",\");\r\n    if (getSessionExpirationDurationInSeconds() != null)\r\n        sb.append(\"SessionExpirationDurationInSeconds: \").append(getSessionExpirationDurationInSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.retrieveDomainAuthCode",
	"Comment": "this operation returns the authcode for the domain. to transfer a domain to another registrar, you provide thisvalue to the new registrar.",
	"Method": "RetrieveDomainAuthCodeResult retrieveDomainAuthCode(RetrieveDomainAuthCodeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRetrieveDomainAuthCode(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.deleteDBSnapshot",
	"Comment": "deletes a db snapshot. if the snapshot is being copied, the copy operation is terminated.the db snapshot must be in the available state to be deleted.",
	"Method": "DBSnapshot deleteDBSnapshot(DeleteDBSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDBSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.setKey",
	"Comment": "sets the key, the name of the reference to the object to restore, whichis now stored in amazon glacier.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.GroupIdentifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getGroupArn() != null)\r\n        sb.append(\"GroupArn: \").append(getGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CSVInput.withComments",
	"Comment": "sets the single character used to indicate a row should be ignored when present at the start of a row.",
	"Method": "CSVInput withComments(String comments,CSVInput withComments,Character comments){\r\n    setComments(comments);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.AssociateVPCWithHostedZoneRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getVPC() != null)\r\n        sb.append(\"VPC: \").append(getVPC()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListVPCAssociationAuthorizationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getVPCs() != null)\r\n        sb.append(\"VPCs: \").append(getVPCs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.setSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "void setSSEAwsKeyManagementParams(SSEAwsKeyManagementParams params){\r\n    if (params != null && this.sseCustomerKey != null) {\r\n        throw new IllegalArgumentException(\"Either SSECustomerKey or SSEAwsKeyManagementParams must not be set at the same time.\");\r\n    }\r\n    this.sseAwsKeyManagementParams = params;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTrafficPolicyInstancesByPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicyId() != null)\r\n        sb.append(\"TrafficPolicyId: \").append(getTrafficPolicyId()).append(\",\");\r\n    if (getTrafficPolicyVersion() != null)\r\n        sb.append(\"TrafficPolicyVersion: \").append(getTrafficPolicyVersion()).append(\",\");\r\n    if (getHostedZoneIdMarker() != null)\r\n        sb.append(\"HostedZoneIdMarker: \").append(getHostedZoneIdMarker()).append(\",\");\r\n    if (getTrafficPolicyInstanceNameMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceNameMarker: \").append(getTrafficPolicyInstanceNameMarker()).append(\",\");\r\n    if (getTrafficPolicyInstanceTypeMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceTypeMarker: \").append(getTrafficPolicyInstanceTypeMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.getKey",
	"Comment": "returns the key under which the multipart upload to complete is stored.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.AmazonPinpointSMSVoiceAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonpinpointsmsvoiceasync using the current builder configuration.",
	"Method": "AmazonPinpointSMSVoiceAsync build(AwsAsyncClientParams params){\r\n    return new AmazonPinpointSMSVoiceAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.listSubscribedWorkteams",
	"Comment": "gets a list of the work teams that you are subscribed to in the aws marketplace. the list may be empty if no workteam satisfies the filter specified in the namecontains parameter.",
	"Method": "ListSubscribedWorkteamsResult listSubscribedWorkteams(ListSubscribedWorkteamsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListSubscribedWorkteams(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeOrderableDBInstanceOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrderableDBInstanceOptions() != null)\r\n        sb.append(\"OrderableDBInstanceOptions: \").append(getOrderableDBInstanceOptions()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.AmazonS3ExceptionBuilder.getAdditionalDetails",
	"Comment": "returns any additional information retrieved in the error response.",
	"Method": "Map<String, String> getAdditionalDetails(){\r\n    return additionalDetails;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ChangeResourceRecordSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getChangeBatch() != null)\r\n        sb.append(\"ChangeBatch: \").append(getChangeBatch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStreamProcessorArn() != null)\r\n        sb.append(\"StreamProcessorArn: \").append(getStreamProcessorArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Landmark.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getX() != null)\r\n        sb.append(\"X: \").append(getX()).append(\",\");\r\n    if (getY() != null)\r\n        sb.append(\"Y: \").append(getY());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteTrafficPolicyInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsRequest.getContinuationToken",
	"Comment": "gets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "String getContinuationToken(){\r\n    return continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.CryptoRuntime.recheck",
	"Comment": "used only for unit test when the same class loader is used acrossmultiple unit tests.",
	"Method": "void recheck(boolean recheck,boolean recheck){\r\n    recheckAesGcmAvailablility();\r\n    recheckRsaKeyWrapAvailablility();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.RecurringCharge.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecurringChargeAmount() != null)\r\n        sb.append(\"RecurringChargeAmount: \").append(getRecurringChargeAmount()).append(\",\");\r\n    if (getRecurringChargeFrequency() != null)\r\n        sb.append(\"RecurringChargeFrequency: \").append(getRecurringChargeFrequency());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.modifyDBClusterEndpoint",
	"Comment": "modifies the properties of an endpoint in an amazon aurora db cluster.",
	"Method": "ModifyDBClusterEndpointResult modifyDBClusterEndpoint(ModifyDBClusterEndpointRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyDBClusterEndpoint(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.setSourceSelectionCriteria",
	"Comment": "sets the container for filters that define which source objects should be replicated.",
	"Method": "void setSourceSelectionCriteria(SourceSelectionCriteria sourceSelectionCriteria){\r\n    this.sourceSelectionCriteria = sourceSelectionCriteria;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.PromoteReadReplicaDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketPolicyRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being retrieved.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setBucketName",
	"Comment": "sets the name of the bucket containing the listed multipart uploads, asspecified in the original request.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeModelPackageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelPackageName() != null)\r\n        sb.append(\"ModelPackageName: \").append(getModelPackageName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DisassociateVPCFromHostedZoneRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getVPC() != null)\r\n        sb.append(\"VPC: \").append(getVPC()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awss3controlasync using the current builder configuration.",
	"Method": "AWSS3ControlAsync build(AwsAsyncClientParams params){\r\n    return new AWSS3ControlAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateBaiduChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBaiduChannelResponse() != null)\r\n        sb.append(\"BaiduChannelResponse: \").append(getBaiduChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.TransferManagerUtils.createDefaultExecutorService",
	"Comment": "returns a new thread pool configured with the default settings.",
	"Method": "ThreadPoolExecutor createDefaultExecutorService(){\r\n    ThreadFactory threadFactory = new ThreadFactory() {\r\n        private int threadCount = 1;\r\n        public Thread newThread(Runnable r) {\r\n            Thread thread = new Thread(r);\r\n            thread.setName(\"s3-transfer-manager-worker-\" + threadCount++);\r\n            return thread;\r\n        }\r\n    };\r\n    return (ThreadPoolExecutor) Executors.newFixedThreadPool(10, threadFactory);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.TransferManagerUtils.createDefaultExecutorService",
	"Comment": "returns a new thread pool configured with the default settings.",
	"Method": "ThreadPoolExecutor createDefaultExecutorService(){\r\n    Thread thread = new Thread(r);\r\n    thread.setName(\"s3-transfer-manager-worker-\" + threadCount++);\r\n    return thread;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeRobotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRobot() != null)\r\n        sb.append(\"Robot: \").append(getRobot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.HealthCheck.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getLinkedService() != null)\r\n        sb.append(\"LinkedService: \").append(getLinkedService()).append(\",\");\r\n    if (getHealthCheckConfig() != null)\r\n        sb.append(\"HealthCheckConfig: \").append(getHealthCheckConfig()).append(\",\");\r\n    if (getHealthCheckVersion() != null)\r\n        sb.append(\"HealthCheckVersion: \").append(getHealthCheckVersion()).append(\",\");\r\n    if (getCloudWatchAlarmConfiguration() != null)\r\n        sb.append(\"CloudWatchAlarmConfiguration: \").append(getCloudWatchAlarmConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.waiters.AmazonS3Waiters.objectNotExists",
	"Comment": "builds a objectnotexists waiter by using custom parameterswaiterparameters and other parameters defined in the waitersspecification, and then polls until it determines whether the resourceentered the desired state or not, where polling criteria is bound byeither default polling strategy or custom polling strategy.",
	"Method": "Waiter<GetObjectMetadataRequest> objectNotExists(){\r\n    return new WaiterBuilder<GetObjectMetadataRequest, ObjectMetadata>().withSdkFunction(new HeadObjectFunction(client)).withAcceptors(new HttpFailureStatusAcceptor<ObjectMetadata>(404, WaiterState.SUCCESS)).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(20), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsAsyncClient.listDomainsAsync",
	"Comment": "simplified method form for invoking the listdomains operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListDomainsResult> listDomainsAsync(ListDomainsRequest request,java.util.concurrent.Future<ListDomainsResult> listDomainsAsync,ListDomainsRequest request,com.amazonaws.handlers.AsyncHandler<ListDomainsRequest, ListDomainsResult> asyncHandler,java.util.concurrent.Future<ListDomainsResult> listDomainsAsync,java.util.concurrent.Future<ListDomainsResult> listDomainsAsync,com.amazonaws.handlers.AsyncHandler<ListDomainsRequest, ListDomainsResult> asyncHandler){\r\n    return listDomainsAsync(new ListDomainsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.GetTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectSummary.setLastModified",
	"Comment": "sets the date, according to amazon s3, this objectwas last modified.",
	"Method": "void setLastModified(Date lastModified){\r\n    this.lastModified = lastModified;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.waiters.AmazonS3Waiters.bucketNotExists",
	"Comment": "builds a bucketnotexists waiter by using custom parameterswaiterparameters and other parameters defined in the waitersspecification, and then polls until it determines whether the resourceentered the desired state or not, where polling criteria is bound byeither default polling strategy or custom polling strategy.",
	"Method": "Waiter<HeadBucketRequest> bucketNotExists(){\r\n    return new WaiterBuilder<HeadBucketRequest, HeadBucketResult>().withSdkFunction(new HeadBucketFunction(client)).withAcceptors(new HttpFailureStatusAcceptor<HeadBucketResult>(404, WaiterState.SUCCESS)).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(20), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DefaultRetention.withMode",
	"Comment": "the default object lock retention mode you want to apply to new objects placed in the specified bucket.",
	"Method": "DefaultRetention withMode(String mode,DefaultRetention withMode,ObjectLockRetentionMode mode){\r\n    return withMode(mode.toString());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.withQuiet",
	"Comment": "sets the quiet element for this request. when true, only errors will bereturned in the service response.",
	"Method": "DeleteObjectsRequest withQuiet(boolean quiet){\r\n    this.setQuiet(quiet);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectLockConfigurationRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "SetObjectLockConfigurationRequest withRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.getMaxUploads",
	"Comment": "returns the optional maximum number of uploads to be listed, as specifiedin the original request.",
	"Method": "int getMaxUploads(){\r\n    return maxUploads;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.withAccount",
	"Comment": "sets the account id of the destination bucket. this is only being verified if access control translation is enabled.",
	"Method": "ReplicationDestinationConfig withAccount(String account){\r\n    setAccount(account);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.ResourceQuery.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getQuery() != null)\r\n        sb.append(\"Query: \").append(getQuery());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterParameterGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteHsmConfigurationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmConfigurationIdentifier() != null)\r\n        sb.append(\"HsmConfigurationIdentifier: \").append(getHsmConfigurationIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.VPCConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getAssignPublicIp() != null)\r\n        sb.append(\"AssignPublicIp: \").append(getAssignPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.S3ProgressPublisher.publishTransferPersistable",
	"Comment": "used to deliver a persistable transfer to the given s3 listener.",
	"Method": "Future<?> publishTransferPersistable(ProgressListener listener,PersistableTransfer persistableTransfer){\r\n    if (persistableTransfer == null || !(listener instanceof S3ProgressListener)) {\r\n        return null;\r\n    }\r\n    final S3ProgressListener s3listener = (S3ProgressListener) listener;\r\n    return deliverEvent(s3listener, persistableTransfer);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterVersion() != null)\r\n        sb.append(\"ClusterVersion: \").append(getClusterVersion()).append(\",\");\r\n    if (getClusterParameterGroupFamily() != null)\r\n        sb.append(\"ClusterParameterGroupFamily: \").append(getClusterParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ChannelSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getIsRequired() != null)\r\n        sb.append(\"IsRequired: \").append(getIsRequired()).append(\",\");\r\n    if (getSupportedContentTypes() != null)\r\n        sb.append(\"SupportedContentTypes: \").append(getSupportedContentTypes()).append(\",\");\r\n    if (getSupportedCompressionTypes() != null)\r\n        sb.append(\"SupportedCompressionTypes: \").append(getSupportedCompressionTypes()).append(\",\");\r\n    if (getSupportedInputModes() != null)\r\n        sb.append(\"SupportedInputModes: \").append(getSupportedInputModes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeTrainingJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJobName() != null)\r\n        sb.append(\"TrainingJobName: \").append(getTrainingJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withKey",
	"Comment": "sets the key of the initiated multipart upload, and returns this updatedobject so that additional method calls can be chained together.",
	"Method": "UploadPartRequest withKey(String key){\r\n    this.key = key;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsSandboxChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSSandboxChannelResponse() != null)\r\n        sb.append(\"APNSSandboxChannelResponse: \").append(getAPNSSandboxChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyOptionGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getOptionsToInclude() != null)\r\n        sb.append(\"OptionsToInclude: \").append(getOptionsToInclude()).append(\",\");\r\n    if (getOptionsToRemove() != null)\r\n        sb.append(\"OptionsToRemove: \").append(getOptionsToRemove()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CloudFunctionConfiguration.getInvocationRoleARN",
	"Comment": "returns the invocation role associated with this configuration.",
	"Method": "String getInvocationRoleARN(){\r\n    return invocationRoleARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateSimulationApplicationVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getCurrentRevisionId() != null)\r\n        sb.append(\"CurrentRevisionId: \").append(getCurrentRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterParameterGroupStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupName() != null)\r\n        sb.append(\"ParameterGroupName: \").append(getParameterGroupName()).append(\",\");\r\n    if (getParameterApplyStatus() != null)\r\n        sb.append(\"ParameterApplyStatus: \").append(getParameterApplyStatus()).append(\",\");\r\n    if (getClusterParameterStatusList() != null)\r\n        sb.append(\"ClusterParameterStatusList: \").append(getClusterParameterStatusList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateAlgorithmResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithmArn() != null)\r\n        sb.append(\"AlgorithmArn: \").append(getAlgorithmArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.createConfigurationSet",
	"Comment": "create a configuration set. configuration sets are groups of rules that you can apply to the emails yousend using amazon pinpoint. you apply a configuration set to an email by including a reference to theconfiguration set in the headers of the email. when you apply a configuration set to an email, all of the rulesin that configuration set are applied to the email.",
	"Method": "CreateConfigurationSetResult createConfigurationSet(CreateConfigurationSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateConfigurationSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.GetResourceSharesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShares() != null)\r\n        sb.append(\"ResourceShares: \").append(getResourceShares()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setSourceBucketName",
	"Comment": "sets the name of the bucket containing the source object to be copied.",
	"Method": "void setSourceBucketName(String sourceBucketName){\r\n    this.sourceBucketName = sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.getObjectLockLegalHoldStatus",
	"Comment": "the legal hold status that you want to apply to the specified object.",
	"Method": "String getObjectLockLegalHoldStatus(){\r\n    return objectLockLegalHoldStatus;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.getStorageMode",
	"Comment": "returns the current storage mode of a cryptoconfiguration object.",
	"Method": "CryptoStorageMode getStorageMode(){\r\n    return this.storageMode;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.SimulationSoftwareSuite.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.getNotificationConfiguration",
	"Comment": "gets the new notification configuration for the specified bucket.",
	"Method": "BucketNotificationConfiguration getNotificationConfiguration(){\r\n    return notificationConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.removeRule",
	"Comment": "removes the replication rule with the given id from the replicationconfiguration associated with amazon s3 bucket. returns the updatedobject.",
	"Method": "BucketReplicationConfiguration removeRule(String id){\r\n    rules.remove(id);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectLegalHoldRequest.withLegalHold",
	"Comment": "container element for the legal hold configuration you want to apply to the specified object.",
	"Method": "SetObjectLegalHoldRequest withLegalHold(ObjectLockLegalHold legalHold){\r\n    this.legalHold = legalHold;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeleteSimulationApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSmsChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getSMSChannelRequest() != null)\r\n        sb.append(\"SMSChannelRequest: \").append(getSMSChannelRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.EventDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getMatchingEventTypes() != null)\r\n        sb.append(\"MatchingEventTypes: \").append(getMatchingEventTypes()).append(\",\");\r\n    if (getKinesisFirehoseDestination() != null)\r\n        sb.append(\"KinesisFirehoseDestination: \").append(getKinesisFirehoseDestination()).append(\",\");\r\n    if (getCloudWatchDestination() != null)\r\n        sb.append(\"CloudWatchDestination: \").append(getCloudWatchDestination()).append(\",\");\r\n    if (getSnsDestination() != null)\r\n        sb.append(\"SnsDestination: \").append(getSnsDestination()).append(\",\");\r\n    if (getPinpointDestination() != null)\r\n        sb.append(\"PinpointDestination: \").append(getPinpointDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.ListPrincipalsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceOwner() != null)\r\n        sb.append(\"ResourceOwner: \").append(getResourceOwner()).append(\",\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getPrincipals() != null)\r\n        sb.append(\"Principals: \").append(getPrincipals()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceShareArns() != null)\r\n        sb.append(\"ResourceShareArns: \").append(getResourceShareArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmClientCertificateIdentifier() != null)\r\n        sb.append(\"HsmClientCertificateIdentifier: \").append(getHsmClientCertificateIdentifier()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.getVersionId",
	"Comment": "returns the version id of the object version whose acl is being set.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ParameterRanges.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIntegerParameterRanges() != null)\r\n        sb.append(\"IntegerParameterRanges: \").append(getIntegerParameterRanges()).append(\",\");\r\n    if (getContinuousParameterRanges() != null)\r\n        sb.append(\"ContinuousParameterRanges: \").append(getContinuousParameterRanges()).append(\",\");\r\n    if (getCategoricalParameterRanges() != null)\r\n        sb.append(\"CategoricalParameterRanges: \").append(getCategoricalParameterRanges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.waiters.AmazonRedshiftWaiters.clusterDeleted",
	"Comment": "builds a clusterdeleted waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeClustersRequest> clusterDeleted(){\r\n    return new WaiterBuilder<DescribeClustersRequest, DescribeClustersResult>().withSdkFunction(new DescribeClustersFunction(client)).withAcceptors(new ClusterDeleted.IsClusterNotFoundMatcher(), new ClusterDeleted.IsCreatingMatcher(), new ClusterDeleted.IsModifyingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(30), new FixedDelayStrategy(60))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopTransformJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonroute53async using the current builder configuration.",
	"Method": "AmazonRoute53Async build(AwsAsyncClientParams params){\r\n    return new AmazonRoute53AsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.LexiconAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlphabet() != null)\r\n        sb.append(\"Alphabet: \").append(getAlphabet()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLastModified() != null)\r\n        sb.append(\"LastModified: \").append(getLastModified()).append(\",\");\r\n    if (getLexiconArn() != null)\r\n        sb.append(\"LexiconArn: \").append(getLexiconArn()).append(\",\");\r\n    if (getLexemesCount() != null)\r\n        sb.append(\"LexemesCount: \").append(getLexemesCount()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonrds using the current builder configuration.",
	"Method": "AmazonRDS build(AwsSyncClientParams params){\r\n    return new AmazonRDSClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSegmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getWriteSegmentRequest() != null)\r\n        sb.append(\"WriteSegmentRequest: \").append(getWriteSegmentRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.GetReservedNodeExchangeOfferingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedNodeId() != null)\r\n        sb.append(\"ReservedNodeId: \").append(getReservedNodeId()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.KinesisFirehoseDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeliveryStreamArn() != null)\r\n        sb.append(\"DeliveryStreamArn: \").append(getDeliveryStreamArn()).append(\",\");\r\n    if (getIamRoleArn() != null)\r\n        sb.append(\"IamRoleArn: \").append(getIamRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteGlobalClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalClusterIdentifier() != null)\r\n        sb.append(\"GlobalClusterIdentifier: \").append(getGlobalClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.Parameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterName() != null)\r\n        sb.append(\"ParameterName: \").append(getParameterName()).append(\",\");\r\n    if (getParameterValue() != null)\r\n        sb.append(\"ParameterValue: \").append(getParameterValue()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getDataType() != null)\r\n        sb.append(\"DataType: \").append(getDataType()).append(\",\");\r\n    if (getAllowedValues() != null)\r\n        sb.append(\"AllowedValues: \").append(getAllowedValues()).append(\",\");\r\n    if (getApplyType() != null)\r\n        sb.append(\"ApplyType: \").append(getApplyType()).append(\",\");\r\n    if (getIsModifiable() != null)\r\n        sb.append(\"IsModifiable: \").append(getIsModifiable()).append(\",\");\r\n    if (getMinimumEngineVersion() != null)\r\n        sb.append(\"MinimumEngineVersion: \").append(getMinimumEngineVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.S3XmlResponseHandler.getResponseHeaders",
	"Comment": "returns the headers from the processed response. will return null until aresponse has been handled.",
	"Method": "Map<String, String> getResponseHeaders(){\r\n    return responseHeaders;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.getAccessControlList",
	"Comment": "returns the optional access control list for the new object. ifspecified, cannedacl will be ignored.",
	"Method": "AccessControlList getAccessControlList(){\r\n    return accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartResult.getETag",
	"Comment": "returns the entity tag of the newly uploaded part. the entity tag isneeded later when the multipart upload is completed.",
	"Method": "String getETag(){\r\n    return eTag;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeSimulationApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getApplicationVersion() != null)\r\n        sb.append(\"ApplicationVersion: \").append(getApplicationVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeleteSimulationApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getApplicationVersion() != null)\r\n        sb.append(\"ApplicationVersion: \").append(getApplicationVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getUploadId",
	"Comment": "returns the id of the multipart upload whose parts are being listed.",
	"Method": "String getUploadId(){\r\n    return uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.AmazonS3ExceptionBuilder.getErrorResponseXml",
	"Comment": "returns the original error response xml received from amazon s3",
	"Method": "String getErrorResponseXml(){\r\n    return errorResponseXml;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeReservedDBInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedDBInstanceId() != null)\r\n        sb.append(\"ReservedDBInstanceId: \").append(getReservedDBInstanceId()).append(\",\");\r\n    if (getReservedDBInstancesOfferingId() != null)\r\n        sb.append(\"ReservedDBInstancesOfferingId: \").append(getReservedDBInstancesOfferingId()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getStartAfter",
	"Comment": "returns optional parameter indicating where you want amazon s3 to start the objectlisting from.this can be any key in the bucket.",
	"Method": "String getStartAfter(){\r\n    return startAfter;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.restoreDBClusterFromS3",
	"Comment": "creates an amazon aurora db cluster from data stored in an amazon s3 bucket. amazon rds must be authorized toaccess the amazon s3 bucket and the data must be created using the percona xtrabackup utility as described inmigrating data toan amazon aurora mysql db cluster in the amazon aurora user guide.",
	"Method": "DBCluster restoreDBClusterFromS3(RestoreDBClusterFromS3Request request){\r\n    request = beforeClientExecution(request);\r\n    return executeRestoreDBClusterFromS3(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.HostedZone.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getConfig() != null)\r\n        sb.append(\"Config: \").append(getConfig()).append(\",\");\r\n    if (getResourceRecordSetCount() != null)\r\n        sb.append(\"ResourceRecordSetCount: \").append(getResourceRecordSetCount()).append(\",\");\r\n    if (getLinkedService() != null)\r\n        sb.append(\"LinkedService: \").append(getLinkedService());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.restoreDBClusterFromSnapshot",
	"Comment": "creates a new db cluster from a db snapshot or db cluster snapshot.if a db snapshot is specified, the target db cluster is created from the source db snapshot with a defaultconfiguration and default security group.if a db cluster snapshot is specified, the target db cluster is created from the source db cluster restore pointwith the same configuration as the original source db cluster, except that the new db cluster is created with thedefault security group.for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DBCluster restoreDBClusterFromSnapshot(RestoreDBClusterFromSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRestoreDBClusterFromSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.getRedirectAllRequestsTo",
	"Comment": "return the redirect information where all requests will be redirect to.",
	"Method": "RedirectRule getRedirectAllRequestsTo(){\r\n    return redirectAllRequestsTo;\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.AmazonQuickSightAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartStreamProcessorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.getKeyMarker",
	"Comment": "returns the optional key marker specified in the original request tospecify where in the results to begin listing multipart uploads.",
	"Method": "String getKeyMarker(){\r\n    return keyMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.addTags",
	"Comment": "adds or overwrites one or more tags for the specified amazon sagemaker resource. you can add tags to notebookinstances, training jobs, hyperparameter tuning jobs, models, endpoint configurations, and endpoints.each tag consists of a key and an optional value. tag keys must be unique per resource. for more informationabout tags, see for more information, see aws tagging strategies.tags that you add to a hyperparameter tuning job by calling this api are also added to any training jobs that thehyperparameter tuning job launches after you call this api, but not to training jobs that the hyperparametertuning job launched before you called this api. to make sure that the tags associated with a hyperparametertuning job are also added to all training jobs that the hyperparameter tuning job launches, add the tags when youfirst create the tuning job by specifying them in the tags parameter ofcreatehyperparametertuningjob",
	"Method": "AddTagsResult addTags(AddTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListRobotApplicationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRobotApplicationSummaries() != null)\r\n        sb.append(\"RobotApplicationSummaries: \").append(getRobotApplicationSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.TagResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNList() != null)\r\n        sb.append(\"ResourceARNList: \").append(getResourceARNList()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartContentModerationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBInstanceStatusInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatusType() != null)\r\n        sb.append(\"StatusType: \").append(getStatusType()).append(\",\");\r\n    if (getNormal() != null)\r\n        sb.append(\"Normal: \").append(getNormal()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.AWSPricingAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awspricingasync using the current builder configuration.",
	"Method": "AWSPricingAsync build(AwsAsyncClientParams params){\r\n    return new AWSPricingAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupName() != null)\r\n        sb.append(\"ParameterGroupName: \").append(getParameterGroupName()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ListOperationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubmittedSince() != null)\r\n        sb.append(\"SubmittedSince: \").append(getSubmittedSince()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeTableRestoreStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getTableRestoreRequestId() != null)\r\n        sb.append(\"TableRestoreRequestId: \").append(getTableRestoreRequestId()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CancelResizeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateEndpointConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointConfigArn() != null)\r\n        sb.append(\"EndpointConfigArn: \").append(getEndpointConfigArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.VpcSecurityGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcSecurityGroupId() != null)\r\n        sb.append(\"VpcSecurityGroupId: \").append(getVpcSecurityGroupId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyGlobalClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalClusterIdentifier() != null)\r\n        sb.append(\"GlobalClusterIdentifier: \").append(getGlobalClusterIdentifier()).append(\",\");\r\n    if (getNewGlobalClusterIdentifier() != null)\r\n        sb.append(\"NewGlobalClusterIdentifier: \").append(getNewGlobalClusterIdentifier()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteClusterParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBInstanceAutomatedBackupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDbiResourceId() != null)\r\n        sb.append(\"DbiResourceId: \").append(getDbiResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.getSecureRandom",
	"Comment": "returns the securerandom instance that will be used to generatecryptographic parameters.",
	"Method": "SecureRandom getSecureRandom(){\r\n    return secureRandom;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobStoppingConditions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxHumanLabeledObjectCount() != null)\r\n        sb.append(\"MaxHumanLabeledObjectCount: \").append(getMaxHumanLabeledObjectCount()).append(\",\");\r\n    if (getMaxPercentageOfInputDatasetLabeled() != null)\r\n        sb.append(\"MaxPercentageOfInputDatasetLabeled: \").append(getMaxPercentageOfInputDatasetLabeled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.modifyClusterParameterGroup",
	"Comment": "modifies the parameters of a parameter group.for more information about parameters and parameter groups, go to amazon redshiftparameter groups in the amazon redshift cluster management guide.",
	"Method": "ModifyClusterParameterGroupResult modifyClusterParameterGroup(ModifyClusterParameterGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyClusterParameterGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentsResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getItem() != null)\r\n        sb.append(\"Item: \").append(getItem()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectInputStream.getHttpRequest",
	"Comment": "returns the http request from which this input stream is derived.",
	"Method": "HttpRequestBase getHttpRequest(){\r\n    return httpRequest;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterBacktracksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getBacktrackIdentifier() != null)\r\n        sb.append(\"BacktrackIdentifier: \").append(getBacktrackIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.UpdateDomainNameserversResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.KinesisVideoStream.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.setNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "void setNextContinuationToken(String nextContinuationToken){\r\n    this.nextContinuationToken = nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.PersistableUpload.getMutlipartUploadThreshold",
	"Comment": "returns the upper threshold for file size after which multipart upload isused..",
	"Method": "long getMutlipartUploadThreshold(){\r\n    return mutlipartUploadThreshold;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.EC2SecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEC2SecurityGroupName() != null)\r\n        sb.append(\"EC2SecurityGroupName: \").append(getEC2SecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupOwnerId() != null)\r\n        sb.append(\"EC2SecurityGroupOwnerId: \").append(getEC2SecurityGroupOwnerId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSChannelResponse() != null)\r\n        sb.append(\"APNSChannelResponse: \").append(getAPNSChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setRequesterPays",
	"Comment": "used for downloading an amazon s3 object from a requester pays bucket. ifset the requester is charged for downloading the data from the bucket.if a bucket is enabled for requester pays, then any attempt to read anobject from it without requester pays enabled will result in a 403 errorand the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getUnmodifiedSinceConstraint",
	"Comment": "gets the optional unmodified constraint that restricts thisrequest to executing only if the object has not beenmodified after the specified date.",
	"Method": "Date getUnmodifiedSinceConstraint(){\r\n    return unmodifiedSinceConstraint;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.listTrafficPolicies",
	"Comment": "gets information about the latest version for every traffic policy that is associated with the current awsaccount. policies are listed in the order that they were created in.",
	"Method": "ListTrafficPoliciesResult listTrafficPolicies(ListTrafficPoliciesRequest request,ListTrafficPoliciesResult listTrafficPolicies){\r\n    return listTrafficPolicies(new ListTrafficPoliciesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceSearchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.AlarmIdentifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.modifyCluster",
	"Comment": "modifies the settings for a cluster. for example, you can add another security or parameter group, update thepreferred maintenance window, or change the master user password. resetting a cluster password or modifying thesecurity groups associated with a cluster do not need a reboot. however, modifying a parameter group requires areboot for parameters to take effect. for more information about managing clusters, go to amazon redshift clusters inthe amazon redshift cluster management guide.you can also change node type and the number of nodes to scale up or down the cluster. when resizing a cluster,you must specify both the number of nodes and the node type even if one of the parameters does not change.",
	"Method": "Cluster modifyCluster(ModifyClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFace() != null)\r\n        sb.append(\"Face: \").append(getFace()).append(\",\");\r\n    if (getFaceDetail() != null)\r\n        sb.append(\"FaceDetail: \").append(getFaceDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListVPCAssociationAuthorizationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHealthCheckCountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeploymentJob.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getDeploymentApplicationConfigs() != null)\r\n        sb.append(\"DeploymentApplicationConfigs: \").append(getDeploymentApplicationConfigs()).append(\",\");\r\n    if (getDeploymentConfig() != null)\r\n        sb.append(\"DeploymentConfig: \").append(getDeploymentConfig()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getOngoingRestore",
	"Comment": "returns the boolean value which indicates whether there is ongoing restore request.",
	"Method": "Boolean getOngoingRestore(){\r\n    return this.ongoingRestore;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Celebrity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUrls() != null)\r\n        sb.append(\"Urls: \").append(getUrls()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getFace() != null)\r\n        sb.append(\"Face: \").append(getFace()).append(\",\");\r\n    if (getMatchConfidence() != null)\r\n        sb.append(\"MatchConfidence: \").append(getMatchConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsConfiguration.setId",
	"Comment": "sets the identifier used to represent an analytics configuration.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.associateResolverEndpointIpAddress",
	"Comment": "adds ip addresses to an inbound or an outbound resolver endpoint. if you want to adding more than one ip address,submit one associateresolverendpointipaddress request for each ip address.to remove an ip address from an endpoint, see disassociateresolverendpointipaddress.",
	"Method": "AssociateResolverEndpointIpAddressResult associateResolverEndpointIpAddress(AssociateResolverEndpointIpAddressRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAssociateResolverEndpointIpAddress(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.AmazonS3ExceptionBuilder.getRequestId",
	"Comment": "returns the aws request id that uniquely identifies the service requestthe caller made.",
	"Method": "String getRequestId(){\r\n    return requestId;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.IPRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCIDRIP() != null)\r\n        sb.append(\"CIDRIP: \").append(getCIDRIP());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3EncryptionClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazons3encryption using the current builder configuration.",
	"Method": "AmazonS3Encryption build(AwsSyncClientParams clientParams){\r\n    return new AmazonS3EncryptionClient(new AmazonS3EncryptionClientParamsWrapper(clientParams, resolveS3ClientOptions(), encryptionMaterials, cryptoConfig != null ? cryptoConfig : new CryptoConfiguration(), kms));\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.CipherLite.markSupported",
	"Comment": "tests if this cipher lite supports the markand reset methods.returns false by default, but subclassmay override.",
	"Method": "boolean markSupported(){\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CSVOutput.withFieldDelimiter",
	"Comment": "sets the value used to separate individual fields in a record.",
	"Method": "CSVOutput withFieldDelimiter(String fieldDelimiter,CSVOutput withFieldDelimiter,Character fieldDelimiter){\r\n    setFieldDelimiter(fieldDelimiter);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.TreatmentResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getMessageConfiguration() != null)\r\n        sb.append(\"MessageConfiguration: \").append(getMessageConfiguration()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getSizePercent() != null)\r\n        sb.append(\"SizePercent: \").append(getSizePercent()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getTreatmentDescription() != null)\r\n        sb.append(\"TreatmentDescription: \").append(getTreatmentDescription()).append(\",\");\r\n    if (getTreatmentName() != null)\r\n        sb.append(\"TreatmentName: \").append(getTreatmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setDelimiter",
	"Comment": "for internal use only. sets the delimiter parameteroriginally used to request this version listing.",
	"Method": "void setDelimiter(String delimiter){\r\n    this.delimiter = delimiter;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBSecurityGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSecurityGroupName() != null)\r\n        sb.append(\"DBSecurityGroupName: \").append(getDBSecurityGroupName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.AWSRDSDataClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopTransformJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransformJobName() != null)\r\n        sb.append(\"TransformJobName: \").append(getTransformJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.User.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole()).append(\",\");\r\n    if (getIdentityType() != null)\r\n        sb.append(\"IdentityType: \").append(getIdentityType()).append(\",\");\r\n    if (getActive() != null)\r\n        sb.append(\"Active: \").append(getActive());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeOptionGroupOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionGroupOptions() != null)\r\n        sb.append(\"OptionGroupOptions: \").append(getOptionGroupOptions()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.AdjustedRangeInputStream.initializeForRead",
	"Comment": "skip to the start location of the range of bytes desired by the user.",
	"Method": "void initializeForRead(long rangeBeginning,long rangeEnd){\r\n    int numBytesToSkip;\r\n    if (rangeBeginning < JceEncryptionConstants.SYMMETRIC_CIPHER_BLOCK_SIZE) {\r\n        numBytesToSkip = (int) rangeBeginning;\r\n    } else {\r\n        int offsetIntoBlock = (int) (rangeBeginning % JceEncryptionConstants.SYMMETRIC_CIPHER_BLOCK_SIZE);\r\n        numBytesToSkip = JceEncryptionConstants.SYMMETRIC_CIPHER_BLOCK_SIZE + offsetIntoBlock;\r\n    }\r\n    if (numBytesToSkip != 0) {\r\n        while (numBytesToSkip > 0) {\r\n            this.decryptedContents.read();\r\n            numBytesToSkip--;\r\n        }\r\n    }\r\n    this.virtualAvailable = (rangeEnd - rangeBeginning) + 1;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeTableRestoreStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableRestoreStatusDetails() != null)\r\n        sb.append(\"TableRestoreStatusDetails: \").append(getTableRestoreStatusDetails()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.GetReservedNodeExchangeOfferingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getReservedNodeOfferings() != null)\r\n        sb.append(\"ReservedNodeOfferings: \").append(getReservedNodeOfferings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Builder.enableForceGlobalBucketAccess",
	"Comment": "enable global bucket access for clients generated by this builder.",
	"Method": "Subclass enableForceGlobalBucketAccess(){\r\n    setForceGlobalBucketAccessEnabled(Boolean.TRUE);\r\n    return getSubclass();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryS3BucketDestination.getPrefix",
	"Comment": "returns the prefix that is prepended to all inventory results.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.QueryError.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DeleteDedicatedIpPoolResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setUploadId",
	"Comment": "sets the id of the multipart upload whose parts are being listed.",
	"Method": "void setUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.TrainingSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingImage() != null)\r\n        sb.append(\"TrainingImage: \").append(getTrainingImage()).append(\",\");\r\n    if (getTrainingImageDigest() != null)\r\n        sb.append(\"TrainingImageDigest: \").append(getTrainingImageDigest()).append(\",\");\r\n    if (getSupportedHyperParameters() != null)\r\n        sb.append(\"SupportedHyperParameters: \").append(getSupportedHyperParameters()).append(\",\");\r\n    if (getSupportedTrainingInstanceTypes() != null)\r\n        sb.append(\"SupportedTrainingInstanceTypes: \").append(getSupportedTrainingInstanceTypes()).append(\",\");\r\n    if (getSupportsDistributedTraining() != null)\r\n        sb.append(\"SupportsDistributedTraining: \").append(getSupportsDistributedTraining()).append(\",\");\r\n    if (getMetricDefinitions() != null)\r\n        sb.append(\"MetricDefinitions: \").append(getMetricDefinitions()).append(\",\");\r\n    if (getTrainingChannels() != null)\r\n        sb.append(\"TrainingChannels: \").append(getTrainingChannels()).append(\",\");\r\n    if (getSupportedTuningJobObjectiveMetrics() != null)\r\n        sb.append(\"SupportedTuningJobObjectiveMetrics: \").append(getSupportedTuningJobObjectiveMetrics());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.AssociateResourceShareRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns()).append(\",\");\r\n    if (getPrincipals() != null)\r\n        sb.append(\"Principals: \").append(getPrincipals()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.UploadCallable.uploadInParts",
	"Comment": "uploads the request in multiple chunks, submitting each upload chunk taskto the thread pool and recording its corresponding future object, as wellas the multipart upload id.",
	"Method": "UploadResult uploadInParts(){\r\n    boolean isUsingEncryption = s3 instanceof AmazonS3Encryption;\r\n    long optimalPartSize = getOptimalPartSize(isUsingEncryption);\r\n    try {\r\n        if (multipartUploadId == null) {\r\n            multipartUploadId = initiateMultipartUpload(origReq, isUsingEncryption);\r\n        }\r\n        UploadPartRequestFactory requestFactory = new UploadPartRequestFactory(origReq, multipartUploadId, optimalPartSize);\r\n        if (TransferManagerUtils.isUploadParallelizable(origReq, isUsingEncryption)) {\r\n            captureUploadStateIfPossible();\r\n            uploadPartsInParallel(requestFactory, multipartUploadId);\r\n            return null;\r\n        } else {\r\n            return uploadPartsInSeries(requestFactory);\r\n        }\r\n    } catch (Exception e) {\r\n        publishProgress(listener, ProgressEventType.TRANSFER_FAILED_EVENT);\r\n        performAbortMultipartUpload();\r\n        throw e;\r\n    } finally {\r\n        if (origReq.getInputStream() != null) {\r\n            try {\r\n                origReq.getInputStream().close();\r\n            } catch (Exception e) {\r\n                log.warn(\"Unable to cleanly close input stream: \" + e.getMessage(), e);\r\n            }\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseAccessControlListResponse",
	"Comment": "parses an accesscontrollisthandler response xml document from an inputstream.",
	"Method": "AccessControlListHandler parseAccessControlListResponse(InputStream inputStream){\r\n    AccessControlListHandler handler = new AccessControlListHandler();\r\n    parseXmlInputStream(handler, inputStream);\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.model.ColumnMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArrayBaseColumnType() != null)\r\n        sb.append(\"ArrayBaseColumnType: \").append(getArrayBaseColumnType()).append(\",\");\r\n    if (getIsAutoIncrement() != null)\r\n        sb.append(\"IsAutoIncrement: \").append(getIsAutoIncrement()).append(\",\");\r\n    if (getIsCaseSensitive() != null)\r\n        sb.append(\"IsCaseSensitive: \").append(getIsCaseSensitive()).append(\",\");\r\n    if (getIsCurrency() != null)\r\n        sb.append(\"IsCurrency: \").append(getIsCurrency()).append(\",\");\r\n    if (getIsSigned() != null)\r\n        sb.append(\"IsSigned: \").append(getIsSigned()).append(\",\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getNullable() != null)\r\n        sb.append(\"Nullable: \").append(getNullable()).append(\",\");\r\n    if (getPrecision() != null)\r\n        sb.append(\"Precision: \").append(getPrecision()).append(\",\");\r\n    if (getScale() != null)\r\n        sb.append(\"Scale: \").append(getScale()).append(\",\");\r\n    if (getSchemaName() != null)\r\n        sb.append(\"SchemaName: \").append(getSchemaName()).append(\",\");\r\n    if (getTableName() != null)\r\n        sb.append(\"TableName: \").append(getTableName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getTypeName() != null)\r\n        sb.append(\"TypeName: \").append(getTypeName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteClusterSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSubnetGroupName() != null)\r\n        sb.append(\"ClusterSubnetGroupName: \").append(getClusterSubnetGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.withResponseHeaders",
	"Comment": "sets the headers to be overridden in the service response and returnsthis object, for method chaining.",
	"Method": "GeneratePresignedUrlRequest withResponseHeaders(ResponseHeaderOverrides responseHeaders){\r\n    setResponseHeaders(responseHeaders);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ParentHyperParameterTuningJob.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHyperParameterTuningJobName() != null)\r\n        sb.append(\"HyperParameterTuningJobName: \").append(getHyperParameterTuningJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose tagging configuration is beingset.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.setOngoingRestore",
	"Comment": "for internal use only. sets the boolean value which indicates whetherthere is ongoing restore request. not intended to be called by externalcode.",
	"Method": "void setOngoingRestore(boolean ongoingRestore){\r\n    this.ongoingRestore = Boolean.valueOf(ongoingRestore);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBClusterEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterEndpointIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointIdentifier: \").append(getDBClusterEndpointIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withExposedHeaders",
	"Comment": "sets the exposeheaders of this rule and returns a reference to this object formethod chaining.",
	"Method": "CORSRule withExposedHeaders(List<String> exposedHeaders){\r\n    this.exposedHeaders = exposedHeaders;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.CloudWatchDimensionConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDimensionName() != null)\r\n        sb.append(\"DimensionName: \").append(getDimensionName()).append(\",\");\r\n    if (getDimensionValueSource() != null)\r\n        sb.append(\"DimensionValueSource: \").append(getDimensionValueSource()).append(\",\");\r\n    if (getDefaultDimensionValue() != null)\r\n        sb.append(\"DefaultDimensionValue: \").append(getDefaultDimensionValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceSearchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVideo() != null)\r\n        sb.append(\"Video: \").append(getVideo()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getFaceMatchThreshold() != null)\r\n        sb.append(\"FaceMatchThreshold: \").append(getFaceMatchThreshold()).append(\",\");\r\n    if (getCollectionId() != null)\r\n        sb.append(\"CollectionId: \").append(getCollectionId()).append(\",\");\r\n    if (getNotificationChannel() != null)\r\n        sb.append(\"NotificationChannel: \").append(getNotificationChannel()).append(\",\");\r\n    if (getJobTag() != null)\r\n        sb.append(\"JobTag: \").append(getJobTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.getMaxKeys",
	"Comment": "gets the optional maxkeys parameter indicating the maximum number of keys toinclude in the response. amazon s3 might return fewer keys than specified, but willnever return more. even if the optional parameter is not specified,amazon s3 will limit the number of results in the response.",
	"Method": "Integer getMaxKeys(){\r\n    return maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerConfiguration.getMultipartUploadThreshold",
	"Comment": "returns the size threshold in bytes for when to use multipart uploads.uploads over this size will automatically use a multipart uploadstrategy, while uploads smaller than this threshold will use a singleconnection to upload the whole object.multipart uploads are easier to recover from and potentially fasterthan single part uploads, especially when the upload parts can beuploaded in parallel as with files. due to additional networkcommunication, small uploads should use a singleconnection for the upload.",
	"Method": "long getMultipartUploadThreshold(){\r\n    return multipartUploadThreshold;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getEndpointId() != null)\r\n        sb.append(\"EndpointId: \").append(getEndpointId()).append(\",\");\r\n    if (getEndpointRequest() != null)\r\n        sb.append(\"EndpointRequest: \").append(getEndpointRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the existing, initiated multipartupload, with which this new part will be associated.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getSSEAwsKmsKeyId",
	"Comment": "returns the aws key management system key id used for server sideencryption of the amazon s3 object.",
	"Method": "String getSSEAwsKmsKeyId(){\r\n    return (String) metadata.get(Headers.SERVER_SIDE_ENCRYPTION_AWS_KMS_KEYID);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectLockConfigurationRequest.withObjectLockConfiguration",
	"Comment": "the object lock configuration that you want to apply to the specified bucket.",
	"Method": "SetObjectLockConfigurationRequest withObjectLockConfiguration(ObjectLockConfiguration objectLockConfiguration){\r\n    this.objectLockConfiguration = objectLockConfiguration;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketMetricsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the metrics configuration to retrieve.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose tagging configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListHyperParameterTuningJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getLastModifiedTimeAfter() != null)\r\n        sb.append(\"LastModifiedTimeAfter: \").append(getLastModifiedTimeAfter()).append(\",\");\r\n    if (getLastModifiedTimeBefore() != null)\r\n        sb.append(\"LastModifiedTimeBefore: \").append(getLastModifiedTimeBefore()).append(\",\");\r\n    if (getStatusEquals() != null)\r\n        sb.append(\"StatusEquals: \").append(getStatusEquals());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.getVersioningConfiguration",
	"Comment": "gets the new versioning configuration for the specified bucket.",
	"Method": "BucketVersioningConfiguration getVersioningConfiguration(){\r\n    return versioningConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setRedirectLocation",
	"Comment": "sets the optional redirect location for the newly copied object.",
	"Method": "void setRedirectLocation(String redirectLocation){\r\n    this.redirectLocation = redirectLocation;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.withPartNumberMarker",
	"Comment": "sets the optional part number marker indicating where in the results tobeing listing parts, and returns this updated listpartsrequest object sothat additional method calls can be chained together.",
	"Method": "ListPartsRequest withPartNumberMarker(Integer partNumberMarker){\r\n    this.partNumberMarker = partNumberMarker;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartResult.getVersionId",
	"Comment": "gets the version id of the source object. this field is onlypresent if object versioning has been enabled for the bucket theobject was copied from.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBInstances() != null)\r\n        sb.append(\"DBInstances: \").append(getDBInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.CopyCallable.getOptimalPartSize",
	"Comment": "computes and returns the optimal part size for the copy operation.",
	"Method": "long getOptimalPartSize(long contentLengthOfSource){\r\n    long optimalPartSize = TransferManagerUtils.calculateOptimalPartSizeForCopy(copyObjectRequest, configuration, contentLengthOfSource);\r\n    log.debug(\"Calculated optimal part size: \" + optimalPartSize);\r\n    return optimalPartSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withUploadId",
	"Comment": "sets the id of the existing, initiated multipart upload with which thisnew part will be associated, and returns this updated uploadpartrequestobject so that additional method calls can be chained together.",
	"Method": "UploadPartRequest withUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.UploadCallable.isMultipartUpload",
	"Comment": "returns true if this uploadcallable is processing a multipart upload.",
	"Method": "boolean isMultipartUpload(){\r\n    return TransferManagerUtils.shouldUseMultipartUpload(origReq, configuration);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.IpAddressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getIp() != null)\r\n        sb.append(\"Ip: \").append(getIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.PendingCloudwatchLogsExports.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogTypesToEnable() != null)\r\n        sb.append(\"LogTypesToEnable: \").append(getLogTypesToEnable()).append(\",\");\r\n    if (getLogTypesToDisable() != null)\r\n        sb.append(\"LogTypesToDisable: \").append(getLogTypesToDisable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.SimulationJob.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getFailureBehavior() != null)\r\n        sb.append(\"FailureBehavior: \").append(getFailureBehavior()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getOutputLocation() != null)\r\n        sb.append(\"OutputLocation: \").append(getOutputLocation()).append(\",\");\r\n    if (getMaxJobDurationInSeconds() != null)\r\n        sb.append(\"MaxJobDurationInSeconds: \").append(getMaxJobDurationInSeconds()).append(\",\");\r\n    if (getSimulationTimeMillis() != null)\r\n        sb.append(\"SimulationTimeMillis: \").append(getSimulationTimeMillis()).append(\",\");\r\n    if (getIamRole() != null)\r\n        sb.append(\"IamRole: \").append(getIamRole()).append(\",\");\r\n    if (getRobotApplications() != null)\r\n        sb.append(\"RobotApplications: \").append(getRobotApplications()).append(\",\");\r\n    if (getSimulationApplications() != null)\r\n        sb.append(\"SimulationApplications: \").append(getSimulationApplications()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.getProgressListener",
	"Comment": "returns the optional progress listener for receiving updates about objectupload status.",
	"Method": "com.amazonaws.services.s3.model.ProgressListener getProgressListener(){\r\n    ProgressListener generalProgressListener = getGeneralProgressListener();\r\n    if (generalProgressListener instanceof LegacyS3ProgressListener) {\r\n        return ((LegacyS3ProgressListener) generalProgressListener).unwrap();\r\n    } else {\r\n        return null;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketNotificationConfiguration.getConfigurations",
	"Comment": "returns all the notification configurations associated with the amazon s3bucket.",
	"Method": "Map<String, NotificationConfiguration> getConfigurations(){\r\n    return configurations;\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.model.ExecuteSqlRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAwsSecretStoreArn() != null)\r\n        sb.append(\"AwsSecretStoreArn: \").append(getAwsSecretStoreArn()).append(\",\");\r\n    if (getDatabase() != null)\r\n        sb.append(\"Database: \").append(getDatabase()).append(\",\");\r\n    if (getDbClusterOrInstanceArn() != null)\r\n        sb.append(\"DbClusterOrInstanceArn: \").append(getDbClusterOrInstanceArn()).append(\",\");\r\n    if (getSchema() != null)\r\n        sb.append(\"Schema: \").append(getSchema()).append(\",\");\r\n    if (getSqlStatements() != null)\r\n        sb.append(\"SqlStatements: \").append(getSqlStatements());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.getSSEAwsKeyManagementParams",
	"Comment": "returns the aws key management system parameters used to encrypt theobject on server side.",
	"Method": "SSEAwsKeyManagementParams getSSEAwsKeyManagementParams(){\r\n    return sseAwsKeyManagementParams;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteClusterSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSecurityGroupName() != null)\r\n        sb.append(\"ClusterSecurityGroupName: \").append(getClusterSecurityGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket containing the object to delete.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DataSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3DataSource() != null)\r\n        sb.append(\"S3DataSource: \").append(getS3DataSource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetConfigurationSetEventDestinationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ChangeBatch.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getChanges() != null)\r\n        sb.append(\"Changes: \").append(getChanges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.UpdateHostedZoneCommentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.listDomains",
	"Comment": "this operation returns all the domain names registered with amazon route 53 for the current aws account.",
	"Method": "ListDomainsResult listDomains(ListDomainsRequest request,ListDomainsResult listDomains){\r\n    return listDomains(new ListDomainsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setDelimiter",
	"Comment": "for internal use only. sets the delimiter parameteroriginally used to request this object listing.",
	"Method": "void setDelimiter(String delimiter){\r\n    this.delimiter = delimiter;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.withRules",
	"Comment": "sets the replication rules for the amazon s3 bucket. returns the updatedobject.",
	"Method": "BucketReplicationConfiguration withRules(Map<String, ReplicationRule> rules){\r\n    setRules(rules);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeEventsAsync",
	"Comment": "simplified method form for invoking the describeevents operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync(DescribeEventsRequest request,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,DescribeEventsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler){\r\n    return describeEventsAsync(new DescribeEventsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateHsmClientCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmClientCertificateIdentifier() != null)\r\n        sb.append(\"HsmClientCertificateIdentifier: \").append(getHsmClientCertificateIdentifier()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.setLifecycleConfiguration",
	"Comment": "sets the new lifecycle configuration for the specified bucket.",
	"Method": "void setLifecycleConfiguration(BucketLifecycleConfiguration lifecycleConfiguration){\r\n    this.lifecycleConfiguration = lifecycleConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "void setContinuationToken(String continuationToken){\r\n    this.continuationToken = continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLexiconNames() != null)\r\n        sb.append(\"LexiconNames: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getOutputFormat() != null)\r\n        sb.append(\"OutputFormat: \").append(getOutputFormat()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate()).append(\",\");\r\n    if (getSpeechMarkTypes() != null)\r\n        sb.append(\"SpeechMarkTypes: \").append(getSpeechMarkTypes()).append(\",\");\r\n    if (getText() != null)\r\n        sb.append(\"Text: \").append(getText()).append(\",\");\r\n    if (getTextType() != null)\r\n        sb.append(\"TextType: \").append(getTextType()).append(\",\");\r\n    if (getVoiceId() != null)\r\n        sb.append(\"VoiceId: \").append(getVoiceId()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.DeleteConfigurationSetEventDestinationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.RestartSimulationJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJob() != null)\r\n        sb.append(\"Job: \").append(getJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHealthCheckLastFailureReasonRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheckId() != null)\r\n        sb.append(\"HealthCheckId: \").append(getHealthCheckId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.UploadCallable.uploadInOneChunk",
	"Comment": "uploads the given request in a single chunk and returns the result.",
	"Method": "UploadResult uploadInOneChunk(){\r\n    PutObjectResult putObjectResult = s3.putObject(origReq);\r\n    UploadResult uploadResult = new UploadResult();\r\n    uploadResult.setBucketName(origReq.getBucketName());\r\n    uploadResult.setKey(origReq.getKey());\r\n    uploadResult.setETag(putObjectResult.getETag());\r\n    uploadResult.setVersionId(putObjectResult.getVersionId());\r\n    return uploadResult;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateWorkteamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkteamName() != null)\r\n        sb.append(\"WorkteamName: \").append(getWorkteamName()).append(\",\");\r\n    if (getMemberDefinitions() != null)\r\n        sb.append(\"MemberDefinitions: \").append(getMemberDefinitions()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartStreamProcessorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.RobotDeployment.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDeploymentStartTime() != null)\r\n        sb.append(\"DeploymentStartTime: \").append(getDeploymentStartTime()).append(\",\");\r\n    if (getDeploymentFinishTime() != null)\r\n        sb.append(\"DeploymentFinishTime: \").append(getDeploymentFinishTime()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getProgressDetail() != null)\r\n        sb.append(\"ProgressDetail: \").append(getProgressDetail()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetPublicAccessBlockRequest.withBucketName",
	"Comment": "the name of the amazon s3 bucket whose public access block configuration you want to retrieve.",
	"Method": "GetPublicAccessBlockRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBClusterParameters",
	"Comment": "returns the detailed parameter list for a particular db cluster parameter group.for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DescribeDBClusterParametersResult describeDBClusterParameters(DescribeDBClusterParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBClusterParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSmsChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSMSChannelResponse() != null)\r\n        sb.append(\"SMSChannelResponse: \").append(getSMSChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesByImageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSearchedFaceBoundingBox() != null)\r\n        sb.append(\"SearchedFaceBoundingBox: \").append(getSearchedFaceBoundingBox()).append(\",\");\r\n    if (getSearchedFaceConfidence() != null)\r\n        sb.append(\"SearchedFaceConfidence: \").append(getSearchedFaceConfidence()).append(\",\");\r\n    if (getFaceMatches() != null)\r\n        sb.append(\"FaceMatches: \").append(getFaceMatches()).append(\",\");\r\n    if (getFaceModelVersion() != null)\r\n        sb.append(\"FaceModelVersion: \").append(getFaceModelVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DisableSnapshotCopyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketMetricsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the metrics configuration to retrieve.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.deleteTags",
	"Comment": "deletes a tag or tags from a resource. you must provide the arn of the resource from which you want to delete thetag or tags.",
	"Method": "DeleteTagsResult deleteTags(DeleteTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsRequest.withContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "ListBucketAnalyticsConfigurationsRequest withContinuationToken(String continuationToken){\r\n    setContinuationToken(continuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "InitiateMultipartUploadRequest withSSEAwsKeyManagementParams(SSEAwsKeyManagementParams sseAwsKeyManagementParams){\r\n    setSSEAwsKeyManagementParams(sseAwsKeyManagementParams);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getFirstByte",
	"Comment": "returns the optional start range to copy from the source object.",
	"Method": "Long getFirstByte(){\r\n    return firstByte;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setDelimiter",
	"Comment": "for internal use only. sets the delimiter parameteroriginally used to request this object listing.",
	"Method": "void setDelimiter(String delimiter){\r\n    this.delimiter = delimiter;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.withObjectLockLegalHoldStatus",
	"Comment": "the legal hold status that you want to apply to the specified object.",
	"Method": "T withObjectLockLegalHoldStatus(String objectLockLegalHoldStatus,T withObjectLockLegalHoldStatus,ObjectLockLegalHoldStatus objectLockLegalHoldStatus){\r\n    return withObjectLockLegalHoldStatus(objectLockLegalHoldStatus.toString());\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.EventInfoMap.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventId() != null)\r\n        sb.append(\"EventId: \").append(getEventId()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getEventDescription() != null)\r\n        sb.append(\"EventDescription: \").append(getEventDescription()).append(\",\");\r\n    if (getSeverity() != null)\r\n        sb.append(\"Severity: \").append(getSeverity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.RevokeClusterSecurityGroupIngressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSecurityGroupName() != null)\r\n        sb.append(\"ClusterSecurityGroupName: \").append(getClusterSecurityGroupName()).append(\",\");\r\n    if (getCIDRIP() != null)\r\n        sb.append(\"CIDRIP: \").append(getCIDRIP()).append(\",\");\r\n    if (getEC2SecurityGroupName() != null)\r\n        sb.append(\"EC2SecurityGroupName: \").append(getEC2SecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupOwnerId() != null)\r\n        sb.append(\"EC2SecurityGroupOwnerId: \").append(getEC2SecurityGroupOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getPartNumberMarker",
	"Comment": "returns the optional part number marker specified in the original requestto specify where in the results to begin listing parts.",
	"Method": "Integer getPartNumberMarker(){\r\n    return partNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.withSourceSelectionCriteria",
	"Comment": "sets the container for filters that define which source objects should be replicated.",
	"Method": "ReplicationRule withSourceSelectionCriteria(SourceSelectionCriteria sourceSelectionCriteria){\r\n    setSourceSelectionCriteria(sourceSelectionCriteria);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.RenderUiTemplateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRenderedContent() != null)\r\n        sb.append(\"RenderedContent: \").append(getRenderedContent()).append(\",\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose website configuration is being set and\treturns this updated request object so that additional method calls can\tbe chained together.",
	"Method": "SetBucketWebsiteConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket whose website configuration is being set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopNotebookInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleAE.assertParameterNotNull",
	"Comment": "asserts that the specified parameter value is not null and if it is,throws an illegalargumentexception with the specified error message.",
	"Method": "void assertParameterNotNull(Object parameterValue,String errorMessage){\r\n    if (parameterValue == null)\r\n        throw new IllegalArgumentException(errorMessage);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.getConfiguration",
	"Comment": "returns the website configuration to send as part of this request.",
	"Method": "BucketWebsiteConfiguration getConfiguration(){\r\n    return configuration;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.AccountLimit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBClusterOptionGroupStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterOptionGroupName() != null)\r\n        sb.append(\"DBClusterOptionGroupName: \").append(getDBClusterOptionGroupName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3EncryptionClientBuilder.withEncryptionMaterials",
	"Comment": "sets the encryption materials to be used to encrypt and decrypt data",
	"Method": "AmazonS3EncryptionClientBuilder withEncryptionMaterials(EncryptionMaterialsProvider encryptionMaterials){\r\n    setEncryptionMaterials(encryptionMaterials);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.StorageClassAnalysis.withDataExport",
	"Comment": "sets the container used to describe how data related to thestorage class analysis should be exported.returns this object for method chaining.",
	"Method": "StorageClassAnalysis withDataExport(StorageClassAnalysisDataExport dataExport){\r\n    setDataExport(dataExport);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.setLastModified",
	"Comment": "sets the date according to amazon s3 at which this version was lastmodified.",
	"Method": "void setLastModified(Date lastModified){\r\n    this.lastModified = lastModified;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getBucketName",
	"Comment": "gets the name of the bucket containing the object to be downloaded.",
	"Method": "String getBucketName(){\r\n    return s3ObjectIdBuilder.getBucket();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getVideoMetadata() != null)\r\n        sb.append(\"VideoMetadata: \").append(getVideoMetadata()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getCelebrities() != null)\r\n        sb.append(\"Celebrities: \").append(getCelebrities());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.AccountAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValues() != null)\r\n        sb.append(\"AttributeValues: \").append(getAttributeValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeClusterSubnetGroups",
	"Comment": "returns one or more cluster subnet group objects, which contain metadata about your cluster subnet groups. bydefault, this operation returns information about all cluster subnet groups that are defined in you aws account.if you specify both tag keys and tag values in the same request, amazon redshift returns all subnet groups thatmatch any combination of the specified keys and values. for example, if you have owner andenvironment for tag keys, and admin and test for tag values, all subnetgroups that have any combination of those values are returned.if both tag keys and values are omitted from the request, subnet groups are returned regardless of whether theyhave tag keys or values associated with them.",
	"Method": "DescribeClusterSubnetGroupsResult describeClusterSubnetGroups(DescribeClusterSubnetGroupsRequest request,DescribeClusterSubnetGroupsResult describeClusterSubnetGroups){\r\n    return describeClusterSubnetGroups(new DescribeClusterSubnetGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the reference to the object torestore which is now stored in amazon glacier.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.withRoleARN",
	"Comment": "sets the iam role that will be used by amazon s3 while replication.returns the updated object.",
	"Method": "BucketReplicationConfiguration withRoleARN(String roleARN){\r\n    setRoleARN(roleARN);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManager.setConfiguration",
	"Comment": "sets the configuration which specifies howthis transfermanager processes requests.",
	"Method": "void setConfiguration(TransferManagerConfiguration configuration){\r\n    checkMutability();\r\n    this.configuration = configuration;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ListResolverRulesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.TagSet.setTag",
	"Comment": "sets the value of the tag for a given key.will overwrite existing value.",
	"Method": "void setTag(String key,String value){\r\n    tags.put(key, value);\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.model.GetProductsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceCode() != null)\r\n        sb.append(\"ServiceCode: \").append(getServiceCode()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getFormatVersion() != null)\r\n        sb.append(\"FormatVersion: \").append(getFormatVersion()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RecurringCharge.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecurringChargeAmount() != null)\r\n        sb.append(\"RecurringChargeAmount: \").append(getRecurringChargeAmount()).append(\",\");\r\n    if (getRecurringChargeFrequency() != null)\r\n        sb.append(\"RecurringChargeFrequency: \").append(getRecurringChargeFrequency());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.GetResolverRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRuleId() != null)\r\n        sb.append(\"ResolverRuleId: \").append(getResolverRuleId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetConfigurationSetEventDestinationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventDestinations() != null)\r\n        sb.append(\"EventDestinations: \").append(getEventDestinations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase.createInstructionGetRequest",
	"Comment": "creates and return a get object request for an instruction file.",
	"Method": "GetObjectRequest createInstructionGetRequest(S3ObjectId id,GetObjectRequest createInstructionGetRequest,S3ObjectId s3objectId,String instFileSuffix){\r\n    return new GetObjectRequest(s3objectId.instructionFileId(instFileSuffix));\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesizeSpeechResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAudioStream() != null)\r\n        sb.append(\"AudioStream: \").append(getAudioStream()).append(\",\");\r\n    if (getContentType() != null)\r\n        sb.append(\"ContentType: \").append(getContentType()).append(\",\");\r\n    if (getRequestCharacters() != null)\r\n        sb.append(\"RequestCharacters: \").append(getRequestCharacters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBSubnetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.Nameserver.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getGlueIps() != null)\r\n        sb.append(\"GlueIps: \").append(getGlueIps());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the reference to the object torestore which is now stored in amazon glacier.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.getMarker",
	"Comment": "gets the optional marker parameter indicating where in the bucket to beginlisting. the list will only include keys that occur lexicographicallyafter the marker.",
	"Method": "String getMarker(){\r\n    return marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DefaultRetention.setDays",
	"Comment": "the number of days that you want to specify for the default retention period.",
	"Method": "void setDays(Integer days){\r\n    withDays(days);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ContinuousParameterRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMinValue() != null)\r\n        sb.append(\"MinValue: \").append(getMinValue()).append(\",\");\r\n    if (getMaxValue() != null)\r\n        sb.append(\"MaxValue: \").append(getMaxValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.EndpointSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName()).append(\",\");\r\n    if (getEndpointArn() != null)\r\n        sb.append(\"EndpointArn: \").append(getEndpointArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getEndpointStatus() != null)\r\n        sb.append(\"EndpointStatus: \").append(getEndpointStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetPublicAccessBlockRequest.getBucketName",
	"Comment": "the name of the amazon s3 bucket whose public access block configuration you want to set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.setTruncated",
	"Comment": "for internal use only. sets the truncated property forthis analytics configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ScalingConfigurationInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinCapacity() != null)\r\n        sb.append(\"MinCapacity: \").append(getMinCapacity()).append(\",\");\r\n    if (getMaxCapacity() != null)\r\n        sb.append(\"MaxCapacity: \").append(getMaxCapacity()).append(\",\");\r\n    if (getAutoPause() != null)\r\n        sb.append(\"AutoPause: \").append(getAutoPause()).append(\",\");\r\n    if (getSecondsUntilAutoPause() != null)\r\n        sb.append(\"SecondsUntilAutoPause: \").append(getSecondsUntilAutoPause());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ExtraParam.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterSecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSecurityGroupName() != null)\r\n        sb.append(\"ClusterSecurityGroupName: \").append(getClusterSecurityGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEC2SecurityGroups() != null)\r\n        sb.append(\"EC2SecurityGroups: \").append(getEC2SecurityGroups()).append(\",\");\r\n    if (getIPRanges() != null)\r\n        sb.append(\"IPRanges: \").append(getIPRanges()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.UpdateTagsForDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getTagsToUpdate() != null)\r\n        sb.append(\"TagsToUpdate: \").append(getTagsToUpdate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the object to be downloaded.",
	"Method": "void setBucketName(String bucketName){\r\n    s3ObjectIdBuilder.setBucket(bucketName);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getEncodingType",
	"Comment": "gets the optional encodingtype parameter indicating theencoding method to be applied on the response.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Builder.withForceGlobalBucketAccessEnabled",
	"Comment": "configure whether global bucket access is enabled for clients generated by this builder.",
	"Method": "Subclass withForceGlobalBucketAccessEnabled(Boolean forceGlobalBucketAccessEnabled){\r\n    setForceGlobalBucketAccessEnabled(forceGlobalBucketAccessEnabled);\r\n    return getSubclass();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.createModelPackage",
	"Comment": "creates a model package that you can use to create amazon sagemaker models or list on aws marketplace. buyers cansubscribe to model packages listed on aws marketplace to create models in amazon sagemaker.",
	"Method": "CreateModelPackageResult createModelPackage(CreateModelPackageRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateModelPackage(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryConfiguration.withId",
	"Comment": "sets the id used to identify the inventory configurationand returns this object for method chaining.",
	"Method": "InventoryConfiguration withId(String id){\r\n    setId(id);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.setAccessControlList",
	"Comment": "sets the optional access control list for the new bucket. if specified,cannedacl will be ignored.",
	"Method": "void setAccessControlList(AccessControlList accessControlList){\r\n    this.accessControlList = accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withCannedAccessControlList",
	"Comment": "sets the canned acl to use for the newly copied object, and returns thiscopyobjectrequest, enabling additional method calls to be chainedtogether.",
	"Method": "CopyObjectRequest withCannedAccessControlList(CannedAccessControlList cannedACL){\r\n    setCannedAccessControlList(cannedACL);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.AWSPricingClient.getAttributeValues",
	"Comment": "returns a list of attribute values. attibutes are similar to the details in a price list api offer file. for alist of available attributes, see offer filedefinitions in the aws billing and costmanagement user guide.",
	"Method": "GetAttributeValuesResult getAttributeValues(GetAttributeValuesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetAttributeValues(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.UpdateTrafficPolicyInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getTTL() != null)\r\n        sb.append(\"TTL: \").append(getTTL()).append(\",\");\r\n    if (getTrafficPolicyId() != null)\r\n        sb.append(\"TrafficPolicyId: \").append(getTrafficPolicyId()).append(\",\");\r\n    if (getTrafficPolicyVersion() != null)\r\n        sb.append(\"TrafficPolicyVersion: \").append(getTrafficPolicyVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadObjectRequest.setUploadPartMetadata",
	"Comment": "sets the optional metadata to be included in each uploadpart request.",
	"Method": "void setUploadPartMetadata(ObjectMetadata partUploadMetadata){\r\n    this.uploadPartMetadata = partUploadMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withLastPart",
	"Comment": "marks this part as the last part being uploaded in a multipart upload,and returns this updated request object so that additional method callscan be chained together.",
	"Method": "UploadPartRequest withLastPart(boolean isLastPart){\r\n    setLastPart(isLastPart);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.modifyDBSnapshot",
	"Comment": "updates a manual db snapshot, which can be encrypted or not encrypted, with a new engine version.amazon rds supports upgrading db snapshots for mysql and oracle.",
	"Method": "DBSnapshot modifyDBSnapshot(ModifyDBSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyDBSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.DisableDomainAutoRenewResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeOptionGroupsAsync",
	"Comment": "simplified method form for invoking the describeoptiongroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeOptionGroupsResult> describeOptionGroupsAsync(DescribeOptionGroupsRequest request,java.util.concurrent.Future<DescribeOptionGroupsResult> describeOptionGroupsAsync,DescribeOptionGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeOptionGroupsRequest, DescribeOptionGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeOptionGroupsResult> describeOptionGroupsAsync,java.util.concurrent.Future<DescribeOptionGroupsResult> describeOptionGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeOptionGroupsRequest, DescribeOptionGroupsResult> asyncHandler){\r\n    return describeOptionGroupsAsync(new DescribeOptionGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListWorkteamsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.DomainSuggestion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getAvailability() != null)\r\n        sb.append(\"Availability: \").append(getAvailability());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setNextKeyMarker",
	"Comment": "sets the next key marker that should be used in the next request to getthe next page of results.",
	"Method": "void setNextKeyMarker(String nextKeyMarker){\r\n    this.nextKeyMarker = nextKeyMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeOrderableDBInstanceOptions",
	"Comment": "returns a list of orderable db instance options for the specified engine.",
	"Method": "DescribeOrderableDBInstanceOptionsResult describeOrderableDBInstanceOptions(DescribeOrderableDBInstanceOptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeOrderableDBInstanceOptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeEventCategoriesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventCategoriesMapList() != null)\r\n        sb.append(\"EventCategoriesMapList: \").append(getEventCategoriesMapList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateHealthCheckRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getHealthCheckConfig() != null)\r\n        sb.append(\"HealthCheckConfig: \").append(getHealthCheckConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaggedResources() != null)\r\n        sb.append(\"TaggedResources: \").append(getTaggedResources()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.setRequesterPays",
	"Comment": "used for downloading an amazon s3 object metadata from a requester pays bucket. ifset the requester is charged for downloading the data from the bucket.if a bucket is enabled for requester pays, then any attempt to read anobject metadata from it without requester pays enabled will result in a 403 errorand the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DeleteConfigurationSetEventDestinationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose cross origin configuration is beingset.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.getPrefix",
	"Comment": "gets the optional prefix parameter and restricts the response to keysthat begin with the specified prefix. use prefixes to separate abucket into different sets of keys, similar to how a file system organizes filesinto directories.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.DeleteConfigurationSetEventDestinationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getEventDestinationName() != null)\r\n        sb.append(\"EventDestinationName: \").append(getEventDestinationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketNotificationConfiguration.getConfigurationByName",
	"Comment": "returns the notification configuration for the given name.",
	"Method": "NotificationConfiguration getConfigurationByName(String name){\r\n    return configurations.get(name);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.listDeploymentJobs",
	"Comment": "returns a list of deployment jobs for a fleet. you can optionally provide filters to retrieve specific deploymentjobs.",
	"Method": "ListDeploymentJobsResult listDeploymentJobs(ListDeploymentJobsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDeploymentJobs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListStreamProcessorsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getStreamProcessors() != null)\r\n        sb.append(\"StreamProcessors: \").append(getStreamProcessors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteSnapshotCopyGrantResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHealthCheckLastFailureReasonResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheckObservations() != null)\r\n        sb.append(\"HealthCheckObservations: \").append(getHealthCheckObservations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.UntagResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getKeys() != null)\r\n        sb.append(\"Keys: \").append(getKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ListDomainsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeReservedDBInstancesAsync",
	"Comment": "simplified method form for invoking the describereserveddbinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedDBInstancesResult> describeReservedDBInstancesAsync(DescribeReservedDBInstancesRequest request,java.util.concurrent.Future<DescribeReservedDBInstancesResult> describeReservedDBInstancesAsync,DescribeReservedDBInstancesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedDBInstancesRequest, DescribeReservedDBInstancesResult> asyncHandler,java.util.concurrent.Future<DescribeReservedDBInstancesResult> describeReservedDBInstancesAsync,java.util.concurrent.Future<DescribeReservedDBInstancesResult> describeReservedDBInstancesAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedDBInstancesRequest, DescribeReservedDBInstancesResult> asyncHandler){\r\n    return describeReservedDBInstancesAsync(new DescribeReservedDBInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.AuthorizeSnapshotAccessRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getSnapshotClusterIdentifier() != null)\r\n        sb.append(\"SnapshotClusterIdentifier: \").append(getSnapshotClusterIdentifier()).append(\",\");\r\n    if (getAccountWithRestoreAccess() != null)\r\n        sb.append(\"AccountWithRestoreAccess: \").append(getAccountWithRestoreAccess());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketCrossOriginConfiguration.getRules",
	"Comment": "returns the list of rules that comprise this configuration.",
	"Method": "List<CORSRule> getRules(){\r\n    return rules;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartETag.getETag",
	"Comment": "returns the entity tag generated from the content of the associated part.",
	"Method": "String getETag(){\r\n    return eTag;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Beard.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.noExplicitRegionProvided",
	"Comment": "returns true if the region required for signing could not be computed from the client or the request.this is the case when the standard endpoint is in use and neither an explicit region nor a signer overridehave been provided by the user.",
	"Method": "boolean noExplicitRegionProvided(Request<?> request){\r\n    return isStandardEndpoint(request.getEndpoint()) && getSignerRegion() == null;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DeleteEmailIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getVideoMetadata() != null)\r\n        sb.append(\"VideoMetadata: \").append(getVideoMetadata()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getPersons() != null)\r\n        sb.append(\"Persons: \").append(getPersons());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeCertificates",
	"Comment": "lists the set of ca certificates provided by amazon rds for this aws account.",
	"Method": "DescribeCertificatesResult describeCertificates(DescribeCertificatesRequest request,DescribeCertificatesResult describeCertificates){\r\n    return describeCertificates(new DescribeCertificatesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.withStorageClass",
	"Comment": "sets the storage class for the replication destination. if not specified,amazon s3 uses the storage class of the source object to create object replica.returns the updated object.",
	"Method": "ReplicationDestinationConfig withStorageClass(String storageClass,ReplicationDestinationConfig withStorageClass,StorageClass storageClass){\r\n    setStorageClass(storageClass == null ? (String) null : storageClass.toString());\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateReusableDelegationSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonroute53resolver using the current builder configuration.",
	"Method": "AmazonRoute53Resolver build(AwsSyncClientParams params){\r\n    return new AmazonRoute53ResolverClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.setId",
	"Comment": "sets the identifier used to represent an analytics configuration.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartPersonTrackingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVideo() != null)\r\n        sb.append(\"Video: \").append(getVideo()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getNotificationChannel() != null)\r\n        sb.append(\"NotificationChannel: \").append(getNotificationChannel()).append(\",\");\r\n    if (getJobTag() != null)\r\n        sb.append(\"JobTag: \").append(getJobTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateVPCAssociationAuthorizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getVPC() != null)\r\n        sb.append(\"VPC: \").append(getVPC());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.CreateEmailIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmailIdentity() != null)\r\n        sb.append(\"EmailIdentity: \").append(getEmailIdentity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.GetContactReachabilityStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUpload.getStorageClass",
	"Comment": "returns the storage class indicating how the data in this multipartupload will be stored.",
	"Method": "String getStorageClass(){\r\n    return storageClass;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedInitiateMultipartUploadRequest.setMaterialsDescription",
	"Comment": "sets the materials description for the encryption materials to be used with the current multi part upload request.",
	"Method": "void setMaterialsDescription(Map<String, String> materialsDescription){\r\n    this.materialsDescription = materialsDescription == null ? null : Collections.unmodifiableMap(new HashMap<String, String>(materialsDescription));\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.withProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectupload status, and returns this updated object so that additional methodcalls can be chained together.",
	"Method": "T withProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setProgressListener(progressListener);\r\n    @SuppressWarnings(\"unchecked\")\r\n    T t = (T) this;\r\n    return t;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DefaultRetention.withYears",
	"Comment": "the number of years that you want to specify for the default retention period.",
	"Method": "DefaultRetention withYears(Integer years){\r\n    this.years = years;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeClusterSecurityGroupsAsync",
	"Comment": "simplified method form for invoking the describeclustersecuritygroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync(DescribeClusterSecurityGroupsRequest request,java.util.concurrent.Future<DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync,DescribeClusterSecurityGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClusterSecurityGroupsRequest, DescribeClusterSecurityGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync,java.util.concurrent.Future<DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeClusterSecurityGroupsRequest, DescribeClusterSecurityGroupsResult> asyncHandler){\r\n    return describeClusterSecurityGroupsAsync(new DescribeClusterSecurityGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.BatchDeleteClusterSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentifiers() != null)\r\n        sb.append(\"Identifiers: \").append(getIdentifiers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.RenderingEngine.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.Body.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getText() != null)\r\n        sb.append(\"Text: \").append(getText()).append(\",\");\r\n    if (getHtml() != null)\r\n        sb.append(\"Html: \").append(getHtml());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.AWSPricingClient.describeServices",
	"Comment": "returns the metadata for one service or a list of the metadata for all services. use this without a service codeto get the service codes for all services. use it with a service code, such as amazonec2, to getinformation specific to that service, such as the attribute names available for that service. for example, someof the attribute names available for ec2 are volumetype, maxiopsvolume,operation, locationtype, and instancecapacity10xlarge.",
	"Method": "DescribeServicesResult describeServices(DescribeServicesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeServices(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.OrderableDBInstanceOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getMultiAZCapable() != null)\r\n        sb.append(\"MultiAZCapable: \").append(getMultiAZCapable()).append(\",\");\r\n    if (getReadReplicaCapable() != null)\r\n        sb.append(\"ReadReplicaCapable: \").append(getReadReplicaCapable()).append(\",\");\r\n    if (getVpc() != null)\r\n        sb.append(\"Vpc: \").append(getVpc()).append(\",\");\r\n    if (getSupportsStorageEncryption() != null)\r\n        sb.append(\"SupportsStorageEncryption: \").append(getSupportsStorageEncryption()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getSupportsIops() != null)\r\n        sb.append(\"SupportsIops: \").append(getSupportsIops()).append(\",\");\r\n    if (getSupportsEnhancedMonitoring() != null)\r\n        sb.append(\"SupportsEnhancedMonitoring: \").append(getSupportsEnhancedMonitoring()).append(\",\");\r\n    if (getSupportsIAMDatabaseAuthentication() != null)\r\n        sb.append(\"SupportsIAMDatabaseAuthentication: \").append(getSupportsIAMDatabaseAuthentication()).append(\",\");\r\n    if (getSupportsPerformanceInsights() != null)\r\n        sb.append(\"SupportsPerformanceInsights: \").append(getSupportsPerformanceInsights()).append(\",\");\r\n    if (getMinStorageSize() != null)\r\n        sb.append(\"MinStorageSize: \").append(getMinStorageSize()).append(\",\");\r\n    if (getMaxStorageSize() != null)\r\n        sb.append(\"MaxStorageSize: \").append(getMaxStorageSize()).append(\",\");\r\n    if (getMinIopsPerDbInstance() != null)\r\n        sb.append(\"MinIopsPerDbInstance: \").append(getMinIopsPerDbInstance()).append(\",\");\r\n    if (getMaxIopsPerDbInstance() != null)\r\n        sb.append(\"MaxIopsPerDbInstance: \").append(getMaxIopsPerDbInstance()).append(\",\");\r\n    if (getMinIopsPerGib() != null)\r\n        sb.append(\"MinIopsPerGib: \").append(getMinIopsPerGib()).append(\",\");\r\n    if (getMaxIopsPerGib() != null)\r\n        sb.append(\"MaxIopsPerGib: \").append(getMaxIopsPerGib()).append(\",\");\r\n    if (getAvailableProcessorFeatures() != null)\r\n        sb.append(\"AvailableProcessorFeatures: \").append(getAvailableProcessorFeatures()).append(\",\");\r\n    if (getSupportedEngineModes() != null)\r\n        sb.append(\"SupportedEngineModes: \").append(getSupportedEngineModes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateRobotApplicationVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getCurrentRevisionId() != null)\r\n        sb.append(\"CurrentRevisionId: \").append(getCurrentRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.setMaxKeys",
	"Comment": "sets the optional maxkeys parameter indicating the maximum number of keys toinclude in the response.",
	"Method": "void setMaxKeys(Integer maxKeys){\r\n    this.maxKeys = maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.TransferManagerUtils.isDownloadParallelizable",
	"Comment": "returns true if the specified download request can use parallel partdownloads for increased performance.",
	"Method": "boolean isDownloadParallelizable(AmazonS3 s3,GetObjectRequest getObjectRequest,Integer partCount){\r\n    ValidationUtils.assertNotNull(s3, \"S3 client\");\r\n    ValidationUtils.assertNotNull(getObjectRequest, \"GetObjectRequest\");\r\n    if (s3 instanceof AmazonS3Encryption || getObjectRequest.getRange() != null || getObjectRequest.getPartNumber() != null || partCount == null) {\r\n        return false;\r\n    }\r\n    return true;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterNode.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNodeRole() != null)\r\n        sb.append(\"NodeRole: \").append(getNodeRole()).append(\",\");\r\n    if (getPrivateIPAddress() != null)\r\n        sb.append(\"PrivateIPAddress: \").append(getPrivateIPAddress()).append(\",\");\r\n    if (getPublicIPAddress() != null)\r\n        sb.append(\"PublicIPAddress: \").append(getPublicIPAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteNotebookInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.disableLogging",
	"Comment": "stops logging information, such as queries and connection attempts, for the specified amazon redshift cluster.",
	"Method": "DisableLoggingResult disableLogging(DisableLoggingRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisableLogging(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.SupportedPlatform.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeTrainingJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJobName() != null)\r\n        sb.append(\"TrainingJobName: \").append(getTrainingJobName()).append(\",\");\r\n    if (getTrainingJobArn() != null)\r\n        sb.append(\"TrainingJobArn: \").append(getTrainingJobArn()).append(\",\");\r\n    if (getTuningJobArn() != null)\r\n        sb.append(\"TuningJobArn: \").append(getTuningJobArn()).append(\",\");\r\n    if (getLabelingJobArn() != null)\r\n        sb.append(\"LabelingJobArn: \").append(getLabelingJobArn()).append(\",\");\r\n    if (getModelArtifacts() != null)\r\n        sb.append(\"ModelArtifacts: \").append(getModelArtifacts()).append(\",\");\r\n    if (getTrainingJobStatus() != null)\r\n        sb.append(\"TrainingJobStatus: \").append(getTrainingJobStatus()).append(\",\");\r\n    if (getSecondaryStatus() != null)\r\n        sb.append(\"SecondaryStatus: \").append(getSecondaryStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getHyperParameters() != null)\r\n        sb.append(\"HyperParameters: \").append(getHyperParameters()).append(\",\");\r\n    if (getAlgorithmSpecification() != null)\r\n        sb.append(\"AlgorithmSpecification: \").append(getAlgorithmSpecification()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getInputDataConfig() != null)\r\n        sb.append(\"InputDataConfig: \").append(getInputDataConfig()).append(\",\");\r\n    if (getOutputDataConfig() != null)\r\n        sb.append(\"OutputDataConfig: \").append(getOutputDataConfig()).append(\",\");\r\n    if (getResourceConfig() != null)\r\n        sb.append(\"ResourceConfig: \").append(getResourceConfig()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getStoppingCondition() != null)\r\n        sb.append(\"StoppingCondition: \").append(getStoppingCondition()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTrainingStartTime() != null)\r\n        sb.append(\"TrainingStartTime: \").append(getTrainingStartTime()).append(\",\");\r\n    if (getTrainingEndTime() != null)\r\n        sb.append(\"TrainingEndTime: \").append(getTrainingEndTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getSecondaryStatusTransitions() != null)\r\n        sb.append(\"SecondaryStatusTransitions: \").append(getSecondaryStatusTransitions()).append(\",\");\r\n    if (getFinalMetricDataList() != null)\r\n        sb.append(\"FinalMetricDataList: \").append(getFinalMetricDataList()).append(\",\");\r\n    if (getEnableNetworkIsolation() != null)\r\n        sb.append(\"EnableNetworkIsolation: \").append(getEnableNetworkIsolation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateEventSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getSourceIds() != null)\r\n        sb.append(\"SourceIds: \").append(getSourceIds()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getSeverity() != null)\r\n        sb.append(\"Severity: \").append(getSeverity()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.setRoutingRules",
	"Comment": "set the list of routing rules that can be used for configuring redirectsif certain conditions are meet.",
	"Method": "void setRoutingRules(List<RoutingRule> routingRules){\r\n    this.routingRules = routingRules;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.getSpeechSynthesisTask",
	"Comment": "retrieves a specific speechsynthesistask object based on its taskid. this object contains information about thegiven speech synthesis task, including the status of the task, and a link to the s3 bucket containing the outputof the task.",
	"Method": "GetSpeechSynthesisTaskResult getSpeechSynthesisTask(GetSpeechSynthesisTaskRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSpeechSynthesisTask(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEmailChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getEmailChannelRequest() != null)\r\n        sb.append(\"EmailChannelRequest: \").append(getEmailChannelRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifySnapshotScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduleIdentifier() != null)\r\n        sb.append(\"ScheduleIdentifier: \").append(getScheduleIdentifier()).append(\",\");\r\n    if (getScheduleDefinitions() != null)\r\n        sb.append(\"ScheduleDefinitions: \").append(getScheduleDefinitions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTrafficPoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicyIdMarker() != null)\r\n        sb.append(\"TrafficPolicyIdMarker: \").append(getTrafficPolicyIdMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeploymentConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConcurrentDeploymentPercentage() != null)\r\n        sb.append(\"ConcurrentDeploymentPercentage: \").append(getConcurrentDeploymentPercentage()).append(\",\");\r\n    if (getFailureThresholdPercentage() != null)\r\n        sb.append(\"FailureThresholdPercentage: \").append(getFailureThresholdPercentage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterParameterGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupName() != null)\r\n        sb.append(\"ParameterGroupName: \").append(getParameterGroupName()).append(\",\");\r\n    if (getParameterGroupFamily() != null)\r\n        sb.append(\"ParameterGroupFamily: \").append(getParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeReservedDBInstancesOfferingsAsync",
	"Comment": "simplified method form for invoking the describereserveddbinstancesofferings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedDBInstancesOfferingsResult> describeReservedDBInstancesOfferingsAsync(DescribeReservedDBInstancesOfferingsRequest request,java.util.concurrent.Future<DescribeReservedDBInstancesOfferingsResult> describeReservedDBInstancesOfferingsAsync,DescribeReservedDBInstancesOfferingsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedDBInstancesOfferingsRequest, DescribeReservedDBInstancesOfferingsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedDBInstancesOfferingsResult> describeReservedDBInstancesOfferingsAsync,java.util.concurrent.Future<DescribeReservedDBInstancesOfferingsResult> describeReservedDBInstancesOfferingsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedDBInstancesOfferingsRequest, DescribeReservedDBInstancesOfferingsResult> asyncHandler){\r\n    return describeReservedDBInstancesOfferingsAsync(new DescribeReservedDBInstancesOfferingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.restoreTableFromClusterSnapshot",
	"Comment": "creates a new table from a table in an amazon redshift cluster snapshot. you must create the new table within theamazon redshift cluster that the snapshot was taken from.you cannot use restoretablefromclustersnapshot to restore a table with the same name as an existingtable in an amazon redshift cluster. that is, you cannot overwrite an existing table in a cluster with a restoredtable. if you want to replace your original table with a new, restored table, then rename or drop your originaltable before you call restoretablefromclustersnapshot. when you have renamed your original table,then you can pass the original name of the table as the newtablename parameter value in the call torestoretablefromclustersnapshot. this way, you can replace the original table with the table createdfrom the snapshot.",
	"Method": "TableRestoreStatus restoreTableFromClusterSnapshot(RestoreTableFromClusterSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRestoreTableFromClusterSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.createCodeRepository",
	"Comment": "create a git repository as a resource in your amazon sagemaker account. you can associate the repository withnotebook instances so that you can use git source control for the notebooks you create. the git repository is aresource in your amazon sagemaker account, so it can be associated with more than one notebook instance, and itpersists independently from the lifecycle of any notebook instances it is associated with.the repository can be hosted either in aws codecommit or in any other gitrepository.",
	"Method": "CreateCodeRepositoryResult createCodeRepository(CreateCodeRepositoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateCodeRepository(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getNewDBClusterIdentifier() != null)\r\n        sb.append(\"NewDBClusterIdentifier: \").append(getNewDBClusterIdentifier()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getBacktrackWindow() != null)\r\n        sb.append(\"BacktrackWindow: \").append(getBacktrackWindow()).append(\",\");\r\n    if (getCloudwatchLogsExportConfiguration() != null)\r\n        sb.append(\"CloudwatchLogsExportConfiguration: \").append(getCloudwatchLogsExportConfiguration()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getScalingConfiguration() != null)\r\n        sb.append(\"ScalingConfiguration: \").append(getScalingConfiguration()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection()).append(\",\");\r\n    if (getEnableHttpEndpoint() != null)\r\n        sb.append(\"EnableHttpEndpoint: \").append(getEnableHttpEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.waiters.DescribeDBSnapshotsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeDBSnapshotsResult apply(DescribeDBSnapshotsRequest describeDBSnapshotsRequest){\r\n    return client.describeDBSnapshots(describeDBSnapshotsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeSnapshotCopyGrantsAsync",
	"Comment": "simplified method form for invoking the describesnapshotcopygrants operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync(DescribeSnapshotCopyGrantsRequest request,java.util.concurrent.Future<DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync,DescribeSnapshotCopyGrantsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotCopyGrantsRequest, DescribeSnapshotCopyGrantsResult> asyncHandler,java.util.concurrent.Future<DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync,java.util.concurrent.Future<DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotCopyGrantsRequest, DescribeSnapshotCopyGrantsResult> asyncHandler){\r\n    return describeSnapshotCopyGrantsAsync(new DescribeSnapshotCopyGrantsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.CallInstructionsMessageType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getText() != null)\r\n        sb.append(\"Text: \").append(getText());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterParameterStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterName() != null)\r\n        sb.append(\"ParameterName: \").append(getParameterName()).append(\",\");\r\n    if (getParameterApplyStatus() != null)\r\n        sb.append(\"ParameterApplyStatus: \").append(getParameterApplyStatus()).append(\",\");\r\n    if (getParameterApplyErrorDescription() != null)\r\n        sb.append(\"ParameterApplyErrorDescription: \").append(getParameterApplyErrorDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.AmazonPinpointSMSVoiceClient.createConfigurationSet",
	"Comment": "create a new configuration set. after you create the configuration set, you can add one or more eventdestinations to it.",
	"Method": "CreateConfigurationSetResult createConfigurationSet(CreateConfigurationSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateConfigurationSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSecurityGroupName() != null)\r\n        sb.append(\"ClusterSecurityGroupName: \").append(getClusterSecurityGroupName()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.getNextContinuationToken",
	"Comment": "gets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "String getNextContinuationToken(){\r\n    return nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsramasync using the current builder configuration.",
	"Method": "AWSRAMAsync build(AwsAsyncClientParams params){\r\n    return new AWSRAMAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipSandboxChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSVoipSandboxChannelRequest() != null)\r\n        sb.append(\"APNSVoipSandboxChannelRequest: \").append(getAPNSVoipSandboxChannelRequest()).append(\",\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.UpdateRobotApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getCurrentRevisionId() != null)\r\n        sb.append(\"CurrentRevisionId: \").append(getCurrentRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.copyClusterSnapshot",
	"Comment": "copies the specified automated cluster snapshot to a new manual cluster snapshot. the source must be an automatedsnapshot and it must be in the available state.when you delete a cluster, amazon redshift deletes any automated snapshots of the cluster. also, when theretention period of the snapshot expires, amazon redshift automatically deletes it. if you want to keep anautomated snapshot for a longer period, you can make a manual copy of the snapshot. manual snapshots are retaineduntil you delete them.for more information about working with snapshots, go to amazon redshift snapshotsin the amazon redshift cluster management guide.",
	"Method": "Snapshot copyClusterSnapshot(CopyClusterSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCopyClusterSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectLockConfiguration.getObjectLockEnabled",
	"Comment": "indicates whether this object has an object lock configuration enabled.",
	"Method": "String getObjectLockEnabled(){\r\n    return objectLockEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.BacktrackDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getBacktrackTo() != null)\r\n        sb.append(\"BacktrackTo: \").append(getBacktrackTo()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce()).append(\",\");\r\n    if (getUseEarliestTimeOnPointInTimeUnavailable() != null)\r\n        sb.append(\"UseEarliestTimeOnPointInTimeUnavailable: \").append(getUseEarliestTimeOnPointInTimeUnavailable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateRobotApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ChangeResourceRecordSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeInfo() != null)\r\n        sb.append(\"ChangeInfo: \").append(getChangeInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setKey",
	"Comment": "sets the key of the associated multipart upload whose parts are beinglisted.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetTrafficPolicyInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicyInstance() != null)\r\n        sb.append(\"TrafficPolicyInstance: \").append(getTrafficPolicyInstance());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.LinkedService.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServicePrincipal() != null)\r\n        sb.append(\"ServicePrincipal: \").append(getServicePrincipal()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.ListGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupIdentifiers() != null)\r\n        sb.append(\"GroupIdentifiers: \").append(getGroupIdentifiers()).append(\",\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.setGlacierJobParameters",
	"Comment": "sets glacier related parameters pertaining to this job.this should not be used for restores with a specified outputlocation.",
	"Method": "void setGlacierJobParameters(GlacierJobParameters glacierJobParameters){\r\n    this.glacierJobParameters = glacierJobParameters;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.Robot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFleetArn() != null)\r\n        sb.append(\"FleetArn: \").append(getFleetArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getGreenGrassGroupId() != null)\r\n        sb.append(\"GreenGrassGroupId: \").append(getGreenGrassGroupId()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getLastDeploymentJob() != null)\r\n        sb.append(\"LastDeploymentJob: \").append(getLastDeploymentJob()).append(\",\");\r\n    if (getLastDeploymentTime() != null)\r\n        sb.append(\"LastDeploymentTime: \").append(getLastDeploymentTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.listNotebookInstanceLifecycleConfigs",
	"Comment": "lists notebook instance lifestyle configurations created with the createnotebookinstancelifecycleconfigapi.",
	"Method": "ListNotebookInstanceLifecycleConfigsResult listNotebookInstanceLifecycleConfigs(ListNotebookInstanceLifecycleConfigsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListNotebookInstanceLifecycleConfigs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApplicationSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getWriteApplicationSettingsRequest() != null)\r\n        sb.append(\"WriteApplicationSettingsRequest: \").append(getWriteApplicationSettingsRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.setBucketName",
	"Comment": "sets the name of the bucket in which the new multipart upload wasinitiated.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.EventCategoriesMap.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.RawMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.RenderUiTemplateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUiTemplate() != null)\r\n        sb.append(\"UiTemplate: \").append(getUiTemplate()).append(\",\");\r\n    if (getTask() != null)\r\n        sb.append(\"Task: \").append(getTask()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.RecognizeCelebritiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getKey",
	"Comment": "returns the key value specified in the original request used to identifywhich multipart upload contains the parts to list.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.S3DataSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3DataType() != null)\r\n        sb.append(\"S3DataType: \").append(getS3DataType()).append(\",\");\r\n    if (getS3Uri() != null)\r\n        sb.append(\"S3Uri: \").append(getS3Uri()).append(\",\");\r\n    if (getS3DataDistributionType() != null)\r\n        sb.append(\"S3DataDistributionType: \").append(getS3DataDistributionType()).append(\",\");\r\n    if (getAttributeNames() != null)\r\n        sb.append(\"AttributeNames: \").append(getAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.getDestinationConfig",
	"Comment": "returns the destination configuration for the replication rule.",
	"Method": "ReplicationDestinationConfig getDestinationConfig(){\r\n    return destinationConfig;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Gender.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.AvailabilityZone.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeClusterVersionsAsync",
	"Comment": "simplified method form for invoking the describeclusterversions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClusterVersionsResult> describeClusterVersionsAsync(DescribeClusterVersionsRequest request,java.util.concurrent.Future<DescribeClusterVersionsResult> describeClusterVersionsAsync,DescribeClusterVersionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClusterVersionsRequest, DescribeClusterVersionsResult> asyncHandler,java.util.concurrent.Future<DescribeClusterVersionsResult> describeClusterVersionsAsync,java.util.concurrent.Future<DescribeClusterVersionsResult> describeClusterVersionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeClusterVersionsRequest, DescribeClusterVersionsResult> asyncHandler){\r\n    return describeClusterVersionsAsync(new DescribeClusterVersionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopNotebookInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceName() != null)\r\n        sb.append(\"NotebookInstanceName: \").append(getNotebookInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setMaxUploads",
	"Comment": "sets the optional maximum number of uploads to be listed, as specified inthe original request.",
	"Method": "void setMaxUploads(int maxUploads){\r\n    this.maxUploads = maxUploads;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.waiters.AmazonRDSWaiters.dBInstanceAvailable",
	"Comment": "builds a dbinstanceavailable waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeDBInstancesRequest> dBInstanceAvailable(){\r\n    return new WaiterBuilder<DescribeDBInstancesRequest, DescribeDBInstancesResult>().withSdkFunction(new DescribeDBInstancesFunction(client)).withAcceptors(new DBInstanceAvailable.IsAvailableMatcher(), new DBInstanceAvailable.IsDeletedMatcher(), new DBInstanceAvailable.IsDeletingMatcher(), new DBInstanceAvailable.IsFailedMatcher(), new DBInstanceAvailable.IsIncompatiblerestoreMatcher(), new DBInstanceAvailable.IsIncompatibleparametersMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.setVersionId",
	"Comment": "sets the optional version id of the object version whose metadata isbeing retrieved. if not specified, the latest version will be used.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptionMaterials.getSymmetricKey",
	"Comment": "returns the symmetric key stored in this encryptionmaterials object.",
	"Method": "SecretKey getSymmetricKey(){\r\n    return this.symmetricKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.model.Service.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceCode() != null)\r\n        sb.append(\"ServiceCode: \").append(getServiceCode()).append(\",\");\r\n    if (getAttributeNames() != null)\r\n        sb.append(\"AttributeNames: \").append(getAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated deleteobjectsrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "DeleteObjectsRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.RecognizeCelebritiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCelebrityFaces() != null)\r\n        sb.append(\"CelebrityFaces: \").append(getCelebrityFaces()).append(\",\");\r\n    if (getUnrecognizedFaces() != null)\r\n        sb.append(\"UnrecognizedFaces: \").append(getUnrecognizedFaces()).append(\",\");\r\n    if (getOrientationCorrection() != null)\r\n        sb.append(\"OrientationCorrection: \").append(getOrientationCorrection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.AWSRDSDataAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsrdsdataasync using the current builder configuration.",
	"Method": "AWSRDSDataAsync build(AwsAsyncClientParams params){\r\n    return new AWSRDSDataAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.withNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "ListBucketInventoryConfigurationsResult withNextContinuationToken(String nextContinuationToken){\r\n    setNextContinuationToken(nextContinuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.removeSourceIdentifierFromSubscription",
	"Comment": "removes a source identifier from an existing rds event notification subscription.",
	"Method": "EventSubscription removeSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveSourceIdentifierFromSubscription(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobForWorkteamSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabelingJobName() != null)\r\n        sb.append(\"LabelingJobName: \").append(getLabelingJobName()).append(\",\");\r\n    if (getJobReferenceCode() != null)\r\n        sb.append(\"JobReferenceCode: \").append(getJobReferenceCode()).append(\",\");\r\n    if (getWorkRequesterAccountId() != null)\r\n        sb.append(\"WorkRequesterAccountId: \").append(getWorkRequesterAccountId()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLabelCounters() != null)\r\n        sb.append(\"LabelCounters: \").append(getLabelCounters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.getReusableDelegationSetLimit",
	"Comment": "gets the maximum number of hosted zones that you can associate with the specified reusable delegation set.for the default limit, see limits in the amazonroute 53 developer guide. to request a higher limit, open a case.",
	"Method": "GetReusableDelegationSetLimitResult getReusableDelegationSetLimit(GetReusableDelegationSetLimitRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetReusableDelegationSetLimit(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBParameterGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDBParameterGroupArn() != null)\r\n        sb.append(\"DBParameterGroupArn: \").append(getDBParameterGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetReusableDelegationSetLimitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CharacterSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getCharacterSetDescription() != null)\r\n        sb.append(\"CharacterSetDescription: \").append(getCharacterSetDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteEventSubscriptionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setAccessControlList",
	"Comment": "sets the optional access control list for the new object. if specified,cannedacl will be ignored.",
	"Method": "void setAccessControlList(AccessControlList accessControlList){\r\n    this.accessControlList = accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketLocationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose location is being requested, and\treturns this updated object so that additional method calls can be\tchained together.",
	"Method": "GetBucketLocationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StopStreamProcessorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.TextDetection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDetectedText() != null)\r\n        sb.append(\"DetectedText: \").append(getDetectedText()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getParentId() != null)\r\n        sb.append(\"ParentId: \").append(getParentId()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence()).append(\",\");\r\n    if (getGeometry() != null)\r\n        sb.append(\"Geometry: \").append(getGeometry());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.DeleteTagsForDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setUploadId",
	"Comment": "sets the id of the existing, initiated multipart upload with which thisnew part will be associated.",
	"Method": "void setUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.Message.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubject() != null)\r\n        sb.append(\"Subject: \").append(getSubject()).append(\",\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DeleteConfigurationSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.EnableSharingWithAwsOrganizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturnValue() != null)\r\n        sb.append(\"ReturnValue: \").append(getReturnValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketLocationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose location is being requested.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.setBucketRequestPayment",
	"Comment": "sets the request payment configuration for a given amazon s3 bucket.this operation can be done only by the owner of the amazon s3 bucket.when the request payment configuration for a amazon s3 bucket is set torequester, the requester instead of the bucket owner paysthe cost of the request and the data download from the bucket. the bucketowner always pays the cost of storing data.",
	"Method": "void setBucketRequestPayment(SetRequestPaymentConfigurationRequest setRequestPaymentConfigurationRequest){\r\n    String bucketName = setRequestPaymentConfigurationRequest.getBucketName();\r\n    RequestPaymentConfiguration configuration = setRequestPaymentConfigurationRequest.getConfiguration();\r\n    rejectNull(bucketName, \"The bucket name parameter must be specified while setting the Requester Pays.\");\r\n    rejectNull(configuration, \"The request payment configuration parameter must be specified when setting the Requester Pays.\");\r\n    Request<SetRequestPaymentConfigurationRequest> request = createRequest(bucketName, null, setRequestPaymentConfigurationRequest, HttpMethodName.PUT);\r\n    request.addHandlerContext(HandlerContextKey.OPERATION_NAME, \"PutBucketRequestPayment\");\r\n    request.addParameter(\"requestPayment\", null);\r\n    request.addHeader(\"Content-Type\", \"application/xml\");\r\n    byte[] bytes = requestPaymentConfigurationXmlFactory.convertToXmlByteArray(configuration);\r\n    request.setContent(new ByteArrayInputStream(bytes));\r\n    invoke(request, voidResponseHandler, bucketName, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated abortmultipartuploadrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "AbortMultipartUploadRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.model.DeletePublicAccessBlockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateSimulationApplicationVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getSimulationSoftwareSuite() != null)\r\n        sb.append(\"SimulationSoftwareSuite: \").append(getSimulationSoftwareSuite()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getRenderingEngine() != null)\r\n        sb.append(\"RenderingEngine: \").append(getRenderingEngine()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateGcmChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGCMChannelResponse() != null)\r\n        sb.append(\"GCMChannelResponse: \").append(getGCMChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseListMyBucketsResponse",
	"Comment": "parses a listallmybuckets response xml document from an input stream.",
	"Method": "ListAllMyBucketsHandler parseListMyBucketsResponse(InputStream inputStream){\r\n    ListAllMyBucketsHandler handler = new ListAllMyBucketsHandler();\r\n    parseXmlInputStream(handler, sanitizeXmlDocument(handler, inputStream));\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setDestinationBucketName",
	"Comment": "sets the destination bucket name which will contain the new,copied object.",
	"Method": "void setDestinationBucketName(String destinationBucketName){\r\n    this.destinationBucketName = destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.modifyDBSubnetGroup",
	"Comment": "modifies an existing db subnet group. db subnet groups must contain at least one subnet in at least two azs inthe aws region.",
	"Method": "DBSubnetGroup modifyDBSubnetGroup(ModifyDBSubnetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyDBSubnetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerBuilder.setMultipartUploadThreshold",
	"Comment": "sets the size threshold, in bytes, for when to use multipart uploads. uploads over this sizewill automatically use a multipart upload strategy, while uploads smaller than this thresholdwill use a single connection to upload the whole object.multipart uploads are easier to recover from and also potentially faster than single partuploads, especially when the upload parts can be uploaded in parallel as with files. becausethere is additional network communication, small uploads are still recommended to use asingle connection for the upload.",
	"Method": "void setMultipartUploadThreshold(Long multipartUploadThreshold){\r\n    this.multipartUploadThreshold = multipartUploadThreshold;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setVersionSummaries",
	"Comment": "for internal use only. sets the list of versionsummaries describing the versions stored in the associated s3 bucket.",
	"Method": "void setVersionSummaries(List<S3VersionSummary> versionSummaries){\r\n    this.versionSummaries = versionSummaries;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectLockRule.withDefaultRetention",
	"Comment": "the default retention period that you want to apply to new objects placed in the specified bucket.",
	"Method": "ObjectLockRule withDefaultRetention(DefaultRetention defaultRetention){\r\n    this.defaultRetention = defaultRetention;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RemoveFromGlobalClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalClusterIdentifier() != null)\r\n        sb.append(\"GlobalClusterIdentifier: \").append(getGlobalClusterIdentifier()).append(\",\");\r\n    if (getDbClusterIdentifier() != null)\r\n        sb.append(\"DbClusterIdentifier: \").append(getDbClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withFileOffset",
	"Comment": "sets the optional offset in the specified file, at which to beginuploading data for this part, and returns this updated uploadpartrequestobject so that additional method calls can be chained together.if not specified, data will be read from the beginning of the file.",
	"Method": "UploadPartRequest withFileOffset(long fileOffset){\r\n    setFileOffset(fileOffset);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSnapshotIdentifier() != null)\r\n        sb.append(\"DBSnapshotIdentifier: \").append(getDBSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.AWSResourceGroupsTaggingAPIClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.MultipleFileDownloadImpl.getBucketName",
	"Comment": "returns the name of the bucket from which files are downloaded.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBEngineVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBEngineVersions() != null)\r\n        sb.append(\"DBEngineVersions: \").append(getDBEngineVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBClusterSnapshot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getSnapshotCreateTime() != null)\r\n        sb.append(\"SnapshotCreateTime: \").append(getSnapshotCreateTime()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getClusterCreateTime() != null)\r\n        sb.append(\"ClusterCreateTime: \").append(getClusterCreateTime()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getSnapshotType() != null)\r\n        sb.append(\"SnapshotType: \").append(getSnapshotType()).append(\",\");\r\n    if (getPercentProgress() != null)\r\n        sb.append(\"PercentProgress: \").append(getPercentProgress()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getDBClusterSnapshotArn() != null)\r\n        sb.append(\"DBClusterSnapshotArn: \").append(getDBClusterSnapshotArn()).append(\",\");\r\n    if (getSourceDBClusterSnapshotArn() != null)\r\n        sb.append(\"SourceDBClusterSnapshotArn: \").append(getSourceDBClusterSnapshotArn()).append(\",\");\r\n    if (getIAMDatabaseAuthenticationEnabled() != null)\r\n        sb.append(\"IAMDatabaseAuthenticationEnabled: \").append(getIAMDatabaseAuthenticationEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBParameterGroupStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getParameterApplyStatus() != null)\r\n        sb.append(\"ParameterApplyStatus: \").append(getParameterApplyStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ShuffleConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSeed() != null)\r\n        sb.append(\"Seed: \").append(getSeed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetAccountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSendQuota() != null)\r\n        sb.append(\"SendQuota: \").append(getSendQuota()).append(\",\");\r\n    if (getSendingEnabled() != null)\r\n        sb.append(\"SendingEnabled: \").append(getSendingEnabled()).append(\",\");\r\n    if (getDedicatedIpAutoWarmupEnabled() != null)\r\n        sb.append(\"DedicatedIpAutoWarmupEnabled: \").append(getDedicatedIpAutoWarmupEnabled()).append(\",\");\r\n    if (getEnforcementStatus() != null)\r\n        sb.append(\"EnforcementStatus: \").append(getEnforcementStatus()).append(\",\");\r\n    if (getProductionAccessEnabled() != null)\r\n        sb.append(\"ProductionAccessEnabled: \").append(getProductionAccessEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.metrics.MetricsConfiguration.getId",
	"Comment": "returns the identifier used to represent a metrics configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListAlgorithmsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetGeoLocationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContinentCode() != null)\r\n        sb.append(\"ContinentCode: \").append(getContinentCode()).append(\",\");\r\n    if (getCountryCode() != null)\r\n        sb.append(\"CountryCode: \").append(getCountryCode()).append(\",\");\r\n    if (getSubdivisionCode() != null)\r\n        sb.append(\"SubdivisionCode: \").append(getSubdivisionCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetConfigurationSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeReservedDBInstancesOfferingsAsync",
	"Comment": "simplified method form for invoking the describereserveddbinstancesofferings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedDBInstancesOfferingsResult> describeReservedDBInstancesOfferingsAsync(DescribeReservedDBInstancesOfferingsRequest request,java.util.concurrent.Future<DescribeReservedDBInstancesOfferingsResult> describeReservedDBInstancesOfferingsAsync,DescribeReservedDBInstancesOfferingsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedDBInstancesOfferingsRequest, DescribeReservedDBInstancesOfferingsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedDBInstancesOfferingsResult> describeReservedDBInstancesOfferingsAsync,java.util.concurrent.Future<DescribeReservedDBInstancesOfferingsResult> describeReservedDBInstancesOfferingsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedDBInstancesOfferingsRequest, DescribeReservedDBInstancesOfferingsResult> asyncHandler){\r\n    return describeReservedDBInstancesOfferingsAsync(new DescribeReservedDBInstancesOfferingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterSecurityGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getClusterSecurityGroups() != null)\r\n        sb.append(\"ClusterSecurityGroups: \").append(getClusterSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsresourcegroupsasync using the current builder configuration.",
	"Method": "AWSResourceGroupsAsync build(AwsAsyncClientParams params){\r\n    return new AWSResourceGroupsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setNextPartNumberMarker",
	"Comment": "sets the next part number marker. if this listing is truncated, this isthe part number marker that should be used in the next request to get thenext page of results.",
	"Method": "void setNextPartNumberMarker(int nextPartNumberMarker){\r\n    this.nextPartNumberMarker = nextPartNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.EmailContent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSimple() != null)\r\n        sb.append(\"Simple: \").append(getSimple()).append(\",\");\r\n    if (getRaw() != null)\r\n        sb.append(\"Raw: \").append(getRaw());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ListOperationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperations() != null)\r\n        sb.append(\"Operations: \").append(getOperations()).append(\",\");\r\n    if (getNextPageMarker() != null)\r\n        sb.append(\"NextPageMarker: \").append(getNextPageMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityRecognitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setNewObjectMetadata",
	"Comment": "sets the object metadata to use for the new, copied object. by defaultthe object metadata from the source object is copied to thedestination object, but when setting object metadata with this method,no metadata from the source object is copied. instead, the newdestination object will have the metadata specified with this call.",
	"Method": "void setNewObjectMetadata(ObjectMetadata newObjectMetadata){\r\n    this.newObjectMetadata = newObjectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.EyeOpen.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListGeoLocationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGeoLocationDetailsList() != null)\r\n        sb.append(\"GeoLocationDetailsList: \").append(getGeoLocationDetailsList()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getNextContinentCode() != null)\r\n        sb.append(\"NextContinentCode: \").append(getNextContinentCode()).append(\",\");\r\n    if (getNextCountryCode() != null)\r\n        sb.append(\"NextCountryCode: \").append(getNextCountryCode()).append(\",\");\r\n    if (getNextSubdivisionCode() != null)\r\n        sb.append(\"NextSubdivisionCode: \").append(getNextSubdivisionCode()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setUnmodifiedSinceConstraint",
	"Comment": "sets the optional unmodified constraint that restricts this requestto executing only if the source object has not beenmodified after the specified date.the unmodified constraint may be used with matching etagconstraints, but not with any other type of constraint.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "void setUnmodifiedSinceConstraint(Date date){\r\n    this.unmodifiedSinceConstraint = date;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.withEncryptionConfiguration",
	"Comment": "sets the container for information regarding encryption based configuration for replicas",
	"Method": "ReplicationDestinationConfig withEncryptionConfiguration(EncryptionConfiguration encryptionConfiguration){\r\n    setEncryptionConfiguration(encryptionConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateRobotApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.RawEmail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.getUploadIdMarker",
	"Comment": "returns the optional upload id marker indicating where in the results tobegin listing.together with the key marker, specifies the multipart upload after whichlisting should begin. if no key marker is specified, the upload id markeris ignored. otherwise, any multipart uploads for a key equal to the keymarker may be included in the list only if they have an upload idlexicographically greater than the specified marker.",
	"Method": "String getUploadIdMarker(){\r\n    return uploadIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateDeploymentJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentConfig() != null)\r\n        sb.append(\"DeploymentConfig: \").append(getDeploymentConfig()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet()).append(\",\");\r\n    if (getDeploymentApplicationConfigs() != null)\r\n        sb.append(\"DeploymentApplicationConfigs: \").append(getDeploymentApplicationConfigs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.setUploadIdMarker",
	"Comment": "sets the optional upload id marker indicating where in the results tobegin listing.together with the key marker, specifies the multipart upload after whichlisting should begin. if no key marker is specified, the upload id markeris ignored. otherwise, any multipart uploads for a key equal to the keymarker may be included in the list only if they have an upload idlexicographically greater than the specified marker.",
	"Method": "void setUploadIdMarker(String uploadIdMarker){\r\n    this.uploadIdMarker = uploadIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.withUploadId",
	"Comment": "sets the id of the multipart upload to abort, and returns this updatedabortmultipartuploadrequest object so that additional method calls can bechained together.",
	"Method": "AbortMultipartUploadRequest withUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setKeyMarker",
	"Comment": "sets the optional key marker specified in the original request to specifywhere in the results to begin listing multipart uploads.",
	"Method": "void setKeyMarker(String keyMarker){\r\n    this.keyMarker = keyMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageBody() != null)\r\n        sb.append(\"MessageBody: \").append(getMessageBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.UntagResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARNList() != null)\r\n        sb.append(\"ResourceARNList: \").append(getResourceARNList()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteAlgorithmResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.putEmailIdentityDkimAttributes",
	"Comment": "used to enable or disable dkim authentication for an email identity.",
	"Method": "PutEmailIdentityDkimAttributesResult putEmailIdentityDkimAttributes(PutEmailIdentityDkimAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutEmailIdentityDkimAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.Dimension.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketLoggingConfiguration.setLogFilePrefix",
	"Comment": "sets the log file prefix for this bucket logging configuration.",
	"Method": "void setLogFilePrefix(String logFilePrefix){\r\n    if (logFilePrefix == null)\r\n        logFilePrefix = \"\";\r\n    this.logFilePrefix = logFilePrefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DeleteConfigurationSetEventDestinationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getEventDestinationName() != null)\r\n        sb.append(\"EventDestinationName: \").append(getEventDestinationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.GlobalClusterMember.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterArn() != null)\r\n        sb.append(\"DBClusterArn: \").append(getDBClusterArn()).append(\",\");\r\n    if (getReaders() != null)\r\n        sb.append(\"Readers: \").append(getReaders()).append(\",\");\r\n    if (getIsWriter() != null)\r\n        sb.append(\"IsWriter: \").append(getIsWriter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.NotebookInstanceLifecycleHook.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListLabelingJobsForWorkteamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkteamArn() != null)\r\n        sb.append(\"WorkteamArn: \").append(getWorkteamArn()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getJobReferenceCodeContains() != null)\r\n        sb.append(\"JobReferenceCodeContains: \").append(getJobReferenceCodeContains()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.isDeleteMarker",
	"Comment": "returns whether or not this version represents a delete marker.delete markers are special types of versions that have no data associatedwith them. when deleting a versioned object in amazon s3 without specifyingan explicit version id, a new delete marker is created as the latestversion of that object to mark that the object was deleted.this occurs even thoughthe previous versions still exist in amazon s3.delete markers have no data associated with them and therefore have noassociated acl, size or storage class. only requesters with read accessto a bucket can learn of their existence by listing the versions in abucket.",
	"Method": "boolean isDeleteMarker(){\r\n    return isDeleteMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeEventSubscriptions",
	"Comment": "lists descriptions of all the amazon redshift event notification subscriptions for a customer account. if youspecify a subscription name, lists the description for that subscription.if you specify both tag keys and tag values in the same request, amazon redshift returns all event notificationsubscriptions that match any combination of the specified keys and values. for example, if you haveowner and environment for tag keys, and admin and test fortag values, all subscriptions that have any combination of those values are returned.if both tag keys and values are omitted from the request, subscriptions are returned regardless of whether theyhave tag keys or values associated with them.",
	"Method": "DescribeEventSubscriptionsResult describeEventSubscriptions(DescribeEventSubscriptionsRequest request,DescribeEventSubscriptionsResult describeEventSubscriptions){\r\n    return describeEventSubscriptions(new DescribeEventSubscriptionsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.AmazonQuickSightClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectmetadatarequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "GetObjectMetadataRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventStreamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getWriteEventStream() != null)\r\n        sb.append(\"WriteEventStream: \").append(getWriteEventStream());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListResourceRecordSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getStartRecordName() != null)\r\n        sb.append(\"StartRecordName: \").append(getStartRecordName()).append(\",\");\r\n    if (getStartRecordType() != null)\r\n        sb.append(\"StartRecordType: \").append(getStartRecordType()).append(\",\");\r\n    if (getStartRecordIdentifier() != null)\r\n        sb.append(\"StartRecordIdentifier: \").append(getStartRecordIdentifier()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CSVInput.withQuoteCharacter",
	"Comment": "sets the value used for escaping where the field delimiter is part of the value.",
	"Method": "CSVInput withQuoteCharacter(String quoteCharacter,CSVInput withQuoteCharacter,Character quoteCharacter){\r\n    setQuoteCharacter(quoteCharacter);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.getRoutingRules",
	"Comment": "return the list of routing rules that can be used for configuringredirects if certain conditions are meet.",
	"Method": "List<RoutingRule> getRoutingRules(){\r\n    return routingRules;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionClient.describeStreamProcessor",
	"Comment": "provides information about a stream processor created by . you can get information about the input and outputstreams, the input parameters for the face recognition being performed, and the current status of the streamprocessor.",
	"Method": "DescribeStreamProcessorResult describeStreamProcessor(DescribeStreamProcessorRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeStreamProcessor(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseListObjectsV2Response",
	"Comment": "parses a listbucketv2 response xml document from an input stream.",
	"Method": "ListObjectsV2Handler parseListObjectsV2Response(InputStream inputStream,boolean shouldSDKDecodeResponse){\r\n    ListObjectsV2Handler handler = new ListObjectsV2Handler(shouldSDKDecodeResponse);\r\n    parseXmlInputStream(handler, sanitizeXmlDocument(handler, inputStream));\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteCampaignRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAdditionalTreatments() != null)\r\n        sb.append(\"AdditionalTreatments: \").append(getAdditionalTreatments()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHoldoutPercent() != null)\r\n        sb.append(\"HoldoutPercent: \").append(getHoldoutPercent()).append(\",\");\r\n    if (getHook() != null)\r\n        sb.append(\"Hook: \").append(getHook()).append(\",\");\r\n    if (getIsPaused() != null)\r\n        sb.append(\"IsPaused: \").append(getIsPaused()).append(\",\");\r\n    if (getLimits() != null)\r\n        sb.append(\"Limits: \").append(getLimits()).append(\",\");\r\n    if (getMessageConfiguration() != null)\r\n        sb.append(\"MessageConfiguration: \").append(getMessageConfiguration()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getSegmentId() != null)\r\n        sb.append(\"SegmentId: \").append(getSegmentId()).append(\",\");\r\n    if (getSegmentVersion() != null)\r\n        sb.append(\"SegmentVersion: \").append(getSegmentVersion()).append(\",\");\r\n    if (getTreatmentDescription() != null)\r\n        sb.append(\"TreatmentDescription: \").append(getTreatmentDescription()).append(\",\");\r\n    if (getTreatmentName() != null)\r\n        sb.append(\"TreatmentName: \").append(getTreatmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutAccountDedicatedIpWarmupAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ListResolverEndpointIpAddressesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getIpAddresses() != null)\r\n        sb.append(\"IpAddresses: \").append(getIpAddresses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose lifecycle configuration is beingset.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketNotificationConfiguration.withNotificationConfiguration",
	"Comment": "sets the given notification configurations and returns this object.",
	"Method": "BucketNotificationConfiguration withNotificationConfiguration(Map<String, NotificationConfiguration> notificationConfiguration){\r\n    configurations.clear();\r\n    configurations.putAll(notificationConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeEventsAsync",
	"Comment": "simplified method form for invoking the describeevents operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync(DescribeEventsRequest request,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,DescribeEventsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler){\r\n    return describeEventsAsync(new DescribeEventsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTrafficPolicyInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicyInstances() != null)\r\n        sb.append(\"TrafficPolicyInstances: \").append(getTrafficPolicyInstances()).append(\",\");\r\n    if (getHostedZoneIdMarker() != null)\r\n        sb.append(\"HostedZoneIdMarker: \").append(getHostedZoneIdMarker()).append(\",\");\r\n    if (getTrafficPolicyInstanceNameMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceNameMarker: \").append(getTrafficPolicyInstanceNameMarker()).append(\",\");\r\n    if (getTrafficPolicyInstanceTypeMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceTypeMarker: \").append(getTrafficPolicyInstanceTypeMarker()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadResult.getBucketName",
	"Comment": "returns the name of the bucket containing the completed multipart object.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.AmazonPinpointSMSVoiceClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListNotebookInstanceLifecycleConfigsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getLastModifiedTimeBefore() != null)\r\n        sb.append(\"LastModifiedTimeBefore: \").append(getLastModifiedTimeBefore()).append(\",\");\r\n    if (getLastModifiedTimeAfter() != null)\r\n        sb.append(\"LastModifiedTimeAfter: \").append(getLastModifiedTimeAfter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.addStringListHeader",
	"Comment": "adds the specified string list header, joined together separated withcommas, to the specified request.this method will not add a string list header if the specified valuesare null or empty.",
	"Method": "void addStringListHeader(Request<?> request,String header,List<String> values){\r\n    if (values != null && !values.isEmpty()) {\r\n        request.addHeader(header, ServiceUtils.join(values));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.Voice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGender() != null)\r\n        sb.append(\"Gender: \").append(getGender()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getLanguageName() != null)\r\n        sb.append(\"LanguageName: \").append(getLanguageName()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAdditionalLanguageCodes() != null)\r\n        sb.append(\"AdditionalLanguageCodes: \").append(getAdditionalLanguageCodes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterSnapshotAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describePendingMaintenanceActionsAsync",
	"Comment": "simplified method form for invoking the describependingmaintenanceactions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribePendingMaintenanceActionsResult> describePendingMaintenanceActionsAsync(DescribePendingMaintenanceActionsRequest request,java.util.concurrent.Future<DescribePendingMaintenanceActionsResult> describePendingMaintenanceActionsAsync,DescribePendingMaintenanceActionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribePendingMaintenanceActionsRequest, DescribePendingMaintenanceActionsResult> asyncHandler,java.util.concurrent.Future<DescribePendingMaintenanceActionsResult> describePendingMaintenanceActionsAsync,java.util.concurrent.Future<DescribePendingMaintenanceActionsResult> describePendingMaintenanceActionsAsync,com.amazonaws.handlers.AsyncHandler<DescribePendingMaintenanceActionsRequest, DescribePendingMaintenanceActionsResult> asyncHandler){\r\n    return describePendingMaintenanceActionsAsync(new DescribePendingMaintenanceActionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.addRule",
	"Comment": "adds a new rule to the replication configuration associated with thisamazon s3 bucket. returns the updated object.",
	"Method": "BucketReplicationConfiguration addRule(String id,ReplicationRule rule){\r\n    if (id == null || id.trim().isEmpty()) {\r\n        throw new IllegalArgumentException(\"Rule id cannot be null or empty.\");\r\n    }\r\n    if (rule == null) {\r\n        throw new IllegalArgumentException(\"Replication rule cannot be null\");\r\n    }\r\n    rules.put(id, rule);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.getGeoLocationAsync",
	"Comment": "simplified method form for invoking the getgeolocation operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetGeoLocationResult> getGeoLocationAsync(GetGeoLocationRequest request,java.util.concurrent.Future<GetGeoLocationResult> getGeoLocationAsync,GetGeoLocationRequest request,com.amazonaws.handlers.AsyncHandler<GetGeoLocationRequest, GetGeoLocationResult> asyncHandler,java.util.concurrent.Future<GetGeoLocationResult> getGeoLocationAsync,java.util.concurrent.Future<GetGeoLocationResult> getGeoLocationAsync,com.amazonaws.handlers.AsyncHandler<GetGeoLocationRequest, GetGeoLocationResult> asyncHandler){\r\n    return getGeoLocationAsync(new GetGeoLocationRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.OutputDataConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getS3OutputPath() != null)\r\n        sb.append(\"S3OutputPath: \").append(getS3OutputPath());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeleteFleetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.withMaxParts",
	"Comment": "sets the optional maximum number of parts to be returned in the partlisting and returns this updated listpartsrequest objects so thatadditional method calls can be chained together.",
	"Method": "ListPartsRequest withMaxParts(int maxParts){\r\n    this.maxParts = maxParts;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendMessagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageResponse() != null)\r\n        sb.append(\"MessageResponse: \").append(getMessageResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlClient.deletePublicAccessBlock",
	"Comment": "removes the public access block configuration for an amazon web services account.",
	"Method": "DeletePublicAccessBlockResult deletePublicAccessBlock(DeletePublicAccessBlockRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeletePublicAccessBlock(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeDBInstancesAsync",
	"Comment": "simplified method form for invoking the describedbinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBInstancesResult> describeDBInstancesAsync(DescribeDBInstancesRequest request,java.util.concurrent.Future<DescribeDBInstancesResult> describeDBInstancesAsync,DescribeDBInstancesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBInstancesRequest, DescribeDBInstancesResult> asyncHandler,java.util.concurrent.Future<DescribeDBInstancesResult> describeDBInstancesAsync,java.util.concurrent.Future<DescribeDBInstancesResult> describeDBInstancesAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBInstancesRequest, DescribeDBInstancesResult> asyncHandler){\r\n    return describeDBInstancesAsync(new DescribeDBInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeHsmClientCertificatesAsync",
	"Comment": "simplified method form for invoking the describehsmclientcertificates operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync(DescribeHsmClientCertificatesRequest request,java.util.concurrent.Future<DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync,DescribeHsmClientCertificatesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeHsmClientCertificatesRequest, DescribeHsmClientCertificatesResult> asyncHandler,java.util.concurrent.Future<DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync,java.util.concurrent.Future<DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync,com.amazonaws.handlers.AsyncHandler<DescribeHsmClientCertificatesRequest, DescribeHsmClientCertificatesResult> asyncHandler){\r\n    return describeHsmClientCertificatesAsync(new DescribeHsmClientCertificatesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.GetResourceShareAssociationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAssociationType() != null)\r\n        sb.append(\"AssociationType: \").append(getAssociationType()).append(\",\");\r\n    if (getResourceShareArns() != null)\r\n        sb.append(\"ResourceShareArns: \").append(getResourceShareArns()).append(\",\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal()).append(\",\");\r\n    if (getAssociationStatus() != null)\r\n        sb.append(\"AssociationStatus: \").append(getAssociationStatus()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetEmailIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmailIdentity() != null)\r\n        sb.append(\"EmailIdentity: \").append(getEmailIdentity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.withResponseHeaders",
	"Comment": "sets the headers to be overridden in the service response and returnsthis object, for method chaining.",
	"Method": "GetObjectRequest withResponseHeaders(ResponseHeaderOverrides responseHeaders){\r\n    setResponseHeaders(responseHeaders);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeCompilationJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompilationJobName() != null)\r\n        sb.append(\"CompilationJobName: \").append(getCompilationJobName()).append(\",\");\r\n    if (getCompilationJobArn() != null)\r\n        sb.append(\"CompilationJobArn: \").append(getCompilationJobArn()).append(\",\");\r\n    if (getCompilationJobStatus() != null)\r\n        sb.append(\"CompilationJobStatus: \").append(getCompilationJobStatus()).append(\",\");\r\n    if (getCompilationStartTime() != null)\r\n        sb.append(\"CompilationStartTime: \").append(getCompilationStartTime()).append(\",\");\r\n    if (getCompilationEndTime() != null)\r\n        sb.append(\"CompilationEndTime: \").append(getCompilationEndTime()).append(\",\");\r\n    if (getStoppingCondition() != null)\r\n        sb.append(\"StoppingCondition: \").append(getStoppingCondition()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getModelArtifacts() != null)\r\n        sb.append(\"ModelArtifacts: \").append(getModelArtifacts()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getInputConfig() != null)\r\n        sb.append(\"InputConfig: \").append(getInputConfig()).append(\",\");\r\n    if (getOutputConfig() != null)\r\n        sb.append(\"OutputConfig: \").append(getOutputConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.PendingModifiedValues.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getCACertificateIdentifier() != null)\r\n        sb.append(\"CACertificateIdentifier: \").append(getCACertificateIdentifier()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getPendingCloudwatchLogsExports() != null)\r\n        sb.append(\"PendingCloudwatchLogsExports: \").append(getPendingCloudwatchLogsExports()).append(\",\");\r\n    if (getProcessorFeatures() != null)\r\n        sb.append(\"ProcessorFeatures: \").append(getProcessorFeatures());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeEventSubscriptionsAsync",
	"Comment": "simplified method form for invoking the describeeventsubscriptions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync(DescribeEventSubscriptionsRequest request,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,DescribeEventSubscriptionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventSubscriptionsRequest, DescribeEventSubscriptionsResult> asyncHandler,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventSubscriptionsRequest, DescribeEventSubscriptionsResult> asyncHandler){\r\n    return describeEventSubscriptionsAsync(new DescribeEventSubscriptionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.AddRoleToDBClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.RobotApplicationConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getApplicationVersion() != null)\r\n        sb.append(\"ApplicationVersion: \").append(getApplicationVersion()).append(\",\");\r\n    if (getLaunchConfig() != null)\r\n        sb.append(\"LaunchConfig: \").append(getLaunchConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetDedicatedIpsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDedicatedIps() != null)\r\n        sb.append(\"DedicatedIps: \").append(getDedicatedIps()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.LaunchConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPackageName() != null)\r\n        sb.append(\"PackageName: \").append(getPackageName()).append(\",\");\r\n    if (getLaunchFile() != null)\r\n        sb.append(\"LaunchFile: \").append(getLaunchFile()).append(\",\");\r\n    if (getEnvironmentVariables() != null)\r\n        sb.append(\"EnvironmentVariables: \").append(getEnvironmentVariables());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getClusterType() != null)\r\n        sb.append(\"ClusterType: \").append(getClusterType()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getNumberOfNodes() != null)\r\n        sb.append(\"NumberOfNodes: \").append(getNumberOfNodes()).append(\",\");\r\n    if (getClusterSecurityGroups() != null)\r\n        sb.append(\"ClusterSecurityGroups: \").append(getClusterSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getClusterParameterGroupName() != null)\r\n        sb.append(\"ClusterParameterGroupName: \").append(getClusterParameterGroupName()).append(\",\");\r\n    if (getAutomatedSnapshotRetentionPeriod() != null)\r\n        sb.append(\"AutomatedSnapshotRetentionPeriod: \").append(getAutomatedSnapshotRetentionPeriod()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getClusterVersion() != null)\r\n        sb.append(\"ClusterVersion: \").append(getClusterVersion()).append(\",\");\r\n    if (getAllowVersionUpgrade() != null)\r\n        sb.append(\"AllowVersionUpgrade: \").append(getAllowVersionUpgrade()).append(\",\");\r\n    if (getHsmClientCertificateIdentifier() != null)\r\n        sb.append(\"HsmClientCertificateIdentifier: \").append(getHsmClientCertificateIdentifier()).append(\",\");\r\n    if (getHsmConfigurationIdentifier() != null)\r\n        sb.append(\"HsmConfigurationIdentifier: \").append(getHsmConfigurationIdentifier()).append(\",\");\r\n    if (getNewClusterIdentifier() != null)\r\n        sb.append(\"NewClusterIdentifier: \").append(getNewClusterIdentifier()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp()).append(\",\");\r\n    if (getEnhancedVpcRouting() != null)\r\n        sb.append(\"EnhancedVpcRouting: \").append(getEnhancedVpcRouting()).append(\",\");\r\n    if (getMaintenanceTrackName() != null)\r\n        sb.append(\"MaintenanceTrackName: \").append(getMaintenanceTrackName()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketPolicyRequest.withBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being deleted, andreturns the updated request object so that additional method calls can bechained together.",
	"Method": "DeleteBucketPolicyRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme.fromCEKAlgo",
	"Comment": "returns the content crypto scheme of the given content encryption algorithm.",
	"Method": "ContentCryptoScheme fromCEKAlgo(String cekAlgo,ContentCryptoScheme fromCEKAlgo,String cekAlgo,boolean isRangeGet){\r\n    if (AES_GCM.getCipherAlgorithm().equals(cekAlgo)) {\r\n        return isRangeGet ? AES_CTR : AES_GCM;\r\n    }\r\n    if (cekAlgo == null || AES_CBC.getCipherAlgorithm().equals(cekAlgo))\r\n        return AES_CBC;\r\n    throw new UnsupportedOperationException(\"Unsupported content encryption scheme: \" + cekAlgo);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.CheckDomainTransferabilityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransferability() != null)\r\n        sb.append(\"Transferability: \").append(getTransferability());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.AssociateResolverRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRuleAssociation() != null)\r\n        sb.append(\"ResolverRuleAssociation: \").append(getResolverRuleAssociation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteHealthCheckResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.deleteResolverRule",
	"Comment": "deletes a resolver rule. before you can delete a resolver rule, you must disassociate it from all the vpcs thatyou associated the resolver rule with. for more infomation, see disassociateresolverrule.",
	"Method": "DeleteResolverRuleResult deleteResolverRule(DeleteResolverRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteResolverRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.iterable.S3Objects.withPrefix",
	"Comment": "constructs an iterable that covers the objects in an amazon s3 bucketwhere the key begins with the given prefix.",
	"Method": "S3Objects withPrefix(AmazonS3 s3,String bucketName,String prefix){\r\n    S3Objects objects = new S3Objects(s3, bucketName);\r\n    objects.prefix = prefix;\r\n    return objects;\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.DeleteUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getDestinationBucketName",
	"Comment": "gets the destination bucket name which will contain the new,copied object.",
	"Method": "String getDestinationBucketName(){\r\n    return destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setUploadIdMarker",
	"Comment": "sets the optional upload id marker specified in the original request tospecify where in the results to begin listing multipart uploads.",
	"Method": "void setUploadIdMarker(String uploadIdMarker){\r\n    this.uploadIdMarker = uploadIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.RejectResourceShareInvitationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareInvitation() != null)\r\n        sb.append(\"ResourceShareInvitation: \").append(getResourceShareInvitation()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.HsmClientCertificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmClientCertificateIdentifier() != null)\r\n        sb.append(\"HsmClientCertificateIdentifier: \").append(getHsmClientCertificateIdentifier()).append(\",\");\r\n    if (getHsmClientCertificatePublicKey() != null)\r\n        sb.append(\"HsmClientCertificatePublicKey: \").append(getHsmClientCertificatePublicKey()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.UpdateResolverEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpoint() != null)\r\n        sb.append(\"ResolverEndpoint: \").append(getResolverEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest.withReplicationConfiguration",
	"Comment": "sets the replication configuration for an amazon s3 bucket. returns theupdated object. .",
	"Method": "SetBucketReplicationConfigurationRequest withReplicationConfiguration(BucketReplicationConfiguration replicationConfiguration){\r\n    setReplicationConfiguration(replicationConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DownloadDBLogFilePortionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogFileData() != null)\r\n        sb.append(\"LogFileData: \").append(getLogFileData()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getAdditionalDataPending() != null)\r\n        sb.append(\"AdditionalDataPending: \").append(getAdditionalDataPending());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectTaggingResult.withVersionId",
	"Comment": "set the version id of the object the tags were retrieved from.",
	"Method": "GetObjectTaggingResult withVersionId(String versionId){\r\n    setVersionId(versionId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.UpdateConfigurationSetEventDestinationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getEventDestinationName() != null)\r\n        sb.append(\"EventDestinationName: \").append(getEventDestinationName()).append(\",\");\r\n    if (getEventDestination() != null)\r\n        sb.append(\"EventDestination: \").append(getEventDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withMaxAgeSeconds",
	"Comment": "sets the max age in seconds of this rule and returns a reference to this object formethod chaining.",
	"Method": "CORSRule withMaxAgeSeconds(int maxAgeSeconds){\r\n    this.maxAgeSeconds = maxAgeSeconds;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListDeploymentJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeploymentJobs() != null)\r\n        sb.append(\"DeploymentJobs: \").append(getDeploymentJobs()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.populateRequestWithCopyPartParameters",
	"Comment": "populates the specified request with the numerous options available incopyobjectrequest.",
	"Method": "void populateRequestWithCopyPartParameters(Request<?> request,CopyPartRequest copyPartRequest){\r\n    String copySourceHeader = \"/\" + SdkHttpUtils.urlEncode(copyPartRequest.getSourceBucketName(), true) + \"/\" + SdkHttpUtils.urlEncode(copyPartRequest.getSourceKey(), true);\r\n    if (copyPartRequest.getSourceVersionId() != null) {\r\n        copySourceHeader += \"?versionId=\" + copyPartRequest.getSourceVersionId();\r\n    }\r\n    request.addHeader(\"x-amz-copy-source\", copySourceHeader);\r\n    addDateHeader(request, Headers.COPY_SOURCE_IF_MODIFIED_SINCE, copyPartRequest.getModifiedSinceConstraint());\r\n    addDateHeader(request, Headers.COPY_SOURCE_IF_UNMODIFIED_SINCE, copyPartRequest.getUnmodifiedSinceConstraint());\r\n    addStringListHeader(request, Headers.COPY_SOURCE_IF_MATCH, copyPartRequest.getMatchingETagConstraints());\r\n    addStringListHeader(request, Headers.COPY_SOURCE_IF_NO_MATCH, copyPartRequest.getNonmatchingETagConstraints());\r\n    if (copyPartRequest.getFirstByte() != null && copyPartRequest.getLastByte() != null) {\r\n        String range = \"bytes=\" + copyPartRequest.getFirstByte() + \"-\" + copyPartRequest.getLastByte();\r\n        request.addHeader(Headers.COPY_PART_RANGE, range);\r\n    }\r\n    populateSourceSSE_C(request, copyPartRequest.getSourceSSECustomerKey());\r\n    populateSSE_C(request, copyPartRequest.getDestinationSSECustomerKey());\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.AssociateResourceShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareAssociations() != null)\r\n        sb.append(\"ResourceShareAssociations: \").append(getResourceShareAssociations()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getInstanceLength",
	"Comment": "returns the physical length of the entire object stored in s3.this is useful during, for example, a range get operation.",
	"Method": "long getInstanceLength(){\r\n    String contentRange = (String) metadata.get(Headers.CONTENT_RANGE);\r\n    if (contentRange != null) {\r\n        int pos = contentRange.lastIndexOf(\"/\");\r\n        if (pos >= 0)\r\n            return Long.parseLong(contentRange.substring(pos + 1));\r\n    }\r\n    return getContentLength();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.withBucketName",
	"Comment": "sets the name of the bucket containing the multipart upload to abort andreturns the updated object so that additional calls can be chainedtogether.",
	"Method": "AbortMultipartUploadRequest withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.getObjectLockEnabledForBucket",
	"Comment": "specifies whether you want s3 object lock to be enabled for the new bucket.",
	"Method": "boolean getObjectLockEnabledForBucket(){\r\n    return objectLockEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteCodeRepositoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeRepositoryName() != null)\r\n        sb.append(\"CodeRepositoryName: \").append(getCodeRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getImportDefinition() != null)\r\n        sb.append(\"ImportDefinition: \").append(getImportDefinition()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSegmentGroups() != null)\r\n        sb.append(\"SegmentGroups: \").append(getSegmentGroups()).append(\",\");\r\n    if (getSegmentType() != null)\r\n        sb.append(\"SegmentType: \").append(getSegmentType()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeHsmClientCertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getHsmClientCertificates() != null)\r\n        sb.append(\"HsmClientCertificates: \").append(getHsmClientCertificates());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeDefaultClusterParameters",
	"Comment": "returns a list of parameter settings for the specified parameter group family.for more information about parameters and parameter groups, go to amazon redshiftparameter groups in the amazon redshift cluster management guide.",
	"Method": "DefaultClusterParameters describeDefaultClusterParameters(DescribeDefaultClusterParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDefaultClusterParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.CreateGroupMembershipResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupMember() != null)\r\n        sb.append(\"GroupMember: \").append(getGroupMember()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ResetDBParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.getNextContinuationToken",
	"Comment": "gets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "String getNextContinuationToken(){\r\n    return nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DefaultRetention.setYears",
	"Comment": "the number of years that you want to specify for the default retention period.",
	"Method": "void setYears(Integer years){\r\n    withYears(years);\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.deleteLexicon",
	"Comment": "deletes the specified pronunciation lexicon stored in an aws region. a lexicon which has been deleted is notavailable for speech synthesis, nor is it possible to retrieve it using either the getlexicon orlistlexicon apis.for more information, see managinglexicons.",
	"Method": "DeleteLexiconResult deleteLexicon(DeleteLexiconRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteLexicon(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeGlobalClusters",
	"Comment": "returns information about aurora global database clusters. this api supports pagination.for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DescribeGlobalClustersResult describeGlobalClusters(DescribeGlobalClustersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeGlobalClusters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListLexiconsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLexicons() != null)\r\n        sb.append(\"Lexicons: \").append(getLexicons()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ViewBillingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextPageMarker() != null)\r\n        sb.append(\"NextPageMarker: \").append(getNextPageMarker()).append(\",\");\r\n    if (getBillingRecords() != null)\r\n        sb.append(\"BillingRecords: \").append(getBillingRecords());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.SimulationApplicationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DeleteLexiconResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyClusterSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSubnetGroupName() != null)\r\n        sb.append(\"ClusterSubnetGroupName: \").append(getClusterSubnetGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeReservedDBInstancesOfferingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getReservedDBInstancesOfferings() != null)\r\n        sb.append(\"ReservedDBInstancesOfferings: \").append(getReservedDBInstancesOfferings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeEvents",
	"Comment": "returns events related to db instances, db security groups, db snapshots, and db parameter groups for the past 14days. events specific to a particular db instance, db security group, database snapshot, or db parameter groupcan be obtained by providing the name as a parameter. by default, the past hour of events are returned.",
	"Method": "DescribeEventsResult describeEvents(DescribeEventsRequest request,DescribeEventsResult describeEvents){\r\n    return describeEvents(new DescribeEventsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.listAlgorithms",
	"Comment": "lists the machine learning algorithms that have been created.",
	"Method": "ListAlgorithmsResult listAlgorithms(ListAlgorithmsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListAlgorithms(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBClusters() != null)\r\n        sb.append(\"DBClusters: \").append(getDBClusters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHostedZoneResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZone() != null)\r\n        sb.append(\"HostedZone: \").append(getHostedZone()).append(\",\");\r\n    if (getDelegationSet() != null)\r\n        sb.append(\"DelegationSet: \").append(getDelegationSet()).append(\",\");\r\n    if (getVPCs() != null)\r\n        sb.append(\"VPCs: \").append(getVPCs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyClusterSnapshotScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getScheduleIdentifier() != null)\r\n        sb.append(\"ScheduleIdentifier: \").append(getScheduleIdentifier()).append(\",\");\r\n    if (getDisassociateSchedule() != null)\r\n        sb.append(\"DisassociateSchedule: \").append(getDisassociateSchedule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeleteRobotApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withAllowedOrigins",
	"Comment": "sets the allowed origins of this rule and returns a reference to this object formethod chaining.",
	"Method": "CORSRule withAllowedOrigins(List<String> allowedOrigins){\r\n    this.allowedOrigins = allowedOrigins;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.backtrackDBCluster",
	"Comment": "backtracks a db cluster to a specific time, without creating a new db cluster.for more information on backtracking, see backtracking an aurora db cluster in the amazon aurora user guide.",
	"Method": "BacktrackDBClusterResult backtrackDBCluster(BacktrackDBClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeBacktrackDBCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutConfigurationSetSendingOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateFleetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.S3AbortableInputStream.onException",
	"Comment": "marks the input stream as eof since no further reads should be done.",
	"Method": "int onException(Exception e){\r\n    eofReached = true;\r\n    if (e instanceof IOException) {\r\n        throw (IOException) e;\r\n    } else if (e instanceof RuntimeException) {\r\n        throw (RuntimeException) e;\r\n    } else {\r\n        throw Throwables.failure(e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSnapshotIdentifier() != null)\r\n        sb.append(\"DBSnapshotIdentifier: \").append(getDBSnapshotIdentifier()).append(\",\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.InputConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Uri() != null)\r\n        sb.append(\"S3Uri: \").append(getS3Uri()).append(\",\");\r\n    if (getDataInputConfig() != null)\r\n        sb.append(\"DataInputConfig: \").append(getDataInputConfig()).append(\",\");\r\n    if (getFramework() != null)\r\n        sb.append(\"Framework: \").append(getFramework());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSVoipChannelRequest() != null)\r\n        sb.append(\"APNSVoipChannelRequest: \").append(getAPNSVoipChannelRequest()).append(\",\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSynthesisTasks() != null)\r\n        sb.append(\"SynthesisTasks: \").append(getSynthesisTasks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListNextBatchOfVersionsRequest.withPreviousVersionListing",
	"Comment": "sets the previous version listing and returns the updated request object so that additionalmethod calls can be chained together.",
	"Method": "ListNextBatchOfVersionsRequest withPreviousVersionListing(VersionListing previousVersionListing){\r\n    setPreviousVersionListing(previousVersionListing);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PinpointDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationArn() != null)\r\n        sb.append(\"ApplicationArn: \").append(getApplicationArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.KinesisDataStream.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryConfiguration.isEnabled",
	"Comment": "returns true if the inventory is enabled orfalse if inventory is disabled.",
	"Method": "Boolean isEnabled(){\r\n    return isEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.PutResolverRulePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturnValue() != null)\r\n        sb.append(\"ReturnValue: \").append(getReturnValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.GroupQuery.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getResourceQuery() != null)\r\n        sb.append(\"ResourceQuery: \").append(getResourceQuery());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.getDomainDetail",
	"Comment": "this operation returns detailed information about a specified domain that is associated with the current awsaccount. contact information for the domain is also returned as part of the output.",
	"Method": "GetDomainDetailResult getDomainDetail(GetDomainDetailRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDomainDetail(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.SnsDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTopicArn() != null)\r\n        sb.append(\"TopicArn: \").append(getTopicArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.withBucketName",
	"Comment": "sets the name of the bucket containing the uploads to list, and returnsthis updated listmultipartuploadsrequest object so that additional methodcalls can be chained together.",
	"Method": "ListMultipartUploadsRequest withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getSendUsersMessageRequest() != null)\r\n        sb.append(\"SendUsersMessageRequest: \").append(getSendUsersMessageRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutAccountSendingAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesByImageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCollectionId() != null)\r\n        sb.append(\"CollectionId: \").append(getCollectionId()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getMaxFaces() != null)\r\n        sb.append(\"MaxFaces: \").append(getMaxFaces()).append(\",\");\r\n    if (getFaceMatchThreshold() != null)\r\n        sb.append(\"FaceMatchThreshold: \").append(getFaceMatchThreshold());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadResult.setVersionId",
	"Comment": "sets the version id of the new object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.listTagsForResource",
	"Comment": "lists all tags on an amazon rds resource.for an overview on tagging an amazon rds resource, see tagging amazon rdsresources in the amazon rds user guide.",
	"Method": "ListTagsForResourceResult listTagsForResource(ListTagsForResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTagsForResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateModelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelName() != null)\r\n        sb.append(\"ModelName: \").append(getModelName()).append(\",\");\r\n    if (getPrimaryContainer() != null)\r\n        sb.append(\"PrimaryContainer: \").append(getPrimaryContainer()).append(\",\");\r\n    if (getContainers() != null)\r\n        sb.append(\"Containers: \").append(getContainers()).append(\",\");\r\n    if (getExecutionRoleArn() != null)\r\n        sb.append(\"ExecutionRoleArn: \").append(getExecutionRoleArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getEnableNetworkIsolation() != null)\r\n        sb.append(\"EnableNetworkIsolation: \").append(getEnableNetworkIsolation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeLoggingStatus",
	"Comment": "describes whether information, such as queries and connection attempts, is being logged for the specified amazonredshift cluster.",
	"Method": "DescribeLoggingStatusResult describeLoggingStatus(DescribeLoggingStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeLoggingStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.Principal.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime()).append(\",\");\r\n    if (getExternal() != null)\r\n        sb.append(\"External: \").append(getExternal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setAbortRuleId",
	"Comment": "id of the lifecycle rule that makes a multipart upload eligible for abort operation.",
	"Method": "void setAbortRuleId(String abortRuleId){\r\n    this.abortRuleId = abortRuleId;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessorInput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKinesisVideoStream() != null)\r\n        sb.append(\"KinesisVideoStream: \").append(getKinesisVideoStream());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterVersion() != null)\r\n        sb.append(\"ClusterVersion: \").append(getClusterVersion()).append(\",\");\r\n    if (getClusterParameterGroupFamily() != null)\r\n        sb.append(\"ClusterParameterGroupFamily: \").append(getClusterParameterGroupFamily()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.UpdateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeDBClusterSnapshotsAsync",
	"Comment": "simplified method form for invoking the describedbclustersnapshots operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBClusterSnapshotsResult> describeDBClusterSnapshotsAsync(DescribeDBClusterSnapshotsRequest request,java.util.concurrent.Future<DescribeDBClusterSnapshotsResult> describeDBClusterSnapshotsAsync,DescribeDBClusterSnapshotsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBClusterSnapshotsRequest, DescribeDBClusterSnapshotsResult> asyncHandler,java.util.concurrent.Future<DescribeDBClusterSnapshotsResult> describeDBClusterSnapshotsAsync,java.util.concurrent.Future<DescribeDBClusterSnapshotsResult> describeDBClusterSnapshotsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBClusterSnapshotsRequest, DescribeDBClusterSnapshotsResult> asyncHandler){\r\n    return describeDBClusterSnapshotsAsync(new DescribeDBClusterSnapshotsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ModelPackageContainerDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerHostname() != null)\r\n        sb.append(\"ContainerHostname: \").append(getContainerHostname()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getImageDigest() != null)\r\n        sb.append(\"ImageDigest: \").append(getImageDigest()).append(\",\");\r\n    if (getModelDataUrl() != null)\r\n        sb.append(\"ModelDataUrl: \").append(getModelDataUrl()).append(\",\");\r\n    if (getProductId() != null)\r\n        sb.append(\"ProductId: \").append(getProductId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.AmazonS3ExceptionBuilder.setStatusCode",
	"Comment": "sets the http status code that was returned with this service exception.",
	"Method": "void setStatusCode(int statusCode){\r\n    this.statusCode = statusCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.GetContactReachabilityStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DeleteFacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeletedFaces() != null)\r\n        sb.append(\"DeletedFaces: \").append(getDeletedFaces());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.wrap",
	"Comment": "returns a new instance of contentcryptomaterial by wrappingthe input parameters, including the already secured cek. no network callsare involved.",
	"Method": "ContentCryptoMaterial wrap(SecretKey cek,byte[] iv,ContentCryptoScheme contentCryptoScheme,Provider provider,boolean alwaysUseProvider,SecuredCEK cekSecured){\r\n    return new ContentCryptoMaterial(cekSecured.getMaterialDescription(), cekSecured.getEncrypted(), cekSecured.getKeyWrapAlgorithm(), contentCryptoScheme.createCipherLite(cek, iv, Cipher.ENCRYPT_MODE, provider, alwaysUseProvider));\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsClient.searchResources",
	"Comment": "returns a list of aws resource identifiers that matches a specified query. the query uses the same format as aresource query in a creategroup or updategroupquery operation.",
	"Method": "SearchResourcesResult searchResources(SearchResourcesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSearchResources(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.AssociateResolverEndpointIpAddressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpoint() != null)\r\n        sb.append(\"ResolverEndpoint: \").append(getResolverEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.BucketConfigurationXmlFactory.convertToXmlByteArray",
	"Comment": "converts the specified notification configuration into an xml byte array.",
	"Method": "byte[] convertToXmlByteArray(BucketVersioningConfiguration versioningConfiguration,byte[] convertToXmlByteArray,BucketAccelerateConfiguration accelerateConfiguration,byte[] convertToXmlByteArray,BucketLoggingConfiguration loggingConfiguration,byte[] convertToXmlByteArray,BucketNotificationConfiguration notificationConfiguration,byte[] convertToXmlByteArray,BucketReplicationConfiguration replicationConfiguration,byte[] convertToXmlByteArray,BucketWebsiteConfiguration websiteConfiguration,byte[] convertToXmlByteArray,BucketLifecycleConfiguration config,byte[] convertToXmlByteArray,BucketCrossOriginConfiguration config,byte[] convertToXmlByteArray,ServerSideEncryptionConfiguration sseConfig,byte[] convertToXmlByteArray,PublicAccessBlockConfiguration config,byte[] convertToXmlByteArray,BucketTaggingConfiguration config,byte[] convertToXmlByteArray,InventoryConfiguration config,byte[] convertToXmlByteArray,AnalyticsConfiguration config,byte[] convertToXmlByteArray,MetricsConfiguration config){\r\n    XmlWriter xml = new XmlWriter();\r\n    xml.start(\"MetricsConfiguration\", \"xmlns\", Constants.XML_NAMESPACE);\r\n    addParameterIfNotNull(xml, \"Id\", config.getId());\r\n    writeMetricsFilter(xml, config.getFilter());\r\n    xml.end();\r\n    return xml.getBytes();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.GetResolverRuleAssociationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRuleAssociation() != null)\r\n        sb.append(\"ResolverRuleAssociation: \").append(getResolverRuleAssociation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.Fleet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastDeploymentStatus() != null)\r\n        sb.append(\"LastDeploymentStatus: \").append(getLastDeploymentStatus()).append(\",\");\r\n    if (getLastDeploymentJob() != null)\r\n        sb.append(\"LastDeploymentJob: \").append(getLastDeploymentJob()).append(\",\");\r\n    if (getLastDeploymentTime() != null)\r\n        sb.append(\"LastDeploymentTime: \").append(getLastDeploymentTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setNextMarker",
	"Comment": "for internal use only. sets the marker to use in thenext list objects request in order to see the next page of results for atruncated object listing.",
	"Method": "void setNextMarker(String nextMarker){\r\n    this.nextMarker = nextMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketPolicyRequest.setConfirmRemoveSelfBucketAccess",
	"Comment": "set this parameter to true to confirm that you want to remove your permissions to change this bucket policy in the future.",
	"Method": "void setConfirmRemoveSelfBucketAccess(Boolean confirmRemoveSelfBucketAccess){\r\n    this.confirmRemoveSelfBucketAccess = confirmRemoveSelfBucketAccess;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventStreamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventStream() != null)\r\n        sb.append(\"EventStream: \").append(getEventStream());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.getMaxAgeSeconds",
	"Comment": "sets the id of this rule and returns a reference to this object formethod chaining.",
	"Method": "int getMaxAgeSeconds(){\r\n    return maxAgeSeconds;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsRequest.getContinuationToken",
	"Comment": "gets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "String getContinuationToken(){\r\n    return continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.TransferManagerUtils.determinePauseStatus",
	"Comment": "determines the pause status based on the current state of transfer.",
	"Method": "PauseStatus determinePauseStatus(TransferState transferState,boolean forceCancel){\r\n    if (forceCancel) {\r\n        if (transferState == TransferState.Waiting) {\r\n            return PauseStatus.CANCELLED_BEFORE_START;\r\n        } else if (transferState == TransferState.InProgress) {\r\n            return PauseStatus.CANCELLED;\r\n        }\r\n    }\r\n    if (transferState == TransferState.Waiting) {\r\n        return PauseStatus.NOT_STARTED;\r\n    }\r\n    return PauseStatus.NO_EFFECT;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.UntagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListSimulationApplicationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSimulationApplicationSummaries() != null)\r\n        sb.append(\"SimulationApplicationSummaries: \").append(getSimulationApplicationSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeHyperParameterTuningJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHyperParameterTuningJobName() != null)\r\n        sb.append(\"HyperParameterTuningJobName: \").append(getHyperParameterTuningJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeDBSecurityGroupsAsync",
	"Comment": "simplified method form for invoking the describedbsecuritygroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBSecurityGroupsResult> describeDBSecurityGroupsAsync(DescribeDBSecurityGroupsRequest request,java.util.concurrent.Future<DescribeDBSecurityGroupsResult> describeDBSecurityGroupsAsync,DescribeDBSecurityGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBSecurityGroupsRequest, DescribeDBSecurityGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeDBSecurityGroupsResult> describeDBSecurityGroupsAsync,java.util.concurrent.Future<DescribeDBSecurityGroupsResult> describeDBSecurityGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBSecurityGroupsRequest, DescribeDBSecurityGroupsResult> asyncHandler){\r\n    return describeDBSecurityGroupsAsync(new DescribeDBSecurityGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DefaultClusterParameters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupFamily() != null)\r\n        sb.append(\"ParameterGroupFamily: \").append(getParameterGroupFamily()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.AclXmlFactory.convertToXml",
	"Comment": "returns an xml fragment representing the specified group grantee.",
	"Method": "XmlWriter convertToXml(Grantee grantee,XmlWriter xml,XmlWriter convertToXml,CanonicalGrantee grantee,XmlWriter xml,XmlWriter convertToXml,EmailAddressGrantee grantee,XmlWriter xml,XmlWriter convertToXml,GroupGrantee grantee,XmlWriter xml){\r\n    xml.start(\"Grantee\", new String[] { \"xmlns:xsi\", \"xsi:type\" }, new String[] { \"http://www.w3.org/2001/XMLSchema-instance\", \"Group\" });\r\n    xml.start(\"URI\").value(grantee.getIdentifier()).end();\r\n    xml.end();\r\n    return xml;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEmailChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmailChannelResponse() != null)\r\n        sb.append(\"EmailChannelResponse: \").append(getEmailChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectLegalHoldRequest.setRequesterPays",
	"Comment": "used for downloading an amazon s3 object from a requester pays bucket. ifset the requester is charged for downloading the data from the bucket.if a bucket is enabled for requester pays, then any attempt to read anobject from it without requester pays enabled will result in a 403 errorand the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateRobotApplicationVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectLockLegalHold.getStatus",
	"Comment": "indicates whether the specified object has a legal hold in place.",
	"Method": "String getStatus(){\r\n    return status;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.setExpirationInDays",
	"Comment": "sets the time, in days, between when an object is uploaded to the bucketand when it expires.do not use with restores that specify outputlocation.",
	"Method": "void setExpirationInDays(int expirationInDays){\r\n    this.expirationInDays = expirationInDays;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetPersonTrackingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ListResolverRuleAssociationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ResolverRule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getCreatorRequestId() != null)\r\n        sb.append(\"CreatorRequestId: \").append(getCreatorRequestId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getRuleType() != null)\r\n        sb.append(\"RuleType: \").append(getRuleType()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTargetIps() != null)\r\n        sb.append(\"TargetIps: \").append(getTargetIps()).append(\",\");\r\n    if (getResolverEndpointId() != null)\r\n        sb.append(\"ResolverEndpointId: \").append(getResolverEndpointId()).append(\",\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getShareStatus() != null)\r\n        sb.append(\"ShareStatus: \").append(getShareStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ListResolverEndpointIpAddressesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpointId() != null)\r\n        sb.append(\"ResolverEndpointId: \").append(getResolverEndpointId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeEngineDefaultParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.TransferManagerUtils.isUploadParallelizable",
	"Comment": "returns true if the specified upload request can use parallel partuploads for increased performance.",
	"Method": "boolean isUploadParallelizable(PutObjectRequest putObjectRequest,boolean isUsingEncryption){\r\n    if (isUsingEncryption)\r\n        return false;\r\n    return (getRequestFile(putObjectRequest) != null);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeReservedDBInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getReservedDBInstances() != null)\r\n        sb.append(\"ReservedDBInstances: \").append(getReservedDBInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.withCrossOriginConfiguration",
	"Comment": "sets the new cross origin configuration for the specified bucket andreturns this object, enabling additional method calls to be chainedtogether.",
	"Method": "SetBucketCrossOriginConfigurationRequest withCrossOriginConfiguration(BucketCrossOriginConfiguration crossOriginConfiguration){\r\n    setCrossOriginConfiguration(crossOriginConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getSourceKey",
	"Comment": "gets the source bucket key under which the source object to becopied is stored.",
	"Method": "String getSourceKey(){\r\n    return sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.describeModelPackage",
	"Comment": "returns a description of the specified model package, which is used to create amazon sagemaker models or list onaws marketplace.buyers can subscribe to model packages listed on aws marketplace to create models in amazon sagemaker.",
	"Method": "DescribeModelPackageResult describeModelPackage(DescribeModelPackageRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeModelPackage(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RestoreDBInstanceToPointInTimeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceDBInstanceIdentifier() != null)\r\n        sb.append(\"SourceDBInstanceIdentifier: \").append(getSourceDBInstanceIdentifier()).append(\",\");\r\n    if (getTargetDBInstanceIdentifier() != null)\r\n        sb.append(\"TargetDBInstanceIdentifier: \").append(getTargetDBInstanceIdentifier()).append(\",\");\r\n    if (getRestoreTime() != null)\r\n        sb.append(\"RestoreTime: \").append(getRestoreTime()).append(\",\");\r\n    if (getUseLatestRestorableTime() != null)\r\n        sb.append(\"UseLatestRestorableTime: \").append(getUseLatestRestorableTime()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getDBName() != null)\r\n        sb.append(\"DBName: \").append(getDBName()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getCopyTagsToSnapshot() != null)\r\n        sb.append(\"CopyTagsToSnapshot: \").append(getCopyTagsToSnapshot()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getTdeCredentialArn() != null)\r\n        sb.append(\"TdeCredentialArn: \").append(getTdeCredentialArn()).append(\",\");\r\n    if (getTdeCredentialPassword() != null)\r\n        sb.append(\"TdeCredentialPassword: \").append(getTdeCredentialPassword()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getDomainIAMRoleName() != null)\r\n        sb.append(\"DomainIAMRoleName: \").append(getDomainIAMRoleName()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getEnableCloudwatchLogsExports() != null)\r\n        sb.append(\"EnableCloudwatchLogsExports: \").append(getEnableCloudwatchLogsExports()).append(\",\");\r\n    if (getProcessorFeatures() != null)\r\n        sb.append(\"ProcessorFeatures: \").append(getProcessorFeatures()).append(\",\");\r\n    if (getUseDefaultProcessorFeatures() != null)\r\n        sb.append(\"UseDefaultProcessorFeatures: \").append(getUseDefaultProcessorFeatures()).append(\",\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection()).append(\",\");\r\n    if (getSourceDbiResourceId() != null)\r\n        sb.append(\"SourceDbiResourceId: \").append(getSourceDbiResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetAccountLimitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketPolicyRequest.getBucketName",
	"Comment": "returns the name of the amazon s3 bucket whose policy is being deleted.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket whose versions are to be listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withSourceKey",
	"Comment": "sets the source bucket key under which the source object to be copied isstored.",
	"Method": "CopyPartRequest withSourceKey(String sourceKey){\r\n    this.sourceKey = sourceKey;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.AmazonS3ExceptionBuilder.getStatusCode",
	"Comment": "returns the http status code that was returned with this serviceexception.",
	"Method": "int getStatusCode(){\r\n    return statusCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.CopyResult.setDestinationKey",
	"Comment": "sets the destination bucket key under which the new, copied object willbe stored.",
	"Method": "void setDestinationKey(String destinationKey){\r\n    this.destinationKey = destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeEventSubscriptionsAsync",
	"Comment": "simplified method form for invoking the describeeventsubscriptions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync(DescribeEventSubscriptionsRequest request,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,DescribeEventSubscriptionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventSubscriptionsRequest, DescribeEventSubscriptionsResult> asyncHandler,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventSubscriptionsRequest, DescribeEventSubscriptionsResult> asyncHandler){\r\n    return describeEventSubscriptionsAsync(new DescribeEventSubscriptionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.getNextMarker",
	"Comment": "gets the marker to use in the next listobjectsrequest in order to seethe next page of results. if an object listing is not truncated, thismethod will return null. fortruncated requests, this value is equal to the greatestlexicographical value of the object keys and common prefixes includedin this listing.",
	"Method": "String getNextMarker(){\r\n    return nextMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.HyperParameterTuningJobWarmStartConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParentHyperParameterTuningJobs() != null)\r\n        sb.append(\"ParentHyperParameterTuningJobs: \").append(getParentHyperParameterTuningJobs()).append(\",\");\r\n    if (getWarmStartType() != null)\r\n        sb.append(\"WarmStartType: \").append(getWarmStartType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.TrafficPolicyInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTTL() != null)\r\n        sb.append(\"TTL: \").append(getTTL()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getTrafficPolicyId() != null)\r\n        sb.append(\"TrafficPolicyId: \").append(getTrafficPolicyId()).append(\",\");\r\n    if (getTrafficPolicyVersion() != null)\r\n        sb.append(\"TrafficPolicyVersion: \").append(getTrafficPolicyVersion()).append(\",\");\r\n    if (getTrafficPolicyType() != null)\r\n        sb.append(\"TrafficPolicyType: \").append(getTrafficPolicyType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setTruncated",
	"Comment": "sets whether or not this listing is truncated, and additional requestsneed to be made to get more results.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.PublicWorkforceTaskPrice.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAmountInUsd() != null)\r\n        sb.append(\"AmountInUsd: \").append(getAmountInUsd());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getProgressListener",
	"Comment": "returns the optional progress listener for receiving updates about objectdownload status.",
	"Method": "com.amazonaws.services.s3.model.ProgressListener getProgressListener(){\r\n    ProgressListener generalProgressListener = getGeneralProgressListener();\r\n    if (generalProgressListener instanceof LegacyS3ProgressListener) {\r\n        return ((LegacyS3ProgressListener) generalProgressListener).unwrap();\r\n    } else {\r\n        return null;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.GetOperationDetailResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getSubmittedDate() != null)\r\n        sb.append(\"SubmittedDate: \").append(getSubmittedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribePendingMaintenanceActionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPendingMaintenanceActions() != null)\r\n        sb.append(\"PendingMaintenanceActions: \").append(getPendingMaintenanceActions()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.UpdateDomainNameserversRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getFIAuthKey() != null)\r\n        sb.append(\"FIAuthKey: \").append(getFIAuthKey()).append(\",\");\r\n    if (getNameservers() != null)\r\n        sb.append(\"Nameservers: \").append(getNameservers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setBucketName",
	"Comment": "for internal use only.sets the name of the amazon s3bucket containing the objects listed in this s3objectlisting.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateAdmChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getADMChannelRequest() != null)\r\n        sb.append(\"ADMChannelRequest: \").append(getADMChannelRequest()).append(\",\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ChangeTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.setVersionId",
	"Comment": "sets the version id of the object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.withNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "ListBucketMetricsConfigurationsResult withNextContinuationToken(String nextContinuationToken){\r\n    setNextContinuationToken(nextContinuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.DeleteResourceShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReturnValue() != null)\r\n        sb.append(\"ReturnValue: \").append(getReturnValue()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.setConfiguration",
	"Comment": "sets the website configuration to send as part of this request.",
	"Method": "void setConfiguration(BucketWebsiteConfiguration configuration){\r\n    this.configuration = configuration;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListModelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ChangeInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSubmittedAt() != null)\r\n        sb.append(\"SubmittedAt: \").append(getSubmittedAt()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ResendContactReachabilityEmailRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.SourceAlgorithm.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelDataUrl() != null)\r\n        sb.append(\"ModelDataUrl: \").append(getModelDataUrl()).append(\",\");\r\n    if (getAlgorithmName() != null)\r\n        sb.append(\"AlgorithmName: \").append(getAlgorithmName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendMessagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getMessageRequest() != null)\r\n        sb.append(\"MessageRequest: \").append(getMessageRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.setVersionId",
	"Comment": "sets the version id which uniquely identifies this version of an object.",
	"Method": "void setVersionId(String id){\r\n    this.versionId = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBParameterGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RoutingRuleCondition.setKeyPrefixEquals",
	"Comment": "set the object key name prefix when the redirect is applied.",
	"Method": "void setKeyPrefixEquals(String keyPrefixEquals){\r\n    this.keyPrefixEquals = keyPrefixEquals;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateCompilationJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompilationJobName() != null)\r\n        sb.append(\"CompilationJobName: \").append(getCompilationJobName()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getInputConfig() != null)\r\n        sb.append(\"InputConfig: \").append(getInputConfig()).append(\",\");\r\n    if (getOutputConfig() != null)\r\n        sb.append(\"OutputConfig: \").append(getOutputConfig()).append(\",\");\r\n    if (getStoppingCondition() != null)\r\n        sb.append(\"StoppingCondition: \").append(getStoppingCondition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteMarkerReplication.withStatus",
	"Comment": "sets the replication status for delete markers. delete markers are not replicated if status is disabled.",
	"Method": "DeleteMarkerReplication withStatus(String status,DeleteMarkerReplication withStatus,DeleteMarkerReplicationStatus status){\r\n    setStatus(status == null ? null : status.toString());\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateTrafficPolicyVersionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicy() != null)\r\n        sb.append(\"TrafficPolicy: \").append(getTrafficPolicy()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHostedZoneLimitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonpollyasync using the current builder configuration.",
	"Method": "AmazonPollyAsync build(AwsAsyncClientParams params){\r\n    return new AmazonPollyAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CancelSimulationJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.RestartSimulationJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RemoveRoleFromDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeEventCategories",
	"Comment": "displays a list of event categories for all event source types, or for a specified source type. for a list of theevent categories and source types, go to amazon redshiftevent notifications.",
	"Method": "DescribeEventCategoriesResult describeEventCategories(DescribeEventCategoriesRequest request,DescribeEventCategoriesResult describeEventCategories){\r\n    return describeEventCategories(new DescribeEventCategoriesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.deleteGlobalCluster",
	"Comment": "deletes a global database cluster. the primary and secondary clusters must already be detached or destroyedfirst.",
	"Method": "GlobalCluster deleteGlobalCluster(DeleteGlobalClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteGlobalCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.getAlwaysUseCryptoProvider",
	"Comment": "returns true if the specified crypto provider should be used in all cases. forbackwards compatibility, it will be ignored if cryptomode specifies authenticatedencryption.",
	"Method": "boolean getAlwaysUseCryptoProvider(){\r\n    return alwaysUseCryptoProvider;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.SecondaryStatusTransition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DeleteCollectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRetentionRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "GetObjectRetentionRequest withRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.CheckDomainTransferabilityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getAuthCode() != null)\r\n        sb.append(\"AuthCode: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.EventDestinationDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudWatchLogsDestination() != null)\r\n        sb.append(\"CloudWatchLogsDestination: \").append(getCloudWatchLogsDestination()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getKinesisFirehoseDestination() != null)\r\n        sb.append(\"KinesisFirehoseDestination: \").append(getKinesisFirehoseDestination()).append(\",\");\r\n    if (getMatchingEventTypes() != null)\r\n        sb.append(\"MatchingEventTypes: \").append(getMatchingEventTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.UpdateGroupQueryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupQuery() != null)\r\n        sb.append(\"GroupQuery: \").append(getGroupQuery());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setUnmodifiedSinceConstraint",
	"Comment": "sets the optional unmodified constraint that restricts this request toexecuting only if the source object has not been modified afterthe specified date.the unmodified constraint may be used with matching etag constraints, butnot with any other type of constraint.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "void setUnmodifiedSinceConstraint(Date date){\r\n    this.unmodifiedSinceConstraint = date;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetPublicAccessBlockRequest.getBucketName",
	"Comment": "the name of the amazon s3 bucket whose public access block configuration you want to retrieve.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.TagResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedResourcesMap() != null)\r\n        sb.append(\"FailedResourcesMap: \").append(getFailedResourcesMap());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeEndpointConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointConfigName() != null)\r\n        sb.append(\"EndpointConfigName: \").append(getEndpointConfigName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeReservedDBInstancesOfferingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedDBInstancesOfferingId() != null)\r\n        sb.append(\"ReservedDBInstancesOfferingId: \").append(getReservedDBInstancesOfferingId()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.UpdateHealthCheckRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheckId() != null)\r\n        sb.append(\"HealthCheckId: \").append(getHealthCheckId()).append(\",\");\r\n    if (getHealthCheckVersion() != null)\r\n        sb.append(\"HealthCheckVersion: \").append(getHealthCheckVersion()).append(\",\");\r\n    if (getIPAddress() != null)\r\n        sb.append(\"IPAddress: \").append(getIPAddress()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getResourcePath() != null)\r\n        sb.append(\"ResourcePath: \").append(getResourcePath()).append(\",\");\r\n    if (getFullyQualifiedDomainName() != null)\r\n        sb.append(\"FullyQualifiedDomainName: \").append(getFullyQualifiedDomainName()).append(\",\");\r\n    if (getSearchString() != null)\r\n        sb.append(\"SearchString: \").append(getSearchString()).append(\",\");\r\n    if (getFailureThreshold() != null)\r\n        sb.append(\"FailureThreshold: \").append(getFailureThreshold()).append(\",\");\r\n    if (getInverted() != null)\r\n        sb.append(\"Inverted: \").append(getInverted()).append(\",\");\r\n    if (getDisabled() != null)\r\n        sb.append(\"Disabled: \").append(getDisabled()).append(\",\");\r\n    if (getHealthThreshold() != null)\r\n        sb.append(\"HealthThreshold: \").append(getHealthThreshold()).append(\",\");\r\n    if (getChildHealthChecks() != null)\r\n        sb.append(\"ChildHealthChecks: \").append(getChildHealthChecks()).append(\",\");\r\n    if (getEnableSNI() != null)\r\n        sb.append(\"EnableSNI: \").append(getEnableSNI()).append(\",\");\r\n    if (getRegions() != null)\r\n        sb.append(\"Regions: \").append(getRegions()).append(\",\");\r\n    if (getAlarmIdentifier() != null)\r\n        sb.append(\"AlarmIdentifier: \").append(getAlarmIdentifier()).append(\",\");\r\n    if (getInsufficientDataHealthStatus() != null)\r\n        sb.append(\"InsufficientDataHealthStatus: \").append(getInsufficientDataHealthStatus()).append(\",\");\r\n    if (getResetElements() != null)\r\n        sb.append(\"ResetElements: \").append(getResetElements());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.S3ClientOptions.isForceGlobalBucketAccessEnabled",
	"Comment": "returns whether the client should be configured with global bucket access enabled.",
	"Method": "boolean isForceGlobalBucketAccessEnabled(){\r\n    return this.forceGlobalBucketAccessEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.PropertyNameSuggestion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropertyName() != null)\r\n        sb.append(\"PropertyName: \").append(getPropertyName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setAccessControlList",
	"Comment": "sets the optional access control list for the new upload. if specified,cannedacl will be ignored.",
	"Method": "void setAccessControlList(AccessControlList accessControlList){\r\n    this.accessControlList = accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.MultipleFileUploadImpl.getKeyPrefix",
	"Comment": "returns the key prefix of the virtual directory being uploaded to.",
	"Method": "String getKeyPrefix(){\r\n    return keyPrefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeSnapshotSchedulesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getScheduleIdentifier() != null)\r\n        sb.append(\"ScheduleIdentifier: \").append(getScheduleIdentifier()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClient.listResources",
	"Comment": "lists the resources that the specified principal can access.",
	"Method": "ListResourcesResult listResources(ListResourcesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListResources(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.createDBSubnetGroup",
	"Comment": "creates a new db subnet group. db subnet groups must contain at least one subnet in at least two azs in the awsregion.",
	"Method": "DBSubnetGroup createDBSubnetGroup(CreateDBSubnetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDBSubnetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.listHealthChecks",
	"Comment": "retrieve a list of the health checks that are associated with the current aws account.",
	"Method": "ListHealthChecksResult listHealthChecks(ListHealthChecksRequest request,ListHealthChecksResult listHealthChecks){\r\n    return listHealthChecks(new ListHealthChecksRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ResolverRuleAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getResolverRuleId() != null)\r\n        sb.append(\"ResolverRuleId: \").append(getResolverRuleId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVPCId() != null)\r\n        sb.append(\"VPCId: \").append(getVPCId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsClient.listGroupResources",
	"Comment": "returns a list of arns of resources that are members of a specified resource group.",
	"Method": "ListGroupResourcesResult listGroupResources(ListGroupResourcesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListGroupResources(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketLifecycleConfiguration.withRules",
	"Comment": "sets the rules that comprise this configuration and returns a referenceto this object for easy method chaining.",
	"Method": "BucketLifecycleConfiguration withRules(List<Rule> rules,BucketLifecycleConfiguration withRules,Rule rules){\r\n    setRules(Arrays.asList(rules));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlClientBuilder.withFipsEnabled",
	"Comment": "sets the status of fips enabled endpoints for clients built with this builder. the default is to not use fipsendpoints.",
	"Method": "AWSS3ControlClientBuilder withFipsEnabled(Boolean fipsEnabled){\r\n    setFipsEnabled(fipsEnabled);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.setCrossOriginConfiguration",
	"Comment": "sets the new cross origin configuration for the specified bucket.",
	"Method": "void setCrossOriginConfiguration(BucketCrossOriginConfiguration crossOriginConfiguration){\r\n    this.crossOriginConfiguration = crossOriginConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setNextKeyMarker",
	"Comment": "for internal use only. sets the key marker to use in thenext listversions request in order to see the next page of results for atruncated version listing.",
	"Method": "void setNextKeyMarker(String marker){\r\n    this.nextKeyMarker = marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.TaggedResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTag() != null)\r\n        sb.append(\"Tag: \").append(getTag()).append(\",\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "GetObjectRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopHyperParameterTuningJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHyperParameterTuningJobName() != null)\r\n        sb.append(\"HyperParameterTuningJobName: \").append(getHyperParameterTuningJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.getResolverRulePolicy",
	"Comment": "gets information about a resolver rule policy. a resolver rule policy specifies the resolver operations andresources that you want to allow another aws account to be able to use.",
	"Method": "GetResolverRulePolicyResult getResolverRulePolicy(GetResolverRulePolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetResolverRulePolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectTextRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListFleetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleetDetails() != null)\r\n        sb.append(\"FleetDetails: \").append(getFleetDetails()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withBucketName",
	"Comment": "sets the name of the bucket containing the existing, initiated multipartupload, with which this new part will be associated, and returns thisupdated object so that additional method calls can be chained together.",
	"Method": "UploadPartRequest withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateSnapshotScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduleDefinitions() != null)\r\n        sb.append(\"ScheduleDefinitions: \").append(getScheduleDefinitions()).append(\",\");\r\n    if (getScheduleIdentifier() != null)\r\n        sb.append(\"ScheduleIdentifier: \").append(getScheduleIdentifier()).append(\",\");\r\n    if (getScheduleDescription() != null)\r\n        sb.append(\"ScheduleDescription: \").append(getScheduleDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextInvocations() != null)\r\n        sb.append(\"NextInvocations: \").append(getNextInvocations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ProductionVariantSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVariantName() != null)\r\n        sb.append(\"VariantName: \").append(getVariantName()).append(\",\");\r\n    if (getDeployedImages() != null)\r\n        sb.append(\"DeployedImages: \").append(getDeployedImages()).append(\",\");\r\n    if (getCurrentWeight() != null)\r\n        sb.append(\"CurrentWeight: \").append(getCurrentWeight()).append(\",\");\r\n    if (getDesiredWeight() != null)\r\n        sb.append(\"DesiredWeight: \").append(getDesiredWeight()).append(\",\");\r\n    if (getCurrentInstanceCount() != null)\r\n        sb.append(\"CurrentInstanceCount: \").append(getCurrentInstanceCount()).append(\",\");\r\n    if (getDesiredInstanceCount() != null)\r\n        sb.append(\"DesiredInstanceCount: \").append(getDesiredInstanceCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setMaxParts",
	"Comment": "sets the optional max parts value specified in the original request tolimit how many parts are listed.",
	"Method": "void setMaxParts(int maxParts){\r\n    this.maxParts = maxParts;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AbstractAmazonRoute53DomainsAsync.listDomainsAsync",
	"Comment": "simplified method form for invoking the listdomains operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListDomainsResult> listDomainsAsync(ListDomainsRequest request,java.util.concurrent.Future<ListDomainsResult> listDomainsAsync,ListDomainsRequest request,com.amazonaws.handlers.AsyncHandler<ListDomainsRequest, ListDomainsResult> asyncHandler,java.util.concurrent.Future<ListDomainsResult> listDomainsAsync,java.util.concurrent.Future<ListDomainsResult> listDomainsAsync,com.amazonaws.handlers.AsyncHandler<ListDomainsRequest, ListDomainsResult> asyncHandler){\r\n    return listDomainsAsync(new ListDomainsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.HyperParameterAlgorithmSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingImage() != null)\r\n        sb.append(\"TrainingImage: \").append(getTrainingImage()).append(\",\");\r\n    if (getTrainingInputMode() != null)\r\n        sb.append(\"TrainingInputMode: \").append(getTrainingInputMode()).append(\",\");\r\n    if (getAlgorithmName() != null)\r\n        sb.append(\"AlgorithmName: \").append(getAlgorithmName()).append(\",\");\r\n    if (getMetricDefinitions() != null)\r\n        sb.append(\"MetricDefinitions: \").append(getMetricDefinitions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.AWSResourceGroupsTaggingAPIClient.getTagKeys",
	"Comment": "returns all tag keys in the specified region for the aws account.",
	"Method": "GetTagKeysResult getTagKeys(GetTagKeysRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTagKeys(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.GetDomainDetailRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterDbRevisionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getClusterDbRevisions() != null)\r\n        sb.append(\"ClusterDbRevisions: \").append(getClusterDbRevisions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelCounters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTotalLabeled() != null)\r\n        sb.append(\"TotalLabeled: \").append(getTotalLabeled()).append(\",\");\r\n    if (getHumanLabeled() != null)\r\n        sb.append(\"HumanLabeled: \").append(getHumanLabeled()).append(\",\");\r\n    if (getMachineLabeled() != null)\r\n        sb.append(\"MachineLabeled: \").append(getMachineLabeled()).append(\",\");\r\n    if (getFailedNonRetryableError() != null)\r\n        sb.append(\"FailedNonRetryableError: \").append(getFailedNonRetryableError()).append(\",\");\r\n    if (getUnlabeled() != null)\r\n        sb.append(\"Unlabeled: \").append(getUnlabeled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DoubleRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrom() != null)\r\n        sb.append(\"From: \").append(getFrom()).append(\",\");\r\n    if (getTo() != null)\r\n        sb.append(\"To: \").append(getTo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeStorageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTotalBackupSizeInMegaBytes() != null)\r\n        sb.append(\"TotalBackupSizeInMegaBytes: \").append(getTotalBackupSizeInMegaBytes()).append(\",\");\r\n    if (getTotalProvisionedStorageInMegaBytes() != null)\r\n        sb.append(\"TotalProvisionedStorageInMegaBytes: \").append(getTotalProvisionedStorageInMegaBytes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.getBucketName",
	"Comment": "returns the name of the bucket in which the new multipart upload wasinitiated.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListLabelingJobsForWorkteamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabelingJobSummaryList() != null)\r\n        sb.append(\"LabelingJobSummaryList: \").append(getLabelingJobSummaryList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListSimulationJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSimulationJobSummaries() != null)\r\n        sb.append(\"SimulationJobSummaries: \").append(getSimulationJobSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.CreateConfigurationSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SourceSelectionCriteria.withSseKmsEncryptedObjects",
	"Comment": "sets the container for filter information of selection of kms encrypted s3 objects.",
	"Method": "SourceSelectionCriteria withSseKmsEncryptedObjects(SseKmsEncryptedObjects sseKmsEncryptedObjects){\r\n    setSseKmsEncryptedObjects(sseKmsEncryptedObjects);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonroute53resolverasync using the current builder configuration.",
	"Method": "AmazonRoute53ResolverAsync build(AwsAsyncClientParams params){\r\n    return new AmazonRoute53ResolverAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketInventoryConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the inventory configuration to retrieve.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getUnmodifiedSinceConstraint",
	"Comment": "gets the optional unmodifiedconstraint that restricts thisrequest to executing only if the source object has not beenmodified after the specified date.the unmodified since constraint may be used with matching etagconstraints, but not with any other type of constraint.",
	"Method": "Date getUnmodifiedSinceConstraint(){\r\n    return unmodifiedSinceConstraint;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.withLifecycleConfiguration",
	"Comment": "sets the new lifecycle configuration for the specified bucket andreturns this object, enabling additional method calls to be chainedtogether.",
	"Method": "SetBucketLifecycleConfigurationRequest withLifecycleConfiguration(BucketLifecycleConfiguration lifecycleConfiguration){\r\n    setLifecycleConfiguration(lifecycleConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListNotebookInstanceLifecycleConfigsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getNotebookInstanceLifecycleConfigs() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigs: \").append(getNotebookInstanceLifecycleConfigs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.checkDomainTransferability",
	"Comment": "checks whether a domain name can be transferred to amazon route 53.",
	"Method": "CheckDomainTransferabilityResult checkDomainTransferability(CheckDomainTransferabilityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCheckDomainTransferability(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectupload status, and returns this updated object so that additional methodcalls can be chained together.",
	"Method": "UploadPartRequest withProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setProgressListener(progressListener);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.RepeatableFileInputStream.reset",
	"Comment": "resets the input stream to the last mark point, or the beginning of thestream if there is no mark point, by creating a new fileinputstream basedon the underlying file.",
	"Method": "void reset(){\r\n    this.fis.close();\r\n    abortIfNeeded();\r\n    this.fis = new FileInputStream(file);\r\n    long skipped = 0;\r\n    long toSkip = markPoint;\r\n    while (toSkip > 0) {\r\n        skipped = this.fis.skip(toSkip);\r\n        toSkip -= skipped;\r\n    }\r\n    if (log.isDebugEnabled()) {\r\n        log.debug(\"Reset to mark point \" + markPoint + \" after returning \" + bytesReadPastMarkPoint + \" bytes\");\r\n    }\r\n    this.bytesReadPastMarkPoint = 0;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ResourceConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getInstanceCount() != null)\r\n        sb.append(\"InstanceCount: \").append(getInstanceCount()).append(\",\");\r\n    if (getVolumeSizeInGB() != null)\r\n        sb.append(\"VolumeSizeInGB: \").append(getVolumeSizeInGB()).append(\",\");\r\n    if (getVolumeKmsKeyId() != null)\r\n        sb.append(\"VolumeKmsKeyId: \").append(getVolumeKmsKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AmazonS3Exception.getAdditionalDetails",
	"Comment": "returns any additional information retrieved in the error response.",
	"Method": "Map<String, String> getAdditionalDetails(){\r\n    return additionalDetails;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateHyperParameterTuningJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHyperParameterTuningJobArn() != null)\r\n        sb.append(\"HyperParameterTuningJobArn: \").append(getHyperParameterTuningJobArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateCollectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getCollectionArn() != null)\r\n        sb.append(\"CollectionArn: \").append(getCollectionArn()).append(\",\");\r\n    if (getFaceModelVersion() != null)\r\n        sb.append(\"FaceModelVersion: \").append(getFaceModelVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getDBInstanceStatus() != null)\r\n        sb.append(\"DBInstanceStatus: \").append(getDBInstanceStatus()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getDBName() != null)\r\n        sb.append(\"DBName: \").append(getDBName()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getInstanceCreateTime() != null)\r\n        sb.append(\"InstanceCreateTime: \").append(getInstanceCreateTime()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getDBSecurityGroups() != null)\r\n        sb.append(\"DBSecurityGroups: \").append(getDBSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroups() != null)\r\n        sb.append(\"VpcSecurityGroups: \").append(getVpcSecurityGroups()).append(\",\");\r\n    if (getDBParameterGroups() != null)\r\n        sb.append(\"DBParameterGroups: \").append(getDBParameterGroups()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDBSubnetGroup() != null)\r\n        sb.append(\"DBSubnetGroup: \").append(getDBSubnetGroup()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getPendingModifiedValues() != null)\r\n        sb.append(\"PendingModifiedValues: \").append(getPendingModifiedValues()).append(\",\");\r\n    if (getLatestRestorableTime() != null)\r\n        sb.append(\"LatestRestorableTime: \").append(getLatestRestorableTime()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getReadReplicaSourceDBInstanceIdentifier() != null)\r\n        sb.append(\"ReadReplicaSourceDBInstanceIdentifier: \").append(getReadReplicaSourceDBInstanceIdentifier()).append(\",\");\r\n    if (getReadReplicaDBInstanceIdentifiers() != null)\r\n        sb.append(\"ReadReplicaDBInstanceIdentifiers: \").append(getReadReplicaDBInstanceIdentifiers()).append(\",\");\r\n    if (getReadReplicaDBClusterIdentifiers() != null)\r\n        sb.append(\"ReadReplicaDBClusterIdentifiers: \").append(getReadReplicaDBClusterIdentifiers()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupMemberships() != null)\r\n        sb.append(\"OptionGroupMemberships: \").append(getOptionGroupMemberships()).append(\",\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getSecondaryAvailabilityZone() != null)\r\n        sb.append(\"SecondaryAvailabilityZone: \").append(getSecondaryAvailabilityZone()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getStatusInfos() != null)\r\n        sb.append(\"StatusInfos: \").append(getStatusInfos()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getTdeCredentialArn() != null)\r\n        sb.append(\"TdeCredentialArn: \").append(getTdeCredentialArn()).append(\",\");\r\n    if (getDbInstancePort() != null)\r\n        sb.append(\"DbInstancePort: \").append(getDbInstancePort()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getDbiResourceId() != null)\r\n        sb.append(\"DbiResourceId: \").append(getDbiResourceId()).append(\",\");\r\n    if (getCACertificateIdentifier() != null)\r\n        sb.append(\"CACertificateIdentifier: \").append(getCACertificateIdentifier()).append(\",\");\r\n    if (getDomainMemberships() != null)\r\n        sb.append(\"DomainMemberships: \").append(getDomainMemberships()).append(\",\");\r\n    if (getCopyTagsToSnapshot() != null)\r\n        sb.append(\"CopyTagsToSnapshot: \").append(getCopyTagsToSnapshot()).append(\",\");\r\n    if (getMonitoringInterval() != null)\r\n        sb.append(\"MonitoringInterval: \").append(getMonitoringInterval()).append(\",\");\r\n    if (getEnhancedMonitoringResourceArn() != null)\r\n        sb.append(\"EnhancedMonitoringResourceArn: \").append(getEnhancedMonitoringResourceArn()).append(\",\");\r\n    if (getMonitoringRoleArn() != null)\r\n        sb.append(\"MonitoringRoleArn: \").append(getMonitoringRoleArn()).append(\",\");\r\n    if (getPromotionTier() != null)\r\n        sb.append(\"PromotionTier: \").append(getPromotionTier()).append(\",\");\r\n    if (getDBInstanceArn() != null)\r\n        sb.append(\"DBInstanceArn: \").append(getDBInstanceArn()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone()).append(\",\");\r\n    if (getIAMDatabaseAuthenticationEnabled() != null)\r\n        sb.append(\"IAMDatabaseAuthenticationEnabled: \").append(getIAMDatabaseAuthenticationEnabled()).append(\",\");\r\n    if (getPerformanceInsightsEnabled() != null)\r\n        sb.append(\"PerformanceInsightsEnabled: \").append(getPerformanceInsightsEnabled()).append(\",\");\r\n    if (getPerformanceInsightsKMSKeyId() != null)\r\n        sb.append(\"PerformanceInsightsKMSKeyId: \").append(getPerformanceInsightsKMSKeyId()).append(\",\");\r\n    if (getPerformanceInsightsRetentionPeriod() != null)\r\n        sb.append(\"PerformanceInsightsRetentionPeriod: \").append(getPerformanceInsightsRetentionPeriod()).append(\",\");\r\n    if (getEnabledCloudwatchLogsExports() != null)\r\n        sb.append(\"EnabledCloudwatchLogsExports: \").append(getEnabledCloudwatchLogsExports()).append(\",\");\r\n    if (getProcessorFeatures() != null)\r\n        sb.append(\"ProcessorFeatures: \").append(getProcessorFeatures()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection()).append(\",\");\r\n    if (getListenerEndpoint() != null)\r\n        sb.append(\"ListenerEndpoint: \").append(getListenerEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketPolicy.setPolicyText",
	"Comment": "sets the raw policy json text. a bucket will have no policy text unless the policy text is explicitlyprovided through this method.",
	"Method": "void setPolicyText(String policyText){\r\n    this.policyText = policyText;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryS3BucketDestination.withEncryption",
	"Comment": "set the type of encryption to use to protect the inventory contents.",
	"Method": "InventoryS3BucketDestination withEncryption(InventoryEncryption encryption){\r\n    setEncryption(encryption);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetSpeechSynthesisTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSynthesisTask() != null)\r\n        sb.append(\"SynthesisTask: \").append(getSynthesisTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.listGeoLocationsAsync",
	"Comment": "simplified method form for invoking the listgeolocations operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListGeoLocationsResult> listGeoLocationsAsync(ListGeoLocationsRequest request,java.util.concurrent.Future<ListGeoLocationsResult> listGeoLocationsAsync,ListGeoLocationsRequest request,com.amazonaws.handlers.AsyncHandler<ListGeoLocationsRequest, ListGeoLocationsResult> asyncHandler,java.util.concurrent.Future<ListGeoLocationsResult> listGeoLocationsAsync,java.util.concurrent.Future<ListGeoLocationsResult> listGeoLocationsAsync,com.amazonaws.handlers.AsyncHandler<ListGeoLocationsRequest, ListGeoLocationsResult> asyncHandler){\r\n    return listGeoLocationsAsync(new ListGeoLocationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketVersioningConfiguration.getStatus",
	"Comment": "returns the current status of versioning for this bucket versioningconfiguration object, indicating if versioning is enabled or not for abucket.",
	"Method": "String getStatus(){\r\n    return status;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.ListEmailIdentitiesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.withKeys",
	"Comment": "convenience method to specify a set of keys without versions.",
	"Method": "DeleteObjectsRequest withKeys(List<KeyVersion> keys,DeleteObjectsRequest withKeys,String keys){\r\n    List<KeyVersion> keyVersions = new ArrayList<KeyVersion>(keys.length);\r\n    for (String key : keys) {\r\n        keyVersions.add(new KeyVersion(key));\r\n    }\r\n    setKeys(keyVersions);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ModelPackageStatusDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValidationStatuses() != null)\r\n        sb.append(\"ValidationStatuses: \").append(getValidationStatuses()).append(\",\");\r\n    if (getImageScanStatuses() != null)\r\n        sb.append(\"ImageScanStatuses: \").append(getImageScanStatuses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessor.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateStreamProcessorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(getOutput()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.getNextContinuationToken",
	"Comment": "gets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "String getNextContinuationToken(){\r\n    return nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteWorkteamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuccess() != null)\r\n        sb.append(\"Success: \").append(getSuccess());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ModelArtifacts.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3ModelArtifacts() != null)\r\n        sb.append(\"S3ModelArtifacts: \").append(getS3ModelArtifacts());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketLoggingConfiguration.setDestinationBucketName",
	"Comment": "sets the destination bucket name for this logging configuration.",
	"Method": "void setDestinationBucketName(String destinationBucketName){\r\n    this.destinationBucketName = destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteHsmClientCertificateResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.AwsChunkedEncodingInputStream.reset",
	"Comment": "reset the stream, either by resetting the wrapped stream or using thebuffer created by this class.",
	"Method": "void reset(){\r\n    abortIfNeeded();\r\n    currentChunkIterator = null;\r\n    priorChunkSignature = headerSignature;\r\n    if (is.markSupported()) {\r\n        if (log.isDebugEnabled())\r\n            log.debug(\"AwsChunkedEncodingInputStream reset \" + \"(will reset the wrapped stream because it is mark-supported).\");\r\n        is.reset();\r\n    } else {\r\n        if (log.isDebugEnabled())\r\n            log.debug(\"AwsChunkedEncodingInputStream reset \" + \"(will use the buffer of the decoded stream).\");\r\n        if (null == decodedStreamBuffer) {\r\n            throw new IOException(\"Cannot reset the stream because the mark is not set.\");\r\n        }\r\n        decodedStreamBuffer.startReadBuffer();\r\n    }\r\n    currentChunkIterator = null;\r\n    isAtStart = true;\r\n    isTerminating = false;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.modifyClusterSubnetGroup",
	"Comment": "modifies a cluster subnet group to include the specified list of vpc subnets. the operation replaces the existinglist of subnets with the new list of subnets.",
	"Method": "ClusterSubnetGroup modifyClusterSubnetGroup(ModifyClusterSubnetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyClusterSubnetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.CheckDomainAvailabilityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getIdnLangCode() != null)\r\n        sb.append(\"IdnLangCode: \").append(getIdnLangCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceMatch.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSimilarity() != null)\r\n        sb.append(\"Similarity: \").append(getSimilarity()).append(\",\");\r\n    if (getFace() != null)\r\n        sb.append(\"Face: \").append(getFace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteWorkteamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkteamName() != null)\r\n        sb.append(\"WorkteamName: \").append(getWorkteamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartContentModerationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVideo() != null)\r\n        sb.append(\"Video: \").append(getVideo()).append(\",\");\r\n    if (getMinConfidence() != null)\r\n        sb.append(\"MinConfidence: \").append(getMinConfidence()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getNotificationChannel() != null)\r\n        sb.append(\"NotificationChannel: \").append(getNotificationChannel()).append(\",\");\r\n    if (getJobTag() != null)\r\n        sb.append(\"JobTag: \").append(getJobTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterDbRevisionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBClusterSnapshotAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getDBClusterSnapshotAttributes() != null)\r\n        sb.append(\"DBClusterSnapshotAttributes: \").append(getDBClusterSnapshotAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateClusterSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSubnetGroupName() != null)\r\n        sb.append(\"ClusterSubnetGroupName: \").append(getClusterSubnetGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.ListUserGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupList() != null)\r\n        sb.append(\"GroupList: \").append(getGroupList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getClusters() != null)\r\n        sb.append(\"Clusters: \").append(getClusters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBClusterSnapshots",
	"Comment": "returns information about db cluster snapshots. this api action supports pagination.for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DescribeDBClusterSnapshotsResult describeDBClusterSnapshots(DescribeDBClusterSnapshotsRequest request,DescribeDBClusterSnapshotsResult describeDBClusterSnapshots){\r\n    return describeDBClusterSnapshots(new DescribeDBClusterSnapshotsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonredshift using the current builder configuration.",
	"Method": "AmazonRedshift build(AwsSyncClientParams params){\r\n    return new AmazonRedshiftClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.setEncryptionConfiguration",
	"Comment": "sets the container for information regarding encryption based configuration for replicas",
	"Method": "void setEncryptionConfiguration(EncryptionConfiguration encryptionConfiguration){\r\n    this.encryptionConfiguration = encryptionConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteModelPackageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.GetTagValuesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPaginationToken() != null)\r\n        sb.append(\"PaginationToken: \").append(getPaginationToken()).append(\",\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteHsmConfigurationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SelectObjectContentRequest.getInputSerialization",
	"Comment": "describes the format of the data in the object that is being queried.",
	"Method": "InputSerialization getInputSerialization(){\r\n    return inputSerialization;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeEventsAsync",
	"Comment": "simplified method form for invoking the describeevents operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync(DescribeEventsRequest request,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,DescribeEventsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler){\r\n    return describeEventsAsync(new DescribeEventsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setPrefix",
	"Comment": "for internal use only. sets the prefix parameteroriginally used to request this object listing.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.model.ResultSetMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getColumnCount() != null)\r\n        sb.append(\"ColumnCount: \").append(getColumnCount()).append(\",\");\r\n    if (getColumnMetadata() != null)\r\n        sb.append(\"ColumnMetadata: \").append(getColumnMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTrafficPolicyVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicies() != null)\r\n        sb.append(\"TrafficPolicies: \").append(getTrafficPolicies()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getTrafficPolicyVersionMarker() != null)\r\n        sb.append(\"TrafficPolicyVersionMarker: \").append(getTrafficPolicyVersionMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getDestinationKey",
	"Comment": "gets the destination bucket key under which the new, copiedobject will be stored.",
	"Method": "String getDestinationKey(){\r\n    return destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DescribeVoicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getIncludeAdditionalLanguageCodes() != null)\r\n        sb.append(\"IncludeAdditionalLanguageCodes: \").append(getIncludeAdditionalLanguageCodes()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getAbortRuleId",
	"Comment": "id of the lifecycle rule that makes a multipart upload eligible for abort operation.",
	"Method": "String getAbortRuleId(){\r\n    return abortRuleId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabelingJobName() != null)\r\n        sb.append(\"LabelingJobName: \").append(getLabelingJobName()).append(\",\");\r\n    if (getLabelingJobArn() != null)\r\n        sb.append(\"LabelingJobArn: \").append(getLabelingJobArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getLabelingJobStatus() != null)\r\n        sb.append(\"LabelingJobStatus: \").append(getLabelingJobStatus()).append(\",\");\r\n    if (getLabelCounters() != null)\r\n        sb.append(\"LabelCounters: \").append(getLabelCounters()).append(\",\");\r\n    if (getWorkteamArn() != null)\r\n        sb.append(\"WorkteamArn: \").append(getWorkteamArn()).append(\",\");\r\n    if (getPreHumanTaskLambdaArn() != null)\r\n        sb.append(\"PreHumanTaskLambdaArn: \").append(getPreHumanTaskLambdaArn()).append(\",\");\r\n    if (getAnnotationConsolidationLambdaArn() != null)\r\n        sb.append(\"AnnotationConsolidationLambdaArn: \").append(getAnnotationConsolidationLambdaArn()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getLabelingJobOutput() != null)\r\n        sb.append(\"LabelingJobOutput: \").append(getLabelingJobOutput()).append(\",\");\r\n    if (getInputConfig() != null)\r\n        sb.append(\"InputConfig: \").append(getInputConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.getAcl",
	"Comment": "returns the custom acl to be applied to the specified object when thisrequest is executed. a request can use either a custom acl or a cannedacl, but not both.",
	"Method": "AccessControlList getAcl(){\r\n    return acl;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseXmlInputStream",
	"Comment": "parses an xml document from an input stream using a document handler.",
	"Method": "void parseXmlInputStream(DefaultHandler handler,InputStream inputStream){\r\n    try {\r\n        if (log.isDebugEnabled()) {\r\n            log.debug(\"Parsing XML response document with handler: \" + handler.getClass());\r\n        }\r\n        BufferedReader breader = new BufferedReader(new InputStreamReader(inputStream, Constants.DEFAULT_ENCODING));\r\n        xr.setContentHandler(handler);\r\n        xr.setErrorHandler(handler);\r\n        xr.parse(new InputSource(breader));\r\n    } catch (IOException e) {\r\n        throw e;\r\n    } catch (Throwable t) {\r\n        try {\r\n            inputStream.close();\r\n        } catch (IOException e) {\r\n            if (log.isErrorEnabled()) {\r\n                log.error(\"Unable to close response InputStream up after XML parse failure\", e);\r\n            }\r\n        }\r\n        throw new SdkClientException(\"Failed to parse XML document with handler \" + handler.getClass(), t);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetEmailIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityType() != null)\r\n        sb.append(\"IdentityType: \").append(getIdentityType()).append(\",\");\r\n    if (getFeedbackForwardingStatus() != null)\r\n        sb.append(\"FeedbackForwardingStatus: \").append(getFeedbackForwardingStatus()).append(\",\");\r\n    if (getVerifiedForSendingStatus() != null)\r\n        sb.append(\"VerifiedForSendingStatus: \").append(getVerifiedForSendingStatus()).append(\",\");\r\n    if (getDkimAttributes() != null)\r\n        sb.append(\"DkimAttributes: \").append(getDkimAttributes()).append(\",\");\r\n    if (getMailFromAttributes() != null)\r\n        sb.append(\"MailFromAttributes: \").append(getMailFromAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getContinuationToken",
	"Comment": "gets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "String getContinuationToken(){\r\n    return continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.HyperParameterTrainingJobSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJobName() != null)\r\n        sb.append(\"TrainingJobName: \").append(getTrainingJobName()).append(\",\");\r\n    if (getTrainingJobArn() != null)\r\n        sb.append(\"TrainingJobArn: \").append(getTrainingJobArn()).append(\",\");\r\n    if (getTuningJobName() != null)\r\n        sb.append(\"TuningJobName: \").append(getTuningJobName()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTrainingStartTime() != null)\r\n        sb.append(\"TrainingStartTime: \").append(getTrainingStartTime()).append(\",\");\r\n    if (getTrainingEndTime() != null)\r\n        sb.append(\"TrainingEndTime: \").append(getTrainingEndTime()).append(\",\");\r\n    if (getTrainingJobStatus() != null)\r\n        sb.append(\"TrainingJobStatus: \").append(getTrainingJobStatus()).append(\",\");\r\n    if (getTunedHyperParameters() != null)\r\n        sb.append(\"TunedHyperParameters: \").append(getTunedHyperParameters()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getFinalHyperParameterTuningJobObjectiveMetric() != null)\r\n        sb.append(\"FinalHyperParameterTuningJobObjectiveMetric: \").append(getFinalHyperParameterTuningJobObjectiveMetric()).append(\",\");\r\n    if (getObjectiveStatus() != null)\r\n        sb.append(\"ObjectiveStatus: \").append(getObjectiveStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeEventSubscriptionsAsync",
	"Comment": "simplified method form for invoking the describeeventsubscriptions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync(DescribeEventSubscriptionsRequest request,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,DescribeEventSubscriptionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventSubscriptionsRequest, DescribeEventSubscriptionsResult> asyncHandler,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventSubscriptionsRequest, DescribeEventSubscriptionsResult> asyncHandler){\r\n    return describeEventSubscriptionsAsync(new DescribeEventSubscriptionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterParameterGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBClusterParameterGroups() != null)\r\n        sb.append(\"DBClusterParameterGroups: \").append(getDBClusterParameterGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutInstructionFileRequest.getS3ObjectId",
	"Comment": "returns the s3 object id for which the new instruction file will becreated.this is not the instruction file id.",
	"Method": "S3ObjectId getS3ObjectId(){\r\n    return s3ObjectId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlAsyncClientBuilder.enableFips",
	"Comment": "enables use of fips endpoints on clients built with this builder.",
	"Method": "AWSS3ControlAsyncClientBuilder enableFips(){\r\n    return withFipsEnabled(true);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.deleteEmailIdentity",
	"Comment": "deletes an email identity that you previously verified for use with amazon pinpoint. an identity can be either anemail address or a domain name.",
	"Method": "DeleteEmailIdentityResult deleteEmailIdentity(DeleteEmailIdentityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteEmailIdentity(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.AnnotationConsolidationConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAnnotationConsolidationLambdaArn() != null)\r\n        sb.append(\"AnnotationConsolidationLambdaArn: \").append(getAnnotationConsolidationLambdaArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.model.PublicAccessBlockConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlockPublicAcls() != null)\r\n        sb.append(\"BlockPublicAcls: \").append(getBlockPublicAcls()).append(\",\");\r\n    if (getIgnorePublicAcls() != null)\r\n        sb.append(\"IgnorePublicAcls: \").append(getIgnorePublicAcls()).append(\",\");\r\n    if (getBlockPublicPolicy() != null)\r\n        sb.append(\"BlockPublicPolicy: \").append(getBlockPublicPolicy()).append(\",\");\r\n    if (getRestrictPublicBuckets() != null)\r\n        sb.append(\"RestrictPublicBuckets: \").append(getRestrictPublicBuckets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.GetResourceShareInvitationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareInvitations() != null)\r\n        sb.append(\"ResourceShareInvitations: \").append(getResourceShareInvitations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.BatchModifyClusterSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotIdentifierList() != null)\r\n        sb.append(\"SnapshotIdentifierList: \").append(getSnapshotIdentifierList()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StartNotebookInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceName() != null)\r\n        sb.append(\"NotebookInstanceName: \").append(getNotebookInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated completemultipartuploadrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "CompleteMultipartUploadRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListCollectionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.deleteTrafficPolicyInstance",
	"Comment": "deletes a traffic policy instance and all of the resource record sets that amazon route 53 created when youcreated the instance.in the route 53 console, traffic policy instances are known as policy records.",
	"Method": "DeleteTrafficPolicyInstanceResult deleteTrafficPolicyInstance(DeleteTrafficPolicyInstanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteTrafficPolicyInstance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetPublicAccessBlockRequest.withPublicAccessBlockConfiguration",
	"Comment": "the public access block configuration that you want to apply to this amazon s3 bucket.",
	"Method": "SetPublicAccessBlockRequest withPublicAccessBlockConfiguration(PublicAccessBlockConfiguration publicAccessBlockConfiguration){\r\n    setPublicAccessBlockConfiguration(publicAccessBlockConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeLoggingStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteVersionRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket containing the version to delete.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectaclrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "GetObjectAclRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyEventSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getSourceIds() != null)\r\n        sb.append(\"SourceIds: \").append(getSourceIds()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getSeverity() != null)\r\n        sb.append(\"Severity: \").append(getSeverity()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setEncodingType",
	"Comment": "for internal use only. sets the encoding type used by amazon s3 to encodeobject key names in the xml response.",
	"Method": "void setEncodingType(String encodingType){\r\n    this.encodingType = encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.GetOperationDetailRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.MinimumEngineVersionPerAllowedValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllowedValue() != null)\r\n        sb.append(\"AllowedValue: \").append(getAllowedValue()).append(\",\");\r\n    if (getMinimumEngineVersion() != null)\r\n        sb.append(\"MinimumEngineVersion: \").append(getMinimumEngineVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.HealthCheckObservation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getIPAddress() != null)\r\n        sb.append(\"IPAddress: \").append(getIPAddress()).append(\",\");\r\n    if (getStatusReport() != null)\r\n        sb.append(\"StatusReport: \").append(getStatusReport());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CSVInput.withQuoteEscapeCharacter",
	"Comment": "sets the character used for escaping the quote character inside an already escaped value.",
	"Method": "CSVInput withQuoteEscapeCharacter(String quoteEscapeCharacter,CSVInput withQuoteEscapeCharacter,Character quoteEscapeCharacter){\r\n    setQuoteEscapeCharacter(quoteEscapeCharacter);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.rebootDBInstance",
	"Comment": "you might need to reboot your db instance, usually for maintenance reasons. for example, if you make certainmodifications, or if you change the db parameter group associated with the db instance, you must reboot theinstance for the changes to take effect.rebooting a db instance restarts the database engine service. rebooting a db instance results in a momentaryoutage, during which the db instance status is set to rebooting.for more information about rebooting, see rebooting a db instancein the amazon rds user guide.",
	"Method": "DBInstance rebootDBInstance(RebootDBInstanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRebootDBInstance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.RejectResourceShareInvitationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareInvitationArn() != null)\r\n        sb.append(\"ResourceShareInvitationArn: \").append(getResourceShareInvitationArn()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonrdsasync using the current builder configuration.",
	"Method": "AmazonRDSAsync build(AwsAsyncClientParams params){\r\n    return new AmazonRDSAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.GetTagKeysRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPaginationToken() != null)\r\n        sb.append(\"PaginationToken: \").append(getPaginationToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketMetricsConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket containing the metrics configuration to retrieveand returns this object for method chaining.",
	"Method": "GetBucketMetricsConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.BacktrackDBClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getBacktrackIdentifier() != null)\r\n        sb.append(\"BacktrackIdentifier: \").append(getBacktrackIdentifier()).append(\",\");\r\n    if (getBacktrackTo() != null)\r\n        sb.append(\"BacktrackTo: \").append(getBacktrackTo()).append(\",\");\r\n    if (getBacktrackedFrom() != null)\r\n        sb.append(\"BacktrackedFrom: \").append(getBacktrackedFrom()).append(\",\");\r\n    if (getBacktrackRequestCreationTime() != null)\r\n        sb.append(\"BacktrackRequestCreationTime: \").append(getBacktrackRequestCreationTime()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.listConfigurationSets",
	"Comment": "list all of the configuration sets associated with your amazon pinpoint account in the current region.in amazon pinpoint, configuration sets are groups of rules that you can apply to the emails you send. youapply a configuration set to an email by including a reference to the configuration set in the headers of theemail. when you apply a configuration set to an email, all of the rules in that configuration set are applied tothe email.",
	"Method": "ListConfigurationSetsResult listConfigurationSets(ListConfigurationSetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListConfigurationSets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withDestinationBucketName",
	"Comment": "sets the name of the destination bucket which will contain the new,copied object and returns this object, enabling additional method callsto be chained together.",
	"Method": "CopyPartRequest withDestinationBucketName(String destinationBucketName){\r\n    setDestinationBucketName(destinationBucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.OptionVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getIsDefault() != null)\r\n        sb.append(\"IsDefault: \").append(getIsDefault());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOutputDatasetS3Uri() != null)\r\n        sb.append(\"OutputDatasetS3Uri: \").append(getOutputDatasetS3Uri()).append(\",\");\r\n    if (getFinalActiveLearningModelArn() != null)\r\n        sb.append(\"FinalActiveLearningModelArn: \").append(getFinalActiveLearningModelArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsConfiguration.setStorageClassAnalysis",
	"Comment": "sets the storageclassanalysis object which indicates that data related to access patternswill be collected and made available to analyze the tradeoffs between different storage classes.",
	"Method": "void setStorageClassAnalysis(StorageClassAnalysis storageClassAnalysis){\r\n    this.storageClassAnalysis = storageClassAnalysis;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeEventSubscriptions",
	"Comment": "lists all the subscription descriptions for a customer account. the description for a subscription includessubscriptionname, snstopicarn, customerid, sourcetype, sourceid, creationtime, and status.if you specify a subscriptionname, lists the description for that subscription.",
	"Method": "DescribeEventSubscriptionsResult describeEventSubscriptions(DescribeEventSubscriptionsRequest request,DescribeEventSubscriptionsResult describeEventSubscriptions){\r\n    return describeEventSubscriptions(new DescribeEventSubscriptionsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.model.GetPublicAccessBlockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicAccessBlockConfiguration() != null)\r\n        sb.append(\"PublicAccessBlockConfiguration: \").append(getPublicAccessBlockConfiguration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTagsForResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceIds() != null)\r\n        sb.append(\"ResourceIds: \").append(getResourceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteClusterSecurityGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket whoseanalytics configurations are to be listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedInitiateMultipartUploadRequest.withMaterialsDescription",
	"Comment": "sets the materials description for the encryption materials to be used with the current multi part upload request.",
	"Method": "EncryptedInitiateMultipartUploadRequest withMaterialsDescription(Map<String, String> materialsDescription){\r\n    setMaterialsDescription(materialsDescription);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectRetentionRequest.withRetention",
	"Comment": "the container element for the object retention configuration.",
	"Method": "SetObjectRetentionRequest withRetention(ObjectLockRetention retention){\r\n    this.retention = retention;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateVPCAssociationAuthorizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getVPC() != null)\r\n        sb.append(\"VPC: \").append(getVPC());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.AccountQuota.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountQuotaName() != null)\r\n        sb.append(\"AccountQuotaName: \").append(getAccountQuotaName()).append(\",\");\r\n    if (getUsed() != null)\r\n        sb.append(\"Used: \").append(getUsed()).append(\",\");\r\n    if (getMax() != null)\r\n        sb.append(\"Max: \").append(getMax());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectLegalHoldRequest.setLegalHold",
	"Comment": "container element for the legal hold configuration you want to apply to the specified object.",
	"Method": "void setLegalHold(ObjectLockLegalHold legalHold){\r\n    withLegalHold(legalHold);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartLabelDetectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.DeleteTagsForDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getTagsToDelete() != null)\r\n        sb.append(\"TagsToDelete: \").append(getTagsToDelete());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.setBucketAccountId",
	"Comment": "sets the account id that owns the destination bucket.if no account id is provided, the owner will not be validated prior to exporting data.",
	"Method": "void setBucketAccountId(String bucketAccountId){\r\n    this.bucketAccountId = bucketAccountId;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getDBSubnetGroupDescription() != null)\r\n        sb.append(\"DBSubnetGroupDescription: \").append(getDBSubnetGroupDescription()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListWorkteamsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkteams() != null)\r\n        sb.append(\"Workteams: \").append(getWorkteams()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.CreateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getResourceQuery() != null)\r\n        sb.append(\"ResourceQuery: \").append(getResourceQuery()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.ListGroupResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsConfiguration.getId",
	"Comment": "returns the identifier used to represent an analytics configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateTrafficPolicyVersionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getDocument() != null)\r\n        sb.append(\"Document: \").append(getDocument()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteHostedZoneRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getUploadId",
	"Comment": "returns the upload id value specified in the original request used toidentify which multipart upload contains the parts to list.",
	"Method": "String getUploadId(){\r\n    return uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.getSearchSuggestions",
	"Comment": "returns suggestions for the property name to use in search queries. provides suggestions forhyperparameters, tags, and metrics.",
	"Method": "GetSearchSuggestionsResult getSearchSuggestions(GetSearchSuggestionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetSearchSuggestions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessorSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFaceSearch() != null)\r\n        sb.append(\"FaceSearch: \").append(getFaceSearch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.createSimulationApplicationVersion",
	"Comment": "creates a simulation application with a specific revision id.",
	"Method": "CreateSimulationApplicationVersionResult createSimulationApplicationVersion(CreateSimulationApplicationVersionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateSimulationApplicationVersion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ResourcePendingMaintenanceActions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceIdentifier() != null)\r\n        sb.append(\"ResourceIdentifier: \").append(getResourceIdentifier()).append(\",\");\r\n    if (getPendingMaintenanceActionDetails() != null)\r\n        sb.append(\"PendingMaintenanceActionDetails: \").append(getPendingMaintenanceActionDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListGeoLocationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStartContinentCode() != null)\r\n        sb.append(\"StartContinentCode: \").append(getStartContinentCode()).append(\",\");\r\n    if (getStartCountryCode() != null)\r\n        sb.append(\"StartCountryCode: \").append(getStartCountryCode()).append(\",\");\r\n    if (getStartSubdivisionCode() != null)\r\n        sb.append(\"StartSubdivisionCode: \").append(getStartSubdivisionCode()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.PendingModifiedValues.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getNumberOfNodes() != null)\r\n        sb.append(\"NumberOfNodes: \").append(getNumberOfNodes()).append(\",\");\r\n    if (getClusterType() != null)\r\n        sb.append(\"ClusterType: \").append(getClusterType()).append(\",\");\r\n    if (getClusterVersion() != null)\r\n        sb.append(\"ClusterVersion: \").append(getClusterVersion()).append(\",\");\r\n    if (getAutomatedSnapshotRetentionPeriod() != null)\r\n        sb.append(\"AutomatedSnapshotRetentionPeriod: \").append(getAutomatedSnapshotRetentionPeriod()).append(\",\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getEnhancedVpcRouting() != null)\r\n        sb.append(\"EnhancedVpcRouting: \").append(getEnhancedVpcRouting()).append(\",\");\r\n    if (getMaintenanceTrackName() != null)\r\n        sb.append(\"MaintenanceTrackName: \").append(getMaintenanceTrackName()).append(\",\");\r\n    if (getEncryptionType() != null)\r\n        sb.append(\"EncryptionType: \").append(getEncryptionType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeDBClusterParameterGroupsAsync",
	"Comment": "simplified method form for invoking the describedbclusterparametergroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBClusterParameterGroupsResult> describeDBClusterParameterGroupsAsync(DescribeDBClusterParameterGroupsRequest request,java.util.concurrent.Future<DescribeDBClusterParameterGroupsResult> describeDBClusterParameterGroupsAsync,DescribeDBClusterParameterGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBClusterParameterGroupsRequest, DescribeDBClusterParameterGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeDBClusterParameterGroupsResult> describeDBClusterParameterGroupsAsync,java.util.concurrent.Future<DescribeDBClusterParameterGroupsResult> describeDBClusterParameterGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBClusterParameterGroupsRequest, DescribeDBClusterParameterGroupsResult> asyncHandler){\r\n    return describeDBClusterParameterGroupsAsync(new DescribeDBClusterParameterGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.FailoverDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getTargetDBInstanceIdentifier() != null)\r\n        sb.append(\"TargetDBInstanceIdentifier: \").append(getTargetDBInstanceIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.createWorkteam",
	"Comment": "creates a new work team for labeling your data. a work team is defined by one or more amazon cognito user pools.you must first create the user pools before you can create a work team.you cannot create more than 25 work teams in an account and region.",
	"Method": "CreateWorkteamResult createWorkteam(CreateWorkteamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateWorkteam(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteModelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelName() != null)\r\n        sb.append(\"ModelName: \").append(getModelName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.CreateResourceShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShare() != null)\r\n        sb.append(\"ResourceShare: \").append(getResourceShare()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.checkDomainAvailability",
	"Comment": "this operation checks the availability of one domain name. note that if the availability status of a domain ispending, you must submit another request to determine the availability of the domain name.",
	"Method": "CheckDomainAvailabilityResult checkDomainAvailability(CheckDomainAvailabilityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCheckDomainAvailability(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.BatchModifyClusterSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetTrafficPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicy() != null)\r\n        sb.append(\"TrafficPolicy: \").append(getTrafficPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.Resource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose lifecycle configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.modifyClusterDbRevision",
	"Comment": "modifies the database revision of a cluster. the database revision is a unique revision of the database runningin a cluster.",
	"Method": "Cluster modifyClusterDbRevision(ModifyClusterDbRevisionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyClusterDbRevision(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.updateWorkteam",
	"Comment": "updates an existing work team with new member definitions or description.",
	"Method": "UpdateWorkteamResult updateWorkteam(UpdateWorkteamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateWorkteam(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBParameters",
	"Comment": "returns the detailed parameter list for a particular db parameter group.",
	"Method": "DescribeDBParametersResult describeDBParameters(DescribeDBParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ModelPackageSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelPackageName() != null)\r\n        sb.append(\"ModelPackageName: \").append(getModelPackageName()).append(\",\");\r\n    if (getModelPackageArn() != null)\r\n        sb.append(\"ModelPackageArn: \").append(getModelPackageArn()).append(\",\");\r\n    if (getModelPackageDescription() != null)\r\n        sb.append(\"ModelPackageDescription: \").append(getModelPackageDescription()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getModelPackageStatus() != null)\r\n        sb.append(\"ModelPackageStatus: \").append(getModelPackageStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.RegisterRobotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet()).append(\",\");\r\n    if (getRobot() != null)\r\n        sb.append(\"Robot: \").append(getRobot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getEncodingType",
	"Comment": "gets the optional encodingtype parameter indicating theencoding method to be applied on the response.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Eyeglasses.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListHealthChecksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ElasticIpStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.DeleteGroupMembershipRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMemberName() != null)\r\n        sb.append(\"MemberName: \").append(getMemberName()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getSourceKey",
	"Comment": "gets the source bucket key under which the source object to be copied isstored.",
	"Method": "String getSourceKey(){\r\n    return sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.getLastModified",
	"Comment": "gets the date according to amazon s3 at which this version was lastmodified.",
	"Method": "Date getLastModified(){\r\n    return lastModified;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonMatch.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getPerson() != null)\r\n        sb.append(\"Person: \").append(getPerson()).append(\",\");\r\n    if (getFaceMatches() != null)\r\n        sb.append(\"FaceMatches: \").append(getFaceMatches());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.listHostedZonesByNameAsync",
	"Comment": "simplified method form for invoking the listhostedzonesbyname operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListHostedZonesByNameResult> listHostedZonesByNameAsync(ListHostedZonesByNameRequest request,java.util.concurrent.Future<ListHostedZonesByNameResult> listHostedZonesByNameAsync,ListHostedZonesByNameRequest request,com.amazonaws.handlers.AsyncHandler<ListHostedZonesByNameRequest, ListHostedZonesByNameResult> asyncHandler,java.util.concurrent.Future<ListHostedZonesByNameResult> listHostedZonesByNameAsync,java.util.concurrent.Future<ListHostedZonesByNameResult> listHostedZonesByNameAsync,com.amazonaws.handlers.AsyncHandler<ListHostedZonesByNameRequest, ListHostedZonesByNameResult> asyncHandler){\r\n    return listHostedZonesByNameAsync(new ListHostedZonesByNameRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.DisableDomainTransferLockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterTracksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaintenanceTrackName() != null)\r\n        sb.append(\"MaintenanceTrackName: \").append(getMaintenanceTrackName()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadResult.getVersionId",
	"Comment": "returns the version id of the new object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.DownloadImpl.setState",
	"Comment": "this method is also responsible for firing completed signal to thelisteners.",
	"Method": "void setState(TransferState state){\r\n    super.setState(state);\r\n    switch(state) {\r\n        case Completed:\r\n            fireProgressEvent(ProgressEventType.TRANSFER_COMPLETED_EVENT);\r\n            break;\r\n        case Canceled:\r\n            fireProgressEvent(ProgressEventType.TRANSFER_CANCELED_EVENT);\r\n            break;\r\n        case Failed:\r\n            fireProgressEvent(ProgressEventType.TRANSFER_FAILED_EVENT);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.NotebookInstanceLifecycleConfigSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceLifecycleConfigName() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigName: \").append(getNotebookInstanceLifecycleConfigName()).append(\",\");\r\n    if (getNotebookInstanceLifecycleConfigArn() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigArn: \").append(getNotebookInstanceLifecycleConfigArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipSandboxChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSVoipSandboxChannelResponse() != null)\r\n        sb.append(\"APNSVoipSandboxChannelResponse: \").append(getAPNSVoipSandboxChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withSourceBucketName",
	"Comment": "sets the name of the bucket containing the source object to be copied,and returns this object, enabling additional method calls to be chainedtogether.",
	"Method": "CopyObjectRequest withSourceBucketName(String sourceBucketName){\r\n    setSourceBucketName(sourceBucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteNotebookInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceName() != null)\r\n        sb.append(\"NotebookInstanceName: \").append(getNotebookInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RemoveTagsFromResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getParameterGroups() != null)\r\n        sb.append(\"ParameterGroups: \").append(getParameterGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.setNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "void setNextContinuationToken(String nextContinuationToken){\r\n    this.nextContinuationToken = nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.AssociateResolverRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRuleId() != null)\r\n        sb.append(\"ResolverRuleId: \").append(getResolverRuleId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVPCId() != null)\r\n        sb.append(\"VPCId: \").append(getVPCId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.ServiceUtils.join",
	"Comment": "returns a new string created by joining each of the strings in thespecified list together, with a comma between them.",
	"Method": "String join(List<String> strings){\r\n    StringBuilder result = new StringBuilder();\r\n    boolean first = true;\r\n    for (String s : strings) {\r\n        if (!first)\r\n            result.append(\", \");\r\n        result.append(s);\r\n        first = false;\r\n    }\r\n    return result.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeClusterSecurityGroupsAsync",
	"Comment": "simplified method form for invoking the describeclustersecuritygroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync(DescribeClusterSecurityGroupsRequest request,java.util.concurrent.Future<DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync,DescribeClusterSecurityGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClusterSecurityGroupsRequest, DescribeClusterSecurityGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync,java.util.concurrent.Future<DescribeClusterSecurityGroupsResult> describeClusterSecurityGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeClusterSecurityGroupsRequest, DescribeClusterSecurityGroupsResult> asyncHandler){\r\n    return describeClusterSecurityGroupsAsync(new DescribeClusterSecurityGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getOwner",
	"Comment": "returns details on the user who owns the associated multipartupload.",
	"Method": "Owner getOwner(){\r\n    return owner;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectRetentionRequest.setRequesterPays",
	"Comment": "used for downloading an amazon s3 object from a requester pays bucket. ifset the requester is charged for downloading the data from the bucket.if a bucket is enabled for requester pays, then any attempt to read anobject from it without requester pays enabled will result in a 403 errorand the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    withRequesterPays(isRequesterPays);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartPersonTrackingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.getPrefix",
	"Comment": "gets the prefix parameter originally used to request this object listing, ornull if no prefix was specified.all objects and common prefixes includedin this object listing start with the specified prefix.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getEncodingType",
	"Comment": "gets the encoding type used by amazon s3 to encode object key names inthe xml response. if you specify encodingtype requestparameter, amazon s3 includes this element in the response, and returnsencoded key name values in the key element.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Image.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBytes() != null)\r\n        sb.append(\"Bytes: \").append(getBytes()).append(\",\");\r\n    if (getS3Object() != null)\r\n        sb.append(\"S3Object: \").append(getS3Object());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.QuietTime.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnd() != null)\r\n        sb.append(\"End: \").append(getEnd()).append(\",\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.Event.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getDate() != null)\r\n        sb.append(\"Date: \").append(getDate()).append(\",\");\r\n    if (getSourceArn() != null)\r\n        sb.append(\"SourceArn: \").append(getSourceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.iterable.S3Objects.inBucket",
	"Comment": "constructs an iterable that covers all the objects in an amazon s3bucket.",
	"Method": "S3Objects inBucket(AmazonS3 s3,String bucketName){\r\n    return new S3Objects(s3, bucketName);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.MultipleFileDownloadImpl.getKeyPrefix",
	"Comment": "returns the key prefix of the virtual directory being downloaded.",
	"Method": "String getKeyPrefix(){\r\n    return keyPrefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateDeploymentJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getDeploymentApplicationConfigs() != null)\r\n        sb.append(\"DeploymentApplicationConfigs: \").append(getDeploymentApplicationConfigs()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getDeploymentConfig() != null)\r\n        sb.append(\"DeploymentConfig: \").append(getDeploymentConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withObjectMetadata",
	"Comment": "sets the additional information about the new object being created, suchas content type, content encoding, user metadata, etc.returns this updated initiatemultipartuploadrequest object so thatadditional method calls can be chained together.",
	"Method": "InitiateMultipartUploadRequest withObjectMetadata(ObjectMetadata objectMetadata){\r\n    setObjectMetadata(objectMetadata);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteQueryLoggingConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBClusterEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterEndpointIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointIdentifier: \").append(getDBClusterEndpointIdentifier()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterEndpointResourceIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointResourceIdentifier: \").append(getDBClusterEndpointResourceIdentifier()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEndpointType() != null)\r\n        sb.append(\"EndpointType: \").append(getEndpointType()).append(\",\");\r\n    if (getCustomEndpointType() != null)\r\n        sb.append(\"CustomEndpointType: \").append(getCustomEndpointType()).append(\",\");\r\n    if (getStaticMembers() != null)\r\n        sb.append(\"StaticMembers: \").append(getStaticMembers()).append(\",\");\r\n    if (getExcludedMembers() != null)\r\n        sb.append(\"ExcludedMembers: \").append(getExcludedMembers()).append(\",\");\r\n    if (getDBClusterEndpointArn() != null)\r\n        sb.append(\"DBClusterEndpointArn: \").append(getDBClusterEndpointArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.purchaseReservedNodeOffering",
	"Comment": "allows you to purchase reserved nodes. amazon redshift offers a predefined set of reserved node offerings. youcan purchase one or more of the offerings. you can call the describereservednodeofferings api to obtainthe available reserved node offerings. you can call this api by providing a specific reserved node offering andthe number of nodes you want to reserve.for more information about reserved node offerings, go to purchasing reservednodes in the amazon redshift cluster management guide.",
	"Method": "ReservedNode purchaseReservedNodeOffering(PurchaseReservedNodeOfferingRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePurchaseReservedNodeOffering(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.Source.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Key() != null)\r\n        sb.append(\"S3Key: \").append(getS3Key()).append(\",\");\r\n    if (getEtag() != null)\r\n        sb.append(\"Etag: \").append(getEtag()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterParameterGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupName() != null)\r\n        sb.append(\"ParameterGroupName: \").append(getParameterGroupName()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetPublicAccessBlockResult.setPublicAccessBlockConfiguration",
	"Comment": "the public access block configuration currently in effect for this amazon s3 bucket.",
	"Method": "void setPublicAccessBlockConfiguration(PublicAccessBlockConfiguration publicAccessBlockConfiguration){\r\n    this.publicAccessBlockConfiguration = publicAccessBlockConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectModerationLabelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getMinConfidence() != null)\r\n        sb.append(\"MinConfidence: \").append(getMinConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.EC2SecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEC2SecurityGroupName() != null)\r\n        sb.append(\"EC2SecurityGroupName: \").append(getEC2SecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupId() != null)\r\n        sb.append(\"EC2SecurityGroupId: \").append(getEC2SecurityGroupId()).append(\",\");\r\n    if (getEC2SecurityGroupOwnerId() != null)\r\n        sb.append(\"EC2SecurityGroupOwnerId: \").append(getEC2SecurityGroupOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeSourceRegionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getSourceRegions() != null)\r\n        sb.append(\"SourceRegions: \").append(getSourceRegions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withUnmodifiedSinceConstraint",
	"Comment": "sets the optional unmodified constraint that restricts this requestto executing only if the source object has not beenmodified after the specified date. returns this object, enablingadditional method calls to be chained together.the unmodified constraint may be used with matching etagconstraints, but not with any other type of constraint.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "CopyObjectRequest withUnmodifiedSinceConstraint(Date date){\r\n    setUnmodifiedSinceConstraint(date);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.setMaxResults",
	"Comment": "sets the optional maxresults parameter indicating the maximum number of results toinclude in the response.",
	"Method": "void setMaxResults(Integer maxResults){\r\n    this.maxResults = maxResults;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListHostedZonesByNameResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZones() != null)\r\n        sb.append(\"HostedZones: \").append(getHostedZones()).append(\",\");\r\n    if (getDNSName() != null)\r\n        sb.append(\"DNSName: \").append(getDNSName()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getNextDNSName() != null)\r\n        sb.append(\"NextDNSName: \").append(getNextDNSName()).append(\",\");\r\n    if (getNextHostedZoneId() != null)\r\n        sb.append(\"NextHostedZoneId: \").append(getNextHostedZoneId()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.setHeader",
	"Comment": "for internal use only. sets a specific metadata header value. notintended to be called by external code.",
	"Method": "void setHeader(String key,Object value){\r\n    metadata.put(key, value);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getRestoreExpirationTime",
	"Comment": "returns the time at which an object that has been temporarily restoredfrom amazon glacier will expire, and will need to be restored again inorder to be accessed. returns null if this is not a temporary copy of anobject restored from glacier.",
	"Method": "Date getRestoreExpirationTime(){\r\n    return cloneDate(restoreExpirationTime);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.listHyperParameterTuningJobs",
	"Comment": "gets a list of hyperparametertuningjobsummary objects that describe the hyperparameter tuning jobslaunched in your account.",
	"Method": "ListHyperParameterTuningJobsResult listHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListHyperParameterTuningJobs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.AmazonQuickSightClient.getDashboardEmbedUrl",
	"Comment": "generates an embedded url and authorization code. before this can work properly, you need to configure thedashboards and user permissions first.",
	"Method": "GetDashboardEmbedUrlResult getDashboardEmbedUrl(GetDashboardEmbedUrlRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDashboardEmbedUrl(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.toObjectMetadata",
	"Comment": "returns the given metadata updated with this content crypto material.",
	"Method": "ObjectMetadata toObjectMetadata(ObjectMetadata metadata,CryptoMode mode,ObjectMetadata toObjectMetadata,ObjectMetadata metadata){\r\n    byte[] encryptedCEK = getEncryptedCEK();\r\n    metadata.addUserMetadata(Headers.CRYPTO_KEY_V2, Base64.encodeAsString(encryptedCEK));\r\n    byte[] iv = cipherLite.getIV();\r\n    metadata.addUserMetadata(Headers.CRYPTO_IV, Base64.encodeAsString(iv));\r\n    metadata.addUserMetadata(Headers.MATERIALS_DESCRIPTION, kekMaterialDescAsJson());\r\n    ContentCryptoScheme scheme = getContentCryptoScheme();\r\n    metadata.addUserMetadata(Headers.CRYPTO_CEK_ALGORITHM, scheme.getCipherAlgorithm());\r\n    int tagLen = scheme.getTagLengthInBits();\r\n    if (tagLen > 0)\r\n        metadata.addUserMetadata(Headers.CRYPTO_TAG_LENGTH, String.valueOf(tagLen));\r\n    String keyWrapAlgo = getKeyWrappingAlgorithm();\r\n    if (keyWrapAlgo != null)\r\n        metadata.addUserMetadata(Headers.CRYPTO_KEYWRAP_ALGORITHM, keyWrapAlgo);\r\n    return metadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.StorageClassAnalysisDataExport.withOutputSchemaVersion",
	"Comment": "sets the version of the output schema to use when exporting dataand returns this object for method chaining.",
	"Method": "StorageClassAnalysisDataExport withOutputSchemaVersion(StorageClassAnalysisSchemaVersion outputSchemaVersion,StorageClassAnalysisDataExport withOutputSchemaVersion,String outputSchemaVersion){\r\n    setOutputSchemaVersion(outputSchemaVersion);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateNotebookInstanceLifecycleConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceLifecycleConfigName() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigName: \").append(getNotebookInstanceLifecycleConfigName()).append(\",\");\r\n    if (getOnCreate() != null)\r\n        sb.append(\"OnCreate: \").append(getOnCreate()).append(\",\");\r\n    if (getOnStart() != null)\r\n        sb.append(\"OnStart: \").append(getOnStart());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeRobotApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getApplicationVersion() != null)\r\n        sb.append(\"ApplicationVersion: \").append(getApplicationVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setMaxKeys",
	"Comment": "sets the optional maxkeys parameter indicating the maximum number of keys toinclude in the response.",
	"Method": "void setMaxKeys(int maxKeys){\r\n    this.maxKeys = maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsConfiguration.getFilter",
	"Comment": "returns the filter used to describe a set of objects for analysis.",
	"Method": "AnalyticsFilter getFilter(){\r\n    return filter;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getMaxParts",
	"Comment": "returns the optional maximum number of parts to be returned in the partlisting.",
	"Method": "Integer getMaxParts(){\r\n    return maxParts;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHostedZoneCountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.AbstractTransfer.notifyStateChangeListeners",
	"Comment": "notifies all the registered state change listeners of the state update.",
	"Method": "void notifyStateChangeListeners(TransferState state){\r\n    for (TransferStateChangeListener listener : stateChangeListeners) {\r\n        listener.transferStateChanged(this, state);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.OptionSetting.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getApplyType() != null)\r\n        sb.append(\"ApplyType: \").append(getApplyType()).append(\",\");\r\n    if (getDataType() != null)\r\n        sb.append(\"DataType: \").append(getDataType()).append(\",\");\r\n    if (getAllowedValues() != null)\r\n        sb.append(\"AllowedValues: \").append(getAllowedValues()).append(\",\");\r\n    if (getIsModifiable() != null)\r\n        sb.append(\"IsModifiable: \").append(getIsModifiable()).append(\",\");\r\n    if (getIsCollection() != null)\r\n        sb.append(\"IsCollection: \").append(getIsCollection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupName() != null)\r\n        sb.append(\"ParameterGroupName: \").append(getParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.getKey",
	"Comment": "returns the key by which to store the new multipart upload, and hence,the eventual object created from the multipart upload.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedGetObjectRequest.getExtraMaterialDescription",
	"Comment": "returns the supplemental material description to be used for retrievingthe encryption materials.",
	"Method": "ExtraMaterialsDescription getExtraMaterialDescription(){\r\n    return supplemental;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeSimulationApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getSimulationSoftwareSuite() != null)\r\n        sb.append(\"SimulationSoftwareSuite: \").append(getSimulationSoftwareSuite()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getRenderingEngine() != null)\r\n        sb.append(\"RenderingEngine: \").append(getRenderingEngine()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.CreateResolverEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpoint() != null)\r\n        sb.append(\"ResolverEndpoint: \").append(getResolverEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeDBParameterGroupsAsync",
	"Comment": "simplified method form for invoking the describedbparametergroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBParameterGroupsResult> describeDBParameterGroupsAsync(DescribeDBParameterGroupsRequest request,java.util.concurrent.Future<DescribeDBParameterGroupsResult> describeDBParameterGroupsAsync,DescribeDBParameterGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBParameterGroupsRequest, DescribeDBParameterGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeDBParameterGroupsResult> describeDBParameterGroupsAsync,java.util.concurrent.Future<DescribeDBParameterGroupsResult> describeDBParameterGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBParameterGroupsRequest, DescribeDBParameterGroupsResult> asyncHandler){\r\n    return describeDBParameterGroupsAsync(new DescribeDBParameterGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.getMaxResults",
	"Comment": "gets the optional maxresults parameter indicating the maximum number of resultsto include in the response. amazon s3 might return fewer than this, butwill never return more. even if maxresults is not specified,amazon s3 willlimit the number of results in the response.",
	"Method": "Integer getMaxResults(){\r\n    return maxResults;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.ListGroupResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceIdentifiers() != null)\r\n        sb.append(\"ResourceIdentifiers: \").append(getResourceIdentifiers()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getQueryErrors() != null)\r\n        sb.append(\"QueryErrors: \").append(getQueryErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.modifySnapshotSchedule",
	"Comment": "modifies a snapshot schedule. any schedule associated with a cluster is modified asynchronously.",
	"Method": "ModifySnapshotScheduleResult modifySnapshotSchedule(ModifySnapshotScheduleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifySnapshotSchedule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListHyperParameterTuningJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHyperParameterTuningJobSummaries() != null)\r\n        sb.append(\"HyperParameterTuningJobSummaries: \").append(getHyperParameterTuningJobSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DedicatedIp.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIp() != null)\r\n        sb.append(\"Ip: \").append(getIp()).append(\",\");\r\n    if (getWarmupStatus() != null)\r\n        sb.append(\"WarmupStatus: \").append(getWarmupStatus()).append(\",\");\r\n    if (getWarmupPercentage() != null)\r\n        sb.append(\"WarmupPercentage: \").append(getWarmupPercentage()).append(\",\");\r\n    if (getPoolName() != null)\r\n        sb.append(\"PoolName: \").append(getPoolName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBClusterMember.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getIsClusterWriter() != null)\r\n        sb.append(\"IsClusterWriter: \").append(getIsClusterWriter()).append(\",\");\r\n    if (getDBClusterParameterGroupStatus() != null)\r\n        sb.append(\"DBClusterParameterGroupStatus: \").append(getDBClusterParameterGroupStatus()).append(\",\");\r\n    if (getPromotionTier() != null)\r\n        sb.append(\"PromotionTier: \").append(getPromotionTier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateVoiceChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVoiceChannelResponse() != null)\r\n        sb.append(\"VoiceChannelResponse: \").append(getVoiceChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeOrderableClusterOptionsAsync",
	"Comment": "simplified method form for invoking the describeorderableclusteroptions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync(DescribeOrderableClusterOptionsRequest request,java.util.concurrent.Future<DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync,DescribeOrderableClusterOptionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeOrderableClusterOptionsRequest, DescribeOrderableClusterOptionsResult> asyncHandler,java.util.concurrent.Future<DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync,java.util.concurrent.Future<DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeOrderableClusterOptionsRequest, DescribeOrderableClusterOptionsResult> asyncHandler){\r\n    return describeOrderableClusterOptionsAsync(new DescribeOrderableClusterOptionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketMetricsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket from which the metrics configuration is deleted.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectLockRule.setDefaultRetention",
	"Comment": "the default retention period that you want to apply to new objects placed in the specified bucket.",
	"Method": "void setDefaultRetention(DefaultRetention defaultRetention){\r\n    withDefaultRetention(defaultRetention);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.CreateConfigurationSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getTrackingOptions() != null)\r\n        sb.append(\"TrackingOptions: \").append(getTrackingOptions()).append(\",\");\r\n    if (getDeliveryOptions() != null)\r\n        sb.append(\"DeliveryOptions: \").append(getDeliveryOptions()).append(\",\");\r\n    if (getReputationOptions() != null)\r\n        sb.append(\"ReputationOptions: \").append(getReputationOptions()).append(\",\");\r\n    if (getSendingOptions() != null)\r\n        sb.append(\"SendingOptions: \").append(getSendingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.getCryptoProvider",
	"Comment": "returns the crypto provider whose encryption implementation will be usedto encrypt and decrypt data.",
	"Method": "Provider getCryptoProvider(){\r\n    return this.cryptoProvider;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.getExposedHeaders",
	"Comment": "returns expose headers of this rule and returns a reference to this object formethod chaining.",
	"Method": "List<String> getExposedHeaders(){\r\n    return exposedHeaders;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.CopyResult.setSourceKey",
	"Comment": "sets the source bucket key under which the source object to be copied isstored.",
	"Method": "void setSourceKey(String sourceKey){\r\n    this.sourceKey = sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadObjectRequest.withExecutorService",
	"Comment": "configure a custom executor service for concurrent uploads.",
	"Method": "UploadObjectRequest withExecutorService(ExecutorService executorService){\r\n    this.executorService = executorService;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ResizeInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResizeType() != null)\r\n        sb.append(\"ResizeType: \").append(getResizeType()).append(\",\");\r\n    if (getAllowCancelResize() != null)\r\n        sb.append(\"AllowCancelResize: \").append(getAllowCancelResize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DisableLoggingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setBucketName",
	"Comment": "for internal use only. sets the name of the amazon s3bucket containing the versions listed in this s3versionlisting.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetDedicatedIpRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIp() != null)\r\n        sb.append(\"Ip: \").append(getIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetCheckerIpRangesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.CopyCallable.copyInOneChunk",
	"Comment": "performs the copy of the amazon s3 object from source bucket todestination bucket. the amazon s3 object is copied to destination in onesingle request.",
	"Method": "CopyResult copyInOneChunk(){\r\n    CopyObjectResult copyObjectResult = s3.copyObject(copyObjectRequest);\r\n    CopyResult copyResult = new CopyResult();\r\n    copyResult.setSourceBucketName(copyObjectRequest.getSourceBucketName());\r\n    copyResult.setSourceKey(copyObjectRequest.getSourceKey());\r\n    copyResult.setDestinationBucketName(copyObjectRequest.getDestinationBucketName());\r\n    copyResult.setDestinationKey(copyObjectRequest.getDestinationKey());\r\n    copyResult.setETag(copyObjectResult.getETag());\r\n    copyResult.setVersionId(copyObjectResult.getVersionId());\r\n    return copyResult;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.HealthCheckConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIPAddress() != null)\r\n        sb.append(\"IPAddress: \").append(getIPAddress()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getResourcePath() != null)\r\n        sb.append(\"ResourcePath: \").append(getResourcePath()).append(\",\");\r\n    if (getFullyQualifiedDomainName() != null)\r\n        sb.append(\"FullyQualifiedDomainName: \").append(getFullyQualifiedDomainName()).append(\",\");\r\n    if (getSearchString() != null)\r\n        sb.append(\"SearchString: \").append(getSearchString()).append(\",\");\r\n    if (getRequestInterval() != null)\r\n        sb.append(\"RequestInterval: \").append(getRequestInterval()).append(\",\");\r\n    if (getFailureThreshold() != null)\r\n        sb.append(\"FailureThreshold: \").append(getFailureThreshold()).append(\",\");\r\n    if (getMeasureLatency() != null)\r\n        sb.append(\"MeasureLatency: \").append(getMeasureLatency()).append(\",\");\r\n    if (getInverted() != null)\r\n        sb.append(\"Inverted: \").append(getInverted()).append(\",\");\r\n    if (getDisabled() != null)\r\n        sb.append(\"Disabled: \").append(getDisabled()).append(\",\");\r\n    if (getHealthThreshold() != null)\r\n        sb.append(\"HealthThreshold: \").append(getHealthThreshold()).append(\",\");\r\n    if (getChildHealthChecks() != null)\r\n        sb.append(\"ChildHealthChecks: \").append(getChildHealthChecks()).append(\",\");\r\n    if (getEnableSNI() != null)\r\n        sb.append(\"EnableSNI: \").append(getEnableSNI()).append(\",\");\r\n    if (getRegions() != null)\r\n        sb.append(\"Regions: \").append(getRegions()).append(\",\");\r\n    if (getAlarmIdentifier() != null)\r\n        sb.append(\"AlarmIdentifier: \").append(getAlarmIdentifier()).append(\",\");\r\n    if (getInsufficientDataHealthStatus() != null)\r\n        sb.append(\"InsufficientDataHealthStatus: \").append(getInsufficientDataHealthStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.model.ResultFrame.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecords() != null)\r\n        sb.append(\"Records: \").append(getRecords()).append(\",\");\r\n    if (getResultSetMetadata() != null)\r\n        sb.append(\"ResultSetMetadata: \").append(getResultSetMetadata());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateTrafficPolicyInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTTL() != null)\r\n        sb.append(\"TTL: \").append(getTTL()).append(\",\");\r\n    if (getTrafficPolicyId() != null)\r\n        sb.append(\"TrafficPolicyId: \").append(getTrafficPolicyId()).append(\",\");\r\n    if (getTrafficPolicyVersion() != null)\r\n        sb.append(\"TrafficPolicyVersion: \").append(getTrafficPolicyVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSearchedFaceId() != null)\r\n        sb.append(\"SearchedFaceId: \").append(getSearchedFaceId()).append(\",\");\r\n    if (getFaceMatches() != null)\r\n        sb.append(\"FaceMatches: \").append(getFaceMatches()).append(\",\");\r\n    if (getFaceModelVersion() != null)\r\n        sb.append(\"FaceModelVersion: \").append(getFaceModelVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DomainMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFQDN() != null)\r\n        sb.append(\"FQDN: \").append(getFQDN()).append(\",\");\r\n    if (getIAMRoleName() != null)\r\n        sb.append(\"IAMRoleName: \").append(getIAMRoleName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.deleteClusterSecurityGroup",
	"Comment": "deletes an amazon redshift security group.you cannot delete a security group that is associated with any clusters. you cannot delete the default securitygroup.for information about managing security groups, go to amazon redshift clustersecurity groups in the amazon redshift cluster management guide.",
	"Method": "DeleteClusterSecurityGroupResult deleteClusterSecurityGroup(DeleteClusterSecurityGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteClusterSecurityGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryConfiguration.getOptionalFields",
	"Comment": "returns the optional fields that are included in the inventory results.",
	"Method": "List<String> getOptionalFields(){\r\n    return optionalFields;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetDedicatedIpResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDedicatedIp() != null)\r\n        sb.append(\"DedicatedIp: \").append(getDedicatedIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setUploadId",
	"Comment": "sets the upload id value specified in the original request used toidentify which multipart upload contains the parts to list.",
	"Method": "void setUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getMaxKeys",
	"Comment": "gets the optional maxkeys parameter indicating the maximum number of keys toinclude in the response. amazon s3 might return fewer keys than specified, but willnever return more. even if the optional parameter is not specified,amazon s3 will limit the number of results in the response.",
	"Method": "Integer getMaxKeys(){\r\n    return maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.setId",
	"Comment": "sets the id of this rule. rules must be less than 255 alphanumericcharacters, and must be unique for a bucket. if you do not assign anid, one will be generated.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.setKey",
	"Comment": "sets the key under which the object whose acl to be retrieved is stored.",
	"Method": "void setKey(String key){\r\n    s3ObjectIdBuilder.setKey(key);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getInputStream",
	"Comment": "returns the stream containing the data to upload for the new part.",
	"Method": "InputStream getInputStream(){\r\n    return inputStream;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3Object.close",
	"Comment": "releases any underlying system resources. if the resourcesare already released then invoking this method has no effect.",
	"Method": "void close(){\r\n    InputStream is = getObjectContent();\r\n    if (is != null)\r\n        is.close();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.revokeClusterSecurityGroupIngress",
	"Comment": "revokes an ingress rule in an amazon redshift security group for a previously authorized ip range or amazon ec2security group. to add an ingress rule, see authorizeclustersecuritygroupingress. for information aboutmanaging security groups, go to amazon redshift clustersecurity groups in the amazon redshift cluster management guide.",
	"Method": "ClusterSecurityGroup revokeClusterSecurityGroupIngress(RevokeClusterSecurityGroupIngressRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRevokeClusterSecurityGroupIngress(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectLabelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabels() != null)\r\n        sb.append(\"Labels: \").append(getLabels()).append(\",\");\r\n    if (getOrientationCorrection() != null)\r\n        sb.append(\"OrientationCorrection: \").append(getOrientationCorrection()).append(\",\");\r\n    if (getLabelModelVersion() != null)\r\n        sb.append(\"LabelModelVersion: \").append(getLabelModelVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.getHostedZone",
	"Comment": "gets information about a specified hosted zone including the four name servers assigned to the hosted zone.",
	"Method": "GetHostedZoneResult getHostedZone(GetHostedZoneRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetHostedZone(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.cek",
	"Comment": "returns the content encrypting key unwrapped or decrypted.note if kmsis used for key protection, a remote call will be made to kms to decryptthe ciphertext blob.",
	"Method": "SecretKey cek(byte[] cekSecured,String keyWrapAlgo,EncryptionMaterials materials,Provider securityProvider,ContentCryptoScheme contentCryptoScheme,AWSKMS kms){\r\n    if (isKMSKeyWrapped(keyWrapAlgo))\r\n        return cekByKMS(cekSecured, keyWrapAlgo, materials, contentCryptoScheme, kms);\r\n    Key kek;\r\n    if (materials.getKeyPair() != null) {\r\n        kek = materials.getKeyPair().getPrivate();\r\n        if (kek == null) {\r\n            throw new SdkClientException(\"Key encrypting key not available\");\r\n        }\r\n    } else {\r\n        kek = materials.getSymmetricKey();\r\n        if (kek == null) {\r\n            throw new SdkClientException(\"Key encrypting key not available\");\r\n        }\r\n    }\r\n    try {\r\n        if (keyWrapAlgo != null) {\r\n            Cipher cipher = securityProvider == null ? Cipher.getInstance(keyWrapAlgo) : Cipher.getInstance(keyWrapAlgo, securityProvider);\r\n            cipher.init(Cipher.UNWRAP_MODE, kek);\r\n            return (SecretKey) cipher.unwrap(cekSecured, keyWrapAlgo, Cipher.SECRET_KEY);\r\n        }\r\n        Cipher cipher;\r\n        if (securityProvider != null) {\r\n            cipher = Cipher.getInstance(kek.getAlgorithm(), securityProvider);\r\n        } else {\r\n            cipher = Cipher.getInstance(kek.getAlgorithm());\r\n        }\r\n        cipher.init(Cipher.DECRYPT_MODE, kek);\r\n        byte[] decryptedSymmetricKeyBytes = cipher.doFinal(cekSecured);\r\n        return new SecretKeySpec(decryptedSymmetricKeyBytes, JceEncryptionConstants.SYMMETRIC_KEY_ALGORITHM);\r\n    } catch (Exception e) {\r\n        throw failure(e, \"Unable to decrypt symmetric key from object metadata\");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutInstructionFileRequest.getMaterialsDescription",
	"Comment": "returns the material description for the new instruction file.",
	"Method": "Map<String, String> getMaterialsDescription(){\r\n    return matDesc == null ? encryptionMaterials.getMaterialsDescription() : matDesc;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.Snapshot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getSnapshotCreateTime() != null)\r\n        sb.append(\"SnapshotCreateTime: \").append(getSnapshotCreateTime()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getClusterCreateTime() != null)\r\n        sb.append(\"ClusterCreateTime: \").append(getClusterCreateTime()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getClusterVersion() != null)\r\n        sb.append(\"ClusterVersion: \").append(getClusterVersion()).append(\",\");\r\n    if (getSnapshotType() != null)\r\n        sb.append(\"SnapshotType: \").append(getSnapshotType()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getNumberOfNodes() != null)\r\n        sb.append(\"NumberOfNodes: \").append(getNumberOfNodes()).append(\",\");\r\n    if (getDBName() != null)\r\n        sb.append(\"DBName: \").append(getDBName()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getEncryptedWithHSM() != null)\r\n        sb.append(\"EncryptedWithHSM: \").append(getEncryptedWithHSM()).append(\",\");\r\n    if (getAccountsWithRestoreAccess() != null)\r\n        sb.append(\"AccountsWithRestoreAccess: \").append(getAccountsWithRestoreAccess()).append(\",\");\r\n    if (getOwnerAccount() != null)\r\n        sb.append(\"OwnerAccount: \").append(getOwnerAccount()).append(\",\");\r\n    if (getTotalBackupSizeInMegaBytes() != null)\r\n        sb.append(\"TotalBackupSizeInMegaBytes: \").append(getTotalBackupSizeInMegaBytes()).append(\",\");\r\n    if (getActualIncrementalBackupSizeInMegaBytes() != null)\r\n        sb.append(\"ActualIncrementalBackupSizeInMegaBytes: \").append(getActualIncrementalBackupSizeInMegaBytes()).append(\",\");\r\n    if (getBackupProgressInMegaBytes() != null)\r\n        sb.append(\"BackupProgressInMegaBytes: \").append(getBackupProgressInMegaBytes()).append(\",\");\r\n    if (getCurrentBackupRateInMegaBytesPerSecond() != null)\r\n        sb.append(\"CurrentBackupRateInMegaBytesPerSecond: \").append(getCurrentBackupRateInMegaBytesPerSecond()).append(\",\");\r\n    if (getEstimatedSecondsToCompletion() != null)\r\n        sb.append(\"EstimatedSecondsToCompletion: \").append(getEstimatedSecondsToCompletion()).append(\",\");\r\n    if (getElapsedTimeInSeconds() != null)\r\n        sb.append(\"ElapsedTimeInSeconds: \").append(getElapsedTimeInSeconds()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getRestorableNodeTypes() != null)\r\n        sb.append(\"RestorableNodeTypes: \").append(getRestorableNodeTypes()).append(\",\");\r\n    if (getEnhancedVpcRouting() != null)\r\n        sb.append(\"EnhancedVpcRouting: \").append(getEnhancedVpcRouting()).append(\",\");\r\n    if (getMaintenanceTrackName() != null)\r\n        sb.append(\"MaintenanceTrackName: \").append(getMaintenanceTrackName()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod()).append(\",\");\r\n    if (getManualSnapshotRemainingDays() != null)\r\n        sb.append(\"ManualSnapshotRemainingDays: \").append(getManualSnapshotRemainingDays()).append(\",\");\r\n    if (getSnapshotRetentionStartTime() != null)\r\n        sb.append(\"SnapshotRetentionStartTime: \").append(getSnapshotRetentionStartTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.listRobotApplications",
	"Comment": "returns a list of robot application. you can optionally provide filters to retrieve specific robot applications.",
	"Method": "ListRobotApplicationsResult listRobotApplications(ListRobotApplicationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListRobotApplications(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateReusableDelegationSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDelegationSet() != null)\r\n        sb.append(\"DelegationSet: \").append(getDelegationSet()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.UntagRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getKeys() != null)\r\n        sb.append(\"Keys: \").append(getKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GlacierJobParameters.withTier",
	"Comment": "sets glacier retrieval tier at which the restore will be processed.",
	"Method": "GlacierJobParameters withTier(String tier,GlacierJobParameters withTier,Tier tier){\r\n    setTier(tier);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.UpdateDomainContactRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getAdminContact() != null)\r\n        sb.append(\"AdminContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRegistrantContact() != null)\r\n        sb.append(\"RegistrantContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getTechContact() != null)\r\n        sb.append(\"TechContact: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.DeleteGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.disassociateResolverEndpointIpAddress",
	"Comment": "removes ip addresses from an inbound or an outbound resolver endpoint. if you want to remove more than one ipaddress, submit one disassociateresolverendpointipaddress request for each ip address.to add an ip address to an endpoint, see associateresolverendpointipaddress.",
	"Method": "DisassociateResolverEndpointIpAddressResult disassociateResolverEndpointIpAddress(DisassociateResolverEndpointIpAddressRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateResolverEndpointIpAddress(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonpinpointemail using the current builder configuration.",
	"Method": "AmazonPinpointEmail build(AwsSyncClientParams params){\r\n    return new AmazonPinpointEmailClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClient.disassociateResourceShare",
	"Comment": "disassociates the specified principals or resources from the specified resource share.",
	"Method": "DisassociateResourceShareResult disassociateResourceShare(DisassociateResourceShareRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateResourceShare(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket containing the object todelete.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsAsyncClient.listOperationsAsync",
	"Comment": "simplified method form for invoking the listoperations operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListOperationsResult> listOperationsAsync(ListOperationsRequest request,java.util.concurrent.Future<ListOperationsResult> listOperationsAsync,ListOperationsRequest request,com.amazonaws.handlers.AsyncHandler<ListOperationsRequest, ListOperationsResult> asyncHandler,java.util.concurrent.Future<ListOperationsResult> listOperationsAsync,java.util.concurrent.Future<ListOperationsResult> listOperationsAsync,com.amazonaws.handlers.AsyncHandler<ListOperationsRequest, ListOperationsResult> asyncHandler){\r\n    return listOperationsAsync(new ListOperationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobDataAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContentClassifiers() != null)\r\n        sb.append(\"ContentClassifiers: \").append(getContentClassifiers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.getRoleARN",
	"Comment": "returns the iam role associated with this replication configuration.",
	"Method": "String getRoleARN(){\r\n    return roleARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ParameterRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIntegerParameterRangeSpecification() != null)\r\n        sb.append(\"IntegerParameterRangeSpecification: \").append(getIntegerParameterRangeSpecification()).append(\",\");\r\n    if (getContinuousParameterRangeSpecification() != null)\r\n        sb.append(\"ContinuousParameterRangeSpecification: \").append(getContinuousParameterRangeSpecification()).append(\",\");\r\n    if (getCategoricalParameterRangeSpecification() != null)\r\n        sb.append(\"CategoricalParameterRangeSpecification: \").append(getCategoricalParameterRangeSpecification());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteClusterSubnetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBClusterEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterEndpointIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointIdentifier: \").append(getDBClusterEndpointIdentifier()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterEndpointResourceIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointResourceIdentifier: \").append(getDBClusterEndpointResourceIdentifier()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEndpointType() != null)\r\n        sb.append(\"EndpointType: \").append(getEndpointType()).append(\",\");\r\n    if (getCustomEndpointType() != null)\r\n        sb.append(\"CustomEndpointType: \").append(getCustomEndpointType()).append(\",\");\r\n    if (getStaticMembers() != null)\r\n        sb.append(\"StaticMembers: \").append(getStaticMembers()).append(\",\");\r\n    if (getExcludedMembers() != null)\r\n        sb.append(\"ExcludedMembers: \").append(getExcludedMembers()).append(\",\");\r\n    if (getDBClusterEndpointArn() != null)\r\n        sb.append(\"DBClusterEndpointArn: \").append(getDBClusterEndpointArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketPolicyRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.ListUsersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserList() != null)\r\n        sb.append(\"UserList: \").append(getUserList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAccelerateConfigurationRequest.setAccelerateConfiguration",
	"Comment": "sets the new accelerate configuration for the specified bucket.",
	"Method": "void setAccelerateConfiguration(BucketAccelerateConfiguration accelerateConfiguration){\r\n    this.accelerateConfiguration = accelerateConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutConfigurationSetTrackingOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getCustomRedirectDomain() != null)\r\n        sb.append(\"CustomRedirectDomain: \").append(getCustomRedirectDomain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.putConfigurationSetDeliveryOptions",
	"Comment": "associate a configuration set with a dedicated ip pool. you can use dedicated ip pools to create groups ofdedicated ip addresses for sending specific types of email.",
	"Method": "PutConfigurationSetDeliveryOptionsResult putConfigurationSetDeliveryOptions(PutConfigurationSetDeliveryOptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutConfigurationSetDeliveryOptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListTransformJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransformJobSummaries() != null)\r\n        sb.append(\"TransformJobSummaries: \").append(getTransformJobSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.HyperParameterSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getRange() != null)\r\n        sb.append(\"Range: \").append(getRange()).append(\",\");\r\n    if (getIsTunable() != null)\r\n        sb.append(\"IsTunable: \").append(getIsTunable()).append(\",\");\r\n    if (getIsRequired() != null)\r\n        sb.append(\"IsRequired: \").append(getIsRequired()).append(\",\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setBucketName",
	"Comment": "sets the name of the bucket in which to create the new multipart upload,and hence, the eventual object created from the multipart upload.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.NotificationChannel.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSNSTopicArn() != null)\r\n        sb.append(\"SNSTopicArn: \").append(getSNSTopicArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.CloudWatchDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDimensionConfigurations() != null)\r\n        sb.append(\"DimensionConfigurations: \").append(getDimensionConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.CopyResult.getVersionId",
	"Comment": "returns the version id of the new object. the version id is only set ifversioning has been enabled for the bucket.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GeoLocationDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContinentCode() != null)\r\n        sb.append(\"ContinentCode: \").append(getContinentCode()).append(\",\");\r\n    if (getContinentName() != null)\r\n        sb.append(\"ContinentName: \").append(getContinentName()).append(\",\");\r\n    if (getCountryCode() != null)\r\n        sb.append(\"CountryCode: \").append(getCountryCode()).append(\",\");\r\n    if (getCountryName() != null)\r\n        sb.append(\"CountryName: \").append(getCountryName()).append(\",\");\r\n    if (getSubdivisionCode() != null)\r\n        sb.append(\"SubdivisionCode: \").append(getSubdivisionCode()).append(\",\");\r\n    if (getSubdivisionName() != null)\r\n        sb.append(\"SubdivisionName: \").append(getSubdivisionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.ListDedicatedIpPoolsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.withFetchOwner",
	"Comment": "sets the optional fetch owner flag.the owner field is not present in listobjectsv2results by default.if this flag is set to true the owner field will be included.",
	"Method": "ListObjectsV2Request withFetchOwner(boolean fetchOwner){\r\n    setFetchOwner(fetchOwner);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBInstanceReadReplicaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getSourceDBInstanceIdentifier() != null)\r\n        sb.append(\"SourceDBInstanceIdentifier: \").append(getSourceDBInstanceIdentifier()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getCopyTagsToSnapshot() != null)\r\n        sb.append(\"CopyTagsToSnapshot: \").append(getCopyTagsToSnapshot()).append(\",\");\r\n    if (getMonitoringInterval() != null)\r\n        sb.append(\"MonitoringInterval: \").append(getMonitoringInterval()).append(\",\");\r\n    if (getMonitoringRoleArn() != null)\r\n        sb.append(\"MonitoringRoleArn: \").append(getMonitoringRoleArn()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getPreSignedUrl() != null)\r\n        sb.append(\"PreSignedUrl: \").append(getPreSignedUrl()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getEnablePerformanceInsights() != null)\r\n        sb.append(\"EnablePerformanceInsights: \").append(getEnablePerformanceInsights()).append(\",\");\r\n    if (getPerformanceInsightsKMSKeyId() != null)\r\n        sb.append(\"PerformanceInsightsKMSKeyId: \").append(getPerformanceInsightsKMSKeyId()).append(\",\");\r\n    if (getPerformanceInsightsRetentionPeriod() != null)\r\n        sb.append(\"PerformanceInsightsRetentionPeriod: \").append(getPerformanceInsightsRetentionPeriod()).append(\",\");\r\n    if (getEnableCloudwatchLogsExports() != null)\r\n        sb.append(\"EnableCloudwatchLogsExports: \").append(getEnableCloudwatchLogsExports()).append(\",\");\r\n    if (getProcessorFeatures() != null)\r\n        sb.append(\"ProcessorFeatures: \").append(getProcessorFeatures()).append(\",\");\r\n    if (getUseDefaultProcessorFeatures() != null)\r\n        sb.append(\"UseDefaultProcessorFeatures: \").append(getUseDefaultProcessorFeatures()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setDestinationBucketName",
	"Comment": "sets the destination bucket name which will contain the new,copied object.",
	"Method": "void setDestinationBucketName(String destinationBucketName){\r\n    this.destinationBucketName = destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.ListUsersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateTrainingJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJobArn() != null)\r\n        sb.append(\"TrainingJobArn: \").append(getTrainingJobArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getResult() != null)\r\n        sb.append(\"Result: \").append(getResult());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.GetResolverRulePolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRulePolicy() != null)\r\n        sb.append(\"ResolverRulePolicy: \").append(getResolverRulePolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListTrainingJobsForHyperParameterTuningJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHyperParameterTuningJobName() != null)\r\n        sb.append(\"HyperParameterTuningJobName: \").append(getHyperParameterTuningJobName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getStatusEquals() != null)\r\n        sb.append(\"StatusEquals: \").append(getStatusEquals()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.doCreate",
	"Comment": "returns a new instance of contentcryptomaterial for thegiven input parameters by using the specified content crypto scheme, ands3 crypto scheme.note network calls are involved if the cek is to be protected by kms.",
	"Method": "ContentCryptoMaterial doCreate(SecretKey cek,byte[] iv,EncryptionMaterials kekMaterials,ContentCryptoScheme contentCryptoScheme,S3CryptoScheme targetS3CryptoScheme,CryptoConfiguration config,AWSKMS kms,AmazonWebServiceRequest req){\r\n    SecuredCEK cekSecured = secureCEK(cek, kekMaterials, targetS3CryptoScheme.getKeyWrapScheme(), config, kms, req);\r\n    return wrap(cek, iv, contentCryptoScheme, config.getCryptoProvider(), config.getAlwaysUseCryptoProvider(), cekSecured);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.Endpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setSourceKey",
	"Comment": "sets the source bucket key under which the source object to becopied is stored.",
	"Method": "void setSourceKey(String sourceKey){\r\n    this.sourceKey = sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose inventory configurations are to be listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getKey",
	"Comment": "returns the key of the associated multipart upload whose parts are beinglisted.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getSourceSegments() != null)\r\n        sb.append(\"SourceSegments: \").append(getSourceSegments()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.setKey",
	"Comment": "sets the key under which the multipart upload to complete is stored.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.FailureInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatusCode() != null)\r\n        sb.append(\"StatusCode: \").append(getStatusCode()).append(\",\");\r\n    if (getErrorCode() != null)\r\n        sb.append(\"ErrorCode: \").append(getErrorCode()).append(\",\");\r\n    if (getErrorMessage() != null)\r\n        sb.append(\"ErrorMessage: \").append(getErrorMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.RepeatableInputStream.reset",
	"Comment": "resets the input stream to the beginning by pointing the buffer offset tothe beginning of the available data buffer.",
	"Method": "void reset(){\r\n    abortIfNeeded();\r\n    if (bytesReadPastMark <= bufferSize) {\r\n        if (log.isDebugEnabled()) {\r\n            log.debug(\"Reset after reading \" + bytesReadPastMark + \" bytes.\");\r\n        }\r\n        bufferOffset = 0;\r\n    } else {\r\n        throw new IOException(\"Input stream cannot be reset as \" + this.bytesReadPastMark + \" bytes have been written, exceeding the available buffer size of \" + this.bufferSize);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptionMaterials.getAccessor",
	"Comment": "returns null since the encryptionmaterials base class does not have a materials accessor.subclasses may override this method.",
	"Method": "EncryptionMaterialsAccessor getAccessor(){\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket whoseinventory configurations are to be listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonpinpointemailasync using the current builder configuration.",
	"Method": "AmazonPinpointEmailAsync build(AwsAsyncClientParams params){\r\n    return new AmazonPinpointEmailAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.listTagsForResources",
	"Comment": "lists tags for up to 10 health checks or hosted zones.for information about using tags for cost allocation, see using cost allocationtags in the aws billing and cost management user guide.",
	"Method": "ListTagsForResourcesResult listTagsForResources(ListTagsForResourcesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTagsForResources(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setKey",
	"Comment": "sets the key value specified in the original request used to identifywhich multipart upload contains the parts to list.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeOptionGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getEngineName() != null)\r\n        sb.append(\"EngineName: \").append(getEngineName()).append(\",\");\r\n    if (getMajorEngineVersion() != null)\r\n        sb.append(\"MajorEngineVersion: \").append(getMajorEngineVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.DeleteResolverEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpointId() != null)\r\n        sb.append(\"ResolverEndpointId: \").append(getResolverEndpointId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeClusterParameterGroups",
	"Comment": "returns a list of amazon redshift parameter groups, including parameter groups you created and the defaultparameter group. for each parameter group, the response includes the parameter group name, description, andparameter group family name. you can optionally specify a name to retrieve the description of a specificparameter group.for more information about parameters and parameter groups, go to amazon redshiftparameter groups in the amazon redshift cluster management guide.if you specify both tag keys and tag values in the same request, amazon redshift returns all parameter groupsthat match any combination of the specified keys and values. for example, if you have owner andenvironment for tag keys, and admin and test for tag values, all parametergroups that have any combination of those values are returned.if both tag keys and values are omitted from the request, parameter groups are returned regardless of whetherthey have tag keys or values associated with them.",
	"Method": "DescribeClusterParameterGroupsResult describeClusterParameterGroups(DescribeClusterParameterGroupsRequest request,DescribeClusterParameterGroupsResult describeClusterParameterGroups){\r\n    return describeClusterParameterGroups(new DescribeClusterParameterGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutDedicatedIpInPoolRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIp() != null)\r\n        sb.append(\"Ip: \").append(getIp()).append(\",\");\r\n    if (getDestinationPoolName() != null)\r\n        sb.append(\"DestinationPoolName: \").append(getDestinationPoolName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.AttributeValueTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeValue() != null)\r\n        sb.append(\"AttributeValue: \").append(getAttributeValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.DownloadImpl.updatePersistableTransfer",
	"Comment": "only for internal use.for parallel downloads, updates the persistabletransfer each time apart is successfully merged into download file.then notify the listeners that new persistabletransfer is available.",
	"Method": "void updatePersistableTransfer(Integer lastFullyDownloadedPartNumber){\r\n    synchronized (this) {\r\n        this.lastFullyDownloadedPartNumber = lastFullyDownloadedPartNumber;\r\n    }\r\n    persistableDownload = captureDownloadState(getObjectRequest, file);\r\n    S3ProgressPublisher.publishTransferPersistable(progressListenerChain, persistableDownload);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ModelPackageValidationProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProfileName() != null)\r\n        sb.append(\"ProfileName: \").append(getProfileName()).append(\",\");\r\n    if (getTransformJobDefinition() != null)\r\n        sb.append(\"TransformJobDefinition: \").append(getTransformJobDefinition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutEmailIdentityFeedbackAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmailIdentity() != null)\r\n        sb.append(\"EmailIdentity: \").append(getEmailIdentity()).append(\",\");\r\n    if (getEmailForwardingEnabled() != null)\r\n        sb.append(\"EmailForwardingEnabled: \").append(getEmailForwardingEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.JSONOutput.withRecordDelimiter",
	"Comment": "the value used to separate individual records in the output.",
	"Method": "JSONOutput withRecordDelimiter(String recordDelimiter,JSONOutput withRecordDelimiter,Character recordDelimiter){\r\n    setRecordDelimiter(recordDelimiter);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeOrderableClusterOptionsAsync",
	"Comment": "simplified method form for invoking the describeorderableclusteroptions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync(DescribeOrderableClusterOptionsRequest request,java.util.concurrent.Future<DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync,DescribeOrderableClusterOptionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeOrderableClusterOptionsRequest, DescribeOrderableClusterOptionsResult> asyncHandler,java.util.concurrent.Future<DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync,java.util.concurrent.Future<DescribeOrderableClusterOptionsResult> describeOrderableClusterOptionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeOrderableClusterOptionsRequest, DescribeOrderableClusterOptionsResult> asyncHandler){\r\n    return describeOrderableClusterOptionsAsync(new DescribeOrderableClusterOptionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetCheckerIpRangesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCheckerIpRanges() != null)\r\n        sb.append(\"CheckerIpRanges: \").append(getCheckerIpRanges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setTruncated",
	"Comment": "sets whether this listing is truncated, and additional requests need tobe made to get more results.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutAccountDedicatedIpWarmupAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAutoWarmupEnabled() != null)\r\n        sb.append(\"AutoWarmupEnabled: \").append(getAutoWarmupEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.getTrafficPolicyInstanceCount",
	"Comment": "gets the number of traffic policy instances that are associated with the current aws account.",
	"Method": "GetTrafficPolicyInstanceCountResult getTrafficPolicyInstanceCount(GetTrafficPolicyInstanceCountRequest request,GetTrafficPolicyInstanceCountResult getTrafficPolicyInstanceCount){\r\n    return getTrafficPolicyInstanceCount(new GetTrafficPolicyInstanceCountRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the existing, initiatedmultipart upload, with which this new part will be associated.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.SearchResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceQuery() != null)\r\n        sb.append(\"ResourceQuery: \").append(getResourceQuery()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.metrics.MetricsConfiguration.withId",
	"Comment": "sets the identifier used to represent a metrics configurationand return this object for method chaining.",
	"Method": "MetricsConfiguration withId(String id){\r\n    setId(id);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTrafficPolicyInstancesByHostedZoneResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicyInstances() != null)\r\n        sb.append(\"TrafficPolicyInstances: \").append(getTrafficPolicyInstances()).append(\",\");\r\n    if (getTrafficPolicyInstanceNameMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceNameMarker: \").append(getTrafficPolicyInstanceNameMarker()).append(\",\");\r\n    if (getTrafficPolicyInstanceTypeMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceTypeMarker: \").append(getTrafficPolicyInstanceTypeMarker()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.model.Record.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.restoreFromClusterSnapshot",
	"Comment": "creates a new cluster from a snapshot. by default, amazon redshift creates the resulting cluster with the sameconfiguration as the original cluster from which the snapshot was created, except that the new cluster is createdwith the default cluster security and parameter groups. after amazon redshift creates the cluster, you can usethe modifycluster api to associate a different security group and different parameter group with therestored cluster. if you are using a ds node type, you can also choose to change to another ds node type of thesame size during restore.if you restore a cluster into a vpc, you must provide a cluster subnet group where you want the cluster restored.for more information about working with snapshots, go to amazon redshift snapshotsin the amazon redshift cluster management guide.",
	"Method": "Cluster restoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRestoreFromClusterSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyClusterParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupName() != null)\r\n        sb.append(\"ParameterGroupName: \").append(getParameterGroupName()).append(\",\");\r\n    if (getParameterGroupStatus() != null)\r\n        sb.append(\"ParameterGroupStatus: \").append(getParameterGroupStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.VoiceChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StoppingCondition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxRuntimeInSeconds() != null)\r\n        sb.append(\"MaxRuntimeInSeconds: \").append(getMaxRuntimeInSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.putConfigurationSetTrackingOptions",
	"Comment": "specify a custom domain to use for open and click tracking elements in email that you send using amazon pinpoint.",
	"Method": "PutConfigurationSetTrackingOptionsResult putConfigurationSetTrackingOptions(PutConfigurationSetTrackingOptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutConfigurationSetTrackingOptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeAccountAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeNames() != null)\r\n        sb.append(\"AttributeNames: \").append(getAttributeNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutConfigurationSetSendingOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getSendingEnabled() != null)\r\n        sb.append(\"SendingEnabled: \").append(getSendingEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.RegisterUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityType() != null)\r\n        sb.append(\"IdentityType: \").append(getIdentityType()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getUserRole() != null)\r\n        sb.append(\"UserRole: \").append(getUserRole()).append(\",\");\r\n    if (getIamArn() != null)\r\n        sb.append(\"IamArn: \").append(getIamArn()).append(\",\");\r\n    if (getSessionName() != null)\r\n        sb.append(\"SessionName: \").append(getSessionName()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAnalyticsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket to which an analytics configuration is stored.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.TopicConfiguration.getTopicARN",
	"Comment": "returns the topic arn for this notification configuration.",
	"Method": "String getTopicARN(){\r\n    return topicARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.getCheckerIpRangesAsync",
	"Comment": "simplified method form for invoking the getcheckeripranges operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetCheckerIpRangesResult> getCheckerIpRangesAsync(GetCheckerIpRangesRequest request,java.util.concurrent.Future<GetCheckerIpRangesResult> getCheckerIpRangesAsync,GetCheckerIpRangesRequest request,com.amazonaws.handlers.AsyncHandler<GetCheckerIpRangesRequest, GetCheckerIpRangesResult> asyncHandler,java.util.concurrent.Future<GetCheckerIpRangesResult> getCheckerIpRangesAsync,java.util.concurrent.Future<GetCheckerIpRangesResult> getCheckerIpRangesAsync,com.amazonaws.handlers.AsyncHandler<GetCheckerIpRangesRequest, GetCheckerIpRangesResult> asyncHandler){\r\n    return getCheckerIpRangesAsync(new GetCheckerIpRangesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.AmazonPinpointSMSVoiceClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Instance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBoundingBox() != null)\r\n        sb.append(\"BoundingBox: \").append(getBoundingBox()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.EventDestinationDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getMatchingEventTypes() != null)\r\n        sb.append(\"MatchingEventTypes: \").append(getMatchingEventTypes()).append(\",\");\r\n    if (getKinesisFirehoseDestination() != null)\r\n        sb.append(\"KinesisFirehoseDestination: \").append(getKinesisFirehoseDestination()).append(\",\");\r\n    if (getCloudWatchDestination() != null)\r\n        sb.append(\"CloudWatchDestination: \").append(getCloudWatchDestination()).append(\",\");\r\n    if (getSnsDestination() != null)\r\n        sb.append(\"SnsDestination: \").append(getSnsDestination()).append(\",\");\r\n    if (getPinpointDestination() != null)\r\n        sb.append(\"PinpointDestination: \").append(getPinpointDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.createTags",
	"Comment": "adds one or more tags to a specified resource.a resource can have up to 50 tags. if you try to create more than 50 tags for a resource, you will receive anerror and the attempt will fail.if you specify a key that already exists for the resource, the value for that key will be updated with the newvalue.",
	"Method": "CreateTagsResult createTags(CreateTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeletePublicAccessBlockRequest.withBucketName",
	"Comment": "the amazon s3 bucket whose public access block configuration you want to delete.",
	"Method": "DeletePublicAccessBlockRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StartNotebookInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SelectObjectContentRequest.getOutputSerialization",
	"Comment": "describes the format of the data that you want amazon s3 to return in response.",
	"Method": "OutputSerialization getOutputSerialization(){\r\n    return outputSerialization;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBSecurityGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityRecognition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getCelebrity() != null)\r\n        sb.append(\"Celebrity: \").append(getCelebrity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAnalyticsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket to which an analytics configuration is stored.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withFile",
	"Comment": "sets the file containing the data to upload, and returns this updateduploadpartrequest object so that additional method calls can be chainedtogether.exactly one file or inputstream must be specified as the input to thisoperation.",
	"Method": "UploadPartRequest withFile(File file){\r\n    setFile(file);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.Content.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData()).append(\",\");\r\n    if (getCharset() != null)\r\n        sb.append(\"Charset: \").append(getCharset());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.CreateConfigurationSetEventDestinationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getEventDestination() != null)\r\n        sb.append(\"EventDestination: \").append(getEventDestination()).append(\",\");\r\n    if (getEventDestinationName() != null)\r\n        sb.append(\"EventDestinationName: \").append(getEventDestinationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBEngineVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDefaultOnly() != null)\r\n        sb.append(\"DefaultOnly: \").append(getDefaultOnly()).append(\",\");\r\n    if (getListSupportedCharacterSets() != null)\r\n        sb.append(\"ListSupportedCharacterSets: \").append(getListSupportedCharacterSets()).append(\",\");\r\n    if (getListSupportedTimezones() != null)\r\n        sb.append(\"ListSupportedTimezones: \").append(getListSupportedTimezones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withObjectLockMode",
	"Comment": "the object lock mode that you want to apply to the copied object.",
	"Method": "CopyObjectRequest withObjectLockMode(String objectLockMode,CopyObjectRequest withObjectLockMode,ObjectLockMode objectLockMode){\r\n    return withObjectLockMode(objectLockMode.toString());\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetChangeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeInfo() != null)\r\n        sb.append(\"ChangeInfo: \").append(getChangeInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSendUsersMessageResponse() != null)\r\n        sb.append(\"SendUsersMessageResponse: \").append(getSendUsersMessageResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose website configuration is to be updated.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getFile",
	"Comment": "returns the file containing the data to upload. exactly one file orinputstream must be specified as the input to this operation.",
	"Method": "File getFile(){\r\n    return file;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getSourceBucketName",
	"Comment": "gets the name of the bucket containing the source object to be copied.",
	"Method": "String getSourceBucketName(){\r\n    return sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.setNotificationConfiguration",
	"Comment": "sets the new notification configuration for the specified bucket.",
	"Method": "void setNotificationConfiguration(BucketNotificationConfiguration notificationConfiguration){\r\n    this.notificationConfiguration = notificationConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ResetClusterParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupName() != null)\r\n        sb.append(\"ParameterGroupName: \").append(getParameterGroupName()).append(\",\");\r\n    if (getParameterGroupStatus() != null)\r\n        sb.append(\"ParameterGroupStatus: \").append(getParameterGroupStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.EnableDomainTransferLockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.AWSPricingClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketEncryptionRequest.setBucketName",
	"Comment": "the name of the bucket for which to delete the encryption configuration.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ListResolverRulesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getResolverRules() != null)\r\n        sb.append(\"ResolverRules: \").append(getResolverRules());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setNextVersionIdMarker",
	"Comment": "for internal use only. sets the version id marker to usein the next listversions request in order to see the next page of resultsfor a truncated version listing.",
	"Method": "void setNextVersionIdMarker(String marker){\r\n    this.nextVersionIdMarker = marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.listReusableDelegationSets",
	"Comment": "retrieves a list of the reusable delegation sets that are associated with the current aws account.",
	"Method": "ListReusableDelegationSetsResult listReusableDelegationSets(ListReusableDelegationSetsRequest request,ListReusableDelegationSetsResult listReusableDelegationSets){\r\n    return listReusableDelegationSets(new ListReusableDelegationSetsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.setRedirectAllRequestsTo",
	"Comment": "sets the redirect information where all requests will be redirect to.",
	"Method": "void setRedirectAllRequestsTo(RedirectRule redirectAllRequestsTo){\r\n    this.redirectAllRequestsTo = redirectAllRequestsTo;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getSnapshotType() != null)\r\n        sb.append(\"SnapshotType: \").append(getSnapshotType()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getIncludeShared() != null)\r\n        sb.append(\"IncludeShared: \").append(getIncludeShared()).append(\",\");\r\n    if (getIncludePublic() != null)\r\n        sb.append(\"IncludePublic: \").append(getIncludePublic());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectRetentionRequest.getRetention",
	"Comment": "the container element for the object retention configuration.",
	"Method": "ObjectLockRetention getRetention(){\r\n    return retention;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeploymentApplicationConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getApplicationVersion() != null)\r\n        sb.append(\"ApplicationVersion: \").append(getApplicationVersion()).append(\",\");\r\n    if (getLaunchConfig() != null)\r\n        sb.append(\"LaunchConfig: \").append(getLaunchConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getNewObjectMetadata",
	"Comment": "gets the optional object metadata to set for the new, copied object.",
	"Method": "ObjectMetadata getNewObjectMetadata(){\r\n    return newObjectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setFile",
	"Comment": "sets the file containing the data to upload. exactly one file orinputstream must be specified as the input to this operation.",
	"Method": "void setFile(File file){\r\n    this.file = file;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.GetTagValuesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPaginationToken() != null)\r\n        sb.append(\"PaginationToken: \").append(getPaginationToken()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketPolicy.getPolicyText",
	"Comment": "gets the raw policy json text as returned by amazon s3. if no policyhas been applied to the specified bucket, the policy text will benull.",
	"Method": "String getPolicyText(){\r\n    return policyText;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getObjectLockMode",
	"Comment": "the object lock mode that you want to apply to the copied object.",
	"Method": "String getObjectLockMode(){\r\n    return objectLockMode;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBName() != null)\r\n        sb.append(\"DBName: \").append(getDBName()).append(\",\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getClusterType() != null)\r\n        sb.append(\"ClusterType: \").append(getClusterType()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getClusterSecurityGroups() != null)\r\n        sb.append(\"ClusterSecurityGroups: \").append(getClusterSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getClusterSubnetGroupName() != null)\r\n        sb.append(\"ClusterSubnetGroupName: \").append(getClusterSubnetGroupName()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getClusterParameterGroupName() != null)\r\n        sb.append(\"ClusterParameterGroupName: \").append(getClusterParameterGroupName()).append(\",\");\r\n    if (getAutomatedSnapshotRetentionPeriod() != null)\r\n        sb.append(\"AutomatedSnapshotRetentionPeriod: \").append(getAutomatedSnapshotRetentionPeriod()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getClusterVersion() != null)\r\n        sb.append(\"ClusterVersion: \").append(getClusterVersion()).append(\",\");\r\n    if (getAllowVersionUpgrade() != null)\r\n        sb.append(\"AllowVersionUpgrade: \").append(getAllowVersionUpgrade()).append(\",\");\r\n    if (getNumberOfNodes() != null)\r\n        sb.append(\"NumberOfNodes: \").append(getNumberOfNodes()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getHsmClientCertificateIdentifier() != null)\r\n        sb.append(\"HsmClientCertificateIdentifier: \").append(getHsmClientCertificateIdentifier()).append(\",\");\r\n    if (getHsmConfigurationIdentifier() != null)\r\n        sb.append(\"HsmConfigurationIdentifier: \").append(getHsmConfigurationIdentifier()).append(\",\");\r\n    if (getElasticIp() != null)\r\n        sb.append(\"ElasticIp: \").append(getElasticIp()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getEnhancedVpcRouting() != null)\r\n        sb.append(\"EnhancedVpcRouting: \").append(getEnhancedVpcRouting()).append(\",\");\r\n    if (getAdditionalInfo() != null)\r\n        sb.append(\"AdditionalInfo: \").append(getAdditionalInfo()).append(\",\");\r\n    if (getIamRoles() != null)\r\n        sb.append(\"IamRoles: \").append(getIamRoles()).append(\",\");\r\n    if (getMaintenanceTrackName() != null)\r\n        sb.append(\"MaintenanceTrackName: \").append(getMaintenanceTrackName()).append(\",\");\r\n    if (getSnapshotScheduleIdentifier() != null)\r\n        sb.append(\"SnapshotScheduleIdentifier: \").append(getSnapshotScheduleIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlClientBuilder.build",
	"Comment": "construct a synchronous implementation of awss3control using the current builder configuration.",
	"Method": "AWSS3Control build(AwsSyncClientParams params){\r\n    return new AWSS3ControlClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutDedicatedIpWarmupAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIp() != null)\r\n        sb.append(\"Ip: \").append(getIp()).append(\",\");\r\n    if (getWarmupPercentage() != null)\r\n        sb.append(\"WarmupPercentage: \").append(getWarmupPercentage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectFacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFaceDetails() != null)\r\n        sb.append(\"FaceDetails: \").append(getFaceDetails()).append(\",\");\r\n    if (getOrientationCorrection() != null)\r\n        sb.append(\"OrientationCorrection: \").append(getOrientationCorrection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName()).append(\",\");\r\n    if (getEndpointArn() != null)\r\n        sb.append(\"EndpointArn: \").append(getEndpointArn()).append(\",\");\r\n    if (getEndpointConfigName() != null)\r\n        sb.append(\"EndpointConfigName: \").append(getEndpointConfigName()).append(\",\");\r\n    if (getProductionVariants() != null)\r\n        sb.append(\"ProductionVariants: \").append(getProductionVariants()).append(\",\");\r\n    if (getEndpointStatus() != null)\r\n        sb.append(\"EndpointStatus: \").append(getEndpointStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest.getReplicationConfiguration",
	"Comment": "returns the replication configuration of an amazon s3 bucket.",
	"Method": "BucketReplicationConfiguration getReplicationConfiguration(){\r\n    return replicationConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectLabelsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getMaxLabels() != null)\r\n        sb.append(\"MaxLabels: \").append(getMaxLabels()).append(\",\");\r\n    if (getMinConfidence() != null)\r\n        sb.append(\"MinConfidence: \").append(getMinConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.Filter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated copyobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "CopyObjectRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getLastModifiedTimeBefore() != null)\r\n        sb.append(\"LastModifiedTimeBefore: \").append(getLastModifiedTimeBefore()).append(\",\");\r\n    if (getLastModifiedTimeAfter() != null)\r\n        sb.append(\"LastModifiedTimeAfter: \").append(getLastModifiedTimeAfter()).append(\",\");\r\n    if (getStatusEquals() != null)\r\n        sb.append(\"StatusEquals: \").append(getStatusEquals());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.promoteReadReplicaDBCluster",
	"Comment": "promotes a read replica db cluster to a standalone db cluster.",
	"Method": "DBCluster promoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePromoteReadReplicaDBCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetConfigurationSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getTrackingOptions() != null)\r\n        sb.append(\"TrackingOptions: \").append(getTrackingOptions()).append(\",\");\r\n    if (getDeliveryOptions() != null)\r\n        sb.append(\"DeliveryOptions: \").append(getDeliveryOptions()).append(\",\");\r\n    if (getReputationOptions() != null)\r\n        sb.append(\"ReputationOptions: \").append(getReputationOptions()).append(\",\");\r\n    if (getSendingOptions() != null)\r\n        sb.append(\"SendingOptions: \").append(getSendingOptions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.checkForEmptyString",
	"Comment": "checks if the specified string is empty or null and if so, returns null.otherwise simply returns the string.",
	"Method": "String checkForEmptyString(String s){\r\n    if (s == null)\r\n        return null;\r\n    if (s.length() == 0)\r\n        return null;\r\n    return s;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.withCryptoProvider",
	"Comment": "sets the crypto provider to the specified provider, and returns theupdated cryptoconfiguration object.",
	"Method": "CryptoConfiguration withCryptoProvider(Provider cryptoProvider,CryptoConfiguration withCryptoProvider,Provider cryptoProvider){\r\n    this.cryptoProvider = cryptoProvider;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.MemberDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCognitoMemberDefinition() != null)\r\n        sb.append(\"CognitoMemberDefinition: \").append(getCognitoMemberDefinition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getExpirationTime",
	"Comment": "returns the time this object will expire and be completely removed froms3. returns null if this object will never expire.",
	"Method": "Date getExpirationTime(){\r\n    return cloneDate(expirationTime);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.SendQuota.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMax24HourSend() != null)\r\n        sb.append(\"Max24HourSend: \").append(getMax24HourSend()).append(\",\");\r\n    if (getMaxSendRate() != null)\r\n        sb.append(\"MaxSendRate: \").append(getMaxSendRate()).append(\",\");\r\n    if (getSentLast24Hours() != null)\r\n        sb.append(\"SentLast24Hours: \").append(getSentLast24Hours());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeGlobalClustersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getGlobalClusters() != null)\r\n        sb.append(\"GlobalClusters: \").append(getGlobalClusters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.getAccessControlList",
	"Comment": "returns the optional access control list for the new bucket. ifspecified, cannedacl will be ignored.",
	"Method": "AccessControlList getAccessControlList(){\r\n    return accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteReusableDelegationSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.setObjectLockEnabledForBucket",
	"Comment": "specifies whether you want s3 object lock to be enabled for the new bucket.",
	"Method": "void setObjectLockEnabledForBucket(boolean objectLockEnabled){\r\n    withObjectLockEnabledForBucket(objectLockEnabled);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeSourceRegions",
	"Comment": "returns a list of the source aws regions where the current aws region can create a read replica or copy a dbsnapshot from. this api action supports pagination.",
	"Method": "DescribeSourceRegionsResult describeSourceRegions(DescribeSourceRegionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSourceRegions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ReservedNode.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedNodeId() != null)\r\n        sb.append(\"ReservedNodeId: \").append(getReservedNodeId()).append(\",\");\r\n    if (getReservedNodeOfferingId() != null)\r\n        sb.append(\"ReservedNodeOfferingId: \").append(getReservedNodeOfferingId()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getNodeCount() != null)\r\n        sb.append(\"NodeCount: \").append(getNodeCount()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getRecurringCharges() != null)\r\n        sb.append(\"RecurringCharges: \").append(getRecurringCharges()).append(\",\");\r\n    if (getReservedNodeOfferingType() != null)\r\n        sb.append(\"ReservedNodeOfferingType: \").append(getReservedNodeOfferingType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.ListUserGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DeleteDedicatedIpPoolRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPoolName() != null)\r\n        sb.append(\"PoolName: \").append(getPoolName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.VPCConfigResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getAssignPublicIp() != null)\r\n        sb.append(\"AssignPublicIp: \").append(getAssignPublicIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getNextPartNumberMarker",
	"Comment": "returns the next part number marker. if this listing is truncated, thisis the part number marker that should be used in the next request to getthe next page of results.",
	"Method": "Integer getNextPartNumberMarker(){\r\n    return nextPartNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Face.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFaceId() != null)\r\n        sb.append(\"FaceId: \").append(getFaceId()).append(\",\");\r\n    if (getBoundingBox() != null)\r\n        sb.append(\"BoundingBox: \").append(getBoundingBox()).append(\",\");\r\n    if (getImageId() != null)\r\n        sb.append(\"ImageId: \").append(getImageId()).append(\",\");\r\n    if (getExternalImageId() != null)\r\n        sb.append(\"ExternalImageId: \").append(getExternalImageId()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.NotificationConfiguration.getFilter",
	"Comment": "filter criteria for determining which s3 objects trigger event notifications.",
	"Method": "Filter getFilter(){\r\n    return filter;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ChangeTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getAddTags() != null)\r\n        sb.append(\"AddTags: \").append(getAddTags()).append(\",\");\r\n    if (getRemoveTagKeys() != null)\r\n        sb.append(\"RemoveTagKeys: \").append(getRemoveTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonsagemaker using the current builder configuration.",
	"Method": "AmazonSageMaker build(AwsSyncClientParams params){\r\n    return new AmazonSageMakerClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.getQueryLoggingConfig",
	"Comment": "gets information about a specified configuration for dns query logging.for more information about dns query logs, see createqueryloggingconfig and logging dns queries.",
	"Method": "GetQueryLoggingConfigResult getQueryLoggingConfig(GetQueryLoggingConfigRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetQueryLoggingConfig(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManager.getAmazonS3Client",
	"Comment": "returns the underlying amazon s3 client used to make requests toamazon s3.",
	"Method": "AmazonS3 getAmazonS3Client(){\r\n    return s3;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.UpdateResourceShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShare() != null)\r\n        sb.append(\"ResourceShare: \").append(getResourceShare()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobOutputConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3OutputPath() != null)\r\n        sb.append(\"S3OutputPath: \").append(getS3OutputPath()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.JSONOutput.getRecordDelimiterAsString",
	"Comment": "the value used to separate individual records in the output.",
	"Method": "String getRecordDelimiterAsString(){\r\n    return recordDelimiter;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateNotebookInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceArn() != null)\r\n        sb.append(\"NotebookInstanceArn: \").append(getNotebookInstanceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket from which an analytics configuration is to be retrieved.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.RegisterRobotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet()).append(\",\");\r\n    if (getRobot() != null)\r\n        sb.append(\"Robot: \").append(getRobot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.getAbortRuleId",
	"Comment": "id of the lifecycle rule that makes a multipart upload eligible for abort operation.",
	"Method": "String getAbortRuleId(){\r\n    return abortRuleId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.model.PutPublicAccessBlockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPublicAccessBlockConfiguration() != null)\r\n        sb.append(\"PublicAccessBlockConfiguration: \").append(getPublicAccessBlockConfiguration()).append(\",\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.NotebookInstanceSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceName() != null)\r\n        sb.append(\"NotebookInstanceName: \").append(getNotebookInstanceName()).append(\",\");\r\n    if (getNotebookInstanceArn() != null)\r\n        sb.append(\"NotebookInstanceArn: \").append(getNotebookInstanceArn()).append(\",\");\r\n    if (getNotebookInstanceStatus() != null)\r\n        sb.append(\"NotebookInstanceStatus: \").append(getNotebookInstanceStatus()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getNotebookInstanceLifecycleConfigName() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigName: \").append(getNotebookInstanceLifecycleConfigName()).append(\",\");\r\n    if (getDefaultCodeRepository() != null)\r\n        sb.append(\"DefaultCodeRepository: \").append(getDefaultCodeRepository()).append(\",\");\r\n    if (getAdditionalCodeRepositories() != null)\r\n        sb.append(\"AdditionalCodeRepositories: \").append(getAdditionalCodeRepositories());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.AWSResourceGroupsTaggingAPIClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsresourcegroupstaggingapi using the current builder configuration.",
	"Method": "AWSResourceGroupsTaggingAPI build(AwsSyncClientParams params){\r\n    return new AWSResourceGroupsTaggingAPIClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.MailFromAttributes.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMailFromDomain() != null)\r\n        sb.append(\"MailFromDomain: \").append(getMailFromDomain()).append(\",\");\r\n    if (getMailFromDomainStatus() != null)\r\n        sb.append(\"MailFromDomainStatus: \").append(getMailFromDomainStatus()).append(\",\");\r\n    if (getBehaviorOnMxFailure() != null)\r\n        sb.append(\"BehaviorOnMxFailure: \").append(getBehaviorOnMxFailure());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.EventCategoriesMap.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.isSignerOverridden",
	"Comment": "has signer been explicitly overriden in the configuration?",
	"Method": "boolean isSignerOverridden(){\r\n    return clientConfiguration != null && clientConfiguration.getSignerOverride() != null;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Builder.withDualstackEnabled",
	"Comment": "configures the client to use amazon s3 dualstack mode for all requests.",
	"Method": "Subclass withDualstackEnabled(Boolean dualstackEnabled){\r\n    setDualstackEnabled(dualstackEnabled);\r\n    return getSubclass();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getAccessControlList",
	"Comment": "returns the optional access control list for the new object. ifspecified, cannedacl will be ignored.",
	"Method": "AccessControlList getAccessControlList(){\r\n    return accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.createOptionGroup",
	"Comment": "creates a new option group. you can create up to 20 option groups.",
	"Method": "OptionGroup createOptionGroup(CreateOptionGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateOptionGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerConfiguration.setMinimumUploadPartSize",
	"Comment": "sets the minimum part size for upload parts.decreasing the minimum part size causesmultipart uploads to be split into a larger numberof smaller parts. setting this value too low has a negative effecton transfer speeds, causing extra latency and networkcommunication for each part.",
	"Method": "void setMinimumUploadPartSize(long minimumUploadPartSize){\r\n    this.minimumUploadPartSize = minimumUploadPartSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.GetResolverRuleAssociationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRuleAssociationId() != null)\r\n        sb.append(\"ResolverRuleAssociationId: \").append(getResolverRuleAssociationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.getResolverRuleAssociation",
	"Comment": "gets information about an association between a specified resolver rule and a vpc. you associate a resolver ruleand a vpc using associateresolverrule.",
	"Method": "GetResolverRuleAssociationResult getResolverRuleAssociation(GetResolverRuleAssociationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetResolverRuleAssociation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedGetObjectRequest.withExtraMaterialsDescription",
	"Comment": "fluent api to set the supplemental materials description for theencryption materials to be used with the current request.",
	"Method": "EncryptedGetObjectRequest withExtraMaterialsDescription(ExtraMaterialsDescription supplemental,EncryptedGetObjectRequest withExtraMaterialsDescription,Map<String, String> supplemental){\r\n    setExtraMaterialDescription(supplemental == null ? null : new ExtraMaterialsDescription(supplemental));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBName() != null)\r\n        sb.append(\"DBName: \").append(getDBName()).append(\",\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getDBSecurityGroups() != null)\r\n        sb.append(\"DBSecurityGroups: \").append(getDBSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getTdeCredentialArn() != null)\r\n        sb.append(\"TdeCredentialArn: \").append(getTdeCredentialArn()).append(\",\");\r\n    if (getTdeCredentialPassword() != null)\r\n        sb.append(\"TdeCredentialPassword: \").append(getTdeCredentialPassword()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getCopyTagsToSnapshot() != null)\r\n        sb.append(\"CopyTagsToSnapshot: \").append(getCopyTagsToSnapshot()).append(\",\");\r\n    if (getMonitoringInterval() != null)\r\n        sb.append(\"MonitoringInterval: \").append(getMonitoringInterval()).append(\",\");\r\n    if (getMonitoringRoleArn() != null)\r\n        sb.append(\"MonitoringRoleArn: \").append(getMonitoringRoleArn()).append(\",\");\r\n    if (getDomainIAMRoleName() != null)\r\n        sb.append(\"DomainIAMRoleName: \").append(getDomainIAMRoleName()).append(\",\");\r\n    if (getPromotionTier() != null)\r\n        sb.append(\"PromotionTier: \").append(getPromotionTier()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getEnablePerformanceInsights() != null)\r\n        sb.append(\"EnablePerformanceInsights: \").append(getEnablePerformanceInsights()).append(\",\");\r\n    if (getPerformanceInsightsKMSKeyId() != null)\r\n        sb.append(\"PerformanceInsightsKMSKeyId: \").append(getPerformanceInsightsKMSKeyId()).append(\",\");\r\n    if (getPerformanceInsightsRetentionPeriod() != null)\r\n        sb.append(\"PerformanceInsightsRetentionPeriod: \").append(getPerformanceInsightsRetentionPeriod()).append(\",\");\r\n    if (getEnableCloudwatchLogsExports() != null)\r\n        sb.append(\"EnableCloudwatchLogsExports: \").append(getEnableCloudwatchLogsExports()).append(\",\");\r\n    if (getProcessorFeatures() != null)\r\n        sb.append(\"ProcessorFeatures: \").append(getProcessorFeatures()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeFleetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getRobots() != null)\r\n        sb.append(\"Robots: \").append(getRobots()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getLastDeploymentStatus() != null)\r\n        sb.append(\"LastDeploymentStatus: \").append(getLastDeploymentStatus()).append(\",\");\r\n    if (getLastDeploymentJob() != null)\r\n        sb.append(\"LastDeploymentJob: \").append(getLastDeploymentJob()).append(\",\");\r\n    if (getLastDeploymentTime() != null)\r\n        sb.append(\"LastDeploymentTime: \").append(getLastDeploymentTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateQueryLoggingConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueryLoggingConfig() != null)\r\n        sb.append(\"QueryLoggingConfig: \").append(getQueryLoggingConfig()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket from which an analytics configuration is deletedand returns this object for method chaining.",
	"Method": "DeleteBucketAnalyticsConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setMarker",
	"Comment": "for internal use only. sets the marker parameteroriginally used to request this object listing.",
	"Method": "void setMarker(String marker){\r\n    this.marker = marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketInventoryConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the inventory configuration to retrieve.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketEncryptionRequest.setBucketName",
	"Comment": "the name of the bucket for which to retrieve the encryption configuration.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.createRequest",
	"Comment": "creates and initializes a new request object for the specified s3resource. this method is responsible for determining the right way toaddress resources. for example, bucket names that are not dns addressablecannot be addressed in v2, virtual host, style, and instead must use v1,path style. the returned request object has the service name, endpointand resource path correctly populated. callers can take the request, addany additional headers or parameters, then sign and execute the request.",
	"Method": "Request<X> createRequest(String bucketName,String key,X originalRequest,HttpMethodName httpMethod,Request<X> createRequest,String bucketName,String key,X originalRequest,HttpMethodName httpMethod,URI endpoint){\r\n    if (clientOptions.isAccelerateModeEnabled() && !(originalRequest instanceof S3AccelerateUnsupported)) {\r\n        if (clientOptions.isDualstackEnabled()) {\r\n            endpoint = RuntimeHttpUtils.toUri(Constants.S3_ACCELERATE_DUALSTACK_HOSTNAME, clientConfiguration);\r\n        } else {\r\n            endpoint = RuntimeHttpUtils.toUri(Constants.S3_ACCELERATE_HOSTNAME, clientConfiguration);\r\n        }\r\n    }\r\n    Request<X> request = new DefaultRequest<X>(originalRequest, Constants.S3_SERVICE_DISPLAY_NAME);\r\n    request.setHttpMethod(httpMethod);\r\n    request.addHandlerContext(S3HandlerContextKeys.IS_CHUNKED_ENCODING_DISABLED, Boolean.valueOf(clientOptions.isChunkedEncodingDisabled()));\r\n    request.addHandlerContext(S3HandlerContextKeys.IS_PAYLOAD_SIGNING_ENABLED, Boolean.valueOf(clientOptions.isPayloadSigningEnabled()));\r\n    resolveRequestEndpoint(request, bucketName, key, endpoint);\r\n    request.addHandlerContext(HandlerContextKey.SIGNING_REGION, getSigningRegion());\r\n    request.addHandlerContext(HandlerContextKey.SERVICE_ID, SERVICE_ID);\r\n    return request;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupName() != null)\r\n        sb.append(\"ParameterGroupName: \").append(getParameterGroupName()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CategoricalParameterRangeSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.describeEndpointConfig",
	"Comment": "returns the description of an endpoint configuration created using the createendpointconfig api.",
	"Method": "DescribeEndpointConfigResult describeEndpointConfig(DescribeEndpointConfigRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEndpointConfig(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListCompilationJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompilationJobSummaries() != null)\r\n        sb.append(\"CompilationJobSummaries: \").append(getCompilationJobSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSecurityGroupName() != null)\r\n        sb.append(\"DBSecurityGroupName: \").append(getDBSecurityGroupName()).append(\",\");\r\n    if (getDBSecurityGroupDescription() != null)\r\n        sb.append(\"DBSecurityGroupDescription: \").append(getDBSecurityGroupDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RemoveRoleFromDBClusterResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.LabelDetection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getLabel() != null)\r\n        sb.append(\"Label: \").append(getLabel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.model.StructValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.withKey",
	"Comment": "sets the key of the multipart upload to abort and returns the updatedabortmultipartuploadrequest object so that additional method calls can bechained together.",
	"Method": "AbortMultipartUploadRequest withKey(String key){\r\n    this.key = key;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setStartAfter",
	"Comment": "sets the optional parameter indicating where you want amazon s3 to start the objectlisting from.this can be any key in the bucket.",
	"Method": "void setStartAfter(String startAfter){\r\n    this.startAfter = startAfter;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.addTagsToResource",
	"Comment": "adds metadata tags to an amazon rds resource. these tags can also be used with cost allocation reporting to trackcost associated with amazon rds resources, or used in a condition statement in an iam policy for amazon rds.for an overview on tagging amazon rds resources, see tagging amazon rdsresources.",
	"Method": "AddTagsToResourceResult addTagsToResource(AddTagsToResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAddTagsToResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHostedZoneCountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneCount() != null)\r\n        sb.append(\"HostedZoneCount: \").append(getHostedZoneCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RemoveTagsFromResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteVersionRequest.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket containing the version todelete.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeSnapshotSchedulesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotSchedules() != null)\r\n        sb.append(\"SnapshotSchedules: \").append(getSnapshotSchedules()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketLoggingConfiguration.getDestinationBucketName",
	"Comment": "returns the destination bucket name for this logging configuration.",
	"Method": "String getDestinationBucketName(){\r\n    return destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.PlainTextMessageType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getText() != null)\r\n        sb.append(\"Text: \").append(getText()).append(\",\");\r\n    if (getVoiceId() != null)\r\n        sb.append(\"VoiceId: \").append(getVoiceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.ListGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.getKey",
	"Comment": "gets the key, the name of the reference to the object to restore, which isnow stored in amazon glacier.",
	"Method": "String getKey(){\r\n    return key;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBClusterSnapshotAttributes",
	"Comment": "returns a list of db cluster snapshot attribute names and values for a manual db cluster snapshot.when sharing snapshots with other aws accounts, describedbclustersnapshotattributes returns therestore attribute and a list of ids for the aws accounts that are authorized to copy or restore themanual db cluster snapshot. if all is included in the list of values for the restoreattribute, then the manual db cluster snapshot is public and can be copied or restored by all aws accounts.to add or remove access for an aws account to copy or restore a manual db cluster snapshot, or to make the manualdb cluster snapshot public or private, use the modifydbclustersnapshotattribute api action.",
	"Method": "DBClusterSnapshotAttributesResult describeDBClusterSnapshotAttributes(DescribeDBClusterSnapshotAttributesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBClusterSnapshotAttributes(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3Location.withBucketName",
	"Comment": "sets the name of the bucket where the restore results will be placed.",
	"Method": "S3Location withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.InferenceSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainers() != null)\r\n        sb.append(\"Containers: \").append(getContainers()).append(\",\");\r\n    if (getSupportedTransformInstanceTypes() != null)\r\n        sb.append(\"SupportedTransformInstanceTypes: \").append(getSupportedTransformInstanceTypes()).append(\",\");\r\n    if (getSupportedRealtimeInferenceInstanceTypes() != null)\r\n        sb.append(\"SupportedRealtimeInferenceInstanceTypes: \").append(getSupportedRealtimeInferenceInstanceTypes()).append(\",\");\r\n    if (getSupportedContentTypes() != null)\r\n        sb.append(\"SupportedContentTypes: \").append(getSupportedContentTypes()).append(\",\");\r\n    if (getSupportedResponseMIMETypes() != null)\r\n        sb.append(\"SupportedResponseMIMETypes: \").append(getSupportedResponseMIMETypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setNextUploadIdMarker",
	"Comment": "sets the next upload id marker that should be used in the next request toget the next page of results.",
	"Method": "void setNextUploadIdMarker(String nextUploadIdMarker){\r\n    this.nextUploadIdMarker = nextUploadIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the metrics configurations to retrieve.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.DeleteResourceShareRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeEventSubscriptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteApplicationSettingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCampaignHook() != null)\r\n        sb.append(\"CampaignHook: \").append(getCampaignHook()).append(\",\");\r\n    if (getCloudWatchMetricsEnabled() != null)\r\n        sb.append(\"CloudWatchMetricsEnabled: \").append(getCloudWatchMetricsEnabled()).append(\",\");\r\n    if (getLimits() != null)\r\n        sb.append(\"Limits: \").append(getLimits()).append(\",\");\r\n    if (getQuietTime() != null)\r\n        sb.append(\"QuietTime: \").append(getQuietTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterEndpointIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointIdentifier: \").append(getDBClusterEndpointIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeNotebookInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceName() != null)\r\n        sb.append(\"NotebookInstanceName: \").append(getNotebookInstanceName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.RecencyDimension.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getRecencyType() != null)\r\n        sb.append(\"RecencyType: \").append(getRecencyType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.updateNotebookInstanceLifecycleConfig",
	"Comment": "updates a notebook instance lifecycle configuration created with the createnotebookinstancelifecycleconfigapi.",
	"Method": "UpdateNotebookInstanceLifecycleConfigResult updateNotebookInstanceLifecycleConfig(UpdateNotebookInstanceLifecycleConfigRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateNotebookInstanceLifecycleConfig(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.listGeoLocationsAsync",
	"Comment": "simplified method form for invoking the listgeolocations operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListGeoLocationsResult> listGeoLocationsAsync(ListGeoLocationsRequest request,java.util.concurrent.Future<ListGeoLocationsResult> listGeoLocationsAsync,ListGeoLocationsRequest request,com.amazonaws.handlers.AsyncHandler<ListGeoLocationsRequest, ListGeoLocationsResult> asyncHandler,java.util.concurrent.Future<ListGeoLocationsResult> listGeoLocationsAsync,java.util.concurrent.Future<ListGeoLocationsResult> listGeoLocationsAsync,com.amazonaws.handlers.AsyncHandler<ListGeoLocationsRequest, ListGeoLocationsResult> asyncHandler){\r\n    return listGeoLocationsAsync(new ListGeoLocationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlClient.getPublicAccessBlock",
	"Comment": "retrieves the public access block configuration for an amazon web services account.",
	"Method": "GetPublicAccessBlockResult getPublicAccessBlock(GetPublicAccessBlockRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetPublicAccessBlock(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.SnapshotCopyGrant.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotCopyGrantName() != null)\r\n        sb.append(\"SnapshotCopyGrantName: \").append(getSnapshotCopyGrantName()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.IndexFacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFaceRecords() != null)\r\n        sb.append(\"FaceRecords: \").append(getFaceRecords()).append(\",\");\r\n    if (getOrientationCorrection() != null)\r\n        sb.append(\"OrientationCorrection: \").append(getOrientationCorrection()).append(\",\");\r\n    if (getFaceModelVersion() != null)\r\n        sb.append(\"FaceModelVersion: \").append(getFaceModelVersion()).append(\",\");\r\n    if (getUnindexedFaces() != null)\r\n        sb.append(\"UnindexedFaces: \").append(getUnindexedFaces());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectFacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.StatusReport.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCheckedTime() != null)\r\n        sb.append(\"CheckedTime: \").append(getCheckedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedPutObjectRequest.setMaterialsDescription",
	"Comment": "sets the materials description for the encryption materials to be used with the current putobjectrequest.",
	"Method": "void setMaterialsDescription(Map<String, String> materialsDescription){\r\n    this.materialsDescription = materialsDescription == null ? null : Collections.unmodifiableMap(new HashMap<String, String>(materialsDescription));\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.HostedZoneConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment()).append(\",\");\r\n    if (getPrivateZone() != null)\r\n        sb.append(\"PrivateZone: \").append(getPrivateZone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ResourceRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.listCompilationJobs",
	"Comment": "lists model compilation jobs that satisfy various filters.to create a model compilation job, use createcompilationjob. to get information about a particular modelcompilation job you have created, use describecompilationjob.",
	"Method": "ListCompilationJobsResult listCompilationJobs(ListCompilationJobsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListCompilationJobs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DeleteFacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCollectionId() != null)\r\n        sb.append(\"CollectionId: \").append(getCollectionId()).append(\",\");\r\n    if (getFaceIds() != null)\r\n        sb.append(\"FaceIds: \").append(getFaceIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutAccountSendingAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSendingEnabled() != null)\r\n        sb.append(\"SendingEnabled: \").append(getSendingEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.fromObjectMetadata",
	"Comment": "factory method to return the content crypto material from the s3 objectmeta data, using the specified key encrypting key material accessor andan optional security provider.",
	"Method": "ContentCryptoMaterial fromObjectMetadata(ObjectMetadata metadata,EncryptionMaterialsAccessor kekMaterialAccessor,Provider securityProvider,boolean alwaysUseSecurityProvider,boolean keyWrapExpected,AWSKMS kms,ContentCryptoMaterial fromObjectMetadata,ObjectMetadata metadata,EncryptionMaterialsAccessor kekMaterialAccessor,Provider securityProvider,boolean alwaysUseSecurityProvider,long[] range,ExtraMaterialsDescription extra,boolean keyWrapExpected,AWSKMS kms){\r\n    return fromObjectMetadata0(metadata, kekMaterialAccessor, securityProvider, alwaysUseSecurityProvider, range, extra, keyWrapExpected, kms);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeEventSubscriptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getEventSubscriptionsList() != null)\r\n        sb.append(\"EventSubscriptionsList: \").append(getEventSubscriptionsList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListTrainingJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getLastModifiedTimeAfter() != null)\r\n        sb.append(\"LastModifiedTimeAfter: \").append(getLastModifiedTimeAfter()).append(\",\");\r\n    if (getLastModifiedTimeBefore() != null)\r\n        sb.append(\"LastModifiedTimeBefore: \").append(getLastModifiedTimeBefore()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getStatusEquals() != null)\r\n        sb.append(\"StatusEquals: \").append(getStatusEquals()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyClusterDbRevisionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getRevisionTarget() != null)\r\n        sb.append(\"RevisionTarget: \").append(getRevisionTarget());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.AccountWithRestoreAccess.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId()).append(\",\");\r\n    if (getAccountAlias() != null)\r\n        sb.append(\"AccountAlias: \").append(getAccountAlias());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.TrainingJob.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJobName() != null)\r\n        sb.append(\"TrainingJobName: \").append(getTrainingJobName()).append(\",\");\r\n    if (getTrainingJobArn() != null)\r\n        sb.append(\"TrainingJobArn: \").append(getTrainingJobArn()).append(\",\");\r\n    if (getTuningJobArn() != null)\r\n        sb.append(\"TuningJobArn: \").append(getTuningJobArn()).append(\",\");\r\n    if (getLabelingJobArn() != null)\r\n        sb.append(\"LabelingJobArn: \").append(getLabelingJobArn()).append(\",\");\r\n    if (getModelArtifacts() != null)\r\n        sb.append(\"ModelArtifacts: \").append(getModelArtifacts()).append(\",\");\r\n    if (getTrainingJobStatus() != null)\r\n        sb.append(\"TrainingJobStatus: \").append(getTrainingJobStatus()).append(\",\");\r\n    if (getSecondaryStatus() != null)\r\n        sb.append(\"SecondaryStatus: \").append(getSecondaryStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getHyperParameters() != null)\r\n        sb.append(\"HyperParameters: \").append(getHyperParameters()).append(\",\");\r\n    if (getAlgorithmSpecification() != null)\r\n        sb.append(\"AlgorithmSpecification: \").append(getAlgorithmSpecification()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getInputDataConfig() != null)\r\n        sb.append(\"InputDataConfig: \").append(getInputDataConfig()).append(\",\");\r\n    if (getOutputDataConfig() != null)\r\n        sb.append(\"OutputDataConfig: \").append(getOutputDataConfig()).append(\",\");\r\n    if (getResourceConfig() != null)\r\n        sb.append(\"ResourceConfig: \").append(getResourceConfig()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getStoppingCondition() != null)\r\n        sb.append(\"StoppingCondition: \").append(getStoppingCondition()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTrainingStartTime() != null)\r\n        sb.append(\"TrainingStartTime: \").append(getTrainingStartTime()).append(\",\");\r\n    if (getTrainingEndTime() != null)\r\n        sb.append(\"TrainingEndTime: \").append(getTrainingEndTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getSecondaryStatusTransitions() != null)\r\n        sb.append(\"SecondaryStatusTransitions: \").append(getSecondaryStatusTransitions()).append(\",\");\r\n    if (getFinalMetricDataList() != null)\r\n        sb.append(\"FinalMetricDataList: \").append(getFinalMetricDataList()).append(\",\");\r\n    if (getEnableNetworkIsolation() != null)\r\n        sb.append(\"EnableNetworkIsolation: \").append(getEnableNetworkIsolation()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase.putObjectUsingInstructionFile",
	"Comment": "puts an encrypted object into s3, and puts an instruction file into s3.encryption info is stored in the instruction file.",
	"Method": "PutObjectResult putObjectUsingInstructionFile(PutObjectRequest putObjectRequest){\r\n    final File fileOrig = putObjectRequest.getFile();\r\n    final InputStream isOrig = putObjectRequest.getInputStream();\r\n    final PutObjectRequest putInstFileRequest = putObjectRequest.clone().withFile(null).withInputStream(null);\r\n    putInstFileRequest.setKey(putInstFileRequest.getKey() + DOT + DEFAULT_INSTRUCTION_FILE_SUFFIX);\r\n    ContentCryptoMaterial cekMaterial = createContentCryptoMaterial(putObjectRequest);\r\n    PutObjectRequest req = wrapWithCipher(putObjectRequest, cekMaterial);\r\n    final PutObjectResult result;\r\n    try {\r\n        result = s3.putObject(req);\r\n    } finally {\r\n        cleanupDataSource(putObjectRequest, fileOrig, isOrig, req.getInputStream(), log);\r\n    }\r\n    s3.putObject(updateInstructionPutRequest(putInstFileRequest, cekMaterial));\r\n    return result;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateTransformJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransformJobName() != null)\r\n        sb.append(\"TransformJobName: \").append(getTransformJobName()).append(\",\");\r\n    if (getModelName() != null)\r\n        sb.append(\"ModelName: \").append(getModelName()).append(\",\");\r\n    if (getMaxConcurrentTransforms() != null)\r\n        sb.append(\"MaxConcurrentTransforms: \").append(getMaxConcurrentTransforms()).append(\",\");\r\n    if (getMaxPayloadInMB() != null)\r\n        sb.append(\"MaxPayloadInMB: \").append(getMaxPayloadInMB()).append(\",\");\r\n    if (getBatchStrategy() != null)\r\n        sb.append(\"BatchStrategy: \").append(getBatchStrategy()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getTransformInput() != null)\r\n        sb.append(\"TransformInput: \").append(getTransformInput()).append(\",\");\r\n    if (getTransformOutput() != null)\r\n        sb.append(\"TransformOutput: \").append(getTransformOutput()).append(\",\");\r\n    if (getTransformResources() != null)\r\n        sb.append(\"TransformResources: \").append(getTransformResources()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.AbstractTransfer.removeStateChangeListener",
	"Comment": "removes the given state change listener from the collection of listeners.",
	"Method": "void removeStateChangeListener(TransferStateChangeListener listener){\r\n    if (listener != null)\r\n        stateChangeListeners.remove(listener);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ResourceRecordSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getSetIdentifier() != null)\r\n        sb.append(\"SetIdentifier: \").append(getSetIdentifier()).append(\",\");\r\n    if (getWeight() != null)\r\n        sb.append(\"Weight: \").append(getWeight()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getGeoLocation() != null)\r\n        sb.append(\"GeoLocation: \").append(getGeoLocation()).append(\",\");\r\n    if (getFailover() != null)\r\n        sb.append(\"Failover: \").append(getFailover()).append(\",\");\r\n    if (getMultiValueAnswer() != null)\r\n        sb.append(\"MultiValueAnswer: \").append(getMultiValueAnswer()).append(\",\");\r\n    if (getTTL() != null)\r\n        sb.append(\"TTL: \").append(getTTL()).append(\",\");\r\n    if (getResourceRecords() != null)\r\n        sb.append(\"ResourceRecords: \").append(getResourceRecords()).append(\",\");\r\n    if (getAliasTarget() != null)\r\n        sb.append(\"AliasTarget: \").append(getAliasTarget()).append(\",\");\r\n    if (getHealthCheckId() != null)\r\n        sb.append(\"HealthCheckId: \").append(getHealthCheckId()).append(\",\");\r\n    if (getTrafficPolicyInstanceId() != null)\r\n        sb.append(\"TrafficPolicyInstanceId: \").append(getTrafficPolicyInstanceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.CopyResult.getSourceKey",
	"Comment": "gets the source bucket key under which the source object to be copied isstored.",
	"Method": "String getSourceKey(){\r\n    return sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SelectObjectContentRequest.withInputSerialization",
	"Comment": "describes the format of the data in the object that is being queried.",
	"Method": "SelectObjectContentRequest withInputSerialization(InputSerialization inputSerialization){\r\n    setInputSerialization(inputSerialization);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getEventsRequest() != null)\r\n        sb.append(\"EventsRequest: \").append(getEventsRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getRedirectLocation",
	"Comment": "gets the optional redirect location for the newly copied object.",
	"Method": "String getRedirectLocation(){\r\n    return this.redirectLocation;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setDestinationKey",
	"Comment": "sets the destination bucket key under which the new, copied objectwill be stored.",
	"Method": "void setDestinationKey(String destinationKey){\r\n    this.destinationKey = destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.AmazonPinpointSMSVoiceClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonpinpointsmsvoice using the current builder configuration.",
	"Method": "AmazonPinpointSMSVoice build(AwsSyncClientParams params){\r\n    return new AmazonPinpointSMSVoiceClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteEndpointConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.GetGroupQueryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupQuery() != null)\r\n        sb.append(\"GroupQuery: \").append(getGroupQuery());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setMaxKeys",
	"Comment": "sets the optional maxkeys parameter indicating the maximum number of keys toinclude in the response.",
	"Method": "void setMaxKeys(Integer maxKeys){\r\n    this.maxKeys = maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.putDedicatedIpInPool",
	"Comment": "move a dedicated ip address to an existing dedicated ip pool.the dedicated ip address that you specify must already exist, and must be associated with your amazon pinpointaccount.the dedicated ip pool you specify must already exist. you can create a new pool by using thecreatededicatedippool operation.",
	"Method": "PutDedicatedIpInPoolResult putDedicatedIpInPool(PutDedicatedIpInPoolRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutDedicatedIpInPool(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.updateResolverEndpoint",
	"Comment": "updates the name of an inbound or an outbound resolver endpoint.",
	"Method": "UpdateResolverEndpointResult updateResolverEndpoint(UpdateResolverEndpointRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateResolverEndpoint(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.LexiconDescription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.PutLexiconRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeResize",
	"Comment": "returns information about the last resize operation for the specified cluster. if no resize operation has everbeen initiated for the specified cluster, a http 404 error is returned. if a resize operation wasinitiated and completed, the status of the resize remains as succeeded until the next resize.a resize operation can be requested using modifycluster and specifying a different number or type of nodesfor the cluster.",
	"Method": "DescribeResizeResult describeResize(DescribeResizeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeResize(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetQueryLoggingConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueryLoggingConfig() != null)\r\n        sb.append(\"QueryLoggingConfig: \").append(getQueryLoggingConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.setPrefix",
	"Comment": "sets the optional prefix parameter, restricting the response to multipart\tuploads for keys that begin with the specified prefix.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateRobotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getGreengrassGroupId() != null)\r\n        sb.append(\"GreengrassGroupId: \").append(getGreengrassGroupId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.EnableDomainAutoRenewRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.isTruncated",
	"Comment": "gets whether or not the version listingis complete, indicating if additional calls to amazon s3 are needed to obtaincomplete version listing results.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketReplicationConfiguration.setRoleARN",
	"Comment": "sets the iam role that will be used by amazon s3 while replication.",
	"Method": "void setRoleARN(String roleARN){\r\n    this.roleARN = roleARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteNotebookInstanceLifecycleConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeClusterSubnetGroupsAsync",
	"Comment": "simplified method form for invoking the describeclustersubnetgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync(DescribeClusterSubnetGroupsRequest request,java.util.concurrent.Future<DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync,DescribeClusterSubnetGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClusterSubnetGroupsRequest, DescribeClusterSubnetGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync,java.util.concurrent.Future<DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeClusterSubnetGroupsRequest, DescribeClusterSubnetGroupsResult> asyncHandler){\r\n    return describeClusterSubnetGroupsAsync(new DescribeClusterSubnetGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.modifyCurrentDBClusterCapacity",
	"Comment": "set the capacity of an aurora serverless db cluster to a specific value.aurora serverless scales seamlessly based on the workload on the db cluster. in some cases, the capacity mightnot scale fast enough to meet a sudden change in workload, such as a large number of new transactions. callmodifycurrentdbclustercapacity to set the capacity explicitly.after this call sets the db cluster capacity, aurora serverless can automatically scale the db cluster based onthe cooldown period for scaling up and the cooldown period for scaling down.for more information about aurora serverless, see using amazon auroraserverless in the amazon aurora user guide.if you call modifycurrentdbclustercapacity with the default timeoutaction, connectionsthat prevent aurora serverless from finding a scaling point might be dropped. for more information about scalingpoints, seeautoscaling for aurora serverless in the amazon aurora user guide.",
	"Method": "ModifyCurrentDBClusterCapacityResult modifyCurrentDBClusterCapacity(ModifyCurrentDBClusterCapacityRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyCurrentDBClusterCapacity(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.setNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "void setNextContinuationToken(String nextContinuationToken){\r\n    this.nextContinuationToken = nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ValidStorageOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getStorageSize() != null)\r\n        sb.append(\"StorageSize: \").append(getStorageSize()).append(\",\");\r\n    if (getProvisionedIops() != null)\r\n        sb.append(\"ProvisionedIops: \").append(getProvisionedIops()).append(\",\");\r\n    if (getIopsToStorageRatio() != null)\r\n        sb.append(\"IopsToStorageRatio: \").append(getIopsToStorageRatio());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.getDedicatedIps",
	"Comment": "list the dedicated ip addresses that are associated with your amazon pinpoint account.",
	"Method": "GetDedicatedIpsResult getDedicatedIps(GetDedicatedIpsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetDedicatedIps(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.UpdateHostedZoneCommentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZone() != null)\r\n        sb.append(\"HostedZone: \").append(getHostedZone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.updateCodeRepository",
	"Comment": "updates the specified git repository with the specified values.",
	"Method": "UpdateCodeRepositoryResult updateCodeRepository(UpdateCodeRepositoryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateCodeRepository(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopTrainingJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJobName() != null)\r\n        sb.append(\"TrainingJobName: \").append(getTrainingJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBlacklist() != null)\r\n        sb.append(\"Blacklist: \").append(getBlacklist());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.UnindexedFace.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReasons() != null)\r\n        sb.append(\"Reasons: \").append(getReasons()).append(\",\");\r\n    if (getFaceDetail() != null)\r\n        sb.append(\"FaceDetail: \").append(getFaceDetail());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getUnmodifiedSinceConstraint",
	"Comment": "gets the optional unmodified constraint that restricts this request toexecuting only if the source object has not been modified afterthe specified date.the unmodified since constraint may be used with matching etagconstraints, but not with any other type of constraint.",
	"Method": "Date getUnmodifiedSinceConstraint(){\r\n    return unmodifiedSinceConstraint;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.getEncryptedCEK",
	"Comment": "returns an array of bytes representing the encrypted envelope symmetrickey.",
	"Method": "byte[] getEncryptedCEK(){\r\n    return this.encryptedCEK.clone();\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.model.DescribeServicesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceCode() != null)\r\n        sb.append(\"ServiceCode: \").append(getServiceCode()).append(\",\");\r\n    if (getFormatVersion() != null)\r\n        sb.append(\"FormatVersion: \").append(getFormatVersion()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setTruncated",
	"Comment": "for internal use only. sets the truncated property forthis version listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get moreversion summaries.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CloudwatchLogsExportConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnableLogTypes() != null)\r\n        sb.append(\"EnableLogTypes: \").append(getEnableLogTypes()).append(\",\");\r\n    if (getDisableLogTypes() != null)\r\n        sb.append(\"DisableLogTypes: \").append(getDisableLogTypes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsClient.getGroupQuery",
	"Comment": "returns the resource query associated with the specified resource group.",
	"Method": "GetGroupQueryResult getGroupQuery(GetGroupQueryRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetGroupQuery(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListNextBatchOfVersionsRequest.setPreviousVersionListing",
	"Comment": "sets the previous version listing and all the features of the next version listing as well.",
	"Method": "void setPreviousVersionListing(VersionListing previousVersionListing){\r\n    if (previousVersionListing == null) {\r\n        throw new IllegalArgumentException(\"The parameter previousVersionListing must be specified.\");\r\n    }\r\n    this.previousVersionListing = previousVersionListing;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.waiters.AmazonRedshiftWaiters.snapshotAvailable",
	"Comment": "builds a snapshotavailable waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeClusterSnapshotsRequest> snapshotAvailable(){\r\n    return new WaiterBuilder<DescribeClusterSnapshotsRequest, DescribeClusterSnapshotsResult>().withSdkFunction(new DescribeClusterSnapshotsFunction(client)).withAcceptors(new SnapshotAvailable.IsAvailableMatcher(), new SnapshotAvailable.IsFailedMatcher(), new SnapshotAvailable.IsDeletedMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(20), new FixedDelayStrategy(15))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeploymentLaunchConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPackageName() != null)\r\n        sb.append(\"PackageName: \").append(getPackageName()).append(\",\");\r\n    if (getPreLaunchFile() != null)\r\n        sb.append(\"PreLaunchFile: \").append(getPreLaunchFile()).append(\",\");\r\n    if (getLaunchFile() != null)\r\n        sb.append(\"LaunchFile: \").append(getLaunchFile()).append(\",\");\r\n    if (getPostLaunchFile() != null)\r\n        sb.append(\"PostLaunchFile: \").append(getPostLaunchFile()).append(\",\");\r\n    if (getEnvironmentVariables() != null)\r\n        sb.append(\"EnvironmentVariables: \").append(getEnvironmentVariables());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketInventoryConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket where the inventory configuration will be stored.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the multipart upload whoseparts are being listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.listReusableDelegationSetsAsync",
	"Comment": "simplified method form for invoking the listreusabledelegationsets operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListReusableDelegationSetsResult> listReusableDelegationSetsAsync(ListReusableDelegationSetsRequest request,java.util.concurrent.Future<ListReusableDelegationSetsResult> listReusableDelegationSetsAsync,ListReusableDelegationSetsRequest request,com.amazonaws.handlers.AsyncHandler<ListReusableDelegationSetsRequest, ListReusableDelegationSetsResult> asyncHandler,java.util.concurrent.Future<ListReusableDelegationSetsResult> listReusableDelegationSetsAsync,java.util.concurrent.Future<ListReusableDelegationSetsResult> listReusableDelegationSetsAsync,com.amazonaws.handlers.AsyncHandler<ListReusableDelegationSetsRequest, ListReusableDelegationSetsResult> asyncHandler){\r\n    return listReusableDelegationSetsAsync(new ListReusableDelegationSetsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.UpdateDomainContactPrivacyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated listpartsrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "ListPartsRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setSourceBucketName",
	"Comment": "sets the name of the bucket containing the source object to be copied.",
	"Method": "void setSourceBucketName(String sourceBucketName){\r\n    this.sourceBucketName = sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListSubscribedWorkteamsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscribedWorkteams() != null)\r\n        sb.append(\"SubscribedWorkteams: \").append(getSubscribedWorkteams()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ApplyPendingMaintenanceActionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceIdentifier() != null)\r\n        sb.append(\"ResourceIdentifier: \").append(getResourceIdentifier()).append(\",\");\r\n    if (getApplyAction() != null)\r\n        sb.append(\"ApplyAction: \").append(getApplyAction()).append(\",\");\r\n    if (getOptInType() != null)\r\n        sb.append(\"OptInType: \").append(getOptInType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.getPrefix",
	"Comment": "returns the optional prefix parameter that restricts the response to\tmultipart uploads for keys that begin with the specified prefix. use\tprefixes to separate a bucket into different sets of keys, similar to how\ta file system organizes files into directories.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3ObjectWrapper.toJsonString",
	"Comment": "converts and return the underlying s3 object as a json string.",
	"Method": "String toJsonString(){\r\n    try {\r\n        return from(s3obj.getObjectContent());\r\n    } catch (Exception e) {\r\n        throw new SdkClientException(\"Error parsing JSON: \" + e.getMessage());\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.CreateConfigurationSetEventDestinationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutObjectResult.getVersionId",
	"Comment": "gets the optional version id of the newly uploaded object. this field willbe set only if object versioning is enabled for the bucket theobject was uploaded to.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3ClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazons3 using the current builder configuration.",
	"Method": "AmazonS3 build(AwsSyncClientParams clientParams){\r\n    return clientFactory.apply(new AmazonS3ClientParamsWrapper(clientParams, resolveS3ClientOptions()));\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.createClusterSnapshot",
	"Comment": "creates a manual snapshot of the specified cluster. the cluster must be in the available state.for more information about working with snapshots, go to amazon redshift snapshotsin the amazon redshift cluster management guide.",
	"Method": "Snapshot createClusterSnapshot(CreateClusterSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateClusterSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getResponseHeaders",
	"Comment": "returns the headers to be overridden in the service response.",
	"Method": "ResponseHeaderOverrides getResponseHeaders(){\r\n    return responseHeaders;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.AbstractTransfer.addStateChangeListener",
	"Comment": "adds the given state change listener to the collection of listeners.",
	"Method": "void addStateChangeListener(TransferStateChangeListener listener){\r\n    if (listener != null)\r\n        stateChangeListeners.add(listener);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.AbstractS3ResponseHandler.populateObjectMetadata",
	"Comment": "populates the specified s3objectmetadata object with all object metadatapulled from the headers in the specified response.",
	"Method": "void populateObjectMetadata(HttpResponse response,ObjectMetadata metadata){\r\n    for (Entry<String, String> header : response.getHeaders().entrySet()) {\r\n        String key = header.getKey();\r\n        if (StringUtils.beginsWithIgnoreCase(key, Headers.S3_USER_METADATA_PREFIX)) {\r\n            key = key.substring(Headers.S3_USER_METADATA_PREFIX.length());\r\n            metadata.addUserMetadata(key, header.getValue());\r\n        } else if (ignoredHeaders.contains(key)) {\r\n        } else if (key.equalsIgnoreCase(Headers.LAST_MODIFIED)) {\r\n            try {\r\n                metadata.setHeader(key, ServiceUtils.parseRfc822Date(header.getValue()));\r\n            } catch (Exception pe) {\r\n                log.warn(\"Unable to parse last modified date: \" + header.getValue(), pe);\r\n            }\r\n        } else if (key.equalsIgnoreCase(Headers.CONTENT_LENGTH)) {\r\n            try {\r\n                metadata.setHeader(key, Long.parseLong(header.getValue()));\r\n            } catch (NumberFormatException nfe) {\r\n                throw new SdkClientException(\"Unable to parse content length. Header 'Content-Length' has corrupted data\" + nfe.getMessage(), nfe);\r\n            }\r\n        } else if (key.equalsIgnoreCase(Headers.ETAG)) {\r\n            metadata.setHeader(key, ServiceUtils.removeQuotes(header.getValue()));\r\n        } else if (key.equalsIgnoreCase(Headers.EXPIRES)) {\r\n            metadata.setHeader(Headers.EXPIRES, header.getValue());\r\n            try {\r\n                metadata.setHttpExpiresDate(DateUtils.parseRFC822Date(header.getValue()));\r\n            } catch (Exception pe) {\r\n                log.warn(\"Unable to parse http expiration date: \" + header.getValue(), pe);\r\n            }\r\n        } else if (key.equalsIgnoreCase(Headers.EXPIRATION)) {\r\n            new ObjectExpirationHeaderHandler<ObjectMetadata>().handle(metadata, response);\r\n        } else if (key.equalsIgnoreCase(Headers.RESTORE)) {\r\n            new ObjectRestoreHeaderHandler<ObjectRestoreResult>().handle(metadata, response);\r\n        } else if (key.equalsIgnoreCase(Headers.REQUESTER_CHARGED_HEADER)) {\r\n            new S3RequesterChargedHeaderHandler<S3RequesterChargedResult>().handle(metadata, response);\r\n        } else if (key.equalsIgnoreCase(Headers.S3_PARTS_COUNT)) {\r\n            try {\r\n                metadata.setHeader(key, Integer.parseInt(header.getValue()));\r\n            } catch (NumberFormatException nfe) {\r\n                throw new SdkClientException(\"Unable to parse part count. Header x-amz-mp-parts-count has corrupted data\" + nfe.getMessage(), nfe);\r\n            }\r\n        } else {\r\n            metadata.setHeader(key, header.getValue());\r\n        }\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.SearchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResults() != null)\r\n        sb.append(\"Results: \").append(getResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.CopyResult.getDestinationBucketName",
	"Comment": "gets the destination bucket name which will contain the new, copiedobject.",
	"Method": "String getDestinationBucketName(){\r\n    return destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RebootDBInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getForceFailover() != null)\r\n        sb.append(\"ForceFailover: \").append(getForceFailover());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SelectObjectContentRequest.setInputSerialization",
	"Comment": "describes the format of the data in the object that is being queried.",
	"Method": "void setInputSerialization(InputSerialization inputSerialization){\r\n    this.inputSerialization = inputSerialization;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.S3Object.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBucket() != null)\r\n        sb.append(\"Bucket: \").append(getBucket()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the multipart upload whose partsare being listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeEngineDefaultParameters",
	"Comment": "returns the default engine and system parameter information for the specified database engine.",
	"Method": "EngineDefaults describeEngineDefaultParameters(DescribeEngineDefaultParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEngineDefaultParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.PersistableDownload.isRequesterPays",
	"Comment": "returns true if requesterpays is enabled on the amazon s3 bucket elsefalse.",
	"Method": "boolean isRequesterPays(){\r\n    return isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBClusterEndpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterEndpointIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointIdentifier: \").append(getDBClusterEndpointIdentifier()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterEndpointResourceIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointResourceIdentifier: \").append(getDBClusterEndpointResourceIdentifier()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEndpointType() != null)\r\n        sb.append(\"EndpointType: \").append(getEndpointType()).append(\",\");\r\n    if (getCustomEndpointType() != null)\r\n        sb.append(\"CustomEndpointType: \").append(getCustomEndpointType()).append(\",\");\r\n    if (getStaticMembers() != null)\r\n        sb.append(\"StaticMembers: \").append(getStaticMembers()).append(\",\");\r\n    if (getExcludedMembers() != null)\r\n        sb.append(\"ExcludedMembers: \").append(getExcludedMembers()).append(\",\");\r\n    if (getDBClusterEndpointArn() != null)\r\n        sb.append(\"DBClusterEndpointArn: \").append(getDBClusterEndpointArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.setAccessControlList",
	"Comment": "sets the optional access control list for the new object. if specified,cannedacl will be ignored.",
	"Method": "void setAccessControlList(AccessControlList accessControlList){\r\n    this.accessControlList = accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.modifyGlobalCluster",
	"Comment": "modify a setting for an amazon aurora global cluster. you can change one or more database configurationparameters by specifying these parameters and the new values in the request. for more information on amazonaurora, seewhatis amazon aurora? in the amazon aurora user guide.",
	"Method": "GlobalCluster modifyGlobalCluster(ModifyGlobalClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyGlobalCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.RegisterDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getIdnLangCode() != null)\r\n        sb.append(\"IdnLangCode: \").append(getIdnLangCode()).append(\",\");\r\n    if (getDurationInYears() != null)\r\n        sb.append(\"DurationInYears: \").append(getDurationInYears()).append(\",\");\r\n    if (getAutoRenew() != null)\r\n        sb.append(\"AutoRenew: \").append(getAutoRenew()).append(\",\");\r\n    if (getAdminContact() != null)\r\n        sb.append(\"AdminContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRegistrantContact() != null)\r\n        sb.append(\"RegistrantContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getTechContact() != null)\r\n        sb.append(\"TechContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getPrivacyProtectAdminContact() != null)\r\n        sb.append(\"PrivacyProtectAdminContact: \").append(getPrivacyProtectAdminContact()).append(\",\");\r\n    if (getPrivacyProtectRegistrantContact() != null)\r\n        sb.append(\"PrivacyProtectRegistrantContact: \").append(getPrivacyProtectRegistrantContact()).append(\",\");\r\n    if (getPrivacyProtectTechContact() != null)\r\n        sb.append(\"PrivacyProtectTechContact: \").append(getPrivacyProtectTechContact());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListCompilationJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getLastModifiedTimeAfter() != null)\r\n        sb.append(\"LastModifiedTimeAfter: \").append(getLastModifiedTimeAfter()).append(\",\");\r\n    if (getLastModifiedTimeBefore() != null)\r\n        sb.append(\"LastModifiedTimeBefore: \").append(getLastModifiedTimeBefore()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getStatusEquals() != null)\r\n        sb.append(\"StatusEquals: \").append(getStatusEquals());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.listTrainingJobsForHyperParameterTuningJob",
	"Comment": "gets a list of trainingjobsummary objects that describe the training jobs that a hyperparameter tuning joblaunched.",
	"Method": "ListTrainingJobsForHyperParameterTuningJobResult listTrainingJobsForHyperParameterTuningJob(ListTrainingJobsForHyperParameterTuningJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTrainingJobsForHyperParameterTuningJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopLabelingJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.DomainTransferability.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransferable() != null)\r\n        sb.append(\"Transferable: \").append(getTransferable());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Builder.setDualstackEnabled",
	"Comment": "configures the client to use amazon s3 dualstack mode for all requests.",
	"Method": "void setDualstackEnabled(Boolean dualstackEnabled){\r\n    this.dualstackEnabled = dualstackEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeDBSubnetGroupsAsync",
	"Comment": "simplified method form for invoking the describedbsubnetgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBSubnetGroupsResult> describeDBSubnetGroupsAsync(DescribeDBSubnetGroupsRequest request,java.util.concurrent.Future<DescribeDBSubnetGroupsResult> describeDBSubnetGroupsAsync,DescribeDBSubnetGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBSubnetGroupsRequest, DescribeDBSubnetGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeDBSubnetGroupsResult> describeDBSubnetGroupsAsync,java.util.concurrent.Future<DescribeDBSubnetGroupsResult> describeDBSubnetGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBSubnetGroupsRequest, DescribeDBSubnetGroupsResult> asyncHandler){\r\n    return describeDBSubnetGroupsAsync(new DescribeDBSubnetGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getClusterSubnetGroups() != null)\r\n        sb.append(\"ClusterSubnetGroups: \").append(getClusterSubnetGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.VpcSecurityGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVpcSecurityGroupId() != null)\r\n        sb.append(\"VpcSecurityGroupId: \").append(getVpcSecurityGroupId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketInventoryConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket where the inventory configuration will be stored.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeDefaultClusterParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupFamily() != null)\r\n        sb.append(\"ParameterGroupFamily: \").append(getParameterGroupFamily()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.syncDeploymentJob",
	"Comment": "syncrhonizes robots in a fleet to the latest deployment. this is helpful if robots were added after a deployment.",
	"Method": "SyncDeploymentJobResult syncDeploymentJob(SyncDeploymentJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeSyncDeploymentJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.AliasTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getDNSName() != null)\r\n        sb.append(\"DNSName: \").append(getDNSName()).append(\",\");\r\n    if (getEvaluateTargetHealth() != null)\r\n        sb.append(\"EvaluateTargetHealth: \").append(getEvaluateTargetHealth());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.describeSubscribedWorkteam",
	"Comment": "gets information about a work team provided by a vendor. it returns details about the subscription with a vendorin the aws marketplace.",
	"Method": "DescribeSubscribedWorkteamResult describeSubscribedWorkteam(DescribeSubscribedWorkteamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeSubscribedWorkteam(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListSpeechSynthesisTasksRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.MaintenanceTrack.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaintenanceTrackName() != null)\r\n        sb.append(\"MaintenanceTrackName: \").append(getMaintenanceTrackName()).append(\",\");\r\n    if (getDatabaseVersion() != null)\r\n        sb.append(\"DatabaseVersion: \").append(getDatabaseVersion()).append(\",\");\r\n    if (getUpdateTargets() != null)\r\n        sb.append(\"UpdateTargets: \").append(getUpdateTargets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.AclXmlFactory.convertToXmlByteArray",
	"Comment": "converts the specified accesscontrollist object to an xml fragment thatcan be sent to amazon s3.",
	"Method": "byte[] convertToXmlByteArray(AccessControlList acl){\r\n    Owner owner = acl.getOwner();\r\n    if (owner == null) {\r\n        throw new SdkClientException(\"Invalid AccessControlList: missing an S3Owner\");\r\n    }\r\n    XmlWriter xml = new XmlWriter();\r\n    xml.start(\"AccessControlPolicy\", \"xmlns\", Constants.XML_NAMESPACE);\r\n    xml.start(\"Owner\");\r\n    if (owner.getId() != null) {\r\n        xml.start(\"ID\").value(owner.getId()).end();\r\n    }\r\n    if (owner.getDisplayName() != null) {\r\n        xml.start(\"DisplayName\").value(owner.getDisplayName()).end();\r\n    }\r\n    xml.end();\r\n    xml.start(\"AccessControlList\");\r\n    for (Grant grant : acl.getGrantsAsList()) {\r\n        xml.start(\"Grant\");\r\n        convertToXml(grant.getGrantee(), xml);\r\n        xml.start(\"Permission\").value(grant.getPermission().toString()).end();\r\n        xml.end();\r\n    }\r\n    xml.end();\r\n    xml.end();\r\n    return xml.getBytes();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeModelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelName() != null)\r\n        sb.append(\"ModelName: \").append(getModelName()).append(\",\");\r\n    if (getPrimaryContainer() != null)\r\n        sb.append(\"PrimaryContainer: \").append(getPrimaryContainer()).append(\",\");\r\n    if (getContainers() != null)\r\n        sb.append(\"Containers: \").append(getContainers()).append(\",\");\r\n    if (getExecutionRoleArn() != null)\r\n        sb.append(\"ExecutionRoleArn: \").append(getExecutionRoleArn()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getModelArn() != null)\r\n        sb.append(\"ModelArn: \").append(getModelArn()).append(\",\");\r\n    if (getEnableNetworkIsolation() != null)\r\n        sb.append(\"EnableNetworkIsolation: \").append(getEnableNetworkIsolation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ObjectiveStatusCounters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSucceeded() != null)\r\n        sb.append(\"Succeeded: \").append(getSucceeded()).append(\",\");\r\n    if (getPending() != null)\r\n        sb.append(\"Pending: \").append(getPending()).append(\",\");\r\n    if (getFailed() != null)\r\n        sb.append(\"Failed: \").append(getFailed());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.model.DescribeServicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServices() != null)\r\n        sb.append(\"Services: \").append(getServices()).append(\",\");\r\n    if (getFormatVersion() != null)\r\n        sb.append(\"FormatVersion: \").append(getFormatVersion()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RestoreDBClusterFromSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getBacktrackWindow() != null)\r\n        sb.append(\"BacktrackWindow: \").append(getBacktrackWindow()).append(\",\");\r\n    if (getEnableCloudwatchLogsExports() != null)\r\n        sb.append(\"EnableCloudwatchLogsExports: \").append(getEnableCloudwatchLogsExports()).append(\",\");\r\n    if (getEngineMode() != null)\r\n        sb.append(\"EngineMode: \").append(getEngineMode()).append(\",\");\r\n    if (getScalingConfiguration() != null)\r\n        sb.append(\"ScalingConfiguration: \").append(getScalingConfiguration()).append(\",\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose website configuration is being\tretrieved.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeSnapshotCopyGrantsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getSnapshotCopyGrants() != null)\r\n        sb.append(\"SnapshotCopyGrants: \").append(getSnapshotCopyGrants());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateSimulationJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getOutputLocation() != null)\r\n        sb.append(\"OutputLocation: \").append(getOutputLocation()).append(\",\");\r\n    if (getMaxJobDurationInSeconds() != null)\r\n        sb.append(\"MaxJobDurationInSeconds: \").append(getMaxJobDurationInSeconds()).append(\",\");\r\n    if (getIamRole() != null)\r\n        sb.append(\"IamRole: \").append(getIamRole()).append(\",\");\r\n    if (getFailureBehavior() != null)\r\n        sb.append(\"FailureBehavior: \").append(getFailureBehavior()).append(\",\");\r\n    if (getRobotApplications() != null)\r\n        sb.append(\"RobotApplications: \").append(getRobotApplications()).append(\",\");\r\n    if (getSimulationApplications() != null)\r\n        sb.append(\"SimulationApplications: \").append(getSimulationApplications()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.OutputConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3OutputLocation() != null)\r\n        sb.append(\"S3OutputLocation: \").append(getS3OutputLocation()).append(\",\");\r\n    if (getTargetDevice() != null)\r\n        sb.append(\"TargetDevice: \").append(getTargetDevice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpoints() != null)\r\n        sb.append(\"Endpoints: \").append(getEndpoints()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeleteRobotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRobot() != null)\r\n        sb.append(\"Robot: \").append(getRobot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerConfiguration.getMinimumUploadPartSize",
	"Comment": "returns the minimum part size for upload parts.decreasing the minimum part size causesmultipart uploads to be split into a larger numberof smaller parts. setting this value too low has a negative effecton transfer speeds, causing extra latency and networkcommunication for each part.",
	"Method": "long getMinimumUploadPartSize(){\r\n    return minimumUploadPartSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CancelResizeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetNodeType() != null)\r\n        sb.append(\"TargetNodeType: \").append(getTargetNodeType()).append(\",\");\r\n    if (getTargetNumberOfNodes() != null)\r\n        sb.append(\"TargetNumberOfNodes: \").append(getTargetNumberOfNodes()).append(\",\");\r\n    if (getTargetClusterType() != null)\r\n        sb.append(\"TargetClusterType: \").append(getTargetClusterType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getImportTablesCompleted() != null)\r\n        sb.append(\"ImportTablesCompleted: \").append(getImportTablesCompleted()).append(\",\");\r\n    if (getImportTablesInProgress() != null)\r\n        sb.append(\"ImportTablesInProgress: \").append(getImportTablesInProgress()).append(\",\");\r\n    if (getImportTablesNotStarted() != null)\r\n        sb.append(\"ImportTablesNotStarted: \").append(getImportTablesNotStarted()).append(\",\");\r\n    if (getAvgResizeRateInMegaBytesPerSecond() != null)\r\n        sb.append(\"AvgResizeRateInMegaBytesPerSecond: \").append(getAvgResizeRateInMegaBytesPerSecond()).append(\",\");\r\n    if (getTotalResizeDataInMegaBytes() != null)\r\n        sb.append(\"TotalResizeDataInMegaBytes: \").append(getTotalResizeDataInMegaBytes()).append(\",\");\r\n    if (getProgressInMegaBytes() != null)\r\n        sb.append(\"ProgressInMegaBytes: \").append(getProgressInMegaBytes()).append(\",\");\r\n    if (getElapsedTimeInSeconds() != null)\r\n        sb.append(\"ElapsedTimeInSeconds: \").append(getElapsedTimeInSeconds()).append(\",\");\r\n    if (getEstimatedTimeToCompletionInSeconds() != null)\r\n        sb.append(\"EstimatedTimeToCompletionInSeconds: \").append(getEstimatedTimeToCompletionInSeconds()).append(\",\");\r\n    if (getResizeType() != null)\r\n        sb.append(\"ResizeType: \").append(getResizeType()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getTargetEncryptionType() != null)\r\n        sb.append(\"TargetEncryptionType: \").append(getTargetEncryptionType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.withPrefix",
	"Comment": "sets the prefix to use when exporting data. the exported data begins with this prefix.the object is returned for method chaining.",
	"Method": "AnalyticsS3BucketDestination withPrefix(String prefix){\r\n    setPrefix(prefix);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeEndpointConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointConfigName() != null)\r\n        sb.append(\"EndpointConfigName: \").append(getEndpointConfigName()).append(\",\");\r\n    if (getEndpointConfigArn() != null)\r\n        sb.append(\"EndpointConfigArn: \").append(getEndpointConfigArn()).append(\",\");\r\n    if (getProductionVariants() != null)\r\n        sb.append(\"ProductionVariants: \").append(getProductionVariants()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.QueueConfiguration.getQueueARN",
	"Comment": "returns the queue arn for this notification configuration.",
	"Method": "String getQueueARN(){\r\n    return queueARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.getKey",
	"Comment": "gets the key under which the object whose acl to be retrieved is stored.",
	"Method": "String getKey(){\r\n    return s3ObjectIdBuilder.getKey();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.withKey",
	"Comment": "sets the key of the object to delete and returns this object, enablingadditional method calls to be chained together.",
	"Method": "DeleteObjectRequest withKey(String key){\r\n    setKey(key);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTrafficPolicyInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneIdMarker() != null)\r\n        sb.append(\"HostedZoneIdMarker: \").append(getHostedZoneIdMarker()).append(\",\");\r\n    if (getTrafficPolicyInstanceNameMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceNameMarker: \").append(getTrafficPolicyInstanceNameMarker()).append(\",\");\r\n    if (getTrafficPolicyInstanceTypeMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceTypeMarker: \").append(getTrafficPolicyInstanceTypeMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setPrefix",
	"Comment": "for internal use only.sets the prefix parameteroriginally used to request this object listing.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.TransferDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartResult.setETag",
	"Comment": "sets the etag value for the new part that was created from theassociated copy object request.",
	"Method": "void setETag(String etag){\r\n    this.etag = etag;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBoundingBox() != null)\r\n        sb.append(\"BoundingBox: \").append(getBoundingBox()).append(\",\");\r\n    if (getAgeRange() != null)\r\n        sb.append(\"AgeRange: \").append(getAgeRange()).append(\",\");\r\n    if (getSmile() != null)\r\n        sb.append(\"Smile: \").append(getSmile()).append(\",\");\r\n    if (getEyeglasses() != null)\r\n        sb.append(\"Eyeglasses: \").append(getEyeglasses()).append(\",\");\r\n    if (getSunglasses() != null)\r\n        sb.append(\"Sunglasses: \").append(getSunglasses()).append(\",\");\r\n    if (getGender() != null)\r\n        sb.append(\"Gender: \").append(getGender()).append(\",\");\r\n    if (getBeard() != null)\r\n        sb.append(\"Beard: \").append(getBeard()).append(\",\");\r\n    if (getMustache() != null)\r\n        sb.append(\"Mustache: \").append(getMustache()).append(\",\");\r\n    if (getEyesOpen() != null)\r\n        sb.append(\"EyesOpen: \").append(getEyesOpen()).append(\",\");\r\n    if (getMouthOpen() != null)\r\n        sb.append(\"MouthOpen: \").append(getMouthOpen()).append(\",\");\r\n    if (getEmotions() != null)\r\n        sb.append(\"Emotions: \").append(getEmotions()).append(\",\");\r\n    if (getLandmarks() != null)\r\n        sb.append(\"Landmarks: \").append(getLandmarks()).append(\",\");\r\n    if (getPose() != null)\r\n        sb.append(\"Pose: \").append(getPose()).append(\",\");\r\n    if (getQuality() != null)\r\n        sb.append(\"Quality: \").append(getQuality()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBSnapshotAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValues() != null)\r\n        sb.append(\"AttributeValues: \").append(getAttributeValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the uploads to list.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.updateEndpointWeightsAndCapacities",
	"Comment": "updates variant weight of one or more variants associated with an existing endpoint, or capacity of one variantassociated with an existing endpoint. when it receives the request, amazon sagemaker sets the endpoint status toupdating. after updating the endpoint, it sets the status to inservice. to check thestatus of an endpoint, use the describeendpoint api.",
	"Method": "UpdateEndpointWeightsAndCapacitiesResult updateEndpointWeightsAndCapacities(UpdateEndpointWeightsAndCapacitiesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateEndpointWeightsAndCapacities(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.UpdateResolverRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRule() != null)\r\n        sb.append(\"ResolverRule: \").append(getResolverRule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketEncryptionRequest.setBucketName",
	"Comment": "the name of the bucket for which to set the encryption configuration.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeSubscribedWorkteamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscribedWorkteam() != null)\r\n        sb.append(\"SubscribedWorkteam: \").append(getSubscribedWorkteam());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.revokeSnapshotAccess",
	"Comment": "removes the ability of the specified aws customer account to restore the specified snapshot. if the account iscurrently restoring the snapshot, the restore will run to completion.for more information about working with snapshots, go to amazon redshift snapshotsin the amazon redshift cluster management guide.",
	"Method": "Snapshot revokeSnapshotAccess(RevokeSnapshotAccessRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRevokeSnapshotAccess(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.EnableDomainAutoRenewResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getObjectLockLegalHoldStatus",
	"Comment": "specifies whether you want to apply a legal hold to the copied object.",
	"Method": "String getObjectLockLegalHoldStatus(){\r\n    return objectLockLegalHoldStatus;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeDBEngineVersionsAsync",
	"Comment": "simplified method form for invoking the describedbengineversions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBEngineVersionsResult> describeDBEngineVersionsAsync(DescribeDBEngineVersionsRequest request,java.util.concurrent.Future<DescribeDBEngineVersionsResult> describeDBEngineVersionsAsync,DescribeDBEngineVersionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBEngineVersionsRequest, DescribeDBEngineVersionsResult> asyncHandler,java.util.concurrent.Future<DescribeDBEngineVersionsResult> describeDBEngineVersionsAsync,java.util.concurrent.Future<DescribeDBEngineVersionsResult> describeDBEngineVersionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBEngineVersionsRequest, DescribeDBEngineVersionsResult> asyncHandler){\r\n    return describeDBEngineVersionsAsync(new DescribeDBEngineVersionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withNewObjectMetadata",
	"Comment": "sets the object metadata to use for the new, copied object and returnsthis object, enabling additional method calls to be chained together. bydefault, the object metadata from the source object will be copied to thedestination object, but if callers set object metadata with this method,it will be used instead.",
	"Method": "CopyObjectRequest withNewObjectMetadata(ObjectMetadata newObjectMetadata){\r\n    setNewObjectMetadata(newObjectMetadata);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.DeleteResolverEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpoint() != null)\r\n        sb.append(\"ResolverEndpoint: \").append(getResolverEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the multipart uploads to list.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobResourceConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVolumeKmsKeyId() != null)\r\n        sb.append(\"VolumeKmsKeyId: \").append(getVolumeKmsKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.resolveServiceEndpoint",
	"Comment": "specifically made package access for testing.used for internal consumption of aws sdk.tries to determine the service endpoint for the bucket name.returns the endpoint configured in the client if the region cannot be determined.",
	"Method": "URI resolveServiceEndpoint(String bucketName){\r\n    if (getSignerRegion() != null || isSignerOverridden())\r\n        return endpoint;\r\n    final String regionStr = fetchRegionFromCache(bucketName);\r\n    final com.amazonaws.regions.Region region = RegionUtils.getRegion(regionStr);\r\n    if (region == null) {\r\n        log.warn(\"Region information for \" + regionStr + \" is not available. Please upgrade to latest version of AWS Java SDK\");\r\n    }\r\n    return region != null ? RuntimeHttpUtils.toUri(region.getServiceEndpoint(S3_SERVICE_NAME), clientConfiguration) : endpoint;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SetDimension.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDimensionType() != null)\r\n        sb.append(\"DimensionType: \").append(getDimensionType()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetTrafficPolicyInstanceCountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.UploadCallable.uploadPartsInSeries",
	"Comment": "uploads all parts in the request in serial in this thread, then completesthe upload and returns the result.",
	"Method": "UploadResult uploadPartsInSeries(UploadPartRequestFactory requestFactory){\r\n    final List<PartETag> partETags = new ArrayList<PartETag>();\r\n    while (requestFactory.hasMoreRequests()) {\r\n        if (threadPool.isShutdown())\r\n            throw new CancellationException(\"TransferManager has been shutdown\");\r\n        UploadPartRequest uploadPartRequest = requestFactory.getNextUploadPartRequest();\r\n        InputStream inputStream = uploadPartRequest.getInputStream();\r\n        if (inputStream != null && inputStream.markSupported()) {\r\n            if (uploadPartRequest.getPartSize() >= Integer.MAX_VALUE) {\r\n                inputStream.mark(Integer.MAX_VALUE);\r\n            } else {\r\n                inputStream.mark((int) uploadPartRequest.getPartSize());\r\n            }\r\n        }\r\n        partETags.add(s3.uploadPart(uploadPartRequest).getPartETag());\r\n    }\r\n    CompleteMultipartUploadRequest req = new CompleteMultipartUploadRequest(origReq.getBucketName(), origReq.getKey(), multipartUploadId, partETags).withRequesterPays(origReq.isRequesterPays()).withGeneralProgressListener(origReq.getGeneralProgressListener()).withRequestMetricCollector(origReq.getRequestMetricCollector());\r\n    CompleteMultipartUploadResult res = s3.completeMultipartUpload(req);\r\n    UploadResult uploadResult = new UploadResult();\r\n    uploadResult.setBucketName(res.getBucketName());\r\n    uploadResult.setKey(res.getKey());\r\n    uploadResult.setETag(res.getETag());\r\n    uploadResult.setVersionId(res.getVersionId());\r\n    return uploadResult;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.removeTagsFromResource",
	"Comment": "removes metadata tags from an amazon rds resource.for an overview on tagging an amazon rds resource, see tagging amazon rdsresources in the amazon rds user guide.",
	"Method": "RemoveTagsFromResourceResult removeTagsFromResource(RemoveTagsFromResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRemoveTagsFromResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketMetricsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket for which the metrics configuration is set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.BatchDescribeSimulationJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs()).append(\",\");\r\n    if (getUnprocessedJobs() != null)\r\n        sb.append(\"UnprocessedJobs: \").append(getUnprocessedJobs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setPrefix",
	"Comment": "for internal use only. sets the prefix parameteroriginally used to request this version listing.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose logging configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.DeleteConfigurationSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyEventSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RevokeDBSecurityGroupIngressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSecurityGroupName() != null)\r\n        sb.append(\"DBSecurityGroupName: \").append(getDBSecurityGroupName()).append(\",\");\r\n    if (getCIDRIP() != null)\r\n        sb.append(\"CIDRIP: \").append(getCIDRIP()).append(\",\");\r\n    if (getEC2SecurityGroupName() != null)\r\n        sb.append(\"EC2SecurityGroupName: \").append(getEC2SecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupId() != null)\r\n        sb.append(\"EC2SecurityGroupId: \").append(getEC2SecurityGroupId()).append(\",\");\r\n    if (getEC2SecurityGroupOwnerId() != null)\r\n        sb.append(\"EC2SecurityGroupOwnerId: \").append(getEC2SecurityGroupOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.CopyCallable.copyPartsInParallel",
	"Comment": "submits a callable for each part to be copied to our thread pool andrecords its corresponding future.",
	"Method": "void copyPartsInParallel(CopyPartRequestFactory requestFactory){\r\n    while (requestFactory.hasMoreRequests()) {\r\n        if (threadPool.isShutdown())\r\n            throw new CancellationException(\"TransferManager has been shutdown\");\r\n        CopyPartRequest request = requestFactory.getNextCopyPartRequest();\r\n        futures.add(threadPool.submit(new CopyPartCallable(s3, request)));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateGlobalClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalClusterIdentifier() != null)\r\n        sb.append(\"GlobalClusterIdentifier: \").append(getGlobalClusterIdentifier()).append(\",\");\r\n    if (getSourceDBClusterIdentifier() != null)\r\n        sb.append(\"SourceDBClusterIdentifier: \").append(getSourceDBClusterIdentifier()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeGlobalClustersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalClusterIdentifier() != null)\r\n        sb.append(\"GlobalClusterIdentifier: \").append(getGlobalClusterIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeClusterSecurityGroups",
	"Comment": "returns information about amazon redshift security groups. if the name of a security group is specified, theresponse will contain only information about only that security group.for information about managing security groups, go to amazon redshift clustersecurity groups in the amazon redshift cluster management guide.if you specify both tag keys and tag values in the same request, amazon redshift returns all security groups thatmatch any combination of the specified keys and values. for example, if you have owner andenvironment for tag keys, and admin and test for tag values, all securitygroups that have any combination of those values are returned.if both tag keys and values are omitted from the request, security groups are returned regardless of whether theyhave tag keys or values associated with them.",
	"Method": "DescribeClusterSecurityGroupsResult describeClusterSecurityGroups(DescribeClusterSecurityGroupsRequest request,DescribeClusterSecurityGroupsResult describeClusterSecurityGroups){\r\n    return describeClusterSecurityGroups(new DescribeClusterSecurityGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.withKey",
	"Comment": "sets the key of the associated multipart upload whose parts are beinglisted, and returns this updated listpartsrequest object so thatadditional method calls can be chained together.",
	"Method": "ListPartsRequest withKey(String key){\r\n    this.key = key;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.GetResolverRulePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.RebootClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketMetricsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket for which the metrics configuration is set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.getTrafficPolicyInstanceCountAsync",
	"Comment": "simplified method form for invoking the gettrafficpolicyinstancecount operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetTrafficPolicyInstanceCountResult> getTrafficPolicyInstanceCountAsync(GetTrafficPolicyInstanceCountRequest request,java.util.concurrent.Future<GetTrafficPolicyInstanceCountResult> getTrafficPolicyInstanceCountAsync,GetTrafficPolicyInstanceCountRequest request,com.amazonaws.handlers.AsyncHandler<GetTrafficPolicyInstanceCountRequest, GetTrafficPolicyInstanceCountResult> asyncHandler,java.util.concurrent.Future<GetTrafficPolicyInstanceCountResult> getTrafficPolicyInstanceCountAsync,java.util.concurrent.Future<GetTrafficPolicyInstanceCountResult> getTrafficPolicyInstanceCountAsync,com.amazonaws.handlers.AsyncHandler<GetTrafficPolicyInstanceCountRequest, GetTrafficPolicyInstanceCountResult> asyncHandler){\r\n    return getTrafficPolicyInstanceCountAsync(new GetTrafficPolicyInstanceCountRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.waiters.GetChangeFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "GetChangeResult apply(GetChangeRequest getChangeRequest){\r\n    return client.getChange(getChangeRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withDestinationKey",
	"Comment": "sets the destination bucket key under which the new, copied objectwill be stored and returns this object, enabling additional method callscan be chained together.",
	"Method": "CopyObjectRequest withDestinationKey(String destinationKey){\r\n    setDestinationKey(destinationKey);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.HostedZoneLimit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateSimulationApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getSimulationSoftwareSuite() != null)\r\n        sb.append(\"SimulationSoftwareSuite: \").append(getSimulationSoftwareSuite()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getRenderingEngine() != null)\r\n        sb.append(\"RenderingEngine: \").append(getRenderingEngine()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose logging configuration is being set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.getEncodingType",
	"Comment": "gets the optional encodingtype parameter indicating theencoding method to be applied on the response.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.getPrefix",
	"Comment": "returns the prefix parameter originally used to request this multipart\tupload listing, or null if no prefix was specified. all\tobjects and common prefixes included in this multipart upload listing\tstart with the specified prefix.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.UpdateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.PauseResult.getInfoToResume",
	"Comment": "returns the information that can be used to resume a successfully pausedoperation.",
	"Method": "T getInfoToResume(){\r\n    return infoToResume;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.RemoveAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributesResource() != null)\r\n        sb.append(\"AttributesResource: \").append(getAttributesResource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeClusterVersions",
	"Comment": "returns descriptions of the available amazon redshift cluster versions. you can call this operation even beforecreating any clusters to learn more about the amazon redshift versions. for more information about managingclusters, go to amazonredshift clusters in the amazon redshift cluster management guide.",
	"Method": "DescribeClusterVersionsResult describeClusterVersions(DescribeClusterVersionsRequest request,DescribeClusterVersionsResult describeClusterVersions){\r\n    return describeClusterVersions(new DescribeClusterVersionsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.DownloadImpl.abortWithoutNotifyingStateChangeListener",
	"Comment": "cancels this download, but skip notifying the state change listeners.",
	"Method": "void abortWithoutNotifyingStateChangeListener(){\r\n    this.monitor.getFuture().cancel(true);\r\n    this.state = TransferState.Canceled;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ResourceLimits.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxNumberOfTrainingJobs() != null)\r\n        sb.append(\"MaxNumberOfTrainingJobs: \").append(getMaxNumberOfTrainingJobs()).append(\",\");\r\n    if (getMaxParallelTrainingJobs() != null)\r\n        sb.append(\"MaxParallelTrainingJobs: \").append(getMaxParallelTrainingJobs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBInstanceAutomatedBackupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDbiResourceId() != null)\r\n        sb.append(\"DbiResourceId: \").append(getDbiResourceId()).append(\",\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeWorkteamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkteam() != null)\r\n        sb.append(\"Workteam: \").append(getWorkteam());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlClient.putPublicAccessBlock",
	"Comment": "creates or modifies the public access block configuration for an amazon web services account.",
	"Method": "PutPublicAccessBlockResult putPublicAccessBlock(PutPublicAccessBlockRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutPublicAccessBlock(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.withKey",
	"Comment": "sets the key under which the multipart upload to complete is stored, andreturns this updated completemultipartuploadrequest object so thatadditional method calls can be chained together.",
	"Method": "CompleteMultipartUploadRequest withKey(String key){\r\n    this.key = key;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.setRegion",
	"Comment": "sets the name of the amazon s3 region in which this bucket will be created.",
	"Method": "void setRegion(String region){\r\n    this.region = region;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.DownloadCallable.downloadInParallel",
	"Comment": "downloads each part of the object into a separate file synchronously andcombines all the files into a single file.",
	"Method": "void downloadInParallel(int partCount){\r\n    if (lastFullyMergedPartNumber == null) {\r\n        lastFullyMergedPartNumber = 0;\r\n    }\r\n    for (int i = lastFullyMergedPartNumber + 1; i <= partCount; i++) {\r\n        GetObjectRequest getPartRequest = new GetObjectRequest(req.getBucketName(), req.getKey(), req.getVersionId()).withUnmodifiedSinceConstraint(req.getUnmodifiedSinceConstraint()).withModifiedSinceConstraint(req.getModifiedSinceConstraint()).withResponseHeaders(req.getResponseHeaders()).withSSECustomerKey(req.getSSECustomerKey()).withGeneralProgressListener(req.getGeneralProgressListener());\r\n        getPartRequest.setMatchingETagConstraints(req.getMatchingETagConstraints());\r\n        getPartRequest.setNonmatchingETagConstraints(req.getNonmatchingETagConstraints());\r\n        getPartRequest.setRequesterPays(req.isRequesterPays());\r\n        futureFiles.add(executor.submit(new DownloadPartCallable(s3, getPartRequest.withPartNumber(i), dstfile)));\r\n    }\r\n    truncateDestinationFileIfNecessary();\r\n    Future<File> future = executor.submit(new CompleteMultipartDownload(futureFiles, dstfile, download, ++lastFullyMergedPartNumber));\r\n    ((DownloadMonitor) download.getMonitor()).setFuture(future);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.PromoteReadReplicaRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManager.getConfiguration",
	"Comment": "returns the configuration which specifies howthis transfermanager processes requests.",
	"Method": "TransferManagerConfiguration getConfiguration(){\r\n    return configuration;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeEventsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.SnapshotErrorMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getSnapshotClusterIdentifier() != null)\r\n        sb.append(\"SnapshotClusterIdentifier: \").append(getSnapshotClusterIdentifier()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.withTruncated",
	"Comment": "for internal use only. sets the truncated property forthis metrics configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "ListBucketMetricsConfigurationsResult withTruncated(boolean isTruncated){\r\n    setTruncated(isTruncated);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.OperationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getSubmittedDate() != null)\r\n        sb.append(\"SubmittedDate: \").append(getSubmittedDate());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.setAccount",
	"Comment": "sets the account id of the destination bucket. this is only being verified if access control translation is enabled.",
	"Method": "void setAccount(String account){\r\n    this.account = account;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyCurrentDBClusterCapacityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getCapacity() != null)\r\n        sb.append(\"Capacity: \").append(getCapacity()).append(\",\");\r\n    if (getSecondsBeforeTimeout() != null)\r\n        sb.append(\"SecondsBeforeTimeout: \").append(getSecondsBeforeTimeout()).append(\",\");\r\n    if (getTimeoutAction() != null)\r\n        sb.append(\"TimeoutAction: \").append(getTimeoutAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.OutputLocation.setS3",
	"Comment": "sets the s3 location that will receive the results of the restore request.",
	"Method": "void setS3(S3Location s3){\r\n    this.s3 = s3;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectLegalHoldRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "SetObjectLegalHoldRequest withRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.disassociateResolverRule",
	"Comment": "removes the association between a specified resolver rule and a specified vpc.if you disassociate a resolver rule from a vpc, resolver stops forwarding dns queries for the domain name thatyou specified in the resolver rule.",
	"Method": "DisassociateResolverRuleResult disassociateResolverRule(DisassociateResolverRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisassociateResolverRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.createVPCAssociationAuthorization",
	"Comment": "authorizes the aws account that created a specified vpc to submit an associatevpcwithhostedzonerequest to associate the vpc with a specified hosted zone that was created by a different account. to submit acreatevpcassociationauthorization request, you must use the account that created the hosted zone.after you authorize the association, use the account that created the vpc to submit anassociatevpcwithhostedzone request.if you want to associate multiple vpcs that you created by using one account with a hosted zone that you createdby using a different account, you must submit one authorization request for each vpc.",
	"Method": "CreateVPCAssociationAuthorizationResult createVPCAssociationAuthorization(CreateVPCAssociationAuthorizationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateVPCAssociationAuthorization(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateCampaignResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCampaignResponse() != null)\r\n        sb.append(\"CampaignResponse: \").append(getCampaignResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.ServiceUtils.removeQuotes",
	"Comment": "removes any surrounding quotes from the specified string and returns anew string.",
	"Method": "String removeQuotes(String s){\r\n    if (s == null)\r\n        return null;\r\n    s = s.trim();\r\n    if (s.startsWith(\"\\\"\"))\r\n        s = s.substring(1);\r\n    if (s.endsWith(\"\\\"\"))\r\n        s = s.substring(0, s.length() - 1);\r\n    return s;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketPolicyRequest.withBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being set, andreturns the updated request object so that additional method calls can bechained together.",
	"Method": "SetBucketPolicyRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutDedicatedIpInPoolResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.RenewDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getDurationInYears() != null)\r\n        sb.append(\"DurationInYears: \").append(getDurationInYears()).append(\",\");\r\n    if (getCurrentExpiryYear() != null)\r\n        sb.append(\"CurrentExpiryYear: \").append(getCurrentExpiryYear());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.RetrieveDomainAuthCodeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthCode() != null)\r\n        sb.append(\"AuthCode: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeHsmClientCertificates",
	"Comment": "returns information about the specified hsm client certificate. if no certificate id is specified, returnsinformation about all the hsm certificates owned by your aws customer account.if you specify both tag keys and tag values in the same request, amazon redshift returns all hsm clientcertificates that match any combination of the specified keys and values. for example, if you haveowner and environment for tag keys, and admin and test fortag values, all hsm client certificates that have any combination of those values are returned.if both tag keys and values are omitted from the request, hsm client certificates are returned regardless ofwhether they have tag keys or values associated with them.",
	"Method": "DescribeHsmClientCertificatesResult describeHsmClientCertificates(DescribeHsmClientCertificatesRequest request,DescribeHsmClientCertificatesResult describeHsmClientCertificates){\r\n    return describeHsmClientCertificates(new DescribeHsmClientCertificatesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.PurchaseReservedDBInstancesOfferingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedDBInstancesOfferingId() != null)\r\n        sb.append(\"ReservedDBInstancesOfferingId: \").append(getReservedDBInstancesOfferingId()).append(\",\");\r\n    if (getReservedDBInstanceId() != null)\r\n        sb.append(\"ReservedDBInstanceId: \").append(getReservedDBInstanceId()).append(\",\");\r\n    if (getDBInstanceCount() != null)\r\n        sb.append(\"DBInstanceCount: \").append(getDBInstanceCount()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteOptionGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateQueryLoggingConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getCloudWatchLogsLogGroupArn() != null)\r\n        sb.append(\"CloudWatchLogsLogGroupArn: \").append(getCloudWatchLogsLogGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ReservedNodeOffering.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedNodeOfferingId() != null)\r\n        sb.append(\"ReservedNodeOfferingId: \").append(getReservedNodeOfferingId()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getRecurringCharges() != null)\r\n        sb.append(\"RecurringCharges: \").append(getRecurringCharges()).append(\",\");\r\n    if (getReservedNodeOfferingType() != null)\r\n        sb.append(\"ReservedNodeOfferingType: \").append(getReservedNodeOfferingType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Geometry.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBoundingBox() != null)\r\n        sb.append(\"BoundingBox: \").append(getBoundingBox()).append(\",\");\r\n    if (getPolygon() != null)\r\n        sb.append(\"Polygon: \").append(getPolygon());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeSimulationJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getFailureBehavior() != null)\r\n        sb.append(\"FailureBehavior: \").append(getFailureBehavior()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getOutputLocation() != null)\r\n        sb.append(\"OutputLocation: \").append(getOutputLocation()).append(\",\");\r\n    if (getMaxJobDurationInSeconds() != null)\r\n        sb.append(\"MaxJobDurationInSeconds: \").append(getMaxJobDurationInSeconds()).append(\",\");\r\n    if (getSimulationTimeMillis() != null)\r\n        sb.append(\"SimulationTimeMillis: \").append(getSimulationTimeMillis()).append(\",\");\r\n    if (getIamRole() != null)\r\n        sb.append(\"IamRole: \").append(getIamRole()).append(\",\");\r\n    if (getRobotApplications() != null)\r\n        sb.append(\"RobotApplications: \").append(getRobotApplications()).append(\",\");\r\n    if (getSimulationApplications() != null)\r\n        sb.append(\"SimulationApplications: \").append(getSimulationApplications()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ReusableDelegationSetLimit.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.TargetAddress.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIp() != null)\r\n        sb.append(\"Ip: \").append(getIp()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withObjectLockLegalHoldStatus",
	"Comment": "the legal hold status that you want to apply to the specified object.",
	"Method": "InitiateMultipartUploadRequest withObjectLockLegalHoldStatus(String objectLockLegalHoldStatus,InitiateMultipartUploadRequest withObjectLockLegalHoldStatus,ObjectLockLegalHoldStatus objectLockLegalHoldStatus){\r\n    return withObjectLockLegalHoldStatus(objectLockLegalHoldStatus.toString());\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeReservedNodeOfferingsAsync",
	"Comment": "simplified method form for invoking the describereservednodeofferings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync(DescribeReservedNodeOfferingsRequest request,java.util.concurrent.Future<DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync,DescribeReservedNodeOfferingsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedNodeOfferingsRequest, DescribeReservedNodeOfferingsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync,java.util.concurrent.Future<DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedNodeOfferingsRequest, DescribeReservedNodeOfferingsResult> asyncHandler){\r\n    return describeReservedNodeOfferingsAsync(new DescribeReservedNodeOfferingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeAccountAttributesAsync",
	"Comment": "simplified method form for invoking the describeaccountattributes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync(DescribeAccountAttributesRequest request,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,DescribeAccountAttributesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAccountAttributesRequest, DescribeAccountAttributesResult> asyncHandler,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,com.amazonaws.handlers.AsyncHandler<DescribeAccountAttributesRequest, DescribeAccountAttributesResult> asyncHandler){\r\n    return describeAccountAttributesAsync(new DescribeAccountAttributesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.getBucketARN",
	"Comment": "returns the amazon s3 bucket arn where the replicas are present.",
	"Method": "String getBucketARN(){\r\n    return bucketARN;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectSummary.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket in which this object is stored.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose cross origin configuration is being set,and returns this object so that additional method calls may be chainedtogether.",
	"Method": "SetBucketCrossOriginConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.CloudWatchLogsDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamRoleArn() != null)\r\n        sb.append(\"IamRoleArn: \").append(getIamRoleArn()).append(\",\");\r\n    if (getLogGroupArn() != null)\r\n        sb.append(\"LogGroupArn: \").append(getLogGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonpolly using the current builder configuration.",
	"Method": "AmazonPolly build(AwsSyncClientParams params){\r\n    return new AmazonPollyClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.resolveRequestEndpoint",
	"Comment": "configure the given request with an endpoint and resource path based on the bucket name andkey provided",
	"Method": "void resolveRequestEndpoint(Request<?> request,String bucketName,String key,URI endpoint){\r\n    ServiceEndpointBuilder builder = getBuilder(endpoint, endpoint.getScheme(), false);\r\n    buildEndpointResolver(builder, bucketName, key).resolveRequestEndpoint(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.UpdateUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectTextResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTextDetections() != null)\r\n        sb.append(\"TextDetections: \").append(getTextDetections());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.AddSourceIdentifierToSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsClient.tag",
	"Comment": "adds specified tags to a resource with the specified arn. existing tags on a resource are not changed if they arenot specified in the request parameters.",
	"Method": "TagResult tag(TagRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTag(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsClient.getTags",
	"Comment": "returns a list of tags that are associated with a resource, specified by an arn.",
	"Method": "GetTagsResult getTags(GetTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.CreateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsrobomakerasync using the current builder configuration.",
	"Method": "AWSRoboMakerAsync build(AwsAsyncClientParams params){\r\n    return new AWSRoboMakerAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.getPartNumber",
	"Comment": "returns the optional part number that indicates a part in multipart object.",
	"Method": "Integer getPartNumber(){\r\n    return partNumber;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.event.S3EventNotification.parseJson",
	"Comment": "parse the json string into a s3eventnotification object.the function will try its best to parse input json string as best as it can.it will not fail even if the json string contains unknown properties.the function will throw sdkclientexception if the input json string isnot valid json.",
	"Method": "S3EventNotification parseJson(String json){\r\n    return Jackson.fromJsonString(json, S3EventNotification.class);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectResult.setETag",
	"Comment": "sets the etag value for the new object that was created from theassociated copy object request.",
	"Method": "void setETag(String etag){\r\n    this.etag = etag;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.RobotApplicationSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ResetDBParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getResetAllParameters() != null)\r\n        sb.append(\"ResetAllParameters: \").append(getResetAllParameters()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.EventSubscription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomerAwsId() != null)\r\n        sb.append(\"CustomerAwsId: \").append(getCustomerAwsId()).append(\",\");\r\n    if (getCustSubscriptionId() != null)\r\n        sb.append(\"CustSubscriptionId: \").append(getCustSubscriptionId()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSubscriptionCreationTime() != null)\r\n        sb.append(\"SubscriptionCreationTime: \").append(getSubscriptionCreationTime()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getSourceIdsList() != null)\r\n        sb.append(\"SourceIdsList: \").append(getSourceIdsList()).append(\",\");\r\n    if (getEventCategoriesList() != null)\r\n        sb.append(\"EventCategoriesList: \").append(getEventCategoriesList()).append(\",\");\r\n    if (getSeverity() != null)\r\n        sb.append(\"Severity: \").append(getSeverity()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeDBSnapshotsAsync",
	"Comment": "simplified method form for invoking the describedbsnapshots operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBSnapshotsResult> describeDBSnapshotsAsync(DescribeDBSnapshotsRequest request,java.util.concurrent.Future<DescribeDBSnapshotsResult> describeDBSnapshotsAsync,DescribeDBSnapshotsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBSnapshotsRequest, DescribeDBSnapshotsResult> asyncHandler,java.util.concurrent.Future<DescribeDBSnapshotsResult> describeDBSnapshotsAsync,java.util.concurrent.Future<DescribeDBSnapshotsResult> describeDBSnapshotsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBSnapshotsRequest, DescribeDBSnapshotsResult> asyncHandler){\r\n    return describeDBSnapshotsAsync(new DescribeDBSnapshotsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeNotebookInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceArn() != null)\r\n        sb.append(\"NotebookInstanceArn: \").append(getNotebookInstanceArn()).append(\",\");\r\n    if (getNotebookInstanceName() != null)\r\n        sb.append(\"NotebookInstanceName: \").append(getNotebookInstanceName()).append(\",\");\r\n    if (getNotebookInstanceStatus() != null)\r\n        sb.append(\"NotebookInstanceStatus: \").append(getNotebookInstanceStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getUrl() != null)\r\n        sb.append(\"Url: \").append(getUrl()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getSecurityGroups() != null)\r\n        sb.append(\"SecurityGroups: \").append(getSecurityGroups()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getNetworkInterfaceId() != null)\r\n        sb.append(\"NetworkInterfaceId: \").append(getNetworkInterfaceId()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getNotebookInstanceLifecycleConfigName() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigName: \").append(getNotebookInstanceLifecycleConfigName()).append(\",\");\r\n    if (getDirectInternetAccess() != null)\r\n        sb.append(\"DirectInternetAccess: \").append(getDirectInternetAccess()).append(\",\");\r\n    if (getVolumeSizeInGB() != null)\r\n        sb.append(\"VolumeSizeInGB: \").append(getVolumeSizeInGB()).append(\",\");\r\n    if (getAcceleratorTypes() != null)\r\n        sb.append(\"AcceleratorTypes: \").append(getAcceleratorTypes()).append(\",\");\r\n    if (getDefaultCodeRepository() != null)\r\n        sb.append(\"DefaultCodeRepository: \").append(getDefaultCodeRepository()).append(\",\");\r\n    if (getAdditionalCodeRepositories() != null)\r\n        sb.append(\"AdditionalCodeRepositories: \").append(getAdditionalCodeRepositories());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateSimulationApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getSimulationSoftwareSuite() != null)\r\n        sb.append(\"SimulationSoftwareSuite: \").append(getSimulationSoftwareSuite()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getRenderingEngine() != null)\r\n        sb.append(\"RenderingEngine: \").append(getRenderingEngine());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.listTagsForResource",
	"Comment": "lists the tags that you associated with the specified resource.",
	"Method": "ListTagsForResourceResult listTagsForResource(ListTagsForResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTagsForResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeDeploymentJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJob() != null)\r\n        sb.append(\"Job: \").append(getJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.getLifecycleConfiguration",
	"Comment": "gets the new lifecycle configuration for the specified bucket.",
	"Method": "BucketLifecycleConfiguration getLifecycleConfiguration(){\r\n    return lifecycleConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListTransformJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getLastModifiedTimeAfter() != null)\r\n        sb.append(\"LastModifiedTimeAfter: \").append(getLastModifiedTimeAfter()).append(\",\");\r\n    if (getLastModifiedTimeBefore() != null)\r\n        sb.append(\"LastModifiedTimeBefore: \").append(getLastModifiedTimeBefore()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getStatusEquals() != null)\r\n        sb.append(\"StatusEquals: \").append(getStatusEquals()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeReservedNodesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedNodeId() != null)\r\n        sb.append(\"ReservedNodeId: \").append(getReservedNodeId()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeRobotApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.DeleteResolverRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRule() != null)\r\n        sb.append(\"ResolverRule: \").append(getResolverRule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.CopyResult.setDestinationBucketName",
	"Comment": "sets the destination bucket name which will contain the new, copiedobject.",
	"Method": "void setDestinationBucketName(String destinationBucketName){\r\n    this.destinationBucketName = destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.UpdateConfigurationSetEventDestinationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBSubnetGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBody() != null)\r\n        sb.append(\"Body: \").append(getBody()).append(\",\");\r\n    if (getKeyword() != null)\r\n        sb.append(\"Keyword: \").append(getKeyword()).append(\",\");\r\n    if (getMessageType() != null)\r\n        sb.append(\"MessageType: \").append(getMessageType()).append(\",\");\r\n    if (getOriginationNumber() != null)\r\n        sb.append(\"OriginationNumber: \").append(getOriginationNumber()).append(\",\");\r\n    if (getSenderId() != null)\r\n        sb.append(\"SenderId: \").append(getSenderId()).append(\",\");\r\n    if (getSubstitutions() != null)\r\n        sb.append(\"Substitutions: \").append(getSubstitutions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.getObjectMetadata",
	"Comment": "returns the additional information about the new object being created,such as content type, content encoding, user metadata, etc.",
	"Method": "ObjectMetadata getObjectMetadata(){\r\n    return objectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteCodeRepositoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeStorage",
	"Comment": "returns the total amount of snapshot usage and provisioned storage for a user in megabytes.",
	"Method": "DescribeStorageResult describeStorage(DescribeStorageRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeStorage(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.SearchExpression.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getNestedFilters() != null)\r\n        sb.append(\"NestedFilters: \").append(getNestedFilters()).append(\",\");\r\n    if (getSubExpressions() != null)\r\n        sb.append(\"SubExpressions: \").append(getSubExpressions()).append(\",\");\r\n    if (getOperator() != null)\r\n        sb.append(\"Operator: \").append(getOperator());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getEvents() != null)\r\n        sb.append(\"Events: \").append(getEvents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeHsmConfigurationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getHsmConfigurations() != null)\r\n        sb.append(\"HsmConfigurations: \").append(getHsmConfigurations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DelegationSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getCallerReference() != null)\r\n        sb.append(\"CallerReference: \").append(getCallerReference()).append(\",\");\r\n    if (getNameServers() != null)\r\n        sb.append(\"NameServers: \").append(getNameServers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateTrafficPolicyInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicyInstance() != null)\r\n        sb.append(\"TrafficPolicyInstance: \").append(getTrafficPolicyInstance()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.SecuredCEK.getMaterialDescription",
	"Comment": "returns an unmodifable material description of this secured cek.",
	"Method": "Map<String, String> getMaterialDescription(){\r\n    return matdesc;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectupload status.",
	"Method": "void setProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setGeneralProgressListener(new LegacyS3ProgressListener(progressListener));\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterSnapshotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getSnapshotType() != null)\r\n        sb.append(\"SnapshotType: \").append(getSnapshotType()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getOwnerAccount() != null)\r\n        sb.append(\"OwnerAccount: \").append(getOwnerAccount()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues()).append(\",\");\r\n    if (getClusterExists() != null)\r\n        sb.append(\"ClusterExists: \").append(getClusterExists()).append(\",\");\r\n    if (getSortingEntities() != null)\r\n        sb.append(\"SortingEntities: \").append(getSortingEntities());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.StorageClassAnalysis.getDataExport",
	"Comment": "returns the container used to describe how data related to thestorage class analysis should be exported.",
	"Method": "StorageClassAnalysisDataExport getDataExport(){\r\n    return dataExport;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectSummary.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket in which this object is stored.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getRange",
	"Comment": "gets the optional inclusive byte range within the desired objectthat will be downloaded by this request.the range is returned asa two element array, containing the start and end index of the byte range.if no byte range has been specified, the entire object is downloaded andthis method returns null.",
	"Method": "long[] getRange(){\r\n    return range == null ? null : range.clone();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.DeleteUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.UpdateGroupQueryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getResourceQuery() != null)\r\n        sb.append(\"ResourceQuery: \").append(getResourceQuery());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.ReputationOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReputationMetricsEnabled() != null)\r\n        sb.append(\"ReputationMetricsEnabled: \").append(getReputationMetricsEnabled()).append(\",\");\r\n    if (getLastFreshStart() != null)\r\n        sb.append(\"LastFreshStart: \").append(getLastFreshStart());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsRequest.setContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "void setContinuationToken(String continuationToken){\r\n    this.continuationToken = continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.getNextContinuationToken",
	"Comment": "gets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "String getNextContinuationToken(){\r\n    return nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.getPrefix",
	"Comment": "the prefix parameter originally used to request this version listing, ornull if no prefix was specified. all object keys included in this versionlisting start with the specified prefix.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ReservedDBInstancesOffering.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedDBInstancesOfferingId() != null)\r\n        sb.append(\"ReservedDBInstancesOfferingId: \").append(getReservedDBInstancesOfferingId()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getRecurringCharges() != null)\r\n        sb.append(\"RecurringCharges: \").append(getRecurringCharges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.modifyEventSubscription",
	"Comment": "modifies an existing amazon redshift event notification subscription.",
	"Method": "EventSubscription modifyEventSubscription(ModifyEventSubscriptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyEventSubscription(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTrafficPolicyVersionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getTrafficPolicyVersionMarker() != null)\r\n        sb.append(\"TrafficPolicyVersionMarker: \").append(getTrafficPolicyVersionMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateHealthCheckResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheck() != null)\r\n        sb.append(\"HealthCheck: \").append(getHealthCheck()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.withUploadIdMarker",
	"Comment": "sets the optional upload id marker indicating where in the results tobegin listing and returns this updated listmultipartuploadsrequest objectso that additional methods can be chained together.together with the key marker, specifies the multipart upload after whichlisting should begin. if no key marker is specified, the upload id markeris ignored. otherwise, any multipart uploads for a key equal to the keymarker may be included in the list only if they have an upload idlexicographically greater than the specified marker.",
	"Method": "ListMultipartUploadsRequest withUploadIdMarker(String uploadIdMarker){\r\n    this.uploadIdMarker = uploadIdMarker;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getContentDisposition",
	"Comment": "returns the content disposition response header override if it has beenspecified, or null otherwise.",
	"Method": "String getContentDisposition(){\r\n    return contentDisposition;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setMaxParts",
	"Comment": "sets the optional maximum number of parts to be returned in the partlisting.",
	"Method": "void setMaxParts(int maxParts){\r\n    this.maxParts = maxParts;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.setIsDeleteMarker",
	"Comment": "intended for internal use only in the amazon s3 client code. sets the value ofthe isdeletemarker property to record if this is a delete marker or not.",
	"Method": "void setIsDeleteMarker(boolean isDeleteMarker){\r\n    this.isDeleteMarker = isDeleteMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket from which an analytics configuration is to be retrieved.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the multipart upload tocomplete.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListHealthChecksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthChecks() != null)\r\n        sb.append(\"HealthChecks: \").append(getHealthChecks()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.IntegerParameterRangeSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinValue() != null)\r\n        sb.append(\"MinValue: \").append(getMinValue()).append(\",\");\r\n    if (getMaxValue() != null)\r\n        sb.append(\"MaxValue: \").append(getMaxValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListCodeRepositoriesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getLastModifiedTimeAfter() != null)\r\n        sb.append(\"LastModifiedTimeAfter: \").append(getLastModifiedTimeAfter()).append(\",\");\r\n    if (getLastModifiedTimeBefore() != null)\r\n        sb.append(\"LastModifiedTimeBefore: \").append(getLastModifiedTimeBefore()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setMetadataDirective",
	"Comment": "specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.",
	"Method": "void setMetadataDirective(String metadataDirective){\r\n    this.metadataDirective = metadataDirective;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.AWSResourceGroupsTaggingAPIAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of awsresourcegroupstaggingapiasync using the current builderconfiguration.",
	"Method": "AWSResourceGroupsTaggingAPIAsync build(AwsAsyncClientParams params){\r\n    return new AWSResourceGroupsTaggingAPIAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryConfiguration.setInventoryFilter",
	"Comment": "sets the inventoryfilter used to describe a set of objectsto include in inventory results.",
	"Method": "void setInventoryFilter(InventoryFilter inventoryFilter){\r\n    this.inventoryFilter = inventoryFilter;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.UploadResult.getVersionId",
	"Comment": "returns the version id of the new object. the version id is onlyset if versioning has been enabled for the bucket.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.setAbortDate",
	"Comment": "date when multipart upload will become eligible for abort operation by lifecycle.",
	"Method": "void setAbortDate(Date abortDate){\r\n    this.abortDate = abortDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClient.untagResource",
	"Comment": "removes the specified tags from the specified resource share.",
	"Method": "UntagResourceResult untagResource(UntagResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUntagResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.withObjectLockEnabledForBucket",
	"Comment": "specifies whether you want s3 object lock to be enabled for the new bucket.",
	"Method": "CreateBucketRequest withObjectLockEnabledForBucket(boolean objectLockEnabled){\r\n    this.objectLockEnabled = objectLockEnabled;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.withStorageMode",
	"Comment": "sets the storage mode to the specified mode, and returns the updatedcryptoconfiguration object.",
	"Method": "CryptoConfiguration withStorageMode(CryptoStorageMode storageMode,CryptoConfiguration withStorageMode,CryptoStorageMode storageMode){\r\n    this.storageMode = storageMode;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.getVersionId",
	"Comment": "returns the version id of the object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeClusterSubnetGroupsAsync",
	"Comment": "simplified method form for invoking the describeclustersubnetgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync(DescribeClusterSubnetGroupsRequest request,java.util.concurrent.Future<DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync,DescribeClusterSubnetGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClusterSubnetGroupsRequest, DescribeClusterSubnetGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync,java.util.concurrent.Future<DescribeClusterSubnetGroupsResult> describeClusterSubnetGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeClusterSubnetGroupsRequest, DescribeClusterSubnetGroupsResult> asyncHandler){\r\n    return describeClusterSubnetGroupsAsync(new DescribeClusterSubnetGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.StartDBInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerBuilder.isDisableParallelDownloads",
	"Comment": "returns if the parallel downloads are disabled or not. by default, the value is set to false.transfermanager automatically detects and downloads a multipart objectin parallel. setting this option to true will disable parallel downloads.during parallel downloads, each part is downloaded to a temporary file, gets mergedinto the final destination file and will be deleted. these temporary files uses disk space temporarily.disable parallel downloads if your system do not have enough space to store these files during download.disabling parallel downloads might reduce performance for large files.",
	"Method": "Boolean isDisableParallelDownloads(){\r\n    return disableParallelDownloads;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getBucketName",
	"Comment": "returns the name of the bucket containing the listed parts, as specifiedin the original request.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.Lexicon.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DescribeVoicesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVoices() != null)\r\n        sb.append(\"Voices: \").append(getVoices()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.CipherLite.recreate",
	"Comment": "recreates a new instance of cipherlite from the current one.",
	"Method": "CipherLite recreate(){\r\n    return scheme.createCipherLite(secreteKey, cipher.getIV(), this.cipherMode, cipher.getProvider(), true);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.UpdateDomainContactPrivacyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getAdminPrivacy() != null)\r\n        sb.append(\"AdminPrivacy: \").append(getAdminPrivacy()).append(\",\");\r\n    if (getRegistrantPrivacy() != null)\r\n        sb.append(\"RegistrantPrivacy: \").append(getRegistrantPrivacy()).append(\",\");\r\n    if (getTechPrivacy() != null)\r\n        sb.append(\"TechPrivacy: \").append(getTechPrivacy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAccelerateConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose accelerate configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setObjectMetadata",
	"Comment": "sets the additional information about the new object being created, suchas content type, content encoding, user metadata, etc.",
	"Method": "void setObjectMetadata(ObjectMetadata objectMetadata){\r\n    this.objectMetadata = objectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CSVInput.setAllowQuotedRecordDelimiter",
	"Comment": "sets the value used to allow quoted record delimiters to occur within the input.",
	"Method": "void setAllowQuotedRecordDelimiter(Boolean allowQuotedRecordDelimiter){\r\n    this.allowQuotedRecordDelimiter = allowQuotedRecordDelimiter;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Sunglasses.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSynthesisTask() != null)\r\n        sb.append(\"SynthesisTask: \").append(getSynthesisTask());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.GetResourceShareInvitationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareInvitationArns() != null)\r\n        sb.append(\"ResourceShareInvitationArns: \").append(getResourceShareInvitationArns()).append(\",\");\r\n    if (getResourceShareArns() != null)\r\n        sb.append(\"ResourceShareArns: \").append(getResourceShareArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.PutResolverRulePolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getResolverRulePolicy() != null)\r\n        sb.append(\"ResolverRulePolicy: \").append(getResolverRulePolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.associateResolverRule",
	"Comment": "associates a resolver rule with a vpc. when you associate a rule with a vpc, resolver forwards all dns queriesfor the domain name that is specified in the rule and that originate in the vpc. the queries are forwarded to theip addresses for the dns resolvers that are specified in the rule. for more information about rules, seecreateresolverrule.",
	"Method": "AssociateResolverRuleResult associateResolverRule(AssociateResolverRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAssociateResolverRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteVPCAssociationAuthorizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getVPC() != null)\r\n        sb.append(\"VPC: \").append(getVPC());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.getMaxKeys",
	"Comment": "gets the optional maxkeys parameter indicating the maximum number of keys toinclude in the response. amazon s3 might return fewer keys than specified, but willnever return more. even if the optional parameter is not specified,amazon s3 will limit the number of results in the response.",
	"Method": "int getMaxKeys(){\r\n    return maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setFetchOwner",
	"Comment": "sets the optional fetch owner flag.the owner field is not present in listobjectsv2results by default.if this flag is set to true the owner field will be included.",
	"Method": "void setFetchOwner(boolean fetchOwner){\r\n    this.fetchOwner = fetchOwner;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.setAbortRuleId",
	"Comment": "id of the lifecycle rule that makes a multipart upload eligible for abort operation.",
	"Method": "void setAbortRuleId(String abortRuleId){\r\n    this.abortRuleId = abortRuleId;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ModelSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelName() != null)\r\n        sb.append(\"ModelName: \").append(getModelName()).append(\",\");\r\n    if (getModelArn() != null)\r\n        sb.append(\"ModelArn: \").append(getModelArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setMd5Digest",
	"Comment": "sets the optional, but recommended, md5 hash of the content of this part.if specified, this value will be sent to amazon s3 to verify the dataintegrity when the data reaches amazon s3.",
	"Method": "void setMd5Digest(String md5Digest){\r\n    this.md5Digest = md5Digest;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setPrefix",
	"Comment": "for internal use only. sets the prefix parameter originally used to\trequest this multipart upload listing.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.TableRestoreStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTableRestoreRequestId() != null)\r\n        sb.append(\"TableRestoreRequestId: \").append(getTableRestoreRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getRequestTime() != null)\r\n        sb.append(\"RequestTime: \").append(getRequestTime()).append(\",\");\r\n    if (getProgressInMegaBytes() != null)\r\n        sb.append(\"ProgressInMegaBytes: \").append(getProgressInMegaBytes()).append(\",\");\r\n    if (getTotalDataInMegaBytes() != null)\r\n        sb.append(\"TotalDataInMegaBytes: \").append(getTotalDataInMegaBytes()).append(\",\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getSourceDatabaseName() != null)\r\n        sb.append(\"SourceDatabaseName: \").append(getSourceDatabaseName()).append(\",\");\r\n    if (getSourceSchemaName() != null)\r\n        sb.append(\"SourceSchemaName: \").append(getSourceSchemaName()).append(\",\");\r\n    if (getSourceTableName() != null)\r\n        sb.append(\"SourceTableName: \").append(getSourceTableName()).append(\",\");\r\n    if (getTargetDatabaseName() != null)\r\n        sb.append(\"TargetDatabaseName: \").append(getTargetDatabaseName()).append(\",\");\r\n    if (getTargetSchemaName() != null)\r\n        sb.append(\"TargetSchemaName: \").append(getTargetSchemaName()).append(\",\");\r\n    if (getNewTableName() != null)\r\n        sb.append(\"NewTableName: \").append(getNewTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.S3RequestEndpointResolver.convertToVirtualHostEndpoint",
	"Comment": "converts the current endpoint set for this client into virtual addressing style, by placingthe name of the specified bucket before the s3 service endpoint.",
	"Method": "URI convertToVirtualHostEndpoint(URI endpoint,String bucketName){\r\n    try {\r\n        return new URI(String.format(\"%s://%s.%s\", endpoint.getScheme(), bucketName, endpoint.getAuthority()));\r\n    } catch (URISyntaxException e) {\r\n        throw new IllegalArgumentException(\"Invalid bucket name: \" + bucketName, e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateTrainingJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJobName() != null)\r\n        sb.append(\"TrainingJobName: \").append(getTrainingJobName()).append(\",\");\r\n    if (getHyperParameters() != null)\r\n        sb.append(\"HyperParameters: \").append(getHyperParameters()).append(\",\");\r\n    if (getAlgorithmSpecification() != null)\r\n        sb.append(\"AlgorithmSpecification: \").append(getAlgorithmSpecification()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getInputDataConfig() != null)\r\n        sb.append(\"InputDataConfig: \").append(getInputDataConfig()).append(\",\");\r\n    if (getOutputDataConfig() != null)\r\n        sb.append(\"OutputDataConfig: \").append(getOutputDataConfig()).append(\",\");\r\n    if (getResourceConfig() != null)\r\n        sb.append(\"ResourceConfig: \").append(getResourceConfig()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getStoppingCondition() != null)\r\n        sb.append(\"StoppingCondition: \").append(getStoppingCondition()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getEnableNetworkIsolation() != null)\r\n        sb.append(\"EnableNetworkIsolation: \").append(getEnableNetworkIsolation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.GetDomainDetailResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getNameservers() != null)\r\n        sb.append(\"Nameservers: \").append(getNameservers()).append(\",\");\r\n    if (getAutoRenew() != null)\r\n        sb.append(\"AutoRenew: \").append(getAutoRenew()).append(\",\");\r\n    if (getAdminContact() != null)\r\n        sb.append(\"AdminContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRegistrantContact() != null)\r\n        sb.append(\"RegistrantContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getTechContact() != null)\r\n        sb.append(\"TechContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getAdminPrivacy() != null)\r\n        sb.append(\"AdminPrivacy: \").append(getAdminPrivacy()).append(\",\");\r\n    if (getRegistrantPrivacy() != null)\r\n        sb.append(\"RegistrantPrivacy: \").append(getRegistrantPrivacy()).append(\",\");\r\n    if (getTechPrivacy() != null)\r\n        sb.append(\"TechPrivacy: \").append(getTechPrivacy()).append(\",\");\r\n    if (getRegistrarName() != null)\r\n        sb.append(\"RegistrarName: \").append(getRegistrarName()).append(\",\");\r\n    if (getWhoIsServer() != null)\r\n        sb.append(\"WhoIsServer: \").append(getWhoIsServer()).append(\",\");\r\n    if (getRegistrarUrl() != null)\r\n        sb.append(\"RegistrarUrl: \").append(getRegistrarUrl()).append(\",\");\r\n    if (getAbuseContactEmail() != null)\r\n        sb.append(\"AbuseContactEmail: \").append(getAbuseContactEmail()).append(\",\");\r\n    if (getAbuseContactPhone() != null)\r\n        sb.append(\"AbuseContactPhone: \").append(getAbuseContactPhone()).append(\",\");\r\n    if (getRegistryDomainId() != null)\r\n        sb.append(\"RegistryDomainId: \").append(getRegistryDomainId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getUpdatedDate() != null)\r\n        sb.append(\"UpdatedDate: \").append(getUpdatedDate()).append(\",\");\r\n    if (getExpirationDate() != null)\r\n        sb.append(\"ExpirationDate: \").append(getExpirationDate()).append(\",\");\r\n    if (getReseller() != null)\r\n        sb.append(\"Reseller: \").append(getReseller()).append(\",\");\r\n    if (getDnsSec() != null)\r\n        sb.append(\"DnsSec: \").append(getDnsSec()).append(\",\");\r\n    if (getStatusList() != null)\r\n        sb.append(\"StatusList: \").append(getStatusList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetPublicAccessBlockRequest.getPublicAccessBlockConfiguration",
	"Comment": "the public access block configuration that you want to apply to this amazon s3 bucket.",
	"Method": "PublicAccessBlockConfiguration getPublicAccessBlockConfiguration(){\r\n    return publicAccessBlockConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.model.Filter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getField() != null)\r\n        sb.append(\"Field: \").append(getField()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.RenewDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.withSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "T withSSEAwsKeyManagementParams(SSEAwsKeyManagementParams sseAwsKeyManagementParams){\r\n    setSSEAwsKeyManagementParams(sseAwsKeyManagementParams);\r\n    @SuppressWarnings(\"unchecked\")\r\n    T t = (T) this;\r\n    return t;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.DisableDomainTransferLockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeletePublicAccessBlockRequest.setBucketName",
	"Comment": "the amazon s3 bucket whose public access block configuration you want to delete.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeEventsAsync",
	"Comment": "simplified method form for invoking the describeevents operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync(DescribeEventsRequest request,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,DescribeEventsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,java.util.concurrent.Future<DescribeEventsResult> describeEventsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventsRequest, DescribeEventsResult> asyncHandler){\r\n    return describeEventsAsync(new DescribeEventsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlClientBuilder.enableFips",
	"Comment": "enables use of fips endpoints on clients built with this builder.",
	"Method": "AWSS3ControlClientBuilder enableFips(){\r\n    return withFipsEnabled(true);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.HyperParameterTuningJobObjective.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.Change.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAction() != null)\r\n        sb.append(\"Action: \").append(getAction()).append(\",\");\r\n    if (getResourceRecordSet() != null)\r\n        sb.append(\"ResourceRecordSet: \").append(getResourceRecordSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SseKmsEncryptedObjects.setStatus",
	"Comment": "sets the replication status for kms encrypted objects. kms encrypted s3 objects are not replicated if status is disabled.",
	"Method": "void setStatus(String status){\r\n    this.status = status;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ResetClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterGroupName() != null)\r\n        sb.append(\"ParameterGroupName: \").append(getParameterGroupName()).append(\",\");\r\n    if (getResetAllParameters() != null)\r\n        sb.append(\"ResetAllParameters: \").append(getResetAllParameters()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the multipart upload to abort.",
	"Method": "String getBucketName(){\r\n    return this.bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getDestinationBucketName",
	"Comment": "gets the destination bucket name which will contain the new,copied object.",
	"Method": "String getDestinationBucketName(){\r\n    return destinationBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.AbstractTransfer.unwrapExecutionException",
	"Comment": "unwraps the root exception that caused the specified executionexceptionand returns it. if it was not an instance of amazonclientexception, it iswrapped as an amazonclientexception.",
	"Method": "AmazonClientException unwrapExecutionException(ExecutionException e){\r\n    Throwable t = e;\r\n    while (t.getCause() != null && t instanceof ExecutionException) {\r\n        t = t.getCause();\r\n    }\r\n    if (t instanceof AmazonClientException) {\r\n        return (AmazonClientException) t;\r\n    }\r\n    return new AmazonClientException(\"Unable to complete transfer: \" + t.getMessage(), t);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.getHostedZoneCountAsync",
	"Comment": "simplified method form for invoking the gethostedzonecount operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetHostedZoneCountResult> getHostedZoneCountAsync(GetHostedZoneCountRequest request,java.util.concurrent.Future<GetHostedZoneCountResult> getHostedZoneCountAsync,GetHostedZoneCountRequest request,com.amazonaws.handlers.AsyncHandler<GetHostedZoneCountRequest, GetHostedZoneCountResult> asyncHandler,java.util.concurrent.Future<GetHostedZoneCountResult> getHostedZoneCountAsync,java.util.concurrent.Future<GetHostedZoneCountResult> getHostedZoneCountAsync,com.amazonaws.handlers.AsyncHandler<GetHostedZoneCountRequest, GetHostedZoneCountResult> asyncHandler){\r\n    return getHostedZoneCountAsync(new GetHostedZoneCountRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryConfiguration.getInventoryFilter",
	"Comment": "returns the inventoryfilter used to describe a set of objectsto include in inventory results.",
	"Method": "InventoryFilter getInventoryFilter(){\r\n    return inventoryFilter;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateOptionGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getEngineName() != null)\r\n        sb.append(\"EngineName: \").append(getEngineName()).append(\",\");\r\n    if (getMajorEngineVersion() != null)\r\n        sb.append(\"MajorEngineVersion: \").append(getMajorEngineVersion()).append(\",\");\r\n    if (getOptionGroupDescription() != null)\r\n        sb.append(\"OptionGroupDescription: \").append(getOptionGroupDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated restoreobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "RestoreObjectRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.getCheckerIpRangesAsync",
	"Comment": "simplified method form for invoking the getcheckeripranges operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetCheckerIpRangesResult> getCheckerIpRangesAsync(GetCheckerIpRangesRequest request,java.util.concurrent.Future<GetCheckerIpRangesResult> getCheckerIpRangesAsync,GetCheckerIpRangesRequest request,com.amazonaws.handlers.AsyncHandler<GetCheckerIpRangesRequest, GetCheckerIpRangesResult> asyncHandler,java.util.concurrent.Future<GetCheckerIpRangesResult> getCheckerIpRangesAsync,java.util.concurrent.Future<GetCheckerIpRangesResult> getCheckerIpRangesAsync,com.amazonaws.handlers.AsyncHandler<GetCheckerIpRangesRequest, GetCheckerIpRangesResult> asyncHandler){\r\n    return getCheckerIpRangesAsync(new GetCheckerIpRangesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetReusableDelegationSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionClient.startStreamProcessor",
	"Comment": "starts processing a stream processor. you create a stream processor by calling . to tellstartstreamprocessor which stream processor to start, use the value of the name fieldspecified in the call to createstreamprocessor.",
	"Method": "StartStreamProcessorResult startStreamProcessor(StartStreamProcessorRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStartStreamProcessor(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListRobotsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.GetDashboardEmbedUrlRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getDashboardId() != null)\r\n        sb.append(\"DashboardId: \").append(getDashboardId()).append(\",\");\r\n    if (getIdentityType() != null)\r\n        sb.append(\"IdentityType: \").append(getIdentityType()).append(\",\");\r\n    if (getSessionLifetimeInMinutes() != null)\r\n        sb.append(\"SessionLifetimeInMinutes: \").append(getSessionLifetimeInMinutes()).append(\",\");\r\n    if (getUndoRedoDisabled() != null)\r\n        sb.append(\"UndoRedoDisabled: \").append(getUndoRedoDisabled()).append(\",\");\r\n    if (getResetDisabled() != null)\r\n        sb.append(\"ResetDisabled: \").append(getResetDisabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListFacesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFaces() != null)\r\n        sb.append(\"Faces: \").append(getFaces()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFaceModelVersion() != null)\r\n        sb.append(\"FaceModelVersion: \").append(getFaceModelVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setKey",
	"Comment": "sets the key by which to store the new multipart upload, and hence, theeventual object created from the multipart upload.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeReservedDBInstancesAsync",
	"Comment": "simplified method form for invoking the describereserveddbinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedDBInstancesResult> describeReservedDBInstancesAsync(DescribeReservedDBInstancesRequest request,java.util.concurrent.Future<DescribeReservedDBInstancesResult> describeReservedDBInstancesAsync,DescribeReservedDBInstancesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedDBInstancesRequest, DescribeReservedDBInstancesResult> asyncHandler,java.util.concurrent.Future<DescribeReservedDBInstancesResult> describeReservedDBInstancesAsync,java.util.concurrent.Future<DescribeReservedDBInstancesResult> describeReservedDBInstancesAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedDBInstancesRequest, DescribeReservedDBInstancesResult> asyncHandler){\r\n    return describeReservedDBInstancesAsync(new DescribeReservedDBInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.addDateHeader",
	"Comment": "adds the specified date header in rfc 822 date format to the specifiedrequest.this method will not add a date header if the specified date value is null.",
	"Method": "void addDateHeader(Request<?> request,String header,Date value){\r\n    if (value != null) {\r\n        request.addHeader(header, ServiceUtils.formatRfc822Date(value));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.getMaxUploads",
	"Comment": "returns the optional maximum number of uploads to return, or null if nomaximum number of uploads has been set for this request.",
	"Method": "Integer getMaxUploads(){\r\n    return maxUploads;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsClient.createGroup",
	"Comment": "creates a group with a specified name, description, and resource query.",
	"Method": "CreateGroupResult createGroup(CreateGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.getStorageClass",
	"Comment": "returns the storage class associated with the replication destinationconfiguration.",
	"Method": "String getStorageClass(){\r\n    return storageClass;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3EncryptionClientBuilder.setKms",
	"Comment": "sets the kms implementation to be used throughout the crypto process",
	"Method": "void setKms(AWSKMS kms){\r\n    this.kms = kms;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.setSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "void setSSEAwsKeyManagementParams(SSEAwsKeyManagementParams params){\r\n    if (params != null && this.destinationSSECustomerKey != null) {\r\n        throw new IllegalArgumentException(\"Either SSECustomerKey or SSEAwsKeyManagementParams must not be set at the same time.\");\r\n    }\r\n    this.sseAwsKeyManagementParams = params;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.Filter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOperator() != null)\r\n        sb.append(\"Operator: \").append(getOperator()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteReusableDelegationSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.Option.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionName() != null)\r\n        sb.append(\"OptionName: \").append(getOptionName()).append(\",\");\r\n    if (getOptionDescription() != null)\r\n        sb.append(\"OptionDescription: \").append(getOptionDescription()).append(\",\");\r\n    if (getPersistent() != null)\r\n        sb.append(\"Persistent: \").append(getPersistent()).append(\",\");\r\n    if (getPermanent() != null)\r\n        sb.append(\"Permanent: \").append(getPermanent()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getOptionVersion() != null)\r\n        sb.append(\"OptionVersion: \").append(getOptionVersion()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings()).append(\",\");\r\n    if (getDBSecurityGroupMemberships() != null)\r\n        sb.append(\"DBSecurityGroupMemberships: \").append(getDBSecurityGroupMemberships()).append(\",\");\r\n    if (getVpcSecurityGroupMemberships() != null)\r\n        sb.append(\"VpcSecurityGroupMemberships: \").append(getVpcSecurityGroupMemberships());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.getDeleteMarkerReplication",
	"Comment": "returns the status of delete marker replication of current rule.",
	"Method": "DeleteMarkerReplication getDeleteMarkerReplication(){\r\n    return deleteMarkerReplication;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getSkipFinalSnapshot() != null)\r\n        sb.append(\"SkipFinalSnapshot: \").append(getSkipFinalSnapshot()).append(\",\");\r\n    if (getFinalDBSnapshotIdentifier() != null)\r\n        sb.append(\"FinalDBSnapshotIdentifier: \").append(getFinalDBSnapshotIdentifier()).append(\",\");\r\n    if (getDeleteAutomatedBackups() != null)\r\n        sb.append(\"DeleteAutomatedBackups: \").append(getDeleteAutomatedBackups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceTagSet() != null)\r\n        sb.append(\"ResourceTagSet: \").append(getResourceTagSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsRequest.getBucketName",
	"Comment": "gets the name of the bucket containing the metrics configurations to retrieve.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonroute53domainsasync using the current builder configuration.",
	"Method": "AmazonRoute53DomainsAsync build(AwsAsyncClientParams params){\r\n    return new AmazonRoute53DomainsAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLifecycleConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose lifecycle configuration is being set,and returns this object so that additional method calls may be chainedtogether.",
	"Method": "SetBucketLifecycleConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateNotebookInstanceLifecycleConfigResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceLifecycleConfigArn() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigArn: \").append(getNotebookInstanceLifecycleConfigArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartETag.setETag",
	"Comment": "sets the entity tag generated from the content of the associated part.",
	"Method": "void setETag(String eTag){\r\n    this.eTag = eTag;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SelectObjectContentRequest.withOutputSerialization",
	"Comment": "describes the format of the data that you want amazon s3 to return in response.",
	"Method": "SelectObjectContentRequest withOutputSerialization(OutputSerialization outputSerialization){\r\n    setOutputSerialization(outputSerialization);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.RestoreStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCurrentRestoreRateInMegaBytesPerSecond() != null)\r\n        sb.append(\"CurrentRestoreRateInMegaBytesPerSecond: \").append(getCurrentRestoreRateInMegaBytesPerSecond()).append(\",\");\r\n    if (getSnapshotSizeInMegaBytes() != null)\r\n        sb.append(\"SnapshotSizeInMegaBytes: \").append(getSnapshotSizeInMegaBytes()).append(\",\");\r\n    if (getProgressInMegaBytes() != null)\r\n        sb.append(\"ProgressInMegaBytes: \").append(getProgressInMegaBytes()).append(\",\");\r\n    if (getElapsedTimeInSeconds() != null)\r\n        sb.append(\"ElapsedTimeInSeconds: \").append(getElapsedTimeInSeconds()).append(\",\");\r\n    if (getEstimatedTimeToCompletionInSeconds() != null)\r\n        sb.append(\"EstimatedTimeToCompletionInSeconds: \").append(getEstimatedTimeToCompletionInSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.UpdateSimulationApplicationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getSources() != null)\r\n        sb.append(\"Sources: \").append(getSources()).append(\",\");\r\n    if (getSimulationSoftwareSuite() != null)\r\n        sb.append(\"SimulationSoftwareSuite: \").append(getSimulationSoftwareSuite()).append(\",\");\r\n    if (getRobotSoftwareSuite() != null)\r\n        sb.append(\"RobotSoftwareSuite: \").append(getRobotSoftwareSuite()).append(\",\");\r\n    if (getRenderingEngine() != null)\r\n        sb.append(\"RenderingEngine: \").append(getRenderingEngine()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getRevisionId() != null)\r\n        sb.append(\"RevisionId: \").append(getRevisionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.UploadCallable.uploadPartsInParallel",
	"Comment": "submits a callable for each part to upload to our thread pool and records its corresponding future.",
	"Method": "void uploadPartsInParallel(UploadPartRequestFactory requestFactory,String uploadId){\r\n    Map<Integer, PartSummary> partNumbers = identifyExistingPartsForResume(uploadId);\r\n    while (requestFactory.hasMoreRequests()) {\r\n        if (threadPool.isShutdown())\r\n            throw new CancellationException(\"TransferManager has been shutdown\");\r\n        UploadPartRequest request = requestFactory.getNextUploadPartRequest();\r\n        if (partNumbers.containsKey(request.getPartNumber())) {\r\n            PartSummary summary = partNumbers.get(request.getPartNumber());\r\n            eTagsToSkip.add(new PartETag(request.getPartNumber(), summary.getETag()));\r\n            transferProgress.updateProgress(summary.getSize());\r\n            continue;\r\n        }\r\n        futures.add(threadPool.submit(new UploadPartCallable(s3, request, shouldCalculatePartMd5())));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.AmazonQuickSightClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonquicksight using the current builder configuration.",
	"Method": "AmazonQuickSight build(AwsSyncClientParams params){\r\n    return new AmazonQuickSightClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.SendEmailRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFromEmailAddress() != null)\r\n        sb.append(\"FromEmailAddress: \").append(getFromEmailAddress()).append(\",\");\r\n    if (getDestination() != null)\r\n        sb.append(\"Destination: \").append(getDestination()).append(\",\");\r\n    if (getReplyToAddresses() != null)\r\n        sb.append(\"ReplyToAddresses: \").append(getReplyToAddresses()).append(\",\");\r\n    if (getFeedbackForwardingEmailAddress() != null)\r\n        sb.append(\"FeedbackForwardingEmailAddress: \").append(getFeedbackForwardingEmailAddress()).append(\",\");\r\n    if (getContent() != null)\r\n        sb.append(\"Content: \").append(getContent()).append(\",\");\r\n    if (getEmailTags() != null)\r\n        sb.append(\"EmailTags: \").append(getEmailTags()).append(\",\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeCompilationJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompilationJobName() != null)\r\n        sb.append(\"CompilationJobName: \").append(getCompilationJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.DescribeGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketInventoryConfigurationRequest.getId",
	"Comment": "returns the id used to identify the inventory configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketPolicyRequest.withBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being retrieved,and returns the updated request object so that additional method callscan be chained together.",
	"Method": "GetBucketPolicyRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.ResourceIdentifier.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ComparedSourceImageFace.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBoundingBox() != null)\r\n        sb.append(\"BoundingBox: \").append(getBoundingBox()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBParameterGroups",
	"Comment": "returns a list of dbparametergroup descriptions. if a dbparametergroupname isspecified, the list will contain only the description of the specified db parameter group.",
	"Method": "DescribeDBParameterGroupsResult describeDBParameterGroups(DescribeDBParameterGroupsRequest request,DescribeDBParameterGroupsResult describeDBParameterGroups){\r\n    return describeDBParameterGroups(new DescribeDBParameterGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.isTruncated",
	"Comment": "returns true if the listing is truncated, and additional requests need tobe made to get more results.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.OutputLocation.withS3",
	"Comment": "sets the s3 location that will receive the results of the restore request.",
	"Method": "OutputLocation withS3(S3Location s3){\r\n    setS3(s3);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.CipherLite.createUsingIV",
	"Comment": "creates a new instance of cipherlite from the current one, but usingthe given iv.",
	"Method": "CipherLite createUsingIV(byte[] iv){\r\n    return scheme.createCipherLite(secreteKey, iv, this.cipherMode, cipher.getProvider(), true);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DeliveryOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSendingPoolName() != null)\r\n        sb.append(\"SendingPoolName: \").append(getSendingPoolName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DescribeRobotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getFleetArn() != null)\r\n        sb.append(\"FleetArn: \").append(getFleetArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getGreengrassGroupId() != null)\r\n        sb.append(\"GreengrassGroupId: \").append(getGreengrassGroupId()).append(\",\");\r\n    if (getCreatedAt() != null)\r\n        sb.append(\"CreatedAt: \").append(getCreatedAt()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture()).append(\",\");\r\n    if (getLastDeploymentJob() != null)\r\n        sb.append(\"LastDeploymentJob: \").append(getLastDeploymentJob()).append(\",\");\r\n    if (getLastDeploymentTime() != null)\r\n        sb.append(\"LastDeploymentTime: \").append(getLastDeploymentTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.CreateDedicatedIpPoolResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeClusterParameters",
	"Comment": "returns a detailed list of parameters contained within the specified amazon redshift parameter group. for eachparameter the response includes information such as parameter name, description, data type, value, whether theparameter value is modifiable, and so on.you can specify source filter to retrieve parameters of only specific type. for example, to retrieveparameters that were modified by a user action such as from modifyclusterparametergroup, you can specifysource equal to user.for more information about parameters and parameter groups, go to amazon redshiftparameter groups in the amazon redshift cluster management guide.",
	"Method": "DescribeClusterParametersResult describeClusterParameters(DescribeClusterParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeClusterParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateCodeRepositoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeRepositoryName() != null)\r\n        sb.append(\"CodeRepositoryName: \").append(getCodeRepositoryName()).append(\",\");\r\n    if (getGitConfig() != null)\r\n        sb.append(\"GitConfig: \").append(getGitConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.SimulationJobSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSimulationApplicationNames() != null)\r\n        sb.append(\"SimulationApplicationNames: \").append(getSimulationApplicationNames()).append(\",\");\r\n    if (getRobotApplicationNames() != null)\r\n        sb.append(\"RobotApplicationNames: \").append(getRobotApplicationNames());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.getResolverRule",
	"Comment": "gets information about a specified resolver rule, such as the domain name that the rule forwards dns queries forand the id of the outbound resolver endpoint that the rule is associated with.",
	"Method": "GetResolverRuleResult getResolverRule(GetResolverRuleRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetResolverRule(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterSubnetGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSubnetGroupName() != null)\r\n        sb.append(\"ClusterSubnetGroupName: \").append(getClusterSubnetGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getSubnetGroupStatus() != null)\r\n        sb.append(\"SubnetGroupStatus: \").append(getSubnetGroupStatus()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase.wrapWithCipher",
	"Comment": "returns the given putobjectrequest but has the content asinput stream wrapped with a cipher, and configured with some meta dataand user metadata.",
	"Method": "R wrapWithCipher(R request,ContentCryptoMaterial cekMaterial){\r\n    ObjectMetadata metadata = request.getMetadata();\r\n    if (metadata == null) {\r\n        metadata = new ObjectMetadata();\r\n    }\r\n    if (metadata.getContentMD5() != null) {\r\n        metadata.addUserMetadata(Headers.UNENCRYPTED_CONTENT_MD5, metadata.getContentMD5());\r\n    }\r\n    metadata.setContentMD5(null);\r\n    final long plaintextLength = plaintextLength(request, metadata);\r\n    if (plaintextLength >= 0) {\r\n        metadata.addUserMetadata(Headers.UNENCRYPTED_CONTENT_LENGTH, Long.toString(plaintextLength));\r\n        metadata.setContentLength(ciphertextLength(plaintextLength));\r\n    }\r\n    request.setMetadata(metadata);\r\n    request.setInputStream(newS3CipherLiteInputStream(request, cekMaterial, plaintextLength));\r\n    request.setFile(null);\r\n    return request;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setAbortDate",
	"Comment": "date when multipart upload will become eligible for abort operation by lifecycle.",
	"Method": "void setAbortDate(Date abortDate){\r\n    this.abortDate = abortDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.DownloadImpl.getBucketName",
	"Comment": "the name of the bucket where the object is being downloaded from.",
	"Method": "String getBucketName(){\r\n    return getObjectRequest.getBucketName();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeStreamProcessorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStreamProcessorArn() != null)\r\n        sb.append(\"StreamProcessorArn: \").append(getStreamProcessorArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp()).append(\",\");\r\n    if (getLastUpdateTimestamp() != null)\r\n        sb.append(\"LastUpdateTimestamp: \").append(getLastUpdateTimestamp()).append(\",\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput()).append(\",\");\r\n    if (getOutput() != null)\r\n        sb.append(\"Output: \").append(getOutput()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getSettings() != null)\r\n        sb.append(\"Settings: \").append(getSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutEmailIdentityDkimAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeCollectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCollectionId() != null)\r\n        sb.append(\"CollectionId: \").append(getCollectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.createDedicatedIpPool",
	"Comment": "create a new pool of dedicated ip addresses. a pool can include one or more dedicated ip addresses that areassociated with your amazon pinpoint account. you can associate a pool with a configuration set. when you send anemail that uses that configuration set, amazon pinpoint sends it using only the ip addresses in the associatedpool.",
	"Method": "CreateDedicatedIpPoolResult createDedicatedIpPool(CreateDedicatedIpPoolRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDedicatedIpPool(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.VPC.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVPCRegion() != null)\r\n        sb.append(\"VPCRegion: \").append(getVPCRegion()).append(\",\");\r\n    if (getVPCId() != null)\r\n        sb.append(\"VPCId: \").append(getVPCId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeDBClusterParameterGroupsAsync",
	"Comment": "simplified method form for invoking the describedbclusterparametergroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBClusterParameterGroupsResult> describeDBClusterParameterGroupsAsync(DescribeDBClusterParameterGroupsRequest request,java.util.concurrent.Future<DescribeDBClusterParameterGroupsResult> describeDBClusterParameterGroupsAsync,DescribeDBClusterParameterGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBClusterParameterGroupsRequest, DescribeDBClusterParameterGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeDBClusterParameterGroupsResult> describeDBClusterParameterGroupsAsync,java.util.concurrent.Future<DescribeDBClusterParameterGroupsResult> describeDBClusterParameterGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBClusterParameterGroupsRequest, DescribeDBClusterParameterGroupsResult> asyncHandler){\r\n    return describeDBClusterParameterGroupsAsync(new DescribeDBClusterParameterGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3Object.setBucketName",
	"Comment": "sets the name of the bucket in which this object is contained.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHealthCheckRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheckId() != null)\r\n        sb.append(\"HealthCheckId: \").append(getHealthCheckId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.getTaggingConfiguration",
	"Comment": "gets the new tagging configuration for the specified bucket.",
	"Method": "BucketTaggingConfiguration getTaggingConfiguration(){\r\n    return taggingConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterTracksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaintenanceTracks() != null)\r\n        sb.append(\"MaintenanceTracks: \").append(getMaintenanceTracks()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.IdentityInfo.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityType() != null)\r\n        sb.append(\"IdentityType: \").append(getIdentityType()).append(\",\");\r\n    if (getIdentityName() != null)\r\n        sb.append(\"IdentityName: \").append(getIdentityName()).append(\",\");\r\n    if (getSendingEnabled() != null)\r\n        sb.append(\"SendingEnabled: \").append(getSendingEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.model.SqlStatementResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNumberOfRecordsUpdated() != null)\r\n        sb.append(\"NumberOfRecordsUpdated: \").append(getNumberOfRecordsUpdated()).append(\",\");\r\n    if (getResultFrame() != null)\r\n        sb.append(\"ResultFrame: \").append(getResultFrame());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose objects are to be listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setKeyMarker",
	"Comment": "for internal use only. sets the key marker parameteroriginally used to request this version listing.",
	"Method": "void setKeyMarker(String keyMarker){\r\n    this.keyMarker = keyMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.AddTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeDBSubnetGroupsAsync",
	"Comment": "simplified method form for invoking the describedbsubnetgroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBSubnetGroupsResult> describeDBSubnetGroupsAsync(DescribeDBSubnetGroupsRequest request,java.util.concurrent.Future<DescribeDBSubnetGroupsResult> describeDBSubnetGroupsAsync,DescribeDBSubnetGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBSubnetGroupsRequest, DescribeDBSubnetGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeDBSubnetGroupsResult> describeDBSubnetGroupsAsync,java.util.concurrent.Future<DescribeDBSubnetGroupsResult> describeDBSubnetGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBSubnetGroupsRequest, DescribeDBSubnetGroupsResult> asyncHandler){\r\n    return describeDBSubnetGroupsAsync(new DescribeDBSubnetGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket whoseobjects are to be listed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBLogFilesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDescribeDBLogFiles() != null)\r\n        sb.append(\"DescribeDBLogFiles: \").append(getDescribeDBLogFiles()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ReservedDBInstance.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedDBInstanceId() != null)\r\n        sb.append(\"ReservedDBInstanceId: \").append(getReservedDBInstanceId()).append(\",\");\r\n    if (getReservedDBInstancesOfferingId() != null)\r\n        sb.append(\"ReservedDBInstancesOfferingId: \").append(getReservedDBInstancesOfferingId()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getFixedPrice() != null)\r\n        sb.append(\"FixedPrice: \").append(getFixedPrice()).append(\",\");\r\n    if (getUsagePrice() != null)\r\n        sb.append(\"UsagePrice: \").append(getUsagePrice()).append(\",\");\r\n    if (getCurrencyCode() != null)\r\n        sb.append(\"CurrencyCode: \").append(getCurrencyCode()).append(\",\");\r\n    if (getDBInstanceCount() != null)\r\n        sb.append(\"DBInstanceCount: \").append(getDBInstanceCount()).append(\",\");\r\n    if (getProductDescription() != null)\r\n        sb.append(\"ProductDescription: \").append(getProductDescription()).append(\",\");\r\n    if (getOfferingType() != null)\r\n        sb.append(\"OfferingType: \").append(getOfferingType()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getRecurringCharges() != null)\r\n        sb.append(\"RecurringCharges: \").append(getRecurringCharges()).append(\",\");\r\n    if (getReservedDBInstanceArn() != null)\r\n        sb.append(\"ReservedDBInstanceArn: \").append(getReservedDBInstanceArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.listSimulationJobs",
	"Comment": "returns a list of simulation jobs. you can optionally provide filters to retrieve specific simulation jobs.",
	"Method": "ListSimulationJobsResult listSimulationJobs(ListSimulationJobsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListSimulationJobs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeAccountAttributesAsync",
	"Comment": "simplified method form for invoking the describeaccountattributes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync(DescribeAccountAttributesRequest request,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,DescribeAccountAttributesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeAccountAttributesRequest, DescribeAccountAttributesResult> asyncHandler,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,java.util.concurrent.Future<DescribeAccountAttributesResult> describeAccountAttributesAsync,com.amazonaws.handlers.AsyncHandler<DescribeAccountAttributesRequest, DescribeAccountAttributesResult> asyncHandler){\r\n    return describeAccountAttributesAsync(new DescribeAccountAttributesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeWorkteamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkteamName() != null)\r\n        sb.append(\"WorkteamName: \").append(getWorkteamName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3EncryptionClientBuilder.setEncryptionMaterials",
	"Comment": "sets the encryption materials to be used to encrypt and decrypt data",
	"Method": "void setEncryptionMaterials(EncryptionMaterialsProvider encryptionMaterials){\r\n    this.encryptionMaterials = encryptionMaterials;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.OptionGroupOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getEngineName() != null)\r\n        sb.append(\"EngineName: \").append(getEngineName()).append(\",\");\r\n    if (getMajorEngineVersion() != null)\r\n        sb.append(\"MajorEngineVersion: \").append(getMajorEngineVersion()).append(\",\");\r\n    if (getMinimumRequiredMinorEngineVersion() != null)\r\n        sb.append(\"MinimumRequiredMinorEngineVersion: \").append(getMinimumRequiredMinorEngineVersion()).append(\",\");\r\n    if (getPortRequired() != null)\r\n        sb.append(\"PortRequired: \").append(getPortRequired()).append(\",\");\r\n    if (getDefaultPort() != null)\r\n        sb.append(\"DefaultPort: \").append(getDefaultPort()).append(\",\");\r\n    if (getOptionsDependedOn() != null)\r\n        sb.append(\"OptionsDependedOn: \").append(getOptionsDependedOn()).append(\",\");\r\n    if (getOptionsConflictsWith() != null)\r\n        sb.append(\"OptionsConflictsWith: \").append(getOptionsConflictsWith()).append(\",\");\r\n    if (getPersistent() != null)\r\n        sb.append(\"Persistent: \").append(getPersistent()).append(\",\");\r\n    if (getPermanent() != null)\r\n        sb.append(\"Permanent: \").append(getPermanent()).append(\",\");\r\n    if (getRequiresAutoMinorEngineVersionUpgrade() != null)\r\n        sb.append(\"RequiresAutoMinorEngineVersionUpgrade: \").append(getRequiresAutoMinorEngineVersionUpgrade()).append(\",\");\r\n    if (getVpcOnly() != null)\r\n        sb.append(\"VpcOnly: \").append(getVpcOnly()).append(\",\");\r\n    if (getSupportsOptionVersionDowngrade() != null)\r\n        sb.append(\"SupportsOptionVersionDowngrade: \").append(getSupportsOptionVersionDowngrade()).append(\",\");\r\n    if (getOptionGroupOptionSettings() != null)\r\n        sb.append(\"OptionGroupOptionSettings: \").append(getOptionGroupOptionSettings()).append(\",\");\r\n    if (getOptionGroupOptionVersions() != null)\r\n        sb.append(\"OptionGroupOptionVersions: \").append(getOptionGroupOptionVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListStreamProcessorsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeReservedNodesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getReservedNodes() != null)\r\n        sb.append(\"ReservedNodes: \").append(getReservedNodes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketMetricsConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket from which the metrics configuration is deletedand returns this object for method chaining.",
	"Method": "DeleteBucketMetricsConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.ListEmailIdentitiesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmailIdentities() != null)\r\n        sb.append(\"EmailIdentities: \").append(getEmailIdentities()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketMetricsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket from which the metrics configuration is deleted.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.VoiceChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHealthCheckStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheckObservations() != null)\r\n        sb.append(\"HealthCheckObservations: \").append(getHealthCheckObservations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteHsmClientCertificateRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmClientCertificateIdentifier() != null)\r\n        sb.append(\"HsmClientCertificateIdentifier: \").append(getHsmClientCertificateIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetTrafficPolicyInstanceCountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicyInstanceCount() != null)\r\n        sb.append(\"TrafficPolicyInstanceCount: \").append(getTrafficPolicyInstanceCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setStorageClass",
	"Comment": "sets the class of storage used for the parts in the associated multipartupload.",
	"Method": "void setStorageClass(String storageClass){\r\n    this.storageClass = storageClass;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.listHostedZonesAsync",
	"Comment": "simplified method form for invoking the listhostedzones operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListHostedZonesResult> listHostedZonesAsync(ListHostedZonesRequest request,java.util.concurrent.Future<ListHostedZonesResult> listHostedZonesAsync,ListHostedZonesRequest request,com.amazonaws.handlers.AsyncHandler<ListHostedZonesRequest, ListHostedZonesResult> asyncHandler,java.util.concurrent.Future<ListHostedZonesResult> listHostedZonesAsync,java.util.concurrent.Future<ListHostedZonesResult> listHostedZonesAsync,com.amazonaws.handlers.AsyncHandler<ListHostedZonesRequest, ListHostedZonesResult> asyncHandler){\r\n    return listHostedZonesAsync(new ListHostedZonesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getMaxParts",
	"Comment": "returns the optional max parts value specified in the original request tolimit how many parts are listed.",
	"Method": "Integer getMaxParts(){\r\n    return maxParts;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose versioning configuration is beingset.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.getBucketName",
	"Comment": "gets the name of the bucket containing the object whose acl is to be retrieved.",
	"Method": "String getBucketName(){\r\n    return s3ObjectIdBuilder.getBucket();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeTransformJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransformJobName() != null)\r\n        sb.append(\"TransformJobName: \").append(getTransformJobName()).append(\",\");\r\n    if (getTransformJobArn() != null)\r\n        sb.append(\"TransformJobArn: \").append(getTransformJobArn()).append(\",\");\r\n    if (getTransformJobStatus() != null)\r\n        sb.append(\"TransformJobStatus: \").append(getTransformJobStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getModelName() != null)\r\n        sb.append(\"ModelName: \").append(getModelName()).append(\",\");\r\n    if (getMaxConcurrentTransforms() != null)\r\n        sb.append(\"MaxConcurrentTransforms: \").append(getMaxConcurrentTransforms()).append(\",\");\r\n    if (getMaxPayloadInMB() != null)\r\n        sb.append(\"MaxPayloadInMB: \").append(getMaxPayloadInMB()).append(\",\");\r\n    if (getBatchStrategy() != null)\r\n        sb.append(\"BatchStrategy: \").append(getBatchStrategy()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getTransformInput() != null)\r\n        sb.append(\"TransformInput: \").append(getTransformInput()).append(\",\");\r\n    if (getTransformOutput() != null)\r\n        sb.append(\"TransformOutput: \").append(getTransformOutput()).append(\",\");\r\n    if (getTransformResources() != null)\r\n        sb.append(\"TransformResources: \").append(getTransformResources()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTransformStartTime() != null)\r\n        sb.append(\"TransformStartTime: \").append(getTransformStartTime()).append(\",\");\r\n    if (getTransformEndTime() != null)\r\n        sb.append(\"TransformEndTime: \").append(getTransformEndTime()).append(\",\");\r\n    if (getLabelingJobArn() != null)\r\n        sb.append(\"LabelingJobArn: \").append(getLabelingJobArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "CopyObjectRequest withSSEAwsKeyManagementParams(SSEAwsKeyManagementParams sseAwsKeyManagementParams){\r\n    setSSEAwsKeyManagementParams(sseAwsKeyManagementParams);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.DeleteLexiconRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.IpAddressUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpId() != null)\r\n        sb.append(\"IpId: \").append(getIpId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getIp() != null)\r\n        sb.append(\"Ip: \").append(getIp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DefaultRetention.getYears",
	"Comment": "the number of years that you want to specify for the default retention period.",
	"Method": "Integer getYears(){\r\n    return years;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseListBucketObjectsResponse",
	"Comment": "parses a listbucket response xml document from an input stream.",
	"Method": "ListBucketHandler parseListBucketObjectsResponse(InputStream inputStream,boolean shouldSDKDecodeResponse){\r\n    ListBucketHandler handler = new ListBucketHandler(shouldSDKDecodeResponse);\r\n    parseXmlInputStream(handler, sanitizeXmlDocument(handler, inputStream));\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityInfoResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUrls() != null)\r\n        sb.append(\"Urls: \").append(getUrls()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutEmailIdentityMailFromAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeLabelingJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabelingJobStatus() != null)\r\n        sb.append(\"LabelingJobStatus: \").append(getLabelingJobStatus()).append(\",\");\r\n    if (getLabelCounters() != null)\r\n        sb.append(\"LabelCounters: \").append(getLabelCounters()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getJobReferenceCode() != null)\r\n        sb.append(\"JobReferenceCode: \").append(getJobReferenceCode()).append(\",\");\r\n    if (getLabelingJobName() != null)\r\n        sb.append(\"LabelingJobName: \").append(getLabelingJobName()).append(\",\");\r\n    if (getLabelingJobArn() != null)\r\n        sb.append(\"LabelingJobArn: \").append(getLabelingJobArn()).append(\",\");\r\n    if (getLabelAttributeName() != null)\r\n        sb.append(\"LabelAttributeName: \").append(getLabelAttributeName()).append(\",\");\r\n    if (getInputConfig() != null)\r\n        sb.append(\"InputConfig: \").append(getInputConfig()).append(\",\");\r\n    if (getOutputConfig() != null)\r\n        sb.append(\"OutputConfig: \").append(getOutputConfig()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getLabelCategoryConfigS3Uri() != null)\r\n        sb.append(\"LabelCategoryConfigS3Uri: \").append(getLabelCategoryConfigS3Uri()).append(\",\");\r\n    if (getStoppingConditions() != null)\r\n        sb.append(\"StoppingConditions: \").append(getStoppingConditions()).append(\",\");\r\n    if (getLabelingJobAlgorithmsConfig() != null)\r\n        sb.append(\"LabelingJobAlgorithmsConfig: \").append(getLabelingJobAlgorithmsConfig()).append(\",\");\r\n    if (getHumanTaskConfig() != null)\r\n        sb.append(\"HumanTaskConfig: \").append(getHumanTaskConfig()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getLabelingJobOutput() != null)\r\n        sb.append(\"LabelingJobOutput: \").append(getLabelingJobOutput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3EncryptionClientBuilder.withKmsClient",
	"Comment": "sets the kms implementation to be used throughout the crypto process",
	"Method": "AmazonS3EncryptionClientBuilder withKmsClient(AWSKMS kms){\r\n    setKms(kms);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.withStatus",
	"Comment": "sets the status of this replication rule. valid values are enabled,disabled. the rule will be applied only if the status is enabled.",
	"Method": "ReplicationRule withStatus(String status,ReplicationRule withStatus,ReplicationRuleStatus status){\r\n    setStatus(status.getStatus());\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DeleteEmailIdentityRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmailIdentity() != null)\r\n        sb.append(\"EmailIdentity: \").append(getEmailIdentity());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CognitoMemberDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserPool() != null)\r\n        sb.append(\"UserPool: \").append(getUserPool()).append(\",\");\r\n    if (getUserGroup() != null)\r\n        sb.append(\"UserGroup: \").append(getUserGroup()).append(\",\");\r\n    if (getClientId() != null)\r\n        sb.append(\"ClientId: \").append(getClientId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.GetClusterCredentialsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDbUser() != null)\r\n        sb.append(\"DbUser: \").append(getDbUser()).append(\",\");\r\n    if (getDbName() != null)\r\n        sb.append(\"DbName: \").append(getDbName()).append(\",\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getDurationSeconds() != null)\r\n        sb.append(\"DurationSeconds: \").append(getDurationSeconds()).append(\",\");\r\n    if (getAutoCreate() != null)\r\n        sb.append(\"AutoCreate: \").append(getAutoCreate()).append(\",\");\r\n    if (getDbGroups() != null)\r\n        sb.append(\"DbGroups: \").append(getDbGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CreateCollectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCollectionId() != null)\r\n        sb.append(\"CollectionId: \").append(getCollectionId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutObjectResult.setETag",
	"Comment": "sets the etag value for the new object that was created from theassociated putobject request.",
	"Method": "void setETag(String eTag){\r\n    this.eTag = eTag;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeDBClusterSnapshotsAsync",
	"Comment": "simplified method form for invoking the describedbclustersnapshots operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBClusterSnapshotsResult> describeDBClusterSnapshotsAsync(DescribeDBClusterSnapshotsRequest request,java.util.concurrent.Future<DescribeDBClusterSnapshotsResult> describeDBClusterSnapshotsAsync,DescribeDBClusterSnapshotsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBClusterSnapshotsRequest, DescribeDBClusterSnapshotsResult> asyncHandler,java.util.concurrent.Future<DescribeDBClusterSnapshotsResult> describeDBClusterSnapshotsAsync,java.util.concurrent.Future<DescribeDBClusterSnapshotsResult> describeDBClusterSnapshotsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBClusterSnapshotsRequest, DescribeDBClusterSnapshotsResult> asyncHandler){\r\n    return describeDBClusterSnapshotsAsync(new DescribeDBClusterSnapshotsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.auth.RdsIamAuthTokenGenerator.getAuthToken",
	"Comment": "create an authorization token used to connect to a database that uses rds iam authentication.",
	"Method": "String getAuthToken(GetIamAuthTokenRequest request){\r\n    DefaultRequest<Void> signableRequest = new DefaultRequest<Void>(SERVICE_NAME);\r\n    signableRequest.setResourcePath(\"/\");\r\n    setEndpoint(signableRequest, request);\r\n    setParameters(signableRequest, request);\r\n    signableRequest.setHttpMethod(HttpMethodName.GET);\r\n    return presignerFacade.presign(signableRequest, getExpirationDate()).toExternalForm().replaceFirst(\"http://\", \"\");\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeEventCategoriesAsync",
	"Comment": "simplified method form for invoking the describeeventcategories operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync(DescribeEventCategoriesRequest request,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,DescribeEventCategoriesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventCategoriesRequest, DescribeEventCategoriesResult> asyncHandler,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventCategoriesRequest, DescribeEventCategoriesResult> asyncHandler){\r\n    return describeEventCategoriesAsync(new DescribeEventCategoriesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.AlgorithmStatusDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValidationStatuses() != null)\r\n        sb.append(\"ValidationStatuses: \").append(getValidationStatuses()).append(\",\");\r\n    if (getImageScanStatuses() != null)\r\n        sb.append(\"ImageScanStatuses: \").append(getImageScanStatuses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getKey",
	"Comment": "gets the key under which the object to be downloaded is stored.",
	"Method": "String getKey(){\r\n    return s3ObjectIdBuilder.getKey();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeClusterParameterGroupsAsync",
	"Comment": "simplified method form for invoking the describeclusterparametergroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync(DescribeClusterParameterGroupsRequest request,java.util.concurrent.Future<DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync,DescribeClusterParameterGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClusterParameterGroupsRequest, DescribeClusterParameterGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync,java.util.concurrent.Future<DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeClusterParameterGroupsRequest, DescribeClusterParameterGroupsResult> asyncHandler){\r\n    return describeClusterParameterGroupsAsync(new DescribeClusterParameterGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListNotebookInstancesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getNotebookInstances() != null)\r\n        sb.append(\"NotebookInstances: \").append(getNotebookInstances());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.isTruncated",
	"Comment": "gets whether or not this analytics configuration listing is complete.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.S3ClientOptions.isDualstackEnabled",
	"Comment": "returns whether the client is configured to use dualstack mode foraccessing s3.",
	"Method": "boolean isDualstackEnabled(){\r\n    return dualstackEnabled;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.AlgorithmValidationProfile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getProfileName() != null)\r\n        sb.append(\"ProfileName: \").append(getProfileName()).append(\",\");\r\n    if (getTrainingJobDefinition() != null)\r\n        sb.append(\"TrainingJobDefinition: \").append(getTrainingJobDefinition()).append(\",\");\r\n    if (getTransformJobDefinition() != null)\r\n        sb.append(\"TransformJobDefinition: \").append(getTransformJobDefinition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.HyperParameterTuningJobConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStrategy() != null)\r\n        sb.append(\"Strategy: \").append(getStrategy()).append(\",\");\r\n    if (getHyperParameterTuningJobObjective() != null)\r\n        sb.append(\"HyperParameterTuningJobObjective: \").append(getHyperParameterTuningJobObjective()).append(\",\");\r\n    if (getResourceLimits() != null)\r\n        sb.append(\"ResourceLimits: \").append(getResourceLimits()).append(\",\");\r\n    if (getParameterRanges() != null)\r\n        sb.append(\"ParameterRanges: \").append(getParameterRanges());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.CreateResolverRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRule() != null)\r\n        sb.append(\"ResolverRule: \").append(getResolverRule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryPrefixPredicate.getPrefix",
	"Comment": "returns the prefix to use when evaluating an inventory filter.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeOrderableDBInstanceOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getVpc() != null)\r\n        sb.append(\"Vpc: \").append(getVpc()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.GetResolverEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpoint() != null)\r\n        sb.append(\"ResolverEndpoint: \").append(getResolverEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeDBClustersAsync",
	"Comment": "simplified method form for invoking the describedbclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBClustersResult> describeDBClustersAsync(DescribeDBClustersRequest request,java.util.concurrent.Future<DescribeDBClustersResult> describeDBClustersAsync,DescribeDBClustersRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBClustersRequest, DescribeDBClustersResult> asyncHandler,java.util.concurrent.Future<DescribeDBClustersResult> describeDBClustersAsync,java.util.concurrent.Future<DescribeDBClustersResult> describeDBClustersAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBClustersRequest, DescribeDBClustersResult> asyncHandler){\r\n    return describeDBClustersAsync(new DescribeDBClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateLabelingJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabelingJobName() != null)\r\n        sb.append(\"LabelingJobName: \").append(getLabelingJobName()).append(\",\");\r\n    if (getLabelAttributeName() != null)\r\n        sb.append(\"LabelAttributeName: \").append(getLabelAttributeName()).append(\",\");\r\n    if (getInputConfig() != null)\r\n        sb.append(\"InputConfig: \").append(getInputConfig()).append(\",\");\r\n    if (getOutputConfig() != null)\r\n        sb.append(\"OutputConfig: \").append(getOutputConfig()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getLabelCategoryConfigS3Uri() != null)\r\n        sb.append(\"LabelCategoryConfigS3Uri: \").append(getLabelCategoryConfigS3Uri()).append(\",\");\r\n    if (getStoppingConditions() != null)\r\n        sb.append(\"StoppingConditions: \").append(getStoppingConditions()).append(\",\");\r\n    if (getLabelingJobAlgorithmsConfig() != null)\r\n        sb.append(\"LabelingJobAlgorithmsConfig: \").append(getLabelingJobAlgorithmsConfig()).append(\",\");\r\n    if (getHumanTaskConfig() != null)\r\n        sb.append(\"HumanTaskConfig: \").append(getHumanTaskConfig()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.CipherLite.mark",
	"Comment": "marks the current position in this cipher lite. a subsequent call to thereset method repositions this cipher lite at the last markedposition so that subsequent crypto operations will be logically performedin an idempotent manner as if the cipher has been rewinded back to themarked position.the general contract of mark is that, if the methodmarksupported returns true, the cipher litesomehow remembers the internal state after the call to markand stands ready to restore to the internal state so that it would beable to produce the same output given the same input again if andwhenever the method reset is called.",
	"Method": "long mark(){\r\n    return -1;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose notification configuration is beingset.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeSourceRegionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.UntagResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFailedResourcesMap() != null)\r\n        sb.append(\"FailedResourcesMap: \").append(getFailedResourcesMap());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterSubnetGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSubnetGroupName() != null)\r\n        sb.append(\"ClusterSubnetGroupName: \").append(getClusterSubnetGroupName()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBInstanceAutomatedBackup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceArn() != null)\r\n        sb.append(\"DBInstanceArn: \").append(getDBInstanceArn()).append(\",\");\r\n    if (getDbiResourceId() != null)\r\n        sb.append(\"DbiResourceId: \").append(getDbiResourceId()).append(\",\");\r\n    if (getRegion() != null)\r\n        sb.append(\"Region: \").append(getRegion()).append(\",\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getRestoreWindow() != null)\r\n        sb.append(\"RestoreWindow: \").append(getRestoreWindow()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getInstanceCreateTime() != null)\r\n        sb.append(\"InstanceCreateTime: \").append(getInstanceCreateTime()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getTdeCredentialArn() != null)\r\n        sb.append(\"TdeCredentialArn: \").append(getTdeCredentialArn()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone()).append(\",\");\r\n    if (getIAMDatabaseAuthenticationEnabled() != null)\r\n        sb.append(\"IAMDatabaseAuthenticationEnabled: \").append(getIAMDatabaseAuthenticationEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.GetResourcePoliciesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.getFormat",
	"Comment": "returns the file format used when exporting data to amazon s3.",
	"Method": "String getFormat(){\r\n    return format;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManager.doDownload",
	"Comment": "same as public interface, but adds a state listener so that callers canbe notified of state changes to the download.",
	"Method": "Download doDownload(GetObjectRequest getObjectRequest,File file,TransferStateChangeListener stateListener,S3ProgressListener s3progressListener,boolean resumeExistingDownload,long timeoutMillis,Integer lastFullyDownloadedPart,long lastModifiedTimeRecordedDuringPause,Download doDownload,GetObjectRequest getObjectRequest,File file,TransferStateChangeListener stateListener,S3ProgressListener s3progressListener,boolean resumeExistingDownload,long timeoutMillis,Integer lastFullyDownloadedPart,long lastModifiedTimeRecordedDuringPause,boolean resumeOnRetry){\r\n    assertParameterNotNull(getObjectRequest, \"A valid GetObjectRequest must be provided to initiate download\");\r\n    assertParameterNotNull(file, \"A valid file must be provided to download into\");\r\n    appendSingleObjectUserAgent(getObjectRequest);\r\n    String description = \"Downloading from \" + getObjectRequest.getBucketName() + \"/\" + getObjectRequest.getKey();\r\n    TransferProgress transferProgress = new TransferProgress();\r\n    S3ProgressListenerChain listenerChain = new S3ProgressListenerChain(// Listeners included in the original request\r\n    new TransferProgressUpdatingListener(transferProgress), getObjectRequest.getGeneralProgressListener(), s3progressListener);\r\n    getObjectRequest.setGeneralProgressListener(new ProgressListenerChain(new TransferCompletionFilter(), listenerChain));\r\n    GetObjectMetadataRequest getObjectMetadataRequest = RequestCopyUtils.createGetObjectMetadataRequestFrom(getObjectRequest);\r\n    final ObjectMetadata objectMetadata = s3.getObjectMetadata(getObjectMetadataRequest);\r\n    long lastModifiedTime = objectMetadata.getLastModified().getTime();\r\n    long startingByte = 0;\r\n    long lastByte;\r\n    long[] range = getObjectRequest.getRange();\r\n    if (range != null && range.length == 2) {\r\n        startingByte = range[0];\r\n        lastByte = range[1];\r\n    } else {\r\n        lastByte = objectMetadata.getContentLength() - 1;\r\n    }\r\n    final long origStartingByte = startingByte;\r\n    final boolean isDownloadParallel = !configuration.isDisableParallelDownloads() && TransferManagerUtils.isDownloadParallelizable(s3, getObjectRequest, ServiceUtils.getPartCount(getObjectRequest, s3));\r\n    final DownloadImpl download = new DownloadImpl(description, transferProgress, listenerChain, null, stateListener, getObjectRequest, file, objectMetadata, isDownloadParallel);\r\n    long totalBytesToDownload = lastByte - startingByte + 1;\r\n    transferProgress.setTotalBytesToTransfer(totalBytesToDownload);\r\n    if (totalBytesToDownload > 0 && !isDownloadParallel) {\r\n        getObjectRequest.withRange(startingByte, lastByte);\r\n    }\r\n    long fileLength = -1;\r\n    if (resumeExistingDownload) {\r\n        if (isS3ObjectModifiedSincePause(lastModifiedTime, lastModifiedTimeRecordedDuringPause)) {\r\n            throw new AmazonClientException(\"The requested object in bucket \" + getObjectRequest.getBucketName() + \" with key \" + getObjectRequest.getKey() + \" is modified on Amazon S3 since the last pause.\");\r\n        }\r\n        getObjectRequest.setUnmodifiedSinceConstraint(new Date(lastModifiedTime));\r\n        if (!isDownloadParallel) {\r\n            if (!FileLocks.lock(file)) {\r\n                throw new FileLockException(\"Fail to lock \" + file + \" for resume download\");\r\n            }\r\n            try {\r\n                if (file.exists()) {\r\n                    fileLength = file.length();\r\n                    startingByte = startingByte + fileLength;\r\n                    getObjectRequest.setRange(startingByte, lastByte);\r\n                    transferProgress.updateProgress(Math.min(fileLength, totalBytesToDownload));\r\n                    totalBytesToDownload = lastByte - startingByte + 1;\r\n                    if (log.isDebugEnabled()) {\r\n                        log.debug(\"Resume download: totalBytesToDownload=\" + totalBytesToDownload + \", origStartingByte=\" + origStartingByte + \", startingByte=\" + startingByte + \", lastByte=\" + lastByte + \", numberOfBytesRead=\" + fileLength + \", file: \" + file);\r\n                    }\r\n                }\r\n            } finally {\r\n                FileLocks.unlock(file);\r\n            }\r\n        }\r\n    }\r\n    if (totalBytesToDownload < 0) {\r\n        throw new IllegalArgumentException(\"Unable to determine the range for download operation.\");\r\n    }\r\n    final CountDownLatch latch = new CountDownLatch(1);\r\n    Future<?> future = executorService.submit(new DownloadCallable(s3, latch, getObjectRequest, resumeExistingDownload, download, file, origStartingByte, fileLength, timeoutMillis, timedThreadPool, executorService, lastFullyDownloadedPart, isDownloadParallel, resumeOnRetry));\r\n    download.setMonitor(new DownloadMonitor(download, future));\r\n    latch.countDown();\r\n    return download;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyCurrentDBClusterCapacityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getPendingCapacity() != null)\r\n        sb.append(\"PendingCapacity: \").append(getPendingCapacity()).append(\",\");\r\n    if (getCurrentCapacity() != null)\r\n        sb.append(\"CurrentCapacity: \").append(getCurrentCapacity()).append(\",\");\r\n    if (getSecondsBeforeTimeout() != null)\r\n        sb.append(\"SecondsBeforeTimeout: \").append(getSecondsBeforeTimeout()).append(\",\");\r\n    if (getTimeoutAction() != null)\r\n        sb.append(\"TimeoutAction: \").append(getTimeoutAction());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.SearchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getSearchExpression() != null)\r\n        sb.append(\"SearchExpression: \").append(getSearchExpression()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.ResourceFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "void setContinuationToken(String continuationToken){\r\n    this.continuationToken = continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Pose.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoll() != null)\r\n        sb.append(\"Roll: \").append(getRoll()).append(\",\");\r\n    if (getYaw() != null)\r\n        sb.append(\"Yaw: \").append(getYaw()).append(\",\");\r\n    if (getPitch() != null)\r\n        sb.append(\"Pitch: \").append(getPitch());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAclRequest.getBucketName",
	"Comment": "returns the name of the bucket whose acl will be retrieved by this\trequest, when executed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DownloadDBLogFilePortionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getLogFileName() != null)\r\n        sb.append(\"LogFileName: \").append(getLogFileName()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getNumberOfLines() != null)\r\n        sb.append(\"NumberOfLines: \").append(getNumberOfLines());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteEventSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.ServiceUtils.getPartCount",
	"Comment": "returns the part count of the object represented by the getobjectrequest.",
	"Method": "Integer getPartCount(GetObjectRequest getObjectRequest,AmazonS3 s3){\r\n    ValidationUtils.assertNotNull(s3, \"S3 client\");\r\n    ValidationUtils.assertNotNull(getObjectRequest, \"GetObjectRequest\");\r\n    GetObjectMetadataRequest getObjectMetadataRequest = RequestCopyUtils.createGetObjectMetadataRequestFrom(getObjectRequest).withPartNumber(1);\r\n    return s3.getObjectMetadata(getObjectMetadataRequest).getPartCount();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket from which an analytics configuration is deleted.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.AddTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.createAlgorithm",
	"Comment": "create a machine learning algorithm that you can use in amazon sagemaker and list in the aws marketplace.",
	"Method": "CreateAlgorithmResult createAlgorithm(CreateAlgorithmRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateAlgorithm(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeleteFleetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedGetObjectRequest.setExtraMaterialDescription",
	"Comment": "sets the supplemental materials description for the encryption materialsto be used with the current request.",
	"Method": "void setExtraMaterialDescription(ExtraMaterialsDescription supplemental){\r\n    this.supplemental = supplemental == null ? NONE : supplemental;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.getBucketName",
	"Comment": "returns the name of the bucket in which to create the new multipartupload, and hence, the eventual object created from the multipart upload.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Smile.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.UpdateHealthCheckResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheck() != null)\r\n        sb.append(\"HealthCheck: \").append(getHealthCheck());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.SSMLMessageType.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode()).append(\",\");\r\n    if (getText() != null)\r\n        sb.append(\"Text: \").append(getText()).append(\",\");\r\n    if (getVoiceId() != null)\r\n        sb.append(\"VoiceId: \").append(getVoiceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeTableRestoreStatusAsync",
	"Comment": "simplified method form for invoking the describetablerestorestatus operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync(DescribeTableRestoreStatusRequest request,java.util.concurrent.Future<DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync,DescribeTableRestoreStatusRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTableRestoreStatusRequest, DescribeTableRestoreStatusResult> asyncHandler,java.util.concurrent.Future<DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync,java.util.concurrent.Future<DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync,com.amazonaws.handlers.AsyncHandler<DescribeTableRestoreStatusRequest, DescribeTableRestoreStatusResult> asyncHandler){\r\n    return describeTableRestoreStatusAsync(new DescribeTableRestoreStatusRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.IndexFacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCollectionId() != null)\r\n        sb.append(\"CollectionId: \").append(getCollectionId()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getExternalImageId() != null)\r\n        sb.append(\"ExternalImageId: \").append(getExternalImageId()).append(\",\");\r\n    if (getDetectionAttributes() != null)\r\n        sb.append(\"DetectionAttributes: \").append(getDetectionAttributes()).append(\",\");\r\n    if (getMaxFaces() != null)\r\n        sb.append(\"MaxFaces: \").append(getMaxFaces()).append(\",\");\r\n    if (getQualityFilter() != null)\r\n        sb.append(\"QualityFilter: \").append(getQualityFilter());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryS3BucketDestination.setEncryption",
	"Comment": "set the type of encryption to use to protect the inventory contents.",
	"Method": "void setEncryption(InventoryEncryption encryption){\r\n    this.encryption = encryption;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.EndpointConfigSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointConfigName() != null)\r\n        sb.append(\"EndpointConfigName: \").append(getEndpointConfigName()).append(\",\");\r\n    if (getEndpointConfigArn() != null)\r\n        sb.append(\"EndpointConfigArn: \").append(getEndpointConfigArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.disableDomainAutoRenew",
	"Comment": "this operation disables automatic renewal of domain registration for the specified domain.",
	"Method": "DisableDomainAutoRenewResult disableDomainAutoRenew(DisableDomainAutoRenewRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDisableDomainAutoRenew(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SimpleEmail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHtmlPart() != null)\r\n        sb.append(\"HtmlPart: \").append(getHtmlPart()).append(\",\");\r\n    if (getSubject() != null)\r\n        sb.append(\"Subject: \").append(getSubject()).append(\",\");\r\n    if (getTextPart() != null)\r\n        sb.append(\"TextPart: \").append(getTextPart());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeHsmConfigurationsAsync",
	"Comment": "simplified method form for invoking the describehsmconfigurations operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync(DescribeHsmConfigurationsRequest request,java.util.concurrent.Future<DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync,DescribeHsmConfigurationsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeHsmConfigurationsRequest, DescribeHsmConfigurationsResult> asyncHandler,java.util.concurrent.Future<DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync,java.util.concurrent.Future<DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync,com.amazonaws.handlers.AsyncHandler<DescribeHsmConfigurationsRequest, DescribeHsmConfigurationsResult> asyncHandler){\r\n    return describeHsmConfigurationsAsync(new DescribeHsmConfigurationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.getHealthCheckCount",
	"Comment": "retrieves the number of health checks that are associated with the current aws account.",
	"Method": "GetHealthCheckCountResult getHealthCheckCount(GetHealthCheckCountRequest request,GetHealthCheckCountResult getHealthCheckCount){\r\n    return getHealthCheckCount(new GetHealthCheckCountRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketPolicyRequest.getBucketName",
	"Comment": "returns the name of the amazon s3 bucket whose policy is being set.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.ResourceShareAssociation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getAssociatedEntity() != null)\r\n        sb.append(\"AssociatedEntity: \").append(getAssociatedEntity()).append(\",\");\r\n    if (getAssociationType() != null)\r\n        sb.append(\"AssociationType: \").append(getAssociationType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime()).append(\",\");\r\n    if (getExternal() != null)\r\n        sb.append(\"External: \").append(getExternal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeClusterVersionsAsync",
	"Comment": "simplified method form for invoking the describeclusterversions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClusterVersionsResult> describeClusterVersionsAsync(DescribeClusterVersionsRequest request,java.util.concurrent.Future<DescribeClusterVersionsResult> describeClusterVersionsAsync,DescribeClusterVersionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClusterVersionsRequest, DescribeClusterVersionsResult> asyncHandler,java.util.concurrent.Future<DescribeClusterVersionsResult> describeClusterVersionsAsync,java.util.concurrent.Future<DescribeClusterVersionsResult> describeClusterVersionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeClusterVersionsRequest, DescribeClusterVersionsResult> asyncHandler){\r\n    return describeClusterVersionsAsync(new DescribeClusterVersionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ListResolverRuleAssociationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getResolverRuleAssociations() != null)\r\n        sb.append(\"ResolverRuleAssociations: \").append(getResolverRuleAssociations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase.updateInstructionPutRequest",
	"Comment": "updates put request to store the specified instruction object in s3.",
	"Method": "PutObjectRequest updateInstructionPutRequest(PutObjectRequest req,ContentCryptoMaterial cekMaterial){\r\n    byte[] bytes = cekMaterial.toJsonString(cryptoConfig.getCryptoMode()).getBytes(UTF8);\r\n    ObjectMetadata metadata = req.getMetadata();\r\n    if (metadata == null) {\r\n        metadata = new ObjectMetadata();\r\n        req.setMetadata(metadata);\r\n    }\r\n    metadata.setContentLength(bytes.length);\r\n    metadata.addUserMetadata(Headers.CRYPTO_INSTRUCTION_FILE, \"\");\r\n    req.setMetadata(metadata);\r\n    req.setInputStream(new ByteArrayInputStream(bytes));\r\n    return req;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointsBatchRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getEndpointBatchRequest() != null)\r\n        sb.append(\"EndpointBatchRequest: \").append(getEndpointBatchRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ListTagsForDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.EventDestination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCloudWatchLogsDestination() != null)\r\n        sb.append(\"CloudWatchLogsDestination: \").append(getCloudWatchLogsDestination()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getKinesisFirehoseDestination() != null)\r\n        sb.append(\"KinesisFirehoseDestination: \").append(getKinesisFirehoseDestination()).append(\",\");\r\n    if (getMatchingEventTypes() != null)\r\n        sb.append(\"MatchingEventTypes: \").append(getMatchingEventTypes()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setUnmodifiedSinceConstraint",
	"Comment": "sets the optional unmodified constraint that restricts this requestto executing only if the object has not been modified afterthe specified date.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "void setUnmodifiedSinceConstraint(Date date){\r\n    this.unmodifiedSinceConstraint = date;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.model.GetPublicAccessBlockRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountId() != null)\r\n        sb.append(\"AccountId: \").append(getAccountId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.DisassociateResourceShareResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareAssociations() != null)\r\n        sb.append(\"ResourceShareAssociations: \").append(getResourceShareAssociations()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Session.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDuration() != null)\r\n        sb.append(\"Duration: \").append(getDuration()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getStartTimestamp() != null)\r\n        sb.append(\"StartTimestamp: \").append(getStartTimestamp()).append(\",\");\r\n    if (getStopTimestamp() != null)\r\n        sb.append(\"StopTimestamp: \").append(getStopTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.TagFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.resendContactReachabilityEmail",
	"Comment": "for operations that require confirmation that the email address for the registrant contact is valid, such asregistering a new domain, this operation resends the confirmation email to the current email address for theregistrant contact.",
	"Method": "ResendContactReachabilityEmailResult resendContactReachabilityEmail(ResendContactReachabilityEmailRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeResendContactReachabilityEmail(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectLockRule.getDefaultRetention",
	"Comment": "the default retention period that you want to apply to new objects placed in the specified bucket.",
	"Method": "DefaultRetention getDefaultRetention(){\r\n    return defaultRetention;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.EngineDefaults.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListQueryLoggingConfigsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getQueryLoggingConfigs() != null)\r\n        sb.append(\"QueryLoggingConfigs: \").append(getQueryLoggingConfigs()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.useStrictHostNameVerification",
	"Comment": "s3 uses wildcard certificates so we have to disable strict hostname verification when usingssl.",
	"Method": "boolean useStrictHostNameVerification(){\r\n    return false;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyClusterIamRolesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getAddIamRoles() != null)\r\n        sb.append(\"AddIamRoles: \").append(getAddIamRoles()).append(\",\");\r\n    if (getRemoveIamRoles() != null)\r\n        sb.append(\"RemoveIamRoles: \").append(getRemoveIamRoles());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.updateTrafficPolicyComment",
	"Comment": "updates the comment for a specified traffic policy version.",
	"Method": "UpdateTrafficPolicyCommentResult updateTrafficPolicyComment(UpdateTrafficPolicyCommentRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateTrafficPolicyComment(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getVideoMetadata() != null)\r\n        sb.append(\"VideoMetadata: \").append(getVideoMetadata()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getLabels() != null)\r\n        sb.append(\"Labels: \").append(getLabels());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.ListLexiconsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setModifiedSinceConstraint",
	"Comment": "sets the optional modified constraint that restricts this requestto executing only if the object has been modified after thespecified date.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "void setModifiedSinceConstraint(Date date){\r\n    this.modifiedSinceConstraint = date;\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.UpdateUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getRole() != null)\r\n        sb.append(\"Role: \").append(getRole());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setLastPart",
	"Comment": "marks this part as the last part being uploaded in a multipart upload.",
	"Method": "void setLastPart(boolean isLastPart){\r\n    this.isLastPart = isLastPart;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.SourceRegion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRegionName() != null)\r\n        sb.append(\"RegionName: \").append(getRegionName()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeEventCategoriesAsync",
	"Comment": "simplified method form for invoking the describeeventcategories operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync(DescribeEventCategoriesRequest request,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,DescribeEventCategoriesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventCategoriesRequest, DescribeEventCategoriesResult> asyncHandler,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventCategoriesRequest, DescribeEventCategoriesResult> asyncHandler){\r\n    return describeEventCategoriesAsync(new DescribeEventCategoriesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.getEncodingType",
	"Comment": "gets the optional encodingtype parameter indicating theencoding method to be applied on the response.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.getVersionIdMarker",
	"Comment": "gets the value of the version id marker parameter used to request this versionlisting. returns null if no version id marker was otherwise specified.",
	"Method": "String getVersionIdMarker(){\r\n    return versionIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.getAccessControlList",
	"Comment": "returns the optional access control list for the new upload. ifspecified, cannedacl will be ignored.",
	"Method": "AccessControlList getAccessControlList(){\r\n    return accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CopyDBClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceDBClusterParameterGroupIdentifier() != null)\r\n        sb.append(\"SourceDBClusterParameterGroupIdentifier: \").append(getSourceDBClusterParameterGroupIdentifier()).append(\",\");\r\n    if (getTargetDBClusterParameterGroupIdentifier() != null)\r\n        sb.append(\"TargetDBClusterParameterGroupIdentifier: \").append(getTargetDBClusterParameterGroupIdentifier()).append(\",\");\r\n    if (getTargetDBClusterParameterGroupDescription() != null)\r\n        sb.append(\"TargetDBClusterParameterGroupDescription: \").append(getTargetDBClusterParameterGroupDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeployedImage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSpecifiedImage() != null)\r\n        sb.append(\"SpecifiedImage: \").append(getSpecifiedImage()).append(\",\");\r\n    if (getResolvedImage() != null)\r\n        sb.append(\"ResolvedImage: \").append(getResolvedImage()).append(\",\");\r\n    if (getResolutionTime() != null)\r\n        sb.append(\"ResolutionTime: \").append(getResolutionTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.TagResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.AmazonQuickSightAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonquicksightasync using the current builder configuration.",
	"Method": "AmazonQuickSightAsync build(AwsAsyncClientParams params){\r\n    return new AmazonQuickSightAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeCertificatesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificates() != null)\r\n        sb.append(\"Certificates: \").append(getCertificates()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.waiters.AmazonRDSWaiters.dBSnapshotAvailable",
	"Comment": "builds a dbsnapshotavailable waiter by using custom parameters waiterparameters and other parameters defined inthe waiters specification, and then polls until it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeDBSnapshotsRequest> dBSnapshotAvailable(){\r\n    return new WaiterBuilder<DescribeDBSnapshotsRequest, DescribeDBSnapshotsResult>().withSdkFunction(new DescribeDBSnapshotsFunction(client)).withAcceptors(new DBSnapshotAvailable.IsAvailableMatcher(), new DBSnapshotAvailable.IsDeletedMatcher(), new DBSnapshotAvailable.IsDeletingMatcher(), new DBSnapshotAvailable.IsFailedMatcher(), new DBSnapshotAvailable.IsIncompatiblerestoreMatcher(), new DBSnapshotAvailable.IsIncompatibleparametersMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.listTags",
	"Comment": "returns the tags for the specified amazon sagemaker resource.",
	"Method": "ListTagsResult listTags(ListTagsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTags(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.BatchDescribeSimulationJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobs() != null)\r\n        sb.append(\"Jobs: \").append(getJobs());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterBacktracksResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBClusterBacktracks() != null)\r\n        sb.append(\"DBClusterBacktracks: \").append(getDBClusterBacktracks());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.DownloadImpl.getLastFullyDownloadedPartNumber",
	"Comment": "for parallel downloads, returns the last part number that wassuccessfully written into the download file.returns null for serial downloads.",
	"Method": "Integer getLastFullyDownloadedPartNumber(){\r\n    return lastFullyDownloadedPartNumber;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeferredMaintenanceWindow.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDeferMaintenanceIdentifier() != null)\r\n        sb.append(\"DeferMaintenanceIdentifier: \").append(getDeferMaintenanceIdentifier()).append(\",\");\r\n    if (getDeferMaintenanceStartTime() != null)\r\n        sb.append(\"DeferMaintenanceStartTime: \").append(getDeferMaintenanceStartTime()).append(\",\");\r\n    if (getDeferMaintenanceEndTime() != null)\r\n        sb.append(\"DeferMaintenanceEndTime: \").append(getDeferMaintenanceEndTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRetentionRequest.setRequesterPays",
	"Comment": "used for downloading an amazon s3 object from a requester pays bucket. ifset the requester is charged for downloading the data from the bucket.if a bucket is enabled for requester pays, then any attempt to read anobject from it without requester pays enabled will result in a 403 errorand the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.waiters.AmazonRDSWaiters.dBInstanceDeleted",
	"Comment": "builds a dbinstancedeleted waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeDBInstancesRequest> dBInstanceDeleted(){\r\n    return new WaiterBuilder<DescribeDBInstancesRequest, DescribeDBInstancesResult>().withSdkFunction(new DescribeDBInstancesFunction(client)).withAcceptors(new DBInstanceDeleted.IsDeletedMatcher(), new DBInstanceDeleted.IsDBInstanceNotFoundMatcher(), new DBInstanceDeleted.IsCreatingMatcher(), new DBInstanceDeleted.IsModifyingMatcher(), new DBInstanceDeleted.IsRebootingMatcher(), new DBInstanceDeleted.IsResettingmastercredentialsMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ImageQuality.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBrightness() != null)\r\n        sb.append(\"Brightness: \").append(getBrightness()).append(\",\");\r\n    if (getSharpness() != null)\r\n        sb.append(\"Sharpness: \").append(getSharpness());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setEncodingType",
	"Comment": "for internal use only. sets the encoding type used by amazon s3 to encodeobject key names in the xml response.",
	"Method": "void setEncodingType(String encodingType){\r\n    this.encodingType = encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest.setBucketName",
	"Comment": "sets the name of amazon s3 bucket for replication configuration.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ListResolverEndpointsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.MessageTag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.IpAddressResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIpId() != null)\r\n        sb.append(\"IpId: \").append(getIpId()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getIp() != null)\r\n        sb.append(\"Ip: \").append(getIp()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getModificationTime() != null)\r\n        sb.append(\"ModificationTime: \").append(getModificationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.getPartETags",
	"Comment": "returns the list of part numbers and etags that identify the individualparts of the multipart upload to complete.",
	"Method": "List<PartETag> getPartETags(){\r\n    return partETags;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelCountersForWorkteam.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHumanLabeled() != null)\r\n        sb.append(\"HumanLabeled: \").append(getHumanLabeled()).append(\",\");\r\n    if (getPendingHuman() != null)\r\n        sb.append(\"PendingHuman: \").append(getPendingHuman()).append(\",\");\r\n    if (getTotal() != null)\r\n        sb.append(\"Total: \").append(getTotal());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ResetDBClusterParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBCluster.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterParameterGroup() != null)\r\n        sb.append(\"DBClusterParameterGroup: \").append(getDBClusterParameterGroup()).append(\",\");\r\n    if (getDBSubnetGroup() != null)\r\n        sb.append(\"DBSubnetGroup: \").append(getDBSubnetGroup()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPercentProgress() != null)\r\n        sb.append(\"PercentProgress: \").append(getPercentProgress()).append(\",\");\r\n    if (getEarliestRestorableTime() != null)\r\n        sb.append(\"EarliestRestorableTime: \").append(getEarliestRestorableTime()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getReaderEndpoint() != null)\r\n        sb.append(\"ReaderEndpoint: \").append(getReaderEndpoint()).append(\",\");\r\n    if (getCustomEndpoints() != null)\r\n        sb.append(\"CustomEndpoints: \").append(getCustomEndpoints()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLatestRestorableTime() != null)\r\n        sb.append(\"LatestRestorableTime: \").append(getLatestRestorableTime()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getDBClusterOptionGroupMemberships() != null)\r\n        sb.append(\"DBClusterOptionGroupMemberships: \").append(getDBClusterOptionGroupMemberships()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getReplicationSourceIdentifier() != null)\r\n        sb.append(\"ReplicationSourceIdentifier: \").append(getReplicationSourceIdentifier()).append(\",\");\r\n    if (getReadReplicaIdentifiers() != null)\r\n        sb.append(\"ReadReplicaIdentifiers: \").append(getReadReplicaIdentifiers()).append(\",\");\r\n    if (getDBClusterMembers() != null)\r\n        sb.append(\"DBClusterMembers: \").append(getDBClusterMembers()).append(\",\");\r\n    if (getVpcSecurityGroups() != null)\r\n        sb.append(\"VpcSecurityGroups: \").append(getVpcSecurityGroups()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getDbClusterResourceId() != null)\r\n        sb.append(\"DbClusterResourceId: \").append(getDbClusterResourceId()).append(\",\");\r\n    if (getDBClusterArn() != null)\r\n        sb.append(\"DBClusterArn: \").append(getDBClusterArn()).append(\",\");\r\n    if (getAssociatedRoles() != null)\r\n        sb.append(\"AssociatedRoles: \").append(getAssociatedRoles()).append(\",\");\r\n    if (getIAMDatabaseAuthenticationEnabled() != null)\r\n        sb.append(\"IAMDatabaseAuthenticationEnabled: \").append(getIAMDatabaseAuthenticationEnabled()).append(\",\");\r\n    if (getCloneGroupId() != null)\r\n        sb.append(\"CloneGroupId: \").append(getCloneGroupId()).append(\",\");\r\n    if (getClusterCreateTime() != null)\r\n        sb.append(\"ClusterCreateTime: \").append(getClusterCreateTime()).append(\",\");\r\n    if (getEarliestBacktrackTime() != null)\r\n        sb.append(\"EarliestBacktrackTime: \").append(getEarliestBacktrackTime()).append(\",\");\r\n    if (getBacktrackWindow() != null)\r\n        sb.append(\"BacktrackWindow: \").append(getBacktrackWindow()).append(\",\");\r\n    if (getBacktrackConsumedChangeRecords() != null)\r\n        sb.append(\"BacktrackConsumedChangeRecords: \").append(getBacktrackConsumedChangeRecords()).append(\",\");\r\n    if (getEnabledCloudwatchLogsExports() != null)\r\n        sb.append(\"EnabledCloudwatchLogsExports: \").append(getEnabledCloudwatchLogsExports()).append(\",\");\r\n    if (getCapacity() != null)\r\n        sb.append(\"Capacity: \").append(getCapacity()).append(\",\");\r\n    if (getEngineMode() != null)\r\n        sb.append(\"EngineMode: \").append(getEngineMode()).append(\",\");\r\n    if (getScalingConfigurationInfo() != null)\r\n        sb.append(\"ScalingConfigurationInfo: \").append(getScalingConfigurationInfo()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection()).append(\",\");\r\n    if (getHttpEndpointEnabled() != null)\r\n        sb.append(\"HttpEndpointEnabled: \").append(getHttpEndpointEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteSnapshotCopyGrantRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotCopyGrantName() != null)\r\n        sb.append(\"SnapshotCopyGrantName: \").append(getSnapshotCopyGrantName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getSnapshots() != null)\r\n        sb.append(\"Snapshots: \").append(getSnapshots());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.Certificate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateIdentifier() != null)\r\n        sb.append(\"CertificateIdentifier: \").append(getCertificateIdentifier()).append(\",\");\r\n    if (getCertificateType() != null)\r\n        sb.append(\"CertificateType: \").append(getCertificateType()).append(\",\");\r\n    if (getThumbprint() != null)\r\n        sb.append(\"Thumbprint: \").append(getThumbprint()).append(\",\");\r\n    if (getValidFrom() != null)\r\n        sb.append(\"ValidFrom: \").append(getValidFrom()).append(\",\");\r\n    if (getValidTill() != null)\r\n        sb.append(\"ValidTill: \").append(getValidTill()).append(\",\");\r\n    if (getCertificateArn() != null)\r\n        sb.append(\"CertificateArn: \").append(getCertificateArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeEngineDefaultClusterParametersRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetReusableDelegationSetLimitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getDelegationSetId() != null)\r\n        sb.append(\"DelegationSetId: \").append(getDelegationSetId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.setVersionIdMarker",
	"Comment": "for internal use only. sets the version id markerparameter originally used to request this version listing.",
	"Method": "void setVersionIdMarker(String versionIdMarker){\r\n    this.versionIdMarker = versionIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteSegmentRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSegmentGroups() != null)\r\n        sb.append(\"SegmentGroups: \").append(getSegmentGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3Location.withPrefix",
	"Comment": "sets the prefix that is prepended to the restore results for this request.",
	"Method": "S3Location withPrefix(String prefix){\r\n    setPrefix(prefix);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DefaultRetention.withDays",
	"Comment": "the number of days that you want to specify for the default retention period.",
	"Method": "DefaultRetention withDays(Integer days){\r\n    this.days = days;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartETag.withPartNumber",
	"Comment": "sets the part number of the associated part, and returns this updatedpartetag object so that additional method calls can be chained together.",
	"Method": "PartETag withPartNumber(int partNumber){\r\n    this.partNumber = partNumber;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getDBSubnetGroupDescription() != null)\r\n        sb.append(\"DBSubnetGroupDescription: \").append(getDBSubnetGroupDescription()).append(\",\");\r\n    if (getSubnetIds() != null)\r\n        sb.append(\"SubnetIds: \").append(getSubnetIds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3EncryptionClientBuilder.setCryptoConfiguration",
	"Comment": "sets the crypto configuration whose parameters will be used to encrypt and decrypt data.",
	"Method": "void setCryptoConfiguration(CryptoConfiguration cryptoConfig){\r\n    this.cryptoConfig = cryptoConfig;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHealthCheckStatusRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheckId() != null)\r\n        sb.append(\"HealthCheckId: \").append(getHealthCheckId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated uploadpartrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "UploadPartRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeHyperParameterTuningJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHyperParameterTuningJobName() != null)\r\n        sb.append(\"HyperParameterTuningJobName: \").append(getHyperParameterTuningJobName()).append(\",\");\r\n    if (getHyperParameterTuningJobArn() != null)\r\n        sb.append(\"HyperParameterTuningJobArn: \").append(getHyperParameterTuningJobArn()).append(\",\");\r\n    if (getHyperParameterTuningJobConfig() != null)\r\n        sb.append(\"HyperParameterTuningJobConfig: \").append(getHyperParameterTuningJobConfig()).append(\",\");\r\n    if (getTrainingJobDefinition() != null)\r\n        sb.append(\"TrainingJobDefinition: \").append(getTrainingJobDefinition()).append(\",\");\r\n    if (getHyperParameterTuningJobStatus() != null)\r\n        sb.append(\"HyperParameterTuningJobStatus: \").append(getHyperParameterTuningJobStatus()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getHyperParameterTuningEndTime() != null)\r\n        sb.append(\"HyperParameterTuningEndTime: \").append(getHyperParameterTuningEndTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getTrainingJobStatusCounters() != null)\r\n        sb.append(\"TrainingJobStatusCounters: \").append(getTrainingJobStatusCounters()).append(\",\");\r\n    if (getObjectiveStatusCounters() != null)\r\n        sb.append(\"ObjectiveStatusCounters: \").append(getObjectiveStatusCounters()).append(\",\");\r\n    if (getBestTrainingJob() != null)\r\n        sb.append(\"BestTrainingJob: \").append(getBestTrainingJob()).append(\",\");\r\n    if (getOverallBestTrainingJob() != null)\r\n        sb.append(\"OverallBestTrainingJob: \").append(getOverallBestTrainingJob()).append(\",\");\r\n    if (getWarmStartConfig() != null)\r\n        sb.append(\"WarmStartConfig: \").append(getWarmStartConfig()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.Event.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getSeverity() != null)\r\n        sb.append(\"Severity: \").append(getSeverity()).append(\",\");\r\n    if (getDate() != null)\r\n        sb.append(\"Date: \").append(getDate()).append(\",\");\r\n    if (getEventId() != null)\r\n        sb.append(\"EventId: \").append(getEventId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.Group.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsConfiguration.setFilter",
	"Comment": "sets the filter used to describe a set of objects for analysis.if no filter is provided, all objects will be considered in any analysis.",
	"Method": "void setFilter(AnalyticsFilter filter){\r\n    this.filter = filter;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withSourceKey",
	"Comment": "sets the key in the source bucket under which the source object to becopied is stored and returns this object, enabling additional method callsto be chained together.",
	"Method": "CopyObjectRequest withSourceKey(String sourceKey){\r\n    setSourceKey(sourceKey);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.EnableDomainTransferLockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.CreateConfigurationSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsRequest.withContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "ListBucketInventoryConfigurationsRequest withContinuationToken(String continuationToken){\r\n    setContinuationToken(continuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.UpdateConfigurationSetEventDestinationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getEventDestination() != null)\r\n        sb.append(\"EventDestination: \").append(getEventDestination()).append(\",\");\r\n    if (getEventDestinationName() != null)\r\n        sb.append(\"EventDestinationName: \").append(getEventDestinationName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionClient.deleteStreamProcessor",
	"Comment": "deletes the stream processor identified by name. you assign the value for name when youcreate the stream processor with . you might not be able to use the same name for a stream processor for a fewseconds after calling deletestreamprocessor.",
	"Method": "DeleteStreamProcessorResult deleteStreamProcessor(DeleteStreamProcessorRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteStreamProcessor(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.RegisterDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.listReusableDelegationSetsAsync",
	"Comment": "simplified method form for invoking the listreusabledelegationsets operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListReusableDelegationSetsResult> listReusableDelegationSetsAsync(ListReusableDelegationSetsRequest request,java.util.concurrent.Future<ListReusableDelegationSetsResult> listReusableDelegationSetsAsync,ListReusableDelegationSetsRequest request,com.amazonaws.handlers.AsyncHandler<ListReusableDelegationSetsRequest, ListReusableDelegationSetsResult> asyncHandler,java.util.concurrent.Future<ListReusableDelegationSetsResult> listReusableDelegationSetsAsync,java.util.concurrent.Future<ListReusableDelegationSetsResult> listReusableDelegationSetsAsync,com.amazonaws.handlers.AsyncHandler<ListReusableDelegationSetsRequest, ListReusableDelegationSetsResult> asyncHandler){\r\n    return listReusableDelegationSetsAsync(new ListReusableDelegationSetsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.getPrefix",
	"Comment": "gets the optional prefix parameter and restricts the response to keysthat begin with the specified prefix. use prefixes to separate abucket into different sets of keys, similar to how a file system organizes filesinto directories.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeCertificatesAsync",
	"Comment": "simplified method form for invoking the describecertificates operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeCertificatesResult> describeCertificatesAsync(DescribeCertificatesRequest request,java.util.concurrent.Future<DescribeCertificatesResult> describeCertificatesAsync,DescribeCertificatesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeCertificatesRequest, DescribeCertificatesResult> asyncHandler,java.util.concurrent.Future<DescribeCertificatesResult> describeCertificatesAsync,java.util.concurrent.Future<DescribeCertificatesResult> describeCertificatesAsync,com.amazonaws.handlers.AsyncHandler<DescribeCertificatesRequest, DescribeCertificatesResult> asyncHandler){\r\n    return describeCertificatesAsync(new DescribeCertificatesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.DisableDomainAutoRenewRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketPolicyRequest.withPolicyText",
	"Comment": "sets the policy to apply to the specified bucket, and returns the updatedrequest object so that additional method calls can be chained together.",
	"Method": "SetBucketPolicyRequest withPolicyText(String policyText){\r\n    setPolicyText(policyText);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.getId",
	"Comment": "returns the identifier used to represent an analytics configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateEndpointConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointConfigName() != null)\r\n        sb.append(\"EndpointConfigName: \").append(getEndpointConfigName()).append(\",\");\r\n    if (getProductionVariants() != null)\r\n        sb.append(\"ProductionVariants: \").append(getProductionVariants()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeDBSnapshotAttributesAsync",
	"Comment": "simplified method form for invoking the describedbsnapshotattributes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DBSnapshotAttributesResult> describeDBSnapshotAttributesAsync(DescribeDBSnapshotAttributesRequest request,java.util.concurrent.Future<DBSnapshotAttributesResult> describeDBSnapshotAttributesAsync,DescribeDBSnapshotAttributesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBSnapshotAttributesRequest, DBSnapshotAttributesResult> asyncHandler,java.util.concurrent.Future<DBSnapshotAttributesResult> describeDBSnapshotAttributesAsync,java.util.concurrent.Future<DBSnapshotAttributesResult> describeDBSnapshotAttributesAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBSnapshotAttributesRequest, DBSnapshotAttributesResult> asyncHandler){\r\n    return describeDBSnapshotAttributesAsync(new DescribeDBSnapshotAttributesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.model.GetAttributeValuesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeValues() != null)\r\n        sb.append(\"AttributeValues: \").append(getAttributeValues()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.Filter.getS3KeyFilter",
	"Comment": "filter criteria that limits the objects that can trigger event notifications based on theirs3 key name",
	"Method": "S3KeyFilter getS3KeyFilter(){\r\n    return s3KeyFilter;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.GetClusterCredentialsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDbUser() != null)\r\n        sb.append(\"DbUser: \").append(getDbUser()).append(\",\");\r\n    if (getDbPassword() != null)\r\n        sb.append(\"DbPassword: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getExpiration() != null)\r\n        sb.append(\"Expiration: \").append(getExpiration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CSVOutput.withQuoteEscapeCharacter",
	"Comment": "sets the single character used for escaping the quote character inside an already escaped value.",
	"Method": "CSVOutput withQuoteEscapeCharacter(String quoteEscapeCharacter,CSVOutput withQuoteEscapeCharacter,Character quoteEscapeCharacter){\r\n    setQuoteEscapeCharacter(quoteEscapeCharacter);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBClusterBacktrack.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getBacktrackIdentifier() != null)\r\n        sb.append(\"BacktrackIdentifier: \").append(getBacktrackIdentifier()).append(\",\");\r\n    if (getBacktrackTo() != null)\r\n        sb.append(\"BacktrackTo: \").append(getBacktrackTo()).append(\",\");\r\n    if (getBacktrackedFrom() != null)\r\n        sb.append(\"BacktrackedFrom: \").append(getBacktrackedFrom()).append(\",\");\r\n    if (getBacktrackRequestCreationTime() != null)\r\n        sb.append(\"BacktrackRequestCreationTime: \").append(getBacktrackRequestCreationTime()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.withUploadId",
	"Comment": "sets the id of the multipart upload to complete, and returns this updatedcompletemultipartuploadrequest object so that additional method calls canbe chained together.",
	"Method": "CompleteMultipartUploadRequest withUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyClusterMaintenanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getDeferMaintenance() != null)\r\n        sb.append(\"DeferMaintenance: \").append(getDeferMaintenance()).append(\",\");\r\n    if (getDeferMaintenanceIdentifier() != null)\r\n        sb.append(\"DeferMaintenanceIdentifier: \").append(getDeferMaintenanceIdentifier()).append(\",\");\r\n    if (getDeferMaintenanceStartTime() != null)\r\n        sb.append(\"DeferMaintenanceStartTime: \").append(getDeferMaintenanceStartTime()).append(\",\");\r\n    if (getDeferMaintenanceEndTime() != null)\r\n        sb.append(\"DeferMaintenanceEndTime: \").append(getDeferMaintenanceEndTime()).append(\",\");\r\n    if (getDeferMaintenanceDuration() != null)\r\n        sb.append(\"DeferMaintenanceDuration: \").append(getDeferMaintenanceDuration());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.setInputStream",
	"Comment": "sets the stream containing the data to upload for the new part.",
	"Method": "void setInputStream(InputStream inputStream){\r\n    this.inputStream = inputStream;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVideo() != null)\r\n        sb.append(\"Video: \").append(getVideo()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getNotificationChannel() != null)\r\n        sb.append(\"NotificationChannel: \").append(getNotificationChannel()).append(\",\");\r\n    if (getJobTag() != null)\r\n        sb.append(\"JobTag: \").append(getJobTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest.withBucketName",
	"Comment": "sets the name of amazon s3 bucket for replication configuration. returnsthe updated object. .",
	"Method": "SetBucketReplicationConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.describeModel",
	"Comment": "describes a model that you created using the createmodel api.",
	"Method": "DescribeModelResult describeModel(DescribeModelRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeModel(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.Filter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteTrafficPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.withBucketName",
	"Comment": "sets the name of the bucket involved in this request, and returns thisrequest object to enable additional method calls to be chained together.",
	"Method": "GeneratePresignedUrlRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getMd5Digest",
	"Comment": "returns the optional, but recommended, md5 hash of the content of thispart. if specified, this value will be sent to amazon s3 to verify thedata integrity when the data reaches amazon s3.",
	"Method": "String getMd5Digest(){\r\n    return md5Digest;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeValidDBInstanceModifications",
	"Comment": "you can call describevaliddbinstancemodifications to learn what modifications you can make to your dbinstance. you can use this information when you call modifydbinstance.",
	"Method": "ValidDBInstanceModificationsMessage describeValidDBInstanceModifications(DescribeValidDBInstanceModificationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeValidDBInstanceModifications(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopLabelingJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabelingJobName() != null)\r\n        sb.append(\"LabelingJobName: \").append(getLabelingJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.UpdateTrafficPolicyInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicyInstance() != null)\r\n        sb.append(\"TrafficPolicyInstance: \").append(getTrafficPolicyInstance());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBEngineVersion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getDBEngineDescription() != null)\r\n        sb.append(\"DBEngineDescription: \").append(getDBEngineDescription()).append(\",\");\r\n    if (getDBEngineVersionDescription() != null)\r\n        sb.append(\"DBEngineVersionDescription: \").append(getDBEngineVersionDescription()).append(\",\");\r\n    if (getDefaultCharacterSet() != null)\r\n        sb.append(\"DefaultCharacterSet: \").append(getDefaultCharacterSet()).append(\",\");\r\n    if (getSupportedCharacterSets() != null)\r\n        sb.append(\"SupportedCharacterSets: \").append(getSupportedCharacterSets()).append(\",\");\r\n    if (getValidUpgradeTarget() != null)\r\n        sb.append(\"ValidUpgradeTarget: \").append(getValidUpgradeTarget()).append(\",\");\r\n    if (getSupportedTimezones() != null)\r\n        sb.append(\"SupportedTimezones: \").append(getSupportedTimezones()).append(\",\");\r\n    if (getExportableLogTypes() != null)\r\n        sb.append(\"ExportableLogTypes: \").append(getExportableLogTypes()).append(\",\");\r\n    if (getSupportsLogExportsToCloudwatchLogs() != null)\r\n        sb.append(\"SupportsLogExportsToCloudwatchLogs: \").append(getSupportsLogExportsToCloudwatchLogs()).append(\",\");\r\n    if (getSupportsReadReplica() != null)\r\n        sb.append(\"SupportsReadReplica: \").append(getSupportsReadReplica()).append(\",\");\r\n    if (getSupportedEngineModes() != null)\r\n        sb.append(\"SupportedEngineModes: \").append(getSupportedEngineModes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.GetConfigurationSetEventDestinationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.AddTagsToResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeEventSubscriptionsAsync",
	"Comment": "simplified method form for invoking the describeeventsubscriptions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync(DescribeEventSubscriptionsRequest request,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,DescribeEventSubscriptionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventSubscriptionsRequest, DescribeEventSubscriptionsResult> asyncHandler,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,java.util.concurrent.Future<DescribeEventSubscriptionsResult> describeEventSubscriptionsAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventSubscriptionsRequest, DescribeEventSubscriptionsResult> asyncHandler){\r\n    return describeEventSubscriptionsAsync(new DescribeEventSubscriptionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.Filter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getValues() != null)\r\n        sb.append(\"Values: \").append(getValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.OptionGroupOptionSetting.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSettingName() != null)\r\n        sb.append(\"SettingName: \").append(getSettingName()).append(\",\");\r\n    if (getSettingDescription() != null)\r\n        sb.append(\"SettingDescription: \").append(getSettingDescription()).append(\",\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getApplyType() != null)\r\n        sb.append(\"ApplyType: \").append(getApplyType()).append(\",\");\r\n    if (getAllowedValues() != null)\r\n        sb.append(\"AllowedValues: \").append(getAllowedValues()).append(\",\");\r\n    if (getIsModifiable() != null)\r\n        sb.append(\"IsModifiable: \").append(getIsModifiable()).append(\",\");\r\n    if (getIsRequired() != null)\r\n        sb.append(\"IsRequired: \").append(getIsRequired()).append(\",\");\r\n    if (getMinimumEngineVersionPerAllowedValue() != null)\r\n        sb.append(\"MinimumEngineVersionPerAllowedValue: \").append(getMinimumEngineVersionPerAllowedValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.GetGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SimpleEmailPart.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCharset() != null)\r\n        sb.append(\"Charset: \").append(getCharset()).append(\",\");\r\n    if (getData() != null)\r\n        sb.append(\"Data: \").append(getData());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RoutingRule.setCondition",
	"Comment": "set the condition that must be met for the specified redirect to apply.",
	"Method": "void setCondition(RoutingRuleCondition condition){\r\n    this.condition = condition;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.deleteConfigurationSet",
	"Comment": "delete an existing configuration set.in amazon pinpoint, configuration sets are groups of rules that you can apply to the emails you send. youapply a configuration set to an email by including a reference to the configuration set in the headers of theemail. when you apply a configuration set to an email, all of the rules in that configuration set are applied tothe email.",
	"Method": "DeleteConfigurationSetResult deleteConfigurationSet(DeleteConfigurationSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteConfigurationSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSecurityGroupName() != null)\r\n        sb.append(\"DBSecurityGroupName: \").append(getDBSecurityGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBInstanceAutomatedBackupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBInstanceAutomatedBackups() != null)\r\n        sb.append(\"DBInstanceAutomatedBackups: \").append(getDBInstanceAutomatedBackups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.StorageClassAnalysis.setDataExport",
	"Comment": "sets the container used to describe how data related to thestorage class analysis should be exported.",
	"Method": "void setDataExport(StorageClassAnalysisDataExport dataExport){\r\n    this.dataExport = dataExport;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.listLabelingJobsForWorkteam",
	"Comment": "gets a list of labeling jobs assigned to a specified work team.",
	"Method": "ListLabelingJobsForWorkteamResult listLabelingJobsForWorkteam(ListLabelingJobsForWorkteamRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListLabelingJobsForWorkteam(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListModelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModels() != null)\r\n        sb.append(\"Models: \").append(getModels()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setSSEAwsKeyManagementParams",
	"Comment": "sets the aws key management system parameters used to encrypt the objecton server side.",
	"Method": "void setSSEAwsKeyManagementParams(SSEAwsKeyManagementParams params){\r\n    if (params != null && this.sseCustomerKey != null) {\r\n        throw new IllegalArgumentException(\"Either SSECustomerKey or SSEAwsKeyManagementParams must not be set at the same time.\");\r\n    }\r\n    this.sseAwsKeyManagementParams = params;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetQueryLoggingConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceSearchSettings.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCollectionId() != null)\r\n        sb.append(\"CollectionId: \").append(getCollectionId()).append(\",\");\r\n    if (getFaceMatchThreshold() != null)\r\n        sb.append(\"FaceMatchThreshold: \").append(getFaceMatchThreshold());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setSourceKey",
	"Comment": "sets the source bucket key under which the source object to be copied isstored.",
	"Method": "void setSourceKey(String sourceKey){\r\n    this.sourceKey = sourceKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.withBucketName",
	"Comment": "sets the name of the amazon s3 bucket containing the object to deleteand returns this object, enabling additional method calls to be chainedtogether.",
	"Method": "DeleteObjectRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopCompilationJobRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompilationJobName() != null)\r\n        sb.append(\"CompilationJobName: \").append(getCompilationJobName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.createHyperParameterTuningJob",
	"Comment": "starts a hyperparameter tuning job. a hyperparameter tuning job finds the best version of a model by running manytraining jobs on your dataset using the algorithm you choose and values for hyperparameters within ranges thatyou specify. it then chooses the hyperparameter values that result in a model that performs the best, as measuredby an objective metric that you choose.",
	"Method": "CreateHyperParameterTuningJobResult createHyperParameterTuningJob(CreateHyperParameterTuningJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateHyperParameterTuningJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointArn() != null)\r\n        sb.append(\"EndpointArn: \").append(getEndpointArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setBucketName",
	"Comment": "sets the name of the bucket containing the listed parts, as specified inthe original request.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListHostedZonesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZones() != null)\r\n        sb.append(\"HostedZones: \").append(getHostedZones()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CSVOutput.withQuoteCharacter",
	"Comment": "sets the value used for escaping where the field delimiter is part of the value.",
	"Method": "CSVOutput withQuoteCharacter(String quoteCharacter,CSVOutput withQuoteCharacter,Character quoteCharacter){\r\n    setQuoteCharacter(quoteCharacter);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.setKeyMarker",
	"Comment": "sets the optional keymarker parameter indicating where in the sorted listof all versions in the specified bucket to begin returning results.",
	"Method": "void setKeyMarker(String keyMarker){\r\n    this.keyMarker = keyMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.PurchaseReservedNodeOfferingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedNodeOfferingId() != null)\r\n        sb.append(\"ReservedNodeOfferingId: \").append(getReservedNodeOfferingId()).append(\",\");\r\n    if (getNodeCount() != null)\r\n        sb.append(\"NodeCount: \").append(getNodeCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.withContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "ListObjectsV2Request withContinuationToken(String continuationToken){\r\n    setContinuationToken(continuationToken);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClient.listPrincipals",
	"Comment": "lists the principals with access to the specified resource.",
	"Method": "ListPrincipalsResult listPrincipals(ListPrincipalsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListPrincipals(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.withMD5Digest",
	"Comment": "sets the optional, but recommended, md5 hash of the content of this part.if specified, this value will be sent to amazon s3 to verify the dataintegrity when the data reaches amazon s3.returns this updated uploadpartrequest object so that additional methodcalls can be chained together.",
	"Method": "UploadPartRequest withMD5Digest(String md5Digest){\r\n    this.md5Digest = md5Digest;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.GetDomainSuggestionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSuggestionsList() != null)\r\n        sb.append(\"SuggestionsList: \").append(getSuggestionsList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.updateDomainNameservers",
	"Comment": "this operation replaces the current set of name servers for the domain with the specified set of name servers. ifyou use amazon route 53 as your dns service, specify the four name servers in the delegation set for the hostedzone for the domain.if successful, this operation returns an operation id that you can use to track the progress and completion ofthe action. if the request is not completed successfully, the domain registrant will be notified by email.",
	"Method": "UpdateDomainNameserversResult updateDomainNameservers(UpdateDomainNameserversRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateDomainNameservers(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeDBParameterGroupsAsync",
	"Comment": "simplified method form for invoking the describedbparametergroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBParameterGroupsResult> describeDBParameterGroupsAsync(DescribeDBParameterGroupsRequest request,java.util.concurrent.Future<DescribeDBParameterGroupsResult> describeDBParameterGroupsAsync,DescribeDBParameterGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBParameterGroupsRequest, DescribeDBParameterGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeDBParameterGroupsResult> describeDBParameterGroupsAsync,java.util.concurrent.Future<DescribeDBParameterGroupsResult> describeDBParameterGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBParameterGroupsRequest, DescribeDBParameterGroupsResult> asyncHandler){\r\n    return describeDBParameterGroupsAsync(new DescribeDBParameterGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.UploadResult.setVersionId",
	"Comment": "sets the version id of the new object, only present if versioning hasbeen enabled for the bucket.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteQueryLoggingConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOrderableClusterOptions() != null)\r\n        sb.append(\"OrderableClusterOptions: \").append(getOrderableClusterOptions()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SelectObjectContentEventException.getErrorCode",
	"Comment": "a unique error code for the failure scenario encountered by the service. may be null if a code was not returned by theservice.",
	"Method": "String getErrorCode(){\r\n    return errorCode;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.SourceConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Key() != null)\r\n        sb.append(\"S3Key: \").append(getS3Key()).append(\",\");\r\n    if (getArchitecture() != null)\r\n        sb.append(\"Architecture: \").append(getArchitecture());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentBehaviors.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRecency() != null)\r\n        sb.append(\"Recency: \").append(getRecency());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StreamProcessorOutput.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKinesisDataStream() != null)\r\n        sb.append(\"KinesisDataStream: \").append(getKinesisDataStream());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.getRegion",
	"Comment": "gets the name of the amazon s3 region in which this bucket will be created.",
	"Method": "String getRegion(){\r\n    return region;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferProgress.getPercentTransferred",
	"Comment": "returns a percentage of the number of bytes transferred out of the totalnumber of bytes to transfer.",
	"Method": "double getPercentTransferred(){\r\n    if (getBytesTransferred() < 0)\r\n        return 0;\r\n    return totalBytesToTransfer < 0 ? -1.0 : ((double) bytesTransferred / (double) totalBytesToTransfer) * (double) 100;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ViewBillingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStart() != null)\r\n        sb.append(\"Start: \").append(getStart()).append(\",\");\r\n    if (getEnd() != null)\r\n        sb.append(\"End: \").append(getEnd()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBClusterEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterEndpointIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointIdentifier: \").append(getDBClusterEndpointIdentifier()).append(\",\");\r\n    if (getEndpointType() != null)\r\n        sb.append(\"EndpointType: \").append(getEndpointType()).append(\",\");\r\n    if (getStaticMembers() != null)\r\n        sb.append(\"StaticMembers: \").append(getStaticMembers()).append(\",\");\r\n    if (getExcludedMembers() != null)\r\n        sb.append(\"ExcludedMembers: \").append(getExcludedMembers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateAlgorithmRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithmName() != null)\r\n        sb.append(\"AlgorithmName: \").append(getAlgorithmName()).append(\",\");\r\n    if (getAlgorithmDescription() != null)\r\n        sb.append(\"AlgorithmDescription: \").append(getAlgorithmDescription()).append(\",\");\r\n    if (getTrainingSpecification() != null)\r\n        sb.append(\"TrainingSpecification: \").append(getTrainingSpecification()).append(\",\");\r\n    if (getInferenceSpecification() != null)\r\n        sb.append(\"InferenceSpecification: \").append(getInferenceSpecification()).append(\",\");\r\n    if (getValidationSpecification() != null)\r\n        sb.append(\"ValidationSpecification: \").append(getValidationSpecification()).append(\",\");\r\n    if (getCertifyForMarketplace() != null)\r\n        sb.append(\"CertifyForMarketplace: \").append(getCertifyForMarketplace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ComparedFace.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getBoundingBox() != null)\r\n        sb.append(\"BoundingBox: \").append(getBoundingBox()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence()).append(\",\");\r\n    if (getLandmarks() != null)\r\n        sb.append(\"Landmarks: \").append(getLandmarks()).append(\",\");\r\n    if (getPose() != null)\r\n        sb.append(\"Pose: \").append(getPose()).append(\",\");\r\n    if (getQuality() != null)\r\n        sb.append(\"Quality: \").append(getQuality());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBSnapshot.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSnapshotIdentifier() != null)\r\n        sb.append(\"DBSnapshotIdentifier: \").append(getDBSnapshotIdentifier()).append(\",\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getSnapshotCreateTime() != null)\r\n        sb.append(\"SnapshotCreateTime: \").append(getSnapshotCreateTime()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getInstanceCreateTime() != null)\r\n        sb.append(\"InstanceCreateTime: \").append(getInstanceCreateTime()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getSnapshotType() != null)\r\n        sb.append(\"SnapshotType: \").append(getSnapshotType()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getPercentProgress() != null)\r\n        sb.append(\"PercentProgress: \").append(getPercentProgress()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion()).append(\",\");\r\n    if (getSourceDBSnapshotIdentifier() != null)\r\n        sb.append(\"SourceDBSnapshotIdentifier: \").append(getSourceDBSnapshotIdentifier()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getTdeCredentialArn() != null)\r\n        sb.append(\"TdeCredentialArn: \").append(getTdeCredentialArn()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getDBSnapshotArn() != null)\r\n        sb.append(\"DBSnapshotArn: \").append(getDBSnapshotArn()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone()).append(\",\");\r\n    if (getIAMDatabaseAuthenticationEnabled() != null)\r\n        sb.append(\"IAMDatabaseAuthenticationEnabled: \").append(getIAMDatabaseAuthenticationEnabled()).append(\",\");\r\n    if (getProcessorFeatures() != null)\r\n        sb.append(\"ProcessorFeatures: \").append(getProcessorFeatures()).append(\",\");\r\n    if (getDbiResourceId() != null)\r\n        sb.append(\"DbiResourceId: \").append(getDbiResourceId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteNotebookInstanceLifecycleConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceLifecycleConfigName() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigName: \").append(getNotebookInstanceLifecycleConfigName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeLoggingStatusResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggingEnabled() != null)\r\n        sb.append(\"LoggingEnabled: \").append(getLoggingEnabled()).append(\",\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getS3KeyPrefix() != null)\r\n        sb.append(\"S3KeyPrefix: \").append(getS3KeyPrefix()).append(\",\");\r\n    if (getLastSuccessfulDeliveryTime() != null)\r\n        sb.append(\"LastSuccessfulDeliveryTime: \").append(getLastSuccessfulDeliveryTime()).append(\",\");\r\n    if (getLastFailureTime() != null)\r\n        sb.append(\"LastFailureTime: \").append(getLastFailureTime()).append(\",\");\r\n    if (getLastFailureMessage() != null)\r\n        sb.append(\"LastFailureMessage: \").append(getLastFailureMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeOrderableClusterOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterVersion() != null)\r\n        sb.append(\"ClusterVersion: \").append(getClusterVersion()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.UploadMonitor.create",
	"Comment": "constructs a new upload watcher and then immediately submits it tothe thread pool.",
	"Method": "UploadMonitor create(TransferManager manager,UploadImpl transfer,ExecutorService threadPool,UploadCallable multipartUploadCallable,PutObjectRequest putObjectRequest,ProgressListenerChain progressListenerChain){\r\n    UploadMonitor uploadMonitor = new UploadMonitor(manager, transfer, threadPool, multipartUploadCallable, putObjectRequest, progressListenerChain);\r\n    Future<UploadResult> thisFuture = threadPool.submit(uploadMonitor);\r\n    uploadMonitor.futureReference.compareAndSet(null, thisFuture);\r\n    return uploadMonitor;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getAbortDate",
	"Comment": "date when multipart upload will become eligible for abort operation by lifecycle.",
	"Method": "Date getAbortDate(){\r\n    return abortDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.AmazonRekognitionClient.describeCollection",
	"Comment": "describes the specified collection. you can use describecollection to get information, such as thenumber of faces indexed into a collection and the version of the model used by the collection for face detection.for more information, see describing a collection in the amazon rekognition developer guide.",
	"Method": "DescribeCollectionResult describeCollection(DescribeCollectionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeCollection(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DisableLoggingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggingEnabled() != null)\r\n        sb.append(\"LoggingEnabled: \").append(getLoggingEnabled()).append(\",\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getS3KeyPrefix() != null)\r\n        sb.append(\"S3KeyPrefix: \").append(getS3KeyPrefix()).append(\",\");\r\n    if (getLastSuccessfulDeliveryTime() != null)\r\n        sb.append(\"LastSuccessfulDeliveryTime: \").append(getLastSuccessfulDeliveryTime()).append(\",\");\r\n    if (getLastFailureTime() != null)\r\n        sb.append(\"LastFailureTime: \").append(getLastFailureTime()).append(\",\");\r\n    if (getLastFailureMessage() != null)\r\n        sb.append(\"LastFailureMessage: \").append(getLastFailureMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketEncryptionRequest.withBucketName",
	"Comment": "the name of the bucket for which to set the encryption configuration.",
	"Method": "SetBucketEncryptionRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeletePublicAccessBlockRequest.getBucketName",
	"Comment": "the amazon s3 bucket whose public access block configuration you want to delete.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the multipart upload to complete.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsRequest.getContinuationToken",
	"Comment": "gets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "String getContinuationToken(){\r\n    return continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.stopLabelingJob",
	"Comment": "stops a running labeling job. a job that is stopped cannot be restarted. any results obtained before the job isstopped are placed in the amazon s3 output bucket.",
	"Method": "StopLabelingJobResult stopLabelingJob(StopLabelingJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStopLabelingJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.putResolverRulePolicy",
	"Comment": "specifies the resolver operations and resources that you want to allow another aws account to be able to use.",
	"Method": "PutResolverRulePolicyResult putResolverRulePolicy(PutResolverRulePolicyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutResolverRulePolicy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated setobjectaclrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "SetObjectAclRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsSandboxChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSSandboxChannelRequest() != null)\r\n        sb.append(\"APNSSandboxChannelRequest: \").append(getAPNSSandboxChannelRequest()).append(\",\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.UpdateDomainContactResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOperationId() != null)\r\n        sb.append(\"OperationId: \").append(getOperationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.setKey",
	"Comment": "sets the key of the object whose metadata is being retrieved.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateFleetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeReservedNodesAsync",
	"Comment": "simplified method form for invoking the describereservednodes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedNodesResult> describeReservedNodesAsync(DescribeReservedNodesRequest request,java.util.concurrent.Future<DescribeReservedNodesResult> describeReservedNodesAsync,DescribeReservedNodesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedNodesRequest, DescribeReservedNodesResult> asyncHandler,java.util.concurrent.Future<DescribeReservedNodesResult> describeReservedNodesAsync,java.util.concurrent.Future<DescribeReservedNodesResult> describeReservedNodesAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedNodesRequest, DescribeReservedNodesResult> asyncHandler){\r\n    return describeReservedNodesAsync(new DescribeReservedNodesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbortMultipartUploadRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the multipart upload to abort.",
	"Method": "void setBucketName(String value){\r\n    this.bucketName = value;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getStorageClass",
	"Comment": "returns the class of storage used for the parts in the associatedmultipart upload.",
	"Method": "String getStorageClass(){\r\n    return storageClass;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.GitConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRepositoryUrl() != null)\r\n        sb.append(\"RepositoryUrl: \").append(getRepositoryUrl()).append(\",\");\r\n    if (getBranch() != null)\r\n        sb.append(\"Branch: \").append(getBranch()).append(\",\");\r\n    if (getSecretArn() != null)\r\n        sb.append(\"SecretArn: \").append(getSecretArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeEventSubscriptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateTrafficPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDocument() != null)\r\n        sb.append(\"Document: \").append(getDocument()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBSubnetGroups",
	"Comment": "returns a list of dbsubnetgroup descriptions. if a dbsubnetgroupname is specified, the list will contain only thedescriptions of the specified dbsubnetgroup.for an overview of cidr ranges, go to the wikipedia tutorial.",
	"Method": "DescribeDBSubnetGroupsResult describeDBSubnetGroups(DescribeDBSubnetGroupsRequest request,DescribeDBSubnetGroupsResult describeDBSubnetGroups){\r\n    return describeDBSubnetGroups(new DescribeDBSubnetGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SSEAwsKeyManagementParams.getAwsKmsKeyId",
	"Comment": "returns the aws key management system key id used for encryption. returnsnull if default key id is used.",
	"Method": "String getAwsKmsKeyId(){\r\n    return awsKmsKeyId;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeClusters",
	"Comment": "returns properties of provisioned clusters including general cluster properties, cluster database properties,maintenance and backup properties, and security and access properties. this operation supports pagination. formore information about managing clusters, go to amazon redshift clusters inthe amazon redshift cluster management guide.if you specify both tag keys and tag values in the same request, amazon redshift returns all clusters that matchany combination of the specified keys and values. for example, if you have owner andenvironment for tag keys, and admin and test for tag values, all clustersthat have any combination of those values are returned.if both tag keys and values are omitted from the request, clusters are returned regardless of whether they havetag keys or values associated with them.",
	"Method": "DescribeClustersResult describeClusters(DescribeClustersRequest request,DescribeClustersResult describeClusters){\r\n    return describeClusters(new DescribeClustersRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.JSONOutput.getRecordDelimiter",
	"Comment": "the value used to separate individual records in the output.",
	"Method": "Character getRecordDelimiter(){\r\n    return stringToChar(recordDelimiter);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose notification configuration is beingset, and returns this object so that additional method calls may bechained together.",
	"Method": "SetBucketNotificationConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListSubscribedWorkteamsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.AWSRDSDataAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.OrderableClusterOption.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterVersion() != null)\r\n        sb.append(\"ClusterVersion: \").append(getClusterVersion()).append(\",\");\r\n    if (getClusterType() != null)\r\n        sb.append(\"ClusterType: \").append(getClusterType()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateCompilationJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompilationJobArn() != null)\r\n        sb.append(\"CompilationJobArn: \").append(getCompilationJobArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getSnapshotClusterIdentifier() != null)\r\n        sb.append(\"SnapshotClusterIdentifier: \").append(getSnapshotClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ListTagsForResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.isLastPart",
	"Comment": "returns true if the creator of this request has indicated this part isthe last part being uploaded in a multipart upload.",
	"Method": "boolean isLastPart(){\r\n    return isLastPart;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CSVInput.withAllowQuotedRecordDelimiter",
	"Comment": "sets the value used to allow quoted record delimiters to occur within the input.",
	"Method": "CSVInput withAllowQuotedRecordDelimiter(Boolean allowQuotedRecordDelimiter){\r\n    setAllowQuotedRecordDelimiter(allowQuotedRecordDelimiter);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.UpdateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.Subnet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubnetIdentifier() != null)\r\n        sb.append(\"SubnetIdentifier: \").append(getSubnetIdentifier()).append(\",\");\r\n    if (getSubnetAvailabilityZone() != null)\r\n        sb.append(\"SubnetAvailabilityZone: \").append(getSubnetAvailabilityZone()).append(\",\");\r\n    if (getSubnetStatus() != null)\r\n        sb.append(\"SubnetStatus: \").append(getSubnetStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.SkipMd5CheckStrategy.isMultipartUploadETag",
	"Comment": "returns true if the specified etag was from a multipart upload.",
	"Method": "boolean isMultipartUploadETag(String eTag){\r\n    return eTag.contains(\"-\");\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.modifyDBInstance",
	"Comment": "modifies settings for a db instance. you can change one or more database configuration parameters by specifyingthese parameters and the new values in the request. to learn what modifications you can make to your db instance,call describevaliddbinstancemodifications before you call modifydbinstance.",
	"Method": "DBInstance modifyDBInstance(ModifyDBInstanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyDBInstance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketWebsiteConfigurationRequest.withConfiguration",
	"Comment": "sets the website configuration to send as part of this request, and\treturns this updated request object so that additional method calls can\tbe chained together.",
	"Method": "SetBucketWebsiteConfigurationRequest withConfiguration(BucketWebsiteConfiguration configuration){\r\n    setConfiguration(configuration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.listHostedZonesAsync",
	"Comment": "simplified method form for invoking the listhostedzones operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListHostedZonesResult> listHostedZonesAsync(ListHostedZonesRequest request,java.util.concurrent.Future<ListHostedZonesResult> listHostedZonesAsync,ListHostedZonesRequest request,com.amazonaws.handlers.AsyncHandler<ListHostedZonesRequest, ListHostedZonesResult> asyncHandler,java.util.concurrent.Future<ListHostedZonesResult> listHostedZonesAsync,java.util.concurrent.Future<ListHostedZonesResult> listHostedZonesAsync,com.amazonaws.handlers.AsyncHandler<ListHostedZonesRequest, ListHostedZonesResult> asyncHandler){\r\n    return listHostedZonesAsync(new ListHostedZonesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.StorageClassAnalysisDataExport.withDestination",
	"Comment": "sets the place to store the data for an analysisand return this object for method chaining.",
	"Method": "StorageClassAnalysisDataExport withDestination(AnalyticsExportDestination destination){\r\n    setDestination(destination);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.SendingOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSendingEnabled() != null)\r\n        sb.append(\"SendingEnabled: \").append(getSendingEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.DeleteGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetCelebrityInfoRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIndex() != null)\r\n        sb.append(\"Index: \").append(getIndex()).append(\",\");\r\n    if (getBoundingBox() != null)\r\n        sb.append(\"BoundingBox: \").append(getBoundingBox()).append(\",\");\r\n    if (getFace() != null)\r\n        sb.append(\"Face: \").append(getFace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.RemoveAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getAttributeType() != null)\r\n        sb.append(\"AttributeType: \").append(getAttributeType()).append(\",\");\r\n    if (getUpdateAttributesRequest() != null)\r\n        sb.append(\"UpdateAttributesRequest: \").append(getUpdateAttributesRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketReplicationConfigurationRequest.setReplicationConfiguration",
	"Comment": "sets the replication configuration for an amazon s3 bucket.",
	"Method": "void setReplicationConfiguration(BucketReplicationConfiguration replicationConfiguration){\r\n    this.replicationConfiguration = replicationConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.getHealthCheckLastFailureReason",
	"Comment": "gets the reason that a specified health check failed most recently.",
	"Method": "GetHealthCheckLastFailureReasonResult getHealthCheckLastFailureReason(GetHealthCheckLastFailureReasonRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetHealthCheckLastFailureReason(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateBaiduChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getBaiduChannelRequest() != null)\r\n        sb.append(\"BaiduChannelRequest: \").append(getBaiduChannelRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.setKeys",
	"Comment": "sets the list of keys to delete from this bucket, clearing any existinglist of keys.",
	"Method": "void setKeys(List<KeyVersion> keys){\r\n    this.keys.clear();\r\n    this.keys.addAll(keys);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getCacheControl",
	"Comment": "returns the cache control response header override if it has beenspecified, or null otherwise.",
	"Method": "String getCacheControl(){\r\n    return cacheControl;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.RenderableTask.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getInput() != null)\r\n        sb.append(\"Input: \").append(getInput());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateClusterSecurityGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSecurityGroupName() != null)\r\n        sb.append(\"ClusterSecurityGroupName: \").append(getClusterSecurityGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CSVInput.withFieldDelimiter",
	"Comment": "sets the value used to separate individual fields in a record.",
	"Method": "CSVInput withFieldDelimiter(String fieldDelimiter,CSVInput withFieldDelimiter,Character fieldDelimiter){\r\n    setFieldDelimiter(fieldDelimiter);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.Timezone.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimezoneName() != null)\r\n        sb.append(\"TimezoneName: \").append(getTimezoneName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CelebrityDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUrls() != null)\r\n        sb.append(\"Urls: \").append(getUrls()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence()).append(\",\");\r\n    if (getBoundingBox() != null)\r\n        sb.append(\"BoundingBox: \").append(getBoundingBox()).append(\",\");\r\n    if (getFace() != null)\r\n        sb.append(\"Face: \").append(getFace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsResult.withTruncated",
	"Comment": "for internal use only. sets the truncated property forthis analytics configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "ListBucketAnalyticsConfigurationsResult withTruncated(boolean isTruncated){\r\n    setTruncated(isTruncated);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CopyOptionGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceOptionGroupIdentifier() != null)\r\n        sb.append(\"SourceOptionGroupIdentifier: \").append(getSourceOptionGroupIdentifier()).append(\",\");\r\n    if (getTargetOptionGroupIdentifier() != null)\r\n        sb.append(\"TargetOptionGroupIdentifier: \").append(getTargetOptionGroupIdentifier()).append(\",\");\r\n    if (getTargetOptionGroupDescription() != null)\r\n        sb.append(\"TargetOptionGroupDescription: \").append(getTargetOptionGroupDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketWebsiteConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket whose website configuration is being\tretrieved.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeClustersAsync",
	"Comment": "simplified method form for invoking the describeclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync(DescribeClustersRequest request,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,DescribeClustersRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClustersRequest, DescribeClustersResult> asyncHandler,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,com.amazonaws.handlers.AsyncHandler<DescribeClustersRequest, DescribeClustersResult> asyncHandler){\r\n    return describeClustersAsync(new DescribeClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeModelPackageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelPackageName() != null)\r\n        sb.append(\"ModelPackageName: \").append(getModelPackageName()).append(\",\");\r\n    if (getModelPackageArn() != null)\r\n        sb.append(\"ModelPackageArn: \").append(getModelPackageArn()).append(\",\");\r\n    if (getModelPackageDescription() != null)\r\n        sb.append(\"ModelPackageDescription: \").append(getModelPackageDescription()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getInferenceSpecification() != null)\r\n        sb.append(\"InferenceSpecification: \").append(getInferenceSpecification()).append(\",\");\r\n    if (getSourceAlgorithmSpecification() != null)\r\n        sb.append(\"SourceAlgorithmSpecification: \").append(getSourceAlgorithmSpecification()).append(\",\");\r\n    if (getValidationSpecification() != null)\r\n        sb.append(\"ValidationSpecification: \").append(getValidationSpecification()).append(\",\");\r\n    if (getModelPackageStatus() != null)\r\n        sb.append(\"ModelPackageStatus: \").append(getModelPackageStatus()).append(\",\");\r\n    if (getModelPackageStatusDetails() != null)\r\n        sb.append(\"ModelPackageStatusDetails: \").append(getModelPackageStatusDetails()).append(\",\");\r\n    if (getCertifyForMarketplace() != null)\r\n        sb.append(\"CertifyForMarketplace: \").append(getCertifyForMarketplace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.AssociateVPCWithHostedZoneResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeInfo() != null)\r\n        sb.append(\"ChangeInfo: \").append(getChangeInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.modifyDBCluster",
	"Comment": "modify a setting for an amazon aurora db cluster. you can change one or more database configuration parameters byspecifying these parameters and the new values in the request. for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DBCluster modifyDBCluster(ModifyDBClusterRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyDBCluster(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectLockConfigurationRequest.getObjectLockConfiguration",
	"Comment": "the object lock configuration that you want to apply to the specified bucket.",
	"Method": "ObjectLockConfiguration getObjectLockConfiguration(){\r\n    return objectLockConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.getAbortDate",
	"Comment": "date when multipart upload will become eligible for abort operation by lifecycle.",
	"Method": "Date getAbortDate(){\r\n    return abortDate;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GenericBucketRequest.withBucketName",
	"Comment": "sets the name of the target bucket, and returns this updated requestobject so that additional method calls can be chained together.",
	"Method": "GenericBucketRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutEmailIdentityDkimAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmailIdentity() != null)\r\n        sb.append(\"EmailIdentity: \").append(getEmailIdentity()).append(\",\");\r\n    if (getSigningEnabled() != null)\r\n        sb.append(\"SigningEnabled: \").append(getSigningEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setNextContinuationToken",
	"Comment": "sets the optional nextcontinuationtoken.nextcontinuationtoken is sent when istruncated is true meaning there aremore keys in the bucket that can be listed. the next list requests to amazons3 can be continued by providing this nextcontinuationtoken.",
	"Method": "void setNextContinuationToken(String nextContinuationToken){\r\n    this.nextContinuationToken = nextContinuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetTrafficPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.withSecureRandom",
	"Comment": "sets the secure random instance to use for generating cryptographicparameters, and returns this object.",
	"Method": "CryptoConfiguration withSecureRandom(SecureRandom secureRandom,CryptoConfiguration withSecureRandom,SecureRandom random){\r\n    this.secureRandom = secureRandom;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.getMarker",
	"Comment": "gets the marker parameter originally used to request this object listing, ornull if no marker was specified. if specified, all objects and commonprefixes included in this object listing will occuralphabetically after the specified marker.",
	"Method": "String getMarker(){\r\n    return marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifySnapshotScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduleDefinitions() != null)\r\n        sb.append(\"ScheduleDefinitions: \").append(getScheduleDefinitions()).append(\",\");\r\n    if (getScheduleIdentifier() != null)\r\n        sb.append(\"ScheduleIdentifier: \").append(getScheduleIdentifier()).append(\",\");\r\n    if (getScheduleDescription() != null)\r\n        sb.append(\"ScheduleDescription: \").append(getScheduleDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getNextInvocations() != null)\r\n        sb.append(\"NextInvocations: \").append(getNextInvocations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetGeoLocationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGeoLocationDetails() != null)\r\n        sb.append(\"GeoLocationDetails: \").append(getGeoLocationDetails());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.EnableSnapshotCopyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getDestinationRegion() != null)\r\n        sb.append(\"DestinationRegion: \").append(getDestinationRegion()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod()).append(\",\");\r\n    if (getSnapshotCopyGrantName() != null)\r\n        sb.append(\"SnapshotCopyGrantName: \").append(getSnapshotCopyGrantName()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteTreatmentResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageConfiguration() != null)\r\n        sb.append(\"MessageConfiguration: \").append(getMessageConfiguration()).append(\",\");\r\n    if (getSchedule() != null)\r\n        sb.append(\"Schedule: \").append(getSchedule()).append(\",\");\r\n    if (getSizePercent() != null)\r\n        sb.append(\"SizePercent: \").append(getSizePercent()).append(\",\");\r\n    if (getTreatmentDescription() != null)\r\n        sb.append(\"TreatmentDescription: \").append(getTreatmentDescription()).append(\",\");\r\n    if (getTreatmentName() != null)\r\n        sb.append(\"TreatmentName: \").append(getTreatmentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.CreateEmailIdentityResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIdentityType() != null)\r\n        sb.append(\"IdentityType: \").append(getIdentityType()).append(\",\");\r\n    if (getVerifiedForSendingStatus() != null)\r\n        sb.append(\"VerifiedForSendingStatus: \").append(getVerifiedForSendingStatus()).append(\",\");\r\n    if (getDkimAttributes() != null)\r\n        sb.append(\"DkimAttributes: \").append(getDkimAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RestoreDBClusterFromS3Request.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getSourceEngine() != null)\r\n        sb.append(\"SourceEngine: \").append(getSourceEngine()).append(\",\");\r\n    if (getSourceEngineVersion() != null)\r\n        sb.append(\"SourceEngineVersion: \").append(getSourceEngineVersion()).append(\",\");\r\n    if (getS3BucketName() != null)\r\n        sb.append(\"S3BucketName: \").append(getS3BucketName()).append(\",\");\r\n    if (getS3Prefix() != null)\r\n        sb.append(\"S3Prefix: \").append(getS3Prefix()).append(\",\");\r\n    if (getS3IngestionRoleArn() != null)\r\n        sb.append(\"S3IngestionRoleArn: \").append(getS3IngestionRoleArn()).append(\",\");\r\n    if (getBacktrackWindow() != null)\r\n        sb.append(\"BacktrackWindow: \").append(getBacktrackWindow()).append(\",\");\r\n    if (getEnableCloudwatchLogsExports() != null)\r\n        sb.append(\"EnableCloudwatchLogsExports: \").append(getEnableCloudwatchLogsExports()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.AWSPricingClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectLegalHoldRequest.getLegalHold",
	"Comment": "container element for the legal hold configuration you want to apply to the specified object.",
	"Method": "ObjectLockLegalHold getLegalHold(){\r\n    return legalHold;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBParametersResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ListTagsForResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeHsmConfigurations",
	"Comment": "returns information about the specified amazon redshift hsm configuration. if no configuration id is specified,returns information about all the hsm configurations owned by your aws customer account.if you specify both tag keys and tag values in the same request, amazon redshift returns all hsm connections thatmatch any combination of the specified keys and values. for example, if you have owner andenvironment for tag keys, and admin and test for tag values, all hsmconnections that have any combination of those values are returned.if both tag keys and values are omitted from the request, hsm connections are returned regardless of whether theyhave tag keys or values associated with them.",
	"Method": "DescribeHsmConfigurationsResult describeHsmConfigurations(DescribeHsmConfigurationsRequest request,DescribeHsmConfigurationsResult describeHsmConfigurations){\r\n    return describeHsmConfigurations(new DescribeHsmConfigurationsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsClient.updateGroup",
	"Comment": "updates an existing group with a new or changed description. you cannot update the name of a resource group.",
	"Method": "UpdateGroupResult updateGroup(UpdateGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBParameterGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBParameterGroups() != null)\r\n        sb.append(\"DBParameterGroups: \").append(getDBParameterGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutConfigurationSetDeliveryOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getSendingPoolName() != null)\r\n        sb.append(\"SendingPoolName: \").append(getSendingPoolName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.waiters.AmazonRedshiftWaiters.clusterAvailable",
	"Comment": "builds a clusteravailable waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeClustersRequest> clusterAvailable(){\r\n    return new WaiterBuilder<DescribeClustersRequest, DescribeClustersResult>().withSdkFunction(new DescribeClustersFunction(client)).withAcceptors(new ClusterAvailable.IsAvailableMatcher(), new ClusterAvailable.IsDeletingMatcher(), new ClusterAvailable.IsClusterNotFoundMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(30), new FixedDelayStrategy(60))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeDBInstancesAsync",
	"Comment": "simplified method form for invoking the describedbinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBInstancesResult> describeDBInstancesAsync(DescribeDBInstancesRequest request,java.util.concurrent.Future<DescribeDBInstancesResult> describeDBInstancesAsync,DescribeDBInstancesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBInstancesRequest, DescribeDBInstancesResult> asyncHandler,java.util.concurrent.Future<DescribeDBInstancesResult> describeDBInstancesAsync,java.util.concurrent.Future<DescribeDBInstancesResult> describeDBInstancesAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBInstancesRequest, DescribeDBInstancesResult> asyncHandler){\r\n    return describeDBInstancesAsync(new DescribeDBInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeReservedNodeOfferingsAsync",
	"Comment": "simplified method form for invoking the describereservednodeofferings operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync(DescribeReservedNodeOfferingsRequest request,java.util.concurrent.Future<DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync,DescribeReservedNodeOfferingsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedNodeOfferingsRequest, DescribeReservedNodeOfferingsResult> asyncHandler,java.util.concurrent.Future<DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync,java.util.concurrent.Future<DescribeReservedNodeOfferingsResult> describeReservedNodeOfferingsAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedNodeOfferingsRequest, DescribeReservedNodeOfferingsResult> asyncHandler){\r\n    return describeReservedNodeOfferingsAsync(new DescribeReservedNodeOfferingsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBClusterEndpoints",
	"Comment": "returns information about endpoints for an amazon aurora db cluster.",
	"Method": "DescribeDBClusterEndpointsResult describeDBClusterEndpoints(DescribeDBClusterEndpointsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBClusterEndpoints(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeResizeResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTargetNodeType() != null)\r\n        sb.append(\"TargetNodeType: \").append(getTargetNodeType()).append(\",\");\r\n    if (getTargetNumberOfNodes() != null)\r\n        sb.append(\"TargetNumberOfNodes: \").append(getTargetNumberOfNodes()).append(\",\");\r\n    if (getTargetClusterType() != null)\r\n        sb.append(\"TargetClusterType: \").append(getTargetClusterType()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getImportTablesCompleted() != null)\r\n        sb.append(\"ImportTablesCompleted: \").append(getImportTablesCompleted()).append(\",\");\r\n    if (getImportTablesInProgress() != null)\r\n        sb.append(\"ImportTablesInProgress: \").append(getImportTablesInProgress()).append(\",\");\r\n    if (getImportTablesNotStarted() != null)\r\n        sb.append(\"ImportTablesNotStarted: \").append(getImportTablesNotStarted()).append(\",\");\r\n    if (getAvgResizeRateInMegaBytesPerSecond() != null)\r\n        sb.append(\"AvgResizeRateInMegaBytesPerSecond: \").append(getAvgResizeRateInMegaBytesPerSecond()).append(\",\");\r\n    if (getTotalResizeDataInMegaBytes() != null)\r\n        sb.append(\"TotalResizeDataInMegaBytes: \").append(getTotalResizeDataInMegaBytes()).append(\",\");\r\n    if (getProgressInMegaBytes() != null)\r\n        sb.append(\"ProgressInMegaBytes: \").append(getProgressInMegaBytes()).append(\",\");\r\n    if (getElapsedTimeInSeconds() != null)\r\n        sb.append(\"ElapsedTimeInSeconds: \").append(getElapsedTimeInSeconds()).append(\",\");\r\n    if (getEstimatedTimeToCompletionInSeconds() != null)\r\n        sb.append(\"EstimatedTimeToCompletionInSeconds: \").append(getEstimatedTimeToCompletionInSeconds()).append(\",\");\r\n    if (getResizeType() != null)\r\n        sb.append(\"ResizeType: \").append(getResizeType()).append(\",\");\r\n    if (getMessage() != null)\r\n        sb.append(\"Message: \").append(getMessage()).append(\",\");\r\n    if (getTargetEncryptionType() != null)\r\n        sb.append(\"TargetEncryptionType: \").append(getTargetEncryptionType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CompilationJobSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompilationJobName() != null)\r\n        sb.append(\"CompilationJobName: \").append(getCompilationJobName()).append(\",\");\r\n    if (getCompilationJobArn() != null)\r\n        sb.append(\"CompilationJobArn: \").append(getCompilationJobArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getCompilationEndTime() != null)\r\n        sb.append(\"CompilationEndTime: \").append(getCompilationEndTime()).append(\",\");\r\n    if (getCompilationTargetDevice() != null)\r\n        sb.append(\"CompilationTargetDevice: \").append(getCompilationTargetDevice()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getCompilationJobStatus() != null)\r\n        sb.append(\"CompilationJobStatus: \").append(getCompilationJobStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteAlgorithmRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithmName() != null)\r\n        sb.append(\"AlgorithmName: \").append(getAlgorithmName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.waiters.AmazonRDSWaiters.dBSnapshotDeleted",
	"Comment": "builds a dbsnapshotdeleted waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeDBSnapshotsRequest> dBSnapshotDeleted(){\r\n    return new WaiterBuilder<DescribeDBSnapshotsRequest, DescribeDBSnapshotsResult>().withSdkFunction(new DescribeDBSnapshotsFunction(client)).withAcceptors(new DBSnapshotDeleted.IsDeletedMatcher(), new DBSnapshotDeleted.IsDBSnapshotNotFoundMatcher(), new DBSnapshotDeleted.IsCreatingMatcher(), new DBSnapshotDeleted.IsModifyingMatcher(), new DBSnapshotDeleted.IsRebootingMatcher(), new DBSnapshotDeleted.IsResettingmastercredentialsMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.VideoMetadata.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodec() != null)\r\n        sb.append(\"Codec: \").append(getCodec()).append(\",\");\r\n    if (getDurationMillis() != null)\r\n        sb.append(\"DurationMillis: \").append(getDurationMillis()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getFrameRate() != null)\r\n        sb.append(\"FrameRate: \").append(getFrameRate()).append(\",\");\r\n    if (getFrameHeight() != null)\r\n        sb.append(\"FrameHeight: \").append(getFrameHeight()).append(\",\");\r\n    if (getFrameWidth() != null)\r\n        sb.append(\"FrameWidth: \").append(getFrameWidth());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withUnmodifiedSinceConstraint",
	"Comment": "sets the optional unmodified constraint that restricts this request toexecuting only if the source object has not been modified afterthe specified date. returns this object, enabling additional method callsto be chained together.the unmodified constraint may be used with matching etag constraints, butnot with any other type of constraint.note that amazon s3 will ignore any dates occurring in the future.",
	"Method": "CopyPartRequest withUnmodifiedSinceConstraint(Date date){\r\n    setUnmodifiedSinceConstraint(date);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.DeleteResolverRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRuleId() != null)\r\n        sb.append(\"ResolverRuleId: \").append(getResolverRuleId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.UntagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseLoggingStatusResponse",
	"Comment": "parses a loggingstatus response xml document for a bucket from an inputstream.",
	"Method": "BucketLoggingConfigurationHandler parseLoggingStatusResponse(InputStream inputStream){\r\n    BucketLoggingConfigurationHandler handler = new BucketLoggingConfigurationHandler();\r\n    parseXmlInputStream(handler, inputStream);\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketAnalyticsConfigurationsRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose analytics configurations are to be listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.DisassociateResolverEndpointIpAddressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpointId() != null)\r\n        sb.append(\"ResolverEndpointId: \").append(getResolverEndpointId()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.WriteEventStream.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationStreamArn() != null)\r\n        sb.append(\"DestinationStreamArn: \").append(getDestinationStreamArn()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentImportResource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChannelCounts() != null)\r\n        sb.append(\"ChannelCounts: \").append(getChannelCounts()).append(\",\");\r\n    if (getExternalId() != null)\r\n        sb.append(\"ExternalId: \").append(getExternalId()).append(\",\");\r\n    if (getFormat() != null)\r\n        sb.append(\"Format: \").append(getFormat()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getS3Url() != null)\r\n        sb.append(\"S3Url: \").append(getS3Url()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobS3DataSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getManifestS3Uri() != null)\r\n        sb.append(\"ManifestS3Uri: \").append(getManifestS3Uri());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.disableExternalResourceFetching",
	"Comment": "disables certain dangerous features that attempt to automatically fetch dtdssee owasp xxe cheat sheet",
	"Method": "void disableExternalResourceFetching(XMLReader reader){\r\n    reader.setFeature(\"http://xml.org/sax/features/external-general-entities\", false);\r\n    reader.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false);\r\n    reader.setFeature(\"http://apache.org/xml/features/nonvalidating/load-external-dtd\", false);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifySnapshotCopyRetentionPeriodRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod()).append(\",\");\r\n    if (getManual() != null)\r\n        sb.append(\"Manual: \").append(getManual());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.iterable.S3Versions.forKey",
	"Comment": "constructs an iterable that covers the versions of a single amazon s3object.",
	"Method": "S3Versions forKey(AmazonS3 s3,String bucketName,String key){\r\n    S3Versions versions = new S3Versions(s3, bucketName);\r\n    versions.key = key;\r\n    return versions;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.getPrefix",
	"Comment": "gets the prefix parameter originally used to request this object listing, ornull if no prefix was specified.all objects and common prefixes includedin this object listing start with the specified prefix.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.withAlwaysUseCryptoProvider",
	"Comment": "sets whether the specified crypto provider should be used in all cases. forbackwards compatibility, it will be ignored if cryptomode specified authenticatedencryption.",
	"Method": "CryptoConfiguration withAlwaysUseCryptoProvider(boolean value,CryptoConfiguration withAlwaysUseCryptoProvider,boolean value){\r\n    this.alwaysUseCryptoProvider = value;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ResetDBClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getResetAllParameters() != null)\r\n        sb.append(\"ResetAllParameters: \").append(getResetAllParameters()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeEventCategoriesAsync",
	"Comment": "simplified method form for invoking the describeeventcategories operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync(DescribeEventCategoriesRequest request,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,DescribeEventCategoriesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventCategoriesRequest, DescribeEventCategoriesResult> asyncHandler,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventCategoriesRequest, DescribeEventCategoriesResult> asyncHandler){\r\n    return describeEventCategoriesAsync(new DescribeEventCategoriesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBClusterSnapshots() != null)\r\n        sb.append(\"DBClusterSnapshots: \").append(getDBClusterSnapshots());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetLabelDetectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketInventoryConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the inventory configuration to delete.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.getHealthCheckCountAsync",
	"Comment": "simplified method form for invoking the gethealthcheckcount operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetHealthCheckCountResult> getHealthCheckCountAsync(GetHealthCheckCountRequest request,java.util.concurrent.Future<GetHealthCheckCountResult> getHealthCheckCountAsync,GetHealthCheckCountRequest request,com.amazonaws.handlers.AsyncHandler<GetHealthCheckCountRequest, GetHealthCheckCountResult> asyncHandler,java.util.concurrent.Future<GetHealthCheckCountResult> getHealthCheckCountAsync,java.util.concurrent.Future<GetHealthCheckCountResult> getHealthCheckCountAsync,com.amazonaws.handlers.AsyncHandler<GetHealthCheckCountRequest, GetHealthCheckCountResult> asyncHandler){\r\n    return getHealthCheckCountAsync(new GetHealthCheckCountRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.ListDedicatedIpPoolsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDedicatedIpPools() != null)\r\n        sb.append(\"DedicatedIpPools: \").append(getDedicatedIpPools()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.deleteDBClusterEndpoint",
	"Comment": "deletes a custom endpoint and removes it from an amazon aurora db cluster.",
	"Method": "DeleteDBClusterEndpointResult deleteDBClusterEndpoint(DeleteDBClusterEndpointRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDBClusterEndpoint(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListLabelingJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabelingJobSummaryList() != null)\r\n        sb.append(\"LabelingJobSummaryList: \").append(getLabelingJobSummaryList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Label.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence()).append(\",\");\r\n    if (getInstances() != null)\r\n        sb.append(\"Instances: \").append(getInstances()).append(\",\");\r\n    if (getParents() != null)\r\n        sb.append(\"Parents: \").append(getParents());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketInventoryConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the inventory configuration to delete.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentReference.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClient.associateResourceShare",
	"Comment": "associates the specified resource share with the specified principals and resources.",
	"Method": "AssociateResourceShareResult associateResourceShare(AssociateResourceShareRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAssociateResourceShare(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.GetSearchSuggestionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropertyNameSuggestions() != null)\r\n        sb.append(\"PropertyNameSuggestions: \").append(getPropertyNameSuggestions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeleteRobotApplicationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getApplicationVersion() != null)\r\n        sb.append(\"ApplicationVersion: \").append(getApplicationVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.auth.AwsChunkedEncodingInputStream.setUpNextChunk",
	"Comment": "read in the next chunk of data, and create the necessary chunk extensions.",
	"Method": "boolean setUpNextChunk(){\r\n    byte[] chunkData = new byte[DEFAULT_CHUNK_SIZE];\r\n    int chunkSizeInBytes = 0;\r\n    while (chunkSizeInBytes < DEFAULT_CHUNK_SIZE) {\r\n        if (null != decodedStreamBuffer && decodedStreamBuffer.hasNext()) {\r\n            chunkData[chunkSizeInBytes++] = decodedStreamBuffer.next();\r\n        } else {\r\n            int bytesToRead = DEFAULT_CHUNK_SIZE - chunkSizeInBytes;\r\n            int count = is.read(chunkData, chunkSizeInBytes, bytesToRead);\r\n            if (count != -1) {\r\n                if (null != decodedStreamBuffer)\r\n                    decodedStreamBuffer.buffer(chunkData, chunkSizeInBytes, count);\r\n                chunkSizeInBytes += count;\r\n            } else\r\n                break;\r\n        }\r\n    }\r\n    if (chunkSizeInBytes == 0) {\r\n        byte[] signedFinalChunk = createSignedChunk(FINAL_CHUNK);\r\n        currentChunkIterator = new ChunkContentIterator(signedFinalChunk);\r\n        return true;\r\n    } else {\r\n        if (chunkSizeInBytes < chunkData.length) {\r\n            chunkData = Arrays.copyOf(chunkData, chunkSizeInBytes);\r\n        }\r\n        byte[] signedChunkContent = createSignedChunk(chunkData);\r\n        currentChunkIterator = new ChunkContentIterator(signedChunkContent);\r\n        return false;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getDBSecurityGroups() != null)\r\n        sb.append(\"DBSecurityGroups: \").append(getDBSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getApplyImmediately() != null)\r\n        sb.append(\"ApplyImmediately: \").append(getApplyImmediately()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getAllowMajorVersionUpgrade() != null)\r\n        sb.append(\"AllowMajorVersionUpgrade: \").append(getAllowMajorVersionUpgrade()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getNewDBInstanceIdentifier() != null)\r\n        sb.append(\"NewDBInstanceIdentifier: \").append(getNewDBInstanceIdentifier()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getTdeCredentialArn() != null)\r\n        sb.append(\"TdeCredentialArn: \").append(getTdeCredentialArn()).append(\",\");\r\n    if (getTdeCredentialPassword() != null)\r\n        sb.append(\"TdeCredentialPassword: \").append(getTdeCredentialPassword()).append(\",\");\r\n    if (getCACertificateIdentifier() != null)\r\n        sb.append(\"CACertificateIdentifier: \").append(getCACertificateIdentifier()).append(\",\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getCopyTagsToSnapshot() != null)\r\n        sb.append(\"CopyTagsToSnapshot: \").append(getCopyTagsToSnapshot()).append(\",\");\r\n    if (getMonitoringInterval() != null)\r\n        sb.append(\"MonitoringInterval: \").append(getMonitoringInterval()).append(\",\");\r\n    if (getDBPortNumber() != null)\r\n        sb.append(\"DBPortNumber: \").append(getDBPortNumber()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getMonitoringRoleArn() != null)\r\n        sb.append(\"MonitoringRoleArn: \").append(getMonitoringRoleArn()).append(\",\");\r\n    if (getDomainIAMRoleName() != null)\r\n        sb.append(\"DomainIAMRoleName: \").append(getDomainIAMRoleName()).append(\",\");\r\n    if (getPromotionTier() != null)\r\n        sb.append(\"PromotionTier: \").append(getPromotionTier()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getEnablePerformanceInsights() != null)\r\n        sb.append(\"EnablePerformanceInsights: \").append(getEnablePerformanceInsights()).append(\",\");\r\n    if (getPerformanceInsightsKMSKeyId() != null)\r\n        sb.append(\"PerformanceInsightsKMSKeyId: \").append(getPerformanceInsightsKMSKeyId()).append(\",\");\r\n    if (getPerformanceInsightsRetentionPeriod() != null)\r\n        sb.append(\"PerformanceInsightsRetentionPeriod: \").append(getPerformanceInsightsRetentionPeriod()).append(\",\");\r\n    if (getCloudwatchLogsExportConfiguration() != null)\r\n        sb.append(\"CloudwatchLogsExportConfiguration: \").append(getCloudwatchLogsExportConfiguration()).append(\",\");\r\n    if (getProcessorFeatures() != null)\r\n        sb.append(\"ProcessorFeatures: \").append(getProcessorFeatures()).append(\",\");\r\n    if (getUseDefaultProcessorFeatures() != null)\r\n        sb.append(\"UseDefaultProcessorFeatures: \").append(getUseDefaultProcessorFeatures()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateTransformJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTransformJobArn() != null)\r\n        sb.append(\"TransformJobArn: \").append(getTransformJobArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeEventCategoriesAsync",
	"Comment": "simplified method form for invoking the describeeventcategories operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync(DescribeEventCategoriesRequest request,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,DescribeEventCategoriesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeEventCategoriesRequest, DescribeEventCategoriesResult> asyncHandler,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,java.util.concurrent.Future<DescribeEventCategoriesResult> describeEventCategoriesAsync,com.amazonaws.handlers.AsyncHandler<DescribeEventCategoriesRequest, DescribeEventCategoriesResult> asyncHandler){\r\n    return describeEventCategoriesAsync(new DescribeEventCategoriesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.withDestinationConfig",
	"Comment": "sets the destination configuration for the replication rule.returns theupdated object.",
	"Method": "ReplicationRule withDestinationConfig(ReplicationDestinationConfig destinationConfig){\r\n    setDestinationConfig(destinationConfig);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3EncryptionClient.newAWSKMSClient",
	"Comment": "creates and returns a new instance of aws kms client in the case whenan explicit aws kms client is not specified.",
	"Method": "AWSKMSClient newAWSKMSClient(AWSCredentialsProvider credentialsProvider,ClientConfiguration clientConfig,CryptoConfiguration cryptoConfig,RequestMetricCollector requestMetricCollector){\r\n    final AWSKMSClient kmsClient = new AWSKMSClient(credentialsProvider, clientConfig, requestMetricCollector);\r\n    final Region kmsRegion = cryptoConfig.getAwsKmsRegion();\r\n    if (kmsRegion != null)\r\n        kmsClient.setRegion(kmsRegion);\r\n    return kmsClient;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeReservedNodesAsync",
	"Comment": "simplified method form for invoking the describereservednodes operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeReservedNodesResult> describeReservedNodesAsync(DescribeReservedNodesRequest request,java.util.concurrent.Future<DescribeReservedNodesResult> describeReservedNodesAsync,DescribeReservedNodesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeReservedNodesRequest, DescribeReservedNodesResult> asyncHandler,java.util.concurrent.Future<DescribeReservedNodesResult> describeReservedNodesAsync,java.util.concurrent.Future<DescribeReservedNodesResult> describeReservedNodesAsync,com.amazonaws.handlers.AsyncHandler<DescribeReservedNodesRequest, DescribeReservedNodesResult> asyncHandler){\r\n    return describeReservedNodesAsync(new DescribeReservedNodesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.withNotificationConfiguration",
	"Comment": "sets the new notification configuration for the specified bucket andreturns this object, enabling additional method calls to be chainedtogether.",
	"Method": "SetBucketNotificationConfigurationRequest withNotificationConfiguration(BucketNotificationConfiguration notificationConfiguration){\r\n    setNotificationConfiguration(notificationConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.getAllowedOrigins",
	"Comment": "returns the allowed origins of this rule and returns a reference to this object formethod chaining.",
	"Method": "List<String> getAllowedOrigins(){\r\n    return allowedOrigins;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.TrainingJobDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingInputMode() != null)\r\n        sb.append(\"TrainingInputMode: \").append(getTrainingInputMode()).append(\",\");\r\n    if (getHyperParameters() != null)\r\n        sb.append(\"HyperParameters: \").append(getHyperParameters()).append(\",\");\r\n    if (getInputDataConfig() != null)\r\n        sb.append(\"InputDataConfig: \").append(getInputDataConfig()).append(\",\");\r\n    if (getOutputDataConfig() != null)\r\n        sb.append(\"OutputDataConfig: \").append(getOutputDataConfig()).append(\",\");\r\n    if (getResourceConfig() != null)\r\n        sb.append(\"ResourceConfig: \").append(getResourceConfig()).append(\",\");\r\n    if (getStoppingCondition() != null)\r\n        sb.append(\"StoppingCondition: \").append(getStoppingCondition());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.withTruncated",
	"Comment": "for internal use only. sets the truncated property forthis inventory configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "ListBucketInventoryConfigurationsResult withTruncated(boolean isTruncated){\r\n    setTruncated(isTruncated);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.UpdateTrafficPolicyCommentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicy() != null)\r\n        sb.append(\"TrafficPolicy: \").append(getTrafficPolicy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.getContactReachabilityStatus",
	"Comment": "for operations that require confirmation that the email address for the registrant contact is valid, such asregistering a new domain, this operation returns information about whether the registrant contact has responded.if you want us to resend the email, use the resendcontactreachabilityemail operation.",
	"Method": "GetContactReachabilityStatusResult getContactReachabilityStatus(GetContactReachabilityStatusRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetContactReachabilityStatus(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setEncodingType",
	"Comment": "for internal use only. sets the encoding type used by amazon s3 to encodeobject key names in the xml response.",
	"Method": "void setEncodingType(String encodingType){\r\n    this.encodingType = encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.putLexicon",
	"Comment": "stores a pronunciation lexicon in an aws region. if a lexicon with the same name already exists in the region, itis overwritten by the new lexicon. lexicon operations have eventual consistency, therefore, it might take sometime before the lexicon is available to the synthesizespeech operation.for more information, see managinglexicons.",
	"Method": "PutLexiconResult putLexicon(PutLexiconRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutLexicon(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHealthCheckCountResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheckCount() != null)\r\n        sb.append(\"HealthCheckCount: \").append(getHealthCheckCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeOptionGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionGroupsList() != null)\r\n        sb.append(\"OptionGroupsList: \").append(getOptionGroupsList()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.modifyClusterMaintenance",
	"Comment": "modifies the maintenance settings of a cluster. for example, you can defer a maintenance window. you can alsoupdate or cancel a deferment.",
	"Method": "Cluster modifyClusterMaintenance(ModifyClusterMaintenanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifyClusterMaintenance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.AcceptReservedNodeExchangeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedNodeId() != null)\r\n        sb.append(\"ReservedNodeId: \").append(getReservedNodeId()).append(\",\");\r\n    if (getTargetReservedNodeOfferingId() != null)\r\n        sb.append(\"TargetReservedNodeOfferingId: \").append(getTargetReservedNodeOfferingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteHealthCheckRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheckId() != null)\r\n        sb.append(\"HealthCheckId: \").append(getHealthCheckId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.DisassociateResolverEndpointIpAddressResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpoint() != null)\r\n        sb.append(\"ResolverEndpoint: \").append(getResolverEndpoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.getUploadIdMarker",
	"Comment": "returns the optional upload id marker specified in the original requestto specify where in the results to begin listing multipart uploads.",
	"Method": "String getUploadIdMarker(){\r\n    return uploadIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobInputConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDataSource() != null)\r\n        sb.append(\"DataSource: \").append(getDataSource()).append(\",\");\r\n    if (getDataAttributes() != null)\r\n        sb.append(\"DataAttributes: \").append(getDataAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.Group.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupArn() != null)\r\n        sb.append(\"GroupArn: \").append(getGroupArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RemoveSourceIdentifierFromSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getSourceIdentifier() != null)\r\n        sb.append(\"SourceIdentifier: \").append(getSourceIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCountry() != null)\r\n        sb.append(\"Country: \").append(getCountry()).append(\",\");\r\n    if (getGPSPoint() != null)\r\n        sb.append(\"GPSPoint: \").append(getGPSPoint());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.withPartETags",
	"Comment": "sets the list of part numbers and etags that identify the individualparts of the multipart upload to complete based on the specified resultsfrom part uploads.",
	"Method": "CompleteMultipartUploadRequest withPartETags(List<PartETag> partETags,CompleteMultipartUploadRequest withPartETags,UploadPartResult uploadPartResults,CompleteMultipartUploadRequest withPartETags,Collection<UploadPartResult> uploadPartResultsCollection){\r\n    for (UploadPartResult result : uploadPartResultsCollection) {\r\n        this.partETags.add(new PartETag(result.getPartNumber(), result.getETag()));\r\n    }\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.DomainSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getAutoRenew() != null)\r\n        sb.append(\"AutoRenew: \").append(getAutoRenew()).append(\",\");\r\n    if (getTransferLock() != null)\r\n        sb.append(\"TransferLock: \").append(getTransferLock()).append(\",\");\r\n    if (getExpiry() != null)\r\n        sb.append(\"Expiry: \").append(getExpiry());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBClusterParameterGroups",
	"Comment": "returns a list of dbclusterparametergroup descriptions. if adbclusterparametergroupname parameter is specified, the list will contain only the description ofthe specified db cluster parameter group.for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DescribeDBClusterParameterGroupsResult describeDBClusterParameterGroups(DescribeDBClusterParameterGroupsRequest request,DescribeDBClusterParameterGroupsResult describeDBClusterParameterGroups){\r\n    return describeDBClusterParameterGroups(new DescribeDBClusterParameterGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeStorageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateNotebookInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceName() != null)\r\n        sb.append(\"NotebookInstanceName: \").append(getNotebookInstanceName()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getSubnetId() != null)\r\n        sb.append(\"SubnetId: \").append(getSubnetId()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getLifecycleConfigName() != null)\r\n        sb.append(\"LifecycleConfigName: \").append(getLifecycleConfigName()).append(\",\");\r\n    if (getDirectInternetAccess() != null)\r\n        sb.append(\"DirectInternetAccess: \").append(getDirectInternetAccess()).append(\",\");\r\n    if (getVolumeSizeInGB() != null)\r\n        sb.append(\"VolumeSizeInGB: \").append(getVolumeSizeInGB()).append(\",\");\r\n    if (getAcceleratorTypes() != null)\r\n        sb.append(\"AcceleratorTypes: \").append(getAcceleratorTypes()).append(\",\");\r\n    if (getDefaultCodeRepository() != null)\r\n        sb.append(\"DefaultCodeRepository: \").append(getDefaultCodeRepository()).append(\",\");\r\n    if (getAdditionalCodeRepositories() != null)\r\n        sb.append(\"AdditionalCodeRepositories: \").append(getAdditionalCodeRepositories());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetPublicAccessBlockRequest.withBucketName",
	"Comment": "the name of the amazon s3 bucket whose public access block configuration you want to set.",
	"Method": "SetPublicAccessBlockRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.getOperationDetail",
	"Comment": "this operation returns the current status of an operation that is not completed.",
	"Method": "GetOperationDetailResult getOperationDetail(GetOperationDetailRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetOperationDetail(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setProgressListener",
	"Comment": "sets the optional progress listener for receiving updates about objectdownload status.",
	"Method": "void setProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setGeneralProgressListener(new LegacyS3ProgressListener(progressListener));\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobAlgorithmsConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabelingJobAlgorithmSpecificationArn() != null)\r\n        sb.append(\"LabelingJobAlgorithmSpecificationArn: \").append(getLabelingJobAlgorithmSpecificationArn()).append(\",\");\r\n    if (getInitialActiveLearningModelArn() != null)\r\n        sb.append(\"InitialActiveLearningModelArn: \").append(getInitialActiveLearningModelArn()).append(\",\");\r\n    if (getLabelingJobResourceConfig() != null)\r\n        sb.append(\"LabelingJobResourceConfig: \").append(getLabelingJobResourceConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.RegisterUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Mustache.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.AmazonPinpointSMSVoiceAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.HumanTaskConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkteamArn() != null)\r\n        sb.append(\"WorkteamArn: \").append(getWorkteamArn()).append(\",\");\r\n    if (getUiConfig() != null)\r\n        sb.append(\"UiConfig: \").append(getUiConfig()).append(\",\");\r\n    if (getPreHumanTaskLambdaArn() != null)\r\n        sb.append(\"PreHumanTaskLambdaArn: \").append(getPreHumanTaskLambdaArn()).append(\",\");\r\n    if (getTaskKeywords() != null)\r\n        sb.append(\"TaskKeywords: \").append(getTaskKeywords()).append(\",\");\r\n    if (getTaskTitle() != null)\r\n        sb.append(\"TaskTitle: \").append(getTaskTitle()).append(\",\");\r\n    if (getTaskDescription() != null)\r\n        sb.append(\"TaskDescription: \").append(getTaskDescription()).append(\",\");\r\n    if (getNumberOfHumanWorkersPerDataObject() != null)\r\n        sb.append(\"NumberOfHumanWorkersPerDataObject: \").append(getNumberOfHumanWorkersPerDataObject()).append(\",\");\r\n    if (getTaskTimeLimitInSeconds() != null)\r\n        sb.append(\"TaskTimeLimitInSeconds: \").append(getTaskTimeLimitInSeconds()).append(\",\");\r\n    if (getTaskAvailabilityLifetimeInSeconds() != null)\r\n        sb.append(\"TaskAvailabilityLifetimeInSeconds: \").append(getTaskAvailabilityLifetimeInSeconds()).append(\",\");\r\n    if (getMaxConcurrentTaskCount() != null)\r\n        sb.append(\"MaxConcurrentTaskCount: \").append(getMaxConcurrentTaskCount()).append(\",\");\r\n    if (getAnnotationConsolidationConfig() != null)\r\n        sb.append(\"AnnotationConsolidationConfig: \").append(getAnnotationConsolidationConfig()).append(\",\");\r\n    if (getPublicWorkforceTaskPrice() != null)\r\n        sb.append(\"PublicWorkforceTaskPrice: \").append(getPublicWorkforceTaskPrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetSpeechSynthesisTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUpload.setStorageClass",
	"Comment": "sets the storage class indicating how the data in this multipart uploadwill be stored.",
	"Method": "void setStorageClass(String storageClass){\r\n    this.storageClass = storageClass;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.TrainingJobSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJobName() != null)\r\n        sb.append(\"TrainingJobName: \").append(getTrainingJobName()).append(\",\");\r\n    if (getTrainingJobArn() != null)\r\n        sb.append(\"TrainingJobArn: \").append(getTrainingJobArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTrainingEndTime() != null)\r\n        sb.append(\"TrainingEndTime: \").append(getTrainingEndTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getTrainingJobStatus() != null)\r\n        sb.append(\"TrainingJobStatus: \").append(getTrainingJobStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListFacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCollectionId() != null)\r\n        sb.append(\"CollectionId: \").append(getCollectionId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.UploadResult.getBucketName",
	"Comment": "returns the name of the bucket containing the uploaded object.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteVersionRequest.setVersionId",
	"Comment": "sets the version id uniquely identifying which version of theobject to delete.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.listTrafficPoliciesAsync",
	"Comment": "simplified method form for invoking the listtrafficpolicies operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTrafficPoliciesResult> listTrafficPoliciesAsync(ListTrafficPoliciesRequest request,java.util.concurrent.Future<ListTrafficPoliciesResult> listTrafficPoliciesAsync,ListTrafficPoliciesRequest request,com.amazonaws.handlers.AsyncHandler<ListTrafficPoliciesRequest, ListTrafficPoliciesResult> asyncHandler,java.util.concurrent.Future<ListTrafficPoliciesResult> listTrafficPoliciesAsync,java.util.concurrent.Future<ListTrafficPoliciesResult> listTrafficPoliciesAsync,com.amazonaws.handlers.AsyncHandler<ListTrafficPoliciesRequest, ListTrafficPoliciesResult> asyncHandler){\r\n    return listTrafficPoliciesAsync(new ListTrafficPoliciesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTrafficPoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicySummaries() != null)\r\n        sb.append(\"TrafficPolicySummaries: \").append(getTrafficPolicySummaries()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getTrafficPolicyIdMarker() != null)\r\n        sb.append(\"TrafficPolicyIdMarker: \").append(getTrafficPolicyIdMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getContentType",
	"Comment": "returns the content type response header override if it has beenspecified, or null otherwise.",
	"Method": "String getContentType(){\r\n    return contentType;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListNextBatchOfObjectsRequest.withPreviousObjectListing",
	"Comment": "sets the previous object listing and returns the updated request object so that additionalmethod calls can be chained together.",
	"Method": "ListNextBatchOfObjectsRequest withPreviousObjectListing(ObjectListing previousObjectListing){\r\n    setPreviousObjectListing(previousObjectListing);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Video.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Object() != null)\r\n        sb.append(\"S3Object: \").append(getS3Object());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.CreateConfigurationSetEventDestinationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.ListConfigurationSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSets() != null)\r\n        sb.append(\"ConfigurationSets: \").append(getConfigurationSets()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getExpires",
	"Comment": "returns the expires response header override if it has been specified, ornull otherwise.",
	"Method": "String getExpires(){\r\n    return expires;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateWorkteamResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkteamArn() != null)\r\n        sb.append(\"WorkteamArn: \").append(getWorkteamArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartCelebrityRecognitionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListDeploymentJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AbstractAmazonRoute53DomainsAsync.listOperationsAsync",
	"Comment": "simplified method form for invoking the listoperations operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListOperationsResult> listOperationsAsync(ListOperationsRequest request,java.util.concurrent.Future<ListOperationsResult> listOperationsAsync,ListOperationsRequest request,com.amazonaws.handlers.AsyncHandler<ListOperationsRequest, ListOperationsResult> asyncHandler,java.util.concurrent.Future<ListOperationsResult> listOperationsAsync,java.util.concurrent.Future<ListOperationsResult> listOperationsAsync,com.amazonaws.handlers.AsyncHandler<ListOperationsRequest, ListOperationsResult> asyncHandler){\r\n    return listOperationsAsync(new ListOperationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultiObjectDeleteException.getErrors",
	"Comment": "returns the list of errors from the attempted delete operation.",
	"Method": "List<DeleteError> getErrors(){\r\n    return errors;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ProductionVariant.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVariantName() != null)\r\n        sb.append(\"VariantName: \").append(getVariantName()).append(\",\");\r\n    if (getModelName() != null)\r\n        sb.append(\"ModelName: \").append(getModelName()).append(\",\");\r\n    if (getInitialInstanceCount() != null)\r\n        sb.append(\"InitialInstanceCount: \").append(getInitialInstanceCount()).append(\",\");\r\n    if (getInstanceType() != null)\r\n        sb.append(\"InstanceType: \").append(getInstanceType()).append(\",\");\r\n    if (getInitialVariantWeight() != null)\r\n        sb.append(\"InitialVariantWeight: \").append(getInitialVariantWeight()).append(\",\");\r\n    if (getAcceleratorType() != null)\r\n        sb.append(\"AcceleratorType: \").append(getAcceleratorType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.CopyResult.getSourceBucketName",
	"Comment": "gets the name of the bucket containing the source object to be copied.",
	"Method": "String getSourceBucketName(){\r\n    return sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.waiters.DescribeClustersFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeClustersResult apply(DescribeClustersRequest describeClustersRequest){\r\n    return client.describeClusters(describeClustersRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.listFleets",
	"Comment": "returns a list of fleets. you can optionally provide filters to retrieve specific fleets.",
	"Method": "ListFleetsResult listFleets(ListFleetsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListFleets(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.setPartETags",
	"Comment": "sets the list of part numbers and etags that identify the individualparts of the multipart upload to complete.",
	"Method": "void setPartETags(List<PartETag> partETags){\r\n    this.partETags = partETags;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeCertificatesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCertificateIdentifier() != null)\r\n        sb.append(\"CertificateIdentifier: \").append(getCertificateIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutConfigurationSetReputationOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.getPartNumberMarker",
	"Comment": "returns the optional part number marker indicating where in the resultsto being listing parts.",
	"Method": "Integer getPartNumberMarker(){\r\n    return partNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateSnapshotScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduleDefinitions() != null)\r\n        sb.append(\"ScheduleDefinitions: \").append(getScheduleDefinitions()).append(\",\");\r\n    if (getScheduleIdentifier() != null)\r\n        sb.append(\"ScheduleIdentifier: \").append(getScheduleIdentifier()).append(\",\");\r\n    if (getScheduleDescription() != null)\r\n        sb.append(\"ScheduleDescription: \").append(getScheduleDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getDryRun() != null)\r\n        sb.append(\"DryRun: \").append(getDryRun()).append(\",\");\r\n    if (getNextInvocations() != null)\r\n        sb.append(\"NextInvocations: \").append(getNextInvocations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.fromInstructionFile",
	"Comment": "factory method to return the content crypto material from the s3instruction file, using the specified key encrypting key materialaccessor and an optional security provider.",
	"Method": "ContentCryptoMaterial fromInstructionFile(Map<String, String> instFile,EncryptionMaterialsAccessor kekMaterialAccessor,Provider securityProvider,boolean alwaysUseSecurityProvider,boolean keyWrapExpected,AWSKMS kms,ContentCryptoMaterial fromInstructionFile,Map<String, String> instFile,EncryptionMaterialsAccessor kekMaterialAccessor,Provider securityProvider,boolean alwaysUseSecurityProvider,long[] range,ExtraMaterialsDescription extra,boolean keyWrapExpected,AWSKMS kms){\r\n    return fromInstructionFile0(instFile, kekMaterialAccessor, securityProvider, alwaysUseSecurityProvider, range, extra, keyWrapExpected, kms);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetFaceDetectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getVideoMetadata() != null)\r\n        sb.append(\"VideoMetadata: \").append(getVideoMetadata()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFaces() != null)\r\n        sb.append(\"Faces: \").append(getFaces());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBSnapshotAttributes",
	"Comment": "returns a list of db snapshot attribute names and values for a manual db snapshot.when sharing snapshots with other aws accounts, describedbsnapshotattributes returns therestore attribute and a list of ids for the aws accounts that are authorized to copy or restore themanual db snapshot. if all is included in the list of values for the restore attribute,then the manual db snapshot is public and can be copied or restored by all aws accounts.to add or remove access for an aws account to copy or restore a manual db snapshot, or to make the manual dbsnapshot public or private, use the modifydbsnapshotattribute api action.",
	"Method": "DBSnapshotAttributesResult describeDBSnapshotAttributes(DescribeDBSnapshotAttributesRequest request,DBSnapshotAttributesResult describeDBSnapshotAttributes){\r\n    return describeDBSnapshotAttributes(new DescribeDBSnapshotAttributesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SendUsersMessageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContext() != null)\r\n        sb.append(\"Context: \").append(getContext()).append(\",\");\r\n    if (getMessageConfiguration() != null)\r\n        sb.append(\"MessageConfiguration: \").append(getMessageConfiguration()).append(\",\");\r\n    if (getTraceId() != null)\r\n        sb.append(\"TraceId: \").append(getTraceId()).append(\",\");\r\n    if (getUsers() != null)\r\n        sb.append(\"Users: \").append(getUsers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.MultiFileOutputStream.fos",
	"Comment": "returns the file output stream to be used for writing, blocking ifnecessary if running out of disk space.",
	"Method": "FileOutputStream fos(){\r\n    if (closed)\r\n        throw new IOException(\"Output stream is already closed\");\r\n    if (os == null || currFileBytesWritten >= partSize) {\r\n        if (os != null) {\r\n            os.close();\r\n            observer.onPartCreate(new PartCreationEvent(getFile(filesCreated), filesCreated, false, this));\r\n        }\r\n        currFileBytesWritten = 0;\r\n        filesCreated++;\r\n        blockIfNecessary();\r\n        final File file = getFile(filesCreated);\r\n        os = new FileOutputStream(file);\r\n    }\r\n    return os;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateGcmChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getGCMChannelRequest() != null)\r\n        sb.append(\"GCMChannelRequest: \").append(getGCMChannelRequest());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetAccountRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ResendContactReachabilityEmailResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getEmailAddress() != null)\r\n        sb.append(\"EmailAddress: \").append(getEmailAddress()).append(\",\");\r\n    if (getIsAlreadyVerified() != null)\r\n        sb.append(\"IsAlreadyVerified: \").append(getIsAlreadyVerified());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsClient.listOperations",
	"Comment": "this operation returns the operation ids of operations that are not yet complete.",
	"Method": "ListOperationsResult listOperations(ListOperationsRequest request,ListOperationsResult listOperations){\r\n    return listOperations(new ListOperationsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeTagsAsync",
	"Comment": "simplified method form for invoking the describetags operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync(DescribeTagsRequest request,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,DescribeTagsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest, DescribeTagsResult> asyncHandler,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest, DescribeTagsResult> asyncHandler){\r\n    return describeTagsAsync(new DescribeTagsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBClusters",
	"Comment": "returns information about provisioned aurora db clusters. this api supports pagination.for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DescribeDBClustersResult describeDBClusters(DescribeDBClustersRequest request,DescribeDBClustersResult describeDBClusters){\r\n    return describeDBClusters(new DescribeDBClustersRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.setErrorDocument",
	"Comment": "sets the complete path to the document to serve for 4xx errors.",
	"Method": "void setErrorDocument(String errorDocument){\r\n    this.errorDocument = errorDocument;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutInstructionFileRequest.getAccessControlList",
	"Comment": "returns the optional access control list for the new object. ifspecified, cannedacl will be ignored.",
	"Method": "AccessControlList getAccessControlList(){\r\n    return accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.listTrafficPolicyInstancesAsync",
	"Comment": "simplified method form for invoking the listtrafficpolicyinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTrafficPolicyInstancesResult> listTrafficPolicyInstancesAsync(ListTrafficPolicyInstancesRequest request,java.util.concurrent.Future<ListTrafficPolicyInstancesResult> listTrafficPolicyInstancesAsync,ListTrafficPolicyInstancesRequest request,com.amazonaws.handlers.AsyncHandler<ListTrafficPolicyInstancesRequest, ListTrafficPolicyInstancesResult> asyncHandler,java.util.concurrent.Future<ListTrafficPolicyInstancesResult> listTrafficPolicyInstancesAsync,java.util.concurrent.Future<ListTrafficPolicyInstancesResult> listTrafficPolicyInstancesAsync,com.amazonaws.handlers.AsyncHandler<ListTrafficPolicyInstancesRequest, ListTrafficPolicyInstancesResult> asyncHandler){\r\n    return listTrafficPolicyInstancesAsync(new ListTrafficPolicyInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.model.PutPublicAccessBlockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.deleteDBSubnetGroup",
	"Comment": "deletes a db subnet group.the specified database subnet group must not be associated with any db instances.",
	"Method": "DeleteDBSubnetGroupResult deleteDBSubnetGroup(DeleteDBSubnetGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDBSubnetGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.AmazonQuickSightClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.listLexicons",
	"Comment": "returns a list of pronunciation lexicons stored in an aws region. for more information, see managing lexicons.",
	"Method": "ListLexiconsResult listLexicons(ListLexiconsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListLexicons(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetPublicAccessBlockRequest.setPublicAccessBlockConfiguration",
	"Comment": "the public access block configuration that you want to apply to this amazon s3 bucket.",
	"Method": "void setPublicAccessBlockConfiguration(PublicAccessBlockConfiguration publicAccessBlockConfiguration){\r\n    this.publicAccessBlockConfiguration = publicAccessBlockConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClient.rejectResourceShareInvitation",
	"Comment": "rejects an invitation to a resource share from another aws account.",
	"Method": "RejectResourceShareInvitationResult rejectResourceShareInvitation(RejectResourceShareInvitationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRejectResourceShareInvitation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.TrafficPolicy.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getDocument() != null)\r\n        sb.append(\"Document: \").append(getDocument()).append(\",\");\r\n    if (getComment() != null)\r\n        sb.append(\"Comment: \").append(getComment());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutEmailIdentityFeedbackAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutObjectRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated putobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "PutObjectRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.SendVoiceMessageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageId() != null)\r\n        sb.append(\"MessageId: \").append(getMessageId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.TagResourceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketPolicyRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose policy is being deleted.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.model.ExecuteSqlResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSqlStatementResults() != null)\r\n        sb.append(\"SqlStatementResults: \").append(getSqlStatementResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceDetectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobId() != null)\r\n        sb.append(\"JobId: \").append(getJobId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.CopyResult.getDestinationKey",
	"Comment": "gets the destination bucket key under which the new, copied object willbe stored.",
	"Method": "String getDestinationKey(){\r\n    return destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RestoreDBClusterToPointInTimeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getRestoreType() != null)\r\n        sb.append(\"RestoreType: \").append(getRestoreType()).append(\",\");\r\n    if (getSourceDBClusterIdentifier() != null)\r\n        sb.append(\"SourceDBClusterIdentifier: \").append(getSourceDBClusterIdentifier()).append(\",\");\r\n    if (getRestoreToTime() != null)\r\n        sb.append(\"RestoreToTime: \").append(getRestoreToTime()).append(\",\");\r\n    if (getUseLatestRestorableTime() != null)\r\n        sb.append(\"UseLatestRestorableTime: \").append(getUseLatestRestorableTime()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getBacktrackWindow() != null)\r\n        sb.append(\"BacktrackWindow: \").append(getBacktrackWindow()).append(\",\");\r\n    if (getEnableCloudwatchLogsExports() != null)\r\n        sb.append(\"EnableCloudwatchLogsExports: \").append(getEnableCloudwatchLogsExports()).append(\",\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeEventCategoriesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CodeRepositorySummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeRepositoryName() != null)\r\n        sb.append(\"CodeRepositoryName: \").append(getCodeRepositoryName()).append(\",\");\r\n    if (getCodeRepositoryArn() != null)\r\n        sb.append(\"CodeRepositoryArn: \").append(getCodeRepositoryArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getGitConfig() != null)\r\n        sb.append(\"GitConfig: \").append(getGitConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterSecurityGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSecurityGroupName() != null)\r\n        sb.append(\"ClusterSecurityGroupName: \").append(getClusterSecurityGroupName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListModelPackagesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketEncryptionRequest.withBucketName",
	"Comment": "the name of the bucket for which to delete the encryption configuration.",
	"Method": "DeleteBucketEncryptionRequest withBucketName(String bucket){\r\n    setBucketName(bucket);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterIamRole.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getIamRoleArn() != null)\r\n        sb.append(\"IamRoleArn: \").append(getIamRoleArn()).append(\",\");\r\n    if (getApplyStatus() != null)\r\n        sb.append(\"ApplyStatus: \").append(getApplyStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTagsForResourcesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceTagSets() != null)\r\n        sb.append(\"ResourceTagSets: \").append(getResourceTagSets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.metrics.S3ServiceMetric.metricName",
	"Comment": "returns a metric name by concatenating the service name prefix with thegiven suffix.",
	"Method": "String metricName(String suffix){\r\n    return SERVICE_NAME_PREFIX + suffix;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointName() != null)\r\n        sb.append(\"EndpointName: \").append(getEndpointName()).append(\",\");\r\n    if (getEndpointConfigName() != null)\r\n        sb.append(\"EndpointConfigName: \").append(getEndpointConfigName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListResourceRecordSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceRecordSets() != null)\r\n        sb.append(\"ResourceRecordSets: \").append(getResourceRecordSets()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getNextRecordName() != null)\r\n        sb.append(\"NextRecordName: \").append(getNextRecordName()).append(\",\");\r\n    if (getNextRecordType() != null)\r\n        sb.append(\"NextRecordType: \").append(getNextRecordType()).append(\",\");\r\n    if (getNextRecordIdentifier() != null)\r\n        sb.append(\"NextRecordIdentifier: \").append(getNextRecordIdentifier()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ContentModerationDetection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getModerationLabel() != null)\r\n        sb.append(\"ModerationLabel: \").append(getModerationLabel());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.LabelingJobDataSource.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3DataSource() != null)\r\n        sb.append(\"S3DataSource: \").append(getS3DataSource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.model.GetAttributeValuesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getServiceCode() != null)\r\n        sb.append(\"ServiceCode: \").append(getServiceCode()).append(\",\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.MultipleFileTransfer.setState",
	"Comment": "override this method so that transferstate updates are also sent out to theprogress listener chain in forms of progressevent.",
	"Method": "void setState(TransferState state){\r\n    super.setState(state);\r\n    switch(state) {\r\n        case Waiting:\r\n            fireProgressEvent(ProgressEventType.TRANSFER_PREPARING_EVENT);\r\n            break;\r\n        case InProgress:\r\n            if (subTransferStarted.compareAndSet(false, true)) {\r\n                fireProgressEvent(ProgressEventType.TRANSFER_STARTED_EVENT);\r\n            }\r\n            break;\r\n        case Completed:\r\n            fireProgressEvent(ProgressEventType.TRANSFER_COMPLETED_EVENT);\r\n            break;\r\n        case Canceled:\r\n            fireProgressEvent(ProgressEventType.TRANSFER_CANCELED_EVENT);\r\n            break;\r\n        case Failed:\r\n            fireProgressEvent(ProgressEventType.TRANSFER_FAILED_EVENT);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.GetDedicatedIpsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPoolName() != null)\r\n        sb.append(\"PoolName: \").append(getPoolName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBSnapshots() != null)\r\n        sb.append(\"DBSnapshots: \").append(getDBSnapshots());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.restoreDBClusterToPointInTime",
	"Comment": "restores a db cluster to an arbitrary point in time. users can restore to any point in time beforelatestrestorabletime for up to backupretentionperiod days. the target db cluster iscreated from the source db cluster with the same configuration as the original db cluster, except that the new dbcluster is created with the default db security group.this action only restores the db cluster, not the db instances for that db cluster. you must invoke thecreatedbinstance action to create db instances for the restored db cluster, specifying the identifier ofthe restored db cluster in dbclusteridentifier. you can create db instances only after therestoredbclustertopointintime action has completed and the db cluster is available.for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DBCluster restoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeRestoreDBClusterToPointInTime(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.getMaxKeys",
	"Comment": "gets the value of the maxkeys parameter used to request this versionlisting.returns the default maxkeys value provided by amazon s3 if noparameter value was otherwise specified.the maxkeys parameter limits the numberof versions included in this version listing. a version listing willnever contain more versions than indicated by maxkeys , but cancontain less.",
	"Method": "int getMaxKeys(){\r\n    return maxKeys;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.enableSnapshotCopy",
	"Comment": "enables the automatic copy of snapshots from one region to another region for a specified cluster.",
	"Method": "Cluster enableSnapshotCopy(EnableSnapshotCopyRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeEnableSnapshotCopy(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.BatchDeleteClusterSnapshotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResources() != null)\r\n        sb.append(\"Resources: \").append(getResources()).append(\",\");\r\n    if (getErrors() != null)\r\n        sb.append(\"Errors: \").append(getErrors());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeAlgorithmResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithmName() != null)\r\n        sb.append(\"AlgorithmName: \").append(getAlgorithmName()).append(\",\");\r\n    if (getAlgorithmArn() != null)\r\n        sb.append(\"AlgorithmArn: \").append(getAlgorithmArn()).append(\",\");\r\n    if (getAlgorithmDescription() != null)\r\n        sb.append(\"AlgorithmDescription: \").append(getAlgorithmDescription()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getTrainingSpecification() != null)\r\n        sb.append(\"TrainingSpecification: \").append(getTrainingSpecification()).append(\",\");\r\n    if (getInferenceSpecification() != null)\r\n        sb.append(\"InferenceSpecification: \").append(getInferenceSpecification()).append(\",\");\r\n    if (getValidationSpecification() != null)\r\n        sb.append(\"ValidationSpecification: \").append(getValidationSpecification()).append(\",\");\r\n    if (getAlgorithmStatus() != null)\r\n        sb.append(\"AlgorithmStatus: \").append(getAlgorithmStatus()).append(\",\");\r\n    if (getAlgorithmStatusDetails() != null)\r\n        sb.append(\"AlgorithmStatusDetails: \").append(getAlgorithmStatusDetails()).append(\",\");\r\n    if (getProductId() != null)\r\n        sb.append(\"ProductId: \").append(getProductId()).append(\",\");\r\n    if (getCertifyForMarketplace() != null)\r\n        sb.append(\"CertifyForMarketplace: \").append(getCertifyForMarketplace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketLifecycleConfiguration.getRules",
	"Comment": "returns the list of rules that comprise this configuration.",
	"Method": "List<Rule> getRules(){\r\n    return rules;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket whose versions are to be listed.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setDelimiter",
	"Comment": "for internal use only. sets the delimiter parameter originally used to\trequest this multipart upload listing.",
	"Method": "void setDelimiter(String delimiter){\r\n    this.delimiter = delimiter;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteClusterSnapshotMessage.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getSnapshotClusterIdentifier() != null)\r\n        sb.append(\"SnapshotClusterIdentifier: \").append(getSnapshotClusterIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withBucketName",
	"Comment": "sets the name of the bucket in which to create the new multipart upload,and hence, the eventual object created from the multipart upload.returns this updated initiatemultipartuploadrequest object so thatadditional method calls can be chained together.",
	"Method": "InitiateMultipartUploadRequest withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListTrainingJobsForHyperParameterTuningJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJobSummaries() != null)\r\n        sb.append(\"TrainingJobSummaries: \").append(getTrainingJobSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.AWSResourceGroupsTaggingAPIAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeAlgorithmRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithmName() != null)\r\n        sb.append(\"AlgorithmName: \").append(getAlgorithmName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.downloadDBLogFilePortion",
	"Comment": "downloads all or a portion of the specified log file, up to 1 mb in size.",
	"Method": "DownloadDBLogFilePortionResult downloadDBLogFilePortion(DownloadDBLogFilePortionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDownloadDBLogFilePortion(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.getPartNumber",
	"Comment": "returns the optional part number that indicates the part to be downloaded in a multipart object.",
	"Method": "Integer getPartNumber(){\r\n    return partNumber;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.waiters.HeadObjectFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking thecorresponding request and returns the corresponding result",
	"Method": "ObjectMetadata apply(GetObjectMetadataRequest headObjectRequest){\r\n    return client.getObjectMetadata(headObjectRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.HyperParameterTuningJobSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHyperParameterTuningJobName() != null)\r\n        sb.append(\"HyperParameterTuningJobName: \").append(getHyperParameterTuningJobName()).append(\",\");\r\n    if (getHyperParameterTuningJobArn() != null)\r\n        sb.append(\"HyperParameterTuningJobArn: \").append(getHyperParameterTuningJobArn()).append(\",\");\r\n    if (getHyperParameterTuningJobStatus() != null)\r\n        sb.append(\"HyperParameterTuningJobStatus: \").append(getHyperParameterTuningJobStatus()).append(\",\");\r\n    if (getStrategy() != null)\r\n        sb.append(\"Strategy: \").append(getStrategy()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getHyperParameterTuningEndTime() != null)\r\n        sb.append(\"HyperParameterTuningEndTime: \").append(getHyperParameterTuningEndTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getTrainingJobStatusCounters() != null)\r\n        sb.append(\"TrainingJobStatusCounters: \").append(getTrainingJobStatusCounters()).append(\",\");\r\n    if (getObjectiveStatusCounters() != null)\r\n        sb.append(\"ObjectiveStatusCounters: \").append(getObjectiveStatusCounters()).append(\",\");\r\n    if (getResourceLimits() != null)\r\n        sb.append(\"ResourceLimits: \").append(getResourceLimits());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.IPRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCIDRIP() != null)\r\n        sb.append(\"CIDRIP: \").append(getCIDRIP()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutEmailIdentityMailFromAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmailIdentity() != null)\r\n        sb.append(\"EmailIdentity: \").append(getEmailIdentity()).append(\",\");\r\n    if (getMailFromDomain() != null)\r\n        sb.append(\"MailFromDomain: \").append(getMailFromDomain()).append(\",\");\r\n    if (getBehaviorOnMxFailure() != null)\r\n        sb.append(\"BehaviorOnMxFailure: \").append(getBehaviorOnMxFailure());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectLockConfiguration.withObjectLockEnabled",
	"Comment": "indicates whether this object has an object lock configuration enabled.",
	"Method": "ObjectLockConfiguration withObjectLockEnabled(String objectLockEnabled,ObjectLockConfiguration withObjectLockEnabled,ObjectLockEnabled objectLockEnabled){\r\n    return withObjectLockEnabled(objectLockEnabled.toString());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose tagging configuration is being set,and returns this object so that additional method calls may be chainedtogether.",
	"Method": "SetBucketTaggingConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.describeAlgorithm",
	"Comment": "returns a description of the specified algorithm that is in your account.",
	"Method": "DescribeAlgorithmResult describeAlgorithm(DescribeAlgorithmRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeAlgorithm(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.getHostedZoneCount",
	"Comment": "retrieves the number of hosted zones that are associated with the current aws account.",
	"Method": "GetHostedZoneCountResult getHostedZoneCount(GetHostedZoneCountRequest request,GetHostedZoneCountResult getHostedZoneCount){\r\n    return getHostedZoneCount(new GetHostedZoneCountRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetPublicAccessBlockRequest.setBucketName",
	"Comment": "the name of the amazon s3 bucket whose public access block configuration you want to retrieve.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.getHealthCheckCountAsync",
	"Comment": "simplified method form for invoking the gethealthcheckcount operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetHealthCheckCountResult> getHealthCheckCountAsync(GetHealthCheckCountRequest request,java.util.concurrent.Future<GetHealthCheckCountResult> getHealthCheckCountAsync,GetHealthCheckCountRequest request,com.amazonaws.handlers.AsyncHandler<GetHealthCheckCountRequest, GetHealthCheckCountResult> asyncHandler,java.util.concurrent.Future<GetHealthCheckCountResult> getHealthCheckCountAsync,java.util.concurrent.Future<GetHealthCheckCountResult> getHealthCheckCountAsync,com.amazonaws.handlers.AsyncHandler<GetHealthCheckCountRequest, GetHealthCheckCountResult> asyncHandler){\r\n    return getHealthCheckCountAsync(new GetHealthCheckCountRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBClusterEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBClusterEndpoints() != null)\r\n        sb.append(\"DBClusterEndpoints: \").append(getDBClusterEndpoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.VoiceMessageContent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCallInstructionsMessage() != null)\r\n        sb.append(\"CallInstructionsMessage: \").append(getCallInstructionsMessage()).append(\",\");\r\n    if (getPlainTextMessage() != null)\r\n        sb.append(\"PlainTextMessage: \").append(getPlainTextMessage()).append(\",\");\r\n    if (getSSMLMessage() != null)\r\n        sb.append(\"SSMLMessage: \").append(getSSMLMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.GetDashboardEmbedUrlResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEmbedUrl() != null)\r\n        sb.append(\"EmbedUrl: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBClusterSnapshotAttribute.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getAttributeValues() != null)\r\n        sb.append(\"AttributeValues: \").append(getAttributeValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.model.CopyResult.setSourceBucketName",
	"Comment": "sets the name of the bucket containing the source object to be copied.",
	"Method": "void setSourceBucketName(String sourceBucketName){\r\n    this.sourceBucketName = sourceBucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsRequest.setContinuationToken",
	"Comment": "sets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "void setContinuationToken(String continuationToken){\r\n    this.continuationToken = continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ContainerDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContainerHostname() != null)\r\n        sb.append(\"ContainerHostname: \").append(getContainerHostname()).append(\",\");\r\n    if (getImage() != null)\r\n        sb.append(\"Image: \").append(getImage()).append(\",\");\r\n    if (getModelDataUrl() != null)\r\n        sb.append(\"ModelDataUrl: \").append(getModelDataUrl()).append(\",\");\r\n    if (getEnvironment() != null)\r\n        sb.append(\"Environment: \").append(getEnvironment()).append(\",\");\r\n    if (getModelPackageName() != null)\r\n        sb.append(\"ModelPackageName: \").append(getModelPackageName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.AssociateResolverEndpointIpAddressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpointId() != null)\r\n        sb.append(\"ResolverEndpointId: \").append(getResolverEndpointId()).append(\",\");\r\n    if (getIpAddress() != null)\r\n        sb.append(\"IpAddress: \").append(getIpAddress());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.setPartNumberMarker",
	"Comment": "sets the optional part number marker indicating where in the results tobeing listing parts.",
	"Method": "void setPartNumberMarker(Integer partNumberMarker){\r\n    this.partNumberMarker = partNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.PutLexiconResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentGroupList.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroups() != null)\r\n        sb.append(\"Groups: \").append(getGroups()).append(\",\");\r\n    if (getInclude() != null)\r\n        sb.append(\"Include: \").append(getInclude());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.UpdateResolverEndpointRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverEndpointId() != null)\r\n        sb.append(\"ResolverEndpointId: \").append(getResolverEndpointId()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.AlgorithmSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingImage() != null)\r\n        sb.append(\"TrainingImage: \").append(getTrainingImage()).append(\",\");\r\n    if (getAlgorithmName() != null)\r\n        sb.append(\"AlgorithmName: \").append(getAlgorithmName()).append(\",\");\r\n    if (getTrainingInputMode() != null)\r\n        sb.append(\"TrainingInputMode: \").append(getTrainingInputMode()).append(\",\");\r\n    if (getMetricDefinitions() != null)\r\n        sb.append(\"MetricDefinitions: \").append(getMetricDefinitions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.model.AttributeValue.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListLabelingJobsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getLastModifiedTimeAfter() != null)\r\n        sb.append(\"LastModifiedTimeAfter: \").append(getLastModifiedTimeAfter()).append(\",\");\r\n    if (getLastModifiedTimeBefore() != null)\r\n        sb.append(\"LastModifiedTimeBefore: \").append(getLastModifiedTimeBefore()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getStatusEquals() != null)\r\n        sb.append(\"StatusEquals: \").append(getStatusEquals());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBInstances",
	"Comment": "returns information about provisioned rds instances. this api supports pagination.",
	"Method": "DescribeDBInstancesResult describeDBInstances(DescribeDBInstancesRequest request,DescribeDBInstancesResult describeDBInstances){\r\n    return describeDBInstances(new DescribeDBInstancesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsrobomaker using the current builder configuration.",
	"Method": "AWSRoboMaker build(AwsSyncClientParams params){\r\n    return new AWSRoboMakerClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.AWSRAMClient.acceptResourceShareInvitation",
	"Comment": "accepts an invitation to a resource share from another aws account.",
	"Method": "AcceptResourceShareInvitationResult acceptResourceShareInvitation(AcceptResourceShareInvitationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAcceptResourceShareInvitation(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.AWSResourceGroupsClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsresourcegroups using the current builder configuration.",
	"Method": "AWSResourceGroups build(AwsSyncClientParams params){\r\n    return new AWSResourceGroupsClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.putConfigurationSetReputationOptions",
	"Comment": "enable or disable collection of reputation metrics for emails that you send using a particular configuration setin a specific aws region.",
	"Method": "PutConfigurationSetReputationOptionsResult putConfigurationSetReputationOptions(PutConfigurationSetReputationOptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutConfigurationSetReputationOptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Point.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getX() != null)\r\n        sb.append(\"X: \").append(getX()).append(\",\");\r\n    if (getY() != null)\r\n        sb.append(\"Y: \").append(getY());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.UpdateResolverRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRuleId() != null)\r\n        sb.append(\"ResolverRuleId: \").append(getResolverRuleId()).append(\",\");\r\n    if (getConfig() != null)\r\n        sb.append(\"Config: \").append(getConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.AuthorizeDBSecurityGroupIngressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSecurityGroupName() != null)\r\n        sb.append(\"DBSecurityGroupName: \").append(getDBSecurityGroupName()).append(\",\");\r\n    if (getCIDRIP() != null)\r\n        sb.append(\"CIDRIP: \").append(getCIDRIP()).append(\",\");\r\n    if (getEC2SecurityGroupName() != null)\r\n        sb.append(\"EC2SecurityGroupName: \").append(getEC2SecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupId() != null)\r\n        sb.append(\"EC2SecurityGroupId: \").append(getEC2SecurityGroupId()).append(\",\");\r\n    if (getEC2SecurityGroupOwnerId() != null)\r\n        sb.append(\"EC2SecurityGroupOwnerId: \").append(getEC2SecurityGroupOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketCrossOriginConfiguration.withRules",
	"Comment": "sets the rules that comprise this configuration and returns a referenceto this object for easy method chaining.",
	"Method": "BucketCrossOriginConfiguration withRules(List<CORSRule> rules,BucketCrossOriginConfiguration withRules,CORSRule rules){\r\n    setRules(Arrays.asList(rules));\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutConfigurationSetTrackingOptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.failoverDBClusterAsync",
	"Comment": "simplified method form for invoking the failoverdbcluster operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DBCluster> failoverDBClusterAsync(FailoverDBClusterRequest request,java.util.concurrent.Future<DBCluster> failoverDBClusterAsync,FailoverDBClusterRequest request,com.amazonaws.handlers.AsyncHandler<FailoverDBClusterRequest, DBCluster> asyncHandler,java.util.concurrent.Future<DBCluster> failoverDBClusterAsync,java.util.concurrent.Future<DBCluster> failoverDBClusterAsync,com.amazonaws.handlers.AsyncHandler<FailoverDBClusterRequest, DBCluster> asyncHandler){\r\n    return failoverDBClusterAsync(new FailoverDBClusterRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAclRequest.getAcl",
	"Comment": "returns the custom acl to be applied to the specified bucket when this\trequest is executed. a request can use either a custom acl or a canned\tacl, but not both.",
	"Method": "AccessControlList getAcl(){\r\n    return acl;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutDedicatedIpWarmupAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SourceSelectionCriteria.setSseKmsEncryptedObjects",
	"Comment": "sets the container for filter information of selection of kms encrypted s3 objects.",
	"Method": "void setSseKmsEncryptedObjects(SseKmsEncryptedObjects sseKmsEncryptedObjects){\r\n    this.sseKmsEncryptedObjects = sseKmsEncryptedObjects;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CompareFacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceImage() != null)\r\n        sb.append(\"SourceImage: \").append(getSourceImage()).append(\",\");\r\n    if (getTargetImage() != null)\r\n        sb.append(\"TargetImage: \").append(getTargetImage()).append(\",\");\r\n    if (getSimilarityThreshold() != null)\r\n        sb.append(\"SimilarityThreshold: \").append(getSimilarityThreshold());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListTrainingJobsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJobSummaries() != null)\r\n        sb.append(\"TrainingJobSummaries: \").append(getTrainingJobSummaries()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteSnapshotScheduleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getScheduleIdentifier() != null)\r\n        sb.append(\"ScheduleIdentifier: \").append(getScheduleIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withAllowedHeaders",
	"Comment": "sets the allowed headers of this rule and returns a reference to this object formethod chaining.",
	"Method": "CORSRule withAllowedHeaders(List<String> allowedHeaders){\r\n    this.allowedHeaders = allowedHeaders;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CreateSnapshotCopyGrantRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotCopyGrantName() != null)\r\n        sb.append(\"SnapshotCopyGrantName: \").append(getSnapshotCopyGrantName()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.UploadImpl.pause",
	"Comment": "tries to pause and return the information required to resume the uploadoperation.",
	"Method": "PersistableUpload pause(PauseResult<PersistableUpload> pause,boolean forceCancelTransfers){\r\n    UploadMonitor uploadMonitor = (UploadMonitor) monitor;\r\n    return uploadMonitor.pause(forceCancelTransfers);\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.RobotSoftwareSuite.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.stopNotebookInstance",
	"Comment": "terminates the ml compute instance. before terminating the instance, amazon sagemaker disconnects the ml storagevolume from it. amazon sagemaker preserves the ml storage volume.to access data on the ml storage volume for a notebook instance that has been terminated, call thestartnotebookinstance api. startnotebookinstance launches another ml compute instance,configures it, and attaches the preserved ml storage volume so you can continue your work.",
	"Method": "StopNotebookInstanceResult stopNotebookInstance(StopNotebookInstanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeStopNotebookInstance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.CreateConfigurationSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.failoverDBClusterAsync",
	"Comment": "simplified method form for invoking the failoverdbcluster operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DBCluster> failoverDBClusterAsync(FailoverDBClusterRequest request,java.util.concurrent.Future<DBCluster> failoverDBClusterAsync,FailoverDBClusterRequest request,com.amazonaws.handlers.AsyncHandler<FailoverDBClusterRequest, DBCluster> asyncHandler,java.util.concurrent.Future<DBCluster> failoverDBClusterAsync,java.util.concurrent.Future<DBCluster> failoverDBClusterAsync,com.amazonaws.handlers.AsyncHandler<FailoverDBClusterRequest, DBCluster> asyncHandler){\r\n    return failoverDBClusterAsync(new FailoverDBClusterRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ResolverRuleConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTargetIps() != null)\r\n        sb.append(\"TargetIps: \").append(getTargetIps()).append(\",\");\r\n    if (getResolverEndpointId() != null)\r\n        sb.append(\"ResolverEndpointId: \").append(getResolverEndpointId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectRetentionRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated getobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "SetObjectRetentionRequest withRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteVPCAssociationAuthorizationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.getQuiet",
	"Comment": "returns the quiet element for this request. when true, only errors will bereturned in the service response.",
	"Method": "boolean getQuiet(){\r\n    return quiet;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptedPutObjectRequest.withMaterialsDescription",
	"Comment": "sets the materials description for the encryption materials to be used with the current putobjectrequest.",
	"Method": "EncryptedPutObjectRequest withMaterialsDescription(Map<String, String> materialsDescription){\r\n    setMaterialsDescription(materialsDescription);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsPrefixPredicate.getPrefix",
	"Comment": "returns the prefix to use when evaluating an analytics filter.",
	"Method": "String getPrefix(){\r\n    return prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RoutingRuleCondition.getKeyPrefixEquals",
	"Comment": "return the object key name prefix when the redirect is applied.",
	"Method": "String getKeyPrefixEquals(){\r\n    return keyPrefixEquals;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated listobjectsrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "ListObjectsRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.listTrafficPoliciesAsync",
	"Comment": "simplified method form for invoking the listtrafficpolicies operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTrafficPoliciesResult> listTrafficPoliciesAsync(ListTrafficPoliciesRequest request,java.util.concurrent.Future<ListTrafficPoliciesResult> listTrafficPoliciesAsync,ListTrafficPoliciesRequest request,com.amazonaws.handlers.AsyncHandler<ListTrafficPoliciesRequest, ListTrafficPoliciesResult> asyncHandler,java.util.concurrent.Future<ListTrafficPoliciesResult> listTrafficPoliciesAsync,java.util.concurrent.Future<ListTrafficPoliciesResult> listTrafficPoliciesAsync,com.amazonaws.handlers.AsyncHandler<ListTrafficPoliciesRequest, ListTrafficPoliciesResult> asyncHandler){\r\n    return listTrafficPoliciesAsync(new ListTrafficPoliciesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.AmazonPinpointSMSVoiceClient.updateConfigurationSetEventDestination",
	"Comment": "update an event destination in a configuration set. an event destination is a location that you publishinformation about your voice calls to. for example, you can log an event to an amazon cloudwatch destination whena call fails.",
	"Method": "UpdateConfigurationSetEventDestinationResult updateConfigurationSetEventDestination(UpdateConfigurationSetEventDestinationRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateConfigurationSetEventDestination(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.TransferManagerUtils.getRequestFile",
	"Comment": "convenience method for getting the file specified in a request.",
	"Method": "File getRequestFile(PutObjectRequest putObjectRequest){\r\n    if (putObjectRequest.getFile() != null)\r\n        return putObjectRequest.getFile();\r\n    return null;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeOptionGroupOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEngineName() != null)\r\n        sb.append(\"EngineName: \").append(getEngineName()).append(\",\");\r\n    if (getMajorEngineVersion() != null)\r\n        sb.append(\"MajorEngineVersion: \").append(getMajorEngineVersion()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.getHostedZoneCountAsync",
	"Comment": "simplified method form for invoking the gethostedzonecount operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetHostedZoneCountResult> getHostedZoneCountAsync(GetHostedZoneCountRequest request,java.util.concurrent.Future<GetHostedZoneCountResult> getHostedZoneCountAsync,GetHostedZoneCountRequest request,com.amazonaws.handlers.AsyncHandler<GetHostedZoneCountRequest, GetHostedZoneCountResult> asyncHandler,java.util.concurrent.Future<GetHostedZoneCountResult> getHostedZoneCountAsync,java.util.concurrent.Future<GetHostedZoneCountResult> getHostedZoneCountAsync,com.amazonaws.handlers.AsyncHandler<GetHostedZoneCountRequest, GetHostedZoneCountResult> asyncHandler){\r\n    return getHostedZoneCountAsync(new GetHostedZoneCountRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.setTruncated",
	"Comment": "for internal use only.sets the truncated property forthis object listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get moreobject summaries.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest.withLoggingConfiguration",
	"Comment": "sets the logging configuration for the specified bucket and returnsthe updated object, enabling additional method calls to be chainedtogether.",
	"Method": "SetBucketLoggingConfigurationRequest withLoggingConfiguration(BucketLoggingConfiguration loggingConfiguration){\r\n    setLoggingConfiguration(loggingConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.QueryLoggingConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getCloudWatchLogsLogGroupArn() != null)\r\n        sb.append(\"CloudWatchLogsLogGroupArn: \").append(getCloudWatchLogsLogGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBClusterEndpointResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterEndpointIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointIdentifier: \").append(getDBClusterEndpointIdentifier()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterEndpointResourceIdentifier() != null)\r\n        sb.append(\"DBClusterEndpointResourceIdentifier: \").append(getDBClusterEndpointResourceIdentifier()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEndpointType() != null)\r\n        sb.append(\"EndpointType: \").append(getEndpointType()).append(\",\");\r\n    if (getCustomEndpointType() != null)\r\n        sb.append(\"CustomEndpointType: \").append(getCustomEndpointType()).append(\",\");\r\n    if (getStaticMembers() != null)\r\n        sb.append(\"StaticMembers: \").append(getStaticMembers()).append(\",\");\r\n    if (getExcludedMembers() != null)\r\n        sb.append(\"ExcludedMembers: \").append(getExcludedMembers()).append(\",\");\r\n    if (getDBClusterEndpointArn() != null)\r\n        sb.append(\"DBClusterEndpointArn: \").append(getDBClusterEndpointArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.ResourceShareInvitation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareInvitationArn() != null)\r\n        sb.append(\"ResourceShareInvitationArn: \").append(getResourceShareInvitationArn()).append(\",\");\r\n    if (getResourceShareName() != null)\r\n        sb.append(\"ResourceShareName: \").append(getResourceShareName()).append(\",\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getSenderAccountId() != null)\r\n        sb.append(\"SenderAccountId: \").append(getSenderAccountId()).append(\",\");\r\n    if (getReceiverAccountId() != null)\r\n        sb.append(\"ReceiverAccountId: \").append(getReceiverAccountId()).append(\",\");\r\n    if (getInvitationTimestamp() != null)\r\n        sb.append(\"InvitationTimestamp: \").append(getInvitationTimestamp()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getResourceShareAssociations() != null)\r\n        sb.append(\"ResourceShareAssociations: \").append(getResourceShareAssociations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ModelPackageValidationSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValidationRole() != null)\r\n        sb.append(\"ValidationRole: \").append(getValidationRole()).append(\",\");\r\n    if (getValidationProfiles() != null)\r\n        sb.append(\"ValidationProfiles: \").append(getValidationProfiles());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListCodeRepositoriesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeRepositorySummaryList() != null)\r\n        sb.append(\"CodeRepositorySummaryList: \").append(getCodeRepositorySummaryList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.getEncodingType",
	"Comment": "gets the optional encodingtype parameter indicating theencoding method to be applied on the response.",
	"Method": "String getEncodingType(){\r\n    return encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeHsmConfigurationsAsync",
	"Comment": "simplified method form for invoking the describehsmconfigurations operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync(DescribeHsmConfigurationsRequest request,java.util.concurrent.Future<DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync,DescribeHsmConfigurationsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeHsmConfigurationsRequest, DescribeHsmConfigurationsResult> asyncHandler,java.util.concurrent.Future<DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync,java.util.concurrent.Future<DescribeHsmConfigurationsResult> describeHsmConfigurationsAsync,com.amazonaws.handlers.AsyncHandler<DescribeHsmConfigurationsRequest, DescribeHsmConfigurationsResult> asyncHandler){\r\n    return describeHsmConfigurationsAsync(new DescribeHsmConfigurationsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeReservedDBInstances",
	"Comment": "returns information about reserved db instances for this account, or about a specified reserved db instance.",
	"Method": "DescribeReservedDBInstancesResult describeReservedDBInstances(DescribeReservedDBInstancesRequest request,DescribeReservedDBInstancesResult describeReservedDBInstances){\r\n    return describeReservedDBInstances(new DescribeReservedDBInstancesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketInventoryConfigurationsResult.setTruncated",
	"Comment": "for internal use only. sets the truncated property forthis inventory configuration listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get more results.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectAclRequest.getBucketName",
	"Comment": "returns the name of the bucket containing the object whose acl is beingset.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectLockConfigurationRequest.setObjectLockConfiguration",
	"Comment": "the object lock configuration that you want to apply to the specified bucket.",
	"Method": "void setObjectLockConfiguration(ObjectLockConfiguration objectLockConfiguration){\r\n    withObjectLockConfiguration(objectLockConfiguration);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetPublicAccessBlockResult.getPublicAccessBlockConfiguration",
	"Comment": "the public access block configuration currently in effect for this amazon s3 bucket.",
	"Method": "PublicAccessBlockConfiguration getPublicAccessBlockConfiguration(){\r\n    return publicAccessBlockConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.getBucketRequestPayment",
	"Comment": "retrieves the request payment configuration for a given amazon s3 bucket.when the request payment configuration for a amazon s3 bucket isrequester, the requester instead of the bucket owner paysthe cost of the request and the data download from the bucket. the bucketowner always pays the cost of storing data.",
	"Method": "RequestPaymentConfiguration getBucketRequestPayment(GetRequestPaymentConfigurationRequest getRequestPaymentConfigurationRequest){\r\n    String bucketName = getRequestPaymentConfigurationRequest.getBucketName();\r\n    rejectNull(bucketName, \"The bucket name parameter must be specified while getting the Request Payment Configuration.\");\r\n    Request<GetRequestPaymentConfigurationRequest> request = createRequest(bucketName, null, getRequestPaymentConfigurationRequest, HttpMethodName.GET);\r\n    request.addHandlerContext(HandlerContextKey.OPERATION_NAME, \"GetBucketRequestPayment\");\r\n    request.addParameter(\"requestPayment\", null);\r\n    request.addHeader(\"Content-Type\", \"application/xml\");\r\n    return invoke(request, new Unmarshallers.RequestPaymentConfigurationUnmarshaller(), bucketName, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Emotion.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.UpdateConfigurationSetEventDestinationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RoutingRule.getCondition",
	"Comment": "return the condition that must be met for the specified redirect toapply.",
	"Method": "RoutingRuleCondition getCondition(){\r\n    return condition;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateModelPackageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelPackageName() != null)\r\n        sb.append(\"ModelPackageName: \").append(getModelPackageName()).append(\",\");\r\n    if (getModelPackageDescription() != null)\r\n        sb.append(\"ModelPackageDescription: \").append(getModelPackageDescription()).append(\",\");\r\n    if (getInferenceSpecification() != null)\r\n        sb.append(\"InferenceSpecification: \").append(getInferenceSpecification()).append(\",\");\r\n    if (getValidationSpecification() != null)\r\n        sb.append(\"ValidationSpecification: \").append(getValidationSpecification()).append(\",\");\r\n    if (getSourceAlgorithmSpecification() != null)\r\n        sb.append(\"SourceAlgorithmSpecification: \").append(getSourceAlgorithmSpecification()).append(\",\");\r\n    if (getCertifyForMarketplace() != null)\r\n        sb.append(\"CertifyForMarketplace: \").append(getCertifyForMarketplace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.AWSPricingClientBuilder.build",
	"Comment": "construct a synchronous implementation of awspricing using the current builder configuration.",
	"Method": "AWSPricing build(AwsSyncClientParams params){\r\n    return new AWSPricingClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.AgeRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLow() != null)\r\n        sb.append(\"Low: \").append(getLow()).append(\",\");\r\n    if (getHigh() != null)\r\n        sb.append(\"High: \").append(getHigh());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.PutConfigurationSetReputationOptionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getReputationMetricsEnabled() != null)\r\n        sb.append(\"ReputationMetricsEnabled: \").append(getReputationMetricsEnabled());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.Parameter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getParameterName() != null)\r\n        sb.append(\"ParameterName: \").append(getParameterName()).append(\",\");\r\n    if (getParameterValue() != null)\r\n        sb.append(\"ParameterValue: \").append(getParameterValue()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getSource() != null)\r\n        sb.append(\"Source: \").append(getSource()).append(\",\");\r\n    if (getApplyType() != null)\r\n        sb.append(\"ApplyType: \").append(getApplyType()).append(\",\");\r\n    if (getDataType() != null)\r\n        sb.append(\"DataType: \").append(getDataType()).append(\",\");\r\n    if (getAllowedValues() != null)\r\n        sb.append(\"AllowedValues: \").append(getAllowedValues()).append(\",\");\r\n    if (getIsModifiable() != null)\r\n        sb.append(\"IsModifiable: \").append(getIsModifiable()).append(\",\");\r\n    if (getMinimumEngineVersion() != null)\r\n        sb.append(\"MinimumEngineVersion: \").append(getMinimumEngineVersion()).append(\",\");\r\n    if (getApplyMethod() != null)\r\n        sb.append(\"ApplyMethod: \").append(getApplyMethod()).append(\",\");\r\n    if (getSupportedEngineModes() != null)\r\n        sb.append(\"SupportedEngineModes: \").append(getSupportedEngineModes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.setTaggingConfiguration",
	"Comment": "sets the new tagging configuration for the specified bucket.",
	"Method": "void setTaggingConfiguration(BucketTaggingConfiguration taggingConfiguration){\r\n    this.taggingConfiguration = taggingConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.listResolverRuleAssociations",
	"Comment": "lists the associations that were created between resolver rules and vpcs using the current aws account.",
	"Method": "ListResolverRuleAssociationsResult listResolverRuleAssociations(ListResolverRuleAssociationsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListResolverRuleAssociations(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.listResolverRules",
	"Comment": "lists the resolver rules that were created using the current aws account.",
	"Method": "ListResolverRulesResult listResolverRules(ListResolverRulesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListResolverRules(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectsRequest.setQuiet",
	"Comment": "sets the quiet element for this request. when true, only errors will bereturned in the service response.",
	"Method": "void setQuiet(boolean quiet){\r\n    this.quiet = quiet;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteTagsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.withBucketAccountId",
	"Comment": "sets the account id that owns the destination bucket and returns this object for method chaining.if no account id is provided, the owner will not be validated prior to exporting data.",
	"Method": "AnalyticsS3BucketDestination withBucketAccountId(String bucketAccountId){\r\n    setBucketAccountId(bucketAccountId);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeHsmConfigurationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmConfigurationIdentifier() != null)\r\n        sb.append(\"HsmConfigurationIdentifier: \").append(getHsmConfigurationIdentifier()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setDestinationKey",
	"Comment": "sets the destination bucket key under which the new, copied objectwill be stored.",
	"Method": "void setDestinationKey(String destinationKey){\r\n    this.destinationKey = destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.listTagsForResource",
	"Comment": "lists tags for one health check or hosted zone.for information about using tags for cost allocation, see using cost allocationtags in the aws billing and cost management user guide.",
	"Method": "ListTagsForResourceResult listTagsForResource(ListTagsForResourceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListTagsForResource(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.AmazonRoute53ResolverClient.listResolverEndpoints",
	"Comment": "lists all the resolver endpoints that were created using the current aws account.",
	"Method": "ListResolverEndpointsResult listResolverEndpoints(ListResolverEndpointsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListResolverEndpoints(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.UpdateTagsForDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetPublicAccessBlockResult.withPublicAccessBlockConfiguration",
	"Comment": "the public access block configuration currently in effect for this amazon s3 bucket.",
	"Method": "GetPublicAccessBlockResult withPublicAccessBlockConfiguration(PublicAccessBlockConfiguration publicAccessBlockConfiguration){\r\n    setPublicAccessBlockConfiguration(publicAccessBlockConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setInitiator",
	"Comment": "sets the user who initiated the associated multipart upload.",
	"Method": "void setInitiator(Owner initiator){\r\n    this.initiator = initiator;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.CreateDedicatedIpPoolRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPoolName() != null)\r\n        sb.append(\"PoolName: \").append(getPoolName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryConfiguration.getId",
	"Comment": "returns the id used to identify the inventory configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.ServiceUtils.convertRequestToUrl",
	"Comment": "converts the specified request object into a url, containing all thespecified parameters, the specified request endpoint, etc.",
	"Method": "URL convertRequestToUrl(Request<?> request,URL convertRequestToUrl,Request<?> request,boolean removeLeadingSlashInResourcePath,URL convertRequestToUrl,Request<?> request,boolean removeLeadingSlashInResourcePath,boolean urlEncode){\r\n    String resourcePath = urlEncode ? SdkHttpUtils.urlEncode(request.getResourcePath(), true) : request.getResourcePath();\r\n    if (removeLeadingSlashInResourcePath && resourcePath.startsWith(\"/\")) {\r\n        resourcePath = resourcePath.substring(1);\r\n    }\r\n    String urlPath = \"/\" + resourcePath;\r\n    urlPath = urlPath.replaceAll(\"(?<=/)/\", \"/\");\r\n    StringBuilder url = new StringBuilder(request.getEndpoint().toString());\r\n    url.append(urlPath);\r\n    StringBuilder queryParams = new StringBuilder();\r\n    Map<String, List<String>> requestParams = request.getParameters();\r\n    for (Map.Entry<String, List<String>> entry : requestParams.entrySet()) {\r\n        for (String value : entry.getValue()) {\r\n            queryParams = queryParams.length() > 0 ? queryParams.append(\"&\") : queryParams.append(\"?\");\r\n            queryParams.append(entry.getKey()).append(\"=\").append(SdkHttpUtils.urlEncode(value, false));\r\n        }\r\n    }\r\n    url.append(queryParams.toString());\r\n    try {\r\n        return new URL(url.toString());\r\n    } catch (MalformedURLException e) {\r\n        throw new SdkClientException(\"Unable to convert request to well formed URL: \" + e.getMessage(), e);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.TransferDomainRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getIdnLangCode() != null)\r\n        sb.append(\"IdnLangCode: \").append(getIdnLangCode()).append(\",\");\r\n    if (getDurationInYears() != null)\r\n        sb.append(\"DurationInYears: \").append(getDurationInYears()).append(\",\");\r\n    if (getNameservers() != null)\r\n        sb.append(\"Nameservers: \").append(getNameservers()).append(\",\");\r\n    if (getAuthCode() != null)\r\n        sb.append(\"AuthCode: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getAutoRenew() != null)\r\n        sb.append(\"AutoRenew: \").append(getAutoRenew()).append(\",\");\r\n    if (getAdminContact() != null)\r\n        sb.append(\"AdminContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getRegistrantContact() != null)\r\n        sb.append(\"RegistrantContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getTechContact() != null)\r\n        sb.append(\"TechContact: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getPrivacyProtectAdminContact() != null)\r\n        sb.append(\"PrivacyProtectAdminContact: \").append(getPrivacyProtectAdminContact()).append(\",\");\r\n    if (getPrivacyProtectRegistrantContact() != null)\r\n        sb.append(\"PrivacyProtectRegistrantContact: \").append(getPrivacyProtectRegistrantContact()).append(\",\");\r\n    if (getPrivacyProtectTechContact() != null)\r\n        sb.append(\"PrivacyProtectTechContact: \").append(getPrivacyProtectTechContact());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlClientBuilder.setFipsEnabled",
	"Comment": "sets the status of fips enabled endpoints for clients built with this builder. the default is to not use fipsendpoints.",
	"Method": "void setFipsEnabled(Boolean fipsEnabled){\r\n    super.putAdvancedConfig(S3ControlClientOptions.FIPS_ENABLED, fipsEnabled);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.listHostedZones",
	"Comment": "retrieves a list of the public and private hosted zones that are associated with the current aws account. theresponse includes a hostedzones child element for each hosted zone.amazon route 53 returns a maximum of 100 items in each response. if you have a lot of hosted zones, you can usethe maxitems parameter to list them in groups of up to 100.",
	"Method": "ListHostedZonesResult listHostedZones(ListHostedZonesRequest request,ListHostedZonesResult listHostedZones){\r\n    return listHostedZones(new ListHostedZonesRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.ListConfigurationSetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getPageSize() != null)\r\n        sb.append(\"PageSize: \").append(getPageSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketLocationRequest.getBucketName",
	"Comment": "returns the name of the bucket whose location is being requested.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withDestinationKey",
	"Comment": "sets the destination bucket key under which the new, copied objectwill be stored and returns this object, enabling additional method callscan be chained together.",
	"Method": "CopyPartRequest withDestinationKey(String destinationKey){\r\n    setDestinationKey(destinationKey);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketInventoryConfigurationRequest.getId",
	"Comment": "returns the id used to identify the inventory configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerBuilder.withMultipartUploadThreshold",
	"Comment": "sets the size threshold, in bytes, for when to use multipart uploads. uploads over this sizewill automatically use a multipart upload strategy, while uploads smaller than this thresholdwill use a single connection to upload the whole object.multipart uploads are easier to recover from and also potentially faster than single partuploads, especially when the upload parts can be uploaded in parallel as with files. becausethere is additional network communication, small uploads are still recommended to use asingle connection for the upload.",
	"Method": "TransferManagerBuilder withMultipartUploadThreshold(Long multipartUploadThreshold){\r\n    setMultipartUploadThreshold(multipartUploadThreshold);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream.reset",
	"Comment": "resets the wrapped input stream and the in progress message digest.",
	"Method": "void reset(){\r\n    if (markSupported()) {\r\n        super.reset();\r\n        if (digestLastMarked == null) {\r\n            resetDigest();\r\n        } else {\r\n            digest = cloneFrom(digestLastMarked);\r\n        }\r\n    } else {\r\n        throw new IOException(\"mark/reset not supported\");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.model.Value.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArrayValues() != null)\r\n        sb.append(\"ArrayValues: \").append(getArrayValues()).append(\",\");\r\n    if (getBigIntValue() != null)\r\n        sb.append(\"BigIntValue: \").append(getBigIntValue()).append(\",\");\r\n    if (getBitValue() != null)\r\n        sb.append(\"BitValue: \").append(getBitValue()).append(\",\");\r\n    if (getBlobValue() != null)\r\n        sb.append(\"BlobValue: \").append(getBlobValue()).append(\",\");\r\n    if (getDoubleValue() != null)\r\n        sb.append(\"DoubleValue: \").append(getDoubleValue()).append(\",\");\r\n    if (getIntValue() != null)\r\n        sb.append(\"IntValue: \").append(getIntValue()).append(\",\");\r\n    if (getIsNull() != null)\r\n        sb.append(\"IsNull: \").append(getIsNull()).append(\",\");\r\n    if (getRealValue() != null)\r\n        sb.append(\"RealValue: \").append(getRealValue()).append(\",\");\r\n    if (getStringValue() != null)\r\n        sb.append(\"StringValue: \").append(getStringValue()).append(\",\");\r\n    if (getStructValue() != null)\r\n        sb.append(\"StructValue: \").append(getStructValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.HyperParameterTrainingJobDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStaticHyperParameters() != null)\r\n        sb.append(\"StaticHyperParameters: \").append(getStaticHyperParameters()).append(\",\");\r\n    if (getAlgorithmSpecification() != null)\r\n        sb.append(\"AlgorithmSpecification: \").append(getAlgorithmSpecification()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getInputDataConfig() != null)\r\n        sb.append(\"InputDataConfig: \").append(getInputDataConfig()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig()).append(\",\");\r\n    if (getOutputDataConfig() != null)\r\n        sb.append(\"OutputDataConfig: \").append(getOutputDataConfig()).append(\",\");\r\n    if (getResourceConfig() != null)\r\n        sb.append(\"ResourceConfig: \").append(getResourceConfig()).append(\",\");\r\n    if (getStoppingCondition() != null)\r\n        sb.append(\"StoppingCondition: \").append(getStoppingCondition()).append(\",\");\r\n    if (getEnableNetworkIsolation() != null)\r\n        sb.append(\"EnableNetworkIsolation: \").append(getEnableNetworkIsolation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHostedZoneRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeReservedNodeOfferings",
	"Comment": "returns a list of the available reserved node offerings by amazon redshift with their descriptions including thenode type, the fixed and recurring costs of reserving the node and duration the node will be reserved for you.these descriptions help you determine which reserve node offering you want to purchase. you then use the uniqueoffering id in you call to purchasereservednodeoffering to reserve one or more nodes for your amazonredshift cluster.for more information about reserved node offerings, go to purchasing reservednodes in the amazon redshift cluster management guide.",
	"Method": "DescribeReservedNodeOfferingsResult describeReservedNodeOfferings(DescribeReservedNodeOfferingsRequest request,DescribeReservedNodeOfferingsResult describeReservedNodeOfferings){\r\n    return describeReservedNodeOfferings(new DescribeReservedNodeOfferingsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.parseInstructionFile",
	"Comment": "parses instruction data retrieved from s3 and returns a json stringrepresenting the instruction. made for testing purposes.",
	"Method": "String parseInstructionFile(S3Object instructionFile){\r\n    try {\r\n        return convertStreamToString(instructionFile.getObjectContent());\r\n    } catch (Exception e) {\r\n        throw failure(e, \"Error parsing JSON instruction file\");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.CreateResourceShareRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns()).append(\",\");\r\n    if (getPrincipals() != null)\r\n        sb.append(\"Principals: \").append(getPrincipals()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getAllowExternalPrincipals() != null)\r\n        sb.append(\"AllowExternalPrincipals: \").append(getAllowExternalPrincipals()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.waiters.AmazonRoute53Waiters.resourceRecordSetsChanged",
	"Comment": "builds a resourcerecordsetschanged waiter by using custom parameters waiterparameters and other parametersdefined in the waiters specification, and then polls until it determines whether the resource entered the desiredstate or not, where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<GetChangeRequest> resourceRecordSetsChanged(){\r\n    return new WaiterBuilder<GetChangeRequest, GetChangeResult>().withSdkFunction(new GetChangeFunction(client)).withAcceptors(new ResourceRecordSetsChanged.IsINSYNCMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(60), new FixedDelayStrategy(30))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListPartsRequest.withUploadId",
	"Comment": "sets the id of the multipart upload whose parts are being listed, andreturns this updated listpartsrequest object so that additional methodcalls can be chained together.",
	"Method": "ListPartsRequest withUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBClusterSnapshotAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterSnapshotIdentifier() != null)\r\n        sb.append(\"DBClusterSnapshotIdentifier: \").append(getDBClusterSnapshotIdentifier()).append(\",\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getValuesToAdd() != null)\r\n        sb.append(\"ValuesToAdd: \").append(getValuesToAdd()).append(\",\");\r\n    if (getValuesToRemove() != null)\r\n        sb.append(\"ValuesToRemove: \").append(getValuesToRemove());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DefaultRetention.getDays",
	"Comment": "the number of days that you want to specify for the default retention period.",
	"Method": "Integer getDays(){\r\n    return days;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CloudWatchAlarmConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEvaluationPeriods() != null)\r\n        sb.append(\"EvaluationPeriods: \").append(getEvaluationPeriods()).append(\",\");\r\n    if (getThreshold() != null)\r\n        sb.append(\"Threshold: \").append(getThreshold()).append(\",\");\r\n    if (getComparisonOperator() != null)\r\n        sb.append(\"ComparisonOperator: \").append(getComparisonOperator()).append(\",\");\r\n    if (getPeriod() != null)\r\n        sb.append(\"Period: \").append(getPeriod()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace()).append(\",\");\r\n    if (getStatistic() != null)\r\n        sb.append(\"Statistic: \").append(getStatistic()).append(\",\");\r\n    if (getDimensions() != null)\r\n        sb.append(\"Dimensions: \").append(getDimensions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDimensions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttributes() != null)\r\n        sb.append(\"Attributes: \").append(getAttributes()).append(\",\");\r\n    if (getBehavior() != null)\r\n        sb.append(\"Behavior: \").append(getBehavior()).append(\",\");\r\n    if (getDemographic() != null)\r\n        sb.append(\"Demographic: \").append(getDemographic()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation()).append(\",\");\r\n    if (getMetrics() != null)\r\n        sb.append(\"Metrics: \").append(getMetrics()).append(\",\");\r\n    if (getUserAttributes() != null)\r\n        sb.append(\"UserAttributes: \").append(getUserAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.RequestXmlFactory.convertToXmlByteArray",
	"Comment": "converts the selectobjectcontentrequest to an xml fragment that can be sent tothe selectobjectcontent operation of amazon s3.",
	"Method": "byte[] convertToXmlByteArray(List<PartETag> partETags,byte[] convertToXmlByteArray,RestoreObjectRequest restoreObjectRequest,byte[] convertToXmlByteArray,SelectObjectContentRequest selectRequest){\r\n    XmlWriter xml = new XmlWriter();\r\n    xml.start(\"SelectObjectContentRequest\");\r\n    addIfNotNull(xml, \"Expression\", selectRequest.getExpression());\r\n    addIfNotNull(xml, \"ExpressionType\", selectRequest.getExpressionType());\r\n    addRequestProgressIfNotNull(xml, selectRequest.getRequestProgress());\r\n    addInputSerializationIfNotNull(xml, selectRequest.getInputSerialization());\r\n    addOutputSerializationIfNotNull(xml, selectRequest.getOutputSerialization());\r\n    xml.end();\r\n    return xml.getBytes();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DetectModerationLabelsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModerationLabels() != null)\r\n        sb.append(\"ModerationLabels: \").append(getModerationLabels());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose versioning configuration is being set,and returns this object so that additional method calls may be chainedtogether.",
	"Method": "SetBucketVersioningConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.listRobots",
	"Comment": "returns a list of robots. you can optionally provide filters to retrieve specific robots.",
	"Method": "ListRobotsResult listRobots(ListRobotsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListRobots(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBClusterParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RestoreWindow.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEarliestTime() != null)\r\n        sb.append(\"EarliestTime: \").append(getEarliestTime()).append(\",\");\r\n    if (getLatestTime() != null)\r\n        sb.append(\"LatestTime: \").append(getLatestTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.deleteDBClusterSnapshot",
	"Comment": "deletes a db cluster snapshot. if the snapshot is being copied, the copy operation is terminated.the db cluster snapshot must be in the available state to be deleted.for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DBClusterSnapshot deleteDBClusterSnapshot(DeleteDBClusterSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDBClusterSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ListDomainsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomains() != null)\r\n        sb.append(\"Domains: \").append(getDomains()).append(\",\");\r\n    if (getNextPageMarker() != null)\r\n        sb.append(\"NextPageMarker: \").append(getNextPageMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CreateBucketRequest.withCannedAcl",
	"Comment": "sets the optional canned acl to set for the new bucket, and returns thisupdated object so that additional method calls can be chained together.",
	"Method": "CreateBucketRequest withCannedAcl(CannedAccessControlList cannedAcl){\r\n    setCannedAcl(cannedAcl);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.UpdateGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateEndpointsBatchResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMessageBody() != null)\r\n        sb.append(\"MessageBody: \").append(getMessageBody());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListReusableDelegationSetsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDelegationSets() != null)\r\n        sb.append(\"DelegationSets: \").append(getDelegationSets()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getNextMarker() != null)\r\n        sb.append(\"NextMarker: \").append(getNextMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.PersonDetection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getPerson() != null)\r\n        sb.append(\"Person: \").append(getPerson());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.Destination.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getToAddresses() != null)\r\n        sb.append(\"ToAddresses: \").append(getToAddresses()).append(\",\");\r\n    if (getCcAddresses() != null)\r\n        sb.append(\"CcAddresses: \").append(getCcAddresses()).append(\",\");\r\n    if (getBccAddresses() != null)\r\n        sb.append(\"BccAddresses: \").append(getBccAddresses());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3EncryptionClientBuilder.withCryptoConfiguration",
	"Comment": "sets the crypto configuration whose parameters will be used to encrypt and decrypt data.",
	"Method": "AmazonS3EncryptionClientBuilder withCryptoConfiguration(CryptoConfiguration cryptoConfig){\r\n    setCryptoConfiguration(cryptoConfig);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteTrafficPolicyRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ModelPackageStatusItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.AWSResourceGroupsTaggingAPIClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.testDNSAnswer",
	"Comment": "gets the value that amazon route 53 returns in response to a dns request for a specified record name and type.you can optionally specify the ip address of a dns resolver, an edns0 client subnet ip address, and a subnetmask.",
	"Method": "TestDNSAnswerResult testDNSAnswer(TestDNSAnswerRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeTestDNSAnswer(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.getBucketName",
	"Comment": "gets the name of the amazon s3 bucket in which this version is stored.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBSecurityGroups",
	"Comment": "returns a list of dbsecuritygroup descriptions. if a dbsecuritygroupname is specified,the list will contain only the descriptions of the specified db security group.",
	"Method": "DescribeDBSecurityGroupsResult describeDBSecurityGroups(DescribeDBSecurityGroupsRequest request,DescribeDBSecurityGroupsResult describeDBSecurityGroups){\r\n    return describeDBSecurityGroups(new DescribeDBSecurityGroupsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListBucketMetricsConfigurationsResult.isTruncated",
	"Comment": "gets whether or not this metrics configuration listing is complete.",
	"Method": "boolean isTruncated(){\r\n    return isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AbstractAmazonRedshiftAsync.describeTagsAsync",
	"Comment": "simplified method form for invoking the describetags operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync(DescribeTagsRequest request,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,DescribeTagsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest, DescribeTagsResult> asyncHandler,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,java.util.concurrent.Future<DescribeTagsResult> describeTagsAsync,com.amazonaws.handlers.AsyncHandler<DescribeTagsRequest, DescribeTagsResult> asyncHandler){\r\n    return describeTagsAsync(new DescribeTagsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.getVersionId",
	"Comment": "gets the optional version id of the object version whose metadata isbeing retrieved. if not specified, the latest version will be used.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AbstractAmazonRDSAsync.describeDBSecurityGroupsAsync",
	"Comment": "simplified method form for invoking the describedbsecuritygroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBSecurityGroupsResult> describeDBSecurityGroupsAsync(DescribeDBSecurityGroupsRequest request,java.util.concurrent.Future<DescribeDBSecurityGroupsResult> describeDBSecurityGroupsAsync,DescribeDBSecurityGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBSecurityGroupsRequest, DescribeDBSecurityGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeDBSecurityGroupsResult> describeDBSecurityGroupsAsync,java.util.concurrent.Future<DescribeDBSecurityGroupsResult> describeDBSecurityGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBSecurityGroupsRequest, DescribeDBSecurityGroupsResult> asyncHandler){\r\n    return describeDBSecurityGroupsAsync(new DescribeDBSecurityGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectListing.setTruncated",
	"Comment": "for internal use only.sets the truncated property forthis object listing, indicating if this is a complete listing or not andwhether the caller needs to make additional calls to s3 to get moreobject summaries.",
	"Method": "void setTruncated(boolean isTruncated){\r\n    this.isTruncated = isTruncated;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeSnapshotCopyGrants",
	"Comment": "returns a list of snapshot copy grants owned by the aws account in the destination region.for more information about managing snapshot copy grants, go to amazon redshift databaseencryption in the amazon redshift cluster management guide.",
	"Method": "DescribeSnapshotCopyGrantsResult describeSnapshotCopyGrants(DescribeSnapshotCopyGrantsRequest request,DescribeSnapshotCopyGrantsResult describeSnapshotCopyGrants){\r\n    return describeSnapshotCopyGrants(new DescribeSnapshotCopyGrantsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribePendingMaintenanceActionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceIdentifier() != null)\r\n        sb.append(\"ResourceIdentifier: \").append(getResourceIdentifier()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketWebsiteConfiguration.getErrorDocument",
	"Comment": "returns the complete path to the document to serve for 4xx errors, ornull if no error document has been configured.",
	"Method": "String getErrorDocument(){\r\n    return errorDocument;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.StartSpeechSynthesisTaskRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLexiconNames() != null)\r\n        sb.append(\"LexiconNames: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getOutputFormat() != null)\r\n        sb.append(\"OutputFormat: \").append(getOutputFormat()).append(\",\");\r\n    if (getOutputS3BucketName() != null)\r\n        sb.append(\"OutputS3BucketName: \").append(getOutputS3BucketName()).append(\",\");\r\n    if (getOutputS3KeyPrefix() != null)\r\n        sb.append(\"OutputS3KeyPrefix: \").append(getOutputS3KeyPrefix()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getSpeechMarkTypes() != null)\r\n        sb.append(\"SpeechMarkTypes: \").append(getSpeechMarkTypes()).append(\",\");\r\n    if (getText() != null)\r\n        sb.append(\"Text: \").append(getText()).append(\",\");\r\n    if (getTextType() != null)\r\n        sb.append(\"TextType: \").append(getTextType()).append(\",\");\r\n    if (getVoiceId() != null)\r\n        sb.append(\"VoiceId: \").append(getVoiceId()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyClusterSnapshotScheduleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.MouthOpen.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeregisterRobotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet()).append(\",\");\r\n    if (getRobot() != null)\r\n        sb.append(\"Robot: \").append(getRobot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DisassociateVPCFromHostedZoneResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeInfo() != null)\r\n        sb.append(\"ChangeInfo: \").append(getChangeInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.analytics.AnalyticsS3BucketDestination.withFormat",
	"Comment": "sets the file format used when exporting data to amazon s3.returns this object for method chaining.",
	"Method": "AnalyticsS3BucketDestination withFormat(AnalyticsS3ExportFileFormat format,AnalyticsS3BucketDestination withFormat,String format){\r\n    setFormat(format);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.authorizeSnapshotAccess",
	"Comment": "authorizes the specified aws customer account to restore the specified snapshot.for more information about working with snapshots, go to amazon redshift snapshotsin the amazon redshift cluster management guide.",
	"Method": "Snapshot authorizeSnapshotAccess(AuthorizeSnapshotAccessRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeAuthorizeSnapshotAccess(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBSubnetGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getDBSubnetGroupDescription() != null)\r\n        sb.append(\"DBSubnetGroupDescription: \").append(getDBSubnetGroupDescription()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getSubnetGroupStatus() != null)\r\n        sb.append(\"SubnetGroupStatus: \").append(getSubnetGroupStatus()).append(\",\");\r\n    if (getSubnets() != null)\r\n        sb.append(\"Subnets: \").append(getSubnets()).append(\",\");\r\n    if (getDBSubnetGroupArn() != null)\r\n        sb.append(\"DBSubnetGroupArn: \").append(getDBSubnetGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.GetResourceSharesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareArns() != null)\r\n        sb.append(\"ResourceShareArns: \").append(getResourceShareArns()).append(\",\");\r\n    if (getResourceShareStatus() != null)\r\n        sb.append(\"ResourceShareStatus: \").append(getResourceShareStatus()).append(\",\");\r\n    if (getResourceOwner() != null)\r\n        sb.append(\"ResourceOwner: \").append(getResourceOwner()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getTagFilters() != null)\r\n        sb.append(\"TagFilters: \").append(getTagFilters()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.getLexicon",
	"Comment": "returns the content of the specified pronunciation lexicon stored in an aws region. for more information, see managing lexicons.",
	"Method": "GetLexiconResult getLexicon(GetLexiconRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetLexicon(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadObjectRequest.getUploadPartMetadata",
	"Comment": "gets the optional metadata to be included in each uploadpart request.",
	"Method": "ObjectMetadata getUploadPartMetadata(){\r\n    return uploadPartMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SseKmsEncryptedObjects.withStatus",
	"Comment": "sets the replication status for kms encrypted objects. kms encrypted s3 objects are not replicated if status is disabled.",
	"Method": "SseKmsEncryptedObjects withStatus(String status,SseKmsEncryptedObjects withStatus,SseKmsEncryptedObjectsStatus status){\r\n    setStatus(status == null ? null : status.toString());\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.ResourceTagMapping.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceARN() != null)\r\n        sb.append(\"ResourceARN: \").append(getResourceARN()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.deleteModel",
	"Comment": "deletes a model. the deletemodel api deletes only the model entry that was created in amazonsagemaker when you called the createmodel api. it does notdelete model artifacts, inference code, or the iam role that you specified when creating the model.",
	"Method": "DeleteModelResult deleteModel(DeleteModelRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteModel(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeSnapshotCopyGrantsAsync",
	"Comment": "simplified method form for invoking the describesnapshotcopygrants operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync(DescribeSnapshotCopyGrantsRequest request,java.util.concurrent.Future<DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync,DescribeSnapshotCopyGrantsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotCopyGrantsRequest, DescribeSnapshotCopyGrantsResult> asyncHandler,java.util.concurrent.Future<DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync,java.util.concurrent.Future<DescribeSnapshotCopyGrantsResult> describeSnapshotCopyGrantsAsync,com.amazonaws.handlers.AsyncHandler<DescribeSnapshotCopyGrantsRequest, DescribeSnapshotCopyGrantsResult> asyncHandler){\r\n    return describeSnapshotCopyGrantsAsync(new DescribeSnapshotCopyGrantsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.EnableLoggingRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getS3KeyPrefix() != null)\r\n        sb.append(\"S3KeyPrefix: \").append(getS3KeyPrefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.listQueryLoggingConfigs",
	"Comment": "lists the configurations for dns query logging that are associated with the current aws account or theconfiguration that is associated with a specified hosted zone.for more information about dns query logs, see createqueryloggingconfig. additional information, includingthe format of dns query logs, appears in logging dns queries in theamazon route 53 developer guide.",
	"Method": "ListQueryLoggingConfigsResult listQueryLoggingConfigs(ListQueryLoggingConfigsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListQueryLoggingConfigs(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeOptionGroupsAsync",
	"Comment": "simplified method form for invoking the describeoptiongroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeOptionGroupsResult> describeOptionGroupsAsync(DescribeOptionGroupsRequest request,java.util.concurrent.Future<DescribeOptionGroupsResult> describeOptionGroupsAsync,DescribeOptionGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeOptionGroupsRequest, DescribeOptionGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeOptionGroupsResult> describeOptionGroupsAsync,java.util.concurrent.Future<DescribeOptionGroupsResult> describeOptionGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeOptionGroupsRequest, DescribeOptionGroupsResult> asyncHandler){\r\n    return describeOptionGroupsAsync(new DescribeOptionGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withKey",
	"Comment": "sets the key by which to store the new multipart upload, and hence, theeventual object created from the multipart upload.returns this updated initiatemultipartuploadrequest object so thatadditional method calls can be chained together.",
	"Method": "InitiateMultipartUploadRequest withKey(String key){\r\n    this.key = key;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.deleteDBSecurityGroup",
	"Comment": "deletes a db security group.the specified db security group must not be associated with any db instances.",
	"Method": "DeleteDBSecurityGroupResult deleteDBSecurityGroup(DeleteDBSecurityGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteDBSecurityGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.MultipartUploadListing.setEncodingType",
	"Comment": "for internal use only. sets the encoding type used by amazon s3 to encodeobject key names in the xml response.",
	"Method": "void setEncodingType(String encodingType){\r\n    this.encodingType = encodingType;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.AWSResourceGroupsTaggingAPIClient.getTagValues",
	"Comment": "returns all tag values for the specified key in the specified region for the aws account.",
	"Method": "GetTagValuesResult getTagValues(GetTagValuesRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetTagValues(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateSegmentResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSegmentResponse() != null)\r\n        sb.append(\"SegmentResponse: \").append(getSegmentResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ResourceTagSet.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceId() != null)\r\n        sb.append(\"ResourceId: \").append(getResourceId()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getContentLanguage",
	"Comment": "returns the content language response header override if it has beenspecified, or null otherwise.",
	"Method": "String getContentLanguage(){\r\n    return contentLanguage;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ScalingConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinCapacity() != null)\r\n        sb.append(\"MinCapacity: \").append(getMinCapacity()).append(\",\");\r\n    if (getMaxCapacity() != null)\r\n        sb.append(\"MaxCapacity: \").append(getMaxCapacity()).append(\",\");\r\n    if (getAutoPause() != null)\r\n        sb.append(\"AutoPause: \").append(getAutoPause()).append(\",\");\r\n    if (getSecondsUntilAutoPause() != null)\r\n        sb.append(\"SecondsUntilAutoPause: \").append(getSecondsUntilAutoPause());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.waiters.DescribeClusterSnapshotsFunction.apply",
	"Comment": "makes a call to the operation specified by the waiter by taking the corresponding request and returns thecorresponding result",
	"Method": "DescribeClusterSnapshotsResult apply(DescribeClusterSnapshotsRequest describeClusterSnapshotsRequest){\r\n    return client.describeClusterSnapshots(describeClusterSnapshotsRequest);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListVersionsRequest.setVersionIdMarker",
	"Comment": "sets the optional versionidmarker parameter indicating where in thesorted list of all versions in the specified bucket to begin returningresults.",
	"Method": "void setVersionIdMarker(String versionIdMarker){\r\n    this.versionIdMarker = versionIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadResult.setBucketName",
	"Comment": "sets the name of the bucket containing the completed multipart object.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.ResourceShare.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getOwningAccountId() != null)\r\n        sb.append(\"OwningAccountId: \").append(getOwningAccountId()).append(\",\");\r\n    if (getAllowExternalPrincipals() != null)\r\n        sb.append(\"AllowExternalPrincipals: \").append(getAllowExternalPrincipals()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastUpdatedTime() != null)\r\n        sb.append(\"LastUpdatedTime: \").append(getLastUpdatedTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteMarkerReplication.setStatus",
	"Comment": "sets the replication status for delete markers. delete markers are not replicated if status is disabled.",
	"Method": "void setStatus(String status){\r\n    this.status = status;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.NotificationConfiguration.getEvents",
	"Comment": "returns the set of events associated with this notification configuration.",
	"Method": "Set<String> getEvents(){\r\n    return events;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.deleteEventSubscription",
	"Comment": "deletes an amazon redshift event notification subscription.",
	"Method": "DeleteEventSubscriptionResult deleteEventSubscription(DeleteEventSubscriptionRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteEventSubscription(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerBuilder.setMinimumUploadPartSize",
	"Comment": "sets the minimum part size for upload parts. decreasing the minimum part size will causemultipart uploads to be split into a larger number of smaller parts. setting this value toolow can have a negative effect on transfer speeds since it will cause extra latency andnetwork communication for each part.",
	"Method": "void setMinimumUploadPartSize(Long minimumUploadPartSize){\r\n    this.minimumUploadPartSize = minimumUploadPartSize;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.listWorkteams",
	"Comment": "gets a list of work teams that you have defined in a region. the list may be empty if no work team satisfies thefilter specified in the namecontains parameter.",
	"Method": "ListWorkteamsResult listWorkteams(ListWorkteamsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListWorkteams(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.DeleteGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.OptionGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getOptionGroupDescription() != null)\r\n        sb.append(\"OptionGroupDescription: \").append(getOptionGroupDescription()).append(\",\");\r\n    if (getEngineName() != null)\r\n        sb.append(\"EngineName: \").append(getEngineName()).append(\",\");\r\n    if (getMajorEngineVersion() != null)\r\n        sb.append(\"MajorEngineVersion: \").append(getMajorEngineVersion()).append(\",\");\r\n    if (getOptions() != null)\r\n        sb.append(\"Options: \").append(getOptions()).append(\",\");\r\n    if (getAllowsVpcAndNonVpcInstanceMemberships() != null)\r\n        sb.append(\"AllowsVpcAndNonVpcInstanceMemberships: \").append(getAllowsVpcAndNonVpcInstanceMemberships()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getOptionGroupArn() != null)\r\n        sb.append(\"OptionGroupArn: \").append(getOptionGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.withVersionId",
	"Comment": "sets the id of the version to be restored and returns a reference tothis object for method chaining.",
	"Method": "RestoreObjectRequest withVersionId(String versionId){\r\n    this.versionId = versionId;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteVersionRequest.getVersionId",
	"Comment": "gets the version id uniquely identifying which version of the objectto delete.",
	"Method": "String getVersionId(){\r\n    return versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme.newCipherLite",
	"Comment": "this is a factory method intended to be overridden by sublcasses toreturn the appropriate instance of cipher lite.",
	"Method": "CipherLite newCipherLite(Cipher cipher,SecretKey cek,int cipherMode){\r\n    return new CipherLite(cipher, this, cek, cipherMode);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListQueryLoggingConfigsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.setMarker",
	"Comment": "sets the optional marker parameter indicating where in the bucket to beginlisting. the list will only include keys that occur lexicographicallyafter the marker.",
	"Method": "void setMarker(String marker){\r\n    this.marker = marker;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.GetConfigurationSetEventDestinationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventDestinations() != null)\r\n        sb.append(\"EventDestinations: \").append(getEventDestinations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeClusterParameterGroupsAsync",
	"Comment": "simplified method form for invoking the describeclusterparametergroups operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync(DescribeClusterParameterGroupsRequest request,java.util.concurrent.Future<DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync,DescribeClusterParameterGroupsRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClusterParameterGroupsRequest, DescribeClusterParameterGroupsResult> asyncHandler,java.util.concurrent.Future<DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync,java.util.concurrent.Future<DescribeClusterParameterGroupsResult> describeClusterParameterGroupsAsync,com.amazonaws.handlers.AsyncHandler<DescribeClusterParameterGroupsRequest, DescribeClusterParameterGroupsResult> asyncHandler){\r\n    return describeClusterParameterGroupsAsync(new DescribeClusterParameterGroupsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose versioning configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.UpdateTarget.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMaintenanceTrackName() != null)\r\n        sb.append(\"MaintenanceTrackName: \").append(getMaintenanceTrackName()).append(\",\");\r\n    if (getDatabaseVersion() != null)\r\n        sb.append(\"DatabaseVersion: \").append(getDatabaseVersion()).append(\",\");\r\n    if (getSupportedOperations() != null)\r\n        sb.append(\"SupportedOperations: \").append(getSupportedOperations());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ResponseHeaderOverrides.getContentEncoding",
	"Comment": "returns the content encoding response header override if it has beenspecified, or null otherwise.",
	"Method": "String getContentEncoding(){\r\n    return contentEncoding;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.ListResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceOwner() != null)\r\n        sb.append(\"ResourceOwner: \").append(getResourceOwner()).append(\",\");\r\n    if (getPrincipal() != null)\r\n        sb.append(\"Principal: \").append(getPrincipal()).append(\",\");\r\n    if (getResourceType() != null)\r\n        sb.append(\"ResourceType: \").append(getResourceType()).append(\",\");\r\n    if (getResourceArns() != null)\r\n        sb.append(\"ResourceArns: \").append(getResourceArns()).append(\",\");\r\n    if (getResourceShareArns() != null)\r\n        sb.append(\"ResourceShareArns: \").append(getResourceShareArns()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListSimulationApplicationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersionQualifier() != null)\r\n        sb.append(\"VersionQualifier: \").append(getVersionQualifier()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated listobjectsv2request object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "ListObjectsV2Request withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateEventSubscriptionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSubscriptionName() != null)\r\n        sb.append(\"SubscriptionName: \").append(getSubscriptionName()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getEventCategories() != null)\r\n        sb.append(\"EventCategories: \").append(getEventCategories()).append(\",\");\r\n    if (getSourceIds() != null)\r\n        sb.append(\"SourceIds: \").append(getSourceIds()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.deleteEndpointConfig",
	"Comment": "deletes an endpoint configuration. the deleteendpointconfig api deletes only the specifiedconfiguration. it does not delete endpoints created using the configuration.",
	"Method": "DeleteEndpointConfigResult deleteEndpointConfig(DeleteEndpointConfigRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteEndpointConfig(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteEndpointConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointConfigName() != null)\r\n        sb.append(\"EndpointConfigName: \").append(getEndpointConfigName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonredshiftasync using the current builder configuration.",
	"Method": "AmazonRedshiftAsync build(AwsAsyncClientParams params){\r\n    return new AmazonRedshiftAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ModerationLabel.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfidence() != null)\r\n        sb.append(\"Confidence: \").append(getConfidence()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getParentName() != null)\r\n        sb.append(\"ParentName: \").append(getParentName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBSecurityGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getDBSecurityGroups() != null)\r\n        sb.append(\"DBSecurityGroups: \").append(getDBSecurityGroups());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.secureCEK",
	"Comment": "secure the given cek.note network calls are involved if the cek is tobe protected by kms.",
	"Method": "SecuredCEK secureCEK(SecretKey cek,EncryptionMaterials materials,S3KeyWrapScheme kwScheme,CryptoConfiguration config,AWSKMS kms,AmazonWebServiceRequest req){\r\n    final Map<String, String> matdesc;\r\n    if (materials.isKMSEnabled()) {\r\n        matdesc = mergeMaterialDescriptions(materials, req);\r\n        EncryptRequest encryptRequest = new EncryptRequest().withEncryptionContext(matdesc).withKeyId(materials.getCustomerMasterKeyId()).withPlaintext(ByteBuffer.wrap(cek.getEncoded()));\r\n        encryptRequest.withGeneralProgressListener(req.getGeneralProgressListener()).withRequestMetricCollector(req.getRequestMetricCollector());\r\n        EncryptResult encryptResult = kms.encrypt(encryptRequest);\r\n        byte[] keyBlob = copyAllBytesFrom(encryptResult.getCiphertextBlob());\r\n        return new KMSSecuredCEK(keyBlob, matdesc);\r\n    } else {\r\n        matdesc = materials.getMaterialsDescription();\r\n    }\r\n    Key kek;\r\n    if (materials.getKeyPair() != null) {\r\n        kek = materials.getKeyPair().getPublic();\r\n    } else {\r\n        kek = materials.getSymmetricKey();\r\n    }\r\n    String keyWrapAlgo = kwScheme.getKeyWrapAlgorithm(kek);\r\n    Provider provider = config.getCryptoProvider();\r\n    SecureRandom srand = config.getSecureRandom();\r\n    try {\r\n        if (keyWrapAlgo != null) {\r\n            Cipher cipher = provider == null ? Cipher.getInstance(keyWrapAlgo) : Cipher.getInstance(keyWrapAlgo, provider);\r\n            cipher.init(Cipher.WRAP_MODE, kek, srand);\r\n            return new SecuredCEK(cipher.wrap(cek), keyWrapAlgo, matdesc);\r\n        }\r\n        Cipher cipher;\r\n        byte[] toBeEncryptedBytes = cek.getEncoded();\r\n        String algo = kek.getAlgorithm();\r\n        if (provider != null) {\r\n            cipher = Cipher.getInstance(algo, provider);\r\n        } else {\r\n            cipher = Cipher.getInstance(algo);\r\n        }\r\n        cipher.init(Cipher.ENCRYPT_MODE, kek);\r\n        return new SecuredCEK(cipher.doFinal(toBeEncryptedBytes), null, matdesc);\r\n    } catch (Exception e) {\r\n        throw failure(e, \"Unable to encrypt symmetric key\");\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateLabelingJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLabelingJobArn() != null)\r\n        sb.append(\"LabelingJobArn: \").append(getLabelingJobArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.populateRequestWithCopyObjectParameters",
	"Comment": "populates the specified request with the numerous options available incopyobjectrequest.",
	"Method": "void populateRequestWithCopyObjectParameters(Request<? extends AmazonWebServiceRequest> request,CopyObjectRequest copyObjectRequest){\r\n    String copySourceHeader = \"/\" + SdkHttpUtils.urlEncode(copyObjectRequest.getSourceBucketName(), true) + \"/\" + SdkHttpUtils.urlEncode(copyObjectRequest.getSourceKey(), true);\r\n    if (copyObjectRequest.getSourceVersionId() != null) {\r\n        copySourceHeader += \"?versionId=\" + copyObjectRequest.getSourceVersionId();\r\n    }\r\n    request.addHeader(\"x-amz-copy-source\", copySourceHeader);\r\n    addDateHeader(request, Headers.COPY_SOURCE_IF_MODIFIED_SINCE, copyObjectRequest.getModifiedSinceConstraint());\r\n    addDateHeader(request, Headers.COPY_SOURCE_IF_UNMODIFIED_SINCE, copyObjectRequest.getUnmodifiedSinceConstraint());\r\n    addStringListHeader(request, Headers.COPY_SOURCE_IF_MATCH, copyObjectRequest.getMatchingETagConstraints());\r\n    addStringListHeader(request, Headers.COPY_SOURCE_IF_NO_MATCH, copyObjectRequest.getNonmatchingETagConstraints());\r\n    if (copyObjectRequest.getAccessControlList() != null) {\r\n        addAclHeaders(request, copyObjectRequest.getAccessControlList());\r\n    } else if (copyObjectRequest.getCannedAccessControlList() != null) {\r\n        request.addHeader(Headers.S3_CANNED_ACL, copyObjectRequest.getCannedAccessControlList().toString());\r\n    }\r\n    if (copyObjectRequest.getStorageClass() != null) {\r\n        request.addHeader(Headers.STORAGE_CLASS, copyObjectRequest.getStorageClass());\r\n    }\r\n    if (copyObjectRequest.getRedirectLocation() != null) {\r\n        request.addHeader(Headers.REDIRECT_LOCATION, copyObjectRequest.getRedirectLocation());\r\n    }\r\n    populateRequesterPaysHeader(request, copyObjectRequest.isRequesterPays());\r\n    ObjectMetadata newObjectMetadata = copyObjectRequest.getNewObjectMetadata();\r\n    if (copyObjectRequest.getMetadataDirective() != null) {\r\n        request.addHeader(Headers.METADATA_DIRECTIVE, copyObjectRequest.getMetadataDirective());\r\n    } else if (newObjectMetadata != null) {\r\n        request.addHeader(Headers.METADATA_DIRECTIVE, \"REPLACE\");\r\n    }\r\n    if (newObjectMetadata != null) {\r\n        populateRequestMetadata(request, newObjectMetadata);\r\n    }\r\n    ObjectTagging newObjectTagging = copyObjectRequest.getNewObjectTagging();\r\n    if (newObjectTagging != null) {\r\n        request.addHeader(Headers.TAGGING_DIRECTIVE, \"REPLACE\");\r\n        request.addHeader(Headers.S3_TAGGING, urlEncodeTags(newObjectTagging));\r\n    }\r\n    populateSourceSSE_C(request, copyObjectRequest.getSourceSSECustomerKey());\r\n    populateSSE_C(request, copyObjectRequest.getDestinationSSECustomerKey());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.iterable.S3Versions.withPrefix",
	"Comment": "constructs an iterable that covers the versions in an amazon s3 bucketwhere the object key begins with the given prefix.",
	"Method": "S3Versions withPrefix(AmazonS3 s3,String bucketName,String prefix){\r\n    S3Versions versions = new S3Versions(s3, bucketName);\r\n    versions.prefix = prefix;\r\n    return versions;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DeleteStreamProcessorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteObjectRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated deleteobjectrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "DeleteObjectRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketTaggingConfigurationRequest.withTaggingConfiguration",
	"Comment": "sets the new tagging configuration for the specified bucket andreturns this object, enabling additional method calls to be chainedtogether.",
	"Method": "SetBucketTaggingConfigurationRequest withTaggingConfiguration(BucketTaggingConfiguration taggingConfiguration){\r\n    setTaggingConfiguration(taggingConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.CreateGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroup() != null)\r\n        sb.append(\"Group: \").append(getGroup()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.updateNotebookInstance",
	"Comment": "updates a notebook instance. notebookinstance updates include upgrading or downgrading the ml compute instanceused for your notebook instance to accommodate changes in your workload requirements. you can also update the vpcsecurity groups.",
	"Method": "UpdateNotebookInstanceResult updateNotebookInstance(UpdateNotebookInstanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeUpdateNotebookInstance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectId.instructionFileId",
	"Comment": "returns the instruction file id of an instruction file with the givensuffix.",
	"Method": "InstructionFileId instructionFileId(InstructionFileId instructionFileId,String suffix){\r\n    String ifileKey = key + DOT;\r\n    ifileKey += (suffix == null || suffix.trim().length() == 0) ? DEFAULT_INSTRUCTION_FILE_SUFFIX : suffix;\r\n    return new InstructionFileId(bucket, ifileKey, versionId);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectAclRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the object whose acl is to be retrieved.",
	"Method": "void setBucketName(String bucketName){\r\n    s3ObjectIdBuilder.setBucket(bucketName);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetObjectLockConfigurationRequest.setRequesterPays",
	"Comment": "used for downloading an amazon s3 object from a requester pays bucket. ifset the requester is charged for downloading the data from the bucket.if a bucket is enabled for requester pays, then any attempt to read anobject from it without requester pays enabled will result in a 403 errorand the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ResizeClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getClusterType() != null)\r\n        sb.append(\"ClusterType: \").append(getClusterType()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getNumberOfNodes() != null)\r\n        sb.append(\"NumberOfNodes: \").append(getNumberOfNodes()).append(\",\");\r\n    if (getClassic() != null)\r\n        sb.append(\"Classic: \").append(getClassic());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadRequest.withRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket. it returns thisupdated initiatemultipartuploadrequest object so that additional method calls can bechained together.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "InitiateMultipartUploadRequest withRequesterPays(boolean isRequesterPays){\r\n    setRequesterPays(isRequesterPays);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartFaceDetectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVideo() != null)\r\n        sb.append(\"Video: \").append(getVideo()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getNotificationChannel() != null)\r\n        sb.append(\"NotificationChannel: \").append(getNotificationChannel()).append(\",\");\r\n    if (getFaceAttributes() != null)\r\n        sb.append(\"FaceAttributes: \").append(getFaceAttributes()).append(\",\");\r\n    if (getJobTag() != null)\r\n        sb.append(\"JobTag: \").append(getJobTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.AmazonS3ExceptionBuilder.build",
	"Comment": "creates a new amazons3exception object with the values set.",
	"Method": "AmazonS3Exception build(){\r\n    AmazonS3Exception s3Exception = errorResponseXml == null ? new AmazonS3Exception(errorMessage) : new AmazonS3Exception(errorMessage, errorResponseXml);\r\n    s3Exception.setErrorCode(errorCode);\r\n    s3Exception.setExtendedRequestId(extendedRequestId);\r\n    s3Exception.setStatusCode(statusCode);\r\n    s3Exception.setRequestId(requestId);\r\n    s3Exception.setCloudFrontId(cloudFrontId);\r\n    s3Exception.setAdditionalDetails(additionalDetails);\r\n    s3Exception.setErrorType(errorTypeOf(statusCode));\r\n    return s3Exception;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.SourceAlgorithmSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceAlgorithms() != null)\r\n        sb.append(\"SourceAlgorithms: \").append(getSourceAlgorithms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describeDBClustersAsync",
	"Comment": "simplified method form for invoking the describedbclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeDBClustersResult> describeDBClustersAsync(DescribeDBClustersRequest request,java.util.concurrent.Future<DescribeDBClustersResult> describeDBClustersAsync,DescribeDBClustersRequest request,com.amazonaws.handlers.AsyncHandler<DescribeDBClustersRequest, DescribeDBClustersResult> asyncHandler,java.util.concurrent.Future<DescribeDBClustersResult> describeDBClustersAsync,java.util.concurrent.Future<DescribeDBClustersResult> describeDBClustersAsync,com.amazonaws.handlers.AsyncHandler<DescribeDBClustersRequest, DescribeDBClustersResult> asyncHandler){\r\n    return describeDBClustersAsync(new DescribeDBClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SegmentDemographics.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAppVersion() != null)\r\n        sb.append(\"AppVersion: \").append(getAppVersion()).append(\",\");\r\n    if (getChannel() != null)\r\n        sb.append(\"Channel: \").append(getChannel()).append(\",\");\r\n    if (getDeviceType() != null)\r\n        sb.append(\"DeviceType: \").append(getDeviceType()).append(\",\");\r\n    if (getMake() != null)\r\n        sb.append(\"Make: \").append(getMake()).append(\",\");\r\n    if (getModel() != null)\r\n        sb.append(\"Model: \").append(getModel()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.CreateSimulationJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getLastUpdatedAt() != null)\r\n        sb.append(\"LastUpdatedAt: \").append(getLastUpdatedAt()).append(\",\");\r\n    if (getFailureBehavior() != null)\r\n        sb.append(\"FailureBehavior: \").append(getFailureBehavior()).append(\",\");\r\n    if (getFailureCode() != null)\r\n        sb.append(\"FailureCode: \").append(getFailureCode()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getOutputLocation() != null)\r\n        sb.append(\"OutputLocation: \").append(getOutputLocation()).append(\",\");\r\n    if (getMaxJobDurationInSeconds() != null)\r\n        sb.append(\"MaxJobDurationInSeconds: \").append(getMaxJobDurationInSeconds()).append(\",\");\r\n    if (getSimulationTimeMillis() != null)\r\n        sb.append(\"SimulationTimeMillis: \").append(getSimulationTimeMillis()).append(\",\");\r\n    if (getIamRole() != null)\r\n        sb.append(\"IamRole: \").append(getIamRole()).append(\",\");\r\n    if (getRobotApplications() != null)\r\n        sb.append(\"RobotApplications: \").append(getRobotApplications()).append(\",\");\r\n    if (getSimulationApplications() != null)\r\n        sb.append(\"SimulationApplications: \").append(getSimulationApplications()).append(\",\");\r\n    if (getVpcConfig() != null)\r\n        sb.append(\"VpcConfig: \").append(getVpcConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.BoundingBox.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWidth() != null)\r\n        sb.append(\"Width: \").append(getWidth()).append(\",\");\r\n    if (getHeight() != null)\r\n        sb.append(\"Height: \").append(getHeight()).append(\",\");\r\n    if (getLeft() != null)\r\n        sb.append(\"Left: \").append(getLeft()).append(\",\");\r\n    if (getTop() != null)\r\n        sb.append(\"Top: \").append(getTop());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.CompareFacesMatch.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSimilarity() != null)\r\n        sb.append(\"Similarity: \").append(getSimilarity()).append(\",\");\r\n    if (getFace() != null)\r\n        sb.append(\"Face: \").append(getFace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerBuilder.setDisableParallelDownloads",
	"Comment": "sets the option to disable parallel downloads. by default, the value is set to false.transfermanager automatically detects and downloads a multipart objectin parallel. setting this option to true will disable parallel downloads.during parallel downloads, each part is downloaded to a temporary file, gets mergedinto the final destination file and will be deleted. these temporary files uses disk space temporarily.disable parallel downloads if your system do not have enough space to store these files during download.disabling parallel downloads might reduce performance for large files.",
	"Method": "void setDisableParallelDownloads(Boolean disableParallelDownloads){\r\n    this.disableParallelDownloads = disableParallelDownloads;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CORSRule.withAllowedMethods",
	"Comment": "sets the allowed methods of this rule and returns a reference to this object formethod chaining.",
	"Method": "CORSRule withAllowedMethods(List<AllowedMethods> allowedMethods){\r\n    this.allowedMethods = allowedMethods;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerAsyncClientBuilder.build",
	"Comment": "construct an asynchronous implementation of amazonsagemakerasync using the current builder configuration.",
	"Method": "AmazonSageMakerAsync build(AwsAsyncClientParams params){\r\n    return new AmazonSageMakerAsyncClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApplicationSettingsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationSettingsResource() != null)\r\n        sb.append(\"ApplicationSettingsResource: \").append(getApplicationSettingsResource());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.waiters.AmazonRedshiftWaiters.clusterRestored",
	"Comment": "builds a clusterrestored waiter by using custom parameters waiterparameters and other parameters defined in thewaiters specification, and then polls until it determines whether the resource entered the desired state or not,where polling criteria is bound by either default polling strategy or custom polling strategy.",
	"Method": "Waiter<DescribeClustersRequest> clusterRestored(){\r\n    return new WaiterBuilder<DescribeClustersRequest, DescribeClustersResult>().withSdkFunction(new DescribeClustersFunction(client)).withAcceptors(new ClusterRestored.IsCompletedMatcher(), new ClusterRestored.IsDeletingMatcher()).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(30), new FixedDelayStrategy(60))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.getReusableDelegationSet",
	"Comment": "retrieves information about a specified reusable delegation set, including the four name servers that areassigned to the delegation set.",
	"Method": "GetReusableDelegationSetResult getReusableDelegationSet(GetReusableDelegationSetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetReusableDelegationSet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.Range.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFrom() != null)\r\n        sb.append(\"From: \").append(getFrom()).append(\",\");\r\n    if (getTo() != null)\r\n        sb.append(\"To: \").append(getTo()).append(\",\");\r\n    if (getStep() != null)\r\n        sb.append(\"Step: \").append(getStep());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBSubnetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteModelPackageRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelPackageName() != null)\r\n        sb.append(\"ModelPackageName: \").append(getModelPackageName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.setBucketName",
	"Comment": "sets the name of the bucket containing the object whose metadata isbeing retrieved.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DataTransferProgress.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getCurrentRateInMegaBytesPerSecond() != null)\r\n        sb.append(\"CurrentRateInMegaBytesPerSecond: \").append(getCurrentRateInMegaBytesPerSecond()).append(\",\");\r\n    if (getTotalDataInMegaBytes() != null)\r\n        sb.append(\"TotalDataInMegaBytes: \").append(getTotalDataInMegaBytes()).append(\",\");\r\n    if (getDataTransferredInMegaBytes() != null)\r\n        sb.append(\"DataTransferredInMegaBytes: \").append(getDataTransferredInMegaBytes()).append(\",\");\r\n    if (getEstimatedTimeToCompletionInSeconds() != null)\r\n        sb.append(\"EstimatedTimeToCompletionInSeconds: \").append(getEstimatedTimeToCompletionInSeconds()).append(\",\");\r\n    if (getElapsedTimeInSeconds() != null)\r\n        sb.append(\"ElapsedTimeInSeconds: \").append(getElapsedTimeInSeconds());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.GetResourcesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPaginationToken() != null)\r\n        sb.append(\"PaginationToken: \").append(getPaginationToken()).append(\",\");\r\n    if (getTagFilters() != null)\r\n        sb.append(\"TagFilters: \").append(getTagFilters()).append(\",\");\r\n    if (getResourcesPerPage() != null)\r\n        sb.append(\"ResourcesPerPage: \").append(getResourcesPerPage()).append(\",\");\r\n    if (getTagsPerPage() != null)\r\n        sb.append(\"TagsPerPage: \").append(getTagsPerPage()).append(\",\");\r\n    if (getResourceTypeFilters() != null)\r\n        sb.append(\"ResourceTypeFilters: \").append(getResourceTypeFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListNotebookInstancesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getSortBy() != null)\r\n        sb.append(\"SortBy: \").append(getSortBy()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder()).append(\",\");\r\n    if (getNameContains() != null)\r\n        sb.append(\"NameContains: \").append(getNameContains()).append(\",\");\r\n    if (getCreationTimeBefore() != null)\r\n        sb.append(\"CreationTimeBefore: \").append(getCreationTimeBefore()).append(\",\");\r\n    if (getCreationTimeAfter() != null)\r\n        sb.append(\"CreationTimeAfter: \").append(getCreationTimeAfter()).append(\",\");\r\n    if (getLastModifiedTimeBefore() != null)\r\n        sb.append(\"LastModifiedTimeBefore: \").append(getLastModifiedTimeBefore()).append(\",\");\r\n    if (getLastModifiedTimeAfter() != null)\r\n        sb.append(\"LastModifiedTimeAfter: \").append(getLastModifiedTimeAfter()).append(\",\");\r\n    if (getStatusEquals() != null)\r\n        sb.append(\"StatusEquals: \").append(getStatusEquals()).append(\",\");\r\n    if (getNotebookInstanceLifecycleConfigNameContains() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigNameContains: \").append(getNotebookInstanceLifecycleConfigNameContains()).append(\",\");\r\n    if (getDefaultCodeRepositoryContains() != null)\r\n        sb.append(\"DefaultCodeRepositoryContains: \").append(getDefaultCodeRepositoryContains()).append(\",\");\r\n    if (getAdditionalCodeRepositoryEquals() != null)\r\n        sb.append(\"AdditionalCodeRepositoryEquals: \").append(getAdditionalCodeRepositoryEquals());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.listHealthChecksAsync",
	"Comment": "simplified method form for invoking the listhealthchecks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListHealthChecksResult> listHealthChecksAsync(ListHealthChecksRequest request,java.util.concurrent.Future<ListHealthChecksResult> listHealthChecksAsync,ListHealthChecksRequest request,com.amazonaws.handlers.AsyncHandler<ListHealthChecksRequest, ListHealthChecksResult> asyncHandler,java.util.concurrent.Future<ListHealthChecksResult> listHealthChecksAsync,java.util.concurrent.Future<ListHealthChecksResult> listHealthChecksAsync,com.amazonaws.handlers.AsyncHandler<ListHealthChecksRequest, ListHealthChecksResult> asyncHandler){\r\n    return listHealthChecksAsync(new ListHealthChecksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GeneratePresignedUrlRequest.getResponseHeaders",
	"Comment": "returns the headers to be overridden in the service response.",
	"Method": "ResponseHeaderOverrides getResponseHeaders(){\r\n    return responseHeaders;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.setId",
	"Comment": "sets the identifier used to represent an analytics configuration.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHealthCheckResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHealthCheck() != null)\r\n        sb.append(\"HealthCheck: \").append(getHealthCheck());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadPartRequest.getUploadId",
	"Comment": "returns the id of the existing, initiated multipart upload with whichthis new part will be associated.",
	"Method": "String getUploadId(){\r\n    return uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListRobotsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRobots() != null)\r\n        sb.append(\"Robots: \").append(getRobots()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeDBClusterBacktracks",
	"Comment": "returns information about backtracks for a db cluster.for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DescribeDBClusterBacktracksResult describeDBClusterBacktracks(DescribeDBClusterBacktracksRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeDBClusterBacktracks(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeCodeRepositoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeRepositoryName() != null)\r\n        sb.append(\"CodeRepositoryName: \").append(getCodeRepositoryName()).append(\",\");\r\n    if (getCodeRepositoryArn() != null)\r\n        sb.append(\"CodeRepositoryArn: \").append(getCodeRepositoryArn()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getLastModifiedTime() != null)\r\n        sb.append(\"LastModifiedTime: \").append(getLastModifiedTime()).append(\",\");\r\n    if (getGitConfig() != null)\r\n        sb.append(\"GitConfig: \").append(getGitConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.TrainingJobStatusCounters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCompleted() != null)\r\n        sb.append(\"Completed: \").append(getCompleted()).append(\",\");\r\n    if (getInProgress() != null)\r\n        sb.append(\"InProgress: \").append(getInProgress()).append(\",\");\r\n    if (getRetryableError() != null)\r\n        sb.append(\"RetryableError: \").append(getRetryableError()).append(\",\");\r\n    if (getNonRetryableError() != null)\r\n        sb.append(\"NonRetryableError: \").append(getNonRetryableError()).append(\",\");\r\n    if (getStopped() != null)\r\n        sb.append(\"Stopped: \").append(getStopped());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryConfiguration.setOptionalFields",
	"Comment": "sets the optional fields that are included in the inventory results.",
	"Method": "void setOptionalFields(List<String> optionalFields){\r\n    this.optionalFields = optionalFields;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetLexiconResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLexicon() != null)\r\n        sb.append(\"Lexicon: \").append(getLexicon()).append(\",\");\r\n    if (getLexiconAttributes() != null)\r\n        sb.append(\"LexiconAttributes: \").append(getLexiconAttributes());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.TagResourceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.RestoreTableFromClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getSourceDatabaseName() != null)\r\n        sb.append(\"SourceDatabaseName: \").append(getSourceDatabaseName()).append(\",\");\r\n    if (getSourceSchemaName() != null)\r\n        sb.append(\"SourceSchemaName: \").append(getSourceSchemaName()).append(\",\");\r\n    if (getSourceTableName() != null)\r\n        sb.append(\"SourceTableName: \").append(getSourceTableName()).append(\",\");\r\n    if (getTargetDatabaseName() != null)\r\n        sb.append(\"TargetDatabaseName: \").append(getTargetDatabaseName()).append(\",\");\r\n    if (getTargetSchemaName() != null)\r\n        sb.append(\"TargetSchemaName: \").append(getTargetSchemaName()).append(\",\");\r\n    if (getNewTableName() != null)\r\n        sb.append(\"NewTableName: \").append(getNewTableName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.getBucketName",
	"Comment": "returns the name of the bucket from which an analytics configuration is deleted.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.putConfigurationSetSendingOptions",
	"Comment": "enable or disable email sending for messages that use a particular configuration set in a specific aws region.",
	"Method": "PutConfigurationSetSendingOptionsResult putConfigurationSetSendingOptions(PutConfigurationSetSendingOptionsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executePutConfigurationSetSendingOptions(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketNotificationConfigurationRequest.getBucketName",
	"Comment": "gets the name of the bucket whose notification configuration is beingset.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getMetadataDirective",
	"Comment": "specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.",
	"Method": "String getMetadataDirective(){\r\n    return metadataDirective;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreatePresignedNotebookInstanceUrlResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAuthorizedUrl() != null)\r\n        sb.append(\"AuthorizedUrl: \").append(getAuthorizedUrl());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.Schedule.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndTime() != null)\r\n        sb.append(\"EndTime: \").append(getEndTime()).append(\",\");\r\n    if (getEventFilter() != null)\r\n        sb.append(\"EventFilter: \").append(getEventFilter()).append(\",\");\r\n    if (getFrequency() != null)\r\n        sb.append(\"Frequency: \").append(getFrequency()).append(\",\");\r\n    if (getIsLocalTime() != null)\r\n        sb.append(\"IsLocalTime: \").append(getIsLocalTime()).append(\",\");\r\n    if (getQuietTime() != null)\r\n        sb.append(\"QuietTime: \").append(getQuietTime()).append(\",\");\r\n    if (getStartTime() != null)\r\n        sb.append(\"StartTime: \").append(getStartTime()).append(\",\");\r\n    if (getTimezone() != null)\r\n        sb.append(\"Timezone: \").append(getTimezone());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.createDBClusterSnapshot",
	"Comment": "creates a snapshot of a db cluster. for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "DBClusterSnapshot createDBClusterSnapshot(CreateDBClusterSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDBClusterSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.setPrefix",
	"Comment": "sets the optional prefix parameter, restricting the response to keys thatbegin with the specified prefix.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelResponse.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId()).append(\",\");\r\n    if (getCreationDate() != null)\r\n        sb.append(\"CreationDate: \").append(getCreationDate()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getHasCredential() != null)\r\n        sb.append(\"HasCredential: \").append(getHasCredential()).append(\",\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getIsArchived() != null)\r\n        sb.append(\"IsArchived: \").append(getIsArchived()).append(\",\");\r\n    if (getLastModifiedBy() != null)\r\n        sb.append(\"LastModifiedBy: \").append(getLastModifiedBy()).append(\",\");\r\n    if (getLastModifiedDate() != null)\r\n        sb.append(\"LastModifiedDate: \").append(getLastModifiedDate()).append(\",\");\r\n    if (getPlatform() != null)\r\n        sb.append(\"Platform: \").append(getPlatform()).append(\",\");\r\n    if (getPromotionalMessagesPerSecond() != null)\r\n        sb.append(\"PromotionalMessagesPerSecond: \").append(getPromotionalMessagesPerSecond()).append(\",\");\r\n    if (getSenderId() != null)\r\n        sb.append(\"SenderId: \").append(getSenderId()).append(\",\");\r\n    if (getShortCode() != null)\r\n        sb.append(\"ShortCode: \").append(getShortCode()).append(\",\");\r\n    if (getTransactionalMessagesPerSecond() != null)\r\n        sb.append(\"TransactionalMessagesPerSecond: \").append(getTransactionalMessagesPerSecond()).append(\",\");\r\n    if (getVersion() != null)\r\n        sb.append(\"Version: \").append(getVersion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.waiters.AmazonS3Waiters.bucketExists",
	"Comment": "builds a bucketexists waiter by using custom parameters waiterparametersand other parameters defined in the waiters specification, and then pollsuntil it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategyor custom polling strategy.",
	"Method": "Waiter<HeadBucketRequest> bucketExists(){\r\n    return new WaiterBuilder<HeadBucketRequest, HeadBucketResult>().withSdkFunction(new HeadBucketFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor<HeadBucketResult>(WaiterState.SUCCESS), new HttpFailureStatusAcceptor<HeadBucketResult>(301, WaiterState.SUCCESS), new HttpFailureStatusAcceptor<HeadBucketResult>(403, WaiterState.SUCCESS), new HttpFailureStatusAcceptor<HeadBucketResult>(404, WaiterState.RETRY)).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(20), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.deleteClusterSnapshot",
	"Comment": "deletes the specified manual snapshot. the snapshot must be in the available state, with no otherusers authorized to access the snapshot.unlike automated snapshots, manual snapshots are retained even after you delete your cluster. amazon redshiftdoes not delete your manual snapshots. you must delete manual snapshot explicitly to avoid getting charged. ifother accounts are authorized to access the snapshot, you must revoke all of the authorizations before you candelete the snapshot.",
	"Method": "Snapshot deleteClusterSnapshot(DeleteClusterSnapshotRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteClusterSnapshot(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ResolverEndpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId()).append(\",\");\r\n    if (getCreatorRequestId() != null)\r\n        sb.append(\"CreatorRequestId: \").append(getCreatorRequestId()).append(\",\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSecurityGroupIds() != null)\r\n        sb.append(\"SecurityGroupIds: \").append(getSecurityGroupIds()).append(\",\");\r\n    if (getDirection() != null)\r\n        sb.append(\"Direction: \").append(getDirection()).append(\",\");\r\n    if (getIpAddressCount() != null)\r\n        sb.append(\"IpAddressCount: \").append(getIpAddressCount()).append(\",\");\r\n    if (getHostVPCId() != null)\r\n        sb.append(\"HostVPCId: \").append(getHostVPCId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getModificationTime() != null)\r\n        sb.append(\"ModificationTime: \").append(getModificationTime());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListModelPackagesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelPackageSummaryList() != null)\r\n        sb.append(\"ModelPackageSummaryList: \").append(getModelPackageSummaryList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetReusableDelegationSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDelegationSet() != null)\r\n        sb.append(\"DelegationSet: \").append(getDelegationSet());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.FinalHyperParameterTuningJobObjectiveMetric.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType()).append(\",\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.GetSearchSuggestionsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResource() != null)\r\n        sb.append(\"Resource: \").append(getResource()).append(\",\");\r\n    if (getSuggestionQuery() != null)\r\n        sb.append(\"SuggestionQuery: \").append(getSuggestionQuery());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.CopyMonitor.create",
	"Comment": "constructs a new watcher for copy operation, and then immediately submitsit to the thread pool.",
	"Method": "CopyMonitor create(TransferManager manager,CopyImpl transfer,ExecutorService threadPool,CopyCallable multipartCopyCallable,CopyObjectRequest copyObjectRequest,ProgressListenerChain progressListenerChain){\r\n    CopyMonitor copyMonitor = new CopyMonitor(manager, transfer, threadPool, multipartCopyCallable, copyObjectRequest, progressListenerChain);\r\n    Future<CopyResult> thisFuture = threadPool.submit(copyMonitor);\r\n    copyMonitor.futureReference.compareAndSet(null, thisFuture);\r\n    return copyMonitor;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ModifyClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod()).append(\",\");\r\n    if (getForce() != null)\r\n        sb.append(\"Force: \").append(getForce());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DeleteTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.HsmConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHsmConfigurationIdentifier() != null)\r\n        sb.append(\"HsmConfigurationIdentifier: \").append(getHsmConfigurationIdentifier()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getHsmIpAddress() != null)\r\n        sb.append(\"HsmIpAddress: \").append(getHsmIpAddress()).append(\",\");\r\n    if (getHsmPartitionName() != null)\r\n        sb.append(\"HsmPartitionName: \").append(getHsmPartitionName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSnapshotIdentifier() != null)\r\n        sb.append(\"DBSnapshotIdentifier: \").append(getDBSnapshotIdentifier()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.AvailableProcessorFeature.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getDefaultValue() != null)\r\n        sb.append(\"DefaultValue: \").append(getDefaultValue()).append(\",\");\r\n    if (getAllowedValues() != null)\r\n        sb.append(\"AllowedValues: \").append(getAllowedValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53Client.getHostedZoneLimit",
	"Comment": "gets the specified limit for a specified hosted zone, for example, the maximum number of records that you cancreate in the hosted zone.for the default limit, see limits in the amazonroute 53 developer guide. to request a higher limit, open a case.",
	"Method": "GetHostedZoneLimitResult getHostedZoneLimit(GetHostedZoneLimitRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetHostedZoneLimit(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.AWSRDSDataClient.executeSql",
	"Comment": "executes any sql statement on the target database synchronously",
	"Method": "ExecuteSqlResult executeSql(ExecuteSqlRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeExecuteSql(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.AlgorithmSummary.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithmName() != null)\r\n        sb.append(\"AlgorithmName: \").append(getAlgorithmName()).append(\",\");\r\n    if (getAlgorithmArn() != null)\r\n        sb.append(\"AlgorithmArn: \").append(getAlgorithmArn()).append(\",\");\r\n    if (getAlgorithmDescription() != null)\r\n        sb.append(\"AlgorithmDescription: \").append(getAlgorithmDescription()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getAlgorithmStatus() != null)\r\n        sb.append(\"AlgorithmStatus: \").append(getAlgorithmStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.IntegerParameterRange.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getMinValue() != null)\r\n        sb.append(\"MinValue: \").append(getMinValue()).append(\",\");\r\n    if (getMaxValue() != null)\r\n        sb.append(\"MaxValue: \").append(getMaxValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.AmazonRoute53DomainsAsyncClient.getExecutorService",
	"Comment": "returns the executor service used by this client to execute async requests.",
	"Method": "ExecutorService getExecutorService(){\r\n    return executorService;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.AlgorithmValidationSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getValidationRole() != null)\r\n        sb.append(\"ValidationRole: \").append(getValidationRole()).append(\",\");\r\n    if (getValidationProfiles() != null)\r\n        sb.append(\"ValidationProfiles: \").append(getValidationProfiles());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.DisassociateResolverRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRuleAssociation() != null)\r\n        sb.append(\"ResolverRuleAssociation: \").append(getResolverRuleAssociation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53ClientBuilder.build",
	"Comment": "construct a synchronous implementation of amazonroute53 using the current builder configuration.",
	"Method": "AmazonRoute53 build(AwsSyncClientParams params){\r\n    return new AmazonRoute53Client(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.AvailabilityZone.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getSupportedPlatforms() != null)\r\n        sb.append(\"SupportedPlatforms: \").append(getSupportedPlatforms());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.metrics.MetricsConfiguration.setId",
	"Comment": "sets the identifier used to represent a metrics configuration.",
	"Method": "void setId(String id){\r\n    this.id = id;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateModelPackageResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getModelPackageArn() != null)\r\n        sb.append(\"ModelPackageArn: \").append(getModelPackageArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.addHeaderIfNotNull",
	"Comment": "adds the specified header to the specified request, if the header valueis not null.",
	"Method": "void addHeaderIfNotNull(Request<?> request,String header,String value){\r\n    if (value != null) {\r\n        request.addHeader(header, value);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.EnableSharingWithAwsOrganizationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetPublicAccessBlockRequest.setBucketName",
	"Comment": "the name of the amazon s3 bucket whose public access block configuration you want to set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListMultipartUploadsRequest.withMaxUploads",
	"Comment": "sets the optional maximum number of uploads to return and returns thisupdated listmultipartuploadsrequest object so that additional methodcalls can be chained together.",
	"Method": "ListMultipartUploadsRequest withMaxUploads(int maxUploadsInt){\r\n    this.maxUploads = maxUploadsInt;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.setUploadId",
	"Comment": "sets the id of the existing, initiated multipart upload with which thisnew part will be associated.",
	"Method": "void setUploadId(String uploadId){\r\n    this.uploadId = uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAnalyticsConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket to which an analytics configuration is storedand returns this object for method chaining.",
	"Method": "SetBucketAnalyticsConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectMetadataRequest.getBucketName",
	"Comment": "gets the name of the bucket containing the object whose metadata isbeing retrieved.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketMetricsConfigurationRequest.getMetricsConfiguration",
	"Comment": "returns the metrics configuration that is set on the bucket.",
	"Method": "MetricsConfiguration getMetricsConfiguration(){\r\n    return metricsConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.BillingRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDomainName() != null)\r\n        sb.append(\"DomainName: \").append(getDomainName()).append(\",\");\r\n    if (getOperation() != null)\r\n        sb.append(\"Operation: \").append(getOperation()).append(\",\");\r\n    if (getInvoiceId() != null)\r\n        sb.append(\"InvoiceId: \").append(getInvoiceId()).append(\",\");\r\n    if (getBillDate() != null)\r\n        sb.append(\"BillDate: \").append(getBillDate()).append(\",\");\r\n    if (getPrice() != null)\r\n        sb.append(\"Price: \").append(getPrice());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.ListGroupMembershipsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupMemberList() != null)\r\n        sb.append(\"GroupMemberList: \").append(getGroupMemberList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketEncryptionRequest.withBucketName",
	"Comment": "the name of the bucket for which to retrieve delete the encryption configuration.",
	"Method": "GetBucketEncryptionRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutObjectRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.invoke",
	"Comment": "normal invoke with authentication. credentials are required and may be overriden at the request level.",
	"Method": "Response<X> invoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,Response<X> invoke,Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext,URI cachedEndpoint,URI uriFromEndpointTrait){\r\n    executionContext.setCredentialsProvider(CredentialUtils.getCredentialsProvider(request.getOriginalRequest(), awsCredentialsProvider));\r\n    return doInvoke(request, responseHandler, executionContext, cachedEndpoint, uriFromEndpointTrait);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.PersistableDownload.getLastFullyDownloadedPartNumber",
	"Comment": "returns the last part number that was successfully written into the downloaded file.",
	"Method": "Integer getLastFullyDownloadedPartNumber(){\r\n    return lastFullyDownloadedPartNumber;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.DeleteBucketAnalyticsConfigurationRequest.withId",
	"Comment": "sets the identifier used to represent an analytics configurationand returns this object for method chaining.",
	"Method": "DeleteBucketAnalyticsConfigurationRequest withId(String id){\r\n    setId(id);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.Cluster.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getNodeType() != null)\r\n        sb.append(\"NodeType: \").append(getNodeType()).append(\",\");\r\n    if (getClusterStatus() != null)\r\n        sb.append(\"ClusterStatus: \").append(getClusterStatus()).append(\",\");\r\n    if (getModifyStatus() != null)\r\n        sb.append(\"ModifyStatus: \").append(getModifyStatus()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getDBName() != null)\r\n        sb.append(\"DBName: \").append(getDBName()).append(\",\");\r\n    if (getEndpoint() != null)\r\n        sb.append(\"Endpoint: \").append(getEndpoint()).append(\",\");\r\n    if (getClusterCreateTime() != null)\r\n        sb.append(\"ClusterCreateTime: \").append(getClusterCreateTime()).append(\",\");\r\n    if (getAutomatedSnapshotRetentionPeriod() != null)\r\n        sb.append(\"AutomatedSnapshotRetentionPeriod: \").append(getAutomatedSnapshotRetentionPeriod()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod()).append(\",\");\r\n    if (getClusterSecurityGroups() != null)\r\n        sb.append(\"ClusterSecurityGroups: \").append(getClusterSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroups() != null)\r\n        sb.append(\"VpcSecurityGroups: \").append(getVpcSecurityGroups()).append(\",\");\r\n    if (getClusterParameterGroups() != null)\r\n        sb.append(\"ClusterParameterGroups: \").append(getClusterParameterGroups()).append(\",\");\r\n    if (getClusterSubnetGroupName() != null)\r\n        sb.append(\"ClusterSubnetGroupName: \").append(getClusterSubnetGroupName()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getPendingModifiedValues() != null)\r\n        sb.append(\"PendingModifiedValues: \").append(getPendingModifiedValues()).append(\",\");\r\n    if (getClusterVersion() != null)\r\n        sb.append(\"ClusterVersion: \").append(getClusterVersion()).append(\",\");\r\n    if (getAllowVersionUpgrade() != null)\r\n        sb.append(\"AllowVersionUpgrade: \").append(getAllowVersionUpgrade()).append(\",\");\r\n    if (getNumberOfNodes() != null)\r\n        sb.append(\"NumberOfNodes: \").append(getNumberOfNodes()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getEncrypted() != null)\r\n        sb.append(\"Encrypted: \").append(getEncrypted()).append(\",\");\r\n    if (getRestoreStatus() != null)\r\n        sb.append(\"RestoreStatus: \").append(getRestoreStatus()).append(\",\");\r\n    if (getDataTransferProgress() != null)\r\n        sb.append(\"DataTransferProgress: \").append(getDataTransferProgress()).append(\",\");\r\n    if (getHsmStatus() != null)\r\n        sb.append(\"HsmStatus: \").append(getHsmStatus()).append(\",\");\r\n    if (getClusterSnapshotCopyStatus() != null)\r\n        sb.append(\"ClusterSnapshotCopyStatus: \").append(getClusterSnapshotCopyStatus()).append(\",\");\r\n    if (getClusterPublicKey() != null)\r\n        sb.append(\"ClusterPublicKey: \").append(getClusterPublicKey()).append(\",\");\r\n    if (getClusterNodes() != null)\r\n        sb.append(\"ClusterNodes: \").append(getClusterNodes()).append(\",\");\r\n    if (getElasticIpStatus() != null)\r\n        sb.append(\"ElasticIpStatus: \").append(getElasticIpStatus()).append(\",\");\r\n    if (getClusterRevisionNumber() != null)\r\n        sb.append(\"ClusterRevisionNumber: \").append(getClusterRevisionNumber()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getEnhancedVpcRouting() != null)\r\n        sb.append(\"EnhancedVpcRouting: \").append(getEnhancedVpcRouting()).append(\",\");\r\n    if (getIamRoles() != null)\r\n        sb.append(\"IamRoles: \").append(getIamRoles()).append(\",\");\r\n    if (getPendingActions() != null)\r\n        sb.append(\"PendingActions: \").append(getPendingActions()).append(\",\");\r\n    if (getMaintenanceTrackName() != null)\r\n        sb.append(\"MaintenanceTrackName: \").append(getMaintenanceTrackName()).append(\",\");\r\n    if (getElasticResizeNumberOfNodeOptions() != null)\r\n        sb.append(\"ElasticResizeNumberOfNodeOptions: \").append(getElasticResizeNumberOfNodeOptions()).append(\",\");\r\n    if (getDeferredMaintenanceWindows() != null)\r\n        sb.append(\"DeferredMaintenanceWindows: \").append(getDeferredMaintenanceWindows()).append(\",\");\r\n    if (getSnapshotScheduleIdentifier() != null)\r\n        sb.append(\"SnapshotScheduleIdentifier: \").append(getSnapshotScheduleIdentifier()).append(\",\");\r\n    if (getSnapshotScheduleState() != null)\r\n        sb.append(\"SnapshotScheduleState: \").append(getSnapshotScheduleState()).append(\",\");\r\n    if (getResizeInfo() != null)\r\n        sb.append(\"ResizeInfo: \").append(getResizeInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeCodeRepositoryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeRepositoryName() != null)\r\n        sb.append(\"CodeRepositoryName: \").append(getCodeRepositoryName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterSnapshotCopyStatus.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDestinationRegion() != null)\r\n        sb.append(\"DestinationRegion: \").append(getDestinationRegion()).append(\",\");\r\n    if (getRetentionPeriod() != null)\r\n        sb.append(\"RetentionPeriod: \").append(getRetentionPeriod()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod()).append(\",\");\r\n    if (getSnapshotCopyGrantName() != null)\r\n        sb.append(\"SnapshotCopyGrantName: \").append(getSnapshotCopyGrantName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.OutputLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getS3Bucket() != null)\r\n        sb.append(\"S3Bucket: \").append(getS3Bucket()).append(\",\");\r\n    if (getS3Prefix() != null)\r\n        sb.append(\"S3Prefix: \").append(getS3Prefix());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.withPrefix",
	"Comment": "sets the amazon s3 object prefix for the replication rule. returns theupdated object.",
	"Method": "ReplicationRule withPrefix(String prefix){\r\n    setPrefix(prefix);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeReservedNodeOfferingsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getReservedNodeOfferingId() != null)\r\n        sb.append(\"ReservedNodeOfferingId: \").append(getReservedNodeOfferingId()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.TagFilter.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagKey() != null)\r\n        sb.append(\"TagKey: \").append(getTagKey()).append(\",\");\r\n    if (getTagValues() != null)\r\n        sb.append(\"TagValues: \").append(getTagValues());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.GetResourceShareAssociationsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareAssociations() != null)\r\n        sb.append(\"ResourceShareAssociations: \").append(getResourceShareAssociations()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.ListGroupMembershipsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.DescribeUserResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUser() != null)\r\n        sb.append(\"User: \").append(getUser()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.RestoreObjectRequest.withGlacierJobParameters",
	"Comment": "sets glacier related parameters pertaining to this job.this should not be used for restores with a specified outputlocation.",
	"Method": "RestoreObjectRequest withGlacierJobParameters(GlacierJobParameters glacierJobParameters){\r\n    setGlacierJobParameters(glacierJobParameters);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.TrackingOptions.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomRedirectDomain() != null)\r\n        sb.append(\"CustomRedirectDomain: \").append(getCustomRedirectDomain());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceArn() != null)\r\n        sb.append(\"ResourceArn: \").append(getResourceArn()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial.getKEKMaterialsDescription",
	"Comment": "returns the description of the kek materials that were used to encryptthe cek.",
	"Method": "Map<String, String> getKEKMaterialsDescription(){\r\n    return this.kekMaterialsDescription;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.setProgressListener",
	"Comment": "sets the optional progress listener for receiving updates for objectupload status.",
	"Method": "void setProgressListener(com.amazonaws.services.s3.model.ProgressListener progressListener){\r\n    setGeneralProgressListener(new LegacyS3ProgressListener(progressListener));\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.ListPrincipalsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPrincipals() != null)\r\n        sb.append(\"Principals: \").append(getPrincipals()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.GroupMember.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getArn() != null)\r\n        sb.append(\"Arn: \").append(getArn()).append(\",\");\r\n    if (getMemberName() != null)\r\n        sb.append(\"MemberName: \").append(getMemberName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.UploadObjectRequest.setMaterialsDescription",
	"Comment": "sets the materials description for the encryption materials to be usedwith the current request.",
	"Method": "void setMaterialsDescription(Map<String, String> materialsDescription){\r\n    this.materialsDescription = materialsDescription == null ? null : Collections.unmodifiableMap(new HashMap<String, String>(materialsDescription));\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.PutEventsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEventsResponse() != null)\r\n        sb.append(\"EventsResponse: \").append(getEventsResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.describeCompilationJob",
	"Comment": "returns information about a model compilation job.to create a model compilation job, use createcompilationjob. to get information about multiple modelcompilation jobs, use listcompilationjobs.",
	"Method": "DescribeCompilationJobResult describeCompilationJob(DescribeCompilationJobRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeCompilationJob(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.ClusterDbRevision.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterIdentifier() != null)\r\n        sb.append(\"ClusterIdentifier: \").append(getClusterIdentifier()).append(\",\");\r\n    if (getCurrentDatabaseRevision() != null)\r\n        sb.append(\"CurrentDatabaseRevision: \").append(getCurrentDatabaseRevision()).append(\",\");\r\n    if (getDatabaseRevisionReleaseDate() != null)\r\n        sb.append(\"DatabaseRevisionReleaseDate: \").append(getDatabaseRevisionReleaseDate()).append(\",\");\r\n    if (getRevisionTargets() != null)\r\n        sb.append(\"RevisionTargets: \").append(getRevisionTargets());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.isLatest",
	"Comment": "returns whether or not this version is the latest versionfor the associated object.",
	"Method": "boolean isLatest(){\r\n    return this.isLatest;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.AddRoleToDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeHsmClientCertificatesAsync",
	"Comment": "simplified method form for invoking the describehsmclientcertificates operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync(DescribeHsmClientCertificatesRequest request,java.util.concurrent.Future<DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync,DescribeHsmClientCertificatesRequest request,com.amazonaws.handlers.AsyncHandler<DescribeHsmClientCertificatesRequest, DescribeHsmClientCertificatesResult> asyncHandler,java.util.concurrent.Future<DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync,java.util.concurrent.Future<DescribeHsmClientCertificatesResult> describeHsmClientCertificatesAsync,com.amazonaws.handlers.AsyncHandler<DescribeHsmClientCertificatesRequest, DescribeHsmClientCertificatesResult> asyncHandler){\r\n    return describeHsmClientCertificatesAsync(new DescribeHsmClientCertificatesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.SMSChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getSenderId() != null)\r\n        sb.append(\"SenderId: \").append(getSenderId()).append(\",\");\r\n    if (getShortCode() != null)\r\n        sb.append(\"ShortCode: \").append(getShortCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.transform.XmlResponsesSaxParser.parseListVersionsResponse",
	"Comment": "parses a listversions response xml document from an input stream.",
	"Method": "ListVersionsHandler parseListVersionsResponse(InputStream inputStream,boolean shouldSDKDecodeResponse){\r\n    ListVersionsHandler handler = new ListVersionsHandler(shouldSDKDecodeResponse);\r\n    parseXmlInputStream(handler, sanitizeXmlDocument(handler, inputStream));\r\n    return handler;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListEndpointConfigsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getEndpointConfigs() != null)\r\n        sb.append(\"EndpointConfigs: \").append(getEndpointConfigs()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.StopDBInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getDBSnapshotIdentifier() != null)\r\n        sb.append(\"DBSnapshotIdentifier: \").append(getDBSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.AmazonPinpointEmailClient.listDedicatedIpPools",
	"Comment": "list all of the dedicated ip pools that exist in your amazon pinpoint account in the current aws region.",
	"Method": "ListDedicatedIpPoolsResult listDedicatedIpPools(ListDedicatedIpPoolsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListDedicatedIpPools(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBClusterParameterGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getDBClusterParameterGroupArn() != null)\r\n        sb.append(\"DBClusterParameterGroupArn: \").append(getDBClusterParameterGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.getUploadId",
	"Comment": "returns the id of the existing, initiated multipart upload with whichthis new part will be associated.",
	"Method": "String getUploadId(){\r\n    return uploadId;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetHostedZoneLimitResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLimit() != null)\r\n        sb.append(\"Limit: \").append(getLimit()).append(\",\");\r\n    if (getCount() != null)\r\n        sb.append(\"Count: \").append(getCount());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3ObjectSummary.getLastModified",
	"Comment": "gets the date when, according to amazon s3, this objectwas last modified.",
	"Method": "Date getLastModified(){\r\n    return lastModified;\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.DeregisterRobotResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFleet() != null)\r\n        sb.append(\"Fleet: \").append(getFleet()).append(\",\");\r\n    if (getRobot() != null)\r\n        sb.append(\"Robot: \").append(getRobot());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.deleteModelPackage",
	"Comment": "deletes a model package.a model package is used to create amazon sagemaker models or list on aws marketplace. buyers can subscribe tomodel packages listed on aws marketplace to create models in amazon sagemaker.",
	"Method": "DeleteModelPackageResult deleteModelPackage(DeleteModelPackageRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteModelPackage(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeValidDBInstanceModificationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeEventSubscriptionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getEventSubscriptionsList() != null)\r\n        sb.append(\"EventSubscriptionsList: \").append(getEventSubscriptionsList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getParameters() != null)\r\n        sb.append(\"Parameters: \").append(getParameters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.internal.DownloadImpl.getObjectMetadata",
	"Comment": "returns the objectmetadata for the object being downloaded.",
	"Method": "ObjectMetadata getObjectMetadata(){\r\n    if (s3Object != null) {\r\n        return s3Object.getObjectMetadata();\r\n    }\r\n    return objectMetadata;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.RevokeSnapshotAccessRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSnapshotIdentifier() != null)\r\n        sb.append(\"SnapshotIdentifier: \").append(getSnapshotIdentifier()).append(\",\");\r\n    if (getSnapshotClusterIdentifier() != null)\r\n        sb.append(\"SnapshotClusterIdentifier: \").append(getSnapshotClusterIdentifier()).append(\",\");\r\n    if (getAccountWithRestoreAccess() != null)\r\n        sb.append(\"AccountWithRestoreAccess: \").append(getAccountWithRestoreAccess());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.SearchRecord.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrainingJob() != null)\r\n        sb.append(\"TrainingJob: \").append(getTrainingJob());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketCrossOriginConfigurationRequest.setBucketName",
	"Comment": "sets the name of the bucket whose cross origin configuration is being set.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.ListCollectionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCollectionIds() != null)\r\n        sb.append(\"CollectionIds: \").append(getCollectionIds()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getFaceModelVersions() != null)\r\n        sb.append(\"FaceModelVersions: \").append(getFaceModelVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetAccountLimitRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getType() != null)\r\n        sb.append(\"Type: \").append(getType());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.VersionListing.getNextVersionIdMarker",
	"Comment": "gets the version id marker touse in the next listversions request in order to obtain the next page ofresults. returns null if the version listing is not truncated.",
	"Method": "String getNextVersionIdMarker(){\r\n    return nextVersionIdMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.enableLogging",
	"Comment": "starts logging information, such as queries and connection attempts, for the specified amazon redshift cluster.",
	"Method": "EnableLoggingResult enableLogging(EnableLoggingRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeEnableLogging(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.withObjectLockLegalHoldStatus",
	"Comment": "specifies whether you want to apply a legal hold to the copied object.",
	"Method": "CopyObjectRequest withObjectLockLegalHoldStatus(String objectLockLegalHoldStatus,CopyObjectRequest withObjectLockLegalHoldStatus,ObjectLockLegalHoldStatus objectLockLegalHoldStatus){\r\n    return withObjectLockLegalHoldStatus(objectLockLegalHoldStatus.toString());\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StopStreamProcessorResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.S3CryptoModuleAE.decrypt",
	"Comment": "returns an updated object where the object content input stream contains the decrypted contents.",
	"Method": "S3ObjectWrapper decrypt(S3ObjectWrapper wrapper,ContentCryptoMaterial cekMaterial,long[] range){\r\n    S3ObjectInputStream objectContent = wrapper.getObjectContent();\r\n    wrapper.setObjectContent(new S3ObjectInputStream(new CipherLiteInputStream(objectContent, cekMaterial.getCipherLite(), DEFAULT_BUFFER_SIZE), objectContent.getHttpRequest()));\r\n    return wrapper;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ListTagsForDomainResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTagList() != null)\r\n        sb.append(\"TagList: \").append(getTagList());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.SimulationApplicationConfig.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getApplication() != null)\r\n        sb.append(\"Application: \").append(getApplication()).append(\",\");\r\n    if (getApplicationVersion() != null)\r\n        sb.append(\"ApplicationVersion: \").append(getApplicationVersion()).append(\",\");\r\n    if (getLaunchConfig() != null)\r\n        sb.append(\"LaunchConfig: \").append(getLaunchConfig());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListHostedZonesByNameRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDNSName() != null)\r\n        sb.append(\"DNSName: \").append(getDNSName()).append(\",\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.AWSS3ControlAsyncClientBuilder.setFipsEnabled",
	"Comment": "sets the status of fips enabled endpoints for clients built with this builder. the default is to not use fipsendpoints.",
	"Method": "void setFipsEnabled(Boolean fipsEnabled){\r\n    super.putAdvancedConfig(S3ControlClientOptions.FIPS_ENABLED, fipsEnabled);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTrafficPolicyInstancesByHostedZoneRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZoneId() != null)\r\n        sb.append(\"HostedZoneId: \").append(getHostedZoneId()).append(\",\");\r\n    if (getTrafficPolicyInstanceNameMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceNameMarker: \").append(getTrafficPolicyInstanceNameMarker()).append(\",\");\r\n    if (getTrafficPolicyInstanceTypeMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceTypeMarker: \").append(getTrafficPolicyInstanceTypeMarker()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.AWSRoboMakerClient.createFleet",
	"Comment": "creates a fleet, a logical group of robots running the same robot application.",
	"Method": "CreateFleetResult createFleet(CreateFleetRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateFleet(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferProgress.getBytesTransferred",
	"Comment": "returns the number of bytes completed in the associated transfer.",
	"Method": "long getBytesTransferred(){\r\n    return bytesTransferred;\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.AcceptResourceShareInvitationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareInvitation() != null)\r\n        sb.append(\"ResourceShareInvitation: \").append(getResourceShareInvitation()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3Location.withAccessControlList",
	"Comment": "sets the list of grants that control access to the staged results.",
	"Method": "S3Location withAccessControlList(AccessControlList accessControlList){\r\n    setAccessControlList(accessControlList);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.SubscribedWorkteam.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkteamArn() != null)\r\n        sb.append(\"WorkteamArn: \").append(getWorkteamArn()).append(\",\");\r\n    if (getMarketplaceTitle() != null)\r\n        sb.append(\"MarketplaceTitle: \").append(getMarketplaceTitle()).append(\",\");\r\n    if (getSellerName() != null)\r\n        sb.append(\"SellerName: \").append(getSellerName()).append(\",\");\r\n    if (getMarketplaceDescription() != null)\r\n        sb.append(\"MarketplaceDescription: \").append(getMarketplaceDescription()).append(\",\");\r\n    if (getListingId() != null)\r\n        sb.append(\"ListingId: \").append(getListingId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.ModifyDBSnapshotAttributeRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSnapshotIdentifier() != null)\r\n        sb.append(\"DBSnapshotIdentifier: \").append(getDBSnapshotIdentifier()).append(\",\");\r\n    if (getAttributeName() != null)\r\n        sb.append(\"AttributeName: \").append(getAttributeName()).append(\",\");\r\n    if (getValuesToAdd() != null)\r\n        sb.append(\"ValuesToAdd: \").append(getValuesToAdd()).append(\",\");\r\n    if (getValuesToRemove() != null)\r\n        sb.append(\"ValuesToRemove: \").append(getValuesToRemove());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.Parent.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketAclRequest.getBucketName",
	"Comment": "returns the name of the bucket whose acl will be modified by this request\twhen executed.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.EventSubscription.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCustomerAwsId() != null)\r\n        sb.append(\"CustomerAwsId: \").append(getCustomerAwsId()).append(\",\");\r\n    if (getCustSubscriptionId() != null)\r\n        sb.append(\"CustSubscriptionId: \").append(getCustSubscriptionId()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getSubscriptionCreationTime() != null)\r\n        sb.append(\"SubscriptionCreationTime: \").append(getSubscriptionCreationTime()).append(\",\");\r\n    if (getSourceType() != null)\r\n        sb.append(\"SourceType: \").append(getSourceType()).append(\",\");\r\n    if (getSourceIdsList() != null)\r\n        sb.append(\"SourceIdsList: \").append(getSourceIdsList()).append(\",\");\r\n    if (getEventCategoriesList() != null)\r\n        sb.append(\"EventCategoriesList: \").append(getEventCategoriesList()).append(\",\");\r\n    if (getEnabled() != null)\r\n        sb.append(\"Enabled: \").append(getEnabled()).append(\",\");\r\n    if (getEventSubscriptionArn() != null)\r\n        sb.append(\"EventSubscriptionArn: \").append(getEventSubscriptionArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.getInitiator",
	"Comment": "returns details on the user who initiated the associated multipartupload.",
	"Method": "Owner getInitiator(){\r\n    return initiator;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBLogFilesDetails.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLogFileName() != null)\r\n        sb.append(\"LogFileName: \").append(getLogFileName()).append(\",\");\r\n    if (getLastWritten() != null)\r\n        sb.append(\"LastWritten: \").append(getLastWritten()).append(\",\");\r\n    if (getSize() != null)\r\n        sb.append(\"Size: \").append(getSize());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBSnapshotAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBSnapshotIdentifier() != null)\r\n        sb.append(\"DBSnapshotIdentifier: \").append(getDBSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.DeleteGroupMembershipResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeDBLogFilesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getFilenameContains() != null)\r\n        sb.append(\"FilenameContains: \").append(getFilenameContains()).append(\",\");\r\n    if (getFileLastWritten() != null)\r\n        sb.append(\"FileLastWritten: \").append(getFileLastWritten()).append(\",\");\r\n    if (getFileSize() != null)\r\n        sb.append(\"FileSize: \").append(getFileSize()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters()).append(\",\");\r\n    if (getMaxRecords() != null)\r\n        sb.append(\"MaxRecords: \").append(getMaxRecords()).append(\",\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBClusterParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getDBParameterGroupFamily() != null)\r\n        sb.append(\"DBParameterGroupFamily: \").append(getDBParameterGroupFamily()).append(\",\");\r\n    if (getDescription() != null)\r\n        sb.append(\"Description: \").append(getDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketPolicyRequest.withConfirmRemoveSelfBucketAccess",
	"Comment": "set this parameter to true to confirm that you want to remove your permissions to change this bucket policy in the future.",
	"Method": "SetBucketPolicyRequest withConfirmRemoveSelfBucketAccess(Boolean confirmRemoveSelfBucketAccess){\r\n    setConfirmRemoveSelfBucketAccess(confirmRemoveSelfBucketAccess);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSAsyncClient.describePendingMaintenanceActionsAsync",
	"Comment": "simplified method form for invoking the describependingmaintenanceactions operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribePendingMaintenanceActionsResult> describePendingMaintenanceActionsAsync(DescribePendingMaintenanceActionsRequest request,java.util.concurrent.Future<DescribePendingMaintenanceActionsResult> describePendingMaintenanceActionsAsync,DescribePendingMaintenanceActionsRequest request,com.amazonaws.handlers.AsyncHandler<DescribePendingMaintenanceActionsRequest, DescribePendingMaintenanceActionsResult> asyncHandler,java.util.concurrent.Future<DescribePendingMaintenanceActionsResult> describePendingMaintenanceActionsAsync,java.util.concurrent.Future<DescribePendingMaintenanceActionsResult> describePendingMaintenanceActionsAsync,com.amazonaws.handlers.AsyncHandler<DescribePendingMaintenanceActionsRequest, DescribePendingMaintenanceActionsResult> asyncHandler){\r\n    return describePendingMaintenanceActionsAsync(new DescribePendingMaintenanceActionsRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsVoipChannelResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSVoipChannelResponse() != null)\r\n        sb.append(\"APNSVoipChannelResponse: \").append(getAPNSVoipChannelResponse());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeNotebookInstanceLifecycleConfigRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNotebookInstanceLifecycleConfigName() != null)\r\n        sb.append(\"NotebookInstanceLifecycleConfigName: \").append(getNotebookInstanceLifecycleConfigName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectTaggingResult.setVersionId",
	"Comment": "set the version id of the object the tags were retrieved from.",
	"Method": "void setVersionId(String versionId){\r\n    this.versionId = versionId;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.DeleteConfigurationSetRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.withVersioningConfiguration",
	"Comment": "sets the new versioning configuration for the specified bucket andreturns this object, enabling additional method calls to be chainedtogether.",
	"Method": "SetBucketVersioningConfigurationRequest withVersioningConfiguration(BucketVersioningConfiguration versioningConfiguration){\r\n    setVersioningConfiguration(versioningConfiguration);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.DescribeGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListRobotApplicationsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVersionQualifier() != null)\r\n        sb.append(\"VersionQualifier: \").append(getVersionQualifier()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBClusterRole.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getRoleArn() != null)\r\n        sb.append(\"RoleArn: \").append(getRoleArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFeatureName() != null)\r\n        sb.append(\"FeatureName: \").append(getFeatureName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.getId",
	"Comment": "returns the identifier used to represent an analytics configuration.",
	"Method": "String getId(){\r\n    return id;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.populateSSE_C",
	"Comment": "populates the specified request with the numerous attributes available inssewithcustomerkeyrequest.",
	"Method": "void populateSSE_C(Request<?> request,SSECustomerKey sseKey){\r\n    if (sseKey == null)\r\n        return;\r\n    addHeaderIfNotNull(request, Headers.SERVER_SIDE_ENCRYPTION_CUSTOMER_ALGORITHM, sseKey.getAlgorithm());\r\n    addHeaderIfNotNull(request, Headers.SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY, sseKey.getKey());\r\n    addHeaderIfNotNull(request, Headers.SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_MD5, sseKey.getMd5());\r\n    if (sseKey.getKey() != null && sseKey.getMd5() == null) {\r\n        String encryptionKey_b64 = sseKey.getKey();\r\n        byte[] encryptionKey = Base64.decode(encryptionKey_b64);\r\n        request.addHeader(Headers.SERVER_SIDE_ENCRYPTION_CUSTOMER_KEY_MD5, Md5Utils.md5AsBase64(encryptionKey));\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.uploadObject",
	"Comment": "used for performance testing purposes only.hence package private.this method is subject to removal anytime without notice.",
	"Method": "CompleteMultipartUploadResult uploadObject(UploadObjectRequest req){\r\n    ExecutorService es = req.getExecutorService();\r\n    final boolean defaultExecutorService = es == null;\r\n    if (es == null)\r\n        es = Executors.newFixedThreadPool(clientConfiguration.getMaxConnections());\r\n    UploadObjectObserver observer = req.getUploadObjectObserver();\r\n    if (observer == null)\r\n        observer = new UploadObjectObserver();\r\n    observer.init(req, this, this, es);\r\n    observer.onUploadInitiation(req);\r\n    final List<PartETag> partETags = new ArrayList<PartETag>();\r\n    MultiFileOutputStream mfos = req.getMultiFileOutputStream();\r\n    if (mfos == null)\r\n        mfos = new MultiFileOutputStream();\r\n    try {\r\n        mfos.init(observer, req.getPartSize(), req.getDiskLimit());\r\n        putLocalObject(req, mfos);\r\n        for (Future<UploadPartResult> future : observer.getFutures()) {\r\n            UploadPartResult partResult = future.get();\r\n            partETags.add(new PartETag(partResult.getPartNumber(), partResult.getETag()));\r\n        }\r\n    } finally {\r\n        if (defaultExecutorService)\r\n            es.shutdownNow();\r\n        mfos.cleanup();\r\n    }\r\n    return observer.onCompletion(partETags);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.NestedFilters.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNestedPropertyName() != null)\r\n        sb.append(\"NestedPropertyName: \").append(getNestedPropertyName()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.CreateCodeRepositoryResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCodeRepositoryArn() != null)\r\n        sb.append(\"CodeRepositoryArn: \").append(getCodeRepositoryArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListNextBatchOfObjectsRequest.setPreviousObjectListing",
	"Comment": "sets the previous object listing and all the features of the next object listing as well.",
	"Method": "void setPreviousObjectListing(ObjectListing previousObjectListing){\r\n    if (previousObjectListing == null) {\r\n        throw new IllegalArgumentException(\"The parameter previousObjectListing must be specified.\");\r\n    }\r\n    this.previousObjectListing = previousObjectListing;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.SuggestionQuery.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPropertyNameQuery() != null)\r\n        sb.append(\"PropertyNameQuery: \").append(getPropertyNameQuery());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.ListGroupsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupList() != null)\r\n        sb.append(\"GroupList: \").append(getGroupList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getRequestId() != null)\r\n        sb.append(\"RequestId: \").append(getRequestId()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DeleteTagsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceName() != null)\r\n        sb.append(\"ResourceName: \").append(getResourceName()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GetTrafficPolicyInstanceRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getId() != null)\r\n        sb.append(\"Id: \").append(getId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.GeoLocation.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getContinentCode() != null)\r\n        sb.append(\"ContinentCode: \").append(getContinentCode()).append(\",\");\r\n    if (getCountryCode() != null)\r\n        sb.append(\"CountryCode: \").append(getCountryCode()).append(\",\");\r\n    if (getSubdivisionCode() != null)\r\n        sb.append(\"SubdivisionCode: \").append(getSubdivisionCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeTableRestoreStatusAsync",
	"Comment": "simplified method form for invoking the describetablerestorestatus operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync(DescribeTableRestoreStatusRequest request,java.util.concurrent.Future<DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync,DescribeTableRestoreStatusRequest request,com.amazonaws.handlers.AsyncHandler<DescribeTableRestoreStatusRequest, DescribeTableRestoreStatusResult> asyncHandler,java.util.concurrent.Future<DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync,java.util.concurrent.Future<DescribeTableRestoreStatusResult> describeTableRestoreStatusAsync,com.amazonaws.handlers.AsyncHandler<DescribeTableRestoreStatusRequest, DescribeTableRestoreStatusResult> asyncHandler){\r\n    return describeTableRestoreStatusAsync(new DescribeTableRestoreStatusRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.listHostedZonesByNameAsync",
	"Comment": "simplified method form for invoking the listhostedzonesbyname operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListHostedZonesByNameResult> listHostedZonesByNameAsync(ListHostedZonesByNameRequest request,java.util.concurrent.Future<ListHostedZonesByNameResult> listHostedZonesByNameAsync,ListHostedZonesByNameRequest request,com.amazonaws.handlers.AsyncHandler<ListHostedZonesByNameRequest, ListHostedZonesByNameResult> asyncHandler,java.util.concurrent.Future<ListHostedZonesByNameResult> listHostedZonesByNameAsync,java.util.concurrent.Future<ListHostedZonesByNameResult> listHostedZonesByNameAsync,com.amazonaws.handlers.AsyncHandler<ListHostedZonesByNameRequest, ListHostedZonesByNameResult> asyncHandler){\r\n    return listHostedZonesByNameAsync(new ListHostedZonesByNameRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.EnableLoggingResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getLoggingEnabled() != null)\r\n        sb.append(\"LoggingEnabled: \").append(getLoggingEnabled()).append(\",\");\r\n    if (getBucketName() != null)\r\n        sb.append(\"BucketName: \").append(getBucketName()).append(\",\");\r\n    if (getS3KeyPrefix() != null)\r\n        sb.append(\"S3KeyPrefix: \").append(getS3KeyPrefix()).append(\",\");\r\n    if (getLastSuccessfulDeliveryTime() != null)\r\n        sb.append(\"LastSuccessfulDeliveryTime: \").append(getLastSuccessfulDeliveryTime()).append(\",\");\r\n    if (getLastFailureTime() != null)\r\n        sb.append(\"LastFailureTime: \").append(getLastFailureTime()).append(\",\");\r\n    if (getLastFailureMessage() != null)\r\n        sb.append(\"LastFailureMessage: \").append(getLastFailureMessage());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.AWSRDSDataClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopTrainingJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteHostedZoneResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getChangeInfo() != null)\r\n        sb.append(\"ChangeInfo: \").append(getChangeInfo());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pricing.AWSPricingClient.getProducts",
	"Comment": "returns a list of all products that match the filter criteria.",
	"Method": "GetProductsResult getProducts(GetProductsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetProducts(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.DownloadCallable.updateDownloadStatus",
	"Comment": "takes the result from serial download,updates the transfer state and monitor in downloadimpl objectbased on the result.",
	"Method": "void updateDownloadStatus(S3Object result){\r\n    if (result == null) {\r\n        download.setState(TransferState.Canceled);\r\n        download.setMonitor(new DownloadMonitor(download, null));\r\n    } else {\r\n        download.setState(TransferState.Completed);\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ObjectMetadata.getVersionId",
	"Comment": "gets the version id of the associated amazon s3 object if available.version ids are only assigned to objects when an object is uploaded to anamazon s3 bucket that has object versioning enabled.",
	"Method": "String getVersionId(){\r\n    return (String) metadata.get(Headers.S3_VERSION_ID);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PutInstructionFileRequest.setAccessControlList",
	"Comment": "sets the optional access control list for the new object. if specified,cannedacl will be ignored.",
	"Method": "void setAccessControlList(AccessControlList accessControlList){\r\n    this.accessControlList = accessControlList;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.DeleteTrafficPolicyInstanceResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationRule.setDestinationConfig",
	"Comment": "sets the destination configuration for the replication rule.",
	"Method": "void setDestinationConfig(ReplicationDestinationConfig destinationConfig){\r\n    if (destinationConfig == null) {\r\n        throw new IllegalArgumentException(\"Destination cannot be null in the replication rule\");\r\n    }\r\n    this.destinationConfig = destinationConfig;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RestoreDBInstanceFromDBSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getDBSnapshotIdentifier() != null)\r\n        sb.append(\"DBSnapshotIdentifier: \").append(getDBSnapshotIdentifier()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getDBName() != null)\r\n        sb.append(\"DBName: \").append(getDBName()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getTdeCredentialArn() != null)\r\n        sb.append(\"TdeCredentialArn: \").append(getTdeCredentialArn()).append(\",\");\r\n    if (getTdeCredentialPassword() != null)\r\n        sb.append(\"TdeCredentialPassword: \").append(getTdeCredentialPassword()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getDomain() != null)\r\n        sb.append(\"Domain: \").append(getDomain()).append(\",\");\r\n    if (getCopyTagsToSnapshot() != null)\r\n        sb.append(\"CopyTagsToSnapshot: \").append(getCopyTagsToSnapshot()).append(\",\");\r\n    if (getDomainIAMRoleName() != null)\r\n        sb.append(\"DomainIAMRoleName: \").append(getDomainIAMRoleName()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getEnableCloudwatchLogsExports() != null)\r\n        sb.append(\"EnableCloudwatchLogsExports: \").append(getEnableCloudwatchLogsExports()).append(\",\");\r\n    if (getProcessorFeatures() != null)\r\n        sb.append(\"ProcessorFeatures: \").append(getProcessorFeatures()).append(\",\");\r\n    if (getUseDefaultProcessorFeatures() != null)\r\n        sb.append(\"UseDefaultProcessorFeatures: \").append(getUseDefaultProcessorFeatures()).append(\",\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Result.getContinuationToken",
	"Comment": "gets the optional continuation token.continuation token allows a list to becontinued from a specific point. continuationtoken is provided in truncated list results.",
	"Method": "String getContinuationToken(){\r\n    return continuationToken;\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.GetResolverRuleResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResolverRule() != null)\r\n        sb.append(\"ResolverRule: \").append(getResolverRule());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.AmazonPollyClient.listSpeechSynthesisTasks",
	"Comment": "returns a list of speechsynthesistask objects ordered by their creation date. this operation can filter the tasksby their status, for example, allowing users to list only tasks that are completed.",
	"Method": "ListSpeechSynthesisTasksResult listSpeechSynthesisTasks(ListSpeechSynthesisTasksRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeListSpeechSynthesisTasks(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.ListTrafficPolicyInstancesByPolicyResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTrafficPolicyInstances() != null)\r\n        sb.append(\"TrafficPolicyInstances: \").append(getTrafficPolicyInstances()).append(\",\");\r\n    if (getHostedZoneIdMarker() != null)\r\n        sb.append(\"HostedZoneIdMarker: \").append(getHostedZoneIdMarker()).append(\",\");\r\n    if (getTrafficPolicyInstanceNameMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceNameMarker: \").append(getTrafficPolicyInstanceNameMarker()).append(\",\");\r\n    if (getTrafficPolicyInstanceTypeMarker() != null)\r\n        sb.append(\"TrafficPolicyInstanceTypeMarker: \").append(getTrafficPolicyInstanceTypeMarker()).append(\",\");\r\n    if (getIsTruncated() != null)\r\n        sb.append(\"IsTruncated: \").append(getIsTruncated()).append(\",\");\r\n    if (getMaxItems() != null)\r\n        sb.append(\"MaxItems: \").append(getMaxItems());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.StopHyperParameterTuningJobResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.OptionGroupMembership.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpoint.model.UpdateApnsChannelRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAPNSChannelRequest() != null)\r\n        sb.append(\"APNSChannelRequest: \").append(getAPNSChannelRequest()).append(\",\");\r\n    if (getApplicationId() != null)\r\n        sb.append(\"ApplicationId: \").append(getApplicationId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroupstaggingapi.model.GetTagKeysResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPaginationToken() != null)\r\n        sb.append(\"PaginationToken: \").append(getPaginationToken()).append(\",\");\r\n    if (getTagKeys() != null)\r\n        sb.append(\"TagKeys: \").append(getTagKeys());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftAsyncClient.describeClustersAsync",
	"Comment": "simplified method form for invoking the describeclusters operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync(DescribeClustersRequest request,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,DescribeClustersRequest request,com.amazonaws.handlers.AsyncHandler<DescribeClustersRequest, DescribeClustersResult> asyncHandler,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,java.util.concurrent.Future<DescribeClustersResult> describeClustersAsync,com.amazonaws.handlers.AsyncHandler<DescribeClustersRequest, DescribeClustersResult> asyncHandler){\r\n    return describeClustersAsync(new DescribeClustersRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.DescribeSubscribedWorkteamRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getWorkteamArn() != null)\r\n        sb.append(\"WorkteamArn: \").append(getWorkteamArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.FaceDetection.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp()).append(\",\");\r\n    if (getFace() != null)\r\n        sb.append(\"Face: \").append(getFace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.DisassociateResolverRuleRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVPCId() != null)\r\n        sb.append(\"VPCId: \").append(getVPCId()).append(\",\");\r\n    if (getResolverRuleId() != null)\r\n        sb.append(\"ResolverRuleId: \").append(getResolverRuleId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.BucketAccelerateConfiguration.isAccelerateEnabled",
	"Comment": "a convenience method that returns whether the bucket is enabled accelerate mode.",
	"Method": "boolean isAccelerateEnabled(){\r\n    return BucketAccelerateStatus.Enabled.toString().equals(getStatus());\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.describeEngineDefaultClusterParameters",
	"Comment": "returns the default engine and system parameter information for the cluster database engine.for more information on amazon aurora, seewhat is amazonaurora? in the amazon aurora user guide.",
	"Method": "EngineDefaults describeEngineDefaultClusterParameters(DescribeEngineDefaultClusterParametersRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDescribeEngineDefaultClusterParameters(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.Endpoint.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAddress() != null)\r\n        sb.append(\"Address: \").append(getAddress()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.describeEvents",
	"Comment": "returns events related to clusters, security groups, snapshots, and parameter groups for the past 14 days. eventsspecific to a particular cluster, security group, snapshot or parameter group can be obtained by providing thename as a parameter. by default, the past hour of events are returned.",
	"Method": "DescribeEventsResult describeEvents(DescribeEventsRequest request,DescribeEventsResult describeEvents){\r\n    return describeEvents(new DescribeEventsRequest());\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.deleteClusterParameterGroup",
	"Comment": "deletes a specified amazon redshift parameter group.you cannot delete a parameter group if it is associated with a cluster.",
	"Method": "DeleteClusterParameterGroupResult deleteClusterParameterGroup(DeleteClusterParameterGroupRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteClusterParameterGroup(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.AuthorizeClusterSecurityGroupIngressRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getClusterSecurityGroupName() != null)\r\n        sb.append(\"ClusterSecurityGroupName: \").append(getClusterSecurityGroupName()).append(\",\");\r\n    if (getCIDRIP() != null)\r\n        sb.append(\"CIDRIP: \").append(getCIDRIP()).append(\",\");\r\n    if (getEC2SecurityGroupName() != null)\r\n        sb.append(\"EC2SecurityGroupName: \").append(getEC2SecurityGroupName()).append(\",\");\r\n    if (getEC2SecurityGroupOwnerId() != null)\r\n        sb.append(\"EC2SecurityGroupOwnerId: \").append(getEC2SecurityGroupOwnerId());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyPartRequest.withSourceBucketName",
	"Comment": "sets the name of the bucket containing the source object to be copied.",
	"Method": "CopyPartRequest withSourceBucketName(String sourceBucketName){\r\n    this.sourceBucketName = sourceBucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3VersionSummary.setBucketName",
	"Comment": "sets the name of the amazon s3 bucket in which this version is stored.",
	"Method": "void setBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.setPrefix",
	"Comment": "sets the optional prefix parameter, restricting the response to keys thatbegin with the specified prefix.",
	"Method": "void setPrefix(String prefix){\r\n    this.prefix = prefix;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.modifySnapshotCopyRetentionPeriod",
	"Comment": "modifies the number of days to retain snapshots in the destination aws region after they are copied from thesource aws region. by default, this operation only changes the retention period of copied automated snapshots.the retention periods for both new and existing copied automated snapshots are updated with the new retentionperiod. you can set the manual option to change only the retention periods of copied manual snapshots. if you setthis option, only newly copied manual snapshots have the new retention period.",
	"Method": "Cluster modifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeModifySnapshotCopyRetentionPeriod(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.AlgorithmStatusItem.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getFailureReason() != null)\r\n        sb.append(\"FailureReason: \").append(getFailureReason());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.SynthesisTask.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getTaskId() != null)\r\n        sb.append(\"TaskId: \").append(getTaskId()).append(\",\");\r\n    if (getTaskStatus() != null)\r\n        sb.append(\"TaskStatus: \").append(getTaskStatus()).append(\",\");\r\n    if (getTaskStatusReason() != null)\r\n        sb.append(\"TaskStatusReason: \").append(getTaskStatusReason()).append(\",\");\r\n    if (getOutputUri() != null)\r\n        sb.append(\"OutputUri: \").append(getOutputUri()).append(\",\");\r\n    if (getCreationTime() != null)\r\n        sb.append(\"CreationTime: \").append(getCreationTime()).append(\",\");\r\n    if (getRequestCharacters() != null)\r\n        sb.append(\"RequestCharacters: \").append(getRequestCharacters()).append(\",\");\r\n    if (getSnsTopicArn() != null)\r\n        sb.append(\"SnsTopicArn: \").append(getSnsTopicArn()).append(\",\");\r\n    if (getLexiconNames() != null)\r\n        sb.append(\"LexiconNames: \").append(\"***Sensitive Data Redacted***\").append(\",\");\r\n    if (getOutputFormat() != null)\r\n        sb.append(\"OutputFormat: \").append(getOutputFormat()).append(\",\");\r\n    if (getSampleRate() != null)\r\n        sb.append(\"SampleRate: \").append(getSampleRate()).append(\",\");\r\n    if (getSpeechMarkTypes() != null)\r\n        sb.append(\"SpeechMarkTypes: \").append(getSpeechMarkTypes()).append(\",\");\r\n    if (getTextType() != null)\r\n        sb.append(\"TextType: \").append(getTextType()).append(\",\");\r\n    if (getVoiceId() != null)\r\n        sb.append(\"VoiceId: \").append(getVoiceId()).append(\",\");\r\n    if (getLanguageCode() != null)\r\n        sb.append(\"LanguageCode: \").append(getLanguageCode());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DeleteStreamProcessorRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.GetContentModerationResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getJobStatus() != null)\r\n        sb.append(\"JobStatus: \").append(getJobStatus()).append(\",\");\r\n    if (getStatusMessage() != null)\r\n        sb.append(\"StatusMessage: \").append(getStatusMessage()).append(\",\");\r\n    if (getVideoMetadata() != null)\r\n        sb.append(\"VideoMetadata: \").append(getVideoMetadata()).append(\",\");\r\n    if (getModerationLabels() != null)\r\n        sb.append(\"ModerationLabels: \").append(getModerationLabels()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetBucketAnalyticsConfigurationRequest.withId",
	"Comment": "sets the identifier used to represent an analytics configurationand returns this object for method chaining.",
	"Method": "GetBucketAnalyticsConfigurationRequest withId(String id){\r\n    setId(id);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.SnapshotSortingEntity.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAttribute() != null)\r\n        sb.append(\"Attribute: \").append(getAttribute()).append(\",\");\r\n    if (getSortOrder() != null)\r\n        sb.append(\"SortOrder: \").append(getSortOrder());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.RestoreDBInstanceFromS3Request.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBName() != null)\r\n        sb.append(\"DBName: \").append(getDBName()).append(\",\");\r\n    if (getDBInstanceIdentifier() != null)\r\n        sb.append(\"DBInstanceIdentifier: \").append(getDBInstanceIdentifier()).append(\",\");\r\n    if (getAllocatedStorage() != null)\r\n        sb.append(\"AllocatedStorage: \").append(getAllocatedStorage()).append(\",\");\r\n    if (getDBInstanceClass() != null)\r\n        sb.append(\"DBInstanceClass: \").append(getDBInstanceClass()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getDBSecurityGroups() != null)\r\n        sb.append(\"DBSecurityGroups: \").append(getDBSecurityGroups()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getAvailabilityZone() != null)\r\n        sb.append(\"AvailabilityZone: \").append(getAvailabilityZone()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getDBParameterGroupName() != null)\r\n        sb.append(\"DBParameterGroupName: \").append(getDBParameterGroupName()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMultiAZ() != null)\r\n        sb.append(\"MultiAZ: \").append(getMultiAZ()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getAutoMinorVersionUpgrade() != null)\r\n        sb.append(\"AutoMinorVersionUpgrade: \").append(getAutoMinorVersionUpgrade()).append(\",\");\r\n    if (getLicenseModel() != null)\r\n        sb.append(\"LicenseModel: \").append(getLicenseModel()).append(\",\");\r\n    if (getIops() != null)\r\n        sb.append(\"Iops: \").append(getIops()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getPubliclyAccessible() != null)\r\n        sb.append(\"PubliclyAccessible: \").append(getPubliclyAccessible()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getStorageType() != null)\r\n        sb.append(\"StorageType: \").append(getStorageType()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getCopyTagsToSnapshot() != null)\r\n        sb.append(\"CopyTagsToSnapshot: \").append(getCopyTagsToSnapshot()).append(\",\");\r\n    if (getMonitoringInterval() != null)\r\n        sb.append(\"MonitoringInterval: \").append(getMonitoringInterval()).append(\",\");\r\n    if (getMonitoringRoleArn() != null)\r\n        sb.append(\"MonitoringRoleArn: \").append(getMonitoringRoleArn()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getSourceEngine() != null)\r\n        sb.append(\"SourceEngine: \").append(getSourceEngine()).append(\",\");\r\n    if (getSourceEngineVersion() != null)\r\n        sb.append(\"SourceEngineVersion: \").append(getSourceEngineVersion()).append(\",\");\r\n    if (getS3BucketName() != null)\r\n        sb.append(\"S3BucketName: \").append(getS3BucketName()).append(\",\");\r\n    if (getS3Prefix() != null)\r\n        sb.append(\"S3Prefix: \").append(getS3Prefix()).append(\",\");\r\n    if (getS3IngestionRoleArn() != null)\r\n        sb.append(\"S3IngestionRoleArn: \").append(getS3IngestionRoleArn()).append(\",\");\r\n    if (getEnablePerformanceInsights() != null)\r\n        sb.append(\"EnablePerformanceInsights: \").append(getEnablePerformanceInsights()).append(\",\");\r\n    if (getPerformanceInsightsKMSKeyId() != null)\r\n        sb.append(\"PerformanceInsightsKMSKeyId: \").append(getPerformanceInsightsKMSKeyId()).append(\",\");\r\n    if (getPerformanceInsightsRetentionPeriod() != null)\r\n        sb.append(\"PerformanceInsightsRetentionPeriod: \").append(getPerformanceInsightsRetentionPeriod()).append(\",\");\r\n    if (getEnableCloudwatchLogsExports() != null)\r\n        sb.append(\"EnableCloudwatchLogsExports: \").append(getEnableCloudwatchLogsExports()).append(\",\");\r\n    if (getProcessorFeatures() != null)\r\n        sb.append(\"ProcessorFeatures: \").append(getProcessorFeatures()).append(\",\");\r\n    if (getUseDefaultProcessorFeatures() != null)\r\n        sb.append(\"UseDefaultProcessorFeatures: \").append(getUseDefaultProcessorFeatures()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CreateDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAvailabilityZones() != null)\r\n        sb.append(\"AvailabilityZones: \").append(getAvailabilityZones()).append(\",\");\r\n    if (getBackupRetentionPeriod() != null)\r\n        sb.append(\"BackupRetentionPeriod: \").append(getBackupRetentionPeriod()).append(\",\");\r\n    if (getCharacterSetName() != null)\r\n        sb.append(\"CharacterSetName: \").append(getCharacterSetName()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getDBClusterParameterGroupName() != null)\r\n        sb.append(\"DBClusterParameterGroupName: \").append(getDBClusterParameterGroupName()).append(\",\");\r\n    if (getVpcSecurityGroupIds() != null)\r\n        sb.append(\"VpcSecurityGroupIds: \").append(getVpcSecurityGroupIds()).append(\",\");\r\n    if (getDBSubnetGroupName() != null)\r\n        sb.append(\"DBSubnetGroupName: \").append(getDBSubnetGroupName()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getMasterUsername() != null)\r\n        sb.append(\"MasterUsername: \").append(getMasterUsername()).append(\",\");\r\n    if (getMasterUserPassword() != null)\r\n        sb.append(\"MasterUserPassword: \").append(getMasterUserPassword()).append(\",\");\r\n    if (getOptionGroupName() != null)\r\n        sb.append(\"OptionGroupName: \").append(getOptionGroupName()).append(\",\");\r\n    if (getPreferredBackupWindow() != null)\r\n        sb.append(\"PreferredBackupWindow: \").append(getPreferredBackupWindow()).append(\",\");\r\n    if (getPreferredMaintenanceWindow() != null)\r\n        sb.append(\"PreferredMaintenanceWindow: \").append(getPreferredMaintenanceWindow()).append(\",\");\r\n    if (getReplicationSourceIdentifier() != null)\r\n        sb.append(\"ReplicationSourceIdentifier: \").append(getReplicationSourceIdentifier()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getKmsKeyId() != null)\r\n        sb.append(\"KmsKeyId: \").append(getKmsKeyId()).append(\",\");\r\n    if (getPreSignedUrl() != null)\r\n        sb.append(\"PreSignedUrl: \").append(getPreSignedUrl()).append(\",\");\r\n    if (getEnableIAMDatabaseAuthentication() != null)\r\n        sb.append(\"EnableIAMDatabaseAuthentication: \").append(getEnableIAMDatabaseAuthentication()).append(\",\");\r\n    if (getBacktrackWindow() != null)\r\n        sb.append(\"BacktrackWindow: \").append(getBacktrackWindow()).append(\",\");\r\n    if (getEnableCloudwatchLogsExports() != null)\r\n        sb.append(\"EnableCloudwatchLogsExports: \").append(getEnableCloudwatchLogsExports()).append(\",\");\r\n    if (getEngineMode() != null)\r\n        sb.append(\"EngineMode: \").append(getEngineMode()).append(\",\");\r\n    if (getScalingConfiguration() != null)\r\n        sb.append(\"ScalingConfiguration: \").append(getScalingConfiguration()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection()).append(\",\");\r\n    if (getGlobalClusterIdentifier() != null)\r\n        sb.append(\"GlobalClusterIdentifier: \").append(getGlobalClusterIdentifier()).append(\",\");\r\n    if (getSourceRegion() != null)\r\n        sb.append(\"SourceRegion: \").append(getSourceRegion());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketLoggingConfigurationRequest.withBucketName",
	"Comment": "sets the name of the bucket whose logging configuration is being setand returns this object, enabling additional method calls to bechained together.",
	"Method": "SetBucketLoggingConfigurationRequest withBucketName(String bucketName){\r\n    setBucketName(bucketName);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SetBucketVersioningConfigurationRequest.setVersioningConfiguration",
	"Comment": "sets the new versioning configuration for the specified bucket.",
	"Method": "void setVersioningConfiguration(BucketVersioningConfiguration versioningConfiguration){\r\n    this.versioningConfiguration = versioningConfiguration;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.InitiateMultipartUploadResult.setKey",
	"Comment": "sets the object key for which the multipart upload was initiated.",
	"Method": "void setKey(String key){\r\n    this.key = key;\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.SearchFacesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getCollectionId() != null)\r\n        sb.append(\"CollectionId: \").append(getCollectionId()).append(\",\");\r\n    if (getFaceId() != null)\r\n        sb.append(\"FaceId: \").append(getFaceId()).append(\",\");\r\n    if (getMaxFaces() != null)\r\n        sb.append(\"MaxFaces: \").append(getMaxFaces()).append(\",\");\r\n    if (getFaceMatchThreshold() != null)\r\n        sb.append(\"FaceMatchThreshold: \").append(getFaceMatchThreshold());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.GlobalCluster.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGlobalClusterIdentifier() != null)\r\n        sb.append(\"GlobalClusterIdentifier: \").append(getGlobalClusterIdentifier()).append(\",\");\r\n    if (getGlobalClusterResourceId() != null)\r\n        sb.append(\"GlobalClusterResourceId: \").append(getGlobalClusterResourceId()).append(\",\");\r\n    if (getGlobalClusterArn() != null)\r\n        sb.append(\"GlobalClusterArn: \").append(getGlobalClusterArn()).append(\",\");\r\n    if (getStatus() != null)\r\n        sb.append(\"Status: \").append(getStatus()).append(\",\");\r\n    if (getEngine() != null)\r\n        sb.append(\"Engine: \").append(getEngine()).append(\",\");\r\n    if (getEngineVersion() != null)\r\n        sb.append(\"EngineVersion: \").append(getEngineVersion()).append(\",\");\r\n    if (getDatabaseName() != null)\r\n        sb.append(\"DatabaseName: \").append(getDatabaseName()).append(\",\");\r\n    if (getStorageEncrypted() != null)\r\n        sb.append(\"StorageEncrypted: \").append(getStorageEncrypted()).append(\",\");\r\n    if (getDeletionProtection() != null)\r\n        sb.append(\"DeletionProtection: \").append(getDeletionProtection()).append(\",\");\r\n    if (getGlobalClusterMembers() != null)\r\n        sb.append(\"GlobalClusterMembers: \").append(getGlobalClusterMembers());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.AmazonRDSClient.createDBClusterEndpoint",
	"Comment": "creates a new custom endpoint and associates it with an amazon aurora db cluster.",
	"Method": "CreateDBClusterEndpointResult createDBClusterEndpoint(CreateDBClusterEndpointRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeCreateDBClusterEndpoint(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.GitConfigForUpdate.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSecretArn() != null)\r\n        sb.append(\"SecretArn: \").append(getSecretArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.AmazonRedshiftClient.getReservedNodeExchangeOfferings",
	"Comment": "returns an array of dc2 reservednodeofferings that matches the payment type, term, and usage price of the givendc1 reserved node.",
	"Method": "GetReservedNodeExchangeOfferingsResult getReservedNodeExchangeOfferings(GetReservedNodeExchangeOfferingsRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeGetReservedNodeExchangeOfferings(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.DescribeCollectionResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFaceCount() != null)\r\n        sb.append(\"FaceCount: \").append(getFaceCount()).append(\",\");\r\n    if (getFaceModelVersion() != null)\r\n        sb.append(\"FaceModelVersion: \").append(getFaceModelVersion()).append(\",\");\r\n    if (getCollectionARN() != null)\r\n        sb.append(\"CollectionARN: \").append(getCollectionARN()).append(\",\");\r\n    if (getCreationTimestamp() != null)\r\n        sb.append(\"CreationTimestamp: \").append(getCreationTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.withKey",
	"Comment": "sets the key under which to store the new object. returns this object,enabling additional method calls to be chained together.",
	"Method": "T withKey(String key){\r\n    setKey(key);\r\n    @SuppressWarnings(\"unchecked\")\r\n    T t = (T) this;\r\n    return t;\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.GetGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53resolver.model.ListResolverEndpointsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getResolverEndpoints() != null)\r\n        sb.append(\"ResolverEndpoints: \").append(getResolverEndpoints());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.UpdateResourceShareRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getResourceShareArn() != null)\r\n        sb.append(\"ResourceShareArn: \").append(getResourceShareArn()).append(\",\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getAllowExternalPrincipals() != null)\r\n        sb.append(\"AllowExternalPrincipals: \").append(getAllowExternalPrincipals()).append(\",\");\r\n    if (getClientToken() != null)\r\n        sb.append(\"ClientToken: \").append(getClientToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CompleteMultipartUploadRequest.withBucketName",
	"Comment": "sets the name of the bucket containing the multipart upload to complete,and returns this updated completemultipartuploadrequest so thatadditional method calls can be chained together.",
	"Method": "CompleteMultipartUploadRequest withBucketName(String bucketName){\r\n    this.bucketName = bucketName;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointsmsvoice.model.DeleteConfigurationSetResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AmazonS3Exception.getErrorResponseXml",
	"Comment": "returns the error xml received in the http response or null if theexception is constructed from the headers.",
	"Method": "String getErrorResponseXml(){\r\n    return errorResponseXml;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsRequest.setRequesterPays",
	"Comment": "used for conducting this operation from a requester pays bucket. ifset the requester is charged for requests from the bucket.if a bucket is enabled for requester pays, then any attempt to upload ordownload an object from it without requester pays enabled will result ina 403 error and the bucket owner will be charged for the request.enabling requester pays disables the ability to have anonymous access tothis bucket.",
	"Method": "void setRequesterPays(boolean isRequesterPays){\r\n    this.isRequesterPays = isRequesterPays;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.GetObjectRequest.setKey",
	"Comment": "sets the key under which the object to be downloaded is stored.",
	"Method": "void setKey(String key){\r\n    s3ObjectIdBuilder.setKey(key);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.inventory.InventoryConfiguration.withEnabled",
	"Comment": "sets the value whether the inventory is enabled or disabledand returns this object for method chaining.the value true indicates the inventory is enabled andfalse indicates the inventory is disabled.",
	"Method": "InventoryConfiguration withEnabled(Boolean enabled){\r\n    setEnabled(enabled);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBClusterRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getDBClusterIdentifier() != null)\r\n        sb.append(\"DBClusterIdentifier: \").append(getDBClusterIdentifier()).append(\",\");\r\n    if (getSkipFinalSnapshot() != null)\r\n        sb.append(\"SkipFinalSnapshot: \").append(getSkipFinalSnapshot()).append(\",\");\r\n    if (getFinalDBSnapshotIdentifier() != null)\r\n        sb.append(\"FinalDBSnapshotIdentifier: \").append(getFinalDBSnapshotIdentifier());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AbstractAmazonRoute53Async.listTrafficPolicyInstancesAsync",
	"Comment": "simplified method form for invoking the listtrafficpolicyinstances operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListTrafficPolicyInstancesResult> listTrafficPolicyInstancesAsync(ListTrafficPolicyInstancesRequest request,java.util.concurrent.Future<ListTrafficPolicyInstancesResult> listTrafficPolicyInstancesAsync,ListTrafficPolicyInstancesRequest request,com.amazonaws.handlers.AsyncHandler<ListTrafficPolicyInstancesRequest, ListTrafficPolicyInstancesResult> asyncHandler,java.util.concurrent.Future<ListTrafficPolicyInstancesResult> listTrafficPolicyInstancesAsync,java.util.concurrent.Future<ListTrafficPolicyInstancesResult> listTrafficPolicyInstancesAsync,com.amazonaws.handlers.AsyncHandler<ListTrafficPolicyInstancesRequest, ListTrafficPolicyInstancesResult> asyncHandler){\r\n    return listTrafficPolicyInstancesAsync(new ListTrafficPolicyInstancesRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.getGeoLocationAsync",
	"Comment": "simplified method form for invoking the getgeolocation operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<GetGeoLocationResult> getGeoLocationAsync(GetGeoLocationRequest request,java.util.concurrent.Future<GetGeoLocationResult> getGeoLocationAsync,GetGeoLocationRequest request,com.amazonaws.handlers.AsyncHandler<GetGeoLocationRequest, GetGeoLocationResult> asyncHandler,java.util.concurrent.Future<GetGeoLocationResult> getGeoLocationAsync,java.util.concurrent.Future<GetGeoLocationResult> getGeoLocationAsync,com.amazonaws.handlers.AsyncHandler<GetGeoLocationRequest, GetGeoLocationResult> asyncHandler){\r\n    return getGeoLocationAsync(new GetGeoLocationRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.DescribeClusterVersionsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMarker() != null)\r\n        sb.append(\"Marker: \").append(getMarker()).append(\",\");\r\n    if (getClusterVersions() != null)\r\n        sb.append(\"ClusterVersions: \").append(getClusterVersions());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rdsdata.AWSRDSDataClientBuilder.build",
	"Comment": "construct a synchronous implementation of awsrdsdata using the current builder configuration.",
	"Method": "AWSRDSData build(AwsSyncClientParams params){\r\n    return new AWSRDSDataClient(params);\r\n}"
}, {
	"Path": "com.amazonaws.services.resourcegroups.model.GetGroupQueryRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getGroupName() != null)\r\n        sb.append(\"GroupName: \").append(getGroupName());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.AmazonS3Client.rejectNull",
	"Comment": "asserts that the specified parameter value is not null and if it is,throws an illegalargumentexception with the specified error message.",
	"Method": "void rejectNull(Object parameterValue,String errorMessage){\r\n    if (parameterValue == null)\r\n        throw new IllegalArgumentException(errorMessage);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DeleteDBParameterGroupResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.ListGroupsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DBSecurityGroup.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOwnerId() != null)\r\n        sb.append(\"OwnerId: \").append(getOwnerId()).append(\",\");\r\n    if (getDBSecurityGroupName() != null)\r\n        sb.append(\"DBSecurityGroupName: \").append(getDBSecurityGroupName()).append(\",\");\r\n    if (getDBSecurityGroupDescription() != null)\r\n        sb.append(\"DBSecurityGroupDescription: \").append(getDBSecurityGroupDescription()).append(\",\");\r\n    if (getVpcId() != null)\r\n        sb.append(\"VpcId: \").append(getVpcId()).append(\",\");\r\n    if (getEC2SecurityGroups() != null)\r\n        sb.append(\"EC2SecurityGroups: \").append(getEC2SecurityGroups()).append(\",\");\r\n    if (getIPRanges() != null)\r\n        sb.append(\"IPRanges: \").append(getIPRanges()).append(\",\");\r\n    if (getDBSecurityGroupArn() != null)\r\n        sb.append(\"DBSecurityGroupArn: \").append(getDBSecurityGroupArn());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.AbstractPutObjectRequest.getSSEAwsKeyManagementParams",
	"Comment": "returns the aws key management system parameters used to encrypt theobject on server side.",
	"Method": "SSEAwsKeyManagementParams getSSEAwsKeyManagementParams(){\r\n    return sseAwsKeyManagementParams;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.SelectObjectContentRequest.setOutputSerialization",
	"Comment": "describes the format of the data that you want amazon s3 to return in response.",
	"Method": "void setOutputSerialization(OutputSerialization outputSerialization){\r\n    this.outputSerialization = outputSerialization;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.EncryptionMaterials.getKeyPair",
	"Comment": "returns the key pair stored in this encryptionmaterials object.",
	"Method": "KeyPair getKeyPair(){\r\n    return this.keyPair;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ContinuousParameterRangeSpecification.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMinValue() != null)\r\n        sb.append(\"MinValue: \").append(getMinValue()).append(\",\");\r\n    if (getMaxValue() != null)\r\n        sb.append(\"MaxValue: \").append(getMaxValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rekognition.model.StartLabelDetectionRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getVideo() != null)\r\n        sb.append(\"Video: \").append(getVideo()).append(\",\");\r\n    if (getClientRequestToken() != null)\r\n        sb.append(\"ClientRequestToken: \").append(getClientRequestToken()).append(\",\");\r\n    if (getMinConfidence() != null)\r\n        sb.append(\"MinConfidence: \").append(getMinConfidence()).append(\",\");\r\n    if (getNotificationChannel() != null)\r\n        sb.append(\"NotificationChannel: \").append(getNotificationChannel()).append(\",\");\r\n    if (getJobTag() != null)\r\n        sb.append(\"JobTag: \").append(getJobTag());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.auth.S3SignerProvider.setSigner",
	"Comment": "this is necessary for s3 since we update the signer during request processing dependent onwhich region the bucket exists in.",
	"Method": "void setSigner(Signer signer){\r\n    this.signer = signer;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeAccountAttributesRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.ContactDetail.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getFirstName() != null)\r\n        sb.append(\"FirstName: \").append(getFirstName()).append(\",\");\r\n    if (getLastName() != null)\r\n        sb.append(\"LastName: \").append(getLastName()).append(\",\");\r\n    if (getContactType() != null)\r\n        sb.append(\"ContactType: \").append(getContactType()).append(\",\");\r\n    if (getOrganizationName() != null)\r\n        sb.append(\"OrganizationName: \").append(getOrganizationName()).append(\",\");\r\n    if (getAddressLine1() != null)\r\n        sb.append(\"AddressLine1: \").append(getAddressLine1()).append(\",\");\r\n    if (getAddressLine2() != null)\r\n        sb.append(\"AddressLine2: \").append(getAddressLine2()).append(\",\");\r\n    if (getCity() != null)\r\n        sb.append(\"City: \").append(getCity()).append(\",\");\r\n    if (getState() != null)\r\n        sb.append(\"State: \").append(getState()).append(\",\");\r\n    if (getCountryCode() != null)\r\n        sb.append(\"CountryCode: \").append(getCountryCode()).append(\",\");\r\n    if (getZipCode() != null)\r\n        sb.append(\"ZipCode: \").append(getZipCode()).append(\",\");\r\n    if (getPhoneNumber() != null)\r\n        sb.append(\"PhoneNumber: \").append(getPhoneNumber()).append(\",\");\r\n    if (getEmail() != null)\r\n        sb.append(\"Email: \").append(getEmail()).append(\",\");\r\n    if (getFax() != null)\r\n        sb.append(\"Fax: \").append(getFax()).append(\",\");\r\n    if (getExtraParams() != null)\r\n        sb.append(\"ExtraParams: \").append(getExtraParams());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.deleteNotebookInstance",
	"Comment": "deletes an amazon sagemaker notebook instance. before you can delete a notebook instance, you must call thestopnotebookinstance api.when you delete a notebook instance, you lose all of your data. amazon sagemaker removes the ml compute instance,and deletes the ml storage volume and the network interface associated with the notebook instance.",
	"Method": "DeleteNotebookInstanceResult deleteNotebookInstance(DeleteNotebookInstanceRequest request){\r\n    request = beforeClientExecution(request);\r\n    return executeDeleteNotebookInstance(request);\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.MetricData.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getMetricName() != null)\r\n        sb.append(\"MetricName: \").append(getMetricName()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue()).append(\",\");\r\n    if (getTimestamp() != null)\r\n        sb.append(\"Timestamp: \").append(getTimestamp());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.crypto.AesGcm.getTagLengthInBits",
	"Comment": "used to explicitly record the tag length in s3 for interoperabilitywith other services.",
	"Method": "int getTagLengthInBits(){\r\n    return 128;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.transfer.TransferManagerBuilder.build",
	"Comment": "construct a transfermanager with the default executorservice.",
	"Method": "TransferManager build(){\r\n    return transferManagerFactory.apply(getParams());\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.waiters.AmazonS3Waiters.objectExists",
	"Comment": "builds a objectexists waiter by using custom parameters waiterparametersand other parameters defined in the waiters specification, and then pollsuntil it determines whether the resource entered the desired state ornot, where polling criteria is bound by either default polling strategyor custom polling strategy.",
	"Method": "Waiter<GetObjectMetadataRequest> objectExists(){\r\n    return new WaiterBuilder<GetObjectMetadataRequest, ObjectMetadata>().withSdkFunction(new HeadObjectFunction(client)).withAcceptors(new HttpSuccessStatusAcceptor<ObjectMetadata>(WaiterState.SUCCESS), new HttpFailureStatusAcceptor<ObjectMetadata>(404, WaiterState.RETRY)).withDefaultPollingStrategy(new PollingStrategy(new MaxAttemptsRetryStrategy(20), new FixedDelayStrategy(5))).withExecutorService(executorService).build();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.internal.RepeatableInputStream.mark",
	"Comment": "this method can only be used while less data has been read from the inputstream than fits into the buffer. the readlimit parameter is ignoredentirely.",
	"Method": "void mark(int readlimit){\r\n    abortIfNeeded();\r\n    if (log.isDebugEnabled()) {\r\n        log.debug(\"Input stream marked at \" + bytesReadPastMark + \" bytes\");\r\n    }\r\n    if (bytesReadPastMark <= bufferSize && buffer != null) {\r\n        byte[] newBuffer = new byte[this.bufferSize];\r\n        System.arraycopy(buffer, bufferOffset, newBuffer, 0, (int) (bytesReadPastMark - bufferOffset));\r\n        this.buffer = newBuffer;\r\n        this.bytesReadPastMark -= bufferOffset;\r\n        this.bufferOffset = 0;\r\n    } else {\r\n        this.bufferOffset = 0;\r\n        this.bytesReadPastMark = 0;\r\n        this.buffer = new byte[this.bufferSize];\r\n    }\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CopyObjectRequest.getDestinationKey",
	"Comment": "gets the destination bucket key under which the new, copiedobject will be stored.",
	"Method": "String getDestinationKey(){\r\n    return destinationKey;\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.DescribeAccountAttributesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAccountQuotas() != null)\r\n        sb.append(\"AccountQuotas: \").append(getAccountQuotas());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.AmazonRoute53AsyncClient.listHealthChecksAsync",
	"Comment": "simplified method form for invoking the listhealthchecks operation with an asynchandler.",
	"Method": "java.util.concurrent.Future<ListHealthChecksResult> listHealthChecksAsync(ListHealthChecksRequest request,java.util.concurrent.Future<ListHealthChecksResult> listHealthChecksAsync,ListHealthChecksRequest request,com.amazonaws.handlers.AsyncHandler<ListHealthChecksRequest, ListHealthChecksResult> asyncHandler,java.util.concurrent.Future<ListHealthChecksResult> listHealthChecksAsync,java.util.concurrent.Future<ListHealthChecksResult> listHealthChecksAsync,com.amazonaws.handlers.AsyncHandler<ListHealthChecksRequest, ListHealthChecksResult> asyncHandler){\r\n    return listHealthChecksAsync(new ListHealthChecksRequest(), asyncHandler);\r\n}"
}, {
	"Path": "com.amazonaws.services.quicksight.model.DescribeUserRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getUserName() != null)\r\n        sb.append(\"UserName: \").append(getUserName()).append(\",\");\r\n    if (getAwsAccountId() != null)\r\n        sb.append(\"AwsAccountId: \").append(getAwsAccountId()).append(\",\");\r\n    if (getNamespace() != null)\r\n        sb.append(\"Namespace: \").append(getNamespace());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.CopyDBParameterGroupRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceDBParameterGroupIdentifier() != null)\r\n        sb.append(\"SourceDBParameterGroupIdentifier: \").append(getSourceDBParameterGroupIdentifier()).append(\",\");\r\n    if (getTargetDBParameterGroupIdentifier() != null)\r\n        sb.append(\"TargetDBParameterGroupIdentifier: \").append(getTargetDBParameterGroupIdentifier()).append(\",\");\r\n    if (getTargetDBParameterGroupDescription() != null)\r\n        sb.append(\"TargetDBParameterGroupDescription: \").append(getTargetDBParameterGroupDescription()).append(\",\");\r\n    if (getTags() != null)\r\n        sb.append(\"Tags: \").append(getTags());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.pinpointemail.model.CreateConfigurationSetEventDestinationRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getConfigurationSetName() != null)\r\n        sb.append(\"ConfigurationSetName: \").append(getConfigurationSetName()).append(\",\");\r\n    if (getEventDestinationName() != null)\r\n        sb.append(\"EventDestinationName: \").append(getEventDestinationName()).append(\",\");\r\n    if (getEventDestination() != null)\r\n        sb.append(\"EventDestination: \").append(getEventDestination());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53domains.model.Tag.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getKey() != null)\r\n        sb.append(\"Key: \").append(getKey()).append(\",\");\r\n    if (getValue() != null)\r\n        sb.append(\"Value: \").append(getValue());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.AmazonSageMakerClient.anonymousInvoke",
	"Comment": "invoke with no authentication. credentials are not required and any credentials set on the client or request willbe ignored for this operation.",
	"Method": "Response<X> anonymousInvoke(Request<Y> request,HttpResponseHandler<AmazonWebServiceResponse<X>> responseHandler,ExecutionContext executionContext){\r\n    return doInvoke(request, responseHandler, executionContext, null, null);\r\n}"
}, {
	"Path": "com.amazonaws.services.rds.model.OptionConfiguration.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getOptionName() != null)\r\n        sb.append(\"OptionName: \").append(getOptionName()).append(\",\");\r\n    if (getPort() != null)\r\n        sb.append(\"Port: \").append(getPort()).append(\",\");\r\n    if (getOptionVersion() != null)\r\n        sb.append(\"OptionVersion: \").append(getOptionVersion()).append(\",\");\r\n    if (getDBSecurityGroupMemberships() != null)\r\n        sb.append(\"DBSecurityGroupMemberships: \").append(getDBSecurityGroupMemberships()).append(\",\");\r\n    if (getVpcSecurityGroupMemberships() != null)\r\n        sb.append(\"VpcSecurityGroupMemberships: \").append(getVpcSecurityGroupMemberships()).append(\",\");\r\n    if (getOptionSettings() != null)\r\n        sb.append(\"OptionSettings: \").append(getOptionSettings());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.ram.model.GetResourcePoliciesResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getPolicies() != null)\r\n        sb.append(\"Policies: \").append(getPolicies()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.S3Object.getBucketName",
	"Comment": "gets the name of the bucket in which this object is contained.",
	"Method": "String getBucketName(){\r\n    return bucketName;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ReplicationDestinationConfig.withBucketARN",
	"Comment": "sets the destination bucket arn for the replication rule. returns theupdated object.",
	"Method": "ReplicationDestinationConfig withBucketARN(String bucketARN){\r\n    setBucketARN(bucketARN);\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.iterable.S3Versions.inBucket",
	"Comment": "constructs an iterable that covers all the object versions in an amazons3 bucket.",
	"Method": "S3Versions inBucket(AmazonS3 s3,String bucketName){\r\n    return new S3Versions(s3, bucketName);\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.CryptoConfiguration.withIgnoreMissingInstructionFile",
	"Comment": "fluent api to set the property to ignore instruction file that cannot befound during a get operation.",
	"Method": "CryptoConfiguration withIgnoreMissingInstructionFile(boolean ignoreMissingInstructionFile,CryptoConfiguration withIgnoreMissingInstructionFile,boolean ignoreMissingInstructionFile){\r\n    this.ignoreMissingInstructionFile = ignoreMissingInstructionFile;\r\n    return this;\r\n}"
}, {
	"Path": "com.amazonaws.services.polly.model.GetLexiconRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(\"***Sensitive Data Redacted***\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.MetricDefinition.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getName() != null)\r\n        sb.append(\"Name: \").append(getName()).append(\",\");\r\n    if (getRegex() != null)\r\n        sb.append(\"Regex: \").append(getRegex());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.robomaker.model.ListFleetsRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken()).append(\",\");\r\n    if (getMaxResults() != null)\r\n        sb.append(\"MaxResults: \").append(getMaxResults()).append(\",\");\r\n    if (getFilters() != null)\r\n        sb.append(\"Filters: \").append(getFilters());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.redshift.model.CopyClusterSnapshotRequest.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getSourceSnapshotIdentifier() != null)\r\n        sb.append(\"SourceSnapshotIdentifier: \").append(getSourceSnapshotIdentifier()).append(\",\");\r\n    if (getSourceSnapshotClusterIdentifier() != null)\r\n        sb.append(\"SourceSnapshotClusterIdentifier: \").append(getSourceSnapshotClusterIdentifier()).append(\",\");\r\n    if (getTargetSnapshotIdentifier() != null)\r\n        sb.append(\"TargetSnapshotIdentifier: \").append(getTargetSnapshotIdentifier()).append(\",\");\r\n    if (getManualSnapshotRetentionPeriod() != null)\r\n        sb.append(\"ManualSnapshotRetentionPeriod: \").append(getManualSnapshotRetentionPeriod());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3control.model.DeletePublicAccessBlockResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.PartListing.setPartNumberMarker",
	"Comment": "sets the optional part number marker specified in the original request tospecify where in the results to begin listing parts.",
	"Method": "void setPartNumberMarker(int partNumberMarker){\r\n    this.partNumberMarker = partNumberMarker;\r\n}"
}, {
	"Path": "com.amazonaws.services.sagemaker.model.ListAlgorithmsResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getAlgorithmSummaryList() != null)\r\n        sb.append(\"AlgorithmSummaryList: \").append(getAlgorithmSummaryList()).append(\",\");\r\n    if (getNextToken() != null)\r\n        sb.append(\"NextToken: \").append(getNextToken());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.route53.model.CreateHostedZoneResult.toString",
	"Comment": "returns a string representation of this object. this is useful for testing and debugging. sensitive data will beredacted from this string using a placeholder value.",
	"Method": "String toString(){\r\n    StringBuilder sb = new StringBuilder();\r\n    sb.append(\"{\");\r\n    if (getHostedZone() != null)\r\n        sb.append(\"HostedZone: \").append(getHostedZone()).append(\",\");\r\n    if (getChangeInfo() != null)\r\n        sb.append(\"ChangeInfo: \").append(getChangeInfo()).append(\",\");\r\n    if (getDelegationSet() != null)\r\n        sb.append(\"DelegationSet: \").append(getDelegationSet()).append(\",\");\r\n    if (getVPC() != null)\r\n        sb.append(\"VPC: \").append(getVPC()).append(\",\");\r\n    if (getLocation() != null)\r\n        sb.append(\"Location: \").append(getLocation());\r\n    sb.append(\"}\");\r\n    return sb.toString();\r\n}"
}, {
	"Path": "com.amazonaws.services.s3.model.ListObjectsV2Request.withStartAfter",
	"Comment": "sets the optional parameter indicating where you want amazon s3 to start the objectlisting from.this can be any key in the bucket.",
	"Method": "ListObjectsV2Request withStartAfter(String startAfter){\r\n    setStartAfter(startAfter);\r\n    return this;\r\n}"
}]